

package pml

import (
	_d "encoding/xml"
	_gc "fmt"
	_de "gitee.com/yu_sheng/gooffice"
	_ad "gitee.com/yu_sheng/gooffice/schema/soo/dml"
	_c "gitee.com/yu_sheng/gooffice/schema/soo/ofc/sharedTypes"
	_dc "strconv"
	_g "time"
)

func NewCT_NotesSlide() *CT_NotesSlide {
	_ceded := &CT_NotesSlide{}
	_ceded.CSld = NewCT_CommonSlideData()
	return _ceded
}
func NewCT_ViewProperties() *CT_ViewProperties { _dcdcd := &CT_ViewProperties{}; return _dcdcd }

// Validate validates the CT_TLAnimateBehavior and its children
func (_aedgc *CT_TLAnimateBehavior) Validate() error {
	return _aedgc.ValidateWithPath("C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072")
}

// Validate validates the SldLayout and its children
func (_fedaf *SldLayout) Validate() error {
	return _fedaf.ValidateWithPath("\u0053l\u0064\u004c\u0061\u0079\u006f\u0075t")
}

// ValidateWithPath validates the CT_GroupShapeChoice and its children, prefixing error messages with path
func (_gfa *CT_GroupShapeChoice) ValidateWithPath(path string) error {
	for _efbad, _fcge := range _gfa.Sp {
		if _fgd := _fcge.ValidateWithPath(_gc.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _efbad)); _fgd != nil {
			return _fgd
		}
	}
	for _gaef, _gcacc := range _gfa.GrpSp {
		if _fabf := _gcacc.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _gaef)); _fabf != nil {
			return _fabf
		}
	}
	for _gafcf, _agae := range _gfa.GraphicFrame {
		if _fagf := _agae.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _gafcf)); _fagf != nil {
			return _fagf
		}
	}
	for _aecda, _gefc := range _gfa.CxnSp {
		if _ddfg := _gefc.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _aecda)); _ddfg != nil {
			return _ddfg
		}
	}
	for _gagb, _abbe := range _gfa.Pic {
		if _gfgff := _abbe.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _gagb)); _gfgff != nil {
			return _gfgff
		}
	}
	for _eaea, _ggec := range _gfa.ContentPart {
		if _fgcgc := _ggec.ValidateWithPath(_gc.Sprintf("\u0025s\u002fC\u006f\u006e\u0074\u0065\u006et\u0050\u0061r\u0074\u005b\u0025\u0064\u005d", path, _eaea)); _fgcgc != nil {
			return _fgcgc
		}
	}
	return nil
}
func NewCT_CustomShowId() *CT_CustomShowId { _fgg := &CT_CustomShowId{}; return _fgg }

type CT_TimeNodeList struct {

	// Parallel Time Node
	Par []*CT_TLTimeNodeParallel

	// Sequence Time Node
	Seq []*CT_TLTimeNodeSequence

	// Exclusive
	Excl []*CT_TLTimeNodeExclusive

	// Animate
	Anim []*CT_TLAnimateBehavior

	// Animate Color Behavior
	AnimClr []*CT_TLAnimateColorBehavior

	// Animate Effect
	AnimEffect []*CT_TLAnimateEffectBehavior

	// Animate Motion
	AnimMotion []*CT_TLAnimateMotionBehavior

	// Animate Rotation
	AnimRot []*CT_TLAnimateRotationBehavior

	// Animate Scale
	AnimScale []*CT_TLAnimateScaleBehavior

	// Command
	Cmd []*CT_TLCommandBehavior

	// Set Time Node Behavior
	Set []*CT_TLSetBehavior

	// Audio
	Audio []*CT_TLMediaNodeAudio

	// Video
	Video []*CT_TLMediaNodeVideo
}

func (_adfd *CT_Empty) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ebdb, _beg := d.Token()
		if _beg != nil {
			return _gc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073", _beg)
		}
		if _ggbf, _ggba := _ebdb.(_d.EndElement); _ggba && _ggbf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TLIterateIntervalTime() *CT_TLIterateIntervalTime {
	_efbab := &CT_TLIterateIntervalTime{}
	return _efbab
}
func NewViewPr() *ViewPr {
	_cdfcf := &ViewPr{}
	_cdfcf.CT_ViewProperties = *NewCT_ViewProperties()
	return _cdfcf
}
func (_dgaea *CT_ShowInfoBrowse) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gcfb := range start.Attr {
		if _gcfb.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072" {
			_agaf, _afdbb := _dc.ParseBool(_gcfb.Value)
			if _afdbb != nil {
				return _afdbb
			}
			_dgaea.ShowScrollbarAttr = &_agaf
			continue
		}
	}
	for {
		_debf, _gcbe := d.Token()
		if _gcbe != nil {
			return _gc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042\u0072\u006f\u0077\u0073\u0065: \u0025\u0073", _gcbe)
		}
		if _beda, _bcfac := _debf.(_d.EndElement); _bcfac && _beda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLTimeConditionList and its children, prefixing error messages with path
func (_fadg *CT_TLTimeConditionList) ValidateWithPath(path string) error {
	for _fcdcc, _gada := range _fadg.Cond {
		if _cfdb := _gada.ValidateWithPath(_gc.Sprintf("%\u0073\u002f\u0043\u006f\u006e\u0064\u005b\u0025\u0064\u005d", path, _fcdcc)); _cfdb != nil {
			return _cfdb
		}
	}
	return nil
}

// Validate validates the CT_TLOleBuildChart and its children
func (_fedb *CT_TLOleBuildChart) Validate() error {
	return _fedb.ValidateWithPath("\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074")
}

type CT_TLTimeNodeParallel struct {

	// Parallel TimeNode
	CTn *CT_TLCommonTimeNodeData
}

func (_bafc *CT_Empty) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Picture and its children, prefixing error messages with path
func (_cdbed *CT_Picture) ValidateWithPath(path string) error {
	if _cageg := _cdbed.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _cageg != nil {
		return _cageg
	}
	if _ddbe := _cdbed.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ddbe != nil {
		return _ddbe
	}
	if _ggbg := _cdbed.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ggbg != nil {
		return _ggbg
	}
	if _cdbed.Style != nil {
		if _geac := _cdbed.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _geac != nil {
			return _geac
		}
	}
	if _cdbed.ExtLst != nil {
		if _cafd := _cdbed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cafd != nil {
			return _cafd
		}
	}
	return nil
}
func (_bdfbb *CT_PictureNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdfbb.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_bdfbb.CNvPicPr = _ad.NewCT_NonVisualPictureProperties()
	_bdfbb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_cgbaa:
	for {
		_ggbb, _dbcf := d.Token()
		if _dbcf != nil {
			return _dbcf
		}
		switch _fged := _ggbb.(type) {
		case _d.StartElement:
			switch _fged.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cgaff := d.DecodeElement(_bdfbb.CNvPr, &_fged); _cgaff != nil {
					return _cgaff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _dgecd := d.DecodeElement(_bdfbb.CNvPicPr, &_fged); _dgecd != nil {
					return _dgecd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _eedc := d.DecodeElement(_bdfbb.NvPr, &_fged); _eedc != nil {
					return _eedc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065No\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _fged.Name)
				if _eaeda := d.Skip(); _eaeda != nil {
					return _eaeda
				}
			}
		case _d.EndElement:
			break _cgbaa
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateMotionBehavior and its children
func (_ceeaa *CT_TLAnimateMotionBehavior) Validate() error {
	return _ceeaa.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}
func (_fdag *CT_TLAnimVariantIntegerVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _fdag.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fggdf *CT_NotesTextViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bdbc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_fggdf.CViewPr, _bdbc)
	if _fggdf.ExtLst != nil {
		_cdead := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fggdf.ExtLst, _cdead)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbgbg *CT_TransitionStartSoundAction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbgbg.Snd = _ad.NewCT_EmbeddedWAVAudioFile()
	for _, _eaef := range start.Attr {
		if _eaef.Name.Local == "\u006c\u006f\u006f\u0070" {
			_eeeae, _ccefd := _dc.ParseBool(_eaef.Value)
			if _ccefd != nil {
				return _ccefd
			}
			_bbgbg.LoopAttr = &_eeeae
			continue
		}
	}
_gdbcdd:
	for {
		_gdgfa, _dbgbef := d.Token()
		if _dbgbef != nil {
			return _dbgbef
		}
		switch _cedfc := _gdgfa.(type) {
		case _d.StartElement:
			switch _cedfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				if _cbddd := d.DecodeElement(_bbgbg.Snd, &_cedfc); _cbddd != nil {
					return _cbddd
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074a\u0072\u0074\u0053\u006f\u0075\u006ed\u0041\u0063t\u0069\u006fn\u0020%\u0076", _cedfc.Name)
				if _dedga := d.Skip(); _dedga != nil {
					return _dedga
				}
			}
		case _d.EndElement:
			break _gdbcdd
		case _d.CharData:
		}
	}
	return nil
}

type ST_TLNextActionType byte
type CT_TLBehaviorAttributeNameList struct {

	// Attribute Name
	AttrName []string
}

// Validate validates the AG_Ole and its children
func (_bf *AG_Ole) Validate() error {
	return _bf.ValidateWithPath("\u0041\u0047\u005f\u004f\u006c\u0065")
}
func NewCT_CommonViewProperties() *CT_CommonViewProperties {
	_acd := &CT_CommonViewProperties{}
	_acd.Scale = _ad.NewCT_Scale2D()
	_acd.Origin = _ad.NewCT_Point2D()
	return _acd
}
func (_fdge *CT_CustomerData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _fdge.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Picture() *CT_Picture {
	_cafff := &CT_Picture{}
	_cafff.NvPicPr = NewCT_PictureNonVisual()
	_cafff.BlipFill = _ad.NewCT_BlipFillProperties()
	_cafff.SpPr = _ad.NewCT_ShapeProperties()
	return _cafff
}

// ValidateWithPath validates the CT_NotesSlide and its children, prefixing error messages with path
func (_bcgb *CT_NotesSlide) ValidateWithPath(path string) error {
	if _ccee := _bcgb.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _ccee != nil {
		return _ccee
	}
	if _bcgb.ClrMapOvr != nil {
		if _fgfa := _bcgb.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _fgfa != nil {
			return _fgfa
		}
	}
	if _bcgb.ExtLst != nil {
		if _beae := _bcgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beae != nil {
			return _beae
		}
	}
	return nil
}
func (_acafb ST_TLAnimateBehaviorValueType) ValidateWithPath(path string) error {
	switch _acafb {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acafb))
	}
	return nil
}
func (_cgddc ST_TLChartSubelementType) Validate() error { return _cgddc.ValidateWithPath("") }

type CT_CustomShow struct {

	// Custom Show Name
	NameAttr string

	// Custom Show ID
	IdAttr uint32

	// List of Presentation Slides
	SldLst *CT_SlideRelationshipList
	ExtLst *CT_ExtensionList
}

func NewCT_TLTimeConditionList() *CT_TLTimeConditionList {
	_cdeab := &CT_TLTimeConditionList{}
	return _cdeab
}

type ST_SlideSizeType byte
type CT_TransitionStartSoundAction struct {

	// Loop Sound
	LoopAttr *bool

	// Sound
	Snd *_ad.CT_EmbeddedWAVAudioFile
}

func NewCT_ShowInfoKiosk() *CT_ShowInfoKiosk { _cgge := &CT_ShowInfoKiosk{}; return _cgge }
func NewCT_OutlineViewSlideList() *CT_OutlineViewSlideList {
	_gbfdg := &CT_OutlineViewSlideList{}
	return _gbfdg
}
func NewCT_TLIterateData() *CT_TLIterateData { _edbf := &CT_TLIterateData{}; return _edbf }
func (_afgb ST_TLTimeAnimateValueTime) String() string {
	if _afgb.ST_PositiveFixedPercentage != nil {
		return _afgb.ST_PositiveFixedPercentage.String()
	}
	if _afgb.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _afgb.ST_TLTimeIndefinite.String()
	}
	return ""
}
func (_fdgdc ST_TLTimeNodeFillType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ebcacd := _d.Attr{}
	_ebcacd.Name = name
	switch _fdgdc {
	case ST_TLTimeNodeFillTypeUnset:
		_ebcacd.Value = ""
	case ST_TLTimeNodeFillTypeRemove:
		_ebcacd.Value = "\u0072\u0065\u006d\u006f\u0076\u0065"
	case ST_TLTimeNodeFillTypeFreeze:
		_ebcacd.Value = "\u0066\u0072\u0065\u0065\u007a\u0065"
	case ST_TLTimeNodeFillTypeHold:
		_ebcacd.Value = "\u0068\u006f\u006c\u0064"
	case ST_TLTimeNodeFillTypeTransition:
		_ebcacd.Value = "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return _ebcacd, nil
}
func NewCT_TLGraphicalObjectBuild() *CT_TLGraphicalObjectBuild {
	_fffb := &CT_TLGraphicalObjectBuild{}
	return _fffb
}

// Validate validates the CT_CornerDirectionTransition and its children
func (_fdc *CT_CornerDirectionTransition) Validate() error {
	return _fdc.ValidateWithPath("\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e")
}

// ValidateWithPath validates the CT_TLAnimateColorBehavior and its children, prefixing error messages with path
func (_gcfa *CT_TLAnimateColorBehavior) ValidateWithPath(path string) error {
	if _agfbg := _gcfa.ClrSpcAttr.ValidateWithPath(path + "/\u0043\u006c\u0072\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _agfbg != nil {
		return _agfbg
	}
	if _dfcac := _gcfa.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _dfcac != nil {
		return _dfcac
	}
	if _bcgge := _gcfa.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _bcgge != nil {
		return _bcgge
	}
	if _gcfa.By != nil {
		if _agcfd := _gcfa.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _agcfd != nil {
			return _agcfd
		}
	}
	if _gcfa.From != nil {
		if _cbgcg := _gcfa.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _cbgcg != nil {
			return _cbgcg
		}
	}
	if _gcfa.To != nil {
		if _feag := _gcfa.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _feag != nil {
			return _feag
		}
	}
	return nil
}
func (_cafcb *CT_ShowProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cafcb.LoopAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cafcb.LoopAttr))})
	}
	if _cafcb.ShowNarrationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cafcb.ShowNarrationAttr))})
	}
	if _cafcb.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cafcb.ShowAnimationAttr))})
	}
	if _cafcb.UseTimingsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cafcb.UseTimingsAttr))})
	}
	e.EncodeToken(start)
	if _cafcb.Present != nil {
		_ggca := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_cafcb.Present, _ggca)
	}
	if _cafcb.Browse != nil {
		_cdba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_cafcb.Browse, _cdba)
	}
	if _cafcb.Kiosk != nil {
		_adab := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_cafcb.Kiosk, _adab)
	}
	if _cafcb.SldAll != nil {
		_edbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_cafcb.SldAll, _edbg)
	}
	if _cafcb.SldRg != nil {
		_edefa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_cafcb.SldRg, _edefa)
	}
	if _cafcb.CustShow != nil {
		_geeff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_cafcb.CustShow, _geeff)
	}
	if _cafcb.PenClr != nil {
		_baed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0065\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_cafcb.PenClr, _baed)
	}
	if _cafcb.ExtLst != nil {
		_dgcc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cafcb.ExtLst, _dgcc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egcgd ST_TLAnimateColorSpace) String() string {
	switch _egcgd {
	case 0:
		return ""
	case 1:
		return "\u0072\u0067\u0062"
	case 2:
		return "\u0068\u0073\u006c"
	}
	return ""
}

// Validate validates the CT_Empty and its children
func (_ceeg *CT_Empty) Validate() error {
	return _ceeg.ValidateWithPath("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079")
}
func (_ecadg *ST_IterateType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecadg = 0
	case "\u0065\u006c":
		*_ecadg = 1
	case "\u0077\u0064":
		*_ecadg = 2
	case "\u006c\u0074":
		*_ecadg = 3
	}
	return nil
}

// ValidateWithPath validates the CT_CommentAuthorList and its children, prefixing error messages with path
func (_dacc *CT_CommentAuthorList) ValidateWithPath(path string) error {
	for _ffc, _aec := range _dacc.CmAuthor {
		if _dcgdg := _aec.ValidateWithPath(_gc.Sprintf("\u0025s\u002fC\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u005b\u0025\u0064\u005d", path, _ffc)); _dcgdg != nil {
			return _dcgdg
		}
	}
	return nil
}
func (_ebag *CT_GroupShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebag.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_ebag.GrpSpPr = _ad.NewCT_GroupShapeProperties()
_ggab:
	for {
		_bfa, _gffe := d.Token()
		if _gffe != nil {
			return _gffe
		}
		switch _dagad := _bfa.(type) {
		case _d.StartElement:
			switch _dagad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _bfag := d.DecodeElement(_ebag.NvGrpSpPr, &_dagad); _bfag != nil {
					return _bfag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _fcag := d.DecodeElement(_ebag.GrpSpPr, &_dagad); _fcag != nil {
					return _fcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_dcaa := NewCT_GroupShapeChoice()
				if _fgcba := d.DecodeElement(&_dcaa.Sp, &_dagad); _fgcba != nil {
					return _fgcba
				}
				_ebag.Choice = append(_ebag.Choice, _dcaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_ccgg := NewCT_GroupShapeChoice()
				if _caee := d.DecodeElement(&_ccgg.GrpSp, &_dagad); _caee != nil {
					return _caee
				}
				_ebag.Choice = append(_ebag.Choice, _ccgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_cbfe := NewCT_GroupShapeChoice()
				if _feda := d.DecodeElement(&_cbfe.GraphicFrame, &_dagad); _feda != nil {
					return _feda
				}
				_ebag.Choice = append(_ebag.Choice, _cbfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_ggdd := NewCT_GroupShapeChoice()
				if _aaddg := d.DecodeElement(&_ggdd.CxnSp, &_dagad); _aaddg != nil {
					return _aaddg
				}
				_ebag.Choice = append(_ebag.Choice, _ggdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_cedb := NewCT_GroupShapeChoice()
				if _ddgg := d.DecodeElement(&_cedb.Pic, &_dagad); _ddgg != nil {
					return _ddgg
				}
				_ebag.Choice = append(_ebag.Choice, _cedb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_dfba := NewCT_GroupShapeChoice()
				if _cdf := d.DecodeElement(&_dfba.ContentPart, &_dagad); _cdf != nil {
					return _cdf
				}
				_ebag.Choice = append(_ebag.Choice, _dfba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebag.ExtLst = NewCT_ExtensionListModify()
				if _eadg := d.DecodeElement(_ebag.ExtLst, &_dagad); _eadg != nil {
					return _eadg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065 \u0025\u0076", _dagad.Name)
				if _eefe := d.Skip(); _eefe != nil {
					return _eefe
				}
			}
		case _d.EndElement:
			break _ggab
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Extension() *CT_Extension { _geddd := &CT_Extension{}; return _geddd }

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_cfafd *CT_ExtensionList) ValidateWithPath(path string) error {
	for _gega, _gec := range _cfafd.Ext {
		if _ggf := _gec.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _gega)); _ggf != nil {
			return _ggf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PhotoAlbum and its children, prefixing error messages with path
func (_afbe *CT_PhotoAlbum) ValidateWithPath(path string) error {
	if _bdae := _afbe.LayoutAttr.ValidateWithPath(path + "/\u004c\u0061\u0079\u006f\u0075\u0074\u0041\u0074\u0074\u0072"); _bdae != nil {
		return _bdae
	}
	if _gdcbf := _afbe.FrameAttr.ValidateWithPath(path + "\u002f\u0046\u0072\u0061\u006d\u0065\u0041\u0074\u0074\u0072"); _gdcbf != nil {
		return _gdcbf
	}
	if _afbe.ExtLst != nil {
		if _gdbe := _afbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbe != nil {
			return _gdbe
		}
	}
	return nil
}

// Validate validates the EG_SlideListChoice and its children
func (_egeef *EG_SlideListChoice) Validate() error {
	return _egeef.ValidateWithPath("\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065")
}

type CT_HandoutMaster struct {

	// Common slide data for handout master
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_ad.CT_ColorMapping

	// Header/Footer information for a handout master
	Hf     *CT_HeaderFooter
	ExtLst *CT_ExtensionListModify
}

func (_faaga *ST_SlideSizeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eeebf, _abgfe := d.Token()
	if _abgfe != nil {
		return _abgfe
	}
	if _fecc, _gcbff := _eeebf.(_d.EndElement); _gcbff && _fecc.Name == start.Name {
		*_faaga = 1
		return nil
	}
	if _fagfc, _dedab := _eeebf.(_d.CharData); !_dedab {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeebf)
	} else {
		switch string(_fagfc) {
		case "":
			*_faaga = 0
		case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
			*_faaga = 1
		case "\u006c\u0065\u0074\u0074\u0065\u0072":
			*_faaga = 2
		case "\u0041\u0034":
			*_faaga = 3
		case "\u0033\u0035\u006d\u006d":
			*_faaga = 4
		case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
			*_faaga = 5
		case "\u0062\u0061\u006e\u006e\u0065\u0072":
			*_faaga = 6
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_faaga = 7
		case "\u006c\u0065\u0064\u0067\u0065\u0072":
			*_faaga = 8
		case "\u0041\u0033":
			*_faaga = 9
		case "\u0042\u0034\u0049S\u004f":
			*_faaga = 10
		case "\u0042\u0035\u0049S\u004f":
			*_faaga = 11
		case "\u0042\u0034\u004aI\u0053":
			*_faaga = 12
		case "\u0042\u0035\u004aI\u0053":
			*_faaga = 13
		case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
			*_faaga = 14
		case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
			*_faaga = 15
		case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
			*_faaga = 16
		}
	}
	_eeebf, _abgfe = d.Token()
	if _abgfe != nil {
		return _abgfe
	}
	if _acced, _acbbb := _eeebf.(_d.EndElement); _acbbb && _acced.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeebf)
}

type CT_CommentList struct {

	// Comment
	Cm []*CT_Comment
}

// ValidateWithPath validates the CT_HtmlPublishProperties and its children, prefixing error messages with path
func (_gfcfa *CT_HtmlPublishProperties) ValidateWithPath(path string) error {
	if _gfcfa.SldAll != nil {
		if _dcfd := _gfcfa.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _dcfd != nil {
			return _dcfd
		}
	}
	if _gfcfa.SldRg != nil {
		if _bffc := _gfcfa.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _bffc != nil {
			return _bffc
		}
	}
	if _gfcfa.CustShow != nil {
		if _aggc := _gfcfa.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _aggc != nil {
			return _aggc
		}
	}
	if _gfcfa.ExtLst != nil {
		if _gdece := _gfcfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdece != nil {
			return _gdece
		}
	}
	return nil
}

type CT_Connector struct {

	// Non-Visual Properties for a Connection Shape
	NvCxnSpPr *CT_ConnectorNonVisual

	// Shape Properties
	SpPr *_ad.CT_ShapeProperties

	// Connector Shape Style
	Style  *_ad.CT_ShapeStyle
	ExtLst *CT_ExtensionListModify
}

// Validate validates the SldMaster and its children
func (_adae *SldMaster) Validate() error {
	return _adae.ValidateWithPath("\u0053l\u0064\u004d\u0061\u0073\u0074\u0065r")
}

// Validate validates the CT_SlideTransitionChoice and its children
func (_eggb *CT_SlideTransitionChoice) Validate() error {
	return _eggb.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073i\u0074\u0069\u006f\u006e\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_SlideLayout() *CT_SlideLayout {
	_gdccc := &CT_SlideLayout{}
	_gdccc.CSld = NewCT_CommonSlideData()
	return _gdccc
}
func NewCT_TLTimeCondition() *CT_TLTimeCondition { _fbee := &CT_TLTimeCondition{}; return _fbee }

// ValidateWithPath validates the CT_CommentAuthor and its children, prefixing error messages with path
func (_gac *CT_CommentAuthor) ValidateWithPath(path string) error {
	if _gac.ExtLst != nil {
		if _bfgg := _gac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfgg != nil {
			return _bfgg
		}
	}
	return nil
}

const (
	ST_TLTimeNodeRestartTypeUnset         ST_TLTimeNodeRestartType = 0
	ST_TLTimeNodeRestartTypeAlways        ST_TLTimeNodeRestartType = 1
	ST_TLTimeNodeRestartTypeWhenNotActive ST_TLTimeNodeRestartType = 2
	ST_TLTimeNodeRestartTypeNever         ST_TLTimeNodeRestartType = 3
)

func (_bbeff ST_WebScreenSize) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bddac := _d.Attr{}
	_bddac.Name = name
	switch _bbeff {
	case ST_WebScreenSizeUnset:
		_bddac.Value = ""
	case ST_WebScreenSize544x376:
		_bddac.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_WebScreenSize640x480:
		_bddac.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_WebScreenSize720x512:
		_bddac.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_WebScreenSize800x600:
		_bddac.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_WebScreenSize1024x768:
		_bddac.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_WebScreenSize1152x882:
		_bddac.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_WebScreenSize1152x900:
		_bddac.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_WebScreenSize1280x1024:
		_bddac.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_WebScreenSize1600x1200:
		_bddac.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_WebScreenSize1800x1400:
		_bddac.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case ST_WebScreenSize1920x1200:
		_bddac.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _bddac, nil
}

// ValidateWithPath validates the CT_CustomShowId and its children, prefixing error messages with path
func (_aabf *CT_CustomShowId) ValidateWithPath(path string) error { return nil }
func (_efbcc *CT_ExtensionListModify) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efbcc.ModAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u006f\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_efbcc.ModAttr))})
	}
	e.EncodeToken(start)
	if _efbcc.Ext != nil {
		_ecgb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _gce := range _efbcc.Ext {
			e.EncodeElement(_gce, _ecgb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcbd *CT_GraphicalObjectFrame) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcbd.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_bcbd.Xfrm = _ad.NewCT_Transform2D()
	_bcbd.Graphic = _ad.NewGraphic()
	for _, _bcab := range start.Attr {
		if _bcab.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_bcbd.BwModeAttr.UnmarshalXMLAttr(_bcab)
			continue
		}
	}
_eeeg:
	for {
		_adebg, _fded := d.Token()
		if _fded != nil {
			return _fded
		}
		switch _caag := _adebg.(type) {
		case _d.StartElement:
			switch _caag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _ddbb := d.DecodeElement(_bcbd.NvGraphicFramePr, &_caag); _ddbb != nil {
					return _ddbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _eagf := d.DecodeElement(_bcbd.Xfrm, &_caag); _eagf != nil {
					return _eagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _daa := d.DecodeElement(_bcbd.Graphic, &_caag); _daa != nil {
					return _daa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcbd.ExtLst = NewCT_ExtensionListModify()
				if _abcg := d.DecodeElement(_bcbd.ExtLst, &_caag); _abcg != nil {
					return _abcg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006cO\u0062\u006a\u0065\u0063\u0074\u0046r\u0061\u006d\u0065 \u0025\u0076", _caag.Name)
				if _fgcb := d.Skip(); _fgcb != nil {
					return _fgcb
				}
			}
		case _d.EndElement:
			break _eeeg
		case _d.CharData:
		}
	}
	return nil
}
func (_acg *CT_CommonSlideViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_acg.CViewPr = NewCT_CommonViewProperties()
	for _, _bcea := range start.Attr {
		if _bcea.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064" {
			_eag, _afba := _dc.ParseBool(_bcea.Value)
			if _afba != nil {
				return _afba
			}
			_acg.SnapToGridAttr = &_eag
			continue
		}
		if _bcea.Name.Local == "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dgef, _fcba := _dc.ParseBool(_bcea.Value)
			if _fcba != nil {
				return _fcba
			}
			_acg.SnapToObjectsAttr = &_dgef
			continue
		}
		if _bcea.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073" {
			_acf, _ade := _dc.ParseBool(_bcea.Value)
			if _ade != nil {
				return _ade
			}
			_acg.ShowGuidesAttr = &_acf
			continue
		}
	}
_dff:
	for {
		_fddf, _eeb := d.Token()
		if _eeb != nil {
			return _eeb
		}
		switch _fag := _fddf.(type) {
		case _d.StartElement:
			switch _fag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _bfcb := d.DecodeElement(_acg.CViewPr, &_fag); _bfcb != nil {
					return _bfcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}:
				_acg.GuideLst = NewCT_GuideList()
				if _fed := d.DecodeElement(_acg.GuideLst, &_fag); _fed != nil {
					return _fed
				}
			default:
				_de.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _fag.Name)
				if _bbd := d.Skip(); _bbd != nil {
					return _bbd
				}
			}
		case _d.EndElement:
			break _dff
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideRelationshipList and its children
func (_bceb *CT_SlideRelationshipList) Validate() error {
	return _bceb.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074")
}
func NewCmAuthorLst() *CmAuthorLst {
	_ecfbg := &CmAuthorLst{}
	_ecfbg.CT_CommentAuthorList = *NewCT_CommentAuthorList()
	return _ecfbg
}

// Validate validates the CT_PhotoAlbum and its children
func (_abdd *CT_PhotoAlbum) Validate() error {
	return _abdd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d")
}
func (_fagafa ST_TLCommandType) String() string {
	switch _fagafa {
	case 0:
		return ""
	case 1:
		return "\u0065\u0076\u0074"
	case 2:
		return "\u0063\u0061\u006c\u006c"
	case 3:
		return "\u0076\u0065\u0072\u0062"
	}
	return ""
}
func (_ecgfe ST_TLBehaviorOverrideType) Validate() error { return _ecgfe.ValidateWithPath("") }
func (_eccc *Sld) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eccc.CT_Slide = *NewCT_Slide()
	for _, _egacbf := range start.Attr {
		if _egacbf.Name.Local == "\u0073\u0068\u006f\u0077" {
			_dfbdc, _abce := _dc.ParseBool(_egacbf.Value)
			if _abce != nil {
				return _abce
			}
			_eccc.ShowAttr = &_dfbdc
			continue
		}
		if _egacbf.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_agedg, _bagbf := _dc.ParseBool(_egacbf.Value)
			if _bagbf != nil {
				return _bagbf
			}
			_eccc.ShowMasterSpAttr = &_agedg
			continue
		}
		if _egacbf.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_aedbb, _bffgd := _dc.ParseBool(_egacbf.Value)
			if _bffgd != nil {
				return _bffgd
			}
			_eccc.ShowMasterPhAnimAttr = &_aedbb
			continue
		}
	}
_bgcdg:
	for {
		_gbdc, _aagae := d.Token()
		if _aagae != nil {
			return _aagae
		}
		switch _ccede := _gbdc.(type) {
		case _d.StartElement:
			switch _ccede.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _abddg := d.DecodeElement(_eccc.CSld, &_ccede); _abddg != nil {
					return _abddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_eccc.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _aceb := d.DecodeElement(_eccc.ClrMapOvr, &_ccede); _aceb != nil {
					return _aceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_eccc.Transition = NewCT_SlideTransition()
				if _afee := d.DecodeElement(_eccc.Transition, &_ccede); _afee != nil {
					return _afee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_eccc.Timing = NewCT_SlideTiming()
				if _ffddg := d.DecodeElement(_eccc.Timing, &_ccede); _ffddg != nil {
					return _ffddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eccc.ExtLst = NewCT_ExtensionListModify()
				if _fccg := d.DecodeElement(_eccc.ExtLst, &_ccede); _fccg != nil {
					return _fccg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053l\u0064\u0020\u0025\u0076", _ccede.Name)
				if _efbde := d.Skip(); _efbde != nil {
					return _efbde
				}
			}
		case _d.EndElement:
			break _bgcdg
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_PositivePercentage(s string) (_ad.ST_PositivePercentage, error) {
	return _ad.ParseUnionST_PositivePercentage(s)
}

// Validate validates the CT_TLAnimVariantStringVal and its children
func (_gfaf *CT_TLAnimVariantStringVal) Validate() error {
	return _gfaf.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l")
}

type CT_SplitTransition struct {

	// Orientation
	OrientAttr ST_Direction

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

func (_dg *AG_ChildSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _b := range start.Attr {
		if _b.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gdc, _ce := _dc.ParseBool(_b.Value)
			if _ce != nil {
				return _ce
			}
			_dg.ShowMasterSpAttr = &_gdc
			continue
		}
		if _b.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_e, _cc := _dc.ParseBool(_b.Value)
			if _cc != nil {
				return _cc
			}
			_dg.ShowMasterPhAnimAttr = &_e
			continue
		}
	}
	for {
		_aa, _cd := d.Token()
		if _cd != nil {
			return _gc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0043h\u0069l\u0064S\u006c\u0069\u0064\u0065\u003a\u0020\u0025s", _cd)
		}
		if _fd, _ff := _aa.(_d.EndElement); _ff && _fd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcdfa *CT_TLAnimateRotationBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fcdfa.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _gc.Sprintf("\u0025\u0076", *_fcdfa.ByAttr)})
	}
	if _fcdfa.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_fcdfa.FromAttr)})
	}
	if _fcdfa.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _gc.Sprintf("\u0025\u0076", *_fcdfa.ToAttr)})
	}
	e.EncodeToken(start)
	_baff := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_fcdfa.CBhvr, _baff)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eafb *SldSyncPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eafb.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	for _, _bebgd := range start.Attr {
		if _bebgd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_gggfb, _dcbbg := _bebgd.Value, error(nil)
			if _dcbbg != nil {
				return _dcbbg
			}
			_eafb.ServerSldIdAttr = _gggfb
			continue
		}
		if _bebgd.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_cdad, _ebaea := ParseStdlibTime(_bebgd.Value)
			if _ebaea != nil {
				return _ebaea
			}
			_eafb.ServerSldModifiedTimeAttr = _cdad
			continue
		}
		if _bebgd.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_deceb, _ccebd := ParseStdlibTime(_bebgd.Value)
			if _ccebd != nil {
				return _ccebd
			}
			_eafb.ClientInsertedTimeAttr = _deceb
			continue
		}
	}
_gcdbc:
	for {
		_bgcfe, _dcdcc := d.Token()
		if _dcdcc != nil {
			return _dcdcc
		}
		switch _cbeddb := _bgcfe.(type) {
		case _d.StartElement:
			switch _cbeddb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eafb.ExtLst = NewCT_ExtensionList()
				if _fcceg := d.DecodeElement(_eafb.ExtLst, &_cbeddb); _fcceg != nil {
					return _fcceg
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u0053\u0079\u006ec\u0050\u0072 \u0025\u0076", _cbeddb.Name)
				if _bbdff := d.Skip(); _bbdff != nil {
					return _bbdff
				}
			}
		case _d.EndElement:
			break _gcdbc
		case _d.CharData:
		}
	}
	return nil
}
func (_ffade *CT_TLTriggerRuntimeNode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_aaecc, _fdgba := _ffade.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _fdgba != nil {
		return _fdgba
	}
	start.Attr = append(start.Attr, _aaecc)
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLBehaviorAttributeNameList() *CT_TLBehaviorAttributeNameList {
	_edcae := &CT_TLBehaviorAttributeNameList{}
	return _edcae
}

type CT_TLTriggerRuntimeNode struct {

	// Value
	ValAttr ST_TLTriggerRuntimeNode
}

func (_abdad ST_SlideSizeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_abdad.String(), start)
}
func (_aebfc ST_WebColorType) String() string {
	switch _aebfc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case 3:
		return "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 4:
		return "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case 5:
		return "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case 6:
		return "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return ""
}
func (_cbddeg ST_TLCommandType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ggegeg := _d.Attr{}
	_ggegeg.Name = name
	switch _cbddeg {
	case ST_TLCommandTypeUnset:
		_ggegeg.Value = ""
	case ST_TLCommandTypeEvt:
		_ggegeg.Value = "\u0065\u0076\u0074"
	case ST_TLCommandTypeCall:
		_ggegeg.Value = "\u0063\u0061\u006c\u006c"
	case ST_TLCommandTypeVerb:
		_ggegeg.Value = "\u0076\u0065\u0072\u0062"
	}
	return _ggegeg, nil
}

// Validate validates the CT_TLAnimVariantFloatVal and its children
func (_cacaa *CT_TLAnimVariantFloatVal) Validate() error {
	return _cacaa.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c")
}
func (_ccggc *CT_OleObjectLink) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdef := range start.Attr {
		if _cdef.Name.Local == "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063" {
			_gafa, _ddagb := _dc.ParseBool(_cdef.Value)
			if _ddagb != nil {
				return _ddagb
			}
			_ccggc.UpdateAutomaticAttr = &_gafa
			continue
		}
	}
_fgdb:
	for {
		_eeee, _gbga := d.Token()
		if _gbga != nil {
			return _gbga
		}
		switch _fedac := _eeee.(type) {
		case _d.StartElement:
			switch _fedac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccggc.ExtLst = NewCT_ExtensionList()
				if _deead := d.DecodeElement(_ccggc.ExtLst, &_fedac); _deead != nil {
					return _deead
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b\u0020\u0025v", _fedac.Name)
				if _adfe := d.Skip(); _adfe != nil {
					return _adfe
				}
			}
		case _d.EndElement:
			break _fgdb
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TransitionInOutDirectionTypeUnset ST_TransitionInOutDirectionType = 0
	ST_TransitionInOutDirectionTypeOut   ST_TransitionInOutDirectionType = 1
	ST_TransitionInOutDirectionTypeIn    ST_TransitionInOutDirectionType = 2
)

func (_cdfeg ST_TransitionSpeed) Validate() error { return _cdfeg.ValidateWithPath("") }

// ValidateWithPath validates the CT_NormalViewProperties and its children, prefixing error messages with path
func (_abda *CT_NormalViewProperties) ValidateWithPath(path string) error {
	if _ecde := _abda.VertBarStateAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _ecde != nil {
		return _ecde
	}
	if _ceadg := _abda.HorzBarStateAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u0042\u0061\u0072\u0053\u0074\u0061\u0074e\u0041\u0074\u0074\u0072"); _ceadg != nil {
		return _ceadg
	}
	if _afgg := _abda.RestoredLeft.ValidateWithPath(path + "\u002f\u0052\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"); _afgg != nil {
		return _afgg
	}
	if _bdea := _abda.RestoredTop.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"); _bdea != nil {
		return _bdea
	}
	if _abda.ExtLst != nil {
		if _gdcc := _abda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdcc != nil {
			return _gdcc
		}
	}
	return nil
}
func (_bggeg ST_WebScreenSize) ValidateWithPath(path string) error {
	switch _bggeg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bggeg))
	}
	return nil
}
func (_ecfaa ST_TLBehaviorAccumulateType) ValidateWithPath(path string) error {
	switch _ecfaa {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ecfaa))
	}
	return nil
}
func (_fcebb ST_OleObjectFollowColorScheme) Validate() error { return _fcebb.ValidateWithPath("") }

// Validate validates the CT_Connector and its children
func (_gfd *CT_Connector) Validate() error {
	return _gfd.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func (_fbef *CT_TLTextTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fabad:
	for {
		_eedad, _gefgg := d.Token()
		if _gefgg != nil {
			return _gefgg
		}
		switch _aabad := _eedad.(type) {
		case _d.StartElement:
			switch _aabad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061\u0072\u0052\u0067"}:
				_fbef.CharRg = NewCT_IndexRange()
				if _eead := d.DecodeElement(_fbef.CharRg, &_aabad); _eead != nil {
					return _eead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0052\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0052\u0067"}:
				_fbef.PRg = NewCT_IndexRange()
				if _adfc := d.DecodeElement(_fbef.PRg, &_aabad); _adfc != nil {
					return _adfc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0065x\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _aabad.Name)
				if _gafba := d.Skip(); _gafba != nil {
					return _gafba
				}
			}
		case _d.EndElement:
			break _fabad
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_EightDirectionTransition and its children
func (_dafgb *CT_EightDirectionTransition) Validate() error {
	return _dafgb.ValidateWithPath("C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e")
}
func (_bgdc ST_TLTimeNodeRestartType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bgdc.String(), start)
}
func (_fdcbe ST_PhotoAlbumLayout) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_affgea := _d.Attr{}
	_affgea.Name = name
	switch _fdcbe {
	case ST_PhotoAlbumLayoutUnset:
		_affgea.Value = ""
	case ST_PhotoAlbumLayoutFitToSlide:
		_affgea.Value = "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case ST_PhotoAlbumLayout1pic:
		_affgea.Value = "\u0031\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout2pic:
		_affgea.Value = "\u0032\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout4pic:
		_affgea.Value = "\u0034\u0070\u0069\u0063"
	case ST_PhotoAlbumLayout1picTitle:
		_affgea.Value = "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout2picTitle:
		_affgea.Value = "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case ST_PhotoAlbumLayout4picTitle:
		_affgea.Value = "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return _affgea, nil
}

type CT_SideDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionSideDirectionType
}
type CT_ShowInfoBrowse struct {

	// Show Scroll Bar in Window
	ShowScrollbarAttr *bool
}

func (_ecgec *ST_TLAnimateBehaviorCalcMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfdfb, _abeebg := d.Token()
	if _abeebg != nil {
		return _abeebg
	}
	if _ggcef, _ddcgdc := _dfdfb.(_d.EndElement); _ddcgdc && _ggcef.Name == start.Name {
		*_ecgec = 1
		return nil
	}
	if _gbgdg, _eggda := _dfdfb.(_d.CharData); !_eggda {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfdfb)
	} else {
		switch string(_gbgdg) {
		case "":
			*_ecgec = 0
		case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
			*_ecgec = 1
		case "\u006c\u0069\u006e":
			*_ecgec = 2
		case "\u0066\u006d\u006c\u0061":
			*_ecgec = 3
		}
	}
	_dfdfb, _abeebg = d.Token()
	if _abeebg != nil {
		return _abeebg
	}
	if _ffeef, _cdgf := _dfdfb.(_d.EndElement); _cdgf && _ffeef.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfdfb)
}

type CT_OutlineViewProperties struct {

	// Common View Properties
	CViewPr *CT_CommonViewProperties

	// List of Presentation Slides
	SldLst *CT_OutlineViewSlideList
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLIterateIntervalPercentage and its children, prefixing error messages with path
func (_aegcg *CT_TLIterateIntervalPercentage) ValidateWithPath(path string) error {
	if _gdcf := _aegcg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gdcf != nil {
		return _gdcf
	}
	return nil
}
func (_eecf *CT_HandoutMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aegb:
	for {
		_aedbd, _ecgg := d.Token()
		if _ecgg != nil {
			return _ecgg
		}
		switch _ceda := _aedbd.(type) {
		case _d.StartElement:
			switch _ceda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_eecf.HandoutMasterId = NewCT_HandoutMasterIdListEntry()
				if _cecf := d.DecodeElement(_eecf.HandoutMasterId, &_ceda); _cecf != nil {
					return _cecf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ceda.Name)
				if _cbea := d.Skip(); _cbea != nil {
					return _cbea
				}
			}
		case _d.EndElement:
			break _aegb
		case _d.CharData:
		}
	}
	return nil
}

type EG_ChildSlide struct {

	// Color Scheme Map Override
	ClrMapOvr *_ad.CT_ColorMappingOverride
}

func (_abgbef *SldMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abgbef.CT_SlideMaster = *NewCT_SlideMaster()
	for _, _bdgdd := range start.Attr {
		if _bdgdd.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_gadacd, _effgb := _dc.ParseBool(_bdgdd.Value)
			if _effgb != nil {
				return _effgb
			}
			_abgbef.PreserveAttr = &_gadacd
			continue
		}
	}
_bedf:
	for {
		_dcbgc, _debg := d.Token()
		if _debg != nil {
			return _debg
		}
		switch _ggfgf := _dcbgc.(type) {
		case _d.StartElement:
			switch _ggfgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _aabbb := d.DecodeElement(_abgbef.CSld, &_ggfgf); _aabbb != nil {
					return _aabbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _dcda := d.DecodeElement(_abgbef.ClrMap, &_ggfgf); _dcda != nil {
					return _dcda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_abgbef.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _fgcec := d.DecodeElement(_abgbef.SldLayoutIdLst, &_ggfgf); _fgcec != nil {
					return _fgcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_abgbef.Transition = NewCT_SlideTransition()
				if _eabcb := d.DecodeElement(_abgbef.Transition, &_ggfgf); _eabcb != nil {
					return _eabcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_abgbef.Timing = NewCT_SlideTiming()
				if _caeg := d.DecodeElement(_abgbef.Timing, &_ggfgf); _caeg != nil {
					return _caeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_abgbef.Hf = NewCT_HeaderFooter()
				if _gggef := d.DecodeElement(_abgbef.Hf, &_ggfgf); _gggef != nil {
					return _gggef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_abgbef.TxStyles = NewCT_SlideMasterTextStyles()
				if _ebaga := d.DecodeElement(_abgbef.TxStyles, &_ggfgf); _ebaga != nil {
					return _ebaga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abgbef.ExtLst = NewCT_ExtensionListModify()
				if _gadcg := d.DecodeElement(_abgbef.ExtLst, &_ggfgf); _gadcg != nil {
					return _gadcg
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004d\u0061\u0073t\u0065\u0072 \u0025\u0076", _ggfgf.Name)
				if _dcfc := d.Skip(); _dcfc != nil {
					return _dcfc
				}
			}
		case _d.EndElement:
			break _bedf
		case _d.CharData:
		}
	}
	return nil
}
func (_cgdf *NotesMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgdf.CT_NotesMaster = *NewCT_NotesMaster()
_afbaf:
	for {
		_cededb, _dbebd := d.Token()
		if _dbebd != nil {
			return _dbebd
		}
		switch _acgee := _cededb.(type) {
		case _d.StartElement:
			switch _acgee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ffcc := d.DecodeElement(_cgdf.CSld, &_acgee); _ffcc != nil {
					return _ffcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gffaf := d.DecodeElement(_cgdf.ClrMap, &_acgee); _gffaf != nil {
					return _gffaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_cgdf.Hf = NewCT_HeaderFooter()
				if _bdfce := d.DecodeElement(_cgdf.Hf, &_acgee); _bdfce != nil {
					return _bdfce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_cgdf.NotesStyle = _ad.NewCT_TextListStyle()
				if _efbdaf := d.DecodeElement(_cgdf.NotesStyle, &_acgee); _efbdaf != nil {
					return _efbdaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgdf.ExtLst = NewCT_ExtensionListModify()
				if _ccaec := d.DecodeElement(_cgdf.ExtLst, &_acgee); _ccaec != nil {
					return _ccaec
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025\u0076", _acgee.Name)
				if _cbaaa := d.Skip(); _cbaaa != nil {
					return _cbaaa
				}
			}
		case _d.EndElement:
			break _afbaf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_CustomerData() *CT_CustomerData { _cgad := &CT_CustomerData{}; return _cgad }

// Validate validates the CT_NotesViewProperties and its children
func (_ccda *CT_NotesViewProperties) Validate() error {
	return _ccda.ValidateWithPath("\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// Validate validates the CT_SlideMasterIdListEntry and its children
func (_efcf *CT_SlideMasterIdListEntry) Validate() error {
	return _efcf.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

type CT_Placeholder struct {

	// Placeholder Type
	TypeAttr ST_PlaceholderType

	// Placeholder Orientation
	OrientAttr ST_Direction

	// Placeholder Size
	SzAttr ST_PlaceholderSize

	// Placeholder Index
	IdxAttr *uint32

	// Placeholder has custom prompt
	HasCustomPromptAttr *bool
	ExtLst              *CT_ExtensionListModify
}

func (_fcdfc *CT_SlideIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcdfc.IdAttr = 256
	for _, _baedg := range start.Attr {
		if _baedg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _baedg.Name.Local == "\u0069\u0064" || _baedg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _baedg.Name.Local == "\u0069\u0064" {
			_bfff, _aafc := _baedg.Value, error(nil)
			if _aafc != nil {
				return _aafc
			}
			_fcdfc.RIdAttr = _bfff
			continue
		}
		if _baedg.Name.Local == "\u0069\u0064" {
			_fbgg, _aaecd := _dc.ParseUint(_baedg.Value, 10, 32)
			if _aaecd != nil {
				return _aaecd
			}
			_fcdfc.IdAttr = uint32(_fbgg)
			continue
		}
	}
_cceeg:
	for {
		_gcae, _eggd := d.Token()
		if _eggd != nil {
			return _eggd
		}
		switch _cfee := _gcae.(type) {
		case _d.StartElement:
			switch _cfee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcdfc.ExtLst = NewCT_ExtensionList()
				if _cadgg := d.DecodeElement(_fcdfc.ExtLst, &_cfee); _cadgg != nil {
					return _cadgg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064Li\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _cfee.Name)
				if _gfcef := d.Skip(); _gfcef != nil {
					return _gfcef
				}
			}
		case _d.EndElement:
			break _cceeg
		case _d.CharData:
		}
	}
	return nil
}
func (_edgb *CT_GuideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _edgb.Guide != nil {
		_daff := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0075\u0069\u0064\u0065"}}
		for _, _ggfd := range _edgb.Guide {
			e.EncodeElement(_ggfd, _daff)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eafda ST_PrintWhat) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ecgbe := _d.Attr{}
	_ecgbe.Name = name
	switch _eafda {
	case ST_PrintWhatUnset:
		_ecgbe.Value = ""
	case ST_PrintWhatSlides:
		_ecgbe.Value = "\u0073\u006c\u0069\u0064\u0065\u0073"
	case ST_PrintWhatHandouts1:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case ST_PrintWhatHandouts2:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case ST_PrintWhatHandouts3:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case ST_PrintWhatHandouts4:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case ST_PrintWhatHandouts6:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case ST_PrintWhatHandouts9:
		_ecgbe.Value = "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case ST_PrintWhatNotes:
		_ecgbe.Value = "\u006e\u006f\u0074e\u0073"
	case ST_PrintWhatOutline:
		_ecgbe.Value = "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return _ecgbe, nil
}
func (_ffcb *CT_SlideSyncProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgagf := range start.Attr {
		if _cgagf.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064" {
			_ecdga, _dgfgg := _cgagf.Value, error(nil)
			if _dgfgg != nil {
				return _dgfgg
			}
			_ffcb.ServerSldIdAttr = _ecdga
			continue
		}
		if _cgagf.Name.Local == "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065" {
			_fdgfc, _abbdd := ParseStdlibTime(_cgagf.Value)
			if _abbdd != nil {
				return _abbdd
			}
			_ffcb.ServerSldModifiedTimeAttr = _fdgfc
			continue
		}
		if _cgagf.Name.Local == "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065" {
			_geaag, _dafd := ParseStdlibTime(_cgagf.Value)
			if _dafd != nil {
				return _dafd
			}
			_ffcb.ClientInsertedTimeAttr = _geaag
			continue
		}
	}
_fgfc:
	for {
		_aaaf, _ggbc := d.Token()
		if _ggbc != nil {
			return _ggbc
		}
		switch _cebga := _aaaf.(type) {
		case _d.StartElement:
			switch _cebga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffcb.ExtLst = NewCT_ExtensionList()
				if _dbcfg := d.DecodeElement(_ffcb.ExtLst, &_cebga); _dbcfg != nil {
					return _dbcfg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cebga.Name)
				if _bgaa := d.Skip(); _bgaa != nil {
					return _bgaa
				}
			}
		case _d.EndElement:
			break _fgfc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdListEntry and its children, prefixing error messages with path
func (_eafd *CT_SlideMasterIdListEntry) ValidateWithPath(path string) error {
	if _eafd.IdAttr != nil {
		if *_eafd.IdAttr < 2147483648 {
			return _gc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_eafd.IdAttr)
		}
	}
	if _eafd.ExtLst != nil {
		if _cffe := _eafd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cffe != nil {
			return _cffe
		}
	}
	return nil
}
func NewCT_ShowProperties() *CT_ShowProperties { _dfgf := &CT_ShowProperties{}; return _dfgf }
func (_bdaaf *CT_TLTimeNodeExclusive) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdaaf.CTn = NewCT_TLCommonTimeNodeData()
_cafec:
	for {
		_dgbega, _cffb := d.Token()
		if _cffb != nil {
			return _cffb
		}
		switch _cbge := _dgbega.(type) {
		case _d.StartElement:
			switch _cbge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _acbff := d.DecodeElement(_bdaaf.CTn, &_cbge); _acbff != nil {
					return _acbff
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069\u0076\u0065\u0020\u0025\u0076", _cbge.Name)
				if _bgcg := d.Skip(); _bgcg != nil {
					return _bgcg
				}
			}
		case _d.EndElement:
			break _cafec
		case _d.CharData:
		}
	}
	return nil
}

type CT_Comment struct {

	// Comment Author ID
	AuthorIdAttr uint32

	// Comment Date/Time
	DtAttr *_g.Time

	// Comment Index
	IdxAttr uint32

	// Comment Position
	Pos *_ad.CT_Point2D

	// Comment's Text Content
	Text   string
	ExtLst *CT_ExtensionListModify
}

func NewCT_GraphicalObjectFrameNonVisual() *CT_GraphicalObjectFrameNonVisual {
	_fedf := &CT_GraphicalObjectFrameNonVisual{}
	_fedf.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_fedf.CNvGraphicFramePr = _ad.NewCT_NonVisualGraphicFrameProperties()
	_fedf.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _fedf
}
func NewCT_SlideTiming() *CT_SlideTiming { _bafg := &CT_SlideTiming{}; return _bafg }
func (_eagfc *CT_PhotoAlbum) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gegfb := range start.Attr {
		if _gegfb.Name.Local == "\u0062\u0077" {
			_edecg, _acab := _dc.ParseBool(_gegfb.Value)
			if _acab != nil {
				return _acab
			}
			_eagfc.BwAttr = &_edecg
			continue
		}
		if _gegfb.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073" {
			_abgb, _ecabf := _dc.ParseBool(_gegfb.Value)
			if _ecabf != nil {
				return _ecabf
			}
			_eagfc.ShowCaptionsAttr = &_abgb
			continue
		}
		if _gegfb.Name.Local == "\u006c\u0061\u0079\u006f\u0075\u0074" {
			_eagfc.LayoutAttr.UnmarshalXMLAttr(_gegfb)
			continue
		}
		if _gegfb.Name.Local == "\u0066\u0072\u0061m\u0065" {
			_eagfc.FrameAttr.UnmarshalXMLAttr(_gegfb)
			continue
		}
	}
_gaeg:
	for {
		_cdbf, _cddgg := d.Token()
		if _cddgg != nil {
			return _cddgg
		}
		switch _fcfc := _cdbf.(type) {
		case _d.StartElement:
			switch _fcfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eagfc.ExtLst = NewCT_ExtensionList()
				if _degff := d.DecodeElement(_eagfc.ExtLst, &_fcfc); _degff != nil {
					return _degff
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d \u0025\u0076", _fcfc.Name)
				if _cega := d.Skip(); _cega != nil {
					return _cega
				}
			}
		case _d.EndElement:
			break _gaeg
		case _d.CharData:
		}
	}
	return nil
}
func (_eadec *CT_TLAnimateScaleBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eadec.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _cagbc := range start.Attr {
		if _cagbc.Name.Local == "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_dbgfb, _abggb := _dc.ParseBool(_cagbc.Value)
			if _abggb != nil {
				return _abggb
			}
			_eadec.ZoomContentsAttr = &_dbgfb
			continue
		}
	}
_aaeb:
	for {
		_ecdgf, _ggbcf := d.Token()
		if _ggbcf != nil {
			return _ggbcf
		}
		switch _cddfe := _ecdgf.(type) {
		case _d.StartElement:
			switch _cddfe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _deade := d.DecodeElement(_eadec.CBhvr, &_cddfe); _deade != nil {
					return _deade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_eadec.By = NewCT_TLPoint()
				if _fddec := d.DecodeElement(_eadec.By, &_cddfe); _fddec != nil {
					return _fddec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_eadec.From = NewCT_TLPoint()
				if _fdab := d.DecodeElement(_eadec.From, &_cddfe); _fdab != nil {
					return _fdab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_eadec.To = NewCT_TLPoint()
				if _egfcc := d.DecodeElement(_eadec.To, &_cddfe); _egfcc != nil {
					return _egfcc
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0053c\u0061\u006c\u0065\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _cddfe.Name)
				if _fbaca := d.Skip(); _fbaca != nil {
					return _fbaca
				}
			}
		case _d.EndElement:
			break _aaeb
		case _d.CharData:
		}
	}
	return nil
}
func (_ggfee *CT_TLCommonMediaNodeData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggfee.CTn = NewCT_TLCommonTimeNodeData()
	_ggfee.TgtEl = NewCT_TLTimeTargetElement()
	for _, _ccgdg := range start.Attr {
		if _ccgdg.Name.Local == "\u0076\u006f\u006c" {
			_ffda, _bdfd := ParseUnionST_PositiveFixedPercentage(_ccgdg.Value)
			if _bdfd != nil {
				return _bdfd
			}
			_ggfee.VolAttr = &_ffda
			continue
		}
		if _ccgdg.Name.Local == "\u006d\u0075\u0074\u0065" {
			_eebg, _dbeegd := _dc.ParseBool(_ccgdg.Value)
			if _dbeegd != nil {
				return _dbeegd
			}
			_ggfee.MuteAttr = &_eebg
			continue
		}
		if _ccgdg.Name.Local == "\u006e\u0075\u006d\u0053\u006c\u0064" {
			_febbc, _fabc := _dc.ParseUint(_ccgdg.Value, 10, 32)
			if _fabc != nil {
				return _fabc
			}
			_afgce := uint32(_febbc)
			_ggfee.NumSldAttr = &_afgce
			continue
		}
		if _ccgdg.Name.Local == "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064" {
			_bddg, _dabd := _dc.ParseBool(_ccgdg.Value)
			if _dabd != nil {
				return _dabd
			}
			_ggfee.ShowWhenStoppedAttr = &_bddg
			continue
		}
	}
_afdfa:
	for {
		_ebca, _cbgg := d.Token()
		if _cbgg != nil {
			return _cbgg
		}
		switch _bggb := _ebca.(type) {
		case _d.StartElement:
			switch _bggb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _gebgac := d.DecodeElement(_ggfee.CTn, &_bggb); _gebgac != nil {
					return _gebgac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _beggb := d.DecodeElement(_ggfee.TgtEl, &_bggb); _beggb != nil {
					return _beggb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064e\u0044\u0061\u0074\u0061\u0020%\u0076", _bggb.Name)
				if _dagg := d.Skip(); _dagg != nil {
					return _dagg
				}
			}
		case _d.EndElement:
			break _afdfa
		case _d.CharData:
		}
	}
	return nil
}
func (_ggfb *CT_SlideLayoutIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfgfc := range start.Attr {
		if _dfgfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dfgfc.Name.Local == "\u0069\u0064" || _dfgfc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dfgfc.Name.Local == "\u0069\u0064" {
			_bdgd, _cgggf := _dfgfc.Value, error(nil)
			if _cgggf != nil {
				return _cgggf
			}
			_ggfb.RIdAttr = _bdgd
			continue
		}
		if _dfgfc.Name.Local == "\u0069\u0064" {
			_ddga, _cgac := _dc.ParseUint(_dfgfc.Value, 10, 32)
			if _cgac != nil {
				return _cgac
			}
			_cabdb := uint32(_ddga)
			_ggfb.IdAttr = &_cabdb
			continue
		}
	}
_bdef:
	for {
		_baadf, _ecga := d.Token()
		if _ecga != nil {
			return _ecga
		}
		switch _adec := _baadf.(type) {
		case _d.StartElement:
			switch _adec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ggfb.ExtLst = NewCT_ExtensionList()
				if _dfdfg := d.DecodeElement(_ggfb.ExtLst, &_adec); _dfdfg != nil {
					return _dfdfg
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075t\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _adec.Name)
				if _cagb := d.Skip(); _cagb != nil {
					return _cagb
				}
			}
		case _d.EndElement:
			break _bdef
		case _d.CharData:
		}
	}
	return nil
}
func (_ddfa *CT_TLTimeCondition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egee := range start.Attr {
		if _egee.Name.Local == "\u0065\u0076\u0074" {
			_ddfa.EvtAttr.UnmarshalXMLAttr(_egee)
			continue
		}
		if _egee.Name.Local == "\u0064\u0065\u006ca\u0079" {
			_fddad, _fgbf := ParseUnionST_TLTime(_egee.Value)
			if _fgbf != nil {
				return _fgbf
			}
			_ddfa.DelayAttr = &_fddad
			continue
		}
	}
_gebgacf:
	for {
		_facbf, _bdfe := d.Token()
		if _bdfe != nil {
			return _bdfe
		}
		switch _dgeg := _facbf.(type) {
		case _d.StartElement:
			switch _dgeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				_ddfa.TgtEl = NewCT_TLTimeTargetElement()
				if _egdce := d.DecodeElement(_ddfa.TgtEl, &_dgeg); _egdce != nil {
					return _egdce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e"}:
				_ddfa.Tn = NewCT_TLTriggerTimeNodeID()
				if _cabffc := d.DecodeElement(_ddfa.Tn, &_dgeg); _cabffc != nil {
					return _cabffc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0074\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006e"}:
				_ddfa.Rtn = NewCT_TLTriggerRuntimeNode()
				if _dgdf := d.DecodeElement(_ddfa.Rtn, &_dgeg); _dgdf != nil {
					return _dgdf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065C\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dgeg.Name)
				if _ffadd := d.Skip(); _ffadd != nil {
					return _ffadd
				}
			}
		case _d.EndElement:
			break _gebgacf
		case _d.CharData:
		}
	}
	return nil
}
func (_acgcg *CT_SplitTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acgcg.OrientAttr != ST_DirectionUnset {
		_daagg, _cfgf := _acgcg.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _cfgf != nil {
			return _cfgf
		}
		start.Attr = append(start.Attr, _daagg)
	}
	if _acgcg.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_dddg, _dead := _acgcg.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _dead != nil {
			return _dead
		}
		start.Attr = append(start.Attr, _dddg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ceba ST_TLBehaviorTransformType) Validate() error { return _ceba.ValidateWithPath("") }
func ParseUnionST_TLTimeAnimateValueTime(s string) (ST_TLTimeAnimateValueTime, error) {
	return ST_TLTimeAnimateValueTime{}, nil
}

// Validate validates the CT_OleObjectLink and its children
func (_fdgc *CT_OleObjectLink) Validate() error {
	return _fdgc.ValidateWithPath("\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b")
}
func (_cfacg ST_TLTimeNodeMasterRelation) Validate() error { return _cfacg.ValidateWithPath("") }
func (_gcebd *CT_OutlineViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcebd.CViewPr = NewCT_CommonViewProperties()
_bcbf:
	for {
		_bggc, _eaed := d.Token()
		if _eaed != nil {
			return _eaed
		}
		switch _ccadea := _bggc.(type) {
		case _d.StartElement:
			switch _ccadea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _dgbeg := d.DecodeElement(_gcebd.CViewPr, &_ccadea); _dgbeg != nil {
					return _dgbeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				_gcebd.SldLst = NewCT_OutlineViewSlideList()
				if _cegb := d.DecodeElement(_gcebd.SldLst, &_ccadea); _cegb != nil {
					return _cegb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcebd.ExtLst = NewCT_ExtensionList()
				if _bfeb := d.DecodeElement(_gcebd.ExtLst, &_ccadea); _bfeb != nil {
					return _bfeb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _ccadea.Name)
				if _ecgd := d.Skip(); _ecgd != nil {
					return _ecgd
				}
			}
		case _d.EndElement:
			break _bcbf
		case _d.CharData:
		}
	}
	return nil
}
func (_gfaagg ST_Direction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gfaagg.String(), start)
}
func (_begd *CT_TLTimeAnimateValueList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _begd.Tav != nil {
		_gbedc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074a\u0076"}}
		for _, _ddbc := range _begd.Tav {
			e.EncodeElement(_ddbc, _gbedc)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TLBehaviorAccumulateType byte

func (_deecb *CT_EmbeddedFontDataId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geb := range start.Attr {
		if _geb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _geb.Name.Local == "\u0069\u0064" || _geb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _geb.Name.Local == "\u0069\u0064" {
			_cabb, _bda := _geb.Value, error(nil)
			if _bda != nil {
				return _bda
			}
			_deecb.IdAttr = _cabb
			continue
		}
	}
	for {
		_bffe, _cdg := d.Token()
		if _cdg != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046o\u006e\u0074\u0044\u0061\u0074\u0061\u0049d\u003a\u0020\u0025\u0073", _cdg)
		}
		if _acfd, _eebec := _bffe.(_d.EndElement); _eebec && _acfd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beabb *CT_TagsData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _afeaffe := range start.Attr {
		if _afeaffe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afeaffe.Name.Local == "\u0069\u0064" || _afeaffe.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afeaffe.Name.Local == "\u0069\u0064" {
			_cbfa, _fafce := _afeaffe.Value, error(nil)
			if _fafce != nil {
				return _fafce
			}
			_beabb.IdAttr = _cbfa
			continue
		}
	}
	for {
		_faegc, _gafea := d.Token()
		if _gafea != nil {
			return _gc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061\u003a\u0020\u0025\u0073", _gafea)
		}
		if _gdef, _gbgabb := _faegc.(_d.EndElement); _gbgabb && _gdef.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TagList struct {

	// Programmable Extensibility Tag
	Tag []*CT_StringTag
}

func NewCT_SlideMasterIdList() *CT_SlideMasterIdList { _gggb := &CT_SlideMasterIdList{}; return _gggb }

// ValidateWithPath validates the CT_TLTimeNodeParallel and its children, prefixing error messages with path
func (_dfbge *CT_TLTimeNodeParallel) ValidateWithPath(path string) error {
	if _fcfg := _dfbge.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _fcfg != nil {
		return _fcfg
	}
	return nil
}

type ST_TLBehaviorOverrideType byte

func (_dfcag ST_TransitionCornerDirectionType) Validate() error { return _dfcag.ValidateWithPath("") }

type CT_InOutTransition struct {

	// Direction
	DirAttr ST_TransitionInOutDirectionType
}

// ValidateWithPath validates the CT_TLCommonBehaviorData and its children, prefixing error messages with path
func (_gece *CT_TLCommonBehaviorData) ValidateWithPath(path string) error {
	if _dbgbed := _gece.AdditiveAttr.ValidateWithPath(path + "\u002f\u0041\u0064\u0064\u0069\u0074\u0069\u0076\u0065\u0041\u0074\u0074\u0072"); _dbgbed != nil {
		return _dbgbed
	}
	if _gegcff := _gece.AccumulateAttr.ValidateWithPath(path + "\u002fA\u0063c\u0075\u006d\u0075\u006c\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _gegcff != nil {
		return _gegcff
	}
	if _aead := _gece.XfrmTypeAttr.ValidateWithPath(path + "\u002f\u0058\u0066\u0072\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _aead != nil {
		return _aead
	}
	if _aeaed := _gece.OverrideAttr.ValidateWithPath(path + "\u002f\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0041\u0074\u0074\u0072"); _aeaed != nil {
		return _aeaed
	}
	if _fabac := _gece.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _fabac != nil {
		return _fabac
	}
	if _dbfeb := _gece.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _dbfeb != nil {
		return _dbfeb
	}
	if _gece.AttrNameLst != nil {
		if _adda := _gece.AttrNameLst.ValidateWithPath(path + "\u002f\u0041\u0074t\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"); _adda != nil {
			return _adda
		}
	}
	return nil
}
func (_gddbb ST_TLBehaviorOverrideType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ecfbge := _d.Attr{}
	_ecfbge.Name = name
	switch _gddbb {
	case ST_TLBehaviorOverrideTypeUnset:
		_ecfbge.Value = ""
	case ST_TLBehaviorOverrideTypeNormal:
		_ecfbge.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_TLBehaviorOverrideTypeChildStyle:
		_ecfbge.Value = "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return _ecfbge, nil
}
func (_bcdgb ST_TLTimeNodePresetClassType) String() string {
	switch _bcdgb {
	case 0:
		return ""
	case 1:
		return "\u0065\u006e\u0074\u0072"
	case 2:
		return "\u0065\u0078\u0069\u0074"
	case 3:
		return "\u0065\u006d\u0070\u0068"
	case 4:
		return "\u0070\u0061\u0074\u0068"
	case 5:
		return "\u0076\u0065\u0072\u0062"
	case 6:
		return "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return ""
}

type HandoutMaster struct{ CT_HandoutMaster }

// Validate validates the CT_GraphicalObjectFrame and its children
func (_fca *CT_GraphicalObjectFrame) Validate() error {
	return _fca.ValidateWithPath("\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065")
}

// Validate validates the CT_InOutTransition and its children
func (_feff *CT_InOutTransition) Validate() error {
	return _feff.ValidateWithPath("\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_TLTimeCondition and its children
func (_aaae *CT_TLTimeCondition) Validate() error {
	return _aaae.ValidateWithPath("\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e")
}

type CT_SlideSorterViewProperties struct {

	// Show Formatting
	ShowFormattingAttr *bool

	// Base properties for Slide Sorter View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}
type CT_TLTemplate struct {

	// Level
	LvlAttr *uint32

	// Time Node List
	TnLst *CT_TimeNodeList
}

func (_bfegc *CT_CommentList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dge:
	for {
		_fae, _ecaa := d.Token()
		if _ecaa != nil {
			return _ecaa
		}
		switch _cebf := _fae.(type) {
		case _d.StartElement:
			switch _cebf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_degc := NewCT_Comment()
				if _aadg := d.DecodeElement(_degc, &_cebf); _aadg != nil {
					return _aadg
				}
				_bfegc.Cm = append(_bfegc.Cm, _degc)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _cebf.Name)
				if _cac := d.Skip(); _cac != nil {
					return _cac
				}
			}
		case _d.EndElement:
			break _dge
		case _d.CharData:
		}
	}
	return nil
}
func (_acgbg *CT_TLGraphicalObjectBuild) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gfcca := range start.Attr {
		if _gfcca.Name.Local == "\u0073\u0070\u0069\u0064" {
			_aebd, _egede := _dc.ParseUint(_gfcca.Value, 10, 32)
			if _egede != nil {
				return _egede
			}
			_gdeb := uint32(_aebd)
			_acgbg.SpidAttr = &_gdeb
			continue
		}
		if _gfcca.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_feceb, _gcgc := _dc.ParseUint(_gfcca.Value, 10, 32)
			if _gcgc != nil {
				return _gcgc
			}
			_caefe := uint32(_feceb)
			_acgbg.GrpIdAttr = &_caefe
			continue
		}
		if _gfcca.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cgga, _dfbff := _dc.ParseBool(_gfcca.Value)
			if _dfbff != nil {
				return _dfbff
			}
			_acgbg.UiExpandAttr = &_cgga
			continue
		}
	}
_gcge:
	for {
		_bgadc, _baffa := d.Token()
		if _baffa != nil {
			return _baffa
		}
		switch _abfaf := _bgadc.(type) {
		case _d.StartElement:
			switch _abfaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}:
				_acgbg.BldAsOne = NewCT_Empty()
				if _eebd := d.DecodeElement(_acgbg.BldAsOne, &_abfaf); _eebd != nil {
					return _eebd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0053\u0075\u0062"}:
				_acgbg.BldSub = _ad.NewCT_AnimationGraphicalObjectBuildProperties()
				if _dfgff := d.DecodeElement(_acgbg.BldSub, &_abfaf); _dfgff != nil {
					return _dfgff
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0047\u0072\u0061\u0070\u0068\u0069c\u0061l\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075i\u006cd\u0020\u0025v", _abfaf.Name)
				if _gaba := d.Skip(); _gaba != nil {
					return _gaba
				}
			}
		case _d.EndElement:
			break _gcge
		case _d.CharData:
		}
	}
	return nil
}
func (_gbgea ST_IterateType) ValidateWithPath(path string) error {
	switch _gbgea {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbgea))
	}
	return nil
}
func (_aggce *CT_PresentationProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _aggce.HtmlPubPr != nil {
		_eeda := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0068\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"}}
		e.EncodeElement(_aggce.HtmlPubPr, _eeda)
	}
	if _aggce.WebPr != nil {
		_aeeea := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_aggce.WebPr, _aeeea)
	}
	if _aggce.PrnPr != nil {
		_facfc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u006e\u0050\u0072"}}
		e.EncodeElement(_aggce.PrnPr, _facfc)
	}
	if _aggce.ShowPr != nil {
		_bdbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0068\u006f\u0077\u0050\u0072"}}
		e.EncodeElement(_aggce.ShowPr, _bdbf)
	}
	if _aggce.ClrMru != nil {
		_ddafg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0072\u0075"}}
		e.EncodeElement(_aggce.ClrMru, _ddafg)
	}
	if _aggce.ExtLst != nil {
		_gged := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aggce.ExtLst, _gged)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLBuildParagraph struct {

	// Build Types
	BuildAttr ST_TLParaBuildType

	// Build Level
	BldLvlAttr *uint32

	// Animate Background
	AnimBgAttr *bool

	// Auto Update Animation Background
	AutoUpdateAnimBgAttr *bool

	// Reverse
	RevAttr *bool

	// Auto Advance Time
	AdvAutoAttr *ST_TLTime

	// Template effects
	TmplLst      *CT_TLTemplateList
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

// Validate validates the CT_SlideRelationshipListEntry and its children
func (_beeg *CT_SlideRelationshipListEntry) Validate() error {
	return _beeg.ValidateWithPath("\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079")
}

const (
	ST_TLBehaviorAccumulateTypeUnset  ST_TLBehaviorAccumulateType = 0
	ST_TLBehaviorAccumulateTypeNone   ST_TLBehaviorAccumulateType = 1
	ST_TLBehaviorAccumulateTypeAlways ST_TLBehaviorAccumulateType = 2
)

// Validate validates the CT_Presentation and its children
func (_ddaf *CT_Presentation) Validate() error {
	return _ddaf.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func (_baggb *CT_SlideIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _baggb.SldId != nil {
		_acfee := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0049\u0064"}}
		for _, _caeea := range _baggb.SldId {
			e.EncodeElement(_caeea, _acfee)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egca *ST_TLBehaviorAccumulateType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_feacc, _beeb := d.Token()
	if _beeb != nil {
		return _beeb
	}
	if _dgfbfe, _edbecg := _feacc.(_d.EndElement); _edbecg && _dgfbfe.Name == start.Name {
		*_egca = 1
		return nil
	}
	if _aegdg, _ecgfa := _feacc.(_d.CharData); !_ecgfa {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _feacc)
	} else {
		switch string(_aegdg) {
		case "":
			*_egca = 0
		case "\u006e\u006f\u006e\u0065":
			*_egca = 1
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_egca = 2
		}
	}
	_feacc, _beeb = d.Token()
	if _beeb != nil {
		return _beeb
	}
	if _gacffe, _eccdd := _feacc.(_d.EndElement); _eccdd && _gacffe.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _feacc)
}
func NewCT_EmbeddedFontList() *CT_EmbeddedFontList { _fbf := &CT_EmbeddedFontList{}; return _fbf }

type CT_SlideMasterIdList struct {

	// Slide Master ID
	SldMasterId []*CT_SlideMasterIdListEntry
}

func NewCT_NormalViewPortion() *CT_NormalViewPortion { _gadb := &CT_NormalViewPortion{}; return _gadb }
func (_cgdc *CT_SlideIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bdda:
	for {
		_bcdc, _bbaf := d.Token()
		if _bbaf != nil {
			return _bbaf
		}
		switch _efbe := _bcdc.(type) {
		case _d.StartElement:
			switch _efbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064I\u0064"}:
				_cafdf := NewCT_SlideIdListEntry()
				if _efee := d.DecodeElement(_cafdf, &_efbe); _efee != nil {
					return _efee
				}
				_cgdc.SldId = append(_cgdc.SldId, _cafdf)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049\u0064L\u0069s\u0074\u0020\u0025\u0076", _efbe.Name)
				if _decba := d.Skip(); _decba != nil {
					return _decba
				}
			}
		case _d.EndElement:
			break _bdda
		case _d.CharData:
		}
	}
	return nil
}
func (_bcgf *CT_CustomerDataList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfgg:
	for {
		_fdbd, _cef := d.Token()
		if _cef != nil {
			return _cef
		}
		switch _ece := _fdbd.(type) {
		case _d.StartElement:
			switch _ece.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}:
				_efga := NewCT_CustomerData()
				if _aadd := d.DecodeElement(_efga, &_ece); _aadd != nil {
					return _aadd
				}
				_bcgf.CustData = append(_bcgf.CustData, _efga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067\u0073"}:
				_bcgf.Tags = NewCT_TagsData()
				if _addd := d.DecodeElement(_bcgf.Tags, &_ece); _addd != nil {
					return _addd
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0065rD\u0061\u0074\u0061\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ece.Name)
				if _aeca := d.Skip(); _aeca != nil {
					return _aeca
				}
			}
		case _d.EndElement:
			break _gfgg
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TransitionSoundAction() *CT_TransitionSoundAction {
	_gdag := &CT_TransitionSoundAction{}
	return _gdag
}
func (_fdfa *CT_ShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gbgab := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_fdfa.CNvPr, _gbgab)
	_gagd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_fdfa.CNvSpPr, _gagd)
	_gebga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_fdfa.NvPr, _gebga)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ST_TLTimeAnimateValueTime is a union type
type ST_TLTimeAnimateValueTime struct {
	ST_PositiveFixedPercentage *_ad.ST_PositiveFixedPercentage
	ST_TLTimeIndefinite        ST_TLTimeIndefinite
}

// ValidateWithPath validates the CT_TLCommonTimeNodeData and its children, prefixing error messages with path
func (_eedaga *CT_TLCommonTimeNodeData) ValidateWithPath(path string) error {
	if _aabg := _eedaga.PresetClassAttr.ValidateWithPath(path + "\u002f\u0050r\u0065\u0073\u0065t\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _aabg != nil {
		return _aabg
	}
	if _eedaga.DurAttr != nil {
		if _bgabg := _eedaga.DurAttr.ValidateWithPath(path + "\u002f\u0044\u0075\u0072\u0041\u0074\u0074\u0072"); _bgabg != nil {
			return _bgabg
		}
	}
	if _eedaga.RepeatCountAttr != nil {
		if _eaceg := _eedaga.RepeatCountAttr.ValidateWithPath(path + "\u002f\u0052e\u0070\u0065\u0061t\u0043\u006f\u0075\u006e\u0074\u0041\u0074\u0074\u0072"); _eaceg != nil {
			return _eaceg
		}
	}
	if _eedaga.RepeatDurAttr != nil {
		if _bcbcc := _eedaga.RepeatDurAttr.ValidateWithPath(path + "\u002f\u0052\u0065\u0070\u0065\u0061\u0074\u0044\u0075r\u0041\u0074\u0074\u0072"); _bcbcc != nil {
			return _bcbcc
		}
	}
	if _eedaga.SpdAttr != nil {
		if _cfbbc := _eedaga.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _cfbbc != nil {
			return _cfbbc
		}
	}
	if _eedaga.AccelAttr != nil {
		if _dbca := _eedaga.AccelAttr.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _dbca != nil {
			return _dbca
		}
	}
	if _eedaga.DecelAttr != nil {
		if _fagae := _eedaga.DecelAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0063\u0065\u006c\u0041\u0074\u0074\u0072"); _fagae != nil {
			return _fagae
		}
	}
	if _bfgc := _eedaga.RestartAttr.ValidateWithPath(path + "\u002f\u0052\u0065s\u0074\u0061\u0072\u0074\u0041\u0074\u0074\u0072"); _bfgc != nil {
		return _bfgc
	}
	if _dgadg := _eedaga.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _dgadg != nil {
		return _dgadg
	}
	if _gefdg := _eedaga.SyncBehaviorAttr.ValidateWithPath(path + "\u002f\u0053\u0079\u006e\u0063\u0042\u0065\u0068\u0061\u0076\u0069\u006fr\u0041\u0074\u0074\u0072"); _gefdg != nil {
		return _gefdg
	}
	if _acad := _eedaga.MasterRelAttr.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0052\u0065l\u0041\u0074\u0074\u0072"); _acad != nil {
		return _acad
	}
	if _acdd := _eedaga.NodeTypeAttr.ValidateWithPath(path + "\u002f\u004e\u006f\u0064\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _acdd != nil {
		return _acdd
	}
	if _eedaga.StCondLst != nil {
		if _fdggg := _eedaga.StCondLst.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _fdggg != nil {
			return _fdggg
		}
	}
	if _eedaga.EndCondLst != nil {
		if _ebcac := _eedaga.EndCondLst.ValidateWithPath(path + "/\u0045\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _ebcac != nil {
			return _ebcac
		}
	}
	if _eedaga.EndSync != nil {
		if _fcded := _eedaga.EndSync.ValidateWithPath(path + "\u002f\u0045\u006e\u0064\u0053\u0079\u006e\u0063"); _fcded != nil {
			return _fcded
		}
	}
	if _eedaga.Iterate != nil {
		if _bfecd := _eedaga.Iterate.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u0072\u0061\u0074\u0065"); _bfecd != nil {
			return _bfecd
		}
	}
	if _eedaga.ChildTnLst != nil {
		if _aebfb := _eedaga.ChildTnLst.ValidateWithPath(path + "/\u0043\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"); _aebfb != nil {
			return _aebfb
		}
	}
	if _eedaga.SubTnLst != nil {
		if _dgaade := _eedaga.SubTnLst.ValidateWithPath(path + "\u002fS\u0075\u0062\u0054\u006e\u004c\u0073t"); _dgaade != nil {
			return _dgaade
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ShowInfoBrowse and its children, prefixing error messages with path
func (_fdgg *CT_ShowInfoBrowse) ValidateWithPath(path string) error { return nil }

type CT_GroupShapeNonVisual struct {

	// Non-visual Drawing Properties
	CNvPr *_ad.CT_NonVisualDrawingProps

	// Non-Visual Group Shape Drawing Properties
	CNvGrpSpPr *_ad.CT_NonVisualGroupDrawingShapeProps

	// Non-Visual Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

// Validate validates the CT_TLAnimVariantIntegerVal and its children
func (_acde *CT_TLAnimVariantIntegerVal) Validate() error {
	return _acde.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c")
}
func (_fgede *CT_TLBuildParagraph) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgede.BuildAttr != ST_TLParaBuildTypeUnset {
		_aggge, _dbdcf := _fgede.BuildAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0075\u0069l\u0064"})
		if _dbdcf != nil {
			return _dbdcf
		}
		start.Attr = append(start.Attr, _aggge)
	}
	if _fgede.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_fgede.BldLvlAttr)})
	}
	if _fgede.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fgede.AnimBgAttr))})
	}
	if _fgede.AutoUpdateAnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fgede.AutoUpdateAnimBgAttr))})
	}
	if _fgede.RevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fgede.RevAttr))})
	}
	if _fgede.AdvAutoAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061d\u0076\u0041\u0075\u0074\u006f"}, Value: _gc.Sprintf("\u0025\u0076", *_fgede.AdvAutoAttr)})
	}
	if _fgede.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_fgede.SpidAttr)})
	}
	if _fgede.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_fgede.GrpIdAttr)})
	}
	if _fgede.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fgede.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _fgede.TmplLst != nil {
		_dgbbc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0070\u006c\u004c\u0073t"}}
		e.EncodeElement(_fgede.TmplLst, _dgbbc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fgb *CT_EightDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgfg := range start.Attr {
		if _cgfg.Name.Local == "\u0064\u0069\u0072" {
			_dfdc, _gdga := ParseUnionST_TransitionEightDirectionType(_cgfg.Value)
			if _gdga != nil {
				return _gdga
			}
			_fgb.DirAttr = &_dfdc
			continue
		}
	}
	for {
		_ega, _ebgb := d.Token()
		if _ebgb != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0069g\u0068\u0074\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _ebgb)
		}
		if _eaceb, _edfb := _ega.(_d.EndElement); _edfb && _eaceb.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TLChartSubelementType byte

func (_dae *CT_EmbeddedFontDataId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _dae.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abdaf ST_TransitionCornerDirectionType) String() string {
	switch _abdaf {
	case 0:
		return ""
	case 1:
		return "\u006c\u0075"
	case 2:
		return "\u0072\u0075"
	case 3:
		return "\u006c\u0064"
	case 4:
		return "\u0072\u0064"
	}
	return ""
}

type ST_TransitionInOutDirectionType byte

// Validate validates the CT_TLByHslColorTransform and its children
func (_bcgdd *CT_TLByHslColorTransform) Validate() error {
	return _bcgdd.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}
func NewEG_ChildSlide() *EG_ChildSlide { _eacef := &EG_ChildSlide{}; return _eacef }
func (_acag ST_TLTimeNodeRestartType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcgf := _d.Attr{}
	_dcgf.Name = name
	switch _acag {
	case ST_TLTimeNodeRestartTypeUnset:
		_dcgf.Value = ""
	case ST_TLTimeNodeRestartTypeAlways:
		_dcgf.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	case ST_TLTimeNodeRestartTypeWhenNotActive:
		_dcgf.Value = "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case ST_TLTimeNodeRestartTypeNever:
		_dcgf.Value = "\u006e\u0065\u0076e\u0072"
	}
	return _dcgf, nil
}

// ValidateWithPath validates the CT_SplitTransition and its children, prefixing error messages with path
func (_bcgcc *CT_SplitTransition) ValidateWithPath(path string) error {
	if _ddcgd := _bcgcc.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _ddcgd != nil {
		return _ddcgd
	}
	if _cabc := _bcgcc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _cabc != nil {
		return _cabc
	}
	return nil
}
func NewCT_TagsData() *CT_TagsData { _adcaf := &CT_TagsData{}; return _adcaf }
func (_dedge ST_TransitionEightDirectionType) String() string {
	if _dedge.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		return _dedge.ST_TransitionSideDirectionType.String()
	}
	if _dedge.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		return _dedge.ST_TransitionCornerDirectionType.String()
	}
	return ""
}
func (_ggcaa ST_TLNextActionType) ValidateWithPath(path string) error {
	switch _ggcaa {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcaa))
	}
	return nil
}

type CT_SlideTransitionChoice struct {
	Blinds    *CT_OrientationTransition
	Checker   *CT_OrientationTransition
	Circle    *CT_Empty
	Dissolve  *CT_Empty
	Comb      *CT_OrientationTransition
	Cover     *CT_EightDirectionTransition
	Cut       *CT_OptionalBlackTransition
	Diamond   *CT_Empty
	Fade      *CT_OptionalBlackTransition
	Newsflash *CT_Empty
	Plus      *CT_Empty
	Pull      *CT_EightDirectionTransition
	Push      *CT_SideDirectionTransition
	Random    *CT_Empty
	RandomBar *CT_OrientationTransition
	Split     *CT_SplitTransition
	Strips    *CT_CornerDirectionTransition
	Wedge     *CT_Empty
	Wheel     *CT_WheelTransition
	Wipe      *CT_SideDirectionTransition
	Zoom      *CT_InOutTransition
}

func (_addee *SldSyncPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u0053\u0079\u006e\u0063\u0050\u0072"
	return _addee.CT_SlideSyncProperties.MarshalXML(e, start)
}
func (_dcfa *SldLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074"
	return _dcfa.CT_SlideLayout.MarshalXML(e, start)
}
func (_dbeac ST_PlaceholderType) ValidateWithPath(path string) error {
	switch _dbeac {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbeac))
	}
	return nil
}
func (_ebdf ST_TLTimeIndefinite) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebdf.String(), start)
}
func (_cbffb ST_OleObjectFollowColorScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cbffb.String(), start)
}
func (_fceec *EG_ExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fdced:
	for {
		_ggbgb, _dgbab := d.Token()
		if _dgbab != nil {
			return _dgbab
		}
		switch _ecgeb := _ggbgb.(type) {
		case _d.StartElement:
			switch _ecgeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_efbag := NewCT_Extension()
				if _gfdbf := d.DecodeElement(_efbag, &_ecgeb); _gfdbf != nil {
					return _gfdbf
				}
				_fceec.Ext = append(_fceec.Ext, _efbag)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _ecgeb.Name)
				if _adffg := d.Skip(); _adffg != nil {
					return _adffg
				}
			}
		case _d.EndElement:
			break _fdced
		case _d.CharData:
		}
	}
	return nil
}
func (_bdefe ST_TLChartSubelementType) String() string {
	switch _bdefe {
	case 0:
		return ""
	case 1:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return ""
}
func (_cdfeaf *ST_TransitionCornerDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cdfeaf = 0
	case "\u006c\u0075":
		*_cdfeaf = 1
	case "\u0072\u0075":
		*_cdfeaf = 2
	case "\u006c\u0064":
		*_cdfeaf = 3
	case "\u0072\u0064":
		*_cdfeaf = 4
	}
	return nil
}
func (_ccecfb *ST_TLBehaviorTransformType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_debee, _geddbd := d.Token()
	if _geddbd != nil {
		return _geddbd
	}
	if _aedfg, _fdecdg := _debee.(_d.EndElement); _fdecdg && _aedfg.Name == start.Name {
		*_ccecfb = 1
		return nil
	}
	if _bcbbb, _daccba := _debee.(_d.CharData); !_daccba {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _debee)
	} else {
		switch string(_bcbbb) {
		case "":
			*_ccecfb = 0
		case "\u0070\u0074":
			*_ccecfb = 1
		case "\u0069\u006d\u0067":
			*_ccecfb = 2
		}
	}
	_debee, _geddbd = d.Token()
	if _geddbd != nil {
		return _geddbd
	}
	if _fbaeb, _beadc := _debee.(_d.EndElement); _beadc && _fbaeb.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _debee)
}
func (_edcdd *CT_TLSetBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edcdd.CBhvr = NewCT_TLCommonBehaviorData()
_ccge:
	for {
		_gfcfe, _cabbc := d.Token()
		if _cabbc != nil {
			return _cabbc
		}
		switch _acgca := _gfcfe.(type) {
		case _d.StartElement:
			switch _acgca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _fdadd := d.DecodeElement(_edcdd.CBhvr, &_acgca); _fdadd != nil {
					return _fdadd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_edcdd.To = NewCT_TLAnimVariant()
				if _bfca := d.DecodeElement(_edcdd.To, &_acgca); _bfca != nil {
					return _bfca
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0065\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025v", _acgca.Name)
				if _bgcb := d.Skip(); _bgcb != nil {
					return _bgcb
				}
			}
		case _d.EndElement:
			break _ccge
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateEffectBehavior and its children, prefixing error messages with path
func (_cfafc *CT_TLAnimateEffectBehavior) ValidateWithPath(path string) error {
	if _gafcg := _cfafc.TransitionAttr.ValidateWithPath(path + "\u002fT\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _gafcg != nil {
		return _gafcg
	}
	if _cfeed := _cfafc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cfeed != nil {
		return _cfeed
	}
	if _cfafc.Progress != nil {
		if _dbdbe := _cfafc.Progress.ValidateWithPath(path + "\u002fP\u0072\u006f\u0067\u0072\u0065\u0073s"); _dbdbe != nil {
			return _dbdbe
		}
	}
	return nil
}

// ValidateWithPath validates the HandoutMaster and its children, prefixing error messages with path
func (_cfaef *HandoutMaster) ValidateWithPath(path string) error {
	if _ebccf := _cfaef.CT_HandoutMaster.ValidateWithPath(path); _ebccf != nil {
		return _ebccf
	}
	return nil
}
func (_gegca *ST_TLTime) Validate() error { return _gegca.ValidateWithPath("") }

// Validate validates the CT_HandoutMasterIdListEntry and its children
func (_dagc *CT_HandoutMasterIdListEntry) Validate() error {
	return _dagc.ValidateWithPath("C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079")
}

type ViewPr struct{ CT_ViewProperties }

func (_gbcf ST_TLAnimateEffectTransition) Validate() error { return _gbcf.ValidateWithPath("") }
func (_bgdb ST_TransitionSideDirectionType) String() string {
	switch _bgdb {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0075"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064"
	}
	return ""
}
func (_egbb ST_TLBehaviorAdditiveType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_egbb.String(), start)
}
func (_fbbcbc ST_TLAnimateBehaviorCalcMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdbdg := _d.Attr{}
	_bdbdg.Name = name
	switch _fbbcbc {
	case ST_TLAnimateBehaviorCalcModeUnset:
		_bdbdg.Value = ""
	case ST_TLAnimateBehaviorCalcModeDiscrete:
		_bdbdg.Value = "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case ST_TLAnimateBehaviorCalcModeLin:
		_bdbdg.Value = "\u006c\u0069\u006e"
	case ST_TLAnimateBehaviorCalcModeFmla:
		_bdbdg.Value = "\u0066\u006d\u006c\u0061"
	}
	return _bdbdg, nil
}
func NewCT_TLCommandBehavior() *CT_TLCommandBehavior {
	_fdbc := &CT_TLCommandBehavior{}
	_fdbc.CBhvr = NewCT_TLCommonBehaviorData()
	return _fdbc
}
func NewCT_WheelTransition() *CT_WheelTransition { _dgdbc := &CT_WheelTransition{}; return _dgdbc }
func NewCT_BackgroundProperties() *CT_BackgroundProperties {
	_afc := &CT_BackgroundProperties{}
	return _afc
}
func NewCT_TLBuildParagraph() *CT_TLBuildParagraph { _gedb := &CT_TLBuildParagraph{}; return _gedb }

// Validate validates the CT_HeaderFooter and its children
func (_aagcg *CT_HeaderFooter) Validate() error {
	return _aagcg.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// Validate validates the CT_TLTimeAnimateValue and its children
func (_gfgdc *CT_TLTimeAnimateValue) Validate() error {
	return _gfgdc.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065")
}
func NewCT_NotesViewProperties() *CT_NotesViewProperties {
	_ffef := &CT_NotesViewProperties{}
	_ffef.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _ffef
}
func (_bafe *CT_NormalViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bafe.ShowOutlineIconsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bafe.ShowOutlineIconsAttr))})
	}
	if _bafe.SnapVertSplitterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bafe.SnapVertSplitterAttr))})
	}
	if _bafe.VertBarStateAttr != ST_SplitterBarStateUnset {
		_bbbe, _face := _bafe.VertBarStateAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _face != nil {
			return _face
		}
		start.Attr = append(start.Attr, _bbbe)
	}
	if _bafe.HorzBarStateAttr != ST_SplitterBarStateUnset {
		_bcgdf, _gggcf := _bafe.HorzBarStateAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065"})
		if _gggcf != nil {
			return _gggcf
		}
		start.Attr = append(start.Attr, _bcgdf)
	}
	if _bafe.PreferSingleViewAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bafe.PreferSingleViewAttr))})
	}
	e.EncodeToken(start)
	_cbaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065d\u004c\u0065\u0066\u0074"}}
	e.EncodeElement(_bafe.RestoredLeft, _cbaa)
	_gaaba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}}
	e.EncodeElement(_bafe.RestoredTop, _gaaba)
	if _bafe.ExtLst != nil {
		_febf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bafe.ExtLst, _febf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLAnimVariantBooleanVal and its children
func (_bdccb *CT_TLAnimVariantBooleanVal) Validate() error {
	return _bdccb.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c")
}
func (_adf *CT_BackgroundProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dbe := range start.Attr {
		if _dbe.Name.Local == "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065" {
			_fff, _cfb := _dc.ParseBool(_dbe.Value)
			if _cfb != nil {
				return _cfb
			}
			_adf.ShadeToTitleAttr = &_fff
			continue
		}
	}
_ebc:
	for {
		_eaa, _eeg := d.Token()
		if _eeg != nil {
			return _eeg
		}
		switch _dgc := _eaa.(type) {
		case _d.StartElement:
			switch _dgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_adf.NoFill = _ad.NewCT_NoFillProperties()
				if _bcg := d.DecodeElement(_adf.NoFill, &_dgc); _bcg != nil {
					return _bcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_adf.SolidFill = _ad.NewCT_SolidColorFillProperties()
				if _ccd := d.DecodeElement(_adf.SolidFill, &_dgc); _ccd != nil {
					return _ccd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_adf.GradFill = _ad.NewCT_GradientFillProperties()
				if _ffd := d.DecodeElement(_adf.GradFill, &_dgc); _ffd != nil {
					return _ffd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_adf.BlipFill = _ad.NewCT_BlipFillProperties()
				if _eee := d.DecodeElement(_adf.BlipFill, &_dgc); _eee != nil {
					return _eee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_adf.PattFill = _ad.NewCT_PatternFillProperties()
				if _gcf := d.DecodeElement(_adf.PattFill, &_dgc); _gcf != nil {
					return _gcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_adf.GrpFill = _ad.NewCT_GroupFillProperties()
				if _eege := d.DecodeElement(_adf.GrpFill, &_dgc); _eege != nil {
					return _eege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_adf.EffectLst = _ad.NewCT_EffectList()
				if _bge := d.DecodeElement(_adf.EffectLst, &_dgc); _bge != nil {
					return _bge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_adf.EffectDag = _ad.NewCT_EffectContainer()
				if _gbe := d.DecodeElement(_adf.EffectDag, &_dgc); _gbe != nil {
					return _gbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adf.ExtLst = NewCT_ExtensionList()
				if _fe := d.DecodeElement(_adf.ExtLst, &_dgc); _fe != nil {
					return _fe
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _dgc.Name)
				if _cgba := d.Skip(); _cgba != nil {
					return _cgba
				}
			}
		case _d.EndElement:
			break _ebc
		case _d.CharData:
		}
	}
	return nil
}

type ST_PrintWhat byte

func (_fgeaa *ST_TLTimeAnimateValueTime) ValidateWithPath(path string) error {
	_fgebc := []string{}
	if _fgeaa.ST_PositiveFixedPercentage != nil {
		if _abbbc := _fgeaa.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _abbbc != nil {
			return _abbbc
		}
		_fgebc = append(_fgebc, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if _fgeaa.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_fgebc = append(_fgebc, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_fgebc) > 1 {
		return _gc.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _fgebc)
	}
	return nil
}

// ST_TLTime is a union type
type ST_TLTime struct {
	Uint32              *uint32
	ST_TLTimeIndefinite ST_TLTimeIndefinite
}

// Validate validates the CT_ExtensionListModify and its children
func (_aca *CT_ExtensionListModify) Validate() error {
	return _aca.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079")
}
func (_cbgd *CT_TLCommonMediaNodeData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbgd.VolAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u006f\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_cbgd.VolAttr)})
	}
	if _cbgd.MuteAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0075\u0074\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cbgd.MuteAttr))})
	}
	if _cbgd.NumSldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0075\u006d\u0053\u006c\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_cbgd.NumSldAttr)})
	}
	if _cbgd.ShowWhenStoppedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073h\u006fw\u0057\u0068\u0065\u006e\u0053\u0074\u006f\u0070\u0070\u0065\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cbgd.ShowWhenStoppedAttr))})
	}
	e.EncodeToken(start)
	_abedg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cbgd.CTn, _abedg)
	_eacaa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_cbgd.TgtEl, _eacaa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLAnimateBehaviorCalcModeUnset    ST_TLAnimateBehaviorCalcMode = 0
	ST_TLAnimateBehaviorCalcModeDiscrete ST_TLAnimateBehaviorCalcMode = 1
	ST_TLAnimateBehaviorCalcModeLin      ST_TLAnimateBehaviorCalcMode = 2
	ST_TLAnimateBehaviorCalcModeFmla     ST_TLAnimateBehaviorCalcMode = 3
)

func (_debc *CT_SlideViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fcdfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_debc.CSldViewPr, _fcdfb)
	if _debc.ExtLst != nil {
		_bgac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_debc.ExtLst, _bgac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SlideIdListEntry and its children, prefixing error messages with path
func (_cedf *CT_SlideIdListEntry) ValidateWithPath(path string) error {
	if _cedf.IdAttr < 256 {
		return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u0064A\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0032\u00356 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _cedf.IdAttr)
	}
	if _cedf.IdAttr >= 2147483648 {
		return _gc.Errorf("\u0025\u0073\u002fm\u002e\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cedf.IdAttr)
	}
	if _cedf.ExtLst != nil {
		if _dbac := _cedf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbac != nil {
			return _dbac
		}
	}
	return nil
}

type CT_SlideSyncProperties struct {

	// Server's Slide File ID
	ServerSldIdAttr string

	// Server's Slide File's modification date/time
	ServerSldModifiedTimeAttr _g.Time

	// Client Slide Insertion date/time
	ClientInsertedTimeAttr _g.Time
	ExtLst                 *CT_ExtensionList
}

// Validate validates the CT_TransitionStartSoundAction and its children
func (_cdecc *CT_TransitionStartSoundAction) Validate() error {
	return _cdecc.ValidateWithPath("\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e")
}
func (_afgcg *CT_TLTextTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afgcg.CharRg != nil {
		_bbfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0068\u0061\u0072\u0052\u0067"}}
		e.EncodeElement(_afgcg.CharRg, _bbfa)
	}
	if _afgcg.PRg != nil {
		_efeeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070R\u0067"}}
		e.EncodeElement(_afgcg.PRg, _efeeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddgafd *CT_TLTimeAnimateValue) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbgdf := range start.Attr {
		if _bbgdf.Name.Local == "\u0074\u006d" {
			_bdegf, _gdcbc := ParseUnionST_TLTimeAnimateValueTime(_bbgdf.Value)
			if _gdcbc != nil {
				return _gdcbc
			}
			_ddgafd.TmAttr = &_bdegf
			continue
		}
		if _bbgdf.Name.Local == "\u0066\u006d\u006c\u0061" {
			_fcdaf, _dbfebd := _bbgdf.Value, error(nil)
			if _dbfebd != nil {
				return _dbfebd
			}
			_ddgafd.FmlaAttr = &_fcdaf
			continue
		}
	}
_cgbae:
	for {
		_eacc, _bdaf := d.Token()
		if _bdaf != nil {
			return _bdaf
		}
		switch _gbfad := _eacc.(type) {
		case _d.StartElement:
			switch _gbfad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				_ddgafd.Val = NewCT_TLAnimVariant()
				if _ebfc := d.DecodeElement(_ddgafd.Val, &_gbfad); _ebfc != nil {
					return _ebfc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _gbfad.Name)
				if _ebfb := d.Skip(); _ebfb != nil {
					return _ebfb
				}
			}
		case _d.EndElement:
			break _cgbae
		case _d.CharData:
		}
	}
	return nil
}
func (_abcd *CT_Comment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _abcd.AuthorIdAttr)})
	if _abcd.DtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_abcd.DtAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _gc.Sprintf("\u0025\u0076", _abcd.IdxAttr)})
	e.EncodeToken(start)
	_ccae := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070o\u0073"}}
	e.EncodeElement(_abcd.Pos, _ccae)
	_caa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0065\u0078\u0074"}}
	_de.AddPreserveSpaceAttr(&_caa, _abcd.Text)
	e.EncodeElement(_abcd.Text, _caa)
	if _abcd.ExtLst != nil {
		_ada := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abcd.ExtLst, _ada)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExtensionListModify and its children, prefixing error messages with path
func (_ffb *CT_ExtensionListModify) ValidateWithPath(path string) error {
	for _edae, _dgda := range _ffb.Ext {
		if _cfcb := _dgda.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _edae)); _cfcb != nil {
			return _cfcb
		}
	}
	return nil
}
func (_afddc ST_TransitionSideDirectionType) ValidateWithPath(path string) error {
	switch _afddc {
	case 0, 1, 2, 3, 4:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afddc))
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontDataId and its children, prefixing error messages with path
func (_aae *CT_EmbeddedFontDataId) ValidateWithPath(path string) error { return nil }

type CT_TLBuildDiagram struct {

	// Diagram Build Types
	BldAttr      ST_TLDiagramBuildType
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_bdgfb *EG_SlideListChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fbcg:
	for {
		_gceee, _ebgaf := d.Token()
		if _ebgaf != nil {
			return _ebgaf
		}
		switch _ggagf := _gceee.(type) {
		case _d.StartElement:
			switch _ggagf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_bdgfb.SldAll = NewCT_Empty()
				if _ebgea := d.DecodeElement(_bdgfb.SldAll, &_ggagf); _ebgea != nil {
					return _ebgea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_bdgfb.SldRg = NewCT_IndexRange()
				if _fgcca := d.DecodeElement(_bdgfb.SldRg, &_ggagf); _fgcca != nil {
					return _fgcca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bdgfb.CustShow = NewCT_CustomShowId()
				if _aaefg := d.DecodeElement(_bdgfb.CustShow, &_ggagf); _aaefg != nil {
					return _aaefg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u006c\u0069\u0064\u0065\u004ci\u0073\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ggagf.Name)
				if _bdaab := d.Skip(); _bdaab != nil {
					return _bdaab
				}
			}
		case _d.EndElement:
			break _fbcg
		case _d.CharData:
		}
	}
	return nil
}
func (_egcbg *ViewPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0076\u0069\u0065\u0077\u0050\u0072"
	return _egcbg.CT_ViewProperties.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_TLTimeAnimateValueList and its children, prefixing error messages with path
func (_dbgeg *CT_TLTimeAnimateValueList) ValidateWithPath(path string) error {
	for _dbad, _bgge := range _dbgeg.Tav {
		if _dddbfc := _bgge.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0076\u005b\u0025\u0064\u005d", path, _dbad)); _dddbfc != nil {
			return _dddbfc
		}
	}
	return nil
}

// Validate validates the Sld and its children
func (_ebeag *Sld) Validate() error { return _ebeag.ValidateWithPath("\u0053\u006c\u0064") }

// ValidateWithPath validates the CT_Slide and its children, prefixing error messages with path
func (_aaabe *CT_Slide) ValidateWithPath(path string) error {
	if _bcga := _aaabe.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _bcga != nil {
		return _bcga
	}
	if _aaabe.ClrMapOvr != nil {
		if _aabdd := _aaabe.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _aabdd != nil {
			return _aabdd
		}
	}
	if _aaabe.Transition != nil {
		if _dfcf := _aaabe.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _dfcf != nil {
			return _dfcf
		}
	}
	if _aaabe.Timing != nil {
		if _gaadd := _aaabe.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _gaadd != nil {
			return _gaadd
		}
	}
	if _aaabe.ExtLst != nil {
		if _ebgf := _aaabe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebgf != nil {
			return _ebgf
		}
	}
	return nil
}
func NewCT_Shape() *CT_Shape {
	_addc := &CT_Shape{}
	_addc.NvSpPr = NewCT_ShapeNonVisual()
	_addc.SpPr = _ad.NewCT_ShapeProperties()
	return _addc
}

// ValidateWithPath validates the CT_HandoutMasterIdListEntry and its children, prefixing error messages with path
func (_gcgg *CT_HandoutMasterIdListEntry) ValidateWithPath(path string) error {
	if _gcgg.ExtLst != nil {
		if _aedg := _gcgg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aedg != nil {
			return _aedg
		}
	}
	return nil
}
func (_gbb *CT_CommonSlideData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gbb.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_gbb.NameAttr)})
	}
	e.EncodeToken(start)
	if _gbb.Bg != nil {
		_fdb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_gbb.Bg, _fdb)
	}
	_dbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0054\u0072\u0065\u0065"}}
	e.EncodeElement(_gbb.SpTree, _dbf)
	if _gbb.CustDataLst != nil {
		_ddg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_gbb.CustDataLst, _ddg)
	}
	if _gbb.Controls != nil {
		_bcbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_gbb.Controls, _bcbb)
	}
	if _gbb.ExtLst != nil {
		_fabg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbb.ExtLst, _fabg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TagsData and its children, prefixing error messages with path
func (_dfbcc *CT_TagsData) ValidateWithPath(path string) error { return nil }
func (_afd *CT_CommonViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_afd.Scale = _ad.NewCT_Scale2D()
	_afd.Origin = _ad.NewCT_Point2D()
	for _, _ddfc := range start.Attr {
		if _ddfc.Name.Local == "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065" {
			_dafg, _ege := _dc.ParseBool(_ddfc.Value)
			if _ege != nil {
				return _ege
			}
			_afd.VarScaleAttr = &_dafg
			continue
		}
	}
_dagd:
	for {
		_fgf, _babf := d.Token()
		if _babf != nil {
			return _babf
		}
		switch _cfed := _fgf.(type) {
		case _d.StartElement:
			switch _cfed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0061l\u0065"}:
				if _aggf := d.DecodeElement(_afd.Scale, &_cfed); _aggf != nil {
					return _aggf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0072\u0069\u0067\u0069\u006e"}:
				if _aeef := d.DecodeElement(_afd.Origin, &_cfed); _aeef != nil {
					return _aeef
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006e\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _cfed.Name)
				if _gadc := d.Skip(); _gadc != nil {
					return _gadc
				}
			}
		case _d.EndElement:
			break _dagd
		case _d.CharData:
		}
	}
	return nil
}

type CT_Control struct {
	ExtLst         *CT_ExtensionList
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

func (_gdedb *ST_TLTimeNodeMasterRelation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgbgd, _fdggfe := d.Token()
	if _fdggfe != nil {
		return _fdggfe
	}
	if _dcgg, _cgcd := _fgbgd.(_d.EndElement); _cgcd && _dcgg.Name == start.Name {
		*_gdedb = 1
		return nil
	}
	if _ecbef, _dbbe := _fgbgd.(_d.CharData); !_dbbe {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgbgd)
	} else {
		switch string(_ecbef) {
		case "":
			*_gdedb = 0
		case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
			*_gdedb = 1
		case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
			*_gdedb = 2
		case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
			*_gdedb = 3
		}
	}
	_fgbgd, _fdggfe = d.Token()
	if _fdggfe != nil {
		return _fdggfe
	}
	if _gafbd, _bcgce := _fgbgd.(_d.EndElement); _bcgce && _gafbd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgbgd)
}
func (_gefeg ST_PrintWhat) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gefeg.String(), start)
}
func (_faae *CT_StringTag) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfgfec := range start.Attr {
		if _bfgfec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bfbbc, _becdgf := _bfgfec.Value, error(nil)
			if _becdgf != nil {
				return _becdgf
			}
			_faae.NameAttr = _bfbbc
			continue
		}
		if _bfgfec.Name.Local == "\u0076\u0061\u006c" {
			_gegd, _cfccc := _bfgfec.Value, error(nil)
			if _cfccc != nil {
				return _cfccc
			}
			_faae.ValAttr = _gegd
			continue
		}
	}
	for {
		_cdab, _dbgg := d.Token()
		if _dbgg != nil {
			return _gc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0074r\u0069\u006e\u0067\u0054\u0061\u0067\u003a\u0020\u0025\u0073", _dbgg)
		}
		if _fgba, _dgad := _cdab.(_d.EndElement); _dgad && _fgba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdfee ST_TLAnimateBehaviorValueType) String() string {
	switch _bdfee {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072"
	case 2:
		return "\u006e\u0075\u006d"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}

// Validate validates the CT_WheelTransition and its children
func (_aadda *CT_WheelTransition) Validate() error {
	return _aadda.ValidateWithPath("\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

const (
	ST_PhotoAlbumLayoutUnset      ST_PhotoAlbumLayout = 0
	ST_PhotoAlbumLayoutFitToSlide ST_PhotoAlbumLayout = 1
	ST_PhotoAlbumLayout1pic       ST_PhotoAlbumLayout = 2
	ST_PhotoAlbumLayout2pic       ST_PhotoAlbumLayout = 3
	ST_PhotoAlbumLayout4pic       ST_PhotoAlbumLayout = 4
	ST_PhotoAlbumLayout1picTitle  ST_PhotoAlbumLayout = 5
	ST_PhotoAlbumLayout2picTitle  ST_PhotoAlbumLayout = 6
	ST_PhotoAlbumLayout4picTitle  ST_PhotoAlbumLayout = 7
)

type CT_SlideIdListEntry struct {

	// Slide Identifier
	IdAttr  uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}
type CT_OutlineViewSlideEntry struct {
	IdAttr string

	// Collapsed
	CollapseAttr *bool
}
type CmLst struct{ CT_CommentList }

func (_fagag *CT_SlideMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgcae := range start.Attr {
		if _dgcae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dgcae.Name.Local == "\u0069\u0064" || _dgcae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dgcae.Name.Local == "\u0069\u0064" {
			_abbg, _gddc := _dgcae.Value, error(nil)
			if _gddc != nil {
				return _gddc
			}
			_fagag.RIdAttr = _abbg
			continue
		}
		if _dgcae.Name.Local == "\u0069\u0064" {
			_egfc, _dbcda := _dc.ParseUint(_dgcae.Value, 10, 32)
			if _dbcda != nil {
				return _dbcda
			}
			_cabbg := uint32(_egfc)
			_fagag.IdAttr = &_cabbg
			continue
		}
	}
_cbedb:
	for {
		_bdaca, _babg := d.Token()
		if _babg != nil {
			return _babg
		}
		switch _aecdae := _bdaca.(type) {
		case _d.StartElement:
			switch _aecdae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fagag.ExtLst = NewCT_ExtensionList()
				if _bdad := d.DecodeElement(_fagag.ExtLst, &_aecdae); _bdad != nil {
					return _bdad
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _aecdae.Name)
				if _abbd := d.Skip(); _abbd != nil {
					return _abbd
				}
			}
		case _d.EndElement:
			break _cbedb
		case _d.CharData:
		}
	}
	return nil
}
func (_gcfd ST_TLAnimateMotionPathEditMode) String() string {
	switch _gcfd {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case 2:
		return "\u0066\u0069\u0078e\u0064"
	}
	return ""
}
func NewCT_CustomerDataList() *CT_CustomerDataList { _bfec := &CT_CustomerDataList{}; return _bfec }
func (_geaf ST_TLAnimateMotionPathEditMode) ValidateWithPath(path string) error {
	switch _geaf {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_geaf))
	}
	return nil
}

type CT_SlideSize struct {

	// Extent Length
	CxAttr int32

	// Extent Width
	CyAttr int32

	// Type of Size
	TypeAttr ST_SlideSizeType
}

func (_fcaab *CT_TLTemplate) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcaab.TnLst = NewCT_TimeNodeList()
	for _, _eabdg := range start.Attr {
		if _eabdg.Name.Local == "\u006c\u0076\u006c" {
			_ggfc, _cfbcff := _dc.ParseUint(_eabdg.Value, 10, 32)
			if _cfbcff != nil {
				return _cfbcff
			}
			_bcebd := uint32(_ggfc)
			_fcaab.LvlAttr = &_bcebd
			continue
		}
	}
_ggbd:
	for {
		_ggeeg, _cgee := d.Token()
		if _cgee != nil {
			return _cgee
		}
		switch _effgf := _ggeeg.(type) {
		case _d.StartElement:
			switch _effgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				if _cbce := d.DecodeElement(_fcaab.TnLst, &_effgf); _cbce != nil {
					return _cbce
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054L\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065 \u0025\u0076", _effgf.Name)
				if _decgd := d.Skip(); _decgd != nil {
					return _decgd
				}
			}
		case _d.EndElement:
			break _ggbd
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLAnimateMotionBehaviorOriginUnset  ST_TLAnimateMotionBehaviorOrigin = 0
	ST_TLAnimateMotionBehaviorOriginParent ST_TLAnimateMotionBehaviorOrigin = 1
	ST_TLAnimateMotionBehaviorOriginLayout ST_TLAnimateMotionBehaviorOrigin = 2
)

func (_fccdg *CT_Shape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fccdg.UseBgFillAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fccdg.UseBgFillAttr))})
	}
	e.EncodeToken(start)
	_efbaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fccdg.NvSpPr, _efbaa)
	_gddg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fccdg.SpPr, _gddg)
	if _fccdg.Style != nil {
		_cafaa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fccdg.Style, _cafaa)
	}
	if _fccdg.TxBody != nil {
		_cdefc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_fccdg.TxBody, _cdefc)
	}
	if _fccdg.ExtLst != nil {
		_agfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fccdg.ExtLst, _agfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_NotesMaster() *CT_NotesMaster {
	_gcadb := &CT_NotesMaster{}
	_gcadb.CSld = NewCT_CommonSlideData()
	_gcadb.ClrMap = _ad.NewCT_ColorMapping()
	return _gcadb
}
func (_gacfg *CT_NotesViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gacfg.CSldViewPr = NewCT_CommonSlideViewProperties()
_dfdb:
	for {
		_dcbd, _gdcb := d.Token()
		if _gdcb != nil {
			return _gdcb
		}
		switch _aagb := _dcbd.(type) {
		case _d.StartElement:
			switch _aagb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _ddeg := d.DecodeElement(_gacfg.CSldViewPr, &_aagb); _ddeg != nil {
					return _ddeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gacfg.ExtLst = NewCT_ExtensionList()
				if _bgee := d.DecodeElement(_gacfg.ExtLst, &_aagb); _bgee != nil {
					return _bgee
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004e\u006f\u0074\u0065s\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aagb.Name)
				if _fgeb := d.Skip(); _fgeb != nil {
					return _fgeb
				}
			}
		case _d.EndElement:
			break _dfdb
		case _d.CharData:
		}
	}
	return nil
}
func (_ggbgg *CT_TransitionSoundAction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ggbgg.StSnd != nil {
		_fcef := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0053\u006e\u0064"}}
		e.EncodeElement(_ggbgg.StSnd, _fcef)
	}
	if _ggbgg.EndSnd != nil {
		_gbgcf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006e\u0064\u0053\u006e\u0064"}}
		e.EncodeElement(_ggbgg.EndSnd, _gbgcf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbd *CT_Background) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbd.BwModeAttr != _ad.ST_BlackWhiteModeUnset {
		_eca, _ebg := _fbd.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _ebg != nil {
			return _ebg
		}
		start.Attr = append(start.Attr, _eca)
	}
	e.EncodeToken(start)
	if _fbd.BgPr != nil {
		_ecgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_fbd.BgPr, _ecgc)
	}
	if _fbd.BgRef != nil {
		_dgd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_fbd.BgRef, _dgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PresentationProperties and its children, prefixing error messages with path
func (_bfbe *CT_PresentationProperties) ValidateWithPath(path string) error {
	if _bfbe.HtmlPubPr != nil {
		if _dfdfc := _bfbe.HtmlPubPr.ValidateWithPath(path + "\u002f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u0050\u0072"); _dfdfc != nil {
			return _dfdfc
		}
	}
	if _bfbe.WebPr != nil {
		if _gcdab := _bfbe.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _gcdab != nil {
			return _gcdab
		}
	}
	if _bfbe.PrnPr != nil {
		if _ebaggd := _bfbe.PrnPr.ValidateWithPath(path + "\u002f\u0050\u0072\u006e\u0050\u0072"); _ebaggd != nil {
			return _ebaggd
		}
	}
	if _bfbe.ShowPr != nil {
		if _ggee := _bfbe.ShowPr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0050\u0072"); _ggee != nil {
			return _ggee
		}
	}
	if _bfbe.ClrMru != nil {
		if _bbeg := _bfbe.ClrMru.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0072\u0075"); _bbeg != nil {
			return _bbeg
		}
	}
	if _bfbe.ExtLst != nil {
		if _dcd := _bfbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcd != nil {
			return _dcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideList and its children, prefixing error messages with path
func (_bebb *CT_OutlineViewSlideList) ValidateWithPath(path string) error {
	for _edeg, _ebagg := range _bebb.Sld {
		if _defb := _ebagg.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _edeg)); _defb != nil {
			return _defb
		}
	}
	return nil
}

// Validate validates the CT_SlideLayoutIdListEntry and its children
func (_bcgggb *CT_SlideLayoutIdListEntry) Validate() error {
	return _bcgggb.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}
func (_cbgdf *CT_TLTimeTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bddbd:
	for {
		_gbgbd, _eagdd := d.Token()
		if _eagdd != nil {
			return _eagdd
		}
		switch _efbaba := _gbgbd.(type) {
		case _d.StartElement:
			switch _efbaba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0054\u0067\u0074"}:
				_cbgdf.SldTgt = NewCT_Empty()
				if _dafde := d.DecodeElement(_cbgdf.SldTgt, &_efbaba); _dafde != nil {
					return _dafde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064\u0054\u0067\u0074"}:
				_cbgdf.SndTgt = _ad.NewCT_EmbeddedWAVAudioFile()
				if _ddaba := d.DecodeElement(_cbgdf.SndTgt, &_efbaba); _ddaba != nil {
					return _ddaba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054g\u0074"}:
				_cbgdf.SpTgt = NewCT_TLShapeTargetElement()
				if _abgfg := d.DecodeElement(_cbgdf.SpTgt, &_efbaba); _abgfg != nil {
					return _abgfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u006b\u0054\u0067\u0074"}:
				_cbgdf.InkTgt = NewCT_TLSubShapeId()
				if _bedef := d.DecodeElement(_cbgdf.InkTgt, &_efbaba); _bedef != nil {
					return _bedef
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _efbaba.Name)
				if _efbda := d.Skip(); _efbda != nil {
					return _efbda
				}
			}
		case _d.EndElement:
			break _bddbd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _fgcgd := &CT_HeaderFooter{}; return _fgcgd }
func (_ccgfa *ST_TLAnimateMotionPathEditMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbgcd, _dfcec := d.Token()
	if _dfcec != nil {
		return _dfcec
	}
	if _fgfef, _aaafd := _dbgcd.(_d.EndElement); _aaafd && _fgfef.Name == start.Name {
		*_ccgfa = 1
		return nil
	}
	if _cegde, _dfcab := _dbgcd.(_d.CharData); !_dfcab {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbgcd)
	} else {
		switch string(_cegde) {
		case "":
			*_ccgfa = 0
		case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
			*_ccgfa = 1
		case "\u0066\u0069\u0078e\u0064":
			*_ccgfa = 2
		}
	}
	_dbgcd, _dfcec = d.Token()
	if _dfcec != nil {
		return _dfcec
	}
	if _gccd, _eefeg := _dbgcd.(_d.EndElement); _eefeg && _gccd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbgcd)
}
func (_efecb *CT_SlideTiming) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddca:
	for {
		_badd, _fdfad := d.Token()
		if _fdfad != nil {
			return _fdfad
		}
		switch _daeef := _badd.(type) {
		case _d.StartElement:
			switch _daeef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006e\u004cs\u0074"}:
				_efecb.TnLst = NewCT_TimeNodeList()
				if _bbdb := d.DecodeElement(_efecb.TnLst, &_daeef); _bbdb != nil {
					return _bbdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u004c\u0073\u0074"}:
				_efecb.BldLst = NewCT_BuildList()
				if _ggdb := d.DecodeElement(_efecb.BldLst, &_daeef); _ggdb != nil {
					return _ggdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efecb.ExtLst = NewCT_ExtensionListModify()
				if _affa := d.DecodeElement(_efecb.ExtLst, &_daeef); _affa != nil {
					return _affa
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0069m\u0069n\u0067\u0020\u0025\u0076", _daeef.Name)
				if _gfgde := d.Skip(); _gfgde != nil {
					return _gfgde
				}
			}
		case _d.EndElement:
			break _ddca
		case _d.CharData:
		}
	}
	return nil
}
func (_bfcc *CT_Control) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcga := range start.Attr {
		if _dcga.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcga.Name.Local == "\u0069\u0064" {
			_edg, _dfd := _dcga.Value, error(nil)
			if _dfd != nil {
				return _dfd
			}
			_bfcc.IdAttr = &_edg
			continue
		}
		if _dcga.Name.Local == "\u0073\u0070\u0069\u0064" {
			_ffcd, _cadg := _dcga.Value, error(nil)
			if _cadg != nil {
				return _cadg
			}
			_bfcc.SpidAttr = &_ffcd
			continue
		}
		if _dcga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_deca, _fdg := _dcga.Value, error(nil)
			if _fdg != nil {
				return _fdg
			}
			_bfcc.NameAttr = &_deca
			continue
		}
		if _dcga.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_gcab, _facc := _dc.ParseBool(_dcga.Value)
			if _facc != nil {
				return _facc
			}
			_bfcc.ShowAsIconAttr = &_gcab
			continue
		}
		if _dcga.Name.Local == "\u0069\u006d\u0067\u0057" {
			_edc, _gbgb := _dc.ParseInt(_dcga.Value, 10, 32)
			if _gbgb != nil {
				return _gbgb
			}
			_dffba := int32(_edc)
			_bfcc.ImgWAttr = &_dffba
			continue
		}
		if _dcga.Name.Local == "\u0069\u006d\u0067\u0048" {
			_feca, _fcbc := _dc.ParseInt(_dcga.Value, 10, 32)
			if _fcbc != nil {
				return _fcbc
			}
			_ccf := int32(_feca)
			_bfcc.ImgHAttr = &_ccf
			continue
		}
	}
_cda:
	for {
		_afec, _fcc := d.Token()
		if _fcc != nil {
			return _fcc
		}
		switch _daga := _afec.(type) {
		case _d.StartElement:
			switch _daga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfcc.ExtLst = NewCT_ExtensionList()
				if _agcg := d.DecodeElement(_bfcc.ExtLst, &_daga); _agcg != nil {
					return _agcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bfcc.Pic = NewCT_Picture()
				if _cgfe := d.DecodeElement(_bfcc.Pic, &_daga); _cgfe != nil {
					return _cgfe
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _daga.Name)
				if _cag := d.Skip(); _cag != nil {
					return _cag
				}
			}
		case _d.EndElement:
			break _cda
		case _d.CharData:
		}
	}
	return nil
}
func (_dbee *CT_CustomShow) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbee.SldLst = NewCT_SlideRelationshipList()
	for _, _bgef := range start.Attr {
		if _bgef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ddag, _gaa := _bgef.Value, error(nil)
			if _gaa != nil {
				return _gaa
			}
			_dbee.NameAttr = _ddag
			continue
		}
		if _bgef.Name.Local == "\u0069\u0064" {
			_eebc, _edga := _dc.ParseUint(_bgef.Value, 10, 32)
			if _edga != nil {
				return _edga
			}
			_dbee.IdAttr = uint32(_eebc)
			continue
		}
	}
_fee:
	for {
		_cbeb, _eebcg := d.Token()
		if _eebcg != nil {
			return _eebcg
		}
		switch _edcd := _cbeb.(type) {
		case _d.StartElement:
			switch _edcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0073\u0074"}:
				if _eeed := d.DecodeElement(_dbee.SldLst, &_edcd); _eeed != nil {
					return _eeed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbee.ExtLst = NewCT_ExtensionList()
				if _gefa := d.DecodeElement(_dbee.ExtLst, &_edcd); _gefa != nil {
					return _gefa
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043u\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077 \u0025\u0076", _edcd.Name)
				if _faa := d.Skip(); _faa != nil {
					return _faa
				}
			}
		case _d.EndElement:
			break _fee
		case _d.CharData:
		}
	}
	return nil
}
func (_eaeba *CT_TLTriggerTimeNodeID) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abdf := range start.Attr {
		if _abdf.Name.Local == "\u0076\u0061\u006c" {
			_aagd, _efeg := _dc.ParseUint(_abdf.Value, 10, 32)
			if _efeg != nil {
				return _efeg
			}
			_eaeba.ValAttr = uint32(_aagd)
			continue
		}
	}
	for {
		_ddaa, _efgab := d.Token()
		if _efgab != nil {
			return _gc.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0054r\u0069g\u0067e\u0072T\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0049\u0044\u003a\u0020\u0025\u0073", _efgab)
		}
		if _fgfb, _becfg := _ddaa.(_d.EndElement); _becfg && _fgfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcece *CT_Picture) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dgba := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_fcece.NvPicPr, _dgba)
	_cgde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_fcece.BlipFill, _cgde)
	_accc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fcece.SpPr, _accc)
	if _fcece.Style != nil {
		_dccd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fcece.Style, _dccd)
	}
	if _fcece.ExtLst != nil {
		_bedg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fcece.ExtLst, _bedg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgcf *CT_SlideTransitionChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fdfdg:
	for {
		_fcdge, _cddfc := d.Token()
		if _cddfc != nil {
			return _cddfc
		}
		switch _eefbe := _fcdge.(type) {
		case _d.StartElement:
			switch _eefbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_cgcf.Blinds = NewCT_OrientationTransition()
				if _cgcfc := d.DecodeElement(_cgcf.Blinds, &_eefbe); _cgcfc != nil {
					return _cgcfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_cgcf.Checker = NewCT_OrientationTransition()
				if _fgbec := d.DecodeElement(_cgcf.Checker, &_eefbe); _fgbec != nil {
					return _fgbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_cgcf.Circle = NewCT_Empty()
				if _dagaa := d.DecodeElement(_cgcf.Circle, &_eefbe); _dagaa != nil {
					return _dagaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_cgcf.Dissolve = NewCT_Empty()
				if _fdgee := d.DecodeElement(_cgcf.Dissolve, &_eefbe); _fdgee != nil {
					return _fdgee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_cgcf.Comb = NewCT_OrientationTransition()
				if _dagaf := d.DecodeElement(_cgcf.Comb, &_eefbe); _dagaf != nil {
					return _dagaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_cgcf.Cover = NewCT_EightDirectionTransition()
				if _fgge := d.DecodeElement(_cgcf.Cover, &_eefbe); _fgge != nil {
					return _fgge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_cgcf.Cut = NewCT_OptionalBlackTransition()
				if _fafc := d.DecodeElement(_cgcf.Cut, &_eefbe); _fafc != nil {
					return _fafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_cgcf.Diamond = NewCT_Empty()
				if _dgee := d.DecodeElement(_cgcf.Diamond, &_eefbe); _dgee != nil {
					return _dgee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_cgcf.Fade = NewCT_OptionalBlackTransition()
				if _dddc := d.DecodeElement(_cgcf.Fade, &_eefbe); _dddc != nil {
					return _dddc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_cgcf.Newsflash = NewCT_Empty()
				if _ddbg := d.DecodeElement(_cgcf.Newsflash, &_eefbe); _ddbg != nil {
					return _ddbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_cgcf.Plus = NewCT_Empty()
				if _gcca := d.DecodeElement(_cgcf.Plus, &_eefbe); _gcca != nil {
					return _gcca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_cgcf.Pull = NewCT_EightDirectionTransition()
				if _bacee := d.DecodeElement(_cgcf.Pull, &_eefbe); _bacee != nil {
					return _bacee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_cgcf.Push = NewCT_SideDirectionTransition()
				if _efad := d.DecodeElement(_cgcf.Push, &_eefbe); _efad != nil {
					return _efad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_cgcf.Random = NewCT_Empty()
				if _gafd := d.DecodeElement(_cgcf.Random, &_eefbe); _gafd != nil {
					return _gafd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_cgcf.RandomBar = NewCT_OrientationTransition()
				if _cccb := d.DecodeElement(_cgcf.RandomBar, &_eefbe); _cccb != nil {
					return _cccb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_cgcf.Split = NewCT_SplitTransition()
				if _gdbcf := d.DecodeElement(_cgcf.Split, &_eefbe); _gdbcf != nil {
					return _gdbcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_cgcf.Strips = NewCT_CornerDirectionTransition()
				if _efecf := d.DecodeElement(_cgcf.Strips, &_eefbe); _efecf != nil {
					return _efecf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_cgcf.Wedge = NewCT_Empty()
				if _babd := d.DecodeElement(_cgcf.Wedge, &_eefbe); _babd != nil {
					return _babd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_cgcf.Wheel = NewCT_WheelTransition()
				if _eagc := d.DecodeElement(_cgcf.Wheel, &_eefbe); _eagc != nil {
					return _eagc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_cgcf.Wipe = NewCT_SideDirectionTransition()
				if _degce := d.DecodeElement(_cgcf.Wipe, &_eefbe); _degce != nil {
					return _degce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_cgcf.Zoom = NewCT_InOutTransition()
				if _fcbdf := d.DecodeElement(_cgcf.Zoom, &_eefbe); _fcbdf != nil {
					return _fcbdf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _eefbe.Name)
				if _agce := d.Skip(); _agce != nil {
					return _agce
				}
			}
		case _d.EndElement:
			break _fdfdg
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_EmbeddedFontListEntry and its children, prefixing error messages with path
func (_cfge *CT_EmbeddedFontListEntry) ValidateWithPath(path string) error {
	if _beb := _cfge.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _beb != nil {
		return _beb
	}
	if _cfge.Regular != nil {
		if _dgbb := _cfge.Regular.ValidateWithPath(path + "\u002f\u0052\u0065\u0067\u0075\u006c\u0061\u0072"); _dgbb != nil {
			return _dgbb
		}
	}
	if _cfge.Bold != nil {
		if _afag := _cfge.Bold.ValidateWithPath(path + "\u002f\u0042\u006fl\u0064"); _afag != nil {
			return _afag
		}
	}
	if _cfge.Italic != nil {
		if _ccfc := _cfge.Italic.ValidateWithPath(path + "\u002fI\u0074\u0061\u006c\u0069\u0063"); _ccfc != nil {
			return _ccfc
		}
	}
	if _cfge.BoldItalic != nil {
		if _gda := _cfge.BoldItalic.ValidateWithPath(path + "/\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"); _gda != nil {
			return _gda
		}
	}
	return nil
}

type CT_SlideTransition struct {

	// Transition Speed
	SpdAttr ST_TransitionSpeed

	// Advance on Click
	AdvClickAttr *bool

	// Advance after time
	AdvTmAttr *uint32
	Choice    *CT_SlideTransitionChoice

	// Sound Action
	SndAc  *CT_TransitionSoundAction
	ExtLst *CT_ExtensionListModify
}

func (_aagc *CT_Control) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aagc.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_aagc.SpidAttr)})
	}
	if _aagc.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_aagc.NameAttr)})
	}
	if _aagc.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_aagc.ShowAsIconAttr))})
	}
	if _aagc.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_aagc.IdAttr)})
	}
	if _aagc.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _gc.Sprintf("\u0025\u0076", *_aagc.ImgWAttr)})
	}
	if _aagc.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _gc.Sprintf("\u0025\u0076", *_aagc.ImgHAttr)})
	}
	e.EncodeToken(start)
	if _aagc.ExtLst != nil {
		_cec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aagc.ExtLst, _cec)
	}
	if _aagc.Pic != nil {
		_bgga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_aagc.Pic, _bgga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLTemplateList struct {

	// Template Effects
	Tmpl []*CT_TLTemplate
}
type CT_CustomerDataList struct {

	// Customer Data
	CustData []*CT_CustomerData

	// Customer Data Tags
	Tags *CT_TagsData
}

func NewCT_Presentation() *CT_Presentation {
	_fcdc := &CT_Presentation{}
	_fcdc.NotesSz = _ad.NewCT_PositiveSize2D()
	return _fcdc
}
func (_aeaf *CT_PresentationProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dadd:
	for {
		_fefc, _gffb := d.Token()
		if _gffb != nil {
			return _gffb
		}
		switch _adbef := _fefc.(type) {
		case _d.StartElement:
			switch _adbef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_aeaf.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _geefb := d.DecodeElement(_aeaf.HtmlPubPr, &_adbef); _geefb != nil {
					return _geefb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_aeaf.WebPr = NewCT_WebProperties()
				if _dgca := d.DecodeElement(_aeaf.WebPr, &_adbef); _dgca != nil {
					return _dgca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_aeaf.PrnPr = NewCT_PrintProperties()
				if _efce := d.DecodeElement(_aeaf.PrnPr, &_adbef); _efce != nil {
					return _efce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_aeaf.ShowPr = NewCT_ShowProperties()
				if _cbff := d.DecodeElement(_aeaf.ShowPr, &_adbef); _cbff != nil {
					return _cbff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_aeaf.ClrMru = _ad.NewCT_ColorMRU()
				if _gfga := d.DecodeElement(_aeaf.ClrMru, &_adbef); _gfga != nil {
					return _gfga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeaf.ExtLst = NewCT_ExtensionList()
				if _adff := d.DecodeElement(_aeaf.ExtLst, &_adbef); _adff != nil {
					return _adff
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061t\u0069o\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _adbef.Name)
				if _fdaea := d.Skip(); _fdaea != nil {
					return _fdaea
				}
			}
		case _d.EndElement:
			break _dadd
		case _d.CharData:
		}
	}
	return nil
}
func (_eecfcf *CT_TLTimeNodeExclusive) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_edfef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_eecfcf.CTn, _edfef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eefad *ST_IterateType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edbfc, _bbbee := d.Token()
	if _bbbee != nil {
		return _bbbee
	}
	if _dccgf, _gdaae := _edbfc.(_d.EndElement); _gdaae && _dccgf.Name == start.Name {
		*_eefad = 1
		return nil
	}
	if _ccab, _fdgcg := _edbfc.(_d.CharData); !_fdgcg {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edbfc)
	} else {
		switch string(_ccab) {
		case "":
			*_eefad = 0
		case "\u0065\u006c":
			*_eefad = 1
		case "\u0077\u0064":
			*_eefad = 2
		case "\u006c\u0074":
			*_eefad = 3
		}
	}
	_edbfc, _bbbee = d.Token()
	if _bbbee != nil {
		return _bbbee
	}
	if _dbebda, _gbgf := _edbfc.(_d.EndElement); _gbgf && _dbebda.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edbfc)
}

type CT_SlideLayout struct {

	// Matching Name
	MatchingNameAttr *string

	// Slide Layout Type
	TypeAttr ST_SlideLayoutType

	// Preserve Slide Layout
	PreserveAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Common slide data for slide layouts
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_ad.CT_ColorMappingOverride

	// Slide Transition for a Slide Layout
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide Layout
	Timing *CT_SlideTiming

	// Header/Footer information for a slide layout
	Hf                   *CT_HeaderFooter
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

// Validate validates the CT_TLMediaNodeAudio and its children
func (_dbce *CT_TLMediaNodeAudio) Validate() error {
	return _dbce.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f")
}

type CT_ControlList struct {

	// Embedded Control
	Control []*CT_Control
}

func (_gdcbcf ST_SlideSizeType) ValidateWithPath(path string) error {
	switch _gdcbcf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdcbcf))
	}
	return nil
}

// Validate validates the CT_OutlineViewSlideList and its children
func (_bfcgc *CT_OutlineViewSlideList) Validate() error {
	return _bfcgc.ValidateWithPath("\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

type CT_TLMediaNodeVideo struct {

	// Full Screen
	FullScrnAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

// ValidateWithPath validates the CT_TLIterateIntervalTime and its children, prefixing error messages with path
func (_ggda *CT_TLIterateIntervalTime) ValidateWithPath(path string) error {
	if _ecaba := _ggda.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _ecaba != nil {
		return _ecaba
	}
	return nil
}
func (_ebaag ST_TLBehaviorAccumulateType) String() string {
	switch _ebaag {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func (_baaa *EG_Background) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_geefa:
	for {
		_fbbaag, _aafeg := d.Token()
		if _aafeg != nil {
			return _aafeg
		}
		switch _eecabe := _fbbaag.(type) {
		case _d.StartElement:
			switch _eecabe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_baaa.BgPr = NewCT_BackgroundProperties()
				if _bdccf := d.DecodeElement(_baaa.BgPr, &_eecabe); _bdccf != nil {
					return _bdccf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_baaa.BgRef = _ad.NewCT_StyleMatrixReference()
				if _bfcea := d.DecodeElement(_baaa.BgRef, &_eecabe); _bfcea != nil {
					return _bfcea
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _eecabe.Name)
				if _acafg := d.Skip(); _acafg != nil {
					return _acafg
				}
			}
		case _d.EndElement:
			break _geefa
		case _d.CharData:
		}
	}
	return nil
}
func (_gfega *NotesMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gfega.CT_NotesMaster.MarshalXML(e, start)
}
func (_fbadc ST_TLAnimateBehaviorValueType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fbadc.String(), start)
}
func NewCT_BuildList() *CT_BuildList { _cfa := &CT_BuildList{}; return _cfa }

// ValidateWithPath validates the CT_TLBuildParagraph and its children, prefixing error messages with path
func (_fdbec *CT_TLBuildParagraph) ValidateWithPath(path string) error {
	if _bcead := _fdbec.BuildAttr.ValidateWithPath(path + "\u002f\u0042\u0075\u0069\u006c\u0064\u0041\u0074\u0074\u0072"); _bcead != nil {
		return _bcead
	}
	if _fdbec.AdvAutoAttr != nil {
		if _bdce := _fdbec.AdvAutoAttr.ValidateWithPath(path + "\u002f\u0041\u0064v\u0041\u0075\u0074\u006f\u0041\u0074\u0074\u0072"); _bdce != nil {
			return _bdce
		}
	}
	if _fdbec.TmplLst != nil {
		if _gcacdg := _fdbec.TmplLst.ValidateWithPath(path + "\u002f\u0054\u006d\u0070\u006c\u004c\u0073\u0074"); _gcacdg != nil {
			return _gcacdg
		}
	}
	return nil
}
func (_dfgg *CT_SlideTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfgg.SpdAttr != ST_TransitionSpeedUnset {
		_aacb, _beaa := _dfgg.SpdAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0070\u0064"})
		if _beaa != nil {
			return _beaa
		}
		start.Attr = append(start.Attr, _aacb)
	}
	if _dfgg.AdvClickAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfgg.AdvClickAttr))})
	}
	if _dfgg.AdvTmAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0064\u0076T\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_dfgg.AdvTmAttr)})
	}
	e.EncodeToken(start)
	if _dfgg.Choice != nil {
		_dfgg.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _dfgg.SndAc != nil {
		_gagfc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006e\u0064\u0041\u0063"}}
		e.EncodeElement(_dfgg.SndAc, _gagfc)
	}
	if _dfgg.ExtLst != nil {
		_faegb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfgg.ExtLst, _faegb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TLTimeIndefinite byte

func (_afbeg *CT_TLAnimVariant) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afbeg.BoolVal != nil {
		_fdaebg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u006f\u006f\u006c\u0056\u0061l"}}
		e.EncodeElement(_afbeg.BoolVal, _fdaebg)
	}
	if _afbeg.IntVal != nil {
		_babga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u006e\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_afbeg.IntVal, _babga)
	}
	if _afbeg.FltVal != nil {
		_fgfcc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u006c\u0074\u0056\u0061\u006c"}}
		e.EncodeElement(_afbeg.FltVal, _fgfcc)
	}
	if _afbeg.StrVal != nil {
		_fcgaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_afbeg.StrVal, _fcgaa)
	}
	if _afbeg.ClrVal != nil {
		_eegbd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u0056\u0061\u006c"}}
		e.EncodeElement(_afbeg.ClrVal, _eegbd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gafae *ST_TLChartSubelementType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edaef, _agad := d.Token()
	if _agad != nil {
		return _agad
	}
	if _gfbbb, _degfc := _edaef.(_d.EndElement); _degfc && _gfbbb.Name == start.Name {
		*_gafae = 1
		return nil
	}
	if _dafbg, _gcbcf := _edaef.(_d.CharData); !_gcbcf {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edaef)
	} else {
		switch string(_dafbg) {
		case "":
			*_gafae = 0
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_gafae = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_gafae = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gafae = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_gafae = 4
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_gafae = 5
		}
	}
	_edaef, _agad = d.Token()
	if _agad != nil {
		return _agad
	}
	if _aabcf, _deecac := _edaef.(_d.EndElement); _deecac && _aabcf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edaef)
}
func (_cdfdc ST_TLNextActionType) String() string {
	switch _cdfdc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0065\u0065\u006b"
	}
	return ""
}

// Validate validates the CT_OrientationTransition and its children
func (_aced *CT_OrientationTransition) Validate() error {
	return _aced.ValidateWithPath("\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e")
}
func (_geea *ST_TLTriggerRuntimeNode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebgfa, _fagg := d.Token()
	if _fagg != nil {
		return _fagg
	}
	if _ddeee, _dfbgeg := _ebgfa.(_d.EndElement); _dfbgeg && _ddeee.Name == start.Name {
		*_geea = 1
		return nil
	}
	if _acffg, _bade := _ebgfa.(_d.CharData); !_bade {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebgfa)
	} else {
		switch string(_acffg) {
		case "":
			*_geea = 0
		case "\u0066\u0069\u0072s\u0074":
			*_geea = 1
		case "\u006c\u0061\u0073\u0074":
			*_geea = 2
		case "\u0061\u006c\u006c":
			*_geea = 3
		}
	}
	_ebgfa, _fagg = d.Token()
	if _fagg != nil {
		return _fagg
	}
	if _eadgf, _baceb := _ebgfa.(_d.EndElement); _baceb && _eadgf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebgfa)
}
func (_gbeb *CT_TLOleBuildChart) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eeeec := range start.Attr {
		if _eeeec.Name.Local == "\u0062\u006c\u0064" {
			_gbeb.BldAttr.UnmarshalXMLAttr(_eeeec)
			continue
		}
		if _eeeec.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_fddeg, _abbb := _dc.ParseBool(_eeeec.Value)
			if _abbb != nil {
				return _abbb
			}
			_gbeb.AnimBgAttr = &_fddeg
			continue
		}
		if _eeeec.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gaecg, _aadcc := _dc.ParseUint(_eeeec.Value, 10, 32)
			if _aadcc != nil {
				return _aadcc
			}
			_daaf := uint32(_gaecg)
			_gbeb.SpidAttr = &_daaf
			continue
		}
		if _eeeec.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_eebgd, _caead := _dc.ParseUint(_eeeec.Value, 10, 32)
			if _caead != nil {
				return _caead
			}
			_aaba := uint32(_eebgd)
			_gbeb.GrpIdAttr = &_aaba
			continue
		}
		if _eeeec.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_cfdcb, _abeg := _dc.ParseBool(_eeeec.Value)
			if _abeg != nil {
				return _abeg
			}
			_gbeb.UiExpandAttr = &_cfdcb
			continue
		}
	}
	for {
		_bcgcd, _bgade := d.Token()
		if _bgade != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u004c\u004f\u006c\u0065\u0042\u0075i\u006c\u0064\u0043\u0068\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _bgade)
		}
		if _cabff, _cafgff := _bcgcd.(_d.EndElement); _cafgff && _cabff.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_SlideTransition() *CT_SlideTransition { _cgcgd := &CT_SlideTransition{}; return _cgcgd }
func (_cgdec *CT_TLTimeAnimateValueList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cfgae:
	for {
		_abbf, _facb := d.Token()
		if _facb != nil {
			return _facb
		}
		switch _bbgbc := _abbf.(type) {
		case _d.StartElement:
			switch _bbgbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076"}:
				_fegd := NewCT_TLTimeAnimateValue()
				if _cbcdcf := d.DecodeElement(_fegd, &_bbgbc); _cbcdcf != nil {
					return _cbcdcf
				}
				_cgdec.Tav = append(_cgdec.Tav, _fegd)
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u0041\u006ei\u006da\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u004ci\u0073t\u0020\u0025v", _bbgbc.Name)
				if _cegg := d.Skip(); _cegg != nil {
					return _cegg
				}
			}
		case _d.EndElement:
			break _cfgae
		case _d.CharData:
		}
	}
	return nil
}
func (_bdcea *ST_TransitionSpeed) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fddg, _afaed := d.Token()
	if _afaed != nil {
		return _afaed
	}
	if _cfgag, _gafdc := _fddg.(_d.EndElement); _gafdc && _cfgag.Name == start.Name {
		*_bdcea = 1
		return nil
	}
	if _cfddb, _beeca := _fddg.(_d.CharData); !_beeca {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fddg)
	} else {
		switch string(_cfddb) {
		case "":
			*_bdcea = 0
		case "\u0073\u006c\u006f\u0077":
			*_bdcea = 1
		case "\u006d\u0065\u0064":
			*_bdcea = 2
		case "\u0066\u0061\u0073\u0074":
			*_bdcea = 3
		}
	}
	_fddg, _afaed = d.Token()
	if _afaed != nil {
		return _afaed
	}
	if _egfb, _fdfag := _fddg.(_d.EndElement); _fdfag && _egfb.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fddg)
}
func (_eebgde *ST_TLTimeNodeFillType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eebgde = 0
	case "\u0072\u0065\u006d\u006f\u0076\u0065":
		*_eebgde = 1
	case "\u0066\u0072\u0065\u0065\u007a\u0065":
		*_eebgde = 2
	case "\u0068\u006f\u006c\u0064":
		*_eebgde = 3
	case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
		*_eebgde = 4
	}
	return nil
}

type ST_TLAnimateColorSpace byte

// ValidateWithPath validates the CT_CustomerData and its children, prefixing error messages with path
func (_cabd *CT_CustomerData) ValidateWithPath(path string) error { return nil }
func (_ecfab *CT_TLTimeTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ecfab.SldTgt != nil {
		_ecded := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_ecfab.SldTgt, _ecded)
	}
	if _ecfab.SndTgt != nil {
		_eacgd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006e\u0064\u0054\u0067\u0074"}}
		e.EncodeElement(_ecfab.SndTgt, _eacgd)
	}
	if _ecfab.SpTgt != nil {
		_febec := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0070\u0054\u0067\u0074"}}
		e.EncodeElement(_ecfab.SpTgt, _febec)
	}
	if _ecfab.InkTgt != nil {
		_fceb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u006e\u006b\u0054\u0067\u0074"}}
		e.EncodeElement(_ecfab.InkTgt, _fceb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Control() *CT_Control { _eagg := &CT_Control{}; return _eagg }
func (_adffe *ST_TLPreviousActionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adffe = 0
	case "\u006e\u006f\u006e\u0065":
		*_adffe = 1
	case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
		*_adffe = 2
	}
	return nil
}

// ValidateWithPath validates the CT_SlideViewProperties and its children, prefixing error messages with path
func (_beee *CT_SlideViewProperties) ValidateWithPath(path string) error {
	if _eaaec := _beee.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _eaaec != nil {
		return _eaaec
	}
	if _beee.ExtLst != nil {
		if _abcdc := _beee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abcdc != nil {
			return _abcdc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMasterIdList and its children, prefixing error messages with path
func (_efaf *CT_SlideMasterIdList) ValidateWithPath(path string) error {
	for _edad, _edcf := range _efaf.SldMasterId {
		if _fdaec := _edcf.ValidateWithPath(_gc.Sprintf("\u0025s\u002fS\u006c\u0064\u004d\u0061\u0073t\u0065\u0072I\u0064\u005b\u0025\u0064\u005d", path, _edad)); _fdaec != nil {
			return _fdaec
		}
	}
	return nil
}
func (_caage *CT_InOutTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbcf := range start.Attr {
		if _bbcf.Name.Local == "\u0064\u0069\u0072" {
			_caage.DirAttr.UnmarshalXMLAttr(_bbcf)
			continue
		}
	}
	for {
		_geff, _fbbg := d.Token()
		if _fbbg != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0049\u006e\u004f\u0075\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _fbbg)
		}
		if _cafa, _deeca := _geff.(_d.EndElement); _deeca && _cafa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbbb *CT_TLByHslColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbge := range start.Attr {
		if _gbge.Name.Local == "\u0068" {
			_fccfg, _eggc := _dc.ParseInt(_gbge.Value, 10, 32)
			if _eggc != nil {
				return _eggc
			}
			_cbbb.HAttr = int32(_fccfg)
			continue
		}
		if _gbge.Name.Local == "\u0073" {
			_afccb, _ebcdb := ParseUnionST_FixedPercentage(_gbge.Value)
			if _ebcdb != nil {
				return _ebcdb
			}
			_cbbb.SAttr = _afccb
			continue
		}
		if _gbge.Name.Local == "\u006c" {
			_cegag, _aaaa := ParseUnionST_FixedPercentage(_gbge.Value)
			if _aaaa != nil {
				return _aaaa
			}
			_cbbb.LAttr = _cegag
			continue
		}
	}
	for {
		_gadbd, _aacbd := d.Token()
		if _aacbd != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0048sl\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _aacbd)
		}
		if _dacdc, _dcgab := _gadbd.(_d.EndElement); _dcgab && _dacdc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TLTextTargetElement and its children
func (_ffdaf *CT_TLTextTargetElement) Validate() error {
	return _ffdaf.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_eagdg ST_TLTriggerEvent) String() string {
	switch _eagdg {
	case 0:
		return ""
	case 1:
		return "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case 2:
		return "\u006f\u006e\u0045n\u0064"
	case 3:
		return "\u0062\u0065\u0067i\u006e"
	case 4:
		return "\u0065\u006e\u0064"
	case 5:
		return "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case 6:
		return "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case 7:
		return "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case 8:
		return "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case 9:
		return "\u006f\u006e\u004e\u0065\u0078\u0074"
	case 10:
		return "\u006f\u006e\u0050\u0072\u0065\u0076"
	case 11:
		return "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return ""
}

// ValidateWithPath validates the CT_OptionalBlackTransition and its children, prefixing error messages with path
func (_bagc *CT_OptionalBlackTransition) ValidateWithPath(path string) error { return nil }
func (_bafb ST_TLParaBuildType) ValidateWithPath(path string) error {
	switch _bafb {
	case 0, 1, 2, 3, 4:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bafb))
	}
	return nil
}

type ST_TLAnimateEffectTransition byte

func (_dddgbd *ST_PhotoAlbumLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_facca, _fggfc := d.Token()
	if _fggfc != nil {
		return _fggfc
	}
	if _fabb, _dbfcd := _facca.(_d.EndElement); _dbfcd && _fabb.Name == start.Name {
		*_dddgbd = 1
		return nil
	}
	if _ccgda, _dfcfa := _facca.(_d.CharData); !_dfcfa {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _facca)
	} else {
		switch string(_ccgda) {
		case "":
			*_dddgbd = 0
		case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
			*_dddgbd = 1
		case "\u0031\u0070\u0069\u0063":
			*_dddgbd = 2
		case "\u0032\u0070\u0069\u0063":
			*_dddgbd = 3
		case "\u0034\u0070\u0069\u0063":
			*_dddgbd = 4
		case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dddgbd = 5
		case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dddgbd = 6
		case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
			*_dddgbd = 7
		}
	}
	_facca, _fggfc = d.Token()
	if _fggfc != nil {
		return _fggfc
	}
	if _bdgfg, _bcgggc := _facca.(_d.EndElement); _bcgggc && _bdgfg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _facca)
}
func (_beaea ST_TLDiagramBuildType) ValidateWithPath(path string) error {
	switch _beaea {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beaea))
	}
	return nil
}

// Validate validates the CT_TLBuildDiagram and its children
func (_fabec *CT_TLBuildDiagram) Validate() error {
	return _fabec.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d")
}
func (_bfed ST_OleObjectFollowColorScheme) ValidateWithPath(path string) error {
	switch _bfed {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfed))
	}
	return nil
}
func (_fgfe ST_TLAnimateBehaviorCalcMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fgfe.String(), start)
}

// ValidateWithPath validates the CT_ApplicationNonVisualDrawingProps and its children, prefixing error messages with path
func (_ea *CT_ApplicationNonVisualDrawingProps) ValidateWithPath(path string) error {
	if _ea.Ph != nil {
		if _ceab := _ea.Ph.ValidateWithPath(path + "\u002f\u0050\u0068"); _ceab != nil {
			return _ceab
		}
	}
	if _ea.AudioCd != nil {
		if _cfg := _ea.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _cfg != nil {
			return _cfg
		}
	}
	if _ea.WavAudioFile != nil {
		if _aeaa := _ea.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _aeaa != nil {
			return _aeaa
		}
	}
	if _ea.AudioFile != nil {
		if _cfe := _ea.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _cfe != nil {
			return _cfe
		}
	}
	if _ea.VideoFile != nil {
		if _deee := _ea.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _deee != nil {
			return _deee
		}
	}
	if _ea.QuickTimeFile != nil {
		if _cgb := _ea.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _cgb != nil {
			return _cgb
		}
	}
	if _ea.CustDataLst != nil {
		if _cga := _ea.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _cga != nil {
			return _cga
		}
	}
	if _ea.ExtLst != nil {
		if _ffe := _ea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffe != nil {
			return _ffe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PictureNonVisual and its children, prefixing error messages with path
func (_fcdg *CT_PictureNonVisual) ValidateWithPath(path string) error {
	if _ddcbg := _fcdg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ddcbg != nil {
		return _ddcbg
	}
	if _eedce := _fcdg.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _eedce != nil {
		return _eedce
	}
	if _cgbaad := _fcdg.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _cgbaad != nil {
		return _cgbaad
	}
	return nil
}
func (_cbage *CT_PrintProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egfg := range start.Attr {
		if _egfg.Name.Local == "\u0070r\u006e\u0057\u0068\u0061\u0074" {
			_cbage.PrnWhatAttr.UnmarshalXMLAttr(_egfg)
			continue
		}
		if _egfg.Name.Local == "\u0063l\u0072\u004d\u006f\u0064\u0065" {
			_cbage.ClrModeAttr.UnmarshalXMLAttr(_egfg)
			continue
		}
		if _egfg.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073" {
			_fdcf, _cafdd := _dc.ParseBool(_egfg.Value)
			if _cafdd != nil {
				return _cafdd
			}
			_cbage.HiddenSlidesAttr = &_fdcf
			continue
		}
		if _egfg.Name.Local == "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072" {
			_adgd, _edcbc := _dc.ParseBool(_egfg.Value)
			if _edcbc != nil {
				return _edcbc
			}
			_cbage.ScaleToFitPaperAttr = &_adgd
			continue
		}
		if _egfg.Name.Local == "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073" {
			_edgbf, _eged := _dc.ParseBool(_egfg.Value)
			if _eged != nil {
				return _eged
			}
			_cbage.FrameSlidesAttr = &_edgbf
			continue
		}
	}
_eaca:
	for {
		_fage, _cfcg := d.Token()
		if _cfcg != nil {
			return _cfcg
		}
		switch _ccbc := _fage.(type) {
		case _d.StartElement:
			switch _ccbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbage.ExtLst = NewCT_ExtensionList()
				if _dage := d.DecodeElement(_cbage.ExtLst, &_ccbc); _dage != nil {
					return _dage
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ccbc.Name)
				if _geec := d.Skip(); _geec != nil {
					return _geec
				}
			}
		case _d.EndElement:
			break _eaca
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLAnimateColorDirectionUnset ST_TLAnimateColorDirection = 0
	ST_TLAnimateColorDirectionCw    ST_TLAnimateColorDirection = 1
	ST_TLAnimateColorDirectionCcw   ST_TLAnimateColorDirection = 2
)

func (_gbee ST_PhotoAlbumLayout) Validate() error { return _gbee.ValidateWithPath("") }
func (_dfb *CT_EmbeddedFontList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dfb.EmbeddedFont != nil {
		_eeeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065d\u0046\u006f\u006e\u0074"}}
		for _, _faaf := range _dfb.EmbeddedFont {
			e.EncodeElement(_faaf, _eeeb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eae *CT_CustomShowList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eae.CustShow != nil {
		_dgea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		for _, _ecd := range _eae.CustShow {
			e.EncodeElement(_ecd, _dgea)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ShapeNonVisual() *CT_ShapeNonVisual {
	_bfbbb := &CT_ShapeNonVisual{}
	_bfbbb.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_bfbbb.CNvSpPr = _ad.NewCT_NonVisualDrawingShapeProps()
	_bfbbb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _bfbbb
}
func (_abcdcd *ST_TLChartSubelementType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abcdcd = 0
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_abcdcd = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_abcdcd = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_abcdcd = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_abcdcd = 4
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_abcdcd = 5
	}
	return nil
}

// Validate validates the CT_Slide and its children
func (_fcecea *CT_Slide) Validate() error {
	return _fcecea.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065")
}

type AG_TLBuild struct {
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}
type CT_Empty struct{}

func (_efdg *CT_ShowProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffab := range start.Attr {
		if _ffab.Name.Local == "\u006c\u006f\u006f\u0070" {
			_bggd, _cafgf := _dc.ParseBool(_ffab.Value)
			if _cafgf != nil {
				return _cafgf
			}
			_efdg.LoopAttr = &_bggd
			continue
		}
		if _ffab.Name.Local == "\u0073\u0068\u006f\u0077\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_geaa, _abfeg := _dc.ParseBool(_ffab.Value)
			if _abfeg != nil {
				return _abfeg
			}
			_efdg.ShowNarrationAttr = &_geaa
			continue
		}
		if _ffab.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_egcg, _bgae := _dc.ParseBool(_ffab.Value)
			if _bgae != nil {
				return _bgae
			}
			_efdg.ShowAnimationAttr = &_egcg
			continue
		}
		if _ffab.Name.Local == "\u0075\u0073\u0065\u0054\u0069\u006d\u0069\u006e\u0067\u0073" {
			_aggab, _gcbc := _dc.ParseBool(_ffab.Value)
			if _gcbc != nil {
				return _gcbc
			}
			_efdg.UseTimingsAttr = &_aggab
			continue
		}
	}
_bedd:
	for {
		_fefe, _afgc := d.Token()
		if _afgc != nil {
			return _afgc
		}
		switch _dcbb := _fefe.(type) {
		case _d.StartElement:
			switch _dcbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_efdg.Present = NewCT_Empty()
				if _gafb := d.DecodeElement(_efdg.Present, &_dcbb); _gafb != nil {
					return _gafb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_efdg.Browse = NewCT_ShowInfoBrowse()
				if _efagf := d.DecodeElement(_efdg.Browse, &_dcbb); _efagf != nil {
					return _efagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_efdg.Kiosk = NewCT_ShowInfoKiosk()
				if _befbf := d.DecodeElement(_efdg.Kiosk, &_dcbb); _befbf != nil {
					return _befbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_efdg.SldAll = NewCT_Empty()
				if _dbeb := d.DecodeElement(_efdg.SldAll, &_dcbb); _dbeb != nil {
					return _dbeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_efdg.SldRg = NewCT_IndexRange()
				if _aabeg := d.DecodeElement(_efdg.SldRg, &_dcbb); _aabeg != nil {
					return _aabeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_efdg.CustShow = NewCT_CustomShowId()
				if _gdcbg := d.DecodeElement(_efdg.CustShow, &_dcbb); _gdcbg != nil {
					return _gdcbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0065\u006e\u0043\u006c\u0072"}:
				_efdg.PenClr = _ad.NewCT_Color()
				if _ggeg := d.DecodeElement(_efdg.PenClr, &_dcbb); _ggeg != nil {
					return _ggeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efdg.ExtLst = NewCT_ExtensionList()
				if _eccba := d.DecodeElement(_efdg.ExtLst, &_dcbb); _eccba != nil {
					return _eccba
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dcbb.Name)
				if _agab := d.Skip(); _agab != nil {
					return _agab
				}
			}
		case _d.EndElement:
			break _bedd
		case _d.CharData:
		}
	}
	return nil
}
func (_fadcf ST_TLTimeNodeRestartType) Validate() error { return _fadcf.ValidateWithPath("") }
func NewCT_TLCommonMediaNodeData() *CT_TLCommonMediaNodeData {
	_fagd := &CT_TLCommonMediaNodeData{}
	_fagd.CTn = NewCT_TLCommonTimeNodeData()
	_fagd.TgtEl = NewCT_TLTimeTargetElement()
	return _fagd
}
func (_ceac *CT_NotesViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gafcb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063S\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}}
	e.EncodeElement(_ceac.CSldViewPr, _gafcb)
	if _ceac.ExtLst != nil {
		_decada := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ceac.ExtLst, _decada)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dfagf *ST_PhotoAlbumFrameShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_accag, _ffgdf := d.Token()
	if _ffgdf != nil {
		return _ffgdf
	}
	if _cbccab, _baccd := _accag.(_d.EndElement); _baccd && _cbccab.Name == start.Name {
		*_dfagf = 1
		return nil
	}
	if _fefcd, _fcbbb := _accag.(_d.CharData); !_fcbbb {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _accag)
	} else {
		switch string(_fefcd) {
		case "":
			*_dfagf = 0
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
			*_dfagf = 1
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
			*_dfagf = 2
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
			*_dfagf = 3
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
			*_dfagf = 4
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
			*_dfagf = 5
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
			*_dfagf = 6
		case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
			*_dfagf = 7
		}
	}
	_accag, _ffgdf = d.Token()
	if _ffgdf != nil {
		return _ffgdf
	}
	if _cegaf, _cffc := _accag.(_d.EndElement); _cffc && _cegaf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _accag)
}

// Validate validates the CT_Placeholder and its children
func (_ffcgb *CT_Placeholder) Validate() error {
	return _ffcgb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072")
}
func (_gcgaf *EG_ShowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gcgaf.Present != nil {
		_gfbdc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0070\u0072\u0065\u0073\u0065\u006et"}}
		e.EncodeElement(_gcgaf.Present, _gfbdc)
	}
	if _gcgaf.Browse != nil {
		_cacg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0072\u006f\u0077\u0073\u0065"}}
		e.EncodeElement(_gcgaf.Browse, _cacg)
	}
	if _gcgaf.Kiosk != nil {
		_ageac := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006f\u0073\u006b"}}
		e.EncodeElement(_gcgaf.Kiosk, _ageac)
	}
	return nil
}

type CT_SlideTiming struct {
	TnLst *CT_TimeNodeList

	// Build List
	BldLst *CT_BuildList
	ExtLst *CT_ExtensionListModify
}
type OleObj struct{ CT_OleObject }

// Validate validates the CT_TLTimeNodeParallel and its children
func (_debaf *CT_TLTimeNodeParallel) Validate() error {
	return _debaf.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c")
}

// ValidateWithPath validates the CT_OleObjectLink and its children, prefixing error messages with path
func (_bdeag *CT_OleObjectLink) ValidateWithPath(path string) error {
	if _bdeag.ExtLst != nil {
		if _fbdd := _bdeag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbdd != nil {
			return _fbdd
		}
	}
	return nil
}
func (_efbabb ST_TransitionSpeed) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_efbabb.String(), start)
}

const (
	ST_ViewTypeUnset            ST_ViewType = 0
	ST_ViewTypeSldView          ST_ViewType = 1
	ST_ViewTypeSldMasterView    ST_ViewType = 2
	ST_ViewTypeNotesView        ST_ViewType = 3
	ST_ViewTypeHandoutView      ST_ViewType = 4
	ST_ViewTypeNotesMasterView  ST_ViewType = 5
	ST_ViewTypeOutlineView      ST_ViewType = 6
	ST_ViewTypeSldSorterView    ST_ViewType = 7
	ST_ViewTypeSldThumbnailView ST_ViewType = 8
)

type CT_OleObjectChoice struct {
	Embed *CT_OleObjectEmbed
	Link  *CT_OleObjectLink
}
type CT_SlideViewProperties struct {
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_abfad *CT_NotesTextViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abfad.CViewPr = NewCT_CommonViewProperties()
_dbbc:
	for {
		_eaggg, _feace := d.Token()
		if _feace != nil {
			return _feace
		}
		switch _bbae := _eaggg.(type) {
		case _d.StartElement:
			switch _bbae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _cbdf := d.DecodeElement(_abfad.CViewPr, &_bbae); _cbdf != nil {
					return _cbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abfad.ExtLst = NewCT_ExtensionList()
				if _gacg := d.DecodeElement(_abfad.ExtLst, &_bbae); _gacg != nil {
					return _gacg
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u004e\u006ft\u0065\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bbae.Name)
				if _aebf := d.Skip(); _aebf != nil {
					return _aebf
				}
			}
		case _d.EndElement:
			break _dbbc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLMediaNodeAudio() *CT_TLMediaNodeAudio {
	_dbaca := &CT_TLMediaNodeAudio{}
	_dbaca.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _dbaca
}
func (_ecca *CT_StringTag) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", _ecca.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _ecca.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bcac *ST_TLParaBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abgae, _ddbgf := d.Token()
	if _ddbgf != nil {
		return _ddbgf
	}
	if _acbb, _afcf := _abgae.(_d.EndElement); _afcf && _acbb.Name == start.Name {
		*_bcac = 1
		return nil
	}
	if _ecaad, _bacca := _abgae.(_d.CharData); !_bacca {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abgae)
	} else {
		switch string(_ecaad) {
		case "":
			*_bcac = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_bcac = 1
		case "\u0070":
			*_bcac = 2
		case "\u0063\u0075\u0073\u0074":
			*_bcac = 3
		case "\u0077\u0068\u006fl\u0065":
			*_bcac = 4
		}
	}
	_abgae, _ddbgf = d.Token()
	if _ddbgf != nil {
		return _ddbgf
	}
	if _fcefg, _abdeg := _abgae.(_d.EndElement); _abdeg && _fcefg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abgae)
}

// Validate validates the CT_ShapeNonVisual and its children
func (_ebbe *CT_ShapeNonVisual) Validate() error {
	return _ebbe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c")
}
func NewCT_SlideRelationshipList() *CT_SlideRelationshipList {
	_fgag := &CT_SlideRelationshipList{}
	return _fgag
}
func NewCT_Rel() *CT_Rel { _befg := &CT_Rel{}; return _befg }
func (_bdgb ST_TLTimeNodeType) String() string {
	switch _bdgb {
	case 0:
		return ""
	case 1:
		return "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case 2:
		return "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case 3:
		return "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case 4:
		return "\u006da\u0069\u006e\u0053\u0065\u0071"
	case 5:
		return "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case 6:
		return "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case 7:
		return "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case 8:
		return "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case 9:
		return "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return ""
}
func (_acbe *CT_TLCommonTimeNodeData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eeagab := range start.Attr {
		if _eeagab.Name.Local == "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072" {
			_beefd, _eddbe := _eeagab.Value, error(nil)
			if _eddbe != nil {
				return _eddbe
			}
			_acbe.TmFilterAttr = &_beefd
			continue
		}
		if _eeagab.Name.Local == "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r" {
			_ecggb, _fabgb := _eeagab.Value, error(nil)
			if _fabgb != nil {
				return _fabgb
			}
			_acbe.EvtFilterAttr = &_ecggb
			continue
		}
		if _eeagab.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044" {
			_dgeaf, _bbgb := _dc.ParseInt(_eeagab.Value, 10, 32)
			if _bbgb != nil {
				return _bbgb
			}
			_cdbg := int32(_dgeaf)
			_acbe.PresetIDAttr = &_cdbg
			continue
		}
		if _eeagab.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_aeag, _ecdb := _dc.ParseBool(_eeagab.Value)
			if _ecdb != nil {
				return _ecdb
			}
			_acbe.DisplayAttr = &_aeag
			continue
		}
		if _eeagab.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065" {
			_gfcgc, _befcd := _dc.ParseInt(_eeagab.Value, 10, 32)
			if _befcd != nil {
				return _befcd
			}
			_aedcf := int32(_gfcgc)
			_acbe.PresetSubtypeAttr = &_aedcf
			continue
		}
		if _eeagab.Name.Local == "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l" {
			_acbe.MasterRelAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074" {
			_dfbab, _aafg := ParseUnionST_TLTime(_eeagab.Value)
			if _aafg != nil {
				return _aafg
			}
			_acbe.RepeatCountAttr = &_dfbab
			continue
		}
		if _eeagab.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_gabdc, _fbeag := _dc.ParseInt(_eeagab.Value, 10, 32)
			if _fbeag != nil {
				return _fbeag
			}
			_bcdca := int32(_gabdc)
			_acbe.BldLvlAttr = &_bcdca
			continue
		}
		if _eeagab.Name.Local == "\u0073\u0070\u0064" {
			_dfgdc, _dabe := ParseUnionST_Percentage(_eeagab.Value)
			if _dabe != nil {
				return _dabe
			}
			_acbe.SpdAttr = &_dfgdc
			continue
		}
		if _eeagab.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_gfbd, _bccgf := _dc.ParseUint(_eeagab.Value, 10, 32)
			if _bccgf != nil {
				return _bccgf
			}
			_eggde := uint32(_gfbd)
			_acbe.GrpIdAttr = &_eggde
			continue
		}
		if _eeagab.Name.Local == "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074" {
			_egaf, _bgebd := _dc.ParseBool(_eeagab.Value)
			if _bgebd != nil {
				return _bgebd
			}
			_acbe.AfterEffectAttr = &_egaf
			continue
		}
		if _eeagab.Name.Local == "\u0069\u0064" {
			_ebaa, _febg := _dc.ParseUint(_eeagab.Value, 10, 32)
			if _febg != nil {
				return _febg
			}
			_begc := uint32(_ebaa)
			_acbe.IdAttr = &_begc
			continue
		}
		if _eeagab.Name.Local == "\u006e\u006f\u0064\u0065\u0050\u0068" {
			_cadgb, _dgdc := _dc.ParseBool(_eeagab.Value)
			if _dgdc != nil {
				return _dgdc
			}
			_acbe.NodePhAttr = &_cadgb
			continue
		}
		if _eeagab.Name.Local == "\u0061\u0063\u0063e\u006c" {
			_afga, _bbeca := ParseUnionST_PositiveFixedPercentage(_eeagab.Value)
			if _bbeca != nil {
				return _bbeca
			}
			_acbe.AccelAttr = &_afga
			continue
		}
		if _eeagab.Name.Local == "\u0064\u0065\u0063e\u006c" {
			_bfced, _cbdd := ParseUnionST_PositiveFixedPercentage(_eeagab.Value)
			if _cbdd != nil {
				return _cbdd
			}
			_acbe.DecelAttr = &_bfced
			continue
		}
		if _eeagab.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_acbe.RestartAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065" {
			_acbe.NodeTypeAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073" {
			_acbe.PresetClassAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r" {
			_dgbae, _bedgb := ParseUnionST_TLTime(_eeagab.Value)
			if _bedgb != nil {
				return _bedgb
			}
			_acbe.RepeatDurAttr = &_dgbae
			continue
		}
		if _eeagab.Name.Local == "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072" {
			_acbe.SyncBehaviorAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "\u0061u\u0074\u006f\u0052\u0065\u0076" {
			_cbdde, _cfcee := _dc.ParseBool(_eeagab.Value)
			if _cfcee != nil {
				return _cfcee
			}
			_acbe.AutoRevAttr = &_cbdde
			continue
		}
		if _eeagab.Name.Local == "\u0066\u0069\u006c\u006c" {
			_acbe.FillAttr.UnmarshalXMLAttr(_eeagab)
			continue
		}
		if _eeagab.Name.Local == "\u0064\u0075\u0072" {
			_ceeb, _cggf := ParseUnionST_TLTime(_eeagab.Value)
			if _cggf != nil {
				return _cggf
			}
			_acbe.DurAttr = &_ceeb
			continue
		}
	}
_dddbg:
	for {
		_afdde, _bfacgd := d.Token()
		if _bfacgd != nil {
			return _bfacgd
		}
		switch _fgde := _afdde.(type) {
		case _d.StartElement:
			switch _fgde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0043\u006f\u006e\u0064\u004c\u0073t"}:
				_acbe.StCondLst = NewCT_TLTimeConditionList()
				if _cfae := d.DecodeElement(_acbe.StCondLst, &_fgde); _cfae != nil {
					return _cfae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_acbe.EndCondLst = NewCT_TLTimeConditionList()
				if _egfe := d.DecodeElement(_acbe.EndCondLst, &_fgde); _egfe != nil {
					return _egfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0064\u0053\u0079\u006e\u0063"}:
				_acbe.EndSync = NewCT_TLTimeCondition()
				if _egaad := d.DecodeElement(_acbe.EndSync, &_fgde); _egaad != nil {
					return _egaad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}:
				_acbe.Iterate = NewCT_TLIterateData()
				if _gbcec := d.DecodeElement(_acbe.Iterate, &_fgde); _gbcec != nil {
					return _gbcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}:
				_acbe.ChildTnLst = NewCT_TimeNodeList()
				if _afcd := d.DecodeElement(_acbe.ChildTnLst, &_fgde); _afcd != nil {
					return _afcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}:
				_acbe.SubTnLst = NewCT_TimeNodeList()
				if _afbed := d.DecodeElement(_acbe.SubTnLst, &_fgde); _afbed != nil {
					return _afbed
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0054i\u006d\u0065\u004e\u006f\u0064\u0065D\u0061\u0074\u0061 \u0025\u0076", _fgde.Name)
				if _fcfd := d.Skip(); _fcfd != nil {
					return _fcfd
				}
			}
		case _d.EndElement:
			break _dddbg
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_OleObjectFollowColorSchemeUnset             ST_OleObjectFollowColorScheme = 0
	ST_OleObjectFollowColorSchemeNone              ST_OleObjectFollowColorScheme = 1
	ST_OleObjectFollowColorSchemeFull              ST_OleObjectFollowColorScheme = 2
	ST_OleObjectFollowColorSchemeTextAndBackground ST_OleObjectFollowColorScheme = 3
)

func (_fgeab ST_TLBehaviorAccumulateType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fgeab.String(), start)
}

type CT_TLAnimateScaleBehavior struct {

	// Zoom Content
	ZoomContentsAttr *bool
	CBhvr            *CT_TLCommonBehaviorData

	// By
	By   *CT_TLPoint
	From *CT_TLPoint

	// To
	To *CT_TLPoint
}

func (_fffcb ST_TLTimeNodePresetClassType) ValidateWithPath(path string) error {
	switch _fffcb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fffcb))
	}
	return nil
}
func (_fgec *ST_TLOleChartBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fgec = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_fgec = 1
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_fgec = 2
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_fgec = 3
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_fgec = 4
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_fgec = 5
	}
	return nil
}

type CT_CustomShowId struct {

	// Custom Show Identifier
	IdAttr uint32
}

// Validate validates the CT_TLTimeAnimateValueList and its children
func (_efecg *CT_TLTimeAnimateValueList) Validate() error {
	return _efecg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t")
}

// ValidateWithPath validates the CT_TLCommandBehavior and its children, prefixing error messages with path
func (_ecagb *CT_TLCommandBehavior) ValidateWithPath(path string) error {
	if _gddga := _ecagb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gddga != nil {
		return _gddga
	}
	if _cgbfd := _ecagb.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cgbfd != nil {
		return _cgbfd
	}
	return nil
}

type ST_IterateType byte

func (_ggcc ST_TLTimeIndefinite) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fabfg := _d.Attr{}
	_fabfg.Name = name
	switch _ggcc {
	case ST_TLTimeIndefiniteUnset:
		_fabfg.Value = ""
	case ST_TLTimeIndefiniteIndefinite:
		_fabfg.Value = "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return _fabfg, nil
}

// ValidateWithPath validates the CT_WebProperties and its children, prefixing error messages with path
func (_gabba *CT_WebProperties) ValidateWithPath(path string) error {
	if _dcfea := _gabba.ImgSzAttr.ValidateWithPath(path + "\u002f\u0049\u006d\u0067\u0053\u007a\u0041\u0074\u0074\u0072"); _dcfea != nil {
		return _dcfea
	}
	if _feffb := _gabba.ClrAttr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0041\u0074\u0074\u0072"); _feffb != nil {
		return _feffb
	}
	if _gabba.ExtLst != nil {
		if _fefce := _gabba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fefce != nil {
			return _fefce
		}
	}
	return nil
}

type CT_Rel struct{ IdAttr string }

func (_fgcbd *CT_Rel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _befb := range start.Attr {
		if _befb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _befb.Name.Local == "\u0069\u0064" || _befb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _befb.Name.Local == "\u0069\u0064" {
			_gaefg, _cggg := _befb.Value, error(nil)
			if _cggg != nil {
				return _cggg
			}
			_fgcbd.IdAttr = _gaefg
			continue
		}
	}
	for {
		_ccafa, _dgfd := d.Token()
		if _dgfd != nil {
			return _gc.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073", _dgfd)
		}
		if _bagf, _eebcgc := _ccafa.(_d.EndElement); _eebcgc && _bagf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fagga ST_WebColorType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dbcdb := _d.Attr{}
	_dbcdb.Name = name
	switch _fagga {
	case ST_WebColorTypeUnset:
		_dbcdb.Value = ""
	case ST_WebColorTypeNone:
		_dbcdb.Value = "\u006e\u006f\u006e\u0065"
	case ST_WebColorTypeBrowser:
		_dbcdb.Value = "\u0062r\u006f\u0077\u0073\u0065\u0072"
	case ST_WebColorTypePresentationText:
		_dbcdb.Value = "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_WebColorTypePresentationAccent:
		_dbcdb.Value = "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074"
	case ST_WebColorTypeWhiteTextOnBlack:
		_dbcdb.Value = "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b"
	case ST_WebColorTypeBlackTextOnWhite:
		_dbcdb.Value = "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065"
	}
	return _dbcdb, nil
}

type CT_SlideMaster struct {

	// Preserve Slide Master
	PreserveAttr *bool

	// Common slide data for slide masters
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_ad.CT_ColorMapping

	// List of Slide Layouts
	SldLayoutIdLst *CT_SlideLayoutIdList

	// Slide Transition for a Slide Master
	Transition *CT_SlideTransition

	// Slide Timing Information for Slide Masters
	Timing *CT_SlideTiming

	// Header/Footer information for a slide master
	Hf *CT_HeaderFooter

	// Slide Master Text Styles
	TxStyles *CT_SlideMasterTextStyles
	ExtLst   *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_SlideIdList and its children, prefixing error messages with path
func (_bcabc *CT_SlideIdList) ValidateWithPath(path string) error {
	for _gddfe, _dgcf := range _bcabc.SldId {
		if _fbae := _dgcf.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fS\u006c\u0064\u0049\u0064\u005b\u0025\u0064\u005d", path, _gddfe)); _fbae != nil {
			return _fbae
		}
	}
	return nil
}
func (_daeeb *CT_SlideMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _daeeb.SldMasterId != nil {
		_cbgcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		for _, _dbde := range _daeeb.SldMasterId {
			e.EncodeElement(_dbde, _cbgcd)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewSld() *Sld { _abgbe := &Sld{}; _abgbe.CT_Slide = *NewCT_Slide(); return _abgbe }

// Validate validates the CT_PictureNonVisual and its children
func (_fbgd *CT_PictureNonVisual) Validate() error {
	return _fbgd.ValidateWithPath("\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_bgfe *ST_SlideSizeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bgfe = 0
	case "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783":
		*_bgfe = 1
	case "\u006c\u0065\u0074\u0074\u0065\u0072":
		*_bgfe = 2
	case "\u0041\u0034":
		*_bgfe = 3
	case "\u0033\u0035\u006d\u006d":
		*_bgfe = 4
	case "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064":
		*_bgfe = 5
	case "\u0062\u0061\u006e\u006e\u0065\u0072":
		*_bgfe = 6
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_bgfe = 7
	case "\u006c\u0065\u0064\u0067\u0065\u0072":
		*_bgfe = 8
	case "\u0041\u0033":
		*_bgfe = 9
	case "\u0042\u0034\u0049S\u004f":
		*_bgfe = 10
	case "\u0042\u0035\u0049S\u004f":
		*_bgfe = 11
	case "\u0042\u0034\u004aI\u0053":
		*_bgfe = 12
	case "\u0042\u0035\u004aI\u0053":
		*_bgfe = 13
	case "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064":
		*_bgfe = 14
	case "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039":
		*_bgfe = 15
	case "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030":
		*_bgfe = 16
	}
	return nil
}

// Validate validates the CT_TLTimeTargetElement and its children
func (_fcceb *CT_TLTimeTargetElement) Validate() error {
	return _fcceb.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074")
}

// ValidateWithPath validates the CT_Presentation and its children, prefixing error messages with path
func (_fdeaa *CT_Presentation) ValidateWithPath(path string) error {
	if _fdeaa.ServerZoomAttr != nil {
		if _cbef := _fdeaa.ServerZoomAttr.ValidateWithPath(path + "\u002fS\u0065r\u0076\u0065\u0072\u005a\u006f\u006f\u006d\u0041\u0074\u0074\u0072"); _cbef != nil {
			return _cbef
		}
	}
	if _fdeaa.BookmarkIdSeedAttr != nil {
		if *_fdeaa.BookmarkIdSeedAttr < 1 {
			return _gc.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064\u0053\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fdeaa.BookmarkIdSeedAttr)
		}
		if *_fdeaa.BookmarkIdSeedAttr >= 2147483648 {
			return _gc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049\u0064S\u0065\u0065\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u003648\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fdeaa.BookmarkIdSeedAttr)
		}
	}
	if _dfebd := _fdeaa.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _dfebd != nil {
		return _dfebd
	}
	if _fdeaa.SldMasterIdLst != nil {
		if _agca := _fdeaa.SldMasterIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _agca != nil {
			return _agca
		}
	}
	if _fdeaa.NotesMasterIdLst != nil {
		if _bgbf := _fdeaa.NotesMasterIdLst.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"); _bgbf != nil {
			return _bgbf
		}
	}
	if _fdeaa.HandoutMasterIdLst != nil {
		if _dccde := _fdeaa.HandoutMasterIdLst.ValidateWithPath(path + "\u002f\u0048\u0061\u006edo\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"); _dccde != nil {
			return _dccde
		}
	}
	if _fdeaa.SldIdLst != nil {
		if _cdbec := _fdeaa.SldIdLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u0049\u0064\u004c\u0073t"); _cdbec != nil {
			return _cdbec
		}
	}
	if _fdeaa.SldSz != nil {
		if _eade := _fdeaa.SldSz.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0053\u007a"); _eade != nil {
			return _eade
		}
	}
	if _beab := _fdeaa.NotesSz.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u0053\u007a"); _beab != nil {
		return _beab
	}
	if _fdeaa.SmartTags != nil {
		if _gbba := _fdeaa.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _gbba != nil {
			return _gbba
		}
	}
	if _fdeaa.EmbeddedFontLst != nil {
		if _cdaf := _fdeaa.EmbeddedFontLst.ValidateWithPath(path + "\u002f\u0045m\u0062\u0065\u0064d\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"); _cdaf != nil {
			return _cdaf
		}
	}
	if _fdeaa.CustShowLst != nil {
		if _ecfd := _fdeaa.CustShowLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"); _ecfd != nil {
			return _ecfd
		}
	}
	if _fdeaa.PhotoAlbum != nil {
		if _fgab := _fdeaa.PhotoAlbum.ValidateWithPath(path + "/\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"); _fgab != nil {
			return _fgab
		}
	}
	if _fdeaa.CustDataLst != nil {
		if _afeaff := _fdeaa.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _afeaff != nil {
			return _afeaff
		}
	}
	if _fdeaa.Kinsoku != nil {
		if _aafe := _fdeaa.Kinsoku.ValidateWithPath(path + "\u002f\u004b\u0069\u006e\u0073\u006f\u006b\u0075"); _aafe != nil {
			return _aafe
		}
	}
	if _fdeaa.DefaultTextStyle != nil {
		if _abdae := _fdeaa.DefaultTextStyle.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0065\u0078\u0074S\u0074\u0079\u006c\u0065"); _abdae != nil {
			return _abdae
		}
	}
	if _fdeaa.ModifyVerifier != nil {
		if _bfbg := _fdeaa.ModifyVerifier.ValidateWithPath(path + "\u002fM\u006fd\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"); _bfbg != nil {
			return _bfbg
		}
	}
	if _fdeaa.ExtLst != nil {
		if _gbcc := _fdeaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbcc != nil {
			return _gbcc
		}
	}
	return nil
}

// Validate validates the CT_CustomerDataList and its children
func (_debe *CT_CustomerDataList) Validate() error {
	return _debe.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_PrintProperties and its children, prefixing error messages with path
func (_ddeba *CT_PrintProperties) ValidateWithPath(path string) error {
	if _baca := _ddeba.PrnWhatAttr.ValidateWithPath(path + "\u002f\u0050\u0072n\u0057\u0068\u0061\u0074\u0041\u0074\u0074\u0072"); _baca != nil {
		return _baca
	}
	if _cfga := _ddeba.ClrModeAttr.ValidateWithPath(path + "\u002f\u0043\u006cr\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cfga != nil {
		return _cfga
	}
	if _ddeba.ExtLst != nil {
		if _ecgcb := _ddeba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecgcb != nil {
			return _ecgcb
		}
	}
	return nil
}

type CT_TLTimeNodeSequence struct {

	// Concurrent
	ConcurrentAttr *bool

	// Previous Action
	PrevAcAttr ST_TLPreviousActionType

	// Next Action
	NextAcAttr ST_TLNextActionType

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData

	// Previous Conditions List
	PrevCondLst *CT_TLTimeConditionList

	// Next Conditions List
	NextCondLst *CT_TLTimeConditionList
}

func (_bgff ST_TLTimeNodeType) Validate() error { return _bgff.ValidateWithPath("") }
func (_cfad *CT_TLBuildDiagram) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdcg := range start.Attr {
		if _cdcg.Name.Local == "\u0062\u006c\u0064" {
			_cfad.BldAttr.UnmarshalXMLAttr(_cdcg)
			continue
		}
		if _cdcg.Name.Local == "\u0073\u0070\u0069\u0064" {
			_beegf, _bgca := _dc.ParseUint(_cdcg.Value, 10, 32)
			if _bgca != nil {
				return _bgca
			}
			_dcebe := uint32(_beegf)
			_cfad.SpidAttr = &_dcebe
			continue
		}
		if _cdcg.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_afad, _fdfaa := _dc.ParseUint(_cdcg.Value, 10, 32)
			if _fdfaa != nil {
				return _fdfaa
			}
			_fcad := uint32(_afad)
			_cfad.GrpIdAttr = &_fcad
			continue
		}
		if _cdcg.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_gdddb, _aggd := _dc.ParseBool(_cdcg.Value)
			if _aggd != nil {
				return _aggd
			}
			_cfad.UiExpandAttr = &_gdddb
			continue
		}
	}
	for {
		_eebfa, _befgg := d.Token()
		if _befgg != nil {
			return _gc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069\u0061\u0067\u0072\u0061\u006d: \u0025\u0073", _befgg)
		}
		if _febbb, _abef := _eebfa.(_d.EndElement); _abef && _febbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_acdde *ST_ViewType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_acdde = 0
	case "\u0073l\u0064\u0056\u0069\u0065\u0077":
		*_acdde = 1
	case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_acdde = 2
	case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
		*_acdde = 3
	case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
		*_acdde = 4
	case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_acdde = 5
	case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
		*_acdde = 6
	case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
		*_acdde = 7
	case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
		*_acdde = 8
	}
	return nil
}
func (_ggacd *ST_TransitionEightDirectionType) ValidateWithPath(path string) error {
	_gcdb := []string{}
	if _ggacd.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		_gcdb = append(_gcdb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e\u0053\u0069\u0064\u0065\u0044i\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if _ggacd.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		_gcdb = append(_gcdb, "\u0053\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0043\u006fr\u006ee\u0072\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065")
	}
	if len(_gcdb) > 1 {
		return _gc.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _gcdb)
	}
	return nil
}
func NewCT_GroupShape() *CT_GroupShape {
	_egag := &CT_GroupShape{}
	_egag.NvGrpSpPr = NewCT_GroupShapeNonVisual()
	_egag.GrpSpPr = _ad.NewCT_GroupShapeProperties()
	return _egag
}
func (_gebaeg *CT_OleObject) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gebaeg.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.ProgIdAttr)})
	}
	if _gebaeg.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.SpidAttr)})
	}
	if _gebaeg.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.NameAttr)})
	}
	if _gebaeg.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gebaeg.ShowAsIconAttr))})
	}
	if _gebaeg.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.IdAttr)})
	}
	if _gebaeg.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.ImgWAttr)})
	}
	if _gebaeg.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _gc.Sprintf("\u0025\u0076", *_gebaeg.ImgHAttr)})
	}
	e.EncodeToken(start)
	_gebaeg.Choice.MarshalXML(e, _d.StartElement{})
	if _gebaeg.Pic != nil {
		_cffd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		e.EncodeElement(_gebaeg.Pic, _cffd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CommonSlideData and its children
func (_eba *CT_CommonSlideData) Validate() error {
	return _eba.ValidateWithPath("\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061")
}
func (_bbebg ST_SplitterBarState) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_caefeg := _d.Attr{}
	_caefeg.Name = name
	switch _bbebg {
	case ST_SplitterBarStateUnset:
		_caefeg.Value = ""
	case ST_SplitterBarStateMinimized:
		_caefeg.Value = "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case ST_SplitterBarStateRestored:
		_caefeg.Value = "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_SplitterBarStateMaximized:
		_caefeg.Value = "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return _caefeg, nil
}

// Validate validates the CT_PrintProperties and its children
func (_dcaf *CT_PrintProperties) Validate() error {
	return _dcaf.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

type CT_TLAnimVariantIntegerVal struct {

	// Value
	ValAttr int32
}

// ValidateWithPath validates the CT_CornerDirectionTransition and its children, prefixing error messages with path
func (_edcc *CT_CornerDirectionTransition) ValidateWithPath(path string) error {
	if _adeb := _edcc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _adeb != nil {
		return _adeb
	}
	return nil
}

type ST_SplitterBarState byte

func (_feef *CT_TLAnimVariantStringVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efeea := range start.Attr {
		if _efeea.Name.Local == "\u0076\u0061\u006c" {
			_aeefgg, _ecee := _efeea.Value, error(nil)
			if _ecee != nil {
				return _ecee
			}
			_feef.ValAttr = _aeefgg
			continue
		}
	}
	for {
		_gegcd, _aeec := d.Token()
		if _aeec != nil {
			return _gc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0053\u0074\u0072\u0069\u006e\u0067\u0056\u0061l\u003a\u0020\u0025\u0073", _aeec)
		}
		if _bcbe, _bcgcg := _gegcd.(_d.EndElement); _bcgcg && _bcbe.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ApplicationNonVisualDrawingProps and its children
func (_bce *CT_ApplicationNonVisualDrawingProps) Validate() error {
	return _bce.ValidateWithPath("C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073")
}
func (_adacb *ST_Direction) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adacb = 0
	case "\u0068\u006f\u0072\u007a":
		*_adacb = 1
	case "\u0076\u0065\u0072\u0074":
		*_adacb = 2
	}
	return nil
}

// Validate validates the AG_TLBuild and its children
func (_cce *AG_TLBuild) Validate() error {
	return _cce.ValidateWithPath("\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064")
}
func (_bafeb *CT_SlideLayoutIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aaga:
	for {
		_ggggg, _ccdef := d.Token()
		if _ccdef != nil {
			return _ccdef
		}
		switch _deeae := _ggggg.(type) {
		case _d.StartElement:
			switch _deeae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}:
				_gegfc := NewCT_SlideLayoutIdListEntry()
				if _bdee := d.DecodeElement(_gegfc, &_deeae); _bdee != nil {
					return _bdee
				}
				_bafeb.SldLayoutId = append(_bafeb.SldLayoutId, _gegfc)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _deeae.Name)
				if _gcacd := d.Skip(); _gcacd != nil {
					return _gcacd
				}
			}
		case _d.EndElement:
			break _aaga
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObjectEmbed and its children
func (_gcdd *CT_OleObjectEmbed) Validate() error {
	return _gcdd.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064")
}
func NewCT_SlideSyncProperties() *CT_SlideSyncProperties {
	_cbgac := &CT_SlideSyncProperties{}
	return _cbgac
}
func NewCT_Guide() *CT_Guide { _dddb := &CT_Guide{}; return _dddb }
func (_gacfe *EG_Background) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gacfe.BgPr != nil {
		_egead := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067\u0050\u0072"}}
		e.EncodeElement(_gacfe.BgPr, _egead)
	}
	if _gacfe.BgRef != nil {
		_eadfg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0062\u0067\u0052\u0065\u0066"}}
		e.EncodeElement(_gacfe.BgRef, _eadfg)
	}
	return nil
}

type CT_TagsData struct{ IdAttr string }

func (_eeea *CT_SlideLayoutIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eeea.SldLayoutId != nil {
		_fgef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064"}}
		for _, _cgdeb := range _eeea.SldLayoutId {
			e.EncodeElement(_cgdeb, _fgef)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fffab ST_TLBehaviorTransformType) ValidateWithPath(path string) error {
	switch _fffab {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fffab))
	}
	return nil
}

// Validate validates the AG_ChildSlide and its children
func (_ga *AG_ChildSlide) Validate() error {
	return _ga.ValidateWithPath("\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_TLMediaNodeVideo and its children, prefixing error messages with path
func (_bagd *CT_TLMediaNodeVideo) ValidateWithPath(path string) error {
	if _bbcfd := _bagd.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _bbcfd != nil {
		return _bbcfd
	}
	return nil
}

// ValidateWithPath validates the CT_ShowProperties and its children, prefixing error messages with path
func (_ecgcfa *CT_ShowProperties) ValidateWithPath(path string) error {
	if _ecgcfa.Present != nil {
		if _edca := _ecgcfa.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _edca != nil {
			return _edca
		}
	}
	if _ecgcfa.Browse != nil {
		if _bcggg := _ecgcfa.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _bcggg != nil {
			return _bcggg
		}
	}
	if _ecgcfa.Kiosk != nil {
		if _gcbec := _ecgcfa.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _gcbec != nil {
			return _gcbec
		}
	}
	if _ecgcfa.SldAll != nil {
		if _cacfe := _ecgcfa.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _cacfe != nil {
			return _cacfe
		}
	}
	if _ecgcfa.SldRg != nil {
		if _fdad := _ecgcfa.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _fdad != nil {
			return _fdad
		}
	}
	if _ecgcfa.CustShow != nil {
		if _dfdfd := _ecgcfa.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _dfdfd != nil {
			return _dfdfd
		}
	}
	if _ecgcfa.PenClr != nil {
		if _dagcg := _ecgcfa.PenClr.ValidateWithPath(path + "\u002fP\u0065\u006e\u0043\u006c\u0072"); _dagcg != nil {
			return _dagcg
		}
	}
	if _ecgcfa.ExtLst != nil {
		if _bggfb := _ecgcfa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bggfb != nil {
			return _bggfb
		}
	}
	return nil
}
func (_dbdd *ST_TLAnimateColorDirection) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dbdd = 0
	case "\u0063\u0077":
		*_dbdd = 1
	case "\u0063\u0063\u0077":
		*_dbdd = 2
	}
	return nil
}

type ST_TLPreviousActionType byte

// Validate validates the CT_HandoutMaster and its children
func (_fefa *CT_HandoutMaster) Validate() error {
	return _fefa.ValidateWithPath("\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}
func NewCT_TLTimeTargetElement() *CT_TLTimeTargetElement {
	_gfdf := &CT_TLTimeTargetElement{}
	return _gfdf
}
func (_ebdg ST_TLPreviousActionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebdg.String(), start)
}
func NewCT_SlideMaster() *CT_SlideMaster {
	_adca := &CT_SlideMaster{}
	_adca.CSld = NewCT_CommonSlideData()
	_adca.ClrMap = _ad.NewCT_ColorMapping()
	return _adca
}

type CT_TLAnimVariantFloatVal struct {

	// Value
	ValAttr float32
}

func (_ebbc *CT_TLOleBuildChart) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebbc.BldAttr != ST_TLOleChartBuildTypeUnset {
		_cdce, _geceb := _ebbc.BldAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0064"})
		if _geceb != nil {
			return _geceb
		}
		start.Attr = append(start.Attr, _cdce)
	}
	if _ebbc.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ebbc.AnimBgAttr))})
	}
	if _ebbc.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ebbc.SpidAttr)})
	}
	if _ebbc.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ebbc.GrpIdAttr)})
	}
	if _ebbc.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ebbc.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdae *CT_GraphicalObjectFrameNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gdae.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_gdae.CNvGraphicFramePr = _ad.NewCT_NonVisualGraphicFrameProperties()
	_gdae.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_gcac:
	for {
		_efed, _cade := d.Token()
		if _cade != nil {
			return _cade
		}
		switch _acef := _efed.(type) {
		case _d.StartElement:
			switch _acef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _daab := d.DecodeElement(_gdae.CNvPr, &_acef); _daab != nil {
					return _daab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _abeba := d.DecodeElement(_gdae.CNvGraphicFramePr, &_acef); _abeba != nil {
					return _abeba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _adcc := d.DecodeElement(_gdae.NvPr, &_acef); _adcc != nil {
					return _adcc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006de\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0020\u0025\u0076", _acef.Name)
				if _fccd := d.Skip(); _fccd != nil {
					return _fccd
				}
			}
		case _d.EndElement:
			break _gcac
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLAnimVariantBooleanVal struct {

	// Value
	ValAttr bool
}

func (_baefab ST_TLCommandType) Validate() error { return _baefab.ValidateWithPath("") }

const (
	ST_PrintWhatUnset     ST_PrintWhat = 0
	ST_PrintWhatSlides    ST_PrintWhat = 1
	ST_PrintWhatHandouts1 ST_PrintWhat = 2
	ST_PrintWhatHandouts2 ST_PrintWhat = 3
	ST_PrintWhatHandouts3 ST_PrintWhat = 4
	ST_PrintWhatHandouts4 ST_PrintWhat = 5
	ST_PrintWhatHandouts6 ST_PrintWhat = 6
	ST_PrintWhatHandouts9 ST_PrintWhat = 7
	ST_PrintWhatNotes     ST_PrintWhat = 8
	ST_PrintWhatOutline   ST_PrintWhat = 9
)

func (_cfcca *ST_TLParaBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cfcca = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cfcca = 1
	case "\u0070":
		*_cfcca = 2
	case "\u0063\u0075\u0073\u0074":
		*_cfcca = 3
	case "\u0077\u0068\u006fl\u0065":
		*_cfcca = 4
	}
	return nil
}

const (
	ST_TLDiagramBuildTypeUnset         ST_TLDiagramBuildType = 0
	ST_TLDiagramBuildTypeWhole         ST_TLDiagramBuildType = 1
	ST_TLDiagramBuildTypeDepthByNode   ST_TLDiagramBuildType = 2
	ST_TLDiagramBuildTypeDepthByBranch ST_TLDiagramBuildType = 3
	ST_TLDiagramBuildTypeBreadthByNode ST_TLDiagramBuildType = 4
	ST_TLDiagramBuildTypeBreadthByLvl  ST_TLDiagramBuildType = 5
	ST_TLDiagramBuildTypeCw            ST_TLDiagramBuildType = 6
	ST_TLDiagramBuildTypeCwIn          ST_TLDiagramBuildType = 7
	ST_TLDiagramBuildTypeCwOut         ST_TLDiagramBuildType = 8
	ST_TLDiagramBuildTypeCcw           ST_TLDiagramBuildType = 9
	ST_TLDiagramBuildTypeCcwIn         ST_TLDiagramBuildType = 10
	ST_TLDiagramBuildTypeCcwOut        ST_TLDiagramBuildType = 11
	ST_TLDiagramBuildTypeInByRing      ST_TLDiagramBuildType = 12
	ST_TLDiagramBuildTypeOutByRing     ST_TLDiagramBuildType = 13
	ST_TLDiagramBuildTypeUp            ST_TLDiagramBuildType = 14
	ST_TLDiagramBuildTypeDown          ST_TLDiagramBuildType = 15
	ST_TLDiagramBuildTypeAllAtOnce     ST_TLDiagramBuildType = 16
	ST_TLDiagramBuildTypeCust          ST_TLDiagramBuildType = 17
)

type CT_ExtensionListModify struct {

	// Modify
	ModAttr *bool

	// Extension
	Ext []*CT_Extension
}

const (
	ST_TLTimeNodeFillTypeUnset      ST_TLTimeNodeFillType = 0
	ST_TLTimeNodeFillTypeRemove     ST_TLTimeNodeFillType = 1
	ST_TLTimeNodeFillTypeFreeze     ST_TLTimeNodeFillType = 2
	ST_TLTimeNodeFillTypeHold       ST_TLTimeNodeFillType = 3
	ST_TLTimeNodeFillTypeTransition ST_TLTimeNodeFillType = 4
)

func (_dfge *CT_NotesMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dfge.NotesMasterId != nil {
		_bcge := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_dfge.NotesMasterId, _bcge)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_daaba *ST_WebScreenSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfabg, _gcefe := d.Token()
	if _gcefe != nil {
		return _gcefe
	}
	if _ddad, _beed := _dfabg.(_d.EndElement); _beed && _ddad.Name == start.Name {
		*_daaba = 1
		return nil
	}
	if _adgcb, _faaag := _dfabg.(_d.CharData); !_faaag {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfabg)
	} else {
		switch string(_adgcb) {
		case "":
			*_daaba = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_daaba = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_daaba = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_daaba = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_daaba = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_daaba = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_daaba = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_daaba = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_daaba = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_daaba = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
			*_daaba = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_daaba = 11
		}
	}
	_dfabg, _gcefe = d.Token()
	if _gcefe != nil {
		return _gcefe
	}
	if _gcdef, _gfegaa := _dfabg.(_d.EndElement); _gfegaa && _gcdef.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfabg)
}

// Validate validates the CT_TLCommonMediaNodeData and its children
func (_gced *CT_TLCommonMediaNodeData) Validate() error {
	return _gced.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func (_fgaf *CT_NotesMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _fgaf.IdAttr)})
	e.EncodeToken(start)
	if _fgaf.ExtLst != nil {
		_ggff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgaf.ExtLst, _ggff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aafa ST_SlideLayoutType) ValidateWithPath(path string) error {
	switch _aafa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aafa))
	}
	return nil
}
func (_cdfcd *ViewPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdfcd.CT_ViewProperties = *NewCT_ViewProperties()
	for _, _dacdf := range start.Attr {
		if _dacdf.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_cdfcd.LastViewAttr.UnmarshalXMLAttr(_dacdf)
			continue
		}
		if _dacdf.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_gdbg, _befbc := _dc.ParseBool(_dacdf.Value)
			if _befbc != nil {
				return _befbc
			}
			_cdfcd.ShowCommentsAttr = &_gdbg
			continue
		}
	}
_aebec:
	for {
		_cfcce, _aaabd := d.Token()
		if _aaabd != nil {
			return _aaabd
		}
		switch _bgaaf := _cfcce.(type) {
		case _d.StartElement:
			switch _bgaaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.NormalViewPr = NewCT_NormalViewProperties()
				if _fcafg := d.DecodeElement(_cdfcd.NormalViewPr, &_bgaaf); _fcafg != nil {
					return _fcafg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.SlideViewPr = NewCT_SlideViewProperties()
				if _ddfbd := d.DecodeElement(_cdfcd.SlideViewPr, &_bgaaf); _ddfbd != nil {
					return _ddfbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.OutlineViewPr = NewCT_OutlineViewProperties()
				if _afgff := d.DecodeElement(_cdfcd.OutlineViewPr, &_bgaaf); _afgff != nil {
					return _afgff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _dgcec := d.DecodeElement(_cdfcd.NotesTextViewPr, &_bgaaf); _dgcec != nil {
					return _dgcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _bagbcb := d.DecodeElement(_cdfcd.SorterViewPr, &_bgaaf); _bagbcb != nil {
					return _bagbcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_cdfcd.NotesViewPr = NewCT_NotesViewProperties()
				if _bcde := d.DecodeElement(_cdfcd.NotesViewPr, &_bgaaf); _bcde != nil {
					return _bcde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_cdfcd.GridSpacing = _ad.NewCT_PositiveSize2D()
				if _dfgfb := d.DecodeElement(_cdfcd.GridSpacing, &_bgaaf); _dfgfb != nil {
					return _dfgfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdfcd.ExtLst = NewCT_ExtensionList()
				if _bdfde := d.DecodeElement(_cdfcd.ExtLst, &_bgaaf); _bdfde != nil {
					return _bdfde
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u0069\u0065\u0077\u0050\u0072\u0020\u0025\u0076", _bgaaf.Name)
				if _dbega := d.Skip(); _dbega != nil {
					return _dbega
				}
			}
		case _d.EndElement:
			break _aebec
		case _d.CharData:
		}
	}
	return nil
}
func (_gaccg *CT_TLByRgbColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _gc.Sprintf("\u0025\u0076", _gaccg.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067"}, Value: _gc.Sprintf("\u0025\u0076", _gaccg.GAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _gc.Sprintf("\u0025\u0076", _gaccg.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_defd *CT_TLByAnimateColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gccag:
	for {
		_afed, _bbdbb := d.Token()
		if _bbdbb != nil {
			return _bbdbb
		}
		switch _fbba := _afed.(type) {
		case _d.StartElement:
			switch _fbba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0067\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062"}:
				_defd.Rgb = NewCT_TLByRgbColorTransform()
				if _dfdfa := d.DecodeElement(_defd.Rgb, &_fbba); _dfdfa != nil {
					return _dfdfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_defd.Hsl = NewCT_TLByHslColorTransform()
				if _cacca := d.DecodeElement(_defd.Hsl, &_fbba); _cacca != nil {
					return _cacca
				}
			default:
				_de.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043\u006f\u006co\u0072\u0054ra\u006e\u0073\u0066o\u0072\u006d\u0020\u0025\u0076", _fbba.Name)
				if _fcbg := d.Skip(); _fcbg != nil {
					return _fcbg
				}
			}
		case _d.EndElement:
			break _gccag
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideMasterIdList and its children
func (_gbdd *CT_SlideMasterIdList) Validate() error {
	return _gbdd.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

type AG_ChildSlide struct {
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_fdabe *CT_WheelTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gggd := range start.Attr {
		if _gggd.Name.Local == "\u0073\u0070\u006f\u006b\u0065\u0073" {
			_afccg, _ccbee := _dc.ParseUint(_gggd.Value, 10, 32)
			if _ccbee != nil {
				return _ccbee
			}
			_bbef := uint32(_afccg)
			_fdabe.SpokesAttr = &_bbef
			continue
		}
	}
	for {
		_baaeb, _gfabb := d.Token()
		if _gfabb != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u0068\u0065\u0065\u006c\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _gfabb)
		}
		if _cbacg, _dfgfe := _baaeb.(_d.EndElement); _dfgfe && _cbacg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_ShowProperties struct {

	// Loop Slide Show
	LoopAttr *bool

	// Show Narration in Slide Show
	ShowNarrationAttr *bool

	// Show Animation in Slide Show
	ShowAnimationAttr *bool

	// Use Timings in Slide Show
	UseTimingsAttr *bool

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId

	// Pen Color for Slide Show
	PenClr *_ad.CT_Color
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_BuildList and its children, prefixing error messages with path
func (_deeg *CT_BuildList) ValidateWithPath(path string) error {
	for _dgdg, _gdg := range _deeg.BldP {
		if _bbg := _gdg.ValidateWithPath(_gc.Sprintf("%\u0073\u002f\u0042\u006c\u0064\u0050\u005b\u0025\u0064\u005d", path, _dgdg)); _bbg != nil {
			return _bbg
		}
	}
	for _gfgf, _eece := range _deeg.BldDgm {
		if _fge := _eece.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0044\u0067\u006d\u005b\u0025\u0064\u005d", path, _gfgf)); _fge != nil {
			return _fge
		}
	}
	for _cgf, _bdf := range _deeg.BldOleChart {
		if _fcbd := _bdf.ValidateWithPath(_gc.Sprintf("\u0025s\u002fB\u006c\u0064\u004f\u006c\u0065C\u0068\u0061r\u0074\u005b\u0025\u0064\u005d", path, _cgf)); _fcbd != nil {
			return _fcbd
		}
	}
	for _gggg, _dea := range _deeg.BldGraphic {
		if _fec := _dea.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0042\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069c\u005b\u0025\u0064\u005d", path, _gggg)); _fec != nil {
			return _fec
		}
	}
	return nil
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_egfeb *ST_TLAnimateColorSpace) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_egfeb = 0
	case "\u0072\u0067\u0062":
		*_egfeb = 1
	case "\u0068\u0073\u006c":
		*_egfeb = 2
	}
	return nil
}
func NewCT_OutlineViewSlideEntry() *CT_OutlineViewSlideEntry {
	_efbb := &CT_OutlineViewSlideEntry{}
	return _efbb
}
func (_cadb *CT_TLAnimVariantIntegerVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgcgc := range start.Attr {
		if _cgcgc.Name.Local == "\u0076\u0061\u006c" {
			_gcfe, _gfaa := _dc.ParseInt(_cgcgc.Value, 10, 32)
			if _gfaa != nil {
				return _gfaa
			}
			_cadb.ValAttr = int32(_gcfe)
			continue
		}
	}
	for {
		_aacbcc, _cdfeb := d.Token()
		if _cdfeb != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074I\u006e\u0074\u0065\u0067\u0065r\u0056\u0061l\u003a\u0020\u0025\u0073", _cdfeb)
		}
		if _fbbcb, _dacdd := _aacbcc.(_d.EndElement); _dacdd && _fbbcb.Name == start.Name {
			break
		}
	}
	return nil
}

// ST_TransitionEightDirectionType is a union type
type ST_TransitionEightDirectionType struct {
	ST_TransitionSideDirectionType   ST_TransitionSideDirectionType
	ST_TransitionCornerDirectionType ST_TransitionCornerDirectionType
}
type CT_TLCommonBehaviorData struct {

	// Additive
	AdditiveAttr ST_TLBehaviorAdditiveType

	// Accumulate
	AccumulateAttr ST_TLBehaviorAccumulateType

	// Transform Type
	XfrmTypeAttr ST_TLBehaviorTransformType

	// From
	FromAttr *string

	// To
	ToAttr *string

	// By
	ByAttr *string

	// Runtime Context
	RctxAttr *string

	// Override
	OverrideAttr ST_TLBehaviorOverrideType
	CTn          *CT_TLCommonTimeNodeData

	// Target Element
	TgtEl *CT_TLTimeTargetElement

	// Attribute Name List
	AttrNameLst *CT_TLBehaviorAttributeNameList
}

func (_bagbcg ST_TLAnimateBehaviorCalcMode) String() string {
	switch _bagbcg {
	case 0:
		return ""
	case 1:
		return "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065"
	case 2:
		return "\u006c\u0069\u006e"
	case 3:
		return "\u0066\u006d\u006c\u0061"
	}
	return ""
}
func NewCT_WebProperties() *CT_WebProperties { _fcff := &CT_WebProperties{}; return _fcff }
func NewCT_NormalViewProperties() *CT_NormalViewProperties {
	_ggad := &CT_NormalViewProperties{}
	_ggad.RestoredLeft = NewCT_NormalViewPortion()
	_ggad.RestoredTop = NewCT_NormalViewPortion()
	return _ggad
}

// Validate validates the CT_TLSubShapeId and its children
func (_gabb *CT_TLSubShapeId) Validate() error {
	return _gabb.ValidateWithPath("\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064")
}
func (_bbfc *CT_ShowInfoKiosk) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dffd := range start.Attr {
		if _dffd.Name.Local == "\u0072e\u0073\u0074\u0061\u0072\u0074" {
			_bcgbb, _ffdcc := _dc.ParseUint(_dffd.Value, 10, 32)
			if _ffdcc != nil {
				return _ffdcc
			}
			_ecef := uint32(_bcgbb)
			_bbfc.RestartAttr = &_ecef
			continue
		}
	}
	for {
		_cdcfd, _cfcbb := d.Token()
		if _cfcbb != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u006f\u0077I\u006ef\u006f\u004b\u0069\u006f\u0073\u006b\u003a \u0025\u0073", _cfcbb)
		}
		if _badg, _eacdc := _cdcfd.(_d.EndElement); _eacdc && _badg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfddf *ST_TLTriggerRuntimeNode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cfddf = 0
	case "\u0066\u0069\u0072s\u0074":
		*_cfddf = 1
	case "\u006c\u0061\u0073\u0074":
		*_cfddf = 2
	case "\u0061\u006c\u006c":
		*_cfddf = 3
	}
	return nil
}
func (_dcgdfg *CT_TLAnimateMotionBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcgdfg.OriginAttr != ST_TLAnimateMotionBehaviorOriginUnset {
		_adccd, _cbcbd := _dcgdfg.OriginAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0067\u0069\u006e"})
		if _cbcbd != nil {
			return _cbcbd
		}
		start.Attr = append(start.Attr, _adccd)
	}
	if _dcgdfg.PathAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0061\u0074\u0068"}, Value: _gc.Sprintf("\u0025\u0076", *_dcgdfg.PathAttr)})
	}
	if _dcgdfg.PathEditModeAttr != ST_TLAnimateMotionPathEditModeUnset {
		_affad, _gfafg := _dcgdfg.PathEditModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065"})
		if _gfafg != nil {
			return _gfafg
		}
		start.Attr = append(start.Attr, _affad)
	}
	if _dcgdfg.RAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0041\u006e\u0067"}, Value: _gc.Sprintf("\u0025\u0076", *_dcgdfg.RAngAttr)})
	}
	if _dcgdfg.PtsTypesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0076", *_dcgdfg.PtsTypesAttr)})
	}
	e.EncodeToken(start)
	_cgafb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_dcgdfg.CBhvr, _cgafb)
	if _dcgdfg.By != nil {
		_aacc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_dcgdfg.By, _aacc)
	}
	if _dcgdfg.From != nil {
		_afcc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_dcgdfg.From, _afcc)
	}
	if _dcgdfg.To != nil {
		_bcgde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_dcgdfg.To, _bcgde)
	}
	if _dcgdfg.RCtr != nil {
		_eccfe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0043\u0074\u0072"}}
		e.EncodeElement(_dcgdfg.RCtr, _eccfe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddcecc *ST_TLAnimateColorSpace) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bagfd, _ccgdb := d.Token()
	if _ccgdb != nil {
		return _ccgdb
	}
	if _cgec, _gefcb := _bagfd.(_d.EndElement); _gefcb && _cgec.Name == start.Name {
		*_ddcecc = 1
		return nil
	}
	if _daeebe, _affe := _bagfd.(_d.CharData); !_affe {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bagfd)
	} else {
		switch string(_daeebe) {
		case "":
			*_ddcecc = 0
		case "\u0072\u0067\u0062":
			*_ddcecc = 1
		case "\u0068\u0073\u006c":
			*_ddcecc = 2
		}
	}
	_bagfd, _ccgdb = d.Token()
	if _ccgdb != nil {
		return _ccgdb
	}
	if _fegf, _fefab := _bagfd.(_d.EndElement); _fefab && _fegf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bagfd)
}

// Validate validates the CT_Kinsoku and its children
func (_ebac *CT_Kinsoku) Validate() error {
	return _ebac.ValidateWithPath("\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075")
}
func (_dfeg *CT_EmbeddedFontListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfeg.Font = _ad.NewCT_TextFont()
_bcee:
	for {
		_egfd, _aeae := d.Token()
		if _aeae != nil {
			return _aeae
		}
		switch _eab := _egfd.(type) {
		case _d.StartElement:
			switch _eab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				if _gfcge := d.DecodeElement(_dfeg.Font, &_eab); _gfcge != nil {
					return _gfcge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0067\u0075\u006c\u0061\u0072"}:
				_dfeg.Regular = NewCT_EmbeddedFontDataId()
				if _gcbf := d.DecodeElement(_dfeg.Regular, &_eab); _gcbf != nil {
					return _gcbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064"}:
				_dfeg.Bold = NewCT_EmbeddedFontDataId()
				if _ddd := d.DecodeElement(_dfeg.Bold, &_eab); _ddd != nil {
					return _ddd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0061\u006c\u0069\u0063"}:
				_dfeg.Italic = NewCT_EmbeddedFontDataId()
				if _eef := d.DecodeElement(_dfeg.Italic, &_eab); _eef != nil {
					return _eef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}:
				_dfeg.BoldItalic = NewCT_EmbeddedFontDataId()
				if _fffe := d.DecodeElement(_dfeg.BoldItalic, &_eab); _fffe != nil {
					return _fffe
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074E\u006e\u0074\u0072\u0079\u0020%\u0076", _eab.Name)
				if _afaa := d.Skip(); _afaa != nil {
					return _afaa
				}
			}
		case _d.EndElement:
			break _bcee
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLByRgbColorTransform struct {

	// Red
	RAttr _ad.ST_FixedPercentage

	// Green
	GAttr _ad.ST_FixedPercentage

	// Blue
	BAttr _ad.ST_FixedPercentage
}

func NewCT_TLByRgbColorTransform() *CT_TLByRgbColorTransform {
	_decbf := &CT_TLByRgbColorTransform{}
	return _decbf
}

// ValidateWithPath validates the CT_SlideTransition and its children, prefixing error messages with path
func (_cebfd *CT_SlideTransition) ValidateWithPath(path string) error {
	if _dfdga := _cebfd.SpdAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0064\u0041\u0074\u0074\u0072"); _dfdga != nil {
		return _dfdga
	}
	if _cebfd.Choice != nil {
		if _agbd := _cebfd.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _agbd != nil {
			return _agbd
		}
	}
	if _cebfd.SndAc != nil {
		if _bcaba := _cebfd.SndAc.ValidateWithPath(path + "\u002f\u0053\u006e\u0064\u0041\u0063"); _bcaba != nil {
			return _bcaba
		}
	}
	if _cebfd.ExtLst != nil {
		if _gfbga := _cebfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfbga != nil {
			return _gfbga
		}
	}
	return nil
}
func (_bcfga *HandoutMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcfga.CT_HandoutMaster = *NewCT_HandoutMaster()
_cggaf:
	for {
		_bbbda, _dcgc := d.Token()
		if _dcgc != nil {
			return _dcgc
		}
		switch _cbbd := _bbbda.(type) {
		case _d.StartElement:
			switch _cbbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cbgf := d.DecodeElement(_bcfga.CSld, &_cbbd); _cbgf != nil {
					return _cbgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _daedc := d.DecodeElement(_bcfga.ClrMap, &_cbbd); _daedc != nil {
					return _daedc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_bcfga.Hf = NewCT_HeaderFooter()
				if _ebfgc := d.DecodeElement(_bcfga.Hf, &_cbbd); _ebfgc != nil {
					return _ebfgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcfga.ExtLst = NewCT_ExtensionListModify()
				if _fgbge := d.DecodeElement(_bcfga.ExtLst, &_cbbd); _fgbge != nil {
					return _fgbge
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072 \u0025\u0076", _cbbd.Name)
				if _fgfd := d.Skip(); _fgfd != nil {
					return _fgfd
				}
			}
		case _d.EndElement:
			break _cggaf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_OleObjectLink() *CT_OleObjectLink { _bcca := &CT_OleObjectLink{}; return _bcca }

// Validate validates the CT_TLCommandBehavior and its children
func (_eggf *CT_TLCommandBehavior) Validate() error {
	return _eggf.ValidateWithPath("C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072")
}
func (_ggce *CT_OleObject) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggce.Choice = NewCT_OleObjectChoice()
	for _, _eagba := range start.Attr {
		if _eagba.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eagba.Name.Local == "\u0069\u0064" {
			_fgbe, _bddb := _eagba.Value, error(nil)
			if _bddb != nil {
				return _bddb
			}
			_ggce.IdAttr = &_fgbe
			continue
		}
		if _eagba.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gace, _cacc := _eagba.Value, error(nil)
			if _cacc != nil {
				return _cacc
			}
			_ggce.SpidAttr = &_gace
			continue
		}
		if _eagba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcag, _fdfbc := _eagba.Value, error(nil)
			if _fdfbc != nil {
				return _fdfbc
			}
			_ggce.NameAttr = &_bcag
			continue
		}
		if _eagba.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_gdgaf, _gdggc := _dc.ParseBool(_eagba.Value)
			if _gdggc != nil {
				return _gdggc
			}
			_ggce.ShowAsIconAttr = &_gdgaf
			continue
		}
		if _eagba.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_ffbd, _bcgg := _eagba.Value, error(nil)
			if _bcgg != nil {
				return _bcgg
			}
			_ggce.ProgIdAttr = &_ffbd
			continue
		}
		if _eagba.Name.Local == "\u0069\u006d\u0067\u0057" {
			_bceee, _edfbc := _dc.ParseInt(_eagba.Value, 10, 32)
			if _edfbc != nil {
				return _edfbc
			}
			_baee := int32(_bceee)
			_ggce.ImgWAttr = &_baee
			continue
		}
		if _eagba.Name.Local == "\u0069\u006d\u0067\u0048" {
			_becdg, _dbab := _dc.ParseInt(_eagba.Value, 10, 32)
			if _dbab != nil {
				return _dbab
			}
			_dece := int32(_becdg)
			_ggce.ImgHAttr = &_dece
			continue
		}
	}
_ecad:
	for {
		_bcfb, _beadg := d.Token()
		if _beadg != nil {
			return _beadg
		}
		switch _afbdb := _bcfb.(type) {
		case _d.StartElement:
			switch _afbdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_ggce.Choice = NewCT_OleObjectChoice()
				if _cdeag := d.DecodeElement(&_ggce.Choice.Embed, &_afbdb); _cdeag != nil {
					return _cdeag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_ggce.Choice = NewCT_OleObjectChoice()
				if _gaae := d.DecodeElement(&_ggce.Choice.Link, &_afbdb); _gaae != nil {
					return _gaae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_ggce.Pic = NewCT_Picture()
				if _gfdg := d.DecodeElement(_ggce.Pic, &_afbdb); _gfdg != nil {
					return _gfdg
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _afbdb.Name)
				if _adbff := d.Skip(); _adbff != nil {
					return _adbff
				}
			}
		case _d.EndElement:
			break _ecad
		case _d.CharData:
		}
	}
	return nil
}
func (_beefa *CT_WebProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _beefa.ShowAnimationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.ShowAnimationAttr))})
	}
	if _beefa.ResizeGraphicsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.ResizeGraphicsAttr))})
	}
	if _beefa.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.AllowPngAttr))})
	}
	if _beefa.RelyOnVmlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.RelyOnVmlAttr))})
	}
	if _beefa.OrganizeInFoldersAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.OrganizeInFoldersAttr))})
	}
	if _beefa.UseLongFilenamesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beefa.UseLongFilenamesAttr))})
	}
	if _beefa.ImgSzAttr != ST_WebScreenSizeUnset {
		_dggdc, _gfcab := _beefa.ImgSzAttr.MarshalXMLAttr(_d.Name{Local: "\u0069\u006d\u0067S\u007a"})
		if _gfcab != nil {
			return _gfcab
		}
		start.Attr = append(start.Attr, _dggdc)
	}
	if _beefa.EncodingAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067"}, Value: _gc.Sprintf("\u0025\u0076", *_beefa.EncodingAttr)})
	}
	if _beefa.ClrAttr != ST_WebColorTypeUnset {
		_bcfae, _dgadf := _beefa.ClrAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006c\u0072"})
		if _dgadf != nil {
			return _dgadf
		}
		start.Attr = append(start.Attr, _bcfae)
	}
	e.EncodeToken(start)
	if _beefa.ExtLst != nil {
		_ebeea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_beefa.ExtLst, _ebeea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TimeNodeList() *CT_TimeNodeList { _dgccb := &CT_TimeNodeList{}; return _dgccb }
func (_cfdd *CT_GroupShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfdd.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_cfdd.CNvGrpSpPr = _ad.NewCT_NonVisualGroupDrawingShapeProps()
	_cfdd.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_gaec:
	for {
		_gcad, _ebee := d.Token()
		if _ebee != nil {
			return _ebee
		}
		switch _bec := _gcad.(type) {
		case _d.StartElement:
			switch _bec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _efcc := d.DecodeElement(_cfdd.CNvPr, &_bec); _efcc != nil {
					return _efcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _gecf := d.DecodeElement(_cfdd.CNvGrpSpPr, &_bec); _gecf != nil {
					return _gecf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _gbfd := d.DecodeElement(_cfdd.NvPr, &_bec); _gbfd != nil {
					return _gbfd
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _bec.Name)
				if _gccf := d.Skip(); _gccf != nil {
					return _gccf
				}
			}
		case _d.EndElement:
			break _gaec
		case _d.CharData:
		}
	}
	return nil
}
func (_bgefa ST_TLTimeNodeMasterRelation) ValidateWithPath(path string) error {
	switch _bgefa {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgefa))
	}
	return nil
}

// Validate validates the CT_NotesMasterIdList and its children
func (_fbdc *CT_NotesMasterIdList) Validate() error {
	return _fbdc.ValidateWithPath("C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074")
}

const (
	ST_IterateTypeUnset ST_IterateType = 0
	ST_IterateTypeEl    ST_IterateType = 1
	ST_IterateTypeWd    ST_IterateType = 2
	ST_IterateTypeLt    ST_IterateType = 3
)

func NewCT_TransitionStartSoundAction() *CT_TransitionStartSoundAction {
	_cgeeg := &CT_TransitionStartSoundAction{}
	_cgeeg.Snd = _ad.NewCT_EmbeddedWAVAudioFile()
	return _cgeeg
}

// ValidateWithPath validates the Notes and its children, prefixing error messages with path
func (_aeed *Notes) ValidateWithPath(path string) error {
	if _fcccf := _aeed.CT_NotesSlide.ValidateWithPath(path); _fcccf != nil {
		return _fcccf
	}
	return nil
}

// Validate validates the CT_CustomShowList and its children
func (_aabe *CT_CustomShowList) Validate() error {
	return _aabe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_TLPoint and its children, prefixing error messages with path
func (_bdbbe *CT_TLPoint) ValidateWithPath(path string) error {
	if _effg := _bdbbe.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _effg != nil {
		return _effg
	}
	if _eaac := _bdbbe.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _eaac != nil {
		return _eaac
	}
	return nil
}
func (_bedag *CT_SmartTags) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _daccb := range start.Attr {
		if _daccb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _daccb.Name.Local == "\u0069\u0064" || _daccb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _daccb.Name.Local == "\u0069\u0064" {
			_defg, _gecfg := _daccb.Value, error(nil)
			if _gecfg != nil {
				return _gecfg
			}
			_bedag.IdAttr = _defg
			continue
		}
	}
	for {
		_bbfcb, _cecb := d.Token()
		if _cecb != nil {
			return _gc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006da\u0072\u0074\u0054\u0061\u0067\u0073\u003a\u0020\u0025\u0073", _cecb)
		}
		if _fbgb, _ffaa := _bbfcb.(_d.EndElement); _ffaa && _fbgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cafffdg *OleObj) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u006f\u006c\u0065\u004f\u0062\u006a"
	return _cafffdg.CT_OleObject.MarshalXML(e, start)
}
func (_daeebg *CT_TLAnimateBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_daeebg.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _bfbad := range start.Attr {
		if _bfbad.Name.Local == "\u0062\u0079" {
			_bbeb, _cbbef := _bfbad.Value, error(nil)
			if _cbbef != nil {
				return _cbbef
			}
			_daeebg.ByAttr = &_bbeb
			continue
		}
		if _bfbad.Name.Local == "\u0066\u0072\u006f\u006d" {
			_dcbbf, _dafa := _bfbad.Value, error(nil)
			if _dafa != nil {
				return _dafa
			}
			_daeebg.FromAttr = &_dcbbf
			continue
		}
		if _bfbad.Name.Local == "\u0074\u006f" {
			_bcad, _cded := _bfbad.Value, error(nil)
			if _cded != nil {
				return _cded
			}
			_daeebg.ToAttr = &_bcad
			continue
		}
		if _bfbad.Name.Local == "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065" {
			_daeebg.CalcmodeAttr.UnmarshalXMLAttr(_bfbad)
			continue
		}
		if _bfbad.Name.Local == "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e" {
			_daeebg.ValueTypeAttr.UnmarshalXMLAttr(_bfbad)
			continue
		}
	}
_cbae:
	for {
		_cdec, _cdecb := d.Token()
		if _cdecb != nil {
			return _cdecb
		}
		switch _agbg := _cdec.(type) {
		case _d.StartElement:
			switch _agbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _acfb := d.DecodeElement(_daeebg.CBhvr, &_agbg); _acfb != nil {
					return _acfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0076\u004c\u0073\u0074"}:
				_daeebg.TavLst = NewCT_TLTimeAnimateValueList()
				if _aagff := d.DecodeElement(_daeebg.TavLst, &_agbg); _aagff != nil {
					return _aagff
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _agbg.Name)
				if _adfg := d.Skip(); _adfg != nil {
					return _adfg
				}
			}
		case _d.EndElement:
			break _cbae
		case _d.CharData:
		}
	}
	return nil
}
func (_afbd *CT_HandoutMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agf := range start.Attr {
		if _agf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agf.Name.Local == "\u0069\u0064" || _agf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _agf.Name.Local == "\u0069\u0064" {
			_efge, _gegf := _agf.Value, error(nil)
			if _gegf != nil {
				return _gegf
			}
			_afbd.IdAttr = _efge
			continue
		}
	}
_bbbb:
	for {
		_caff, _gagaa := d.Token()
		if _gagaa != nil {
			return _gagaa
		}
		switch _deba := _caff.(type) {
		case _d.StartElement:
			switch _deba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afbd.ExtLst = NewCT_ExtensionList()
				if _deag := d.DecodeElement(_afbd.ExtLst, &_deba); _deag != nil {
					return _deag
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074\u0045\u006e\u0074\u0072\u0079\u0020\u0025\u0076", _deba.Name)
				if _fda := d.Skip(); _fda != nil {
					return _fda
				}
			}
		case _d.EndElement:
			break _bbbb
		case _d.CharData:
		}
	}
	return nil
}
func (_gcdcc ST_TLDiagramBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfdad := _d.Attr{}
	_gfdad.Name = name
	switch _gcdcc {
	case ST_TLDiagramBuildTypeUnset:
		_gfdad.Value = ""
	case ST_TLDiagramBuildTypeWhole:
		_gfdad.Value = "\u0077\u0068\u006fl\u0065"
	case ST_TLDiagramBuildTypeDepthByNode:
		_gfdad.Value = "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeDepthByBranch:
		_gfdad.Value = "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case ST_TLDiagramBuildTypeBreadthByNode:
		_gfdad.Value = "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case ST_TLDiagramBuildTypeBreadthByLvl:
		_gfdad.Value = "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case ST_TLDiagramBuildTypeCw:
		_gfdad.Value = "\u0063\u0077"
	case ST_TLDiagramBuildTypeCwIn:
		_gfdad.Value = "\u0063\u0077\u0049\u006e"
	case ST_TLDiagramBuildTypeCwOut:
		_gfdad.Value = "\u0063\u0077\u004fu\u0074"
	case ST_TLDiagramBuildTypeCcw:
		_gfdad.Value = "\u0063\u0063\u0077"
	case ST_TLDiagramBuildTypeCcwIn:
		_gfdad.Value = "\u0063\u0063\u0077I\u006e"
	case ST_TLDiagramBuildTypeCcwOut:
		_gfdad.Value = "\u0063\u0063\u0077\u004f\u0075\u0074"
	case ST_TLDiagramBuildTypeInByRing:
		_gfdad.Value = "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case ST_TLDiagramBuildTypeOutByRing:
		_gfdad.Value = "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case ST_TLDiagramBuildTypeUp:
		_gfdad.Value = "\u0075\u0070"
	case ST_TLDiagramBuildTypeDown:
		_gfdad.Value = "\u0064\u006f\u0077\u006e"
	case ST_TLDiagramBuildTypeAllAtOnce:
		_gfdad.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLDiagramBuildTypeCust:
		_gfdad.Value = "\u0063\u0075\u0073\u0074"
	}
	return _gfdad, nil
}
func (_feab ST_PrintColorMode) ValidateWithPath(path string) error {
	switch _feab {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feab))
	}
	return nil
}
func (_dddea ST_TLDiagramBuildType) String() string {
	switch _dddea {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006fl\u0065"
	case 2:
		return "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 3:
		return "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068"
	case 4:
		return "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065"
	case 5:
		return "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c"
	case 6:
		return "\u0063\u0077"
	case 7:
		return "\u0063\u0077\u0049\u006e"
	case 8:
		return "\u0063\u0077\u004fu\u0074"
	case 9:
		return "\u0063\u0063\u0077"
	case 10:
		return "\u0063\u0063\u0077I\u006e"
	case 11:
		return "\u0063\u0063\u0077\u004f\u0075\u0074"
	case 12:
		return "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067"
	case 13:
		return "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg"
	case 14:
		return "\u0075\u0070"
	case 15:
		return "\u0064\u006f\u0077\u006e"
	case 16:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 17:
		return "\u0063\u0075\u0073\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_SlideLayout and its children, prefixing error messages with path
func (_gbgde *CT_SlideLayout) ValidateWithPath(path string) error {
	if _gcbbf := _gbgde.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gcbbf != nil {
		return _gcbbf
	}
	if _dgfa := _gbgde.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _dgfa != nil {
		return _dgfa
	}
	if _gbgde.ClrMapOvr != nil {
		if _ebggc := _gbgde.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _ebggc != nil {
			return _ebggc
		}
	}
	if _gbgde.Transition != nil {
		if _ccc := _gbgde.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _ccc != nil {
			return _ccc
		}
	}
	if _gbgde.Timing != nil {
		if _fbea := _gbgde.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _fbea != nil {
			return _fbea
		}
	}
	if _gbgde.Hf != nil {
		if _degga := _gbgde.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _degga != nil {
			return _degga
		}
	}
	if _gbgde.ExtLst != nil {
		if _fbcba := _gbgde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fbcba != nil {
			return _fbcba
		}
	}
	return nil
}

type CT_OleObjectEmbed struct {

	// Color Scheme Properties for Embedded object
	FollowColorSchemeAttr ST_OleObjectFollowColorScheme
	ExtLst                *CT_ExtensionList
}

func (_ebge *CT_ConnectorNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cgeg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_ebge.CNvPr, _cgeg)
	_aef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ebge.CNvCxnSpPr, _aef)
	_bgdd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_ebge.NvPr, _bgdd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdcd *Presentation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdcd.CT_Presentation = *NewCT_Presentation()
	for _, _ecbb := range start.Attr {
		if _ecbb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_egedg, _egfcab := _dc.ParseInt(_ecbb.Value, 10, 32)
			if _egfcab != nil {
				return _egfcab
			}
			_dfabb := int32(_egedg)
			_fdcd.FirstSlideNumAttr = &_dfabb
			continue
		}
		if _ecbb.Name.Local == "\u0072\u0074\u006c" {
			_baceea, _ababd := _dc.ParseBool(_ecbb.Value)
			if _ababd != nil {
				return _ababd
			}
			_fdcd.RtlAttr = &_baceea
			continue
		}
		if _ecbb.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_fcefc, _fedfgg := _dc.ParseBool(_ecbb.Value)
			if _fedfgg != nil {
				return _fedfgg
			}
			_fdcd.CompatModeAttr = &_fcefc
			continue
		}
		if _ecbb.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_faegd, _bdddd := _dc.ParseBool(_ecbb.Value)
			if _bdddd != nil {
				return _bdddd
			}
			_fdcd.EmbedTrueTypeFontsAttr = &_faegd
			continue
		}
		if _ecbb.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_cddc, _edcaea := _dc.ParseBool(_ecbb.Value)
			if _edcaea != nil {
				return _edcaea
			}
			_fdcd.AutoCompressPicturesAttr = &_cddc
			continue
		}
		if _ecbb.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_bdddb, _ccecf := _dc.ParseBool(_ecbb.Value)
			if _ccecf != nil {
				return _ccecf
			}
			_fdcd.ShowSpecialPlsOnTitleSldAttr = &_bdddb
			continue
		}
		if _ecbb.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_gbbfc, _abgce := ParseUnionST_Percentage(_ecbb.Value)
			if _abgce != nil {
				return _abgce
			}
			_fdcd.ServerZoomAttr = &_gbbfc
			continue
		}
		if _ecbb.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_fdcd.ConformanceAttr.UnmarshalXMLAttr(_ecbb)
			continue
		}
		if _ecbb.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_dfcgb, _gbfca := _dc.ParseBool(_ecbb.Value)
			if _gbfca != nil {
				return _gbfca
			}
			_fdcd.RemovePersonalInfoOnSaveAttr = &_dfcgb
			continue
		}
		if _ecbb.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_dbaee, _fgff := _dc.ParseBool(_ecbb.Value)
			if _fgff != nil {
				return _fgff
			}
			_fdcd.SaveSubsetFontsAttr = &_dbaee
			continue
		}
		if _ecbb.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_dedff, _bcffc := _dc.ParseUint(_ecbb.Value, 10, 32)
			if _bcffc != nil {
				return _bcffc
			}
			_badac := uint32(_dedff)
			_fdcd.BookmarkIdSeedAttr = &_badac
			continue
		}
		if _ecbb.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_cdcdd, _edac := _dc.ParseBool(_ecbb.Value)
			if _edac != nil {
				return _edac
			}
			_fdcd.StrictFirstAndLastCharsAttr = &_cdcdd
			continue
		}
	}
_daaga:
	for {
		_efbaf, _edfaa := d.Token()
		if _edfaa != nil {
			return _edfaa
		}
		switch _ecbbb := _efbaf.(type) {
		case _d.StartElement:
			switch _ecbbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_fdcd.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _ddeae := d.DecodeElement(_fdcd.SldMasterIdLst, &_ecbbb); _ddeae != nil {
					return _ddeae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_fdcd.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _cafeb := d.DecodeElement(_fdcd.NotesMasterIdLst, &_ecbbb); _cafeb != nil {
					return _cafeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_fdcd.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _dagcba := d.DecodeElement(_fdcd.HandoutMasterIdLst, &_ecbbb); _dagcba != nil {
					return _dagcba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_fdcd.SldIdLst = NewCT_SlideIdList()
				if _dbegg := d.DecodeElement(_fdcd.SldIdLst, &_ecbbb); _dbegg != nil {
					return _dbegg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_fdcd.SldSz = NewCT_SlideSize()
				if _gbgcg := d.DecodeElement(_fdcd.SldSz, &_ecbbb); _gbgcg != nil {
					return _gbgcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _abdee := d.DecodeElement(_fdcd.NotesSz, &_ecbbb); _abdee != nil {
					return _abdee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_fdcd.SmartTags = NewCT_SmartTags()
				if _bbdef := d.DecodeElement(_fdcd.SmartTags, &_ecbbb); _bbdef != nil {
					return _bbdef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_fdcd.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _gbgabf := d.DecodeElement(_fdcd.EmbeddedFontLst, &_ecbbb); _gbgabf != nil {
					return _gbgabf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_fdcd.CustShowLst = NewCT_CustomShowList()
				if _bfbeb := d.DecodeElement(_fdcd.CustShowLst, &_ecbbb); _bfbeb != nil {
					return _bfbeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_fdcd.PhotoAlbum = NewCT_PhotoAlbum()
				if _gfed := d.DecodeElement(_fdcd.PhotoAlbum, &_ecbbb); _gfed != nil {
					return _gfed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_fdcd.CustDataLst = NewCT_CustomerDataList()
				if _dedac := d.DecodeElement(_fdcd.CustDataLst, &_ecbbb); _dedac != nil {
					return _dedac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_fdcd.Kinsoku = NewCT_Kinsoku()
				if _ccbaf := d.DecodeElement(_fdcd.Kinsoku, &_ecbbb); _ccbaf != nil {
					return _ccbaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_fdcd.DefaultTextStyle = _ad.NewCT_TextListStyle()
				if _cbcee := d.DecodeElement(_fdcd.DefaultTextStyle, &_ecbbb); _cbcee != nil {
					return _cbcee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_fdcd.ModifyVerifier = NewCT_ModifyVerifier()
				if _gebe := d.DecodeElement(_fdcd.ModifyVerifier, &_ecbbb); _gebe != nil {
					return _gebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdcd.ExtLst = NewCT_ExtensionList()
				if _acdec := d.DecodeElement(_fdcd.ExtLst, &_ecbbb); _acdec != nil {
					return _acdec
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0072es\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _ecbbb.Name)
				if _fdbdb := d.Skip(); _fdbdb != nil {
					return _fdbdb
				}
			}
		case _d.EndElement:
			break _daaga
		case _d.CharData:
		}
	}
	return nil
}
func (_fbgbe ST_TLAnimateMotionBehaviorOrigin) String() string {
	switch _fbgbe {
	case 0:
		return ""
	case 1:
		return "\u0070\u0061\u0072\u0065\u006e\u0074"
	case 2:
		return "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}
func (_dcdag *ST_PlaceholderType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dcdag = 0
	case "\u0074\u0069\u0074l\u0065":
		*_dcdag = 1
	case "\u0062\u006f\u0064\u0079":
		*_dcdag = 2
	case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
		*_dcdag = 3
	case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
		*_dcdag = 4
	case "\u0064\u0074":
		*_dcdag = 5
	case "\u0073\u006c\u0064\u004e\u0075\u006d":
		*_dcdag = 6
	case "\u0066\u0074\u0072":
		*_dcdag = 7
	case "\u0068\u0064\u0072":
		*_dcdag = 8
	case "\u006f\u0062\u006a":
		*_dcdag = 9
	case "\u0063\u0068\u0061r\u0074":
		*_dcdag = 10
	case "\u0074\u0062\u006c":
		*_dcdag = 11
	case "\u0063l\u0069\u0070\u0041\u0072\u0074":
		*_dcdag = 12
	case "\u0064\u0067\u006d":
		*_dcdag = 13
	case "\u006d\u0065\u0064i\u0061":
		*_dcdag = 14
	case "\u0073\u006c\u0064\u0049\u006d\u0067":
		*_dcdag = 15
	case "\u0070\u0069\u0063":
		*_dcdag = 16
	}
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList { _fgagae := &EG_ExtensionList{}; return _fgagae }
func NewCT_TLAnimateColorBehavior() *CT_TLAnimateColorBehavior {
	_ecgcc := &CT_TLAnimateColorBehavior{}
	_ecgcc.CBhvr = NewCT_TLCommonBehaviorData()
	return _ecgcc
}
func (_bfbea ST_PlaceholderType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dfede := _d.Attr{}
	_dfede.Name = name
	switch _bfbea {
	case ST_PlaceholderTypeUnset:
		_dfede.Value = ""
	case ST_PlaceholderTypeTitle:
		_dfede.Value = "\u0074\u0069\u0074l\u0065"
	case ST_PlaceholderTypeBody:
		_dfede.Value = "\u0062\u006f\u0064\u0079"
	case ST_PlaceholderTypeCtrTitle:
		_dfede.Value = "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeSubTitle:
		_dfede.Value = "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case ST_PlaceholderTypeDt:
		_dfede.Value = "\u0064\u0074"
	case ST_PlaceholderTypeSldNum:
		_dfede.Value = "\u0073\u006c\u0064\u004e\u0075\u006d"
	case ST_PlaceholderTypeFtr:
		_dfede.Value = "\u0066\u0074\u0072"
	case ST_PlaceholderTypeHdr:
		_dfede.Value = "\u0068\u0064\u0072"
	case ST_PlaceholderTypeObj:
		_dfede.Value = "\u006f\u0062\u006a"
	case ST_PlaceholderTypeChart:
		_dfede.Value = "\u0063\u0068\u0061r\u0074"
	case ST_PlaceholderTypeTbl:
		_dfede.Value = "\u0074\u0062\u006c"
	case ST_PlaceholderTypeClipArt:
		_dfede.Value = "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case ST_PlaceholderTypeDgm:
		_dfede.Value = "\u0064\u0067\u006d"
	case ST_PlaceholderTypeMedia:
		_dfede.Value = "\u006d\u0065\u0064i\u0061"
	case ST_PlaceholderTypeSldImg:
		_dfede.Value = "\u0073\u006c\u0064\u0049\u006d\u0067"
	case ST_PlaceholderTypePic:
		_dfede.Value = "\u0070\u0069\u0063"
	}
	return _dfede, nil
}

type ST_TLAnimateColorDirection byte

func NewCT_TLAnimVariantFloatVal() *CT_TLAnimVariantFloatVal {
	_egea := &CT_TLAnimVariantFloatVal{}
	return _egea
}
func (_bbagc *ST_TLPreviousActionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfccg, _ecgeg := d.Token()
	if _ecgeg != nil {
		return _ecgeg
	}
	if _eccbe, _cfaea := _dfccg.(_d.EndElement); _cfaea && _eccbe.Name == start.Name {
		*_bbagc = 1
		return nil
	}
	if _ffbbab, _caaee := _dfccg.(_d.CharData); !_caaee {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfccg)
	} else {
		switch string(_ffbbab) {
		case "":
			*_bbagc = 0
		case "\u006e\u006f\u006e\u0065":
			*_bbagc = 1
		case "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d":
			*_bbagc = 2
		}
	}
	_dfccg, _ecgeg = d.Token()
	if _ecgeg != nil {
		return _ecgeg
	}
	if _afccba, _bcfgg := _dfccg.(_d.EndElement); _bcfgg && _afccba.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfccg)
}

const (
	ST_TLAnimateColorSpaceUnset ST_TLAnimateColorSpace = 0
	ST_TLAnimateColorSpaceRgb   ST_TLAnimateColorSpace = 1
	ST_TLAnimateColorSpaceHsl   ST_TLAnimateColorSpace = 2
)

func (_gdfc ST_TLPreviousActionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffgd := _d.Attr{}
	_ffgd.Name = name
	switch _gdfc {
	case ST_TLPreviousActionTypeUnset:
		_ffgd.Value = ""
	case ST_TLPreviousActionTypeNone:
		_ffgd.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLPreviousActionTypeSkipTimed:
		_ffgd.Value = "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return _ffgd, nil
}
func NewCT_GraphicalObjectFrame() *CT_GraphicalObjectFrame {
	_agcf := &CT_GraphicalObjectFrame{}
	_agcf.NvGraphicFramePr = NewCT_GraphicalObjectFrameNonVisual()
	_agcf.Xfrm = _ad.NewCT_Transform2D()
	_agcf.Graphic = _ad.NewGraphic()
	return _agcf
}
func (_cfdbd ST_TransitionEightDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfdbd.ST_TransitionSideDirectionType != ST_TransitionSideDirectionTypeUnset {
		e.EncodeToken(_d.CharData(_cfdbd.ST_TransitionSideDirectionType.String()))
	}
	if _cfdbd.ST_TransitionCornerDirectionType != ST_TransitionCornerDirectionTypeUnset {
		e.EncodeToken(_d.CharData(_cfdbd.ST_TransitionCornerDirectionType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type CT_TLAnimVariant struct {

	// Boolean Variant
	BoolVal *CT_TLAnimVariantBooleanVal

	// Integer
	IntVal *CT_TLAnimVariantIntegerVal

	// Float Value
	FltVal *CT_TLAnimVariantFloatVal

	// String Value
	StrVal *CT_TLAnimVariantStringVal

	// Color Value
	ClrVal *_ad.CT_Color
}

// Validate validates the CT_TLIterateIntervalTime and its children
func (_faddb *CT_TLIterateIntervalTime) Validate() error {
	return _faddb.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065")
}

// ValidateWithPath validates the CT_TLAnimateMotionBehavior and its children, prefixing error messages with path
func (_gbfc *CT_TLAnimateMotionBehavior) ValidateWithPath(path string) error {
	if _feecb := _gbfc.OriginAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0067\u0069\u006e\u0041\u0074\u0074\u0072"); _feecb != nil {
		return _feecb
	}
	if _aeacf := _gbfc.PathEditModeAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u0045\u0064\u0069\u0074\u004d\u006f\u0064e\u0041\u0074\u0074\u0072"); _aeacf != nil {
		return _aeacf
	}
	if _bddd := _gbfc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _bddd != nil {
		return _bddd
	}
	if _gbfc.By != nil {
		if _ddae := _gbfc.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _ddae != nil {
			return _ddae
		}
	}
	if _gbfc.From != nil {
		if _cfgdb := _gbfc.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _cfgdb != nil {
			return _cfgdb
		}
	}
	if _gbfc.To != nil {
		if _bgfd := _gbfc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _bgfd != nil {
			return _bgfd
		}
	}
	if _gbfc.RCtr != nil {
		if _dbdgg := _gbfc.RCtr.ValidateWithPath(path + "\u002f\u0052\u0043t\u0072"); _dbdgg != nil {
			return _dbdgg
		}
	}
	return nil
}
func (_afgge *CT_TLAnimateEffectBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_afgge.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dfdcf := range start.Attr {
		if _dfdcf.Name.Local == "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e" {
			_afgge.TransitionAttr.UnmarshalXMLAttr(_dfdcf)
			continue
		}
		if _dfdcf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_fbabc, _fdbge := _dfdcf.Value, error(nil)
			if _fdbge != nil {
				return _fdbge
			}
			_afgge.FilterAttr = &_fbabc
			continue
		}
		if _dfdcf.Name.Local == "\u0070\u0072\u004cs\u0074" {
			_befed, _gggab := _dfdcf.Value, error(nil)
			if _gggab != nil {
				return _gggab
			}
			_afgge.PrLstAttr = &_befed
			continue
		}
	}
_dgaad:
	for {
		_abfaa, _fdecd := d.Token()
		if _fdecd != nil {
			return _fdecd
		}
		switch _fgaga := _abfaa.(type) {
		case _d.StartElement:
			switch _fgaga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _cfbcf := d.DecodeElement(_afgge.CBhvr, &_fgaga); _cfbcf != nil {
					return _cfbcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}:
				_afgge.Progress = NewCT_TLAnimVariant()
				if _fecdd := d.DecodeElement(_afgge.Progress, &_fgaga); _fecdd != nil {
					return _fecdd
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _fgaga.Name)
				if _gbaf := d.Skip(); _gbaf != nil {
					return _gbaf
				}
			}
		case _d.EndElement:
			break _dgaad
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PresentationProperties() *CT_PresentationProperties {
	_agff := &CT_PresentationProperties{}
	return _agff
}
func NewCT_TLShapeTargetElement() *CT_TLShapeTargetElement {
	_gbac := &CT_TLShapeTargetElement{}
	return _gbac
}

// Validate validates the CT_TLCommonBehaviorData and its children
func (_ecbaf *CT_TLCommonBehaviorData) Validate() error {
	return _ecbaf.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061")
}
func (_fecf *CT_PrintProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fecf.PrnWhatAttr != ST_PrintWhatUnset {
		_acfe, _afecc := _fecf.PrnWhatAttr.MarshalXMLAttr(_d.Name{Local: "\u0070r\u006e\u0057\u0068\u0061\u0074"})
		if _afecc != nil {
			return _afecc
		}
		start.Attr = append(start.Attr, _acfe)
	}
	if _fecf.ClrModeAttr != ST_PrintColorModeUnset {
		_eacd, _gfdb := _fecf.ClrModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063l\u0072\u004d\u006f\u0064\u0065"})
		if _gfdb != nil {
			return _gfdb
		}
		start.Attr = append(start.Attr, _eacd)
	}
	if _fecf.HiddenSlidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fecf.HiddenSlidesAttr))})
	}
	if _fecf.ScaleToFitPaperAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073c\u0061l\u0065\u0054\u006f\u0046\u0069\u0074\u0050\u0061\u0070\u0065\u0072"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fecf.ScaleToFitPaperAttr))})
	}
	if _fecf.FrameSlidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "f\u0072\u0061\u006d\u0065\u0053\u006c\u0069\u0064\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fecf.FrameSlidesAttr))})
	}
	e.EncodeToken(start)
	if _fecf.ExtLst != nil {
		_cbcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fecf.ExtLst, _cbcg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dddgb ST_TLParaBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dbcee := _d.Attr{}
	_dbcee.Name = name
	switch _dddgb {
	case ST_TLParaBuildTypeUnset:
		_dbcee.Value = ""
	case ST_TLParaBuildTypeAllAtOnce:
		_dbcee.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLParaBuildTypeP:
		_dbcee.Value = "\u0070"
	case ST_TLParaBuildTypeCust:
		_dbcee.Value = "\u0063\u0075\u0073\u0074"
	case ST_TLParaBuildTypeWhole:
		_dbcee.Value = "\u0077\u0068\u006fl\u0065"
	}
	return _dbcee, nil
}
func (_baeb *CT_TLPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _gc.Sprintf("\u0025\u0076", _baeb.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _gc.Sprintf("\u0025\u0076", _baeb.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeNodeSequence() *CT_TLTimeNodeSequence {
	_bdbcc := &CT_TLTimeNodeSequence{}
	_bdbcc.CTn = NewCT_TLCommonTimeNodeData()
	return _bdbcc
}
func (_edbd ST_TLAnimateEffectTransition) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_abafg := _d.Attr{}
	_abafg.Name = name
	switch _edbd {
	case ST_TLAnimateEffectTransitionUnset:
		_abafg.Value = ""
	case ST_TLAnimateEffectTransitionIn:
		_abafg.Value = "\u0069\u006e"
	case ST_TLAnimateEffectTransitionOut:
		_abafg.Value = "\u006f\u0075\u0074"
	case ST_TLAnimateEffectTransitionNone:
		_abafg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _abafg, nil
}
func (_gfeg *CT_HandoutMasterIdList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gfeg.HandoutMasterId != nil {
		_bed := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"}}
		e.EncodeElement(_gfeg.HandoutMasterId, _bed)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PhotoAlbumFrameShapeUnset       ST_PhotoAlbumFrameShape = 0
	ST_PhotoAlbumFrameShapeFrameStyle1 ST_PhotoAlbumFrameShape = 1
	ST_PhotoAlbumFrameShapeFrameStyle2 ST_PhotoAlbumFrameShape = 2
	ST_PhotoAlbumFrameShapeFrameStyle3 ST_PhotoAlbumFrameShape = 3
	ST_PhotoAlbumFrameShapeFrameStyle4 ST_PhotoAlbumFrameShape = 4
	ST_PhotoAlbumFrameShapeFrameStyle5 ST_PhotoAlbumFrameShape = 5
	ST_PhotoAlbumFrameShapeFrameStyle6 ST_PhotoAlbumFrameShape = 6
	ST_PhotoAlbumFrameShapeFrameStyle7 ST_PhotoAlbumFrameShape = 7
)

func (_gbaae *CT_SlideMasterTextStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fgbg:
	for {
		_ffffa, _fgda := d.Token()
		if _fgda != nil {
			return _fgda
		}
		switch _caec := _ffffa.(type) {
		case _d.StartElement:
			switch _caec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gbaae.TitleStyle = _ad.NewCT_TextListStyle()
				if _gacc := d.DecodeElement(_gbaae.TitleStyle, &_caec); _gacc != nil {
					return _gacc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0064\u0079\u0053\u0074\u0079\u006ce"}:
				_gbaae.BodyStyle = _ad.NewCT_TextListStyle()
				if _acaea := d.DecodeElement(_gbaae.BodyStyle, &_caec); _acaea != nil {
					return _acaea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}:
				_gbaae.OtherStyle = _ad.NewCT_TextListStyle()
				if _ffbba := d.DecodeElement(_gbaae.OtherStyle, &_caec); _ffbba != nil {
					return _ffbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbaae.ExtLst = NewCT_ExtensionList()
				if _eabgb := d.DecodeElement(_gbaae.ExtLst, &_caec); _eabgb != nil {
					return _eabgb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0054\u0065\u0078\u0074\u0053t\u0079\u006c\u0065\u0073\u0020%\u0076", _caec.Name)
				if _acea := d.Skip(); _acea != nil {
					return _acea
				}
			}
		case _d.EndElement:
			break _fgbg
		case _d.CharData:
		}
	}
	return nil
}

type CT_CustomerData struct{ IdAttr string }

// Validate validates the CT_TLOleChartTargetElement and its children
func (_eaee *CT_TLOleChartTargetElement) Validate() error {
	return _eaee.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074")
}

// Validate validates the CT_CommentAuthorList and its children
func (_ceg *CT_CommentAuthorList) Validate() error {
	return _ceg.ValidateWithPath("C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074")
}
func NewNotes() *Notes { _egcd := &Notes{}; _egcd.CT_NotesSlide = *NewCT_NotesSlide(); return _egcd }

// Validate validates the CT_TLAnimateEffectBehavior and its children
func (_cgce *CT_TLAnimateEffectBehavior) Validate() error {
	return _cgce.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072")
}
func (_bgcec ST_TLBehaviorAdditiveType) Validate() error { return _bgcec.ValidateWithPath("") }
func (_cbedc ST_TLTimeNodeSyncType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acaa := _d.Attr{}
	_acaa.Name = name
	switch _cbedc {
	case ST_TLTimeNodeSyncTypeUnset:
		_acaa.Value = ""
	case ST_TLTimeNodeSyncTypeCanSlip:
		_acaa.Value = "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case ST_TLTimeNodeSyncTypeLocked:
		_acaa.Value = "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return _acaa, nil
}

type CT_ShowInfoKiosk struct {

	// Restart Show
	RestartAttr *uint32
}

// ValidateWithPath validates the CT_TLTimeNodeExclusive and its children, prefixing error messages with path
func (_ffgaa *CT_TLTimeNodeExclusive) ValidateWithPath(path string) error {
	if _geddf := _ffgaa.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _geddf != nil {
		return _geddf
	}
	return nil
}
func (_cbgb *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agfbf, _afagbd := d.Token()
	if _afagbd != nil {
		return _afagbd
	}
	if _ffbcb, _dfecf := _agfbf.(_d.EndElement); _dfecf && _ffbcb.Name == start.Name {
		*_cbgb = 1
		return nil
	}
	if _ccgcc, _cdfee := _agfbf.(_d.CharData); !_cdfee {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agfbf)
	} else {
		switch string(_ccgcc) {
		case "":
			*_cbgb = 0
		case "\u0070\u0061\u0072\u0065\u006e\u0074":
			*_cbgb = 1
		case "\u006c\u0061\u0079\u006f\u0075\u0074":
			*_cbgb = 2
		}
	}
	_agfbf, _afagbd = d.Token()
	if _afagbd != nil {
		return _afagbd
	}
	if _deeef, _fbcgd := _agfbf.(_d.EndElement); _fbcgd && _deeef.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agfbf)
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_agc *CT_Comment) ValidateWithPath(path string) error {
	if _cfaf := _agc.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _cfaf != nil {
		return _cfaf
	}
	if _agc.ExtLst != nil {
		if _bcb := _agc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcb != nil {
			return _bcb
		}
	}
	return nil
}
func NewNotesMaster() *NotesMaster {
	_gdfgc := &NotesMaster{}
	_gdfgc.CT_NotesMaster = *NewCT_NotesMaster()
	return _gdfgc
}
func ParseUnionST_TLTime(s string) (ST_TLTime, error) { return ST_TLTime{}, nil }
func (_bacc *CT_CustomShowList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bbdf:
	for {
		_bfd, _babe := d.Token()
		if _babe != nil {
			return _babe
		}
		switch _dgec := _bfd.(type) {
		case _d.StartElement:
			switch _dgec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_bcd := NewCT_CustomShow()
				if _cgd := d.DecodeElement(_bcd, &_dgec); _cgd != nil {
					return _cgd
				}
				_bacc.CustShow = append(_bacc.CustShow, _bcd)
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dgec.Name)
				if _abbc := d.Skip(); _abbc != nil {
					return _abbc
				}
			}
		case _d.EndElement:
			break _bbdf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NotesMasterIdListEntry and its children, prefixing error messages with path
func (_gcdea *CT_NotesMasterIdListEntry) ValidateWithPath(path string) error {
	if _gcdea.ExtLst != nil {
		if _fddc := _gcdea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fddc != nil {
			return _fddc
		}
	}
	return nil
}
func (_aeaaa *ST_TLTimeNodePresetClassType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aeaaa = 0
	case "\u0065\u006e\u0074\u0072":
		*_aeaaa = 1
	case "\u0065\u0078\u0069\u0074":
		*_aeaaa = 2
	case "\u0065\u006d\u0070\u0068":
		*_aeaaa = 3
	case "\u0070\u0061\u0074\u0068":
		*_aeaaa = 4
	case "\u0076\u0065\u0072\u0062":
		*_aeaaa = 5
	case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
		*_aeaaa = 6
	}
	return nil
}

type ST_TransitionSideDirectionType byte

func NewCT_TLAnimateBehavior() *CT_TLAnimateBehavior {
	_debcd := &CT_TLAnimateBehavior{}
	_debcd.CBhvr = NewCT_TLCommonBehaviorData()
	return _debcd
}
func (_acbgf *CT_SplitTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cfea := range start.Attr {
		if _cfea.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_acbgf.OrientAttr.UnmarshalXMLAttr(_cfea)
			continue
		}
		if _cfea.Name.Local == "\u0064\u0069\u0072" {
			_acbgf.DirAttr.UnmarshalXMLAttr(_cfea)
			continue
		}
	}
	for {
		_bccg, _bbdbe := d.Token()
		if _bbdbe != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0070\u006c\u0069\u0074\u0054\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _bbdbe)
		}
		if _dgecg, _cfbbb := _bccg.(_d.EndElement); _cfbbb && _dgecg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bddgb *CT_TLPoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cdfca := range start.Attr {
		if _cdfca.Name.Local == "\u0078" {
			_efbg, _bcegf := ParseUnionST_Percentage(_cdfca.Value)
			if _bcegf != nil {
				return _bcegf
			}
			_bddgb.XAttr = _efbg
			continue
		}
		if _cdfca.Name.Local == "\u0079" {
			_cdcd, _abfcd := ParseUnionST_Percentage(_cdfca.Value)
			if _abfcd != nil {
				return _abfcd
			}
			_bddgb.YAttr = _cdcd
			continue
		}
	}
	for {
		_cdbfd, _geaaa := d.Token()
		if _geaaa != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074\u003a\u0020%\u0073", _geaaa)
		}
		if _ebbfb, _egage := _cdbfd.(_d.EndElement); _egage && _ebbfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddgedc ST_Direction) ValidateWithPath(path string) error {
	switch _ddgedc {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddgedc))
	}
	return nil
}

const (
	ST_TLTriggerEventUnset       ST_TLTriggerEvent = 0
	ST_TLTriggerEventOnBegin     ST_TLTriggerEvent = 1
	ST_TLTriggerEventOnEnd       ST_TLTriggerEvent = 2
	ST_TLTriggerEventBegin       ST_TLTriggerEvent = 3
	ST_TLTriggerEventEnd         ST_TLTriggerEvent = 4
	ST_TLTriggerEventOnClick     ST_TLTriggerEvent = 5
	ST_TLTriggerEventOnDblClick  ST_TLTriggerEvent = 6
	ST_TLTriggerEventOnMouseOver ST_TLTriggerEvent = 7
	ST_TLTriggerEventOnMouseOut  ST_TLTriggerEvent = 8
	ST_TLTriggerEventOnNext      ST_TLTriggerEvent = 9
	ST_TLTriggerEventOnPrev      ST_TLTriggerEvent = 10
	ST_TLTriggerEventOnStopAudio ST_TLTriggerEvent = 11
)

func (_gacb *ST_PlaceholderSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aebbc, _cdedg := d.Token()
	if _cdedg != nil {
		return _cdedg
	}
	if _efdgf, _ebfce := _aebbc.(_d.EndElement); _ebfce && _efdgf.Name == start.Name {
		*_gacb = 1
		return nil
	}
	if _agbbb, _dbfca := _aebbc.(_d.CharData); !_dbfca {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aebbc)
	} else {
		switch string(_agbbb) {
		case "":
			*_gacb = 0
		case "\u0066\u0075\u006c\u006c":
			*_gacb = 1
		case "\u0068\u0061\u006c\u0066":
			*_gacb = 2
		case "\u0071u\u0061\u0072\u0074\u0065\u0072":
			*_gacb = 3
		}
	}
	_aebbc, _cdedg = d.Token()
	if _cdedg != nil {
		return _cdedg
	}
	if _cecff, _dgdca := _aebbc.(_d.EndElement); _dgdca && _cecff.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aebbc)
}
func (_ggcfda *ST_TransitionSideDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eeggc, _ggcbf := d.Token()
	if _ggcbf != nil {
		return _ggcbf
	}
	if _efgad, _gbfed := _eeggc.(_d.EndElement); _gbfed && _efgad.Name == start.Name {
		*_ggcfda = 1
		return nil
	}
	if _dageb, _egcgg := _eeggc.(_d.CharData); !_egcgg {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeggc)
	} else {
		switch string(_dageb) {
		case "":
			*_ggcfda = 0
		case "\u006c":
			*_ggcfda = 1
		case "\u0075":
			*_ggcfda = 2
		case "\u0072":
			*_ggcfda = 3
		case "\u0064":
			*_ggcfda = 4
		}
	}
	_eeggc, _ggcbf = d.Token()
	if _ggcbf != nil {
		return _ggcbf
	}
	if _ggbba, _ddcgf := _eeggc.(_d.EndElement); _ddcgf && _ggbba.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeggc)
}
func (_faedd ST_PrintColorMode) Validate() error { return _faedd.ValidateWithPath("") }

// ValidateWithPath validates the CT_SlideMasterTextStyles and its children, prefixing error messages with path
func (_adag *CT_SlideMasterTextStyles) ValidateWithPath(path string) error {
	if _adag.TitleStyle != nil {
		if _ffgfg := _adag.TitleStyle.ValidateWithPath(path + "/\u0054\u0069\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _ffgfg != nil {
			return _ffgfg
		}
	}
	if _adag.BodyStyle != nil {
		if _dgaa := _adag.BodyStyle.ValidateWithPath(path + "\u002f\u0042\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"); _dgaa != nil {
			return _dgaa
		}
	}
	if _adag.OtherStyle != nil {
		if _dbbgf := _adag.OtherStyle.ValidateWithPath(path + "/\u004f\u0074\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"); _dbbgf != nil {
			return _dbbgf
		}
	}
	if _adag.ExtLst != nil {
		if _beef := _adag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beef != nil {
			return _beef
		}
	}
	return nil
}
func (_agede ST_PhotoAlbumLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_agede.String(), start)
}

// ValidateWithPath validates the CT_TLAnimVariantBooleanVal and its children, prefixing error messages with path
func (_bgda *CT_TLAnimVariantBooleanVal) ValidateWithPath(path string) error { return nil }

type SldLayout struct{ CT_SlideLayout }

func (_dbge *CT_Extension) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _gc.Sprintf("\u0025\u0076", _dbge.UriAttr)})
	e.EncodeToken(start)
	if _dbge.Any != nil {
		for _, _bdb := range _dbge.Any {
			_bdb.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbbaa ST_TLTimeNodeType) ValidateWithPath(path string) error {
	switch _bbbaa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbbaa))
	}
	return nil
}

// Validate validates the CT_TLByAnimateColorTransform and its children
func (_aggdf *CT_TLByAnimateColorTransform) Validate() error {
	return _aggdf.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d")
}
func (_egaae ST_Direction) Validate() error { return _egaae.ValidateWithPath("") }
func (_ceagb *CT_ShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ceagb.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_ceagb.CNvSpPr = _ad.NewCT_NonVisualDrawingShapeProps()
	_ceagb.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_eegc:
	for {
		_eede, _gbabb := d.Token()
		if _gbabb != nil {
			return _gbabb
		}
		switch _daba := _eede.(type) {
		case _d.StartElement:
			switch _daba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _geab := d.DecodeElement(_ceagb.CNvPr, &_daba); _geab != nil {
					return _geab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _fcdf := d.DecodeElement(_ceagb.CNvSpPr, &_daba); _fcdf != nil {
					return _fcdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _ebf := d.DecodeElement(_ceagb.NvPr, &_daba); _ebf != nil {
					return _ebf
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _daba.Name)
				if _aegd := d.Skip(); _aegd != nil {
					return _aegd
				}
			}
		case _d.EndElement:
			break _eegc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLBuildParagraph and its children
func (_bgcf *CT_TLBuildParagraph) Validate() error {
	return _bgcf.ValidateWithPath("\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}

// Validate validates the EG_ChildSlide and its children
func (_eaacb *EG_ChildSlide) Validate() error {
	return _eaacb.ValidateWithPath("\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065")
}
func (_dfc *CT_ApplicationNonVisualDrawingProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgd := range start.Attr {
		if _bgd.Name.Local == "\u0069s\u0050\u0068\u006f\u0074\u006f" {
			_cca, _deb := _dc.ParseBool(_bgd.Value)
			if _deb != nil {
				return _deb
			}
			_dfc.IsPhotoAttr = &_cca
			continue
		}
		if _bgd.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_deg, _ee := _dc.ParseBool(_bgd.Value)
			if _ee != nil {
				return _ee
			}
			_dfc.UserDrawnAttr = &_deg
			continue
		}
	}
_bfg:
	for {
		_cbf, _agb := d.Token()
		if _agb != nil {
			return _agb
		}
		switch _aea := _cbf.(type) {
		case _d.StartElement:
			switch _aea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068"}:
				_dfc.Ph = NewCT_Placeholder()
				if _bga := d.DecodeElement(_dfc.Ph, &_aea); _bga != nil {
					return _bga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_dfc.AudioCd = _ad.NewCT_AudioCD()
				if _ac := d.DecodeElement(_dfc.AudioCd, &_aea); _ac != nil {
					return _ac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_dfc.WavAudioFile = _ad.NewCT_EmbeddedWAVAudioFile()
				if _ebe := d.DecodeElement(_dfc.WavAudioFile, &_aea); _ebe != nil {
					return _ebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_dfc.AudioFile = _ad.NewCT_AudioFile()
				if _bca := d.DecodeElement(_dfc.AudioFile, &_aea); _bca != nil {
					return _bca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_dfc.VideoFile = _ad.NewCT_VideoFile()
				if _fad := d.DecodeElement(_dfc.VideoFile, &_aea); _fad != nil {
					return _fad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_dfc.QuickTimeFile = _ad.NewCT_QuickTimeFile()
				if _adga := d.DecodeElement(_dfc.QuickTimeFile, &_aea); _adga != nil {
					return _adga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_dfc.CustDataLst = NewCT_CustomerDataList()
				if _gde := d.DecodeElement(_dfc.CustDataLst, &_aea); _gde != nil {
					return _gde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfc.ExtLst = NewCT_ExtensionList()
				if _dda := d.DecodeElement(_dfc.ExtLst, &_aea); _dda != nil {
					return _dda
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041p\u0070\u006c\u0069\u0063\u0061\u0074\u0069\u006f\u006e\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006eg\u0050\u0072\u006f\u0070\u0073 \u0025\u0076", _aea.Name)
				if _fg := d.Skip(); _fg != nil {
					return _fg
				}
			}
		case _d.EndElement:
			break _bfg
		case _d.CharData:
		}
	}
	return nil
}
func (_fdgfa *CT_TagList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gebba:
	for {
		_fgbba, _fefcf := d.Token()
		if _fefcf != nil {
			return _fefcf
		}
		switch _feaed := _fgbba.(type) {
		case _d.StartElement:
			switch _feaed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_bcdgc := NewCT_StringTag()
				if _faecd := d.DecodeElement(_bcdgc, &_feaed); _faecd != nil {
					return _faecd
				}
				_fdgfa.Tag = append(_fdgfa.Tag, _bcdgc)
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fT\u0061\u0067\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _feaed.Name)
				if _gggffa := d.Skip(); _gggffa != nil {
					return _gggffa
				}
			}
		case _d.EndElement:
			break _gebba
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the HandoutMaster and its children
func (_egaage *HandoutMaster) Validate() error {
	return _egaage.ValidateWithPath("\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_fcbfe *CT_TLByAnimateColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcbfe.Rgb != nil {
		_bfea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072g\u0062"}}
		e.EncodeElement(_fcbfe.Rgb, _bfea)
	}
	if _fcbfe.Hsl != nil {
		_eggg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068s\u006c"}}
		e.EncodeElement(_fcbfe.Hsl, _eggg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_CornerDirectionTransition struct {

	// Direction
	DirAttr ST_TransitionCornerDirectionType
}

func (_febb *CT_Kinsoku) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _febb.LangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _gc.Sprintf("\u0025\u0076", *_febb.LangAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _gc.Sprintf("\u0025\u0076", _febb.InvalStCharsAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073"}, Value: _gc.Sprintf("\u0025\u0076", _febb.InvalEndCharsAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GroupShapeChoice struct {
	Sp           []*CT_Shape
	GrpSp        []*CT_GroupShape
	GraphicFrame []*CT_GraphicalObjectFrame
	CxnSp        []*CT_Connector
	Pic          []*CT_Picture
	ContentPart  []*CT_Rel
}
type CT_CommentAuthorList struct {

	// Comment Author
	CmAuthor []*CT_CommentAuthor
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_edef *CT_OleObject) ValidateWithPath(path string) error {
	if _ggdcd := _edef.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _ggdcd != nil {
		return _ggdcd
	}
	if _edef.Pic != nil {
		if _fgeac := _edef.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _fgeac != nil {
			return _fgeac
		}
	}
	if _edef.ImgWAttr != nil {
		if *_edef.ImgWAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edef.ImgWAttr)
		}
	}
	if _edef.ImgHAttr != nil {
		if *_edef.ImgHAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_edef.ImgHAttr)
		}
	}
	return nil
}
func (_cdaee ST_TLTimeIndefinite) String() string {
	switch _cdaee {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065"
	}
	return ""
}

const (
	ST_SlideLayoutTypeUnset                   ST_SlideLayoutType = 0
	ST_SlideLayoutTypeTitle                   ST_SlideLayoutType = 1
	ST_SlideLayoutTypeTx                      ST_SlideLayoutType = 2
	ST_SlideLayoutTypeTwoColTx                ST_SlideLayoutType = 3
	ST_SlideLayoutTypeTbl                     ST_SlideLayoutType = 4
	ST_SlideLayoutTypeTxAndChart              ST_SlideLayoutType = 5
	ST_SlideLayoutTypeChartAndTx              ST_SlideLayoutType = 6
	ST_SlideLayoutTypeDgm                     ST_SlideLayoutType = 7
	ST_SlideLayoutTypeChart                   ST_SlideLayoutType = 8
	ST_SlideLayoutTypeTxAndClipArt            ST_SlideLayoutType = 9
	ST_SlideLayoutTypeClipArtAndTx            ST_SlideLayoutType = 10
	ST_SlideLayoutTypeTitleOnly               ST_SlideLayoutType = 11
	ST_SlideLayoutTypeBlank                   ST_SlideLayoutType = 12
	ST_SlideLayoutTypeTxAndObj                ST_SlideLayoutType = 13
	ST_SlideLayoutTypeObjAndTx                ST_SlideLayoutType = 14
	ST_SlideLayoutTypeObjOnly                 ST_SlideLayoutType = 15
	ST_SlideLayoutTypeObj                     ST_SlideLayoutType = 16
	ST_SlideLayoutTypeTxAndMedia              ST_SlideLayoutType = 17
	ST_SlideLayoutTypeMediaAndTx              ST_SlideLayoutType = 18
	ST_SlideLayoutTypeObjOverTx               ST_SlideLayoutType = 19
	ST_SlideLayoutTypeTxOverObj               ST_SlideLayoutType = 20
	ST_SlideLayoutTypeTxAndTwoObj             ST_SlideLayoutType = 21
	ST_SlideLayoutTypeTwoObjAndTx             ST_SlideLayoutType = 22
	ST_SlideLayoutTypeTwoObjOverTx            ST_SlideLayoutType = 23
	ST_SlideLayoutTypeFourObj                 ST_SlideLayoutType = 24
	ST_SlideLayoutTypeVertTx                  ST_SlideLayoutType = 25
	ST_SlideLayoutTypeClipArtAndVertTx        ST_SlideLayoutType = 26
	ST_SlideLayoutTypeVertTitleAndTx          ST_SlideLayoutType = 27
	ST_SlideLayoutTypeVertTitleAndTxOverChart ST_SlideLayoutType = 28
	ST_SlideLayoutTypeTwoObj                  ST_SlideLayoutType = 29
	ST_SlideLayoutTypeObjAndTwoObj            ST_SlideLayoutType = 30
	ST_SlideLayoutTypeTwoObjAndObj            ST_SlideLayoutType = 31
	ST_SlideLayoutTypeCust                    ST_SlideLayoutType = 32
	ST_SlideLayoutTypeSecHead                 ST_SlideLayoutType = 33
	ST_SlideLayoutTypeTwoTxTwoObj             ST_SlideLayoutType = 34
	ST_SlideLayoutTypeObjTx                   ST_SlideLayoutType = 35
	ST_SlideLayoutTypePicTx                   ST_SlideLayoutType = 36
)

func NewCT_ApplicationNonVisualDrawingProps() *CT_ApplicationNonVisualDrawingProps {
	_dee := &CT_ApplicationNonVisualDrawingProps{}
	return _dee
}
func (_bcgccf *ST_SlideLayoutType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adcce, _dbgef := d.Token()
	if _dbgef != nil {
		return _dbgef
	}
	if _adfdb, _dcac := _adcce.(_d.EndElement); _dcac && _adfdb.Name == start.Name {
		*_bcgccf = 1
		return nil
	}
	if _gead, _afeb := _adcce.(_d.CharData); !_afeb {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _adcce)
	} else {
		switch string(_gead) {
		case "":
			*_bcgccf = 0
		case "\u0074\u0069\u0074l\u0065":
			*_bcgccf = 1
		case "\u0074\u0078":
			*_bcgccf = 2
		case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
			*_bcgccf = 3
		case "\u0074\u0062\u006c":
			*_bcgccf = 4
		case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
			*_bcgccf = 5
		case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_bcgccf = 6
		case "\u0064\u0067\u006d":
			*_bcgccf = 7
		case "\u0063\u0068\u0061r\u0074":
			*_bcgccf = 8
		case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
			*_bcgccf = 9
		case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
			*_bcgccf = 10
		case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
			*_bcgccf = 11
		case "\u0062\u006c\u0061n\u006b":
			*_bcgccf = 12
		case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
			*_bcgccf = 13
		case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_bcgccf = 14
		case "\u006fb\u006a\u004f\u006e\u006c\u0079":
			*_bcgccf = 15
		case "\u006f\u0062\u006a":
			*_bcgccf = 16
		case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
			*_bcgccf = 17
		case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
			*_bcgccf = 18
		case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
			*_bcgccf = 19
		case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
			*_bcgccf = 20
		case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcgccf = 21
		case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
			*_bcgccf = 22
		case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
			*_bcgccf = 23
		case "\u0066o\u0075\u0072\u004f\u0062\u006a":
			*_bcgccf = 24
		case "\u0076\u0065\u0072\u0074\u0054\u0078":
			*_bcgccf = 25
		case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
			*_bcgccf = 26
		case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
			*_bcgccf = 27
		case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
			*_bcgccf = 28
		case "\u0074\u0077\u006f\u004f\u0062\u006a":
			*_bcgccf = 29
		case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcgccf = 30
		case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
			*_bcgccf = 31
		case "\u0063\u0075\u0073\u0074":
			*_bcgccf = 32
		case "\u0073e\u0063\u0048\u0065\u0061\u0064":
			*_bcgccf = 33
		case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
			*_bcgccf = 34
		case "\u006f\u0062\u006aT\u0078":
			*_bcgccf = 35
		case "\u0070\u0069\u0063T\u0078":
			*_bcgccf = 36
		}
	}
	_adcce, _dbgef = d.Token()
	if _dbgef != nil {
		return _dbgef
	}
	if _gagbc, _abgaef := _adcce.(_d.EndElement); _abgaef && _gagbc.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _adcce)
}

// Validate validates the CT_CommonViewProperties and its children
func (_cbeg *CT_CommonViewProperties) Validate() error {
	return _cbeg.ValidateWithPath("\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gebgg *CT_TLIterateData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gebgg.TypeAttr != ST_IterateTypeUnset {
		_edcda, _fdaf := _gebgg.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fdaf != nil {
			return _fdaf
		}
		start.Attr = append(start.Attr, _edcda)
	}
	if _gebgg.BackwardsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gebgg.BackwardsAttr))})
	}
	e.EncodeToken(start)
	if _gebgg.TmAbs != nil {
		_fdbaa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0041\u0062\u0073"}}
		e.EncodeElement(_gebgg.TmAbs, _fdbaa)
	}
	if _gebgg.TmPct != nil {
		_ggcd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006d\u0050\u0063\u0074"}}
		e.EncodeElement(_gebgg.TmPct, _ggcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_PrintColorMode byte

func (_cdbag *Notes) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u006e\u006f\u0074\u0065\u0073"
	return _cdbag.CT_NotesSlide.MarshalXML(e, start)
}
func (_adbda ST_PlaceholderSize) String() string {
	switch _adbda {
	case 0:
		return ""
	case 1:
		return "\u0066\u0075\u006c\u006c"
	case 2:
		return "\u0068\u0061\u006c\u0066"
	case 3:
		return "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return ""
}

// Validate validates the CT_SlideViewProperties and its children
func (_gadga *CT_SlideViewProperties) Validate() error {
	return _gadga.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_dadda *CT_SmartTags) ValidateWithPath(path string) error { return nil }
func (_ddfab *CT_TagsData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _ddfab.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ViewProperties and its children
func (_gbdbe *CT_ViewProperties) Validate() error {
	return _gbdbe.ValidateWithPath("\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func (_afe *CT_BuildList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ecb:
	for {
		_ede, _gfg := d.Token()
		if _gfg != nil {
			return _gfg
		}
		switch _bfeg := _ede.(type) {
		case _d.StartElement:
			switch _bfeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0050"}:
				_aagg := NewCT_TLBuildParagraph()
				if _gbaa := d.DecodeElement(_aagg, &_bfeg); _gbaa != nil {
					return _gbaa
				}
				_afe.BldP = append(_afe.BldP, _aagg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_gfe := NewCT_TLBuildDiagram()
				if _bde := d.DecodeElement(_gfe, &_bfeg); _bde != nil {
					return _bde
				}
				_afe.BldDgm = append(_afe.BldDgm, _gfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "b\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}:
				_dbb := NewCT_TLOleBuildChart()
				if _gccb := d.DecodeElement(_dbb, &_bfeg); _gccb != nil {
					return _gccb
				}
				_afe.BldOleChart = append(_afe.BldOleChart, _dbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}:
				_gabc := NewCT_TLGraphicalObjectBuild()
				if _aee := d.DecodeElement(_gabc, &_bfeg); _aee != nil {
					return _aee
				}
				_afe.BldGraphic = append(_afe.BldGraphic, _gabc)
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u0075\u0069l\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bfeg.Name)
				if _daca := d.Skip(); _daca != nil {
					return _daca
				}
			}
		case _d.EndElement:
			break _ecb
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLOleChartBuildTypeUnset      ST_TLOleChartBuildType = 0
	ST_TLOleChartBuildTypeAllAtOnce  ST_TLOleChartBuildType = 1
	ST_TLOleChartBuildTypeSeries     ST_TLOleChartBuildType = 2
	ST_TLOleChartBuildTypeCategory   ST_TLOleChartBuildType = 3
	ST_TLOleChartBuildTypeSeriesEl   ST_TLOleChartBuildType = 4
	ST_TLOleChartBuildTypeCategoryEl ST_TLOleChartBuildType = 5
)

type CT_TLShapeTargetElement struct {

	// Shape ID
	SpidAttr uint32

	// Background
	Bg *CT_Empty

	// Subshape
	SubSp *CT_TLSubShapeId

	// Embedded Chart Element
	OleChartEl *CT_TLOleChartTargetElement

	// Text Element
	TxEl *CT_TLTextTargetElement

	// Graphic Element
	GraphicEl *_ad.CT_AnimationElementChoice
}

// ValidateWithPath validates the CT_TLSetBehavior and its children, prefixing error messages with path
func (_efbgc *CT_TLSetBehavior) ValidateWithPath(path string) error {
	if _afcbe := _efbgc.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _afcbe != nil {
		return _afcbe
	}
	if _efbgc.To != nil {
		if _cdbff := _efbgc.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _cdbff != nil {
			return _cdbff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMasterIdList and its children, prefixing error messages with path
func (_dfbf *CT_HandoutMasterIdList) ValidateWithPath(path string) error {
	if _dfbf.HandoutMasterId != nil {
		if _bdbg := _dfbf.HandoutMasterId.ValidateWithPath(path + "\u002f\u0048a\u006e\u0064\u006fu\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"); _bdbg != nil {
			return _bdbg
		}
	}
	return nil
}

type CT_TLByHslColorTransform struct {

	// Hue
	HAttr int32

	// Saturation
	SAttr _ad.ST_FixedPercentage

	// Lightness
	LAttr _ad.ST_FixedPercentage
}

func (_aaed *CT_EmbeddedFontList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ggc:
	for {
		_gaab, _adee := d.Token()
		if _adee != nil {
			return _adee
		}
		switch _fce := _gaab.(type) {
		case _d.StartElement:
			switch _fce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074"}:
				_abg := NewCT_EmbeddedFontListEntry()
				if _gbd := d.DecodeElement(_abg, &_fce); _gbd != nil {
					return _gbd
				}
				_aaed.EmbeddedFont = append(_aaed.EmbeddedFont, _abg)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065dF\u006f\u006e\u0074\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fce.Name)
				if _gbab := d.Skip(); _gbab != nil {
					return _gbab
				}
			}
		case _d.EndElement:
			break _ggc
		case _d.CharData:
		}
	}
	return nil
}

type Presentation struct{ CT_Presentation }

func (_gfcdf *ST_TLTime) ValidateWithPath(path string) error {
	_abddf := []string{}
	if _gfcdf.Uint32 != nil {
		_abddf = append(_abddf, "\u0055\u0069\u006e\u0074\u0033\u0032")
	}
	if _gfcdf.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		_abddf = append(_abddf, "\u0053\u0054\u005f\u0054LT\u0069\u006d\u0065\u0049\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065")
	}
	if len(_abddf) > 1 {
		return _gc.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _abddf)
	}
	return nil
}

type CT_TLPoint struct {

	// X coordinate
	XAttr _ad.ST_Percentage

	// Y coordinate
	YAttr _ad.ST_Percentage
}

// ValidateWithPath validates the CT_NotesTextViewProperties and its children, prefixing error messages with path
func (_cefe *CT_NotesTextViewProperties) ValidateWithPath(path string) error {
	if _gebaa := _cefe.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _gebaa != nil {
		return _gebaa
	}
	if _cefe.ExtLst != nil {
		if _gdaed := _cefe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdaed != nil {
			return _gdaed
		}
	}
	return nil
}
func (_bgffe *ST_PrintWhat) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bgffe = 0
	case "\u0073\u006c\u0069\u0064\u0065\u0073":
		*_bgffe = 1
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
		*_bgffe = 2
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
		*_bgffe = 3
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
		*_bgffe = 4
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
		*_bgffe = 5
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
		*_bgffe = 6
	case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
		*_bgffe = 7
	case "\u006e\u006f\u0074e\u0073":
		*_bgffe = 8
	case "\u006fu\u0074\u006c\u0069\u006e\u0065":
		*_bgffe = 9
	}
	return nil
}

type CT_TLTimeTargetElement struct {

	// Slide Target
	SldTgt *CT_Empty

	// Sound Target
	SndTgt *_ad.CT_EmbeddedWAVAudioFile

	// Shape Target
	SpTgt *CT_TLShapeTargetElement

	// Ink Target
	InkTgt *CT_TLSubShapeId
}

const (
	ST_PlaceholderTypeUnset    ST_PlaceholderType = 0
	ST_PlaceholderTypeTitle    ST_PlaceholderType = 1
	ST_PlaceholderTypeBody     ST_PlaceholderType = 2
	ST_PlaceholderTypeCtrTitle ST_PlaceholderType = 3
	ST_PlaceholderTypeSubTitle ST_PlaceholderType = 4
	ST_PlaceholderTypeDt       ST_PlaceholderType = 5
	ST_PlaceholderTypeSldNum   ST_PlaceholderType = 6
	ST_PlaceholderTypeFtr      ST_PlaceholderType = 7
	ST_PlaceholderTypeHdr      ST_PlaceholderType = 8
	ST_PlaceholderTypeObj      ST_PlaceholderType = 9
	ST_PlaceholderTypeChart    ST_PlaceholderType = 10
	ST_PlaceholderTypeTbl      ST_PlaceholderType = 11
	ST_PlaceholderTypeClipArt  ST_PlaceholderType = 12
	ST_PlaceholderTypeDgm      ST_PlaceholderType = 13
	ST_PlaceholderTypeMedia    ST_PlaceholderType = 14
	ST_PlaceholderTypeSldImg   ST_PlaceholderType = 15
	ST_PlaceholderTypePic      ST_PlaceholderType = 16
)

func (_gbcea ST_TransitionInOutDirectionType) String() string {
	switch _gbcea {
	case 0:
		return ""
	case 1:
		return "\u006f\u0075\u0074"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_Shape and its children, prefixing error messages with path
func (_cfdf *CT_Shape) ValidateWithPath(path string) error {
	if _cbcgc := _cfdf.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _cbcgc != nil {
		return _cbcgc
	}
	if _dcbg := _cfdf.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dcbg != nil {
		return _dcbg
	}
	if _cfdf.Style != nil {
		if _cgcg := _cfdf.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _cgcg != nil {
			return _cgcg
		}
	}
	if _cfdf.TxBody != nil {
		if _cebg := _cfdf.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _cebg != nil {
			return _cebg
		}
	}
	if _cfdf.ExtLst != nil {
		if _ccdb := _cfdf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ccdb != nil {
			return _ccdb
		}
	}
	return nil
}

// ValidateWithPath validates the AG_TLBuild and its children, prefixing error messages with path
func (_agg *AG_TLBuild) ValidateWithPath(path string) error { return nil }
func (_gbabc *CT_Placeholder) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gbabc.TypeAttr != ST_PlaceholderTypeUnset {
		_ggece, _dfcc := _gbabc.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dfcc != nil {
			return _dfcc
		}
		start.Attr = append(start.Attr, _ggece)
	}
	if _gbabc.OrientAttr != ST_DirectionUnset {
		_abdde, _edfa := _gbabc.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _edfa != nil {
			return _edfa
		}
		start.Attr = append(start.Attr, _abdde)
	}
	if _gbabc.SzAttr != ST_PlaceholderSizeUnset {
		_fcaa, _fdga := _gbabc.SzAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u007a"})
		if _fdga != nil {
			return _fdga
		}
		start.Attr = append(start.Attr, _fcaa)
	}
	if _gbabc.IdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _gc.Sprintf("\u0025\u0076", *_gbabc.IdxAttr)})
	}
	if _gbabc.HasCustomPromptAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gbabc.HasCustomPromptAttr))})
	}
	e.EncodeToken(start)
	if _gbabc.ExtLst != nil {
		_dbda := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gbabc.ExtLst, _dbda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_CornerDirectionTransition() *CT_CornerDirectionTransition {
	_gcb := &CT_CornerDirectionTransition{}
	return _gcb
}
func (_afgag *EG_ExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afgag.Ext != nil {
		_dbbfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _fcgfa := range _afgag.Ext {
			e.EncodeElement(_fcgfa, _dbbfa)
		}
	}
	return nil
}
func (_bbdcb *ST_PhotoAlbumLayout) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bbdcb = 0
	case "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065":
		*_bbdcb = 1
	case "\u0031\u0070\u0069\u0063":
		*_bbdcb = 2
	case "\u0032\u0070\u0069\u0063":
		*_bbdcb = 3
	case "\u0034\u0070\u0069\u0063":
		*_bbdcb = 4
	case "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bbdcb = 5
	case "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bbdcb = 6
	case "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce":
		*_bbdcb = 7
	}
	return nil
}

// ValidateWithPath validates the CT_TLOleChartTargetElement and its children, prefixing error messages with path
func (_fbbaa *CT_TLOleChartTargetElement) ValidateWithPath(path string) error {
	if _fbbaa.TypeAttr == ST_TLChartSubelementTypeUnset {
		return _gc.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cdaa := _fbbaa.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cdaa != nil {
		return _cdaa
	}
	return nil
}

type ST_WebColorType byte

func (_eabde ST_TLPreviousActionType) ValidateWithPath(path string) error {
	switch _eabde {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eabde))
	}
	return nil
}
func (_ebb *CT_ControlList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ebb.Control != nil {
		_baad := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u006f\u006e\u0074\u0072\u006fl"}}
		for _, _gcg := range _ebb.Control {
			e.EncodeElement(_gcg, _baad)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLTimeNodeSyncTypeUnset   ST_TLTimeNodeSyncType = 0
	ST_TLTimeNodeSyncTypeCanSlip ST_TLTimeNodeSyncType = 1
	ST_TLTimeNodeSyncTypeLocked  ST_TLTimeNodeSyncType = 2
)

func (_cgcef ST_TLDiagramBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cgcef.String(), start)
}
func (_dggd *CT_Extension) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdeg := range start.Attr {
		if _fdeg.Name.Local == "\u0075\u0072\u0069" {
			_ggga, _abdg := _fdeg.Value, error(nil)
			if _abdg != nil {
				return _abdg
			}
			_dggd.UriAttr = _ggga
			continue
		}
	}
_ccfad:
	for {
		_fffg, _aaab := d.Token()
		if _aaab != nil {
			return _aaab
		}
		switch _fcbf := _fffg.(type) {
		case _d.StartElement:
			switch _fcbf.Name {
			default:
				if _eagga, _gebg := _de.CreateElement(_fcbf); _gebg != nil {
					return _gebg
				} else {
					if _aaf := d.DecodeElement(_eagga, &_fcbf); _aaf != nil {
						return _aaf
					}
					_dggd.Any = append(_dggd.Any, _eagga)
				}
			}
		case _d.EndElement:
			break _ccfad
		case _d.CharData:
		}
	}
	return nil
}

type CT_SlideIdList struct {

	// Slide ID
	SldId []*CT_SlideIdListEntry
}

func NewCT_CustomShowList() *CT_CustomShowList { _cgfd := &CT_CustomShowList{}; return _cgfd }
func (_bbcc *CT_TLCommonBehaviorData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbcc.CTn = NewCT_TLCommonTimeNodeData()
	_bbcc.TgtEl = NewCT_TLTimeTargetElement()
	for _, _gfdbg := range start.Attr {
		if _gfdbg.Name.Local == "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065" {
			_bbcc.AdditiveAttr.UnmarshalXMLAttr(_gfdbg)
			continue
		}
		if _gfdbg.Name.Local == "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065" {
			_bbcc.AccumulateAttr.UnmarshalXMLAttr(_gfdbg)
			continue
		}
		if _gfdbg.Name.Local == "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065" {
			_bbcc.XfrmTypeAttr.UnmarshalXMLAttr(_gfdbg)
			continue
		}
		if _gfdbg.Name.Local == "\u0066\u0072\u006f\u006d" {
			_daad, _bcggde := _gfdbg.Value, error(nil)
			if _bcggde != nil {
				return _bcggde
			}
			_bbcc.FromAttr = &_daad
			continue
		}
		if _gfdbg.Name.Local == "\u0074\u006f" {
			_fbcf, _debaa := _gfdbg.Value, error(nil)
			if _debaa != nil {
				return _debaa
			}
			_bbcc.ToAttr = &_fbcf
			continue
		}
		if _gfdbg.Name.Local == "\u0062\u0079" {
			_ffdd, _faceb := _gfdbg.Value, error(nil)
			if _faceb != nil {
				return _faceb
			}
			_bbcc.ByAttr = &_ffdd
			continue
		}
		if _gfdbg.Name.Local == "\u0072\u0063\u0074\u0078" {
			_eedagg, _defgg := _gfdbg.Value, error(nil)
			if _defgg != nil {
				return _defgg
			}
			_bbcc.RctxAttr = &_eedagg
			continue
		}
		if _gfdbg.Name.Local == "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065" {
			_bbcc.OverrideAttr.UnmarshalXMLAttr(_gfdbg)
			continue
		}
	}
_bgfg:
	for {
		_faaa, _eabf := d.Token()
		if _eabf != nil {
			return _eabf
		}
		switch _feee := _faaa.(type) {
		case _d.StartElement:
			switch _feee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _gffcc := d.DecodeElement(_bbcc.CTn, &_feee); _gffcc != nil {
					return _gffcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0067\u0074E\u006c"}:
				if _dgagf := d.DecodeElement(_bbcc.TgtEl, &_feee); _dgagf != nil {
					return _dgagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}:
				_bbcc.AttrNameLst = NewCT_TLBehaviorAttributeNameList()
				if _gdfg := d.DecodeElement(_bbcc.AttrNameLst, &_feee); _gdfg != nil {
					return _gdfg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u0042e\u0068\u0061\u0076\u0069\u006f\u0072D\u0061\u0074\u0061 \u0025\u0076", _feee.Name)
				if _fabdeb := d.Skip(); _fabdeb != nil {
					return _fabdeb
				}
			}
		case _d.EndElement:
			break _bgfg
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_SlideSize() *CT_SlideSize {
	_bfdfc := &CT_SlideSize{}
	_bfdfc.CxAttr = 914400
	_bfdfc.CyAttr = 914400
	return _bfdfc
}
func (_abffe *CT_HandoutMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _abffe.IdAttr)})
	e.EncodeToken(start)
	if _abffe.ExtLst != nil {
		_ffadc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abffe.ExtLst, _ffadc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_edegc *Presentation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0070\u0072\u0065\u0073\u0065\u006e\u0074a\u0074\u0069\u006f\u006e"
	return _edegc.CT_Presentation.MarshalXML(e, start)
}
func (_eedag *CT_SideDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eedag.DirAttr != ST_TransitionSideDirectionTypeUnset {
		_egaag, _eeafe := _eedag.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _eeafe != nil {
			return _eeafe
		}
		start.Attr = append(start.Attr, _egaag)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aaeccb ST_TLTimeNodeFillType) ValidateWithPath(path string) error {
	switch _aaeccb {
	case 0, 1, 2, 3, 4:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaeccb))
	}
	return nil
}
func NewCT_OrientationTransition() *CT_OrientationTransition {
	_abdc := &CT_OrientationTransition{}
	return _abdc
}
func (_bacg *CT_CustomShow) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", _bacg.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _bacg.IdAttr)})
	e.EncodeToken(start)
	_gbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
	e.EncodeElement(_bacg.SldLst, _gbf)
	if _bacg.ExtLst != nil {
		_ced := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bacg.ExtLst, _ced)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdfd *CT_CustomShowId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _gdfd.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeNodeParallel() *CT_TLTimeNodeParallel {
	_ggefg := &CT_TLTimeNodeParallel{}
	_ggefg.CTn = NewCT_TLCommonTimeNodeData()
	return _ggefg
}
func (_cbee *CT_Guide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbee.OrientAttr != ST_DirectionUnset {
		_gaca, _gafe := _cbee.OrientAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0072\u0069\u0065\u006e\u0074"})
		if _gafe != nil {
			return _gafe
		}
		start.Attr = append(start.Attr, _gaca)
	}
	if _cbee.PosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _gc.Sprintf("\u0025\u0076", *_cbee.PosAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_edcdc *CT_ViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecfba := range start.Attr {
		if _ecfba.Name.Local == "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077" {
			_edcdc.LastViewAttr.UnmarshalXMLAttr(_ecfba)
			continue
		}
		if _ecfba.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_bbfca, _fbdcb := _dc.ParseBool(_ecfba.Value)
			if _fbdcb != nil {
				return _fbdcb
			}
			_edcdc.ShowCommentsAttr = &_bbfca
			continue
		}
	}
_bagcb:
	for {
		_gcgf, _gcgdd := d.Token()
		if _gcgdd != nil {
			return _gcgdd
		}
		switch _eccaf := _gcgf.(type) {
		case _d.StartElement:
			switch _eccaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072m\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.NormalViewPr = NewCT_NormalViewProperties()
				if _dedef := d.DecodeElement(_edcdc.NormalViewPr, &_eccaf); _dedef != nil {
					return _dedef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.SlideViewPr = NewCT_SlideViewProperties()
				if _bdaec := d.DecodeElement(_edcdc.SlideViewPr, &_eccaf); _bdaec != nil {
					return _bdaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.OutlineViewPr = NewCT_OutlineViewProperties()
				if _fagfa := d.DecodeElement(_edcdc.OutlineViewPr, &_eccaf); _fagfa != nil {
					return _fagfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074e\u0073\u0054\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.NotesTextViewPr = NewCT_NotesTextViewProperties()
				if _dgaec := d.DecodeElement(_edcdc.NotesTextViewPr, &_eccaf); _dgaec != nil {
					return _dgaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072t\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.SorterViewPr = NewCT_SlideSorterViewProperties()
				if _agba := d.DecodeElement(_edcdc.SorterViewPr, &_eccaf); _agba != nil {
					return _agba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}:
				_edcdc.NotesViewPr = NewCT_NotesViewProperties()
				if _cdca := d.DecodeElement(_edcdc.NotesViewPr, &_eccaf); _cdca != nil {
					return _cdca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}:
				_edcdc.GridSpacing = _ad.NewCT_PositiveSize2D()
				if _ccdfc := d.DecodeElement(_edcdc.GridSpacing, &_eccaf); _ccdfc != nil {
					return _ccdfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edcdc.ExtLst = NewCT_ExtensionList()
				if _cagge := d.DecodeElement(_edcdc.ExtLst, &_eccaf); _cagge != nil {
					return _cagge
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _eccaf.Name)
				if _fdbfb := d.Skip(); _fdbfb != nil {
					return _fdbfb
				}
			}
		case _d.EndElement:
			break _bagcb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_CommentList() *CT_CommentList { _efa := &CT_CommentList{}; return _efa }

type CT_CustomShowList struct {

	// Custom Show
	CustShow []*CT_CustomShow
}

func (_gfcdc *CT_NotesMasterIdListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfcg := range start.Attr {
		if _dfcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dfcg.Name.Local == "\u0069\u0064" || _dfcg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dfcg.Name.Local == "\u0069\u0064" {
			_abfe, _bcgeb := _dfcg.Value, error(nil)
			if _bcgeb != nil {
				return _bcgeb
			}
			_gfcdc.IdAttr = _abfe
			continue
		}
	}
_ffec:
	for {
		_affge, _edgd := d.Token()
		if _edgd != nil {
			return _edgd
		}
		switch _fcga := _affge.(type) {
		case _d.StartElement:
			switch _fcga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfcdc.ExtLst = NewCT_ExtensionList()
				if _dfdf := d.DecodeElement(_gfcdc.ExtLst, &_fcga); _dfdf != nil {
					return _dfdf
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065r\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006et\u0072y\u0020\u0025v", _fcga.Name)
				if _gbgc := d.Skip(); _gbgc != nil {
					return _gbgc
				}
			}
		case _d.EndElement:
			break _ffec
		case _d.CharData:
		}
	}
	return nil
}
func (_bdbcf *ST_TLTimeNodeSyncType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcgde, _cgfdg := d.Token()
	if _cgfdg != nil {
		return _cgfdg
	}
	if _dbeec, _faeb := _fcgde.(_d.EndElement); _faeb && _dbeec.Name == start.Name {
		*_bdbcf = 1
		return nil
	}
	if _fcdfce, _ebcab := _fcgde.(_d.CharData); !_ebcab {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcgde)
	} else {
		switch string(_fcdfce) {
		case "":
			*_bdbcf = 0
		case "\u0063a\u006e\u0053\u006c\u0069\u0070":
			*_bdbcf = 1
		case "\u006c\u006f\u0063\u006b\u0065\u0064":
			*_bdbcf = 2
		}
	}
	_fcgde, _cgfdg = d.Token()
	if _cgfdg != nil {
		return _cgfdg
	}
	if _befeg, _baeea := _fcgde.(_d.EndElement); _baeea && _befeg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcgde)
}
func (_cacba *CT_TLAnimVariantFloatVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecfa := range start.Attr {
		if _ecfa.Name.Local == "\u0076\u0061\u006c" {
			_bbee, _ebaee := _dc.ParseFloat(_ecfa.Value, 64)
			if _ebaee != nil {
				return _ebaee
			}
			_cacba.ValAttr = float32(_bbee)
			continue
		}
	}
	for {
		_cbdfb, _eeab := d.Token()
		if _eeab != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LAn\u0069mV\u0061\u0072\u0069\u0061\u006e\u0074\u0046lo\u0061\u0074\u0056\u0061\u006c\u003a\u0020%\u0073", _eeab)
		}
		if _afded, _egdaa := _cbdfb.(_d.EndElement); _egdaa && _afded.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TLByAnimateColorTransform struct {

	// RGB
	Rgb *CT_TLByRgbColorTransform

	// HSL
	Hsl *CT_TLByHslColorTransform
}

// ValidateWithPath validates the AG_Ole and its children, prefixing error messages with path
func (_da *AG_Ole) ValidateWithPath(path string) error {
	if _da.ImgWAttr != nil {
		if *_da.ImgWAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_da.ImgWAttr)
		}
	}
	if _da.ImgHAttr != nil {
		if *_da.ImgHAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_da.ImgHAttr)
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimateRotationBehavior and its children, prefixing error messages with path
func (_egac *CT_TLAnimateRotationBehavior) ValidateWithPath(path string) error {
	if _cdfed := _egac.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _cdfed != nil {
		return _cdfed
	}
	return nil
}

type EG_ShowType struct {

	// Presenter Slide Show Mode
	Present *CT_Empty

	// Browse Slide Show Mode
	Browse *CT_ShowInfoBrowse

	// Kiosk Slide Show Mode
	Kiosk *CT_ShowInfoKiosk
}

func NewCT_TLOleChartTargetElement() *CT_TLOleChartTargetElement {
	_feacd := &CT_TLOleChartTargetElement{}
	_feacd.TypeAttr = ST_TLChartSubelementType(1)
	return _feacd
}
func (_ebfg *CT_TransitionStartSoundAction) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebfg.LoopAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006f\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ebfg.LoopAttr))})
	}
	e.EncodeToken(start)
	_caeef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073n\u0064"}}
	e.EncodeElement(_ebfg.Snd, _caeef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ControlList and its children, prefixing error messages with path
func (_aabbc *CT_ControlList) ValidateWithPath(path string) error {
	for _acda, _ace := range _aabbc.Control {
		if _aeg := _ace.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _acda)); _aeg != nil {
			return _aeg
		}
	}
	return nil
}
func (_fbaa ST_TransitionInOutDirectionType) ValidateWithPath(path string) error {
	switch _fbaa {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbaa))
	}
	return nil
}

type CT_Picture struct {

	// Non-Visual Properties for a Picture
	NvPicPr *CT_PictureNonVisual

	// Picture Fill
	BlipFill *_ad.CT_BlipFillProperties
	SpPr     *_ad.CT_ShapeProperties
	Style    *_ad.CT_ShapeStyle
	ExtLst   *CT_ExtensionListModify
}

func (_cadeaf ST_TransitionSpeed) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cbebf := _d.Attr{}
	_cbebf.Name = name
	switch _cadeaf {
	case ST_TransitionSpeedUnset:
		_cbebf.Value = ""
	case ST_TransitionSpeedSlow:
		_cbebf.Value = "\u0073\u006c\u006f\u0077"
	case ST_TransitionSpeedMed:
		_cbebf.Value = "\u006d\u0065\u0064"
	case ST_TransitionSpeedFast:
		_cbebf.Value = "\u0066\u0061\u0073\u0074"
	}
	return _cbebf, nil
}

type ST_TLBehaviorTransformType byte

// Validate validates the CT_TLAnimateRotationBehavior and its children
func (_facg *CT_TLAnimateRotationBehavior) Validate() error {
	return _facg.ValidateWithPath("\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072")
}

const (
	ST_PlaceholderSizeUnset   ST_PlaceholderSize = 0
	ST_PlaceholderSizeFull    ST_PlaceholderSize = 1
	ST_PlaceholderSizeHalf    ST_PlaceholderSize = 2
	ST_PlaceholderSizeQuarter ST_PlaceholderSize = 3
)

type CT_TLIterateIntervalPercentage struct {

	// Value
	ValAttr _ad.ST_PositivePercentage
}

func (_dbgfbf *CT_TLBehaviorAttributeNameList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bffb:
	for {
		_ddfd, _agbe := d.Token()
		if _agbe != nil {
			return _agbe
		}
		switch _eegbdg := _ddfd.(type) {
		case _d.StartElement:
			switch _eegbdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}:
				var _gdaa string
				if _cfcd := d.DecodeElement(&_gdaa, &_eegbdg); _cfcd != nil {
					return _cfcd
				}
				_dbgfbf.AttrName = append(_dbgfbf.AttrName, _gdaa)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0041\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u004e\u0061\u006d\u0065L\u0069\u0073\u0074\u0020\u0025\u0076", _eegbdg.Name)
				if _ccdff := d.Skip(); _ccdff != nil {
					return _ccdff
				}
			}
		case _d.EndElement:
			break _bffb
		case _d.CharData:
		}
	}
	return nil
}
func (_dfbg *CT_SlideLayout) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfbg.MatchingNameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_dfbg.MatchingNameAttr)})
	}
	if _dfbg.TypeAttr != ST_SlideLayoutTypeUnset {
		_gcee, _ddge := _dfbg.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _ddge != nil {
			return _ddge
		}
		start.Attr = append(start.Attr, _gcee)
	}
	if _dfbg.PreserveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfbg.PreserveAttr))})
	}
	if _dfbg.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfbg.UserDrawnAttr))})
	}
	if _dfbg.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfbg.ShowMasterSpAttr))})
	}
	if _dfbg.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfbg.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_cdee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_dfbg.CSld, _cdee)
	if _dfbg.ClrMapOvr != nil {
		_fggf := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_dfbg.ClrMapOvr, _fggf)
	}
	if _dfbg.Transition != nil {
		_fgbb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dfbg.Transition, _fgbb)
	}
	if _dfbg.Timing != nil {
		_ecgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_dfbg.Timing, _ecgf)
	}
	if _dfbg.Hf != nil {
		_egba := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_dfbg.Hf, _egba)
	}
	if _dfbg.ExtLst != nil {
		_dcdb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfbg.ExtLst, _dcdb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bfggd ST_TLTimeNodeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ddged := _d.Attr{}
	_ddged.Name = name
	switch _bfggd {
	case ST_TLTimeNodeTypeUnset:
		_ddged.Value = ""
	case ST_TLTimeNodeTypeClickEffect:
		_ddged.Value = "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeWithEffect:
		_ddged.Value = "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeAfterEffect:
		_ddged.Value = "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"
	case ST_TLTimeNodeTypeMainSeq:
		_ddged.Value = "\u006da\u0069\u006e\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeInteractiveSeq:
		_ddged.Value = "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071"
	case ST_TLTimeNodeTypeClickPar:
		_ddged.Value = "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072"
	case ST_TLTimeNodeTypeWithGroup:
		_ddged.Value = "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p"
	case ST_TLTimeNodeTypeAfterGroup:
		_ddged.Value = "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070"
	case ST_TLTimeNodeTypeTmRoot:
		_ddged.Value = "\u0074\u006d\u0052\u006f\u006f\u0074"
	}
	return _ddged, nil
}

// Validate validates the CT_TLGraphicalObjectBuild and its children
func (_cbdg *CT_TLGraphicalObjectBuild) Validate() error {
	return _cbdg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd")
}

// ValidateWithPath validates the CT_TLAnimVariantIntegerVal and its children, prefixing error messages with path
func (_eecef *CT_TLAnimVariantIntegerVal) ValidateWithPath(path string) error { return nil }
func (_bgbb ST_TLAnimateMotionBehaviorOrigin) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dbaec := _d.Attr{}
	_dbaec.Name = name
	switch _bgbb {
	case ST_TLAnimateMotionBehaviorOriginUnset:
		_dbaec.Value = ""
	case ST_TLAnimateMotionBehaviorOriginParent:
		_dbaec.Value = "\u0070\u0061\u0072\u0065\u006e\u0074"
	case ST_TLAnimateMotionBehaviorOriginLayout:
		_dbaec.Value = "\u006c\u0061\u0079\u006f\u0075\u0074"
	}
	return _dbaec, nil
}

// Validate validates the CT_ControlList and its children
func (_decg *CT_ControlList) Validate() error {
	return _decg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074")
}
func (_edaec *CT_GroupShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _edaec.Sp != nil {
		_aaec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070"}}
		for _, _deae := range _edaec.Sp {
			e.EncodeElement(_deae, _aaec)
		}
	}
	if _edaec.GrpSp != nil {
		_gbcb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _abae := range _edaec.GrpSp {
			e.EncodeElement(_abae, _gbcb)
		}
	}
	if _edaec.GraphicFrame != nil {
		_fedea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _gabe := range _edaec.GraphicFrame {
			e.EncodeElement(_gabe, _fedea)
		}
	}
	if _edaec.CxnSp != nil {
		_daae := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _bfac := range _edaec.CxnSp {
			e.EncodeElement(_bfac, _daae)
		}
	}
	if _edaec.Pic != nil {
		_bcdg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070i\u0063"}}
		for _, _gddd := range _edaec.Pic {
			e.EncodeElement(_gddd, _bcdg)
		}
	}
	if _edaec.ContentPart != nil {
		_fgea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}}
		for _, _dfec := range _edaec.ContentPart {
			e.EncodeElement(_dfec, _fgea)
		}
	}
	return nil
}
func ParseUnionST_PositiveFixedPercentage(s string) (_ad.ST_PositiveFixedPercentage, error) {
	return _ad.ParseUnionST_PositiveFixedPercentage(s)
}

// ValidateWithPath validates the CT_TagList and its children, prefixing error messages with path
func (_gbbb *CT_TagList) ValidateWithPath(path string) error {
	for _fgdeg, _fecdf := range _gbbb.Tag {
		if _baced := _fecdf.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _fgdeg)); _baced != nil {
			return _baced
		}
	}
	return nil
}
func NewCT_NotesMasterIdListEntry() *CT_NotesMasterIdListEntry {
	_dggdb := &CT_NotesMasterIdListEntry{}
	return _dggdb
}
func (_eccfa ST_PlaceholderType) Validate() error { return _eccfa.ValidateWithPath("") }
func (_fddde *CT_Shape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fddde.NvSpPr = NewCT_ShapeNonVisual()
	_fddde.SpPr = _ad.NewCT_ShapeProperties()
	for _, _fgabc := range start.Attr {
		if _fgabc.Name.Local == "\u0075s\u0065\u0042\u0067\u0046\u0069\u006cl" {
			_aaddf, _dbgf := _dc.ParseBool(_fgabc.Value)
			if _dbgf != nil {
				return _dbgf
			}
			_fddde.UseBgFillAttr = &_aaddf
			continue
		}
	}
_aafb:
	for {
		_gfgfb, _gggf := d.Token()
		if _gggf != nil {
			return _gggf
		}
		switch _adbefa := _gfgfb.(type) {
		case _d.StartElement:
			switch _adbefa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _gcec := d.DecodeElement(_fddde.NvSpPr, &_adbefa); _gcec != nil {
					return _gcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _ffgg := d.DecodeElement(_fddde.SpPr, &_adbefa); _ffgg != nil {
					return _ffgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fddde.Style = _ad.NewCT_ShapeStyle()
				if _dbgba := d.DecodeElement(_fddde.Style, &_adbefa); _dbgba != nil {
					return _dbgba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_fddde.TxBody = _ad.NewCT_TextBody()
				if _cdfe := d.DecodeElement(_fddde.TxBody, &_adbefa); _cdfe != nil {
					return _cdfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fddde.ExtLst = NewCT_ExtensionListModify()
				if _dffe := d.DecodeElement(_fddde.ExtLst, &_adbefa); _dffe != nil {
					return _dffe
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _adbefa.Name)
				if _agfb := d.Skip(); _agfb != nil {
					return _agfb
				}
			}
		case _d.EndElement:
			break _aafb
		case _d.CharData:
		}
	}
	return nil
}
func (_ecfbab ST_TLBehaviorAdditiveType) String() string {
	switch _ecfbab {
	case 0:
		return ""
	case 1:
		return "\u0062\u0061\u0073\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u0072\u0065\u0070\u006c"
	case 4:
		return "\u006d\u0075\u006c\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_edbbg *CT_OutlineViewSlideEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _edbbg.IdAttr)})
	if _edbbg.CollapseAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_edbbg.CollapseAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CmAuthorLst and its children, prefixing error messages with path
func (_defbe *CmAuthorLst) ValidateWithPath(path string) error {
	if _fafgc := _defbe.CT_CommentAuthorList.ValidateWithPath(path); _fafgc != nil {
		return _fafgc
	}
	return nil
}
func (_eedgd ST_SlideSizeType) Validate() error { return _eedgd.ValidateWithPath("") }
func (_abafb *ST_TransitionInOutDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dedfg, _abdda := d.Token()
	if _abdda != nil {
		return _abdda
	}
	if _dbeee, _ecfe := _dedfg.(_d.EndElement); _ecfe && _dbeee.Name == start.Name {
		*_abafb = 1
		return nil
	}
	if _bdaed, _bbfae := _dedfg.(_d.CharData); !_bbfae {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dedfg)
	} else {
		switch string(_bdaed) {
		case "":
			*_abafb = 0
		case "\u006f\u0075\u0074":
			*_abafb = 1
		case "\u0069\u006e":
			*_abafb = 2
		}
	}
	_dedfg, _abdda = d.Token()
	if _abdda != nil {
		return _abdda
	}
	if _eeebc, _faffd := _dedfg.(_d.EndElement); _faffd && _eeebc.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dedfg)
}
func (_fbad *CT_HandoutMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fbad.CSld = NewCT_CommonSlideData()
	_fbad.ClrMap = _ad.NewCT_ColorMapping()
_bege:
	for {
		_efae, _eegde := d.Token()
		if _eegde != nil {
			return _eegde
		}
		switch _fgdf := _efae.(type) {
		case _d.StartElement:
			switch _fgdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _ffad := d.DecodeElement(_fbad.CSld, &_fgdf); _ffad != nil {
					return _ffad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _ddcc := d.DecodeElement(_fbad.ClrMap, &_fgdf); _ddcc != nil {
					return _ddcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fbad.Hf = NewCT_HeaderFooter()
				if _eeged := d.DecodeElement(_fbad.Hf, &_fgdf); _eeged != nil {
					return _eeged
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbad.ExtLst = NewCT_ExtensionListModify()
				if _gfcf := d.DecodeElement(_fbad.ExtLst, &_fgdf); _gfcf != nil {
					return _gfcf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0020\u0025v", _fgdf.Name)
				if _dgbe := d.Skip(); _dgbe != nil {
					return _dgbe
				}
			}
		case _d.EndElement:
			break _bege
		case _d.CharData:
		}
	}
	return nil
}
func (_cbcbbd *ST_TLTimeIndefinite) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cbcbbd = 0
	case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
		*_cbcbbd = 1
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSorterViewProperties and its children, prefixing error messages with path
func (_cdbc *CT_SlideSorterViewProperties) ValidateWithPath(path string) error {
	if _cafffd := _cdbc.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _cafffd != nil {
		return _cafffd
	}
	if _cdbc.ExtLst != nil {
		if _fabde := _cdbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fabde != nil {
			return _fabde
		}
	}
	return nil
}

type CT_OleObjectLink struct {

	// Update Linked Embedded Objects Automatically
	UpdateAutomaticAttr *bool
	ExtLst              *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLTextTargetElement and its children, prefixing error messages with path
func (_aecdaed *CT_TLTextTargetElement) ValidateWithPath(path string) error {
	if _aecdaed.CharRg != nil {
		if _cfbgb := _aecdaed.CharRg.ValidateWithPath(path + "\u002fC\u0068\u0061\u0072\u0052\u0067"); _cfbgb != nil {
			return _cfbgb
		}
	}
	if _aecdaed.PRg != nil {
		if _affb := _aecdaed.PRg.ValidateWithPath(path + "\u002f\u0050\u0052\u0067"); _affb != nil {
			return _affb
		}
	}
	return nil
}

type NotesMaster struct{ CT_NotesMaster }

func (_adggf ST_PhotoAlbumLayout) String() string {
	switch _adggf {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0074\u0054\u006f\u0053\u006c\u0069\u0064\u0065"
	case 2:
		return "\u0031\u0070\u0069\u0063"
	case 3:
		return "\u0032\u0070\u0069\u0063"
	case 4:
		return "\u0034\u0070\u0069\u0063"
	case 5:
		return "\u0031p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 6:
		return "\u0032p\u0069\u0063\u0054\u0069\u0074\u006ce"
	case 7:
		return "\u0034p\u0069\u0063\u0054\u0069\u0074\u006ce"
	}
	return ""
}

// ValidateWithPath validates the CT_TLAnimateScaleBehavior and its children, prefixing error messages with path
func (_bece *CT_TLAnimateScaleBehavior) ValidateWithPath(path string) error {
	if _dgfba := _bece.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _dgfba != nil {
		return _dgfba
	}
	if _bece.By != nil {
		if _gacaa := _bece.By.ValidateWithPath(path + "\u002f\u0042\u0079"); _gacaa != nil {
			return _gacaa
		}
	}
	if _bece.From != nil {
		if _gdgf := _bece.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _gdgf != nil {
			return _gdgf
		}
	}
	if _bece.To != nil {
		if _gcdgb := _bece.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _gcdgb != nil {
			return _gcdgb
		}
	}
	return nil
}

type Sld struct{ CT_Slide }
type CT_TLCommandBehavior struct {

	// Command Type
	TypeAttr ST_TLCommandType

	// Command
	CmdAttr *string
	CBhvr   *CT_TLCommonBehaviorData
}

func (_dabf ST_TLParaBuildType) String() string {
	switch _dabf {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0070"
	case 3:
		return "\u0063\u0075\u0073\u0074"
	case 4:
		return "\u0077\u0068\u006fl\u0065"
	}
	return ""
}
func (_abacg ST_TLTimeNodeMasterRelation) String() string {
	switch _abacg {
	case 0:
		return ""
	case 1:
		return "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case 2:
		return "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case 3:
		return "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return ""
}

// Validate validates the CT_NormalViewPortion and its children
func (_gadbb *CT_NormalViewPortion) Validate() error {
	return _gadbb.ValidateWithPath("C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e")
}
func NewHandoutMaster() *HandoutMaster {
	_fecag := &HandoutMaster{}
	_fecag.CT_HandoutMaster = *NewCT_HandoutMaster()
	return _fecag
}

// Validate validates the CT_EmbeddedFontListEntry and its children
func (_aecd *CT_EmbeddedFontListEntry) Validate() error {
	return _aecd.ValidateWithPath("\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}

// Validate validates the PresentationPr and its children
func (_efbbab *PresentationPr) Validate() error {
	return _efbbab.ValidateWithPath("\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072")
}

// Validate validates the CT_ModifyVerifier and its children
func (_eeag *CT_ModifyVerifier) Validate() error {
	return _eeag.ValidateWithPath("\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072")
}
func (_cdcf *CT_CommonSlideViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdcf.SnapToGridAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u0047\u0072\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cdcf.SnapToGridAttr))})
	}
	if _cdcf.SnapToObjectsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006e\u0061\u0070\u0054\u006f\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cdcf.SnapToObjectsAttr))})
	}
	if _cdcf.ShowGuidesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0075\u0069\u0064\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cdcf.ShowGuidesAttr))})
	}
	e.EncodeToken(start)
	_afa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_cdcf.CViewPr, _afa)
	if _cdcf.GuideLst != nil {
		_geg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0075\u0069\u0064\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_cdcf.GuideLst, _geg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTemplateList() *CT_TLTemplateList { _ddega := &CT_TLTemplateList{}; return _ddega }
func (_eedfd *ST_SplitterBarState) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eedfd = 0
	case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
		*_eedfd = 1
	case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
		*_eedfd = 2
	case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
		*_eedfd = 3
	}
	return nil
}

type CT_Guide struct {

	// Guide Orientation
	OrientAttr ST_Direction

	// Guide Position
	PosAttr *_ad.ST_Coordinate32
}

// ValidateWithPath validates the CT_ShapeNonVisual and its children, prefixing error messages with path
func (_fgcge *CT_ShapeNonVisual) ValidateWithPath(path string) error {
	if _aedc := _fgcge.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _aedc != nil {
		return _aedc
	}
	if _beff := _fgcge.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _beff != nil {
		return _beff
	}
	if _aabca := _fgcge.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _aabca != nil {
		return _aabca
	}
	return nil
}

type CT_NormalViewProperties struct {

	// Show Outline Icons in Normal View
	ShowOutlineIconsAttr *bool

	// Snap Vertical Splitter
	SnapVertSplitterAttr *bool

	// State of the Vertical Splitter Bar
	VertBarStateAttr ST_SplitterBarState

	// State of the Horizontal Splitter Bar
	HorzBarStateAttr ST_SplitterBarState

	// Prefer Single View
	PreferSingleViewAttr *bool

	// Normal View Restored Left Properties
	RestoredLeft *CT_NormalViewPortion

	// Normal View Restored Top Properties
	RestoredTop *CT_NormalViewPortion
	ExtLst      *CT_ExtensionList
}
type CT_Background struct {

	// Black and White Mode
	BwModeAttr _ad.ST_BlackWhiteMode

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_ad.CT_StyleMatrixReference
}
type ST_TLAnimateBehaviorValueType byte

func (_cfded *ST_WebColorType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cfded = 0
	case "\u006e\u006f\u006e\u0065":
		*_cfded = 1
	case "\u0062r\u006f\u0077\u0073\u0065\u0072":
		*_cfded = 2
	case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_cfded = 3
	case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
		*_cfded = 4
	case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
		*_cfded = 5
	case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
		*_cfded = 6
	}
	return nil
}
func (_gdee *CT_OleObjectLink) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdee.UpdateAutomaticAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075p\u0064a\u0074\u0065\u0041\u0075\u0074\u006f\u006d\u0061\u0074\u0069\u0063"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gdee.UpdateAutomaticAttr))})
	}
	e.EncodeToken(start)
	if _gdee.ExtLst != nil {
		_cdfc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gdee.ExtLst, _cdfc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aaabed ST_TLTimeNodeSyncType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aaabed.String(), start)
}
func NewAG_Ole() *AG_Ole { _fdd := &AG_Ole{}; return _fdd }

// Validate validates the CT_GroupShapeChoice and its children
func (_aecg *CT_GroupShapeChoice) Validate() error {
	return _aecg.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_cbcdf ST_TLNextActionType) Validate() error { return _cbcdf.ValidateWithPath("") }

// Validate validates the CT_Picture and its children
func (_fbeb *CT_Picture) Validate() error {
	return _fbeb.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065")
}

// Validate validates the CT_OutlineViewSlideEntry and its children
func (_aecdd *CT_OutlineViewSlideEntry) Validate() error {
	return _aecdd.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079")
}

// ValidateWithPath validates the CT_CustomerDataList and its children, prefixing error messages with path
func (_ffgf *CT_CustomerDataList) ValidateWithPath(path string) error {
	for _abeb, _afbb := range _ffgf.CustData {
		if _bfgf := _afbb.ValidateWithPath(_gc.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _abeb)); _bfgf != nil {
			return _bfgf
		}
	}
	if _ffgf.Tags != nil {
		if _ggdc := _ffgf.Tags.ValidateWithPath(path + "\u002f\u0054\u0061g\u0073"); _ggdc != nil {
			return _ggdc
		}
	}
	return nil
}

type CT_GraphicalObjectFrameNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_ad.CT_NonVisualDrawingProps

	// Non-Visual Graphic Frame Drawing Properties
	CNvGraphicFramePr *_ad.CT_NonVisualGraphicFrameProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func NewCT_SlideRelationshipListEntry() *CT_SlideRelationshipListEntry {
	_fdce := &CT_SlideRelationshipListEntry{}
	return _fdce
}

type CT_SlideLayoutIdList struct {

	// Slide Layout Id
	SldLayoutId []*CT_SlideLayoutIdListEntry
}

func NewCT_TLTemplate() *CT_TLTemplate {
	_efafe := &CT_TLTemplate{}
	_efafe.TnLst = NewCT_TimeNodeList()
	return _efafe
}
func NewCT_NotesMasterIdList() *CT_NotesMasterIdList { _ebbf := &CT_NotesMasterIdList{}; return _ebbf }
func (_cadbe ST_SplitterBarState) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cadbe.String(), start)
}

// ValidateWithPath validates the CT_NotesViewProperties and its children, prefixing error messages with path
func (_eeaga *CT_NotesViewProperties) ValidateWithPath(path string) error {
	if _gbea := _eeaga.CSldViewPr.ValidateWithPath(path + "/\u0043\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"); _gbea != nil {
		return _gbea
	}
	if _eeaga.ExtLst != nil {
		if _aggcc := _eeaga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aggcc != nil {
			return _aggcc
		}
	}
	return nil
}
func (_feb *CT_CustomerDataList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _feb.CustData != nil {
		_dfeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061"}}
		for _, _deff := range _feb.CustData {
			e.EncodeElement(_deff, _dfeb)
		}
	}
	if _feb.Tags != nil {
		_bea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0061\u0067\u0073"}}
		e.EncodeElement(_feb.Tags, _bea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ShowInfoBrowse() *CT_ShowInfoBrowse { _bdfc := &CT_ShowInfoBrowse{}; return _bdfc }
func (_ffgfgc ST_IterateType) String() string {
	switch _ffgfgc {
	case 0:
		return ""
	case 1:
		return "\u0065\u006c"
	case 2:
		return "\u0077\u0064"
	case 3:
		return "\u006c\u0074"
	}
	return ""
}
func (_ecdggb *ST_TLDiagramBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecdggb = 0
	case "\u0077\u0068\u006fl\u0065":
		*_ecdggb = 1
	case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_ecdggb = 2
	case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
		*_ecdggb = 3
	case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
		*_ecdggb = 4
	case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
		*_ecdggb = 5
	case "\u0063\u0077":
		*_ecdggb = 6
	case "\u0063\u0077\u0049\u006e":
		*_ecdggb = 7
	case "\u0063\u0077\u004fu\u0074":
		*_ecdggb = 8
	case "\u0063\u0063\u0077":
		*_ecdggb = 9
	case "\u0063\u0063\u0077I\u006e":
		*_ecdggb = 10
	case "\u0063\u0063\u0077\u004f\u0075\u0074":
		*_ecdggb = 11
	case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
		*_ecdggb = 12
	case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
		*_ecdggb = 13
	case "\u0075\u0070":
		*_ecdggb = 14
	case "\u0064\u006f\u0077\u006e":
		*_ecdggb = 15
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_ecdggb = 16
	case "\u0063\u0075\u0073\u0074":
		*_ecdggb = 17
	}
	return nil
}

// ValidateWithPath validates the EG_SlideListChoice and its children, prefixing error messages with path
func (_aadgf *EG_SlideListChoice) ValidateWithPath(path string) error {
	if _aadgf.SldAll != nil {
		if _fbbd := _aadgf.SldAll.ValidateWithPath(path + "\u002fS\u006c\u0064\u0041\u006c\u006c"); _fbbd != nil {
			return _fbbd
		}
	}
	if _aadgf.SldRg != nil {
		if _daccfa := _aadgf.SldRg.ValidateWithPath(path + "\u002f\u0053\u006c\u0064\u0052\u0067"); _daccfa != nil {
			return _daccfa
		}
	}
	if _aadgf.CustShow != nil {
		if _dccgcg := _aadgf.CustShow.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0053\u0068\u006fw"); _dccgcg != nil {
			return _dccgcg
		}
	}
	return nil
}

type ST_TLTimeNodeSyncType byte

// ValidateWithPath validates the CT_TLTriggerTimeNodeID and its children, prefixing error messages with path
func (_cccf *CT_TLTriggerTimeNodeID) ValidateWithPath(path string) error { return nil }
func (_bbge *CT_TLGraphicalObjectBuild) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbge.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_bbge.SpidAttr)})
	}
	if _bbge.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_bbge.GrpIdAttr)})
	}
	if _bbge.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bbge.UiExpandAttr))})
	}
	e.EncodeToken(start)
	if _bbge.BldAsOne != nil {
		_dfea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0041\u0073\u004f\u006e\u0065"}}
		e.EncodeElement(_bbge.BldAsOne, _dfea)
	}
	if _bbge.BldSub != nil {
		_baefa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0053\u0075\u0062"}}
		e.EncodeElement(_bbge.BldSub, _baefa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bfdd *CT_TLAnimVariantFloatVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _bfdd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SideDirectionTransition and its children
func (_bcbc *CT_SideDirectionTransition) Validate() error {
	return _bcbc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}

type CT_TLMediaNodeAudio struct {

	// Is Narration
	IsNarrationAttr *bool

	// Common Media Node Properties
	CMediaNode *CT_TLCommonMediaNodeData
}

// ValidateWithPath validates the EG_ChildSlide and its children, prefixing error messages with path
func (_egacb *EG_ChildSlide) ValidateWithPath(path string) error {
	if _egacb.ClrMapOvr != nil {
		if _gccfd := _egacb.ClrMapOvr.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"); _gccfd != nil {
			return _gccfd
		}
	}
	return nil
}
func (_dffgc ST_TLAnimateColorSpace) ValidateWithPath(path string) error {
	switch _dffgc {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dffgc))
	}
	return nil
}
func (_gagf *CT_Guide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbdb := range start.Attr {
		if _gbdb.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_gagf.OrientAttr.UnmarshalXMLAttr(_gbdb)
			continue
		}
		if _gbdb.Name.Local == "\u0070\u006f\u0073" {
			_decad, _ecc := ParseUnionST_Coordinate32(_gbdb.Value)
			if _ecc != nil {
				return _ecc
			}
			_gagf.PosAttr = &_decad
			continue
		}
	}
	for {
		_bbf, _cdfd := d.Token()
		if _cdfd != nil {
			return _gc.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0075\u0069\u0064\u0065: \u0025\u0073", _cdfd)
		}
		if _gdec, _cedeb := _bbf.(_d.EndElement); _cedeb && _gdec.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TLPoint() *CT_TLPoint { _abde := &CT_TLPoint{}; return _abde }

// Validate validates the CT_TLShapeTargetElement and its children
func (_feacef *CT_TLShapeTargetElement) Validate() error {
	return _feacef.ValidateWithPath("\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}
func (_dfac *CT_Placeholder) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _deege := range start.Attr {
		if _deege.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dfac.TypeAttr.UnmarshalXMLAttr(_deege)
			continue
		}
		if _deege.Name.Local == "\u006f\u0072\u0069\u0065\u006e\u0074" {
			_dfac.OrientAttr.UnmarshalXMLAttr(_deege)
			continue
		}
		if _deege.Name.Local == "\u0073\u007a" {
			_dfac.SzAttr.UnmarshalXMLAttr(_deege)
			continue
		}
		if _deege.Name.Local == "\u0069\u0064\u0078" {
			_bbad, _beac := _dc.ParseUint(_deege.Value, 10, 32)
			if _beac != nil {
				return _beac
			}
			_ccfg := uint32(_bbad)
			_dfac.IdxAttr = &_ccfg
			continue
		}
		if _deege.Name.Local == "\u0068a\u0073C\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u006d\u0070\u0074" {
			_aged, _egfa := _dc.ParseBool(_deege.Value)
			if _egfa != nil {
				return _egfa
			}
			_dfac.HasCustomPromptAttr = &_aged
			continue
		}
	}
_dfbc:
	for {
		_bad, _ddcgg := d.Token()
		if _ddcgg != nil {
			return _ddcgg
		}
		switch _afeaf := _bad.(type) {
		case _d.StartElement:
			switch _afeaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dfac.ExtLst = NewCT_ExtensionListModify()
				if _fdcg := d.DecodeElement(_dfac.ExtLst, &_afeaf); _fdcg != nil {
					return _fdcg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068\u006fl\u0064e\u0072\u0020\u0025\u0076", _afeaf.Name)
				if _bcef := d.Skip(); _bcef != nil {
					return _bcef
				}
			}
		case _d.EndElement:
			break _dfbc
		case _d.CharData:
		}
	}
	return nil
}

type AG_Ole struct {
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// Validate validates the CT_SlideMasterTextStyles and its children
func (_gcacdd *CT_SlideMasterTextStyles) Validate() error {
	return _gcacdd.ValidateWithPath("\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073")
}

// ValidateWithPath validates the CT_TLBehaviorAttributeNameList and its children, prefixing error messages with path
func (_gagg *CT_TLBehaviorAttributeNameList) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the EG_Background and its children, prefixing error messages with path
func (_cbdfa *EG_Background) ValidateWithPath(path string) error {
	if _cbdfa.BgPr != nil {
		if _bdadd := _cbdfa.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _bdadd != nil {
			return _bdadd
		}
	}
	if _cbdfa.BgRef != nil {
		if _eaaefa := _cbdfa.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _eaaefa != nil {
			return _eaaefa
		}
	}
	return nil
}
func (_dddbga ST_WebColorType) ValidateWithPath(path string) error {
	switch _dddbga {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dddbga))
	}
	return nil
}
func (_cfacb *CT_TransitionSoundAction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbeab:
	for {
		_faea, _afcda := d.Token()
		if _afcda != nil {
			return _afcda
		}
		switch _babeb := _faea.(type) {
		case _d.StartElement:
			switch _babeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0053n\u0064"}:
				_cfacb.StSnd = NewCT_TransitionStartSoundAction()
				if _fcdac := d.DecodeElement(_cfacb.StSnd, &_babeb); _fcdac != nil {
					return _fcdac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}:
				_cfacb.EndSnd = NewCT_Empty()
				if _afgaa := d.DecodeElement(_cfacb.EndSnd, &_babeb); _afgaa != nil {
					return _afgaa
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u006f\u0075\u006e\u0064\u0041c\u0074\u0069\u006f\u006e\u0020%\u0076", _babeb.Name)
				if _egbdc := d.Skip(); _egbdc != nil {
					return _egbdc
				}
			}
		case _d.EndElement:
			break _cbeab
		case _d.CharData:
		}
	}
	return nil
}
func (_ccgf *CT_WheelTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccgf.SpokesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u006f\u006b\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0076", *_ccgf.SpokesAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_IndexRange() *CT_IndexRange { _debag := &CT_IndexRange{}; return _debag }
func (_gbce *CT_OleObjectChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fefad:
	for {
		_ebbd, _abed := d.Token()
		if _abed != nil {
			return _abed
		}
		switch _bbaeb := _ebbd.(type) {
		case _d.StartElement:
			switch _bbaeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_gbce.Embed = NewCT_OleObjectEmbed()
				if _dcgdf := d.DecodeElement(_gbce.Embed, &_bbaeb); _dcgdf != nil {
					return _dcgdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_gbce.Link = NewCT_OleObjectLink()
				if _eaad := d.DecodeElement(_gbce.Link, &_bbaeb); _eaad != nil {
					return _eaad
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006ae\u0063\u0074\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bbaeb.Name)
				if _edfg := d.Skip(); _edfg != nil {
					return _edfg
				}
			}
		case _d.EndElement:
			break _fefad
		case _d.CharData:
		}
	}
	return nil
}
func (_egff *CT_CornerDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _faga := range start.Attr {
		if _faga.Name.Local == "\u0064\u0069\u0072" {
			_egff.DirAttr.UnmarshalXMLAttr(_faga)
			continue
		}
	}
	for {
		_eace, _aege := d.Token()
		if _aege != nil {
			return _gc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u0072\u006e\u0065\u0072\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006esi\u0074\u0069\u006fn\u003a \u0025\u0073", _aege)
		}
		if _deec, _egda := _eace.(_d.EndElement); _egda && _deec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adgdg *ST_SplitterBarState) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_acbbf, _befd := d.Token()
	if _befd != nil {
		return _befd
	}
	if _bcda, _fcbag := _acbbf.(_d.EndElement); _fcbag && _bcda.Name == start.Name {
		*_adgdg = 1
		return nil
	}
	if _dcce, _ebcb := _acbbf.(_d.CharData); !_ebcb {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acbbf)
	} else {
		switch string(_dcce) {
		case "":
			*_adgdg = 0
		case "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d":
			*_adgdg = 1
		case "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064":
			*_adgdg = 2
		case "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d":
			*_adgdg = 3
		}
	}
	_acbbf, _befd = d.Token()
	if _befd != nil {
		return _befd
	}
	if _fcdd, _cagag := _acbbf.(_d.EndElement); _cagag && _fcdd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acbbf)
}

// Validate validates the CT_CustomShowId and its children
func (_ecgcf *CT_CustomShowId) Validate() error {
	return _ecgcf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064")
}
func NewCT_SplitTransition() *CT_SplitTransition { _ecdf := &CT_SplitTransition{}; return _ecdf }
func (_ecgba *ST_TLOleChartBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbfebdf, _caadc := d.Token()
	if _caadc != nil {
		return _caadc
	}
	if _gebag, _gddbe := _dbfebdf.(_d.EndElement); _gddbe && _gebag.Name == start.Name {
		*_ecgba = 1
		return nil
	}
	if _ababc, _afge := _dbfebdf.(_d.CharData); !_afge {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbfebdf)
	} else {
		switch string(_ababc) {
		case "":
			*_ecgba = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_ecgba = 1
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_ecgba = 2
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ecgba = 3
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_ecgba = 4
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_ecgba = 5
		}
	}
	_dbfebdf, _caadc = d.Token()
	if _caadc != nil {
		return _caadc
	}
	if _aabgd, _gffef := _dbfebdf.(_d.EndElement); _gffef && _aabgd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbfebdf)
}
func NewCT_GuideList() *CT_GuideList { _faef := &CT_GuideList{}; return _faef }

// ValidateWithPath validates the CT_Placeholder and its children, prefixing error messages with path
func (_eegg *CT_Placeholder) ValidateWithPath(path string) error {
	if _cgbff := _eegg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cgbff != nil {
		return _cgbff
	}
	if _fbabf := _eegg.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _fbabf != nil {
		return _fbabf
	}
	if _debb := _eegg.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _debb != nil {
		return _debb
	}
	if _eegg.ExtLst != nil {
		if _accce := _eegg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _accce != nil {
			return _accce
		}
	}
	return nil
}

type ST_TLTriggerEvent byte

// Validate validates the CT_Rel and its children
func (_fbade *CT_Rel) Validate() error {
	return _fbade.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u006c")
}
func (_gefg *CT_NotesMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gefg.CSld = NewCT_CommonSlideData()
	_gefg.ClrMap = _ad.NewCT_ColorMapping()
_fdecg:
	for {
		_acff, _cggc := d.Token()
		if _cggc != nil {
			return _cggc
		}
		switch _ebdag := _acff.(type) {
		case _d.StartElement:
			switch _ebdag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bdbbd := d.DecodeElement(_gefg.CSld, &_ebdag); _bdbbd != nil {
					return _bdbbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _ffea := d.DecodeElement(_gefg.ClrMap, &_ebdag); _ffea != nil {
					return _ffea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_gefg.Hf = NewCT_HeaderFooter()
				if _baga := d.DecodeElement(_gefg.Hf, &_ebdag); _baga != nil {
					return _baga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}:
				_gefg.NotesStyle = _ad.NewCT_TextListStyle()
				if _gfge := d.DecodeElement(_gefg.NotesStyle, &_ebdag); _gfge != nil {
					return _gfge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gefg.ExtLst = NewCT_ExtensionListModify()
				if _bded := d.DecodeElement(_gefg.ExtLst, &_ebdag); _bded != nil {
					return _bded
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _ebdag.Name)
				if _bfegb := d.Skip(); _bfegb != nil {
					return _bfegb
				}
			}
		case _d.EndElement:
			break _fdecg
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLIterateIntervalTime struct {

	// Time
	ValAttr ST_TLTime
}

func (_bfge *CT_ExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ebda:
	for {
		_cfdc, _gaga := d.Token()
		if _gaga != nil {
			return _gaga
		}
		switch _ffaf := _cfdc.(type) {
		case _d.StartElement:
			switch _ffaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fabe := NewCT_Extension()
				if _geba := d.DecodeElement(_fabe, &_ffaf); _geba != nil {
					return _geba
				}
				_bfge.Ext = append(_bfge.Ext, _fabe)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _ffaf.Name)
				if _aedb := d.Skip(); _aedb != nil {
					return _aedb
				}
			}
		case _d.EndElement:
			break _ebda
		case _d.CharData:
		}
	}
	return nil
}
func (_afda *TagLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0074\u0061\u0067\u004c\u0073\u0074"
	return _afda.CT_TagList.MarshalXML(e, start)
}
func (_eded *CT_EmbeddedFontListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ggb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u006f\u006e\u0074"}}
	e.EncodeElement(_eded.Font, _ggb)
	if _eded.Regular != nil {
		_aaag := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0072\u0065\u0067\u0075\u006c\u0061r"}}
		e.EncodeElement(_eded.Regular, _aaag)
	}
	if _eded.Bold != nil {
		_ccfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006f\u006c\u0064"}}
		e.EncodeElement(_eded.Bold, _ccfa)
	}
	if _eded.Italic != nil {
		_aagf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0069\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_eded.Italic, _aagf)
	}
	if _eded.BoldItalic != nil {
		_fede := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062o\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"}}
		e.EncodeElement(_eded.BoldItalic, _fede)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_InOutTransition and its children, prefixing error messages with path
func (_gfbg *CT_InOutTransition) ValidateWithPath(path string) error {
	if _afdf := _gfbg.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _afdf != nil {
		return _afdf
	}
	return nil
}
func NewCT_OutlineViewProperties() *CT_OutlineViewProperties {
	_agcb := &CT_OutlineViewProperties{}
	_agcb.CViewPr = NewCT_CommonViewProperties()
	return _agcb
}
func (_ddaee *CT_TLTimeAnimateValue) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddaee.TmAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_ddaee.TmAttr)})
	}
	if _ddaee.FmlaAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _gc.Sprintf("\u0025\u0076", *_ddaee.FmlaAttr)})
	}
	e.EncodeToken(start)
	if _ddaee.Val != nil {
		_bcdcc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0076a\u006c"}}
		e.EncodeElement(_ddaee.Val, _bcdcc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eadgg *ST_TLBehaviorOverrideType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bddda, _bcdgcc := d.Token()
	if _bcdgcc != nil {
		return _bcdgcc
	}
	if _ecfcc, _agdgd := _bddda.(_d.EndElement); _agdgd && _ecfcc.Name == start.Name {
		*_eadgg = 1
		return nil
	}
	if _ccecd, _daccfac := _bddda.(_d.CharData); !_daccfac {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bddda)
	} else {
		switch string(_ccecd) {
		case "":
			*_eadgg = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_eadgg = 1
		case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
			*_eadgg = 2
		}
	}
	_bddda, _bcdgcc = d.Token()
	if _bcdgcc != nil {
		return _bcdgcc
	}
	if _ccdc, _dgced := _bddda.(_d.EndElement); _dgced && _ccdc.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bddda)
}
func (_eeeeg *ST_WebColorType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fefcfc, _ebaeef := d.Token()
	if _ebaeef != nil {
		return _ebaeef
	}
	if _fffce, _feffd := _fefcfc.(_d.EndElement); _feffd && _fffce.Name == start.Name {
		*_eeeeg = 1
		return nil
	}
	if _cecdg, _aafcc := _fefcfc.(_d.CharData); !_aafcc {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fefcfc)
	} else {
		switch string(_cecdg) {
		case "":
			*_eeeeg = 0
		case "\u006e\u006f\u006e\u0065":
			*_eeeeg = 1
		case "\u0062r\u006f\u0077\u0073\u0065\u0072":
			*_eeeeg = 2
		case "\u0070\u0072e\u0073\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_eeeeg = 3
		case "\u0070r\u0065s\u0065\u006e\u0074\u0061\u0074i\u006f\u006eA\u0063\u0063\u0065\u006e\u0074":
			*_eeeeg = 4
		case "\u0077\u0068i\u0074\u0065\u0054e\u0078\u0074\u004f\u006e\u0042\u006c\u0061\u0063\u006b":
			*_eeeeg = 5
		case "\u0062\u006ca\u0063\u006b\u0054e\u0078\u0074\u004f\u006e\u0057\u0068\u0069\u0074\u0065":
			*_eeeeg = 6
		}
	}
	_fefcfc, _ebaeef = d.Token()
	if _ebaeef != nil {
		return _ebaeef
	}
	if _dbebc, _fbag := _fefcfc.(_d.EndElement); _fbag && _dbebc.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fefcfc)
}
func (_bbcff *CT_TLCommandBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbcff.TypeAttr != ST_TLCommandTypeUnset {
		_efeda, _bbcdf := _bbcff.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bbcdf != nil {
			return _bbcdf
		}
		start.Attr = append(start.Attr, _efeda)
	}
	if _bbcff.CmdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006d\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_bbcff.CmdAttr)})
	}
	e.EncodeToken(start)
	_fgebd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_bbcff.CBhvr, _fgebd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLSubShapeId struct {

	// Shape ID
	SpidAttr string
}

func (_ebff ST_TransitionSpeed) String() string {
	switch _ebff {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u006f\u0077"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u0066\u0061\u0073\u0074"
	}
	return ""
}

// Validate validates the NotesMaster and its children
func (_gggad *NotesMaster) Validate() error {
	return _gggad.ValidateWithPath("N\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072")
}
func (_efd *CT_GroupShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_afbf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_efd.CNvPr, _afbf)
	_fcegd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_efd.CNvGrpSpPr, _fcegd)
	_cede := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_efd.NvPr, _cede)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_Background struct {

	// Background Properties
	BgPr *CT_BackgroundProperties

	// Background Style Reference
	BgRef *_ad.CT_StyleMatrixReference
}

func (_ebaaf ST_TLBehaviorAdditiveType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eeaee := _d.Attr{}
	_eeaee.Name = name
	switch _ebaaf {
	case ST_TLBehaviorAdditiveTypeUnset:
		_eeaee.Value = ""
	case ST_TLBehaviorAdditiveTypeBase:
		_eeaee.Value = "\u0062\u0061\u0073\u0065"
	case ST_TLBehaviorAdditiveTypeSum:
		_eeaee.Value = "\u0073\u0075\u006d"
	case ST_TLBehaviorAdditiveTypeRepl:
		_eeaee.Value = "\u0072\u0065\u0070\u006c"
	case ST_TLBehaviorAdditiveTypeMult:
		_eeaee.Value = "\u006d\u0075\u006c\u0074"
	case ST_TLBehaviorAdditiveTypeNone:
		_eeaee.Value = "\u006e\u006f\u006e\u0065"
	}
	return _eeaee, nil
}
func (_ddfbb *ST_TLBehaviorAdditiveType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdbab, _aacff := d.Token()
	if _aacff != nil {
		return _aacff
	}
	if _cdbbe, _baadc := _bdbab.(_d.EndElement); _baadc && _cdbbe.Name == start.Name {
		*_ddfbb = 1
		return nil
	}
	if _fbgc, _dcfgd := _bdbab.(_d.CharData); !_dcfgd {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdbab)
	} else {
		switch string(_fbgc) {
		case "":
			*_ddfbb = 0
		case "\u0062\u0061\u0073\u0065":
			*_ddfbb = 1
		case "\u0073\u0075\u006d":
			*_ddfbb = 2
		case "\u0072\u0065\u0070\u006c":
			*_ddfbb = 3
		case "\u006d\u0075\u006c\u0074":
			*_ddfbb = 4
		case "\u006e\u006f\u006e\u0065":
			*_ddfbb = 5
		}
	}
	_bdbab, _aacff = d.Token()
	if _aacff != nil {
		return _aacff
	}
	if _efegb, _ebgfac := _bdbab.(_d.EndElement); _ebgfac && _efegb.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdbab)
}

// ValidateWithPath validates the CT_TLTriggerRuntimeNode and its children, prefixing error messages with path
func (_fafge *CT_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	if _fafge.ValAttr == ST_TLTriggerRuntimeNodeUnset {
		return _gc.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gdcd := _fafge.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _gdcd != nil {
		return _gdcd
	}
	return nil
}
func (_abgfb *ST_TLAnimateColorDirection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_egdfc, _ccdag := d.Token()
	if _ccdag != nil {
		return _ccdag
	}
	if _aadfb, _ffbfa := _egdfc.(_d.EndElement); _ffbfa && _aadfb.Name == start.Name {
		*_abgfb = 1
		return nil
	}
	if _fcccc, _dbcdd := _egdfc.(_d.CharData); !_dbcdd {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egdfc)
	} else {
		switch string(_fcccc) {
		case "":
			*_abgfb = 0
		case "\u0063\u0077":
			*_abgfb = 1
		case "\u0063\u0063\u0077":
			*_abgfb = 2
		}
	}
	_egdfc, _ccdag = d.Token()
	if _ccdag != nil {
		return _ccdag
	}
	if _cafeg, _daefd := _egdfc.(_d.EndElement); _daefd && _cafeg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egdfc)
}
func (_fcaf *CT_TLCommandBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcaf.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _agccc := range start.Attr {
		if _agccc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fcaf.TypeAttr.UnmarshalXMLAttr(_agccc)
			continue
		}
		if _agccc.Name.Local == "\u0063\u006d\u0064" {
			_ddefb, _aefbf := _agccc.Value, error(nil)
			if _aefbf != nil {
				return _aefbf
			}
			_fcaf.CmdAttr = &_ddefb
			continue
		}
	}
_eccd:
	for {
		_cbedd, _bgcac := d.Token()
		if _bgcac != nil {
			return _bgcac
		}
		switch _ecagf := _cbedd.(type) {
		case _d.StartElement:
			switch _ecagf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _bgfc := d.DecodeElement(_fcaf.CBhvr, &_ecagf); _bgfc != nil {
					return _bgfc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006e\u0064\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _ecagf.Name)
				if _dbbcc := d.Skip(); _dbbcc != nil {
					return _dbbcc
				}
			}
		case _d.EndElement:
			break _eccd
		case _d.CharData:
		}
	}
	return nil
}
func (_eggbc ST_WebScreenSize) String() string {
	switch _eggbc {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00300"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}

type CT_TLTextTargetElement struct {

	// Character Range
	CharRg *CT_IndexRange

	// Paragraph Text Range
	PRg *CT_IndexRange
}

func (_gfafc *ST_TLAnimateBehaviorCalcMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gfafc = 0
	case "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065":
		*_gfafc = 1
	case "\u006c\u0069\u006e":
		*_gfafc = 2
	case "\u0066\u006d\u006c\u0061":
		*_gfafc = 3
	}
	return nil
}

const (
	ST_DirectionUnset ST_Direction = 0
	ST_DirectionHorz  ST_Direction = 1
	ST_DirectionVert  ST_Direction = 2
)

func (_dffg *CT_GroupShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gabd:
	for {
		_ggfa, _fcega := d.Token()
		if _fcega != nil {
			return _fcega
		}
		switch _bbe := _ggfa.(type) {
		case _d.StartElement:
			switch _bbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_adccc := NewCT_Shape()
				if _bfab := d.DecodeElement(_adccc, &_bbe); _bfab != nil {
					return _bfab
				}
				_dffg.Sp = append(_dffg.Sp, _adccc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_ecf := NewCT_GroupShape()
				if _facf := d.DecodeElement(_ecf, &_bbe); _facf != nil {
					return _facf
				}
				_dffg.GrpSp = append(_dffg.GrpSp, _ecf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bafd := NewCT_GraphicalObjectFrame()
				if _ddeb := d.DecodeElement(_bafd, &_bbe); _ddeb != nil {
					return _ddeb
				}
				_dffg.GraphicFrame = append(_dffg.GraphicFrame, _bafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_cbcb := NewCT_Connector()
				if _fgcg := d.DecodeElement(_cbcb, &_bbe); _fgcg != nil {
					return _fgcg
				}
				_dffg.CxnSp = append(_dffg.CxnSp, _cbcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bfb := NewCT_Picture()
				if _edgg := d.DecodeElement(_bfb, &_bbe); _edgg != nil {
					return _edgg
				}
				_dffg.Pic = append(_dffg.Pic, _bfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074"}:
				_dgdd := NewCT_Rel()
				if _cbb := d.DecodeElement(_dgdd, &_bbe); _cbb != nil {
					return _cbb
				}
				_dffg.ContentPart = append(_dffg.ContentPart, _dgdd)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068ap\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _bbe.Name)
				if _bgabc := d.Skip(); _bgabc != nil {
					return _bgabc
				}
			}
		case _d.EndElement:
			break _gabd
		case _d.CharData:
		}
	}
	return nil
}
func (_cfbbbg ST_PrintColorMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fbca := _d.Attr{}
	_fbca.Name = name
	switch _cfbbbg {
	case ST_PrintColorModeUnset:
		_fbca.Value = ""
	case ST_PrintColorModeBw:
		_fbca.Value = "\u0062\u0077"
	case ST_PrintColorModeGray:
		_fbca.Value = "\u0067\u0072\u0061\u0079"
	case ST_PrintColorModeClr:
		_fbca.Value = "\u0063\u006c\u0072"
	}
	return _fbca, nil
}
func (_abcgfa ST_WebScreenSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_abcgfa.String(), start)
}
func (_adffc ST_TLTimeAnimateValueTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _adffc.ST_PositiveFixedPercentage != nil {
		e.Encode(_adffc.ST_PositiveFixedPercentage)
	}
	if _adffc.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_d.CharData(_adffc.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the CT_TLAnimateColorBehavior and its children
func (_ecfad *CT_TLAnimateColorBehavior) Validate() error {
	return _ecfad.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_geda *CT_TLTimeNodeSequence) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_geda.CTn = NewCT_TLCommonTimeNodeData()
	for _, _fdggf := range start.Attr {
		if _fdggf.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074" {
			_fbbaac, _dafdb := _dc.ParseBool(_fdggf.Value)
			if _dafdb != nil {
				return _dafdb
			}
			_geda.ConcurrentAttr = &_fbbaac
			continue
		}
		if _fdggf.Name.Local == "\u0070\u0072\u0065\u0076\u0041\u0063" {
			_geda.PrevAcAttr.UnmarshalXMLAttr(_fdggf)
			continue
		}
		if _fdggf.Name.Local == "\u006e\u0065\u0078\u0074\u0041\u0063" {
			_geda.NextAcAttr.UnmarshalXMLAttr(_fdggf)
			continue
		}
	}
_ebbg:
	for {
		_addea, _bebd := d.Token()
		if _bebd != nil {
			return _bebd
		}
		switch _dggeb := _addea.(type) {
		case _d.StartElement:
			switch _dggeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _bcgfe := d.DecodeElement(_geda.CTn, &_dggeb); _bcgfe != nil {
					return _bcgfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_geda.PrevCondLst = NewCT_TLTimeConditionList()
				if _fdff := d.DecodeElement(_geda.PrevCondLst, &_dggeb); _fdff != nil {
					return _fdff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}:
				_geda.NextCondLst = NewCT_TLTimeConditionList()
				if _fcfb := d.DecodeElement(_geda.NextCondLst, &_dggeb); _fcfb != nil {
					return _fcfb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0053\u0065\u0071\u0075\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _dggeb.Name)
				if _dfcaf := d.Skip(); _dfcaf != nil {
					return _dfcaf
				}
			}
		case _d.EndElement:
			break _ebbg
		case _d.CharData:
		}
	}
	return nil
}
func (_dgeef ST_PhotoAlbumLayout) ValidateWithPath(path string) error {
	switch _dgeef {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgeef))
	}
	return nil
}
func (_geeg *CT_Presentation) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_geeg.NotesSz = _ad.NewCT_PositiveSize2D()
	for _, _gcea := range start.Attr {
		if _gcea.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d" {
			_cfde, _adcg := _dc.ParseInt(_gcea.Value, 10, 32)
			if _adcg != nil {
				return _adcg
			}
			_decf := int32(_cfde)
			_geeg.FirstSlideNumAttr = &_decf
			continue
		}
		if _gcea.Name.Local == "\u0072\u0074\u006c" {
			_gfca, _aada := _dc.ParseBool(_gcea.Value)
			if _aada != nil {
				return _aada
			}
			_geeg.RtlAttr = &_gfca
			continue
		}
		if _gcea.Name.Local == "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065" {
			_ebbfd, _abbcde := _dc.ParseBool(_gcea.Value)
			if _abbcde != nil {
				return _abbcde
			}
			_geeg.CompatModeAttr = &_ebbfd
			continue
		}
		if _gcea.Name.Local == "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073" {
			_deac, _dbaf := _dc.ParseBool(_gcea.Value)
			if _dbaf != nil {
				return _dbaf
			}
			_geeg.EmbedTrueTypeFontsAttr = &_deac
			continue
		}
		if _gcea.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_gceab, _caae := _dc.ParseBool(_gcea.Value)
			if _caae != nil {
				return _caae
			}
			_geeg.AutoCompressPicturesAttr = &_gceab
			continue
		}
		if _gcea.Name.Local == "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064" {
			_ecda, _bcgbf := _dc.ParseBool(_gcea.Value)
			if _bcgbf != nil {
				return _bcgbf
			}
			_geeg.ShowSpecialPlsOnTitleSldAttr = &_ecda
			continue
		}
		if _gcea.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d" {
			_edeb, _bbag := ParseUnionST_Percentage(_gcea.Value)
			if _bbag != nil {
				return _bbag
			}
			_geeg.ServerZoomAttr = &_edeb
			continue
		}
		if _gcea.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_geeg.ConformanceAttr.UnmarshalXMLAttr(_gcea)
			continue
		}
		if _gcea.Name.Local == "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065" {
			_acbfe, _ggcb := _dc.ParseBool(_gcea.Value)
			if _ggcb != nil {
				return _ggcb
			}
			_geeg.RemovePersonalInfoOnSaveAttr = &_acbfe
			continue
		}
		if _gcea.Name.Local == "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073" {
			_fcce, _bbdeb := _dc.ParseBool(_gcea.Value)
			if _bbdeb != nil {
				return _bbdeb
			}
			_geeg.SaveSubsetFontsAttr = &_fcce
			continue
		}
		if _gcea.Name.Local == "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064" {
			_afbfa, _caab := _dc.ParseUint(_gcea.Value, 10, 32)
			if _caab != nil {
				return _caab
			}
			_agbb := uint32(_afbfa)
			_geeg.BookmarkIdSeedAttr = &_agbb
			continue
		}
		if _gcea.Name.Local == "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073" {
			_dbfe, _gcbb := _dc.ParseBool(_gcea.Value)
			if _gcbb != nil {
				return _gcbb
			}
			_geeg.StrictFirstAndLastCharsAttr = &_dbfe
			continue
		}
	}
_afeg:
	for {
		_eabgf, _efcd := d.Token()
		if _efcd != nil {
			return _efcd
		}
		switch _fadbd := _eabgf.(type) {
		case _d.StartElement:
			switch _fadbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072I\u0064\u004c\u0073\u0074"}:
				_geeg.SldMasterIdLst = NewCT_SlideMasterIdList()
				if _gfcfb := d.DecodeElement(_geeg.SldMasterIdLst, &_fadbd); _gfcfb != nil {
					return _gfcfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006ft\u0065\u0073\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}:
				_geeg.NotesMasterIdLst = NewCT_NotesMasterIdList()
				if _addec := d.DecodeElement(_geeg.NotesMasterIdLst, &_fadbd); _addec != nil {
					return _addec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068a\u006ed\u006f\u0075\u0074\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}:
				_geeg.HandoutMasterIdLst = NewCT_HandoutMasterIdList()
				if _dbdc := d.DecodeElement(_geeg.HandoutMasterIdLst, &_fadbd); _dbdc != nil {
					return _dbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}:
				_geeg.SldIdLst = NewCT_SlideIdList()
				if _bgad := d.DecodeElement(_geeg.SldIdLst, &_fadbd); _bgad != nil {
					return _bgad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064S\u007a"}:
				_geeg.SldSz = NewCT_SlideSize()
				if _dcbf := d.DecodeElement(_geeg.SldSz, &_fadbd); _dcbf != nil {
					return _dcbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0074\u0065\u0073\u0053\u007a"}:
				if _fbeg := d.DecodeElement(_geeg.NotesSz, &_fadbd); _fbeg != nil {
					return _fbeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_geeg.SmartTags = NewCT_SmartTags()
				if _ebgg := d.DecodeElement(_geeg.SmartTags, &_fadbd); _ebgg != nil {
					return _ebgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065m\u0062e\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0073\u0074"}:
				_geeg.EmbeddedFontLst = NewCT_EmbeddedFontList()
				if _ggac := d.DecodeElement(_geeg.EmbeddedFontLst, &_fadbd); _ggac != nil {
					return _ggac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}:
				_geeg.CustShowLst = NewCT_CustomShowList()
				if _beec := d.DecodeElement(_geeg.CustShowLst, &_fadbd); _beec != nil {
					return _beec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}:
				_geeg.PhotoAlbum = NewCT_PhotoAlbum()
				if _efecd := d.DecodeElement(_geeg.PhotoAlbum, &_fadbd); _efecd != nil {
					return _efecd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_geeg.CustDataLst = NewCT_CustomerDataList()
				if _egebc := d.DecodeElement(_geeg.CustDataLst, &_fadbd); _egebc != nil {
					return _egebc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006bi\u006e\u0073\u006f\u006b\u0075"}:
				_geeg.Kinsoku = NewCT_Kinsoku()
				if _cegc := d.DecodeElement(_geeg.Kinsoku, &_fadbd); _cegc != nil {
					return _cegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065f\u0061\u0075\u006ct\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_geeg.DefaultTextStyle = _ad.NewCT_TextListStyle()
				if _ddba := d.DecodeElement(_geeg.DefaultTextStyle, &_fadbd); _ddba != nil {
					return _ddba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072"}:
				_geeg.ModifyVerifier = NewCT_ModifyVerifier()
				if _ddef := d.DecodeElement(_geeg.ModifyVerifier, &_fadbd); _ddef != nil {
					return _ddef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geeg.ExtLst = NewCT_ExtensionList()
				if _bgce := d.DecodeElement(_geeg.ExtLst, &_fadbd); _bgce != nil {
					return _bgce
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _fadbd.Name)
				if _acaf := d.Skip(); _acaf != nil {
					return _acaf
				}
			}
		case _d.EndElement:
			break _afeg
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_FixedPercentage(s string) (_ad.ST_FixedPercentage, error) {
	return _ad.ParseUnionST_FixedPercentage(s)
}
func NewCT_Kinsoku() *CT_Kinsoku { _dege := &CT_Kinsoku{}; return _dege }

type EG_TopLevelSlide struct {

	// Color Scheme Map
	ClrMap *_ad.CT_ColorMapping
}

func (_cacbc ST_TLBehaviorTransformType) String() string {
	switch _cacbc {
	case 0:
		return ""
	case 1:
		return "\u0070\u0074"
	case 2:
		return "\u0069\u006d\u0067"
	}
	return ""
}

// ValidateWithPath validates the EG_TopLevelSlide and its children, prefixing error messages with path
func (_gdefd *EG_TopLevelSlide) ValidateWithPath(path string) error {
	if _ecbde := _gdefd.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ecbde != nil {
		return _ecbde
	}
	return nil
}
func (_cbaae ST_PlaceholderType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cbaae.String(), start)
}
func NewCT_StringTag() *CT_StringTag { _bdbdea := &CT_StringTag{}; return _bdbdea }

// ValidateWithPath validates the CT_TLMediaNodeAudio and its children, prefixing error messages with path
func (_ccdefb *CT_TLMediaNodeAudio) ValidateWithPath(path string) error {
	if _bggg := _ccdefb.CMediaNode.ValidateWithPath(path + "/\u0043\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"); _bggg != nil {
		return _bggg
	}
	return nil
}

type CT_CommonSlideViewProperties struct {

	// Snap Objects to Grid
	SnapToGridAttr *bool

	// Snap Objects to Objects
	SnapToObjectsAttr *bool

	// Show Guides in View
	ShowGuidesAttr *bool

	// Base properties for Slide View
	CViewPr *CT_CommonViewProperties

	// List of Guides
	GuideLst *CT_GuideList
}

func (_ec *AG_Ole) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ec.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ec.SpidAttr)})
	}
	if _ec.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_ec.NameAttr)})
	}
	if _ec.ShowAsIconAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ec.ShowAsIconAttr))})
	}
	if _ec.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ec.IdAttr)})
	}
	if _ec.ImgWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0057"}, Value: _gc.Sprintf("\u0025\u0076", *_ec.ImgWAttr)})
	}
	if _ec.ImgHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006d\u0067\u0048"}, Value: _gc.Sprintf("\u0025\u0076", *_ec.ImgHAttr)})
	}
	return nil
}
func (_dgbdf *ST_TransitionInOutDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dgbdf = 0
	case "\u006f\u0075\u0074":
		*_dgbdf = 1
	case "\u0069\u006e":
		*_dgbdf = 2
	}
	return nil
}

// Validate validates the CT_TLTriggerRuntimeNode and its children
func (_cccab *CT_TLTriggerRuntimeNode) Validate() error {
	return _cccab.ValidateWithPath("\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065")
}

// Validate validates the CT_TLByRgbColorTransform and its children
func (_cdacg *CT_TLByRgbColorTransform) Validate() error {
	return _cdacg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// Validate validates the CT_WebProperties and its children
func (_gfbec *CT_WebProperties) Validate() error {
	return _gfbec.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_TagsData and its children
func (_ebecg *CT_TagsData) Validate() error {
	return _ebecg.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061")
}
func (_fbggc *CT_TLOleChartTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_bgddg, _abca := _fbggc.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _abca != nil {
		return _abca
	}
	start.Attr = append(start.Attr, _bgddg)
	if _fbggc.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_fbggc.LvlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gcbd *CT_OptionalBlackTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dacb := range start.Attr {
		if _dacb.Name.Local == "\u0074h\u0072\u0075\u0042\u006c\u006b" {
			_gaaa, _cecd := _dc.ParseBool(_dacb.Value)
			if _cecd != nil {
				return _cecd
			}
			_gcbd.ThruBlkAttr = &_gaaa
			continue
		}
	}
	for {
		_dgga, _fbbc := d.Token()
		if _fbbc != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006c\u0042\u006c\u0061\u0063\u006bT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _fbbc)
		}
		if _fagfe, _ecea := _dgga.(_d.EndElement); _ecea && _fagfe.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_TransitionSpeedUnset ST_TransitionSpeed = 0
	ST_TransitionSpeedSlow  ST_TransitionSpeed = 1
	ST_TransitionSpeedMed   ST_TransitionSpeed = 2
	ST_TransitionSpeedFast  ST_TransitionSpeed = 3
)

type ST_TLOleChartBuildType byte

// Validate validates the CT_TLAnimVariant and its children
func (_ffbg *CT_TLAnimVariant) Validate() error {
	return _ffbg.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074")
}

// ValidateWithPath validates the ViewPr and its children, prefixing error messages with path
func (_efagec *ViewPr) ValidateWithPath(path string) error {
	if _bfdfdb := _efagec.CT_ViewProperties.ValidateWithPath(path); _bfdfdb != nil {
		return _bfdfdb
	}
	return nil
}
func (_gabf *CT_NotesMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fdae := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gabf.CSld, _fdae)
	_cbeee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_gabf.ClrMap, _cbeee)
	if _gabf.Hf != nil {
		_fedg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gabf.Hf, _fedg)
	}
	if _gabf.NotesStyle != nil {
		_becd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006eo\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gabf.NotesStyle, _becd)
	}
	if _gabf.ExtLst != nil {
		_bfcf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gabf.ExtLst, _bfcf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLTimeAnimateValue() *CT_TLTimeAnimateValue {
	_adbd := &CT_TLTimeAnimateValue{}
	return _adbd
}
func (_cccd *Sld) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0073l\u0064"
	return _cccd.CT_Slide.MarshalXML(e, start)
}
func (_acdc ST_PlaceholderType) String() string {
	switch _acdc {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0062\u006f\u0064\u0079"
	case 3:
		return "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065"
	case 4:
		return "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065"
	case 5:
		return "\u0064\u0074"
	case 6:
		return "\u0073\u006c\u0064\u004e\u0075\u006d"
	case 7:
		return "\u0066\u0074\u0072"
	case 8:
		return "\u0068\u0064\u0072"
	case 9:
		return "\u006f\u0062\u006a"
	case 10:
		return "\u0063\u0068\u0061r\u0074"
	case 11:
		return "\u0074\u0062\u006c"
	case 12:
		return "\u0063l\u0069\u0070\u0041\u0072\u0074"
	case 13:
		return "\u0064\u0067\u006d"
	case 14:
		return "\u006d\u0065\u0064i\u0061"
	case 15:
		return "\u0073\u006c\u0064\u0049\u006d\u0067"
	case 16:
		return "\u0070\u0069\u0063"
	}
	return ""
}
func (_dfgcb *CT_HeaderFooter) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfgcb.SldNumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006c\u0064\u004e\u0075\u006d"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfgcb.SldNumAttr))})
	}
	if _dfgcb.HdrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0064\u0072"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfgcb.HdrAttr))})
	}
	if _dfgcb.FtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0074\u0072"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfgcb.FtrAttr))})
	}
	if _dfgcb.DtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0074"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dfgcb.DtAttr))})
	}
	e.EncodeToken(start)
	if _dfgcb.ExtLst != nil {
		_fccc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfgcb.ExtLst, _fccc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebcc *CT_TLTriggerRuntimeNode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebcc.ValAttr = ST_TLTriggerRuntimeNode(1)
	for _, _ggcfd := range start.Attr {
		if _ggcfd.Name.Local == "\u0076\u0061\u006c" {
			_ebcc.ValAttr.UnmarshalXMLAttr(_ggcfd)
			continue
		}
	}
	for {
		_efcfg, _aabgb := d.Token()
		if _aabgb != nil {
			return _gc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0054r\u0069\u0067\u0067\u0065\u0072\u0052\u0075n\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u003a\u0020%\u0073", _aabgb)
		}
		if _gadac, _fdgcf := _efcfg.(_d.EndElement); _fdgcf && _gadac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_beecf *CT_SlideSorterViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _beecf.ShowFormattingAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_beecf.ShowFormattingAttr))})
	}
	e.EncodeToken(start)
	_cadd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_beecf.CViewPr, _cadd)
	if _beecf.ExtLst != nil {
		_cfccf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_beecf.ExtLst, _cfccf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OutlineViewProperties and its children
func (_fecd *CT_OutlineViewProperties) Validate() error {
	return _fecd.ValidateWithPath("\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_Guide and its children
func (_gbfg *CT_Guide) Validate() error {
	return _gbfg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065")
}
func (_fcabf ST_TLTimeIndefinite) ValidateWithPath(path string) error {
	switch _fcabf {
	case 0, 1:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcabf))
	}
	return nil
}
func (_gcba *ST_TLTimeNodeFillType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecdff, _dgaaf := d.Token()
	if _dgaaf != nil {
		return _dgaaf
	}
	if _faaad, _fafgg := _ecdff.(_d.EndElement); _fafgg && _faaad.Name == start.Name {
		*_gcba = 1
		return nil
	}
	if _abbfa, _fbccg := _ecdff.(_d.CharData); !_fbccg {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ecdff)
	} else {
		switch string(_abbfa) {
		case "":
			*_gcba = 0
		case "\u0072\u0065\u006d\u006f\u0076\u0065":
			*_gcba = 1
		case "\u0066\u0072\u0065\u0065\u007a\u0065":
			*_gcba = 2
		case "\u0068\u006f\u006c\u0064":
			*_gcba = 3
		case "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e":
			*_gcba = 4
		}
	}
	_ecdff, _dgaaf = d.Token()
	if _dgaaf != nil {
		return _dgaaf
	}
	if _bfbed, _dbged := _ecdff.(_d.EndElement); _dbged && _bfbed.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ecdff)
}

// Validate validates the CT_ExtensionList and its children
func (_gbgbb *CT_ExtensionList) Validate() error {
	return _gbgbb.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

type CT_EmbeddedFontList struct {

	// Embedded Font
	EmbeddedFont []*CT_EmbeddedFontListEntry
}

func (_ffecc *CT_OrientationTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eddgc := range start.Attr {
		if _eddgc.Name.Local == "\u0064\u0069\u0072" {
			_ffecc.DirAttr.UnmarshalXMLAttr(_eddgc)
			continue
		}
	}
	for {
		_bfacg, _cgfgf := d.Token()
		if _cgfgf != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004frie\u006eta\u0074\u0069\u006f\u006e\u0054\u0072\u0061ns\u0069\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _cgfgf)
		}
		if _fbfg, _gbda := _bfacg.(_d.EndElement); _gbda && _fbfg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gafcfa *CT_TLByHslColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _gc.Sprintf("\u0025\u0076", _gafcfa.HAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073"}, Value: _gc.Sprintf("\u0025\u0076", _gafcfa.SAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _gafcfa.LAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dfade ST_TLChartSubelementType) ValidateWithPath(path string) error {
	switch _dfade {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfade))
	}
	return nil
}
func (_fgbef ST_TLTimeNodeFillType) String() string {
	switch _fgbef {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006d\u006f\u0076\u0065"
	case 2:
		return "\u0066\u0072\u0065\u0065\u007a\u0065"
	case 3:
		return "\u0068\u006f\u006c\u0064"
	case 4:
		return "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"
	}
	return ""
}

type CT_TLOleBuildChart struct {

	// Build
	BldAttr ST_TLOleChartBuildType

	// Animate Background
	AnimBgAttr   *bool
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

func (_gceae ST_TLTriggerEvent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gceae.String(), start)
}

// Validate validates the CT_HtmlPublishProperties and its children
func (_cdeb *CT_HtmlPublishProperties) Validate() error {
	return _cdeb.ValidateWithPath("\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewEG_Background() *EG_Background { _fefdf := &EG_Background{}; return _fefdf }
func (_cbgca *ST_TransitionCornerDirectionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gddb, _cbcad := d.Token()
	if _cbcad != nil {
		return _cbcad
	}
	if _gadfa, _aecc := _gddb.(_d.EndElement); _aecc && _gadfa.Name == start.Name {
		*_cbgca = 1
		return nil
	}
	if _cbadb, _bbecd := _gddb.(_d.CharData); !_bbecd {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gddb)
	} else {
		switch string(_cbadb) {
		case "":
			*_cbgca = 0
		case "\u006c\u0075":
			*_cbgca = 1
		case "\u0072\u0075":
			*_cbgca = 2
		case "\u006c\u0064":
			*_cbgca = 3
		case "\u0072\u0064":
			*_cbgca = 4
		}
	}
	_gddb, _cbcad = d.Token()
	if _cbcad != nil {
		return _cbcad
	}
	if _gcdbe, _dcbea := _gddb.(_d.EndElement); _dcbea && _gcdbe.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gddb)
}
func NewCT_TLSubShapeId() *CT_TLSubShapeId { _adece := &CT_TLSubShapeId{}; return _adece }

type SldSyncPr struct{ CT_SlideSyncProperties }

// Validate validates the CT_Comment and its children
func (_feac *CT_Comment) Validate() error {
	return _feac.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}
func (_bfabb ST_TLCommandType) ValidateWithPath(path string) error {
	switch _bfabb {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfabb))
	}
	return nil
}

// ValidateWithPath validates the PresentationPr and its children, prefixing error messages with path
func (_decbe *PresentationPr) ValidateWithPath(path string) error {
	if _gcbfa := _decbe.CT_PresentationProperties.ValidateWithPath(path); _gcbfa != nil {
		return _gcbfa
	}
	return nil
}
func (_dgfgc *ST_TLTimeNodeMasterRelation) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dgfgc = 0
	case "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k":
		*_dgfgc = 1
	case "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k":
		*_dgfgc = 2
	case "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k":
		*_dgfgc = 3
	}
	return nil
}

type CT_TLIterateData struct {

	// Iterate Type
	TypeAttr ST_IterateType

	// Backwards
	BackwardsAttr *bool

	// Time Absolute
	TmAbs *CT_TLIterateIntervalTime

	// Time Percentage
	TmPct *CT_TLIterateIntervalPercentage
}

func (_cbggd *CT_TLIterateData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _geaee := range start.Attr {
		if _geaee.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cbggd.TypeAttr.UnmarshalXMLAttr(_geaee)
			continue
		}
		if _geaee.Name.Local == "\u0062a\u0063\u006b\u0077\u0061\u0072\u0064s" {
			_cafb, _ffegb := _dc.ParseBool(_geaee.Value)
			if _ffegb != nil {
				return _ffegb
			}
			_cbggd.BackwardsAttr = &_cafb
			continue
		}
	}
_ffbgf:
	for {
		_abffc, _ecggba := d.Token()
		if _ecggba != nil {
			return _ecggba
		}
		switch _fffad := _abffc.(type) {
		case _d.StartElement:
			switch _fffad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0041b\u0073"}:
				_cbggd.TmAbs = NewCT_TLIterateIntervalTime()
				if _efgcf := d.DecodeElement(_cbggd.TmAbs, &_fffad); _efgcf != nil {
					return _efgcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0050c\u0074"}:
				_cbggd.TmPct = NewCT_TLIterateIntervalPercentage()
				if _fefb := d.DecodeElement(_cbggd.TmPct, &_fffad); _fefb != nil {
					return _fefb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061\u0020\u0025v", _fffad.Name)
				if _fdaba := d.Skip(); _fdaba != nil {
					return _fdaba
				}
			}
		case _d.EndElement:
			break _ffbgf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ViewProperties and its children, prefixing error messages with path
func (_ccbf *CT_ViewProperties) ValidateWithPath(path string) error {
	if _abcgg := _ccbf.LastViewAttr.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0056\u0069\u0065\u0077\u0041\u0074\u0074\u0072"); _abcgg != nil {
		return _abcgg
	}
	if _ccbf.NormalViewPr != nil {
		if _ededb := _ccbf.NormalViewPr.ValidateWithPath(path + "\u002f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072"); _ededb != nil {
			return _ededb
		}
	}
	if _ccbf.SlideViewPr != nil {
		if _aaefa := _ccbf.SlideViewPr.ValidateWithPath(path + "\u002f\u0053\u006ci\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"); _aaefa != nil {
			return _aaefa
		}
	}
	if _ccbf.OutlineViewPr != nil {
		if _fdbb := _ccbf.OutlineViewPr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056i\u0065\u0077\u0050\u0072"); _fdbb != nil {
			return _fdbb
		}
	}
	if _ccbf.NotesTextViewPr != nil {
		if _ddfb := _ccbf.NotesTextViewPr.ValidateWithPath(path + "\u002f\u004eo\u0074\u0065\u0073T\u0065\u0078\u0074\u0056\u0069\u0065\u0077\u0050\u0072"); _ddfb != nil {
			return _ddfb
		}
	}
	if _ccbf.SorterViewPr != nil {
		if _ccedb := _ccbf.SorterViewPr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077\u0050\u0072"); _ccedb != nil {
			return _ccedb
		}
	}
	if _ccbf.NotesViewPr != nil {
		if _fdgbd := _ccbf.NotesViewPr.ValidateWithPath(path + "\u002f\u004e\u006ft\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"); _fdgbd != nil {
			return _fdgbd
		}
	}
	if _ccbf.GridSpacing != nil {
		if _faecc := _ccbf.GridSpacing.ValidateWithPath(path + "\u002f\u0047\u0072i\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"); _faecc != nil {
			return _faecc
		}
	}
	if _ccbf.ExtLst != nil {
		if _dadcb := _ccbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dadcb != nil {
			return _dadcb
		}
	}
	return nil
}
func NewPresentation() *Presentation {
	_dfeff := &Presentation{}
	_dfeff.CT_Presentation = *NewCT_Presentation()
	return _dfeff
}
func (_cbdc ST_TLOleChartBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acddf := _d.Attr{}
	_acddf.Name = name
	switch _cbdc {
	case ST_TLOleChartBuildTypeUnset:
		_acddf.Value = ""
	case ST_TLOleChartBuildTypeAllAtOnce:
		_acddf.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case ST_TLOleChartBuildTypeSeries:
		_acddf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLOleChartBuildTypeCategory:
		_acddf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLOleChartBuildTypeSeriesEl:
		_acddf.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_TLOleChartBuildTypeCategoryEl:
		_acddf.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _acddf, nil
}

// ValidateWithPath validates the CT_StringTag and its children, prefixing error messages with path
func (_fgabf *CT_StringTag) ValidateWithPath(path string) error { return nil }
func NewCT_SlideSorterViewProperties() *CT_SlideSorterViewProperties {
	_ggbfb := &CT_SlideSorterViewProperties{}
	_ggbfb.CViewPr = NewCT_CommonViewProperties()
	return _ggbfb
}
func (_eadcc ST_PrintWhat) String() string {
	switch _eadcc {
	case 0:
		return ""
	case 1:
		return "\u0073\u006c\u0069\u0064\u0065\u0073"
	case 2:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731"
	case 3:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732"
	case 4:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733"
	case 5:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734"
	case 6:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736"
	case 7:
		return "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739"
	case 8:
		return "\u006e\u006f\u0074e\u0073"
	case 9:
		return "\u006fu\u0074\u006c\u0069\u006e\u0065"
	}
	return ""
}
func (_fgbgb *CT_TLSubShapeId) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _fgbgb.SpidAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fggee ST_TLAnimateBehaviorValueType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cbcca := _d.Attr{}
	_cbcca.Name = name
	switch _fggee {
	case ST_TLAnimateBehaviorValueTypeUnset:
		_cbcca.Value = ""
	case ST_TLAnimateBehaviorValueTypeStr:
		_cbcca.Value = "\u0073\u0074\u0072"
	case ST_TLAnimateBehaviorValueTypeNum:
		_cbcca.Value = "\u006e\u0075\u006d"
	case ST_TLAnimateBehaviorValueTypeClr:
		_cbcca.Value = "\u0063\u006c\u0072"
	}
	return _cbcca, nil
}
func (_faedb *CT_Slide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _faedb.ShowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_faedb.ShowAttr))})
	}
	if _faedb.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_faedb.ShowMasterSpAttr))})
	}
	if _faedb.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_faedb.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_gfag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_faedb.CSld, _gfag)
	if _faedb.ClrMapOvr != nil {
		_bebbe := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_faedb.ClrMapOvr, _bebbe)
	}
	if _faedb.Transition != nil {
		_dada := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_faedb.Transition, _dada)
	}
	if _faedb.Timing != nil {
		_gbca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_faedb.Timing, _gbca)
	}
	if _faedb.ExtLst != nil {
		_fcee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faedb.ExtLst, _fcee)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_efaee ST_TLTriggerRuntimeNode) String() string {
	switch _efaee {
	case 0:
		return ""
	case 1:
		return "\u0066\u0069\u0072s\u0074"
	case 2:
		return "\u006c\u0061\u0073\u0074"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

type CT_CommonSlideData struct {

	// Name
	NameAttr *string

	// Slide Background
	Bg *CT_Background

	// Shape Tree
	SpTree *CT_GroupShape

	// Customer Data List
	CustDataLst *CT_CustomerDataList

	// List of controls
	Controls *CT_ControlList
	ExtLst   *CT_ExtensionList
}

func (_daageb ST_TLAnimateMotionPathEditMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_daageb.String(), start)
}
func (_agccg ST_TLTimeNodeSyncType) ValidateWithPath(path string) error {
	switch _agccg {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agccg))
	}
	return nil
}

// Validate validates the CT_NotesSlide and its children
func (_faaff *CT_NotesSlide) Validate() error {
	return _faaff.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065")
}

type CT_WebProperties struct {

	// Show animation in HTML output
	ShowAnimationAttr *bool

	// Resize graphics in HTML output
	ResizeGraphicsAttr *bool

	// Allow PNG in HTML output
	AllowPngAttr *bool

	// Rely on VML for HTML output
	RelyOnVmlAttr *bool

	// Organize HTML output in folders
	OrganizeInFoldersAttr *bool

	// Use long file names in HTML output
	UseLongFilenamesAttr *bool

	// Image size for HTML output
	ImgSzAttr ST_WebScreenSize

	// Encoding for HTML output
	EncodingAttr *string

	// Slide Navigation Colors for HTML output
	ClrAttr ST_WebColorType
	ExtLst  *CT_ExtensionList
}

func (_fcfcb *ST_PrintColorMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fadcd, _cedd := d.Token()
	if _cedd != nil {
		return _cedd
	}
	if _cgacb, _gddbd := _fadcd.(_d.EndElement); _gddbd && _cgacb.Name == start.Name {
		*_fcfcb = 1
		return nil
	}
	if _dgfdbb, _acada := _fadcd.(_d.CharData); !_acada {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fadcd)
	} else {
		switch string(_dgfdbb) {
		case "":
			*_fcfcb = 0
		case "\u0062\u0077":
			*_fcfcb = 1
		case "\u0067\u0072\u0061\u0079":
			*_fcfcb = 2
		case "\u0063\u006c\u0072":
			*_fcfcb = 3
		}
	}
	_fadcd, _cedd = d.Token()
	if _cedd != nil {
		return _cedd
	}
	if _eegbdc, _egffa := _fadcd.(_d.EndElement); _egffa && _eegbdc.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fadcd)
}
func (_bbcde *CT_TLByRgbColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eadf := range start.Attr {
		if _eadf.Name.Local == "\u0072" {
			_ggege, _dbfd := ParseUnionST_FixedPercentage(_eadf.Value)
			if _dbfd != nil {
				return _dbfd
			}
			_bbcde.RAttr = _ggege
			continue
		}
		if _eadf.Name.Local == "\u0067" {
			_bcaga, _bagccd := ParseUnionST_FixedPercentage(_eadf.Value)
			if _bagccd != nil {
				return _bagccd
			}
			_bbcde.GAttr = _bcaga
			continue
		}
		if _eadf.Name.Local == "\u0062" {
			_ccdeg, _cbec := ParseUnionST_FixedPercentage(_eadf.Value)
			if _cbec != nil {
				return _cbec
			}
			_bbcde.BAttr = _ccdeg
			continue
		}
	}
	for {
		_afgfd, _eccg := d.Token()
		if _eccg != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LBy\u0052gb\u0043\u006f\u006c\u006f\u0072\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _eccg)
		}
		if _ecac, _bbdfc := _afgfd.(_d.EndElement); _bbdfc && _ecac.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Extension and its children
func (_fgce *CT_Extension) Validate() error {
	return _fgce.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}
func NewCT_OptionalBlackTransition() *CT_OptionalBlackTransition {
	_afcb := &CT_OptionalBlackTransition{}
	return _afcb
}

// Validate validates the CT_TLTemplate and its children
func (_geddb *CT_TLTemplate) Validate() error {
	return _geddb.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065")
}

// ValidateWithPath validates the CT_GroupShape and its children, prefixing error messages with path
func (_gcde *CT_GroupShape) ValidateWithPath(path string) error {
	if _eefc := _gcde.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _eefc != nil {
		return _eefc
	}
	if _eaae := _gcde.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _eaae != nil {
		return _eaae
	}
	for _gggaf, _afca := range _gcde.Choice {
		if _bega := _afca.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _gggaf)); _bega != nil {
			return _bega
		}
	}
	if _gcde.ExtLst != nil {
		if _cfbb := _gcde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cfbb != nil {
			return _cfbb
		}
	}
	return nil
}
func (_fcgbc *ST_TLCommandType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fcgbc = 0
	case "\u0065\u0076\u0074":
		*_fcgbc = 1
	case "\u0063\u0061\u006c\u006c":
		*_fcgbc = 2
	case "\u0076\u0065\u0072\u0062":
		*_fcgbc = 3
	}
	return nil
}

// ValidateWithPath validates the TagLst and its children, prefixing error messages with path
func (_bdafb *TagLst) ValidateWithPath(path string) error {
	if _acba := _bdafb.CT_TagList.ValidateWithPath(path); _acba != nil {
		return _acba
	}
	return nil
}

// ValidateWithPath validates the CT_ShowInfoKiosk and its children, prefixing error messages with path
func (_cdfde *CT_ShowInfoKiosk) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_IndexRange and its children, prefixing error messages with path
func (_ecfg *CT_IndexRange) ValidateWithPath(path string) error { return nil }

type ST_TLTimeNodeMasterRelation byte

func (_caf *CT_CommonSlideData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_caf.SpTree = NewCT_GroupShape()
	for _, _dbg := range start.Attr {
		if _dbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agcc, _dfcb := _dbg.Value, error(nil)
			if _dfcb != nil {
				return _dfcb
			}
			_caf.NameAttr = &_agcc
			continue
		}
	}
_efba:
	for {
		_gea, _dafb := d.Token()
		if _dafb != nil {
			return _dafb
		}
		switch _gfbb := _gea.(type) {
		case _d.StartElement:
			switch _gfbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_caf.Bg = NewCT_Background()
				if _gdf := d.DecodeElement(_caf.Bg, &_gfbb); _gdf != nil {
					return _gdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0054\u0072\u0065\u0065"}:
				if _cbccg := d.DecodeElement(_caf.SpTree, &_gfbb); _cbccg != nil {
					return _cbccg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}:
				_caf.CustDataLst = NewCT_CustomerDataList()
				if _fabd := d.DecodeElement(_caf.CustDataLst, &_gfbb); _fabd != nil {
					return _fabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_caf.Controls = NewCT_ControlList()
				if _ccaf := d.DecodeElement(_caf.Controls, &_gfbb); _ccaf != nil {
					return _ccaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_caf.ExtLst = NewCT_ExtensionList()
				if _cba := d.DecodeElement(_caf.ExtLst, &_gfbb); _cba != nil {
					return _cba
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u006f\u006eS\u006c\u0069\u0064\u0065\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _gfbb.Name)
				if _gee := d.Skip(); _gee != nil {
					return _gee
				}
			}
		case _d.EndElement:
			break _efba
		case _d.CharData:
		}
	}
	return nil
}
func ParseStdlibTime(s string) (_g.Time, error) { return _ad.ParseStdlibTime(s) }
func (_fbcc *SldMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "p\u003a\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072"
	return _fbcc.CT_SlideMaster.MarshalXML(e, start)
}

type ST_TransitionCornerDirectionType byte

func (_dfbd *CT_TLBehaviorAttributeNameList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_caabf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065"}}
	for _, _agdgf := range _dfbd.AttrName {
		e.EncodeElement(_agdgf, _caabf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gebc ST_TLBehaviorOverrideType) ValidateWithPath(path string) error {
	switch _gebc {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gebc))
	}
	return nil
}
func (_gcaaf *HandoutMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0068a\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072"
	return _gcaaf.CT_HandoutMaster.MarshalXML(e, start)
}

// Validate validates the CmAuthorLst and its children
func (_geca *CmAuthorLst) Validate() error {
	return _geca.ValidateWithPath("C\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074")
}
func NewCT_TLOleBuildChart() *CT_TLOleBuildChart    { _bbccf := &CT_TLOleBuildChart{}; return _bbccf }
func (_aeabfa ST_TLTimeIndefinite) Validate() error { return _aeabfa.ValidateWithPath("") }

// ValidateWithPath validates the CT_EightDirectionTransition and its children, prefixing error messages with path
func (_dbea *CT_EightDirectionTransition) ValidateWithPath(path string) error {
	if _dbea.DirAttr != nil {
		if _edead := _dbea.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _edead != nil {
			return _edead
		}
	}
	return nil
}
func (_ddea *CT_TLSetBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_abfac := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ddea.CBhvr, _abfac)
	if _ddea.To != nil {
		_gafcfac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_ddea.To, _gafcfac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLByAnimateColorTransform and its children, prefixing error messages with path
func (_gacga *CT_TLByAnimateColorTransform) ValidateWithPath(path string) error {
	if _gacga.Rgb != nil {
		if _cada := _gacga.Rgb.ValidateWithPath(path + "\u002f\u0052\u0067\u0062"); _cada != nil {
			return _cada
		}
	}
	if _gacga.Hsl != nil {
		if _beca := _gacga.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _beca != nil {
			return _beca
		}
	}
	return nil
}
func (_cbad *CT_HtmlPublishProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbad.ShowSpeakerNotesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cbad.ShowSpeakerNotesAttr))})
	}
	if _cbad.TargetAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0061\u0072\u0067\u0065\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_cbad.TargetAttr)})
	}
	if _cbad.TitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_cbad.TitleAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _cbad.IdAttr)})
	e.EncodeToken(start)
	if _cbad.SldAll != nil {
		_cfaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_cbad.SldAll, _cfaa)
	}
	if _cbad.SldRg != nil {
		_cdea := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_cbad.SldRg, _cdea)
	}
	if _cbad.CustShow != nil {
		_cbcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_cbad.CustShow, _cbcd)
	}
	if _cbad.ExtLst != nil {
		_ccb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbad.ExtLst, _ccb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLMediaNodeVideo() *CT_TLMediaNodeVideo {
	_ecbg := &CT_TLMediaNodeVideo{}
	_ecbg.CMediaNode = NewCT_TLCommonMediaNodeData()
	return _ecbg
}

const (
	ST_TLChartSubelementTypeUnset        ST_TLChartSubelementType = 0
	ST_TLChartSubelementTypeGridLegend   ST_TLChartSubelementType = 1
	ST_TLChartSubelementTypeSeries       ST_TLChartSubelementType = 2
	ST_TLChartSubelementTypeCategory     ST_TLChartSubelementType = 3
	ST_TLChartSubelementTypePtInSeries   ST_TLChartSubelementType = 4
	ST_TLChartSubelementTypePtInCategory ST_TLChartSubelementType = 5
)

type CT_ModifyVerifier struct {

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinValueAttr *uint32

	// Cryptographic Provider Type
	CryptProviderTypeAttr _c.ST_CryptProv

	// Cryptographic Algorithm Class
	CryptAlgorithmClassAttr _c.ST_AlgClass

	// Cryptographic Algorithm Type
	CryptAlgorithmTypeAttr _c.ST_AlgType

	// Cryptographic Hashing Algorithm
	CryptAlgorithmSidAttr *uint32

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Salt for Password Verifier
	SaltDataAttr *string

	// Password Hash
	HashDataAttr *string

	// Cryptographic Provider
	CryptProviderAttr *string

	// Cryptographic Algorithm Extensibility
	AlgIdExtAttr *uint32

	// Algorithm Extensibility Source
	AlgIdExtSourceAttr *string

	// Cryptographic Provider Type Extensibility
	CryptProviderTypeExtAttr *uint32

	// Provider Type Extensibility Source
	CryptProviderTypeExtSourceAttr *string
}

func (_ggdcg ST_TLBehaviorAccumulateType) Validate() error { return _ggdcg.ValidateWithPath("") }
func (_bbedf ST_TLAnimateMotionPathEditMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdafc := _d.Attr{}
	_bdafc.Name = name
	switch _bbedf {
	case ST_TLAnimateMotionPathEditModeUnset:
		_bdafc.Value = ""
	case ST_TLAnimateMotionPathEditModeRelative:
		_bdafc.Value = "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"
	case ST_TLAnimateMotionPathEditModeFixed:
		_bdafc.Value = "\u0066\u0069\u0078e\u0064"
	}
	return _bdafc, nil
}
func (_ecbad *CT_ViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecbad.LastViewAttr != ST_ViewTypeUnset {
		_gdfa, _bggec := _ecbad.LastViewAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0061\u0073\u0074\u0056\u0069\u0065\u0077"})
		if _bggec != nil {
			return _bggec
		}
		start.Attr = append(start.Attr, _gdfa)
	}
	if _ecbad.ShowCommentsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ecbad.ShowCommentsAttr))})
	}
	e.EncodeToken(start)
	if _ecbad.NormalViewPr != nil {
		_fagdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0072\u006d\u0061\u006c\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.NormalViewPr, _fagdc)
	}
	if _ecbad.SlideViewPr != nil {
		_ecbff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0069\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.SlideViewPr, _ecbff)
	}
	if _ecbad.OutlineViewPr != nil {
		_cfgfe := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006fu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.OutlineViewPr, _cfgfe)
	}
	if _ecbad.NotesTextViewPr != nil {
		_adfga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0054\u0065\u0078\u0074\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.NotesTextViewPr, _adfga)
	}
	if _ecbad.SorterViewPr != nil {
		_ccefa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006f\u0072\u0074\u0065\u0072\u0056i\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.SorterViewPr, _ccefa)
	}
	if _ecbad.NotesViewPr != nil {
		_cacef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0074\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072"}}
		e.EncodeElement(_ecbad.NotesViewPr, _cacef)
	}
	if _ecbad.GridSpacing != nil {
		_edceb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u0063\u0069\u006e\u0067"}}
		e.EncodeElement(_ecbad.GridSpacing, _edceb)
	}
	if _ecbad.ExtLst != nil {
		_dgfc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecbad.ExtLst, _dgfc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cffbd ST_TLAnimateColorDirection) ValidateWithPath(path string) error {
	switch _cffbd {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cffbd))
	}
	return nil
}
func (_fcagde ST_TLPreviousActionType) String() string {
	switch _fcagde {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073k\u0069\u0070\u0054\u0069\u006d\u0065d"
	}
	return ""
}
func (_ecbe *CT_SlideSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecbe.CxAttr = 914400
	_ecbe.CyAttr = 914400
	for _, _eabe := range start.Attr {
		if _eabe.Name.Local == "\u0063\u0078" {
			_gfeaf, _efgg := _dc.ParseInt(_eabe.Value, 10, 32)
			if _efgg != nil {
				return _efgg
			}
			_ecbe.CxAttr = int32(_gfeaf)
			continue
		}
		if _eabe.Name.Local == "\u0063\u0079" {
			_ccbe, _gagdb := _dc.ParseInt(_eabe.Value, 10, 32)
			if _gagdb != nil {
				return _gagdb
			}
			_ecbe.CyAttr = int32(_ccbe)
			continue
		}
		if _eabe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecbe.TypeAttr.UnmarshalXMLAttr(_eabe)
			continue
		}
	}
	for {
		_egffe, _dgdbb := d.Token()
		if _dgdbb != nil {
			return _gc.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006ci\u0064\u0065\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _dgdbb)
		}
		if _fbbb, _ecdae := _egffe.(_d.EndElement); _ecdae && _fbbb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecdac *ST_TLTimeNodeSyncType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecdac = 0
	case "\u0063a\u006e\u0053\u006c\u0069\u0070":
		*_ecdac = 1
	case "\u006c\u006f\u0063\u006b\u0065\u0064":
		*_ecdac = 2
	}
	return nil
}
func (_dfcfb ST_TLAnimateColorSpace) Validate() error { return _dfcfb.ValidateWithPath("") }
func (_accb ST_TLBehaviorAccumulateType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bfbd := _d.Attr{}
	_bfbd.Name = name
	switch _accb {
	case ST_TLBehaviorAccumulateTypeUnset:
		_bfbd.Value = ""
	case ST_TLBehaviorAccumulateTypeNone:
		_bfbd.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLBehaviorAccumulateTypeAlways:
		_bfbd.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _bfbd, nil
}
func (_gddbg ST_TLOleChartBuildType) Validate() error { return _gddbg.ValidateWithPath("") }
func (_eecab *CT_WebProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aadfc := range start.Attr {
		if _aadfc.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e" {
			_becb, _cacbe := _dc.ParseBool(_aadfc.Value)
			if _cacbe != nil {
				return _cacbe
			}
			_eecab.ShowAnimationAttr = &_becb
			continue
		}
		if _aadfc.Name.Local == "\u0072\u0065\u0073\u0069\u007a\u0065\u0047\u0072\u0061p\u0068\u0069\u0063\u0073" {
			_bbadd, _afbbe := _dc.ParseBool(_aadfc.Value)
			if _afbbe != nil {
				return _afbbe
			}
			_eecab.ResizeGraphicsAttr = &_bbadd
			continue
		}
		if _aadfc.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_addecd, _ccbfg := _dc.ParseBool(_aadfc.Value)
			if _ccbfg != nil {
				return _ccbfg
			}
			_eecab.AllowPngAttr = &_addecd
			continue
		}
		if _aadfc.Name.Local == "\u0072e\u006c\u0079\u004f\u006e\u0056\u006dl" {
			_ggdf, _aceab := _dc.ParseBool(_aadfc.Value)
			if _aceab != nil {
				return _aceab
			}
			_eecab.RelyOnVmlAttr = &_ggdf
			continue
		}
		if _aadfc.Name.Local == "\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0065\u0049\u006e\u0046\u006fl\u0064\u0065\u0072\u0073" {
			_ccgc, _efgebe := _dc.ParseBool(_aadfc.Value)
			if _efgebe != nil {
				return _efgebe
			}
			_eecab.OrganizeInFoldersAttr = &_ccgc
			continue
		}
		if _aadfc.Name.Local == "\u0075\u0073e\u004c\u006f\u006eg\u0046\u0069\u006c\u0065\u006e\u0061\u006d\u0065\u0073" {
			_dafc, _ggbfba := _dc.ParseBool(_aadfc.Value)
			if _ggbfba != nil {
				return _ggbfba
			}
			_eecab.UseLongFilenamesAttr = &_dafc
			continue
		}
		if _aadfc.Name.Local == "\u0069\u006d\u0067S\u007a" {
			_eecab.ImgSzAttr.UnmarshalXMLAttr(_aadfc)
			continue
		}
		if _aadfc.Name.Local == "\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067" {
			_gcabg, _gfda := _aadfc.Value, error(nil)
			if _gfda != nil {
				return _gfda
			}
			_eecab.EncodingAttr = &_gcabg
			continue
		}
		if _aadfc.Name.Local == "\u0063\u006c\u0072" {
			_eecab.ClrAttr.UnmarshalXMLAttr(_aadfc)
			continue
		}
	}
_cdeg:
	for {
		_cgdcdf, _dcfe := d.Token()
		if _dcfe != nil {
			return _dcfe
		}
		switch _eebbe := _cgdcdf.(type) {
		case _d.StartElement:
			switch _eebbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eecab.ExtLst = NewCT_ExtensionList()
				if _fdcc := d.DecodeElement(_eecab.ExtLst, &_eebbe); _fdcc != nil {
					return _fdcc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025v", _eebbe.Name)
				if _feaa := d.Skip(); _feaa != nil {
					return _feaa
				}
			}
		case _d.EndElement:
			break _cdeg
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_edggb *EG_ExtensionList) ValidateWithPath(path string) error {
	for _dbded, _aggbd := range _edggb.Ext {
		if _ffbgfg := _aggbd.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _dbded)); _ffbgfg != nil {
			return _ffbgfg
		}
	}
	return nil
}
func (_eafdd *CT_TLCommonTimeNodeData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eafdd.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.IdAttr)})
	}
	if _eafdd.PresetIDAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0049\u0044"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.PresetIDAttr)})
	}
	if _eafdd.PresetClassAttr != ST_TLTimeNodePresetClassTypeUnset {
		_ccdfg, _ffbff := _eafdd.PresetClassAttr.MarshalXMLAttr(_d.Name{Local: "p\u0072\u0065\u0073\u0065\u0074\u0043\u006c\u0061\u0073\u0073"})
		if _ffbff != nil {
			return _ffbff
		}
		start.Attr = append(start.Attr, _ccdfg)
	}
	if _eafdd.PresetSubtypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0074\u0053\u0075\u0062\u0074\u0079\u0070\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.PresetSubtypeAttr)})
	}
	if _eafdd.DurAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0075\u0072"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.DurAttr)})
	}
	if _eafdd.RepeatCountAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "r\u0065\u0070\u0065\u0061\u0074\u0043\u006f\u0075\u006e\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.RepeatCountAttr)})
	}
	if _eafdd.RepeatDurAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u0070\u0065\u0061\u0074\u0044\u0075r"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.RepeatDurAttr)})
	}
	if _eafdd.SpdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.SpdAttr)})
	}
	if _eafdd.AccelAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0063\u0063e\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.AccelAttr)})
	}
	if _eafdd.DecelAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0063e\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.DecelAttr)})
	}
	if _eafdd.AutoRevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061u\u0074\u006f\u0052\u0065\u0076"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_eafdd.AutoRevAttr))})
	}
	if _eafdd.RestartAttr != ST_TLTimeNodeRestartTypeUnset {
		_aedgg, _fbbeb := _eafdd.RestartAttr.MarshalXMLAttr(_d.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"})
		if _fbbeb != nil {
			return _fbbeb
		}
		start.Attr = append(start.Attr, _aedgg)
	}
	if _eafdd.FillAttr != ST_TLTimeNodeFillTypeUnset {
		_caagf, _fbcdg := _eafdd.FillAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _fbcdg != nil {
			return _fbcdg
		}
		start.Attr = append(start.Attr, _caagf)
	}
	if _eafdd.SyncBehaviorAttr != ST_TLTimeNodeSyncTypeUnset {
		_caef, _bada := _eafdd.SyncBehaviorAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0079\u006ec\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072"})
		if _bada != nil {
			return _bada
		}
		start.Attr = append(start.Attr, _caef)
	}
	if _eafdd.TmFilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.TmFilterAttr)})
	}
	if _eafdd.EvtFilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065v\u0074\u0046\u0069\u006c\u0074\u0065r"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.EvtFilterAttr)})
	}
	if _eafdd.DisplayAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_eafdd.DisplayAttr))})
	}
	if _eafdd.MasterRelAttr != ST_TLTimeNodeMasterRelationUnset {
		_dggec, _aebeg := _eafdd.MasterRelAttr.MarshalXMLAttr(_d.Name{Local: "\u006da\u0073\u0074\u0065\u0072\u0052\u0065l"})
		if _aebeg != nil {
			return _aebeg
		}
		start.Attr = append(start.Attr, _dggec)
	}
	if _eafdd.BldLvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064\u004c\u0076\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.BldLvlAttr)})
	}
	if _eafdd.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_eafdd.GrpIdAttr)})
	}
	if _eafdd.AfterEffectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_eafdd.AfterEffectAttr))})
	}
	if _eafdd.NodeTypeAttr != ST_TLTimeNodeTypeUnset {
		_eccbd, _ffdcg := _eafdd.NodeTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u006e\u006f\u0064\u0065\u0054\u0079\u0070\u0065"})
		if _ffdcg != nil {
			return _ffdcg
		}
		start.Attr = append(start.Attr, _eccbd)
	}
	if _eafdd.NodePhAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0064\u0065\u0050\u0068"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_eafdd.NodePhAttr))})
	}
	e.EncodeToken(start)
	if _eafdd.StCondLst != nil {
		_acaba := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_eafdd.StCondLst, _acaba)
	}
	if _eafdd.EndCondLst != nil {
		_fbbag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065n\u0064\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_eafdd.EndCondLst, _fbbag)
	}
	if _eafdd.EndSync != nil {
		_bafee := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0065\u006e\u0064\u0053\u0079\u006ec"}}
		e.EncodeElement(_eafdd.EndSync, _bafee)
	}
	if _eafdd.Iterate != nil {
		_fccb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0069\u0074\u0065\u0072\u0061\u0074e"}}
		e.EncodeElement(_eafdd.Iterate, _fccb)
	}
	if _eafdd.ChildTnLst != nil {
		_aeafd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063h\u0069\u006c\u0064\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_eafdd.ChildTnLst, _aeafd)
	}
	if _eafdd.SubTnLst != nil {
		_cbac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0075\u0062\u0054\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_eafdd.SubTnLst, _cbac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cccg ST_TLDiagramBuildType) Validate() error { return _cccg.ValidateWithPath("") }

// Validate validates the CT_TLTimeNodeExclusive and its children
func (_fgead *CT_TLTimeNodeExclusive) Validate() error {
	return _fgead.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065")
}
func (_afgcef ST_ViewType) ValidateWithPath(path string) error {
	switch _afgcef {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afgcef))
	}
	return nil
}
func (_gfce *CT_GraphicalObjectFrameNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_afaf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gfce.CNvPr, _afaf)
	_ebea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_gfce.CNvGraphicFramePr, _ebea)
	_cgag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_gfce.NvPr, _cgag)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbeg *EG_TopLevelSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_adbfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_dbeg.ClrMap, _adbfb)
	return nil
}

// ValidateWithPath validates the SldSyncPr and its children, prefixing error messages with path
func (_bcba *SldSyncPr) ValidateWithPath(path string) error {
	if _cbceee := _bcba.CT_SlideSyncProperties.ValidateWithPath(path); _cbceee != nil {
		return _cbceee
	}
	return nil
}

const (
	ST_PrintColorModeUnset ST_PrintColorMode = 0
	ST_PrintColorModeBw    ST_PrintColorMode = 1
	ST_PrintColorModeGray  ST_PrintColorMode = 2
	ST_PrintColorModeClr   ST_PrintColorMode = 3
)

func NewCT_Connector() *CT_Connector {
	_adcf := &CT_Connector{}
	_adcf.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_adcf.SpPr = _ad.NewCT_ShapeProperties()
	return _adcf
}

// ValidateWithPath validates the CT_NotesMaster and its children, prefixing error messages with path
func (_gdac *CT_NotesMaster) ValidateWithPath(path string) error {
	if _eacf := _gdac.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _eacf != nil {
		return _eacf
	}
	if _adcbb := _gdac.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _adcbb != nil {
		return _adcbb
	}
	if _gdac.Hf != nil {
		if _eaddd := _gdac.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _eaddd != nil {
			return _eaddd
		}
	}
	if _gdac.NotesStyle != nil {
		if _ffcg := _gdac.NotesStyle.ValidateWithPath(path + "/\u004e\u006f\u0074\u0065\u0073\u0053\u0074\u0079\u006c\u0065"); _ffcg != nil {
			return _ffcg
		}
	}
	if _gdac.ExtLst != nil {
		if _ggddg := _gdac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggddg != nil {
			return _ggddg
		}
	}
	return nil
}
func (_deaef *CmAuthorLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074"
	return _deaef.CT_CommentAuthorList.MarshalXML(e, start)
}

// Validate validates the CT_GroupShapeNonVisual and its children
func (_egb *CT_GroupShapeNonVisual) Validate() error {
	return _egb.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c")
}
func (_agde ST_SlideSizeType) String() string {
	switch _agde {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case 2:
		return "\u006c\u0065\u0074\u0074\u0065\u0072"
	case 3:
		return "\u0041\u0034"
	case 4:
		return "\u0033\u0035\u006d\u006d"
	case 5:
		return "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case 6:
		return "\u0062\u0061\u006e\u006e\u0065\u0072"
	case 7:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	case 8:
		return "\u006c\u0065\u0064\u0067\u0065\u0072"
	case 9:
		return "\u0041\u0033"
	case 10:
		return "\u0042\u0034\u0049S\u004f"
	case 11:
		return "\u0042\u0035\u0049S\u004f"
	case 12:
		return "\u0042\u0034\u004aI\u0053"
	case 13:
		return "\u0042\u0035\u004aI\u0053"
	case 14:
		return "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case 15:
		return "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case 16:
		return "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return ""
}

type CT_NotesMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}
type CT_Shape struct {

	// Use Background Fill
	UseBgFillAttr *bool

	// Non-Visual Properties for a Shape
	NvSpPr *CT_ShapeNonVisual
	SpPr   *_ad.CT_ShapeProperties

	// Shape Style
	Style *_ad.CT_ShapeStyle

	// Shape Text Body
	TxBody *_ad.CT_TextBody
	ExtLst *CT_ExtensionListModify
}

func ParseUnionST_Coordinate32(s string) (_ad.ST_Coordinate32, error) {
	return _ad.ParseUnionST_Coordinate32(s)
}
func (_effe ST_PlaceholderSize) ValidateWithPath(path string) error {
	switch _effe {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_effe))
	}
	return nil
}
func NewCT_TLAnimVariant() *CT_TLAnimVariant { _bbaag := &CT_TLAnimVariant{}; return _bbaag }

type CT_TLTimeCondition struct {

	// Trigger Event
	EvtAttr ST_TLTriggerEvent

	// Trigger Delay
	DelayAttr *ST_TLTime

	// Target Element Trigger Choice
	TgtEl *CT_TLTimeTargetElement

	// Time Node
	Tn *CT_TLTriggerTimeNodeID

	// Runtime Node Trigger Choice
	Rtn *CT_TLTriggerRuntimeNode
}

func (_dgbfe *EG_TopLevelSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgbfe.ClrMap = _ad.NewCT_ColorMapping()
_fdffe:
	for {
		_caeec, _edcff := d.Token()
		if _edcff != nil {
			return _edcff
		}
		switch _aabee := _caeec.(type) {
		case _d.StartElement:
			switch _aabee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _baeaa := d.DecodeElement(_dgbfe.ClrMap, &_aabee); _baeaa != nil {
					return _baeaa
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u006f\u0070\u004c\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065\u0020\u0025v", _aabee.Name)
				if _fgbfa := d.Skip(); _fgbfa != nil {
					return _fgbfa
				}
			}
		case _d.EndElement:
			break _fdffe
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_HandoutMaster() *CT_HandoutMaster {
	_ebbb := &CT_HandoutMaster{}
	_ebbb.CSld = NewCT_CommonSlideData()
	_ebbb.ClrMap = _ad.NewCT_ColorMapping()
	return _ebbb
}
func NewCT_CommentAuthor() *CT_CommentAuthor { _efec := &CT_CommentAuthor{}; return _efec }
func (_cgfb *ST_ViewType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgdec, _fdaa := d.Token()
	if _fdaa != nil {
		return _fdaa
	}
	if _cafgc, _gbcbe := _fgdec.(_d.EndElement); _gbcbe && _cafgc.Name == start.Name {
		*_cgfb = 1
		return nil
	}
	if _gffg, _geaeac := _fgdec.(_d.CharData); !_geaeac {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgdec)
	} else {
		switch string(_gffg) {
		case "":
			*_cgfb = 0
		case "\u0073l\u0064\u0056\u0069\u0065\u0077":
			*_cgfb = 1
		case "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgfb = 2
		case "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w":
			*_cgfb = 3
		case "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077":
			*_cgfb = 4
		case "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgfb = 5
		case "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077":
			*_cgfb = 6
		case "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077":
			*_cgfb = 7
		case "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077":
			*_cgfb = 8
		}
	}
	_fgdec, _fdaa = d.Token()
	if _fdaa != nil {
		return _fdaa
	}
	if _aagfd, _gbfgd := _fgdec.(_d.EndElement); _gbfgd && _aagfd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgdec)
}
func (_bfdgg ST_TransitionSideDirectionType) Validate() error { return _bfdgg.ValidateWithPath("") }

type CT_TLAnimateColorBehavior struct {

	// Color Space
	ClrSpcAttr ST_TLAnimateColorSpace

	// Direction
	DirAttr ST_TLAnimateColorDirection
	CBhvr   *CT_TLCommonBehaviorData

	// By
	By *CT_TLByAnimateColorTransform

	// From
	From *_ad.CT_Color

	// To
	To *_ad.CT_Color
}

func (_eccb *CT_InOutTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eccb.DirAttr != ST_TransitionInOutDirectionTypeUnset {
		_ffff, _befe := _eccb.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _befe != nil {
			return _befe
		}
		start.Attr = append(start.Attr, _ffff)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adcec *CT_TLTimeCondition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _adcec.EvtAttr != ST_TLTriggerEventUnset {
		_dfege, _dfgfaf := _adcec.EvtAttr.MarshalXMLAttr(_d.Name{Local: "\u0065\u0076\u0074"})
		if _dfgfaf != nil {
			return _dfgfaf
		}
		start.Attr = append(start.Attr, _dfege)
	}
	if _adcec.DelayAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u006ca\u0079"}, Value: _gc.Sprintf("\u0025\u0076", *_adcec.DelayAttr)})
	}
	e.EncodeToken(start)
	if _adcec.TgtEl != nil {
		_accg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
		e.EncodeElement(_adcec.TgtEl, _accg)
	}
	if _adcec.Tn != nil {
		_eeaff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006e"}}
		e.EncodeElement(_adcec.Tn, _eeaff)
	}
	if _adcec.Rtn != nil {
		_deece := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072t\u006e"}}
		e.EncodeElement(_adcec.Rtn, _deece)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_edbed *ST_TLNextActionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_edbed = 0
	case "\u006e\u006f\u006e\u0065":
		*_edbed = 1
	case "\u0073\u0065\u0065\u006b":
		*_edbed = 2
	}
	return nil
}
func (_afabg ST_PlaceholderSize) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gaag := _d.Attr{}
	_gaag.Name = name
	switch _afabg {
	case ST_PlaceholderSizeUnset:
		_gaag.Value = ""
	case ST_PlaceholderSizeFull:
		_gaag.Value = "\u0066\u0075\u006c\u006c"
	case ST_PlaceholderSizeHalf:
		_gaag.Value = "\u0068\u0061\u006c\u0066"
	case ST_PlaceholderSizeQuarter:
		_gaag.Value = "\u0071u\u0061\u0072\u0074\u0065\u0072"
	}
	return _gaag, nil
}

type CmAuthorLst struct{ CT_CommentAuthorList }
type CT_Extension struct {

	// Uniform Resource Identifier
	UriAttr string
	Any     []_de.Any
}

func (_eacbb *CT_TimeNodeList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eacbb.Par != nil {
		_bagbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070a\u0072"}}
		for _, _effb := range _eacbb.Par {
			e.EncodeElement(_effb, _bagbc)
		}
	}
	if _eacbb.Seq != nil {
		_cfbfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073e\u0071"}}
		for _, _babcg := range _eacbb.Seq {
			e.EncodeElement(_babcg, _cfbfb)
		}
	}
	if _eacbb.Excl != nil {
		_begcb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0063\u006c"}}
		for _, _ffefd := range _eacbb.Excl {
			e.EncodeElement(_ffefd, _begcb)
		}
	}
	if _eacbb.Anim != nil {
		_dcdf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u006e\u0069\u006d"}}
		for _, _cddag := range _eacbb.Anim {
			e.EncodeElement(_cddag, _dcdf)
		}
	}
	if _eacbb.AnimClr != nil {
		_agcge := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0043\u006cr"}}
		for _, _gbbd := range _eacbb.AnimClr {
			e.EncodeElement(_gbbd, _agcge)
		}
	}
	if _eacbb.AnimEffect != nil {
		_gcbdff := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}}
		for _, _dcdbf := range _eacbb.AnimEffect {
			e.EncodeElement(_dcdbf, _gcbdff)
		}
	}
	if _eacbb.AnimMotion != nil {
		_cdefe := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061n\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}}
		for _, _ddbge := range _eacbb.AnimMotion {
			e.EncodeElement(_ddbge, _cdefe)
		}
	}
	if _eacbb.AnimRot != nil {
		_accd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u006e\u0069\u006d\u0052\u006ft"}}
		for _, _efadc := range _eacbb.AnimRot {
			e.EncodeElement(_efadc, _accd)
		}
	}
	if _eacbb.AnimScale != nil {
		_gbaab := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0061\u006e\u0069\u006d\u0053\u0063\u0061\u006c\u0065"}}
		for _, _dbbf := range _eacbb.AnimScale {
			e.EncodeElement(_dbbf, _gbaab)
		}
	}
	if _eacbb.Cmd != nil {
		_gffeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063m\u0064"}}
		for _, _agaed := range _eacbb.Cmd {
			e.EncodeElement(_agaed, _gffeb)
		}
	}
	if _eacbb.Set != nil {
		_beged := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073e\u0074"}}
		for _, _fdbcd := range _eacbb.Set {
			e.EncodeElement(_fdbcd, _beged)
		}
	}
	if _eacbb.Audio != nil {
		_fbeagd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f"}}
		for _, _bcfgc := range _eacbb.Audio {
			e.EncodeElement(_bcfgc, _fbeagd)
		}
	}
	if _eacbb.Video != nil {
		_fbefb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0076\u0069\u0064\u0065\u006f"}}
		for _, _eaeab := range _eacbb.Video {
			e.EncodeElement(_eaeab, _fbefb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_OleObject() *CT_OleObject {
	_aebea := &CT_OleObject{}
	_aebea.Choice = NewCT_OleObjectChoice()
	return _aebea
}

// Validate validates the CT_GroupShape and its children
func (_decb *CT_GroupShape) Validate() error {
	return _decb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065")
}

// ValidateWithPath validates the CT_NotesMasterIdList and its children, prefixing error messages with path
func (_fdedd *CT_NotesMasterIdList) ValidateWithPath(path string) error {
	if _fdedd.NotesMasterId != nil {
		if _bdga := _fdedd.NotesMasterId.ValidateWithPath(path + "\u002f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064"); _bdga != nil {
			return _bdga
		}
	}
	return nil
}
func (_gbfgg ST_TLTimeNodePresetClassType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gbfgg.String(), start)
}
func (_gcda *CT_HtmlPublishProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _daag := range start.Attr {
		if _daag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _daag.Name.Local == "\u0069\u0064" || _daag.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _daag.Name.Local == "\u0069\u0064" {
			_egdd, _bef := _daag.Value, error(nil)
			if _bef != nil {
				return _bef
			}
			_gcda.IdAttr = _egdd
			continue
		}
		if _daag.Name.Local == "\u0073\u0068o\u0077\u0053\u0070e\u0061\u006b\u0065\u0072\u004e\u006f\u0074\u0065\u0073" {
			_feg, _gceb := _dc.ParseBool(_daag.Value)
			if _gceb != nil {
				return _gceb
			}
			_gcda.ShowSpeakerNotesAttr = &_feg
			continue
		}
		if _daag.Name.Local == "\u0074\u0061\u0072\u0067\u0065\u0074" {
			_eaf, _edec := _daag.Value, error(nil)
			if _edec != nil {
				return _edec
			}
			_gcda.TargetAttr = &_eaf
			continue
		}
		if _daag.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_fcec, _acgb := _daag.Value, error(nil)
			if _acgb != nil {
				return _acgb
			}
			_gcda.TitleAttr = &_fcec
			continue
		}
	}
_fffa:
	for {
		_ebdd, _cfag := d.Token()
		if _cfag != nil {
			return _cfag
		}
		switch _dbec := _ebdd.(type) {
		case _d.StartElement:
			switch _dbec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u0041\u006c\u006c"}:
				_gcda.SldAll = NewCT_Empty()
				if _abaed := d.DecodeElement(_gcda.SldAll, &_dbec); _abaed != nil {
					return _abaed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064R\u0067"}:
				_gcda.SldRg = NewCT_IndexRange()
				if _ddcb := d.DecodeElement(_gcda.SldRg, &_dbec); _ddcb != nil {
					return _ddcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}:
				_gcda.CustShow = NewCT_CustomShowId()
				if _ccaed := d.DecodeElement(_gcda.CustShow, &_dbec); _ccaed != nil {
					return _ccaed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcda.ExtLst = NewCT_ExtensionList()
				if _bfga := d.DecodeElement(_gcda.ExtLst, &_dbec); _bfga != nil {
					return _bfga
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _dbec.Name)
				if _aafd := d.Skip(); _aafd != nil {
					return _aafd
				}
			}
		case _d.EndElement:
			break _fffa
		case _d.CharData:
		}
	}
	return nil
}
func (_gaged *CT_TLIterateIntervalPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _gaged.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NotesMasterIdListEntry and its children
func (_bbbd *CT_NotesMasterIdListEntry) Validate() error {
	return _bbbd.ValidateWithPath("\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y")
}

type CT_PictureNonVisual struct {
	CNvPr *_ad.CT_NonVisualDrawingProps

	// Non-Visual Picture Drawing Properties
	CNvPicPr *_ad.CT_NonVisualPictureProperties
	NvPr     *CT_ApplicationNonVisualDrawingProps
}

// Validate validates the CT_EmbeddedFontDataId and its children
func (_cae *CT_EmbeddedFontDataId) Validate() error {
	return _cae.ValidateWithPath("C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064")
}
func (_feafb ST_TLBehaviorTransformType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eedf := _d.Attr{}
	_eedf.Name = name
	switch _feafb {
	case ST_TLBehaviorTransformTypeUnset:
		_eedf.Value = ""
	case ST_TLBehaviorTransformTypePt:
		_eedf.Value = "\u0070\u0074"
	case ST_TLBehaviorTransformTypeImg:
		_eedf.Value = "\u0069\u006d\u0067"
	}
	return _eedf, nil
}
func (_ggabe *CT_TLCommonBehaviorData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggabe.AdditiveAttr != ST_TLBehaviorAdditiveTypeUnset {
		_edgdg, _aefc := _ggabe.AdditiveAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u0064\u0064\u0069\u0074\u0069\u0076\u0065"})
		if _aefc != nil {
			return _aefc
		}
		start.Attr = append(start.Attr, _edgdg)
	}
	if _ggabe.AccumulateAttr != ST_TLBehaviorAccumulateTypeUnset {
		_cgfdb, _bffg := _ggabe.AccumulateAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u0063\u0063\u0075\u006d\u0075\u006c\u0061\u0074\u0065"})
		if _bffg != nil {
			return _bffg
		}
		start.Attr = append(start.Attr, _cgfdb)
	}
	if _ggabe.XfrmTypeAttr != ST_TLBehaviorTransformTypeUnset {
		_fgggd, _edbe := _ggabe.XfrmTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0078\u0066\u0072\u006d\u0054\u0079\u0070\u0065"})
		if _edbe != nil {
			return _edbe
		}
		start.Attr = append(start.Attr, _fgggd)
	}
	if _ggabe.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_ggabe.FromAttr)})
	}
	if _ggabe.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _gc.Sprintf("\u0025\u0076", *_ggabe.ToAttr)})
	}
	if _ggabe.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _gc.Sprintf("\u0025\u0076", *_ggabe.ByAttr)})
	}
	if _ggabe.RctxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0063\u0074\u0078"}, Value: _gc.Sprintf("\u0025\u0076", *_ggabe.RctxAttr)})
	}
	if _ggabe.OverrideAttr != ST_TLBehaviorOverrideTypeUnset {
		_dgdec, _gfaag := _ggabe.OverrideAttr.MarshalXMLAttr(_d.Name{Local: "\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"})
		if _gfaag != nil {
			return _gfaag
		}
		start.Attr = append(start.Attr, _dgdec)
	}
	e.EncodeToken(start)
	_ebad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_ggabe.CTn, _ebad)
	_fced := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u0067\u0074\u0045\u006c"}}
	e.EncodeElement(_ggabe.TgtEl, _fced)
	if _ggabe.AttrNameLst != nil {
		_acffa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0061\u0074\u0074\u0072\u004e\u0061\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_ggabe.AttrNameLst, _acffa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_ecdd *CT_Rel) ValidateWithPath(path string) error { return nil }

type CT_Kinsoku struct {

	// Language
	LangAttr *string

	// Invalid Kinsoku Start Characters
	InvalStCharsAttr string

	// Invalid Kinsoku End Characters
	InvalEndCharsAttr string
}

func (_bcae *TagLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcae.CT_TagList = *NewCT_TagList()
_ccbcd:
	for {
		_bgbae, _bdaeb := d.Token()
		if _bdaeb != nil {
			return _bdaeb
		}
		switch _ggdced := _bgbae.(type) {
		case _d.StartElement:
			switch _ggdced.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0061\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0067"}:
				_cbgfc := NewCT_StringTag()
				if _ddaff := d.DecodeElement(_cbgfc, &_ggdced); _ddaff != nil {
					return _ddaff
				}
				_bcae.Tag = append(_bcae.Tag, _cbgfc)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0061\u0067\u004c\u0073\u0074\u0020\u0025\u0076", _ggdced.Name)
				if _gecee := d.Skip(); _gecee != nil {
					return _gecee
				}
			}
		case _d.EndElement:
			break _ccbcd
		case _d.CharData:
		}
	}
	return nil
}

type CT_BuildList struct {

	// Build Paragraph
	BldP []*CT_TLBuildParagraph

	// Build Diagram
	BldDgm []*CT_TLBuildDiagram

	// Build Embedded Chart
	BldOleChart []*CT_TLOleBuildChart

	// Build Graphics
	BldGraphic []*CT_TLGraphicalObjectBuild
}

const (
	ST_WebColorTypeUnset              ST_WebColorType = 0
	ST_WebColorTypeNone               ST_WebColorType = 1
	ST_WebColorTypeBrowser            ST_WebColorType = 2
	ST_WebColorTypePresentationText   ST_WebColorType = 3
	ST_WebColorTypePresentationAccent ST_WebColorType = 4
	ST_WebColorTypeWhiteTextOnBlack   ST_WebColorType = 5
	ST_WebColorTypeBlackTextOnWhite   ST_WebColorType = 6
)

func (_cafg *CT_IndexRange) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074"}, Value: _gc.Sprintf("\u0025\u0076", _cafg.StAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _cafg.EndAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLGraphicalObjectBuild and its children, prefixing error messages with path
func (_fgfac *CT_TLGraphicalObjectBuild) ValidateWithPath(path string) error {
	if _fgfac.BldAsOne != nil {
		if _dafaf := _fgfac.BldAsOne.ValidateWithPath(path + "\u002fB\u006c\u0064\u0041\u0073\u004f\u006ee"); _dafaf != nil {
			return _dafaf
		}
	}
	if _fgfac.BldSub != nil {
		if _fgeg := _fgfac.BldSub.ValidateWithPath(path + "\u002fB\u006c\u0064\u0053\u0075\u0062"); _fgeg != nil {
			return _fgeg
		}
	}
	return nil
}

type ST_TLBehaviorAdditiveType byte

func (_abfb *ST_TLNextActionType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbbaf, _ddfcc := d.Token()
	if _ddfcc != nil {
		return _ddfcc
	}
	if _fgagad, _bfceb := _dbbaf.(_d.EndElement); _bfceb && _fgagad.Name == start.Name {
		*_abfb = 1
		return nil
	}
	if _geee, _efaad := _dbbaf.(_d.CharData); !_efaad {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbbaf)
	} else {
		switch string(_geee) {
		case "":
			*_abfb = 0
		case "\u006e\u006f\u006e\u0065":
			*_abfb = 1
		case "\u0073\u0065\u0065\u006b":
			*_abfb = 2
		}
	}
	_dbbaf, _ddfcc = d.Token()
	if _ddfcc != nil {
		return _ddfcc
	}
	if _bgcaa, _bddc := _dbbaf.(_d.EndElement); _bddc && _bgcaa.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbbaf)
}
func (_ebba ST_TLTriggerRuntimeNode) Validate() error { return _ebba.ValidateWithPath("") }
func (_acgbd ST_TLChartSubelementType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_acgbd.String(), start)
}
func (_cedc *CT_NotesSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cedc.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cedc.ShowMasterSpAttr))})
	}
	if _cedc.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cedc.ShowMasterPhAnimAttr))})
	}
	e.EncodeToken(start)
	_gded := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_cedc.CSld, _gded)
	if _cedc.ClrMapOvr != nil {
		_deea := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_cedc.ClrMapOvr, _deea)
	}
	if _cedc.ExtLst != nil {
		_cffa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cedc.ExtLst, _cffa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLIterateIntervalPercentage and its children
func (_bdba *CT_TLIterateIntervalPercentage) Validate() error {
	return _bdba.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}
func (_eefbd ST_IterateType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dfbbe := _d.Attr{}
	_dfbbe.Name = name
	switch _eefbd {
	case ST_IterateTypeUnset:
		_dfbbe.Value = ""
	case ST_IterateTypeEl:
		_dfbbe.Value = "\u0065\u006c"
	case ST_IterateTypeWd:
		_dfbbe.Value = "\u0077\u0064"
	case ST_IterateTypeLt:
		_dfbbe.Value = "\u006c\u0074"
	}
	return _dfbbe, nil
}

// Validate validates the EG_Background and its children
func (_aeaag *EG_Background) Validate() error {
	return _aeaag.ValidateWithPath("\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}

type CT_TLGraphicalObjectBuild struct {

	// Build As One
	BldAsOne *CT_Empty

	// Build Sub Elements
	BldSub       *_ad.CT_AnimationGraphicalObjectBuildProperties
	SpidAttr     *uint32
	GrpIdAttr    *uint32
	UiExpandAttr *bool
}

// ValidateWithPath validates the CT_TLAnimVariant and its children, prefixing error messages with path
func (_gecg *CT_TLAnimVariant) ValidateWithPath(path string) error {
	if _gecg.BoolVal != nil {
		if _agdg := _gecg.BoolVal.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006c\u0056\u0061\u006c"); _agdg != nil {
			return _agdg
		}
	}
	if _gecg.IntVal != nil {
		if _badc := _gecg.IntVal.ValidateWithPath(path + "\u002fI\u006e\u0074\u0056\u0061\u006c"); _badc != nil {
			return _badc
		}
	}
	if _gecg.FltVal != nil {
		if _beafc := _gecg.FltVal.ValidateWithPath(path + "\u002fF\u006c\u0074\u0056\u0061\u006c"); _beafc != nil {
			return _beafc
		}
	}
	if _gecg.StrVal != nil {
		if _egde := _gecg.StrVal.ValidateWithPath(path + "\u002fS\u0074\u0072\u0056\u0061\u006c"); _egde != nil {
			return _egde
		}
	}
	if _gecg.ClrVal != nil {
		if _efgc := _gecg.ClrVal.ValidateWithPath(path + "\u002fC\u006c\u0072\u0056\u0061\u006c"); _efgc != nil {
			return _efgc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_gbgd *CT_Control) ValidateWithPath(path string) error {
	if _gbgd.ExtLst != nil {
		if _acge := _gbgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acge != nil {
			return _acge
		}
	}
	if _gbgd.Pic != nil {
		if _bagg := _gbgd.Pic.ValidateWithPath(path + "\u002f\u0050\u0069\u0063"); _bagg != nil {
			return _bagg
		}
	}
	if _gbgd.ImgWAttr != nil {
		if *_gbgd.ImgWAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0057\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbgd.ImgWAttr)
		}
	}
	if _gbgd.ImgHAttr != nil {
		if *_gbgd.ImgHAttr < 0 {
			return _gc.Errorf("\u0025\u0073/m\u002e\u0049\u006dg\u0048\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbgd.ImgHAttr)
		}
	}
	return nil
}
func (_bfef *CT_OleObjectEmbed) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bfef.FollowColorSchemeAttr != ST_OleObjectFollowColorSchemeUnset {
		_bggf, _affgd := _bfef.FollowColorSchemeAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065"})
		if _affgd != nil {
			return _affgd
		}
		start.Attr = append(start.Attr, _bggf)
	}
	e.EncodeToken(start)
	if _bfef.ExtLst != nil {
		_bgbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfef.ExtLst, _bgbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_CommonSlideViewProperties() *CT_CommonSlideViewProperties {
	_dacd := &CT_CommonSlideViewProperties{}
	_dacd.CViewPr = NewCT_CommonViewProperties()
	return _dacd
}

// Validate validates the Notes and its children
func (_dded *Notes) Validate() error { return _dded.ValidateWithPath("\u004e\u006f\u0074e\u0073") }
func NewCT_SideDirectionTransition() *CT_SideDirectionTransition {
	_eadc := &CT_SideDirectionTransition{}
	return _eadc
}
func (_bbb *CT_EightDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbb.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _gc.Sprintf("\u0025\u0076", *_bbb.DirAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLPoint and its children
func (_ebbea *CT_TLPoint) Validate() error {
	return _ebbea.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074")
}

// Validate validates the CT_Background and its children
func (_gcd *CT_Background) Validate() error {
	return _gcd.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064")
}
func NewCT_ExtensionList() *CT_ExtensionList { _cfca := &CT_ExtensionList{}; return _cfca }
func (_dabea ST_TransitionInOutDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dabea.String(), start)
}
func (_cbc *AG_TLBuild) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gab := range start.Attr {
		if _gab.Name.Local == "\u0073\u0070\u0069\u0064" {
			_gf, _cf := _dc.ParseUint(_gab.Value, 10, 32)
			if _cf != nil {
				return _cf
			}
			_efg := uint32(_gf)
			_cbc.SpidAttr = &_efg
			continue
		}
		if _gab.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_gafc, _db := _dc.ParseUint(_gab.Value, 10, 32)
			if _db != nil {
				return _db
			}
			_dag := uint32(_gafc)
			_cbc.GrpIdAttr = &_dag
			continue
		}
		if _gab.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_gba, _ae := _dc.ParseBool(_gab.Value)
			if _ae != nil {
				return _ae
			}
			_cbc.UiExpandAttr = &_gba
			continue
		}
	}
	for {
		_cg, _dedf := d.Token()
		if _dedf != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u003a\u0020%\u0073", _dedf)
		}
		if _daf, _bb := _cg.(_d.EndElement); _bb && _daf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdecg *SldLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdecg.CT_SlideLayout = *NewCT_SlideLayout()
	for _, _ddgea := range start.Attr {
		if _ddgea.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_becbb, _gfff := _ddgea.Value, error(nil)
			if _gfff != nil {
				return _gfff
			}
			_cdecg.MatchingNameAttr = &_becbb
			continue
		}
		if _ddgea.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cdecg.TypeAttr.UnmarshalXMLAttr(_ddgea)
			continue
		}
		if _ddgea.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_agdf, _dfaa := _dc.ParseBool(_ddgea.Value)
			if _dfaa != nil {
				return _dfaa
			}
			_cdecg.PreserveAttr = &_agdf
			continue
		}
		if _ddgea.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_gdfb, _egggd := _dc.ParseBool(_ddgea.Value)
			if _egggd != nil {
				return _egggd
			}
			_cdecg.UserDrawnAttr = &_gdfb
			continue
		}
		if _ddgea.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_gfgce, _ddgeg := _dc.ParseBool(_ddgea.Value)
			if _ddgeg != nil {
				return _ddgeg
			}
			_cdecg.ShowMasterSpAttr = &_gfgce
			continue
		}
		if _ddgea.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_adbfd, _adgbg := _dc.ParseBool(_ddgea.Value)
			if _adgbg != nil {
				return _adgbg
			}
			_cdecg.ShowMasterPhAnimAttr = &_adbfd
			continue
		}
	}
_bggda:
	for {
		_fgbgbd, _egggf := d.Token()
		if _egggf != nil {
			return _egggf
		}
		switch _gdab := _fgbgbd.(type) {
		case _d.StartElement:
			switch _gdab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _cabdcb := d.DecodeElement(_cdecg.CSld, &_gdab); _cabdcb != nil {
					return _cabdcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_cdecg.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _gffca := d.DecodeElement(_cdecg.ClrMapOvr, &_gdab); _gffca != nil {
					return _gffca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_cdecg.Transition = NewCT_SlideTransition()
				if _ffcgg := d.DecodeElement(_cdecg.Transition, &_gdab); _ffcgg != nil {
					return _ffcgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_cdecg.Timing = NewCT_SlideTiming()
				if _ccfd := d.DecodeElement(_cdecg.Timing, &_gdab); _ccfd != nil {
					return _ccfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_cdecg.Hf = NewCT_HeaderFooter()
				if _caeae := d.DecodeElement(_cdecg.Hf, &_gdab); _caeae != nil {
					return _caeae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdecg.ExtLst = NewCT_ExtensionListModify()
				if _gdgba := d.DecodeElement(_cdecg.ExtLst, &_gdab); _gdgba != nil {
					return _gdgba
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0053\u006c\u0064\u004c\u0061\u0079o\u0075\u0074 \u0025\u0076", _gdab.Name)
				if _gcdda := d.Skip(); _gcdda != nil {
					return _gcdda
				}
			}
		case _d.EndElement:
			break _bggda
		case _d.CharData:
		}
	}
	return nil
}

type CT_TLTimeNodeExclusive struct {

	// Common TimeNode Properties
	CTn *CT_TLCommonTimeNodeData
}

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_eabc *CT_Empty) ValidateWithPath(path string) error { return nil }
func (_bdbd *CT_OrientationTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdbd.DirAttr != ST_DirectionUnset {
		_eegf, _ddbd := _bdbd.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _ddbd != nil {
			return _ddbd
		}
		start.Attr = append(start.Attr, _eegf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_TopLevelSlide() *EG_TopLevelSlide {
	_efgf := &EG_TopLevelSlide{}
	_efgf.ClrMap = _ad.NewCT_ColorMapping()
	return _efgf
}

// Validate validates the CT_SlideSyncProperties and its children
func (_dbfb *CT_SlideSyncProperties) Validate() error {
	return _dbfb.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func (_eaec *CT_ShowInfoKiosk) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eaec.RestartAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u0073\u0074\u0061\u0072\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_eaec.RestartAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcaee *ST_TLBehaviorTransformType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dcaee = 0
	case "\u0070\u0074":
		*_dcaee = 1
	case "\u0069\u006d\u0067":
		*_dcaee = 2
	}
	return nil
}

// Validate validates the TagLst and its children
func (_ecagd *TagLst) Validate() error {
	return _ecagd.ValidateWithPath("\u0054\u0061\u0067\u004c\u0073\u0074")
}
func NewCT_SlideIdList() *CT_SlideIdList             { _babc := &CT_SlideIdList{}; return _babc }
func NewCT_SlideLayoutIdList() *CT_SlideLayoutIdList { _cebc := &CT_SlideLayoutIdList{}; return _cebc }
func (_dbcfgd *CT_SlideViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbcfgd.CSldViewPr = NewCT_CommonSlideViewProperties()
_dgcab:
	for {
		_febbg, _caed := d.Token()
		if _caed != nil {
			return _caed
		}
		switch _dfab := _febbg.(type) {
		case _d.StartElement:
			switch _dfab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064\u0056\u0069\u0065\u0077\u0050\u0072"}:
				if _gadf := d.DecodeElement(_dbcfgd.CSldViewPr, &_dfab); _gadf != nil {
					return _gadf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbcfgd.ExtLst = NewCT_ExtensionList()
				if _dbfee := d.DecodeElement(_dbcfgd.ExtLst, &_dfab); _dbfee != nil {
					return _dbfee
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u006c\u0069\u0064e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dfab.Name)
				if _edggg := d.Skip(); _edggg != nil {
					return _edggg
				}
			}
		case _d.EndElement:
			break _dgcab
		case _d.CharData:
		}
	}
	return nil
}
func (_fcfgc ST_TLAnimateMotionBehaviorOrigin) ValidateWithPath(path string) error {
	switch _fcfgc {
	case 0, 1, 2:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcfgc))
	}
	return nil
}

type CT_TLOleChartTargetElement struct {

	// Type
	TypeAttr ST_TLChartSubelementType

	// Level
	LvlAttr *uint32
}

func (_aceeg ST_TLAnimateMotionPathEditMode) Validate() error { return _aceeg.ValidateWithPath("") }
func (_gfedd *ST_TLTimeIndefinite) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aabba, _cdefa := d.Token()
	if _cdefa != nil {
		return _cdefa
	}
	if _fgbdcb, _bcbfc := _aabba.(_d.EndElement); _bcbfc && _fgbdcb.Name == start.Name {
		*_gfedd = 1
		return nil
	}
	if _gfcb, _gbdae := _aabba.(_d.CharData); !_gbdae {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aabba)
	} else {
		switch string(_gfcb) {
		case "":
			*_gfedd = 0
		case "\u0069\u006e\u0064\u0065\u0066\u0069\u006e\u0069\u0074\u0065":
			*_gfedd = 1
		}
	}
	_aabba, _cdefa = d.Token()
	if _cdefa != nil {
		return _cdefa
	}
	if _cacga, _bggad := _aabba.(_d.EndElement); _bggad && _cacga.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aabba)
}
func (_dgbf *CT_TLAnimateColorBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgbf.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _dbdg := range start.Attr {
		if _dbdg.Name.Local == "\u0063\u006c\u0072\u0053\u0070\u0063" {
			_dgbf.ClrSpcAttr.UnmarshalXMLAttr(_dbdg)
			continue
		}
		if _dbdg.Name.Local == "\u0064\u0069\u0072" {
			_dgbf.DirAttr.UnmarshalXMLAttr(_dbdg)
			continue
		}
	}
_geccg:
	for {
		_ggbga, _acbga := d.Token()
		if _acbga != nil {
			return _acbga
		}
		switch _daabc := _ggbga.(type) {
		case _d.StartElement:
			switch _daabc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _ffae := d.DecodeElement(_dgbf.CBhvr, &_daabc); _ffae != nil {
					return _ffae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_dgbf.By = NewCT_TLByAnimateColorTransform()
				if _ecfc := d.DecodeElement(_dgbf.By, &_daabc); _ecfc != nil {
					return _ecfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_dgbf.From = _ad.NewCT_Color()
				if _egga := d.DecodeElement(_dgbf.From, &_daabc); _egga != nil {
					return _egga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dgbf.To = _ad.NewCT_Color()
				if _gegfce := d.DecodeElement(_dgbf.To, &_daabc); _gegfce != nil {
					return _gegfce
				}
			default:
				_de.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0043o\u006c\u006f\u0072\u0042\u0065\u0068\u0061\u0076i\u006fr\u0020\u0025v", _daabc.Name)
				if _geae := d.Skip(); _geae != nil {
					return _geae
				}
			}
		case _d.EndElement:
			break _geccg
		case _d.CharData:
		}
	}
	return nil
}
func (_eddgf *ST_TLBehaviorAdditiveType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eddgf = 0
	case "\u0062\u0061\u0073\u0065":
		*_eddgf = 1
	case "\u0073\u0075\u006d":
		*_eddgf = 2
	case "\u0072\u0065\u0070\u006c":
		*_eddgf = 3
	case "\u006d\u0075\u006c\u0074":
		*_eddgf = 4
	case "\u006e\u006f\u006e\u0065":
		*_eddgf = 5
	}
	return nil
}

type ST_TransitionSpeed byte

func (_edba *CT_CornerDirectionTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _edba.DirAttr != ST_TransitionCornerDirectionTypeUnset {
		_ddb, _ddcg := _edba.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _ddcg != nil {
			return _ddcg
		}
		start.Attr = append(start.Attr, _ddb)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afdbf *CT_SlideLayoutIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afdbf.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_afdbf.IdAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _afdbf.RIdAttr)})
	e.EncodeToken(start)
	if _afdbf.ExtLst != nil {
		_fedfg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afdbf.ExtLst, _fedfg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_ViewProperties struct {

	// Last View
	LastViewAttr ST_ViewType

	// Show Comments
	ShowCommentsAttr *bool

	// Normal View Properties
	NormalViewPr *CT_NormalViewProperties

	// Slide View Properties
	SlideViewPr *CT_SlideViewProperties

	// Outline View Properties
	OutlineViewPr *CT_OutlineViewProperties

	// Notes Text View Properties
	NotesTextViewPr *CT_NotesTextViewProperties

	// Slide Sorter View Properties
	SorterViewPr *CT_SlideSorterViewProperties

	// Notes View Properties
	NotesViewPr *CT_NotesViewProperties

	// Grid Spacing
	GridSpacing *_ad.CT_PositiveSize2D
	ExtLst      *CT_ExtensionList
}

func (_bdbb *CT_GuideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_feea:
	for {
		_dcbe, _deeb := d.Token()
		if _deeb != nil {
			return _deeb
		}
		switch _adbf := _dcbe.(type) {
		case _d.StartElement:
			switch _adbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0075\u0069d\u0065"}:
				_fgced := NewCT_Guide()
				if _cdbe := d.DecodeElement(_fgced, &_adbf); _cdbe != nil {
					return _cdbe
				}
				_bdbb.Guide = append(_bdbb.Guide, _fgced)
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0075\u0069d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _adbf.Name)
				if _abbef := d.Skip(); _abbef != nil {
					return _abbef
				}
			}
		case _d.EndElement:
			break _feea
		case _d.CharData:
		}
	}
	return nil
}
func (_eedg *CT_SlideIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _eedg.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _eedg.RIdAttr)})
	e.EncodeToken(start)
	if _eedg.ExtLst != nil {
		_bgcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eedg.ExtLst, _bgcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddabg ST_TLTimeNodeFillType) Validate() error { return _ddabg.ValidateWithPath("") }
func (_fdcb *CT_SlideLayout) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdcb.CSld = NewCT_CommonSlideData()
	for _, _fadfc := range start.Attr {
		if _fadfc.Name.Local == "\u006d\u0061\u0074c\u0068\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_aafcf, _aefe := _fadfc.Value, error(nil)
			if _aefe != nil {
				return _aefe
			}
			_fdcb.MatchingNameAttr = &_aafcf
			continue
		}
		if _fadfc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdcb.TypeAttr.UnmarshalXMLAttr(_fadfc)
			continue
		}
		if _fadfc.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_cfce, _aacg := _dc.ParseBool(_fadfc.Value)
			if _aacg != nil {
				return _aacg
			}
			_fdcb.PreserveAttr = &_cfce
			continue
		}
		if _fadfc.Name.Local == "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n" {
			_bfgfed, _gbccc := _dc.ParseBool(_fadfc.Value)
			if _gbccc != nil {
				return _gbccc
			}
			_fdcb.UserDrawnAttr = &_bfgfed
			continue
		}
		if _fadfc.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_bfdg, _bgebf := _dc.ParseBool(_fadfc.Value)
			if _bgebf != nil {
				return _bgebf
			}
			_fdcb.ShowMasterSpAttr = &_bfdg
			continue
		}
		if _fadfc.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fedcg, _abab := _dc.ParseBool(_fadfc.Value)
			if _abab != nil {
				return _abab
			}
			_fdcb.ShowMasterPhAnimAttr = &_fedcg
			continue
		}
	}
_fffec:
	for {
		_cfede, _gcaa := d.Token()
		if _gcaa != nil {
			return _gcaa
		}
		switch _fgga := _cfede.(type) {
		case _d.StartElement:
			switch _fgga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _gefe := d.DecodeElement(_fdcb.CSld, &_fgga); _gefe != nil {
					return _gefe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_fdcb.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _fdgb := d.DecodeElement(_fdcb.ClrMapOvr, &_fgga); _fdgb != nil {
					return _fdgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_fdcb.Transition = NewCT_SlideTransition()
				if _bggca := d.DecodeElement(_fdcb.Transition, &_fgga); _bggca != nil {
					return _bggca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_fdcb.Timing = NewCT_SlideTiming()
				if _afbfd := d.DecodeElement(_fdcb.Timing, &_fgga); _afbfd != nil {
					return _afbfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_fdcb.Hf = NewCT_HeaderFooter()
				if _dbcd := d.DecodeElement(_fdcb.Hf, &_fgga); _dbcd != nil {
					return _dbcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdcb.ExtLst = NewCT_ExtensionListModify()
				if _gaadg := d.DecodeElement(_fdcb.ExtLst, &_fgga); _gaadg != nil {
					return _gaadg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004c\u0061y\u006fu\u0074\u0020\u0025\u0076", _fgga.Name)
				if _gbfde := d.Skip(); _gbfde != nil {
					return _gbfde
				}
			}
		case _d.EndElement:
			break _fffec
		case _d.CharData:
		}
	}
	return nil
}
func (_ebgcd *CT_TLShapeTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aagcf := range start.Attr {
		if _aagcf.Name.Local == "\u0073\u0070\u0069\u0064" {
			_faaab, _gbafe := _dc.ParseUint(_aagcf.Value, 10, 32)
			if _gbafe != nil {
				return _gbafe
			}
			_ebgcd.SpidAttr = uint32(_faaab)
			continue
		}
	}
_dfcbb:
	for {
		_bbace, _dbaea := d.Token()
		if _dbaea != nil {
			return _dbaea
		}
		switch _gfgae := _bbace.(type) {
		case _d.StartElement:
			switch _gfgae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067"}:
				_ebgcd.Bg = NewCT_Empty()
				if _gaggc := d.DecodeElement(_ebgcd.Bg, &_gfgae); _gaggc != nil {
					return _gaggc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0075\u0062S\u0070"}:
				_ebgcd.SubSp = NewCT_TLSubShapeId()
				if _egbf := d.DecodeElement(_ebgcd.SubSp, &_gfgae); _egbf != nil {
					return _egbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}:
				_ebgcd.OleChartEl = NewCT_TLOleChartTargetElement()
				if _afdbfd := d.DecodeElement(_ebgcd.OleChartEl, &_gfgae); _afdbfd != nil {
					return _afdbfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0045\u006c"}:
				_ebgcd.TxEl = NewCT_TLTextTargetElement()
				if _dggda := d.DecodeElement(_ebgcd.TxEl, &_gfgae); _dggda != nil {
					return _dggda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063\u0045l"}:
				_ebgcd.GraphicEl = _ad.NewCT_AnimationElementChoice()
				if _aedae := d.DecodeElement(_ebgcd.GraphicEl, &_gfgae); _aedae != nil {
					return _aedae
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u004c\u0053\u0068\u0061\u0070\u0065\u0054\u0061r\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074 \u0025\u0076", _gfgae.Name)
				if _baae := d.Skip(); _baae != nil {
					return _baae
				}
			}
		case _d.EndElement:
			break _dfcbb
		case _d.CharData:
		}
	}
	return nil
}
func (_aeged ST_TransitionCornerDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aeged.String(), start)
}
func NewCT_TagList() *CT_TagList { _cbccf := &CT_TagList{}; return _cbccf }
func NewSldLayout() *SldLayout {
	_eagbf := &SldLayout{}
	_eagbf.CT_SlideLayout = *NewCT_SlideLayout()
	return _eagbf
}
func (_dgfb *CT_OutlineViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dgaed := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0056\u0069\u0065\u0077\u0050r"}}
	e.EncodeElement(_dgfb.CViewPr, _dgaed)
	if _dgfb.SldLst != nil {
		_daee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dgfb.SldLst, _daee)
	}
	if _dgfb.ExtLst != nil {
		_fcab := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dgfb.ExtLst, _fcab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Slide struct {

	// Show Slide in Slide Show
	ShowAttr *bool

	// Common slide data for slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr *_ad.CT_ColorMappingOverride

	// Slide Transition
	Transition *CT_SlideTransition

	// Slide Timing Information for a Slide
	Timing               *CT_SlideTiming
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

func (_fdffc *CT_TagList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdffc.Tag != nil {
		_cbfeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074a\u0067"}}
		for _, _gbaef := range _fdffc.Tag {
			e.EncodeElement(_gbaef, _cbfeb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the SldLayout and its children, prefixing error messages with path
func (_fagaf *SldLayout) ValidateWithPath(path string) error {
	if _fagb := _fagaf.CT_SlideLayout.ValidateWithPath(path); _fagb != nil {
		return _fagb
	}
	return nil
}

type ST_TLAnimateMotionBehaviorOrigin byte

// Validate validates the CT_OleObject and its children
func (_bgeb *CT_OleObject) Validate() error {
	return _bgeb.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

type ST_TLTriggerRuntimeNode byte

func (_bafa ST_PlaceholderSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bafa.String(), start)
}
func (_fdde *CT_CommentList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdde.Cm != nil {
		_gfcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006d"}}
		for _, _bacf := range _fdde.Cm {
			e.EncodeElement(_bacf, _gfcg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_ExtensionList and its children
func (_ddbbb *EG_ExtensionList) Validate() error {
	return _ddbbb.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}

const (
	ST_TLAnimateEffectTransitionUnset ST_TLAnimateEffectTransition = 0
	ST_TLAnimateEffectTransitionIn    ST_TLAnimateEffectTransition = 1
	ST_TLAnimateEffectTransitionOut   ST_TLAnimateEffectTransition = 2
	ST_TLAnimateEffectTransitionNone  ST_TLAnimateEffectTransition = 3
)

func NewCT_TLAnimVariantStringVal() *CT_TLAnimVariantStringVal {
	_baeaf := &CT_TLAnimVariantStringVal{}
	return _baeaf
}
func NewCT_TLTextTargetElement() *CT_TLTextTargetElement {
	_cgbd := &CT_TLTextTargetElement{}
	return _cgbd
}

const (
	ST_TLPreviousActionTypeUnset     ST_TLPreviousActionType = 0
	ST_TLPreviousActionTypeNone      ST_TLPreviousActionType = 1
	ST_TLPreviousActionTypeSkipTimed ST_TLPreviousActionType = 2
)

func (_bgebb *CT_PictureNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gcgb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bgebb.CNvPr, _gcgb)
	_cfbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_bgebb.CNvPicPr, _cfbc)
	_dfgcc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0076\u0050\u0072"}}
	e.EncodeElement(_bgebb.NvPr, _dfgcc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SlideSizeTypeUnset       ST_SlideSizeType = 0
	ST_SlideSizeTypeScreen4x3   ST_SlideSizeType = 1
	ST_SlideSizeTypeLetter      ST_SlideSizeType = 2
	ST_SlideSizeTypeA4          ST_SlideSizeType = 3
	ST_SlideSizeType35mm        ST_SlideSizeType = 4
	ST_SlideSizeTypeOverhead    ST_SlideSizeType = 5
	ST_SlideSizeTypeBanner      ST_SlideSizeType = 6
	ST_SlideSizeTypeCustom      ST_SlideSizeType = 7
	ST_SlideSizeTypeLedger      ST_SlideSizeType = 8
	ST_SlideSizeTypeA3          ST_SlideSizeType = 9
	ST_SlideSizeTypeB4ISO       ST_SlideSizeType = 10
	ST_SlideSizeTypeB5ISO       ST_SlideSizeType = 11
	ST_SlideSizeTypeB4JIS       ST_SlideSizeType = 12
	ST_SlideSizeTypeB5JIS       ST_SlideSizeType = 13
	ST_SlideSizeTypeHagakiCard  ST_SlideSizeType = 14
	ST_SlideSizeTypeScreen16x9  ST_SlideSizeType = 15
	ST_SlideSizeTypeScreen16x10 ST_SlideSizeType = 16
)

func (_ceadf *CT_TLTemplateList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dgfdb:
	for {
		_ggae, _gbgbg := d.Token()
		if _gbgbg != nil {
			return _gbgbg
		}
		switch _cfccd := _ggae.(type) {
		case _d.StartElement:
			switch _cfccd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006d\u0070\u006c"}:
				_befcc := NewCT_TLTemplate()
				if _fgcc := d.DecodeElement(_befcc, &_cfccd); _fgcc != nil {
					return _fgcc
				}
				_ceadf.Tmpl = append(_ceadf.Tmpl, _befcc)
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cfccd.Name)
				if _cegda := d.Skip(); _cegda != nil {
					return _cegda
				}
			}
		case _d.EndElement:
			break _dgfdb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the ViewPr and its children
func (_egcbd *ViewPr) Validate() error {
	return _egcbd.ValidateWithPath("\u0056\u0069\u0065\u0077\u0050\u0072")
}
func NewCT_SmartTags() *CT_SmartTags { _ggdba := &CT_SmartTags{}; return _ggdba }
func (_gadff *CT_TLIterateIntervalPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gfdc := range start.Attr {
		if _gfdc.Name.Local == "\u0076\u0061\u006c" {
			_ddgaf, _ffdac := ParseUnionST_PositivePercentage(_gfdc.Value)
			if _ffdac != nil {
				return _ffdac
			}
			_gadff.ValAttr = _ddgaf
			continue
		}
	}
	for {
		_ffgcf, _bbgef := d.Token()
		if _bbgef != nil {
			return _gc.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c\u0050\u0065\u0072\u0063\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _bbgef)
		}
		if _eebgf, _cdafa := _ffgcf.(_d.EndElement); _cdafa && _eebgf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdab *CT_TLAnimateBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bdab.ByAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0079"}, Value: _gc.Sprintf("\u0025\u0076", *_bdab.ByAttr)})
	}
	if _bdab.FromAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0072\u006f\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_bdab.FromAttr)})
	}
	if _bdab.ToAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u006f"}, Value: _gc.Sprintf("\u0025\u0076", *_bdab.ToAttr)})
	}
	if _bdab.CalcmodeAttr != ST_TLAnimateBehaviorCalcModeUnset {
		_bfabe, _afbgc := _bdab.CalcmodeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u006c\u0063\u006d\u006f\u0064\u0065"})
		if _afbgc != nil {
			return _afbgc
		}
		start.Attr = append(start.Attr, _bfabe)
	}
	if _bdab.ValueTypeAttr != ST_TLAnimateBehaviorValueTypeUnset {
		_eccab, _cafac := _bdab.ValueTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0076a\u006c\u0075\u0065\u0054\u0079\u0070e"})
		if _cafac != nil {
			return _cafac
		}
		start.Attr = append(start.Attr, _eccab)
	}
	e.EncodeToken(start)
	_cadea := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_bdab.CBhvr, _cadea)
	if _bdab.TavLst != nil {
		_caea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_bdab.TavLst, _caea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_SmartTags struct{ IdAttr string }

func (_ecccg ST_TLTriggerRuntimeNode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fccgb := _d.Attr{}
	_fccgb.Name = name
	switch _ecccg {
	case ST_TLTriggerRuntimeNodeUnset:
		_fccgb.Value = ""
	case ST_TLTriggerRuntimeNodeFirst:
		_fccgb.Value = "\u0066\u0069\u0072s\u0074"
	case ST_TLTriggerRuntimeNodeLast:
		_fccgb.Value = "\u006c\u0061\u0073\u0074"
	case ST_TLTriggerRuntimeNodeAll:
		_fccgb.Value = "\u0061\u006c\u006c"
	}
	return _fccgb, nil
}
func NewCT_TLTimeNodeExclusive() *CT_TLTimeNodeExclusive {
	_gfcea := &CT_TLTimeNodeExclusive{}
	_gfcea.CTn = NewCT_TLCommonTimeNodeData()
	return _gfcea
}
func (_bcecc *CT_TimeNodeList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bcdgaf:
	for {
		_bfcgf, _fccae := d.Token()
		if _fccae != nil {
			return _fccae
		}
		switch _cfgcg := _bfcgf.(type) {
		case _d.StartElement:
			switch _cfgcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0061\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072"}:
				_caacd := NewCT_TLTimeNodeParallel()
				if _debfd := d.DecodeElement(_caacd, &_cfgcg); _debfd != nil {
					return _debfd
				}
				_bcecc.Par = append(_bcecc.Par, _caacd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0071"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0071"}:
				_dgeb := NewCT_TLTimeNodeSequence()
				if _facba := d.DecodeElement(_dgeb, &_cfgcg); _facba != nil {
					return _facba
				}
				_bcecc.Seq = append(_bcecc.Seq, _dgeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0063\u006c"}:
				_fcdgf := NewCT_TLTimeNodeExclusive()
				if _bbba := d.DecodeElement(_fcdgf, &_cfgcg); _bbba != nil {
					return _bbba
				}
				_bcecc.Excl = append(_bcecc.Excl, _fcdgf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d"}:
				_cagd := NewCT_TLAnimateBehavior()
				if _ceabg := d.DecodeElement(_cagd, &_cfgcg); _ceabg != nil {
					return _ceabg
				}
				_bcecc.Anim = append(_bcecc.Anim, _cagd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0043\u006c\u0072"}:
				_dafgbe := NewCT_TLAnimateColorBehavior()
				if _gfab := d.DecodeElement(_dafgbe, &_cfgcg); _gfab != nil {
					return _gfab
				}
				_bcecc.AnimClr = append(_bcecc.AnimClr, _dafgbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063\u0074"}:
				_cegdf := NewCT_TLAnimateEffectBehavior()
				if _cbcbb := d.DecodeElement(_cegdf, &_cfgcg); _cbcbb != nil {
					return _cbcbb
				}
				_bcecc.AnimEffect = append(_bcecc.AnimEffect, _cegdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006f\u006e"}:
				_decga := NewCT_TLAnimateMotionBehavior()
				if _edaa := d.DecodeElement(_decga, &_cfgcg); _edaa != nil {
					return _edaa
				}
				_bcecc.AnimMotion = append(_bcecc.AnimMotion, _decga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0052\u006f\u0074"}:
				_fcdff := NewCT_TLAnimateRotationBehavior()
				if _aeadd := d.DecodeElement(_fcdff, &_cfgcg); _aeadd != nil {
					return _aeadd
				}
				_bcecc.AnimRot = append(_bcecc.AnimRot, _fcdff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061n\u0069\u006d\u0053\u0063\u0061\u006ce"}:
				_edbec := NewCT_TLAnimateScaleBehavior()
				if _daccf := d.DecodeElement(_edbec, &_cfgcg); _daccf != nil {
					return _daccf
				}
				_bcecc.AnimScale = append(_bcecc.AnimScale, _edbec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0064"}:
				_gadcd := NewCT_TLCommandBehavior()
				if _dfcace := d.DecodeElement(_gadcd, &_cfgcg); _dfcace != nil {
					return _dfcace
				}
				_bcecc.Cmd = append(_bcecc.Cmd, _gadcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_dffda := NewCT_TLSetBehavior()
				if _bdge := d.DecodeElement(_dffda, &_cfgcg); _bdge != nil {
					return _bdge
				}
				_bcecc.Set = append(_bcecc.Set, _dffda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0064i\u006f"}:
				_aefg := NewCT_TLMediaNodeAudio()
				if _fdgd := d.DecodeElement(_aefg, &_cfgcg); _fdgd != nil {
					return _fdgd
				}
				_bcecc.Audio = append(_bcecc.Audio, _aefg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0069\u0064e\u006f"}:
				_abbce := NewCT_TLMediaNodeVideo()
				if _baccc := d.DecodeElement(_abbce, &_cfgcg); _baccc != nil {
					return _baccc
				}
				_bcecc.Video = append(_bcecc.Video, _abbce)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0069\u006de\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cfgcg.Name)
				if _cdbgc := d.Skip(); _cdbgc != nil {
					return _cdbgc
				}
			}
		case _d.EndElement:
			break _bcdgaf
		case _d.CharData:
		}
	}
	return nil
}

type CT_NotesMaster struct {

	// Common Slide Data
	CSld *CT_CommonSlideData

	// Color Scheme Map
	ClrMap *_ad.CT_ColorMapping

	// Header/Footer Information for a Notes Master
	Hf *CT_HeaderFooter

	// Notes Text Style
	NotesStyle *_ad.CT_TextListStyle
	ExtLst     *CT_ExtensionListModify
}

func NewCT_CustomShow() *CT_CustomShow {
	_bgf := &CT_CustomShow{}
	_bgf.SldLst = NewCT_SlideRelationshipList()
	return _bgf
}
func (_ccdcf *ST_OleObjectFollowColorScheme) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ccdcf = 0
	case "\u006e\u006f\u006e\u0065":
		*_ccdcf = 1
	case "\u0066\u0075\u006c\u006c":
		*_ccdcf = 2
	case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
		*_ccdcf = 3
	}
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_def *CT_CommentList) ValidateWithPath(path string) error {
	for _efag, _cfef := range _def.Cm {
		if _dgdb := _cfef.ValidateWithPath(_gc.Sprintf("\u0025s\u002f\u0043\u006d\u005b\u0025\u0064]", path, _efag)); _dgdb != nil {
			return _dgdb
		}
	}
	return nil
}

type CT_SlideRelationshipList struct {

	// Presentation Slide
	Sld []*CT_SlideRelationshipListEntry
}

func NewCT_HtmlPublishProperties() *CT_HtmlPublishProperties {
	_cage := &CT_HtmlPublishProperties{}
	return _cage
}

// Validate validates the EG_ShowType and its children
func (_dffgb *EG_ShowType) Validate() error {
	return _dffgb.ValidateWithPath("E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065")
}

// Validate validates the CT_SlideTransition and its children
func (_dddbf *CT_SlideTransition) Validate() error {
	return _dddbf.ValidateWithPath("\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}
func NewCT_ControlList() *CT_ControlList { _ggd := &CT_ControlList{}; return _ggd }
func (_fcfcf *CT_Picture) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcfcf.NvPicPr = NewCT_PictureNonVisual()
	_fcfcf.BlipFill = _ad.NewCT_BlipFillProperties()
	_fcfcf.SpPr = _ad.NewCT_ShapeProperties()
_ffgc:
	for {
		_bdaa, _deedd := d.Token()
		if _deedd != nil {
			return _deedd
		}
		switch _cecfg := _bdaa.(type) {
		case _d.StartElement:
			switch _cecfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _ccde := d.DecodeElement(_fcfcf.NvPicPr, &_cecfg); _ccde != nil {
					return _ccde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _fega := d.DecodeElement(_fcfcf.BlipFill, &_cecfg); _fega != nil {
					return _fega
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _bbac := d.DecodeElement(_fcfcf.SpPr, &_cecfg); _bbac != nil {
					return _bbac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fcfcf.Style = _ad.NewCT_ShapeStyle()
				if _acae := d.DecodeElement(_fcfcf.Style, &_cecfg); _acae != nil {
					return _acae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcfcf.ExtLst = NewCT_ExtensionListModify()
				if _gagbg := d.DecodeElement(_fcfcf.ExtLst, &_cecfg); _gagbg != nil {
					return _gagbg
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0069\u0063\u0074\u0075\u0072\u0065\u0020\u0025\u0076", _cecfg.Name)
				if _aaca := d.Skip(); _aaca != nil {
					return _aaca
				}
			}
		case _d.EndElement:
			break _ffgc
		case _d.CharData:
		}
	}
	return nil
}
func (_debbc *ST_TLDiagramBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gagga, _cggd := d.Token()
	if _cggd != nil {
		return _cggd
	}
	if _caaeg, _ggecb := _gagga.(_d.EndElement); _ggecb && _caaeg.Name == start.Name {
		*_debbc = 1
		return nil
	}
	if _faceea, _febdd := _gagga.(_d.CharData); !_febdd {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gagga)
	} else {
		switch string(_faceea) {
		case "":
			*_debbc = 0
		case "\u0077\u0068\u006fl\u0065":
			*_debbc = 1
		case "d\u0065\u0070\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_debbc = 2
		case "\u0064\u0065\u0070\u0074\u0068\u0042\u0079\u0042\u0072\u0061\u006e\u0063\u0068":
			*_debbc = 3
		case "\u0062\u0072\u0065\u0061\u0064\u0074\u0068\u0042\u0079\u004e\u006f\u0064\u0065":
			*_debbc = 4
		case "\u0062\u0072\u0065a\u0064\u0074\u0068\u0042\u0079\u004c\u0076\u006c":
			*_debbc = 5
		case "\u0063\u0077":
			*_debbc = 6
		case "\u0063\u0077\u0049\u006e":
			*_debbc = 7
		case "\u0063\u0077\u004fu\u0074":
			*_debbc = 8
		case "\u0063\u0063\u0077":
			*_debbc = 9
		case "\u0063\u0063\u0077I\u006e":
			*_debbc = 10
		case "\u0063\u0063\u0077\u004f\u0075\u0074":
			*_debbc = 11
		case "\u0069\u006e\u0042\u0079\u0052\u0069\u006e\u0067":
			*_debbc = 12
		case "\u006fu\u0074\u0042\u0079\u0052\u0069\u006eg":
			*_debbc = 13
		case "\u0075\u0070":
			*_debbc = 14
		case "\u0064\u006f\u0077\u006e":
			*_debbc = 15
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_debbc = 16
		case "\u0063\u0075\u0073\u0074":
			*_debbc = 17
		}
	}
	_gagga, _cggd = d.Token()
	if _cggd != nil {
		return _cggd
	}
	if _gbcg, _edefe := _gagga.(_d.EndElement); _edefe && _gbcg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gagga)
}

// Validate validates the CT_CommonSlideViewProperties and its children
func (_gage *CT_CommonSlideViewProperties) Validate() error {
	return _gage.ValidateWithPath("\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}
func (_ffa *AG_Ole) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efb := range start.Attr {
		if _efb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efb.Name.Local == "\u0069\u0064" {
			_gaf, _cb := _efb.Value, error(nil)
			if _cb != nil {
				return _cb
			}
			_ffa.IdAttr = &_gaf
			continue
		}
		if _efb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_fa, _ded := _efb.Value, error(nil)
			if _ded != nil {
				return _ded
			}
			_ffa.SpidAttr = &_fa
			continue
		}
		if _efb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bg, _ab := _efb.Value, error(nil)
			if _ab != nil {
				return _ab
			}
			_ffa.NameAttr = &_bg
			continue
		}
		if _efb.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_cdc, _ba := _dc.ParseBool(_efb.Value)
			if _ba != nil {
				return _ba
			}
			_ffa.ShowAsIconAttr = &_cdc
			continue
		}
		if _efb.Name.Local == "\u0069\u006d\u0067\u0057" {
			_eb, _dcc := _dc.ParseInt(_efb.Value, 10, 32)
			if _dcc != nil {
				return _dcc
			}
			_aab := int32(_eb)
			_ffa.ImgWAttr = &_aab
			continue
		}
		if _efb.Name.Local == "\u0069\u006d\u0067\u0048" {
			_bac, _abb := _dc.ParseInt(_efb.Value, 10, 32)
			if _abb != nil {
				return _abb
			}
			_ecg := int32(_bac)
			_ffa.ImgHAttr = &_ecg
			continue
		}
	}
	for {
		_ccg, _adg := d.Token()
		if _adg != nil {
			return _gc.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041G\u005f\u004fl\u0065\u003a\u0020\u0025\u0073", _adg)
		}
		if _ed, _df := _ccg.(_d.EndElement); _df && _ed.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ceb *CT_ApplicationNonVisualDrawingProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ceb.IsPhotoAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069s\u0050\u0068\u006f\u0074\u006f"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ceb.IsPhotoAttr))})
	}
	if _ceb.UserDrawnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075s\u0065\u0072\u0044\u0072\u0061\u0077n"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ceb.UserDrawnAttr))})
	}
	e.EncodeToken(start)
	if _ceb.Ph != nil {
		_af := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0068"}}
		e.EncodeElement(_ceb.Ph, _af)
	}
	if _ceb.AudioCd != nil {
		_bc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_ceb.AudioCd, _bc)
	}
	if _ceb.WavAudioFile != nil {
		_efbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_ceb.WavAudioFile, _efbc)
	}
	if _ceb.AudioFile != nil {
		_fc := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_ceb.AudioFile, _fc)
	}
	if _ceb.VideoFile != nil {
		_fcf := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_ceb.VideoFile, _fcf)
	}
	if _ceb.QuickTimeFile != nil {
		_dd := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_ceb.QuickTimeFile, _dd)
	}
	if _ceb.CustDataLst != nil {
		_cea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_ceb.CustDataLst, _cea)
	}
	if _ceb.ExtLst != nil {
		_edb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ceb.ExtLst, _edb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GuideList and its children
func (_dacaa *CT_GuideList) Validate() error {
	return _dacaa.ValidateWithPath("\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_efbf *CT_SlideMaster) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efbf.CSld = NewCT_CommonSlideData()
	_efbf.ClrMap = _ad.NewCT_ColorMapping()
	for _, _bfdaf := range start.Attr {
		if _bfdaf.Name.Local == "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065" {
			_bcbcf, _dagcb := _dc.ParseBool(_bfdaf.Value)
			if _dagcb != nil {
				return _dagcb
			}
			_efbf.PreserveAttr = &_bcbcf
			continue
		}
	}
_feead:
	for {
		_dgbd, _cbbe := d.Token()
		if _cbbe != nil {
			return _cbbe
		}
		switch _ccdba := _dgbd.(type) {
		case _d.StartElement:
			switch _ccdba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _dfgd := d.DecodeElement(_efbf.CSld, &_ccdba); _dfgd != nil {
					return _dfgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _gfcgea := d.DecodeElement(_efbf.ClrMap, &_ccdba); _gfcgea != nil {
					return _gfcgea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064\u004c\u0061\u0079\u006f\u0075\u0074I\u0064\u004c\u0073\u0074"}:
				_efbf.SldLayoutIdLst = NewCT_SlideLayoutIdList()
				if _bfdf := d.DecodeElement(_efbf.SldLayoutIdLst, &_ccdba); _bfdf != nil {
					return _bfdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_efbf.Transition = NewCT_SlideTransition()
				if _fggde := d.DecodeElement(_efbf.Transition, &_ccdba); _fggde != nil {
					return _fggde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_efbf.Timing = NewCT_SlideTiming()
				if _gbaba := d.DecodeElement(_efbf.Timing, &_ccdba); _gbaba != nil {
					return _gbaba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0066"}:
				_efbf.Hf = NewCT_HeaderFooter()
				if _daef := d.DecodeElement(_efbf.Hf, &_ccdba); _daef != nil {
					return _daef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_efbf.TxStyles = NewCT_SlideMasterTextStyles()
				if _dbgbe := d.DecodeElement(_efbf.TxStyles, &_ccdba); _dbgbe != nil {
					return _dbgbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbf.ExtLst = NewCT_ExtensionListModify()
				if _affcc := d.DecodeElement(_efbf.ExtLst, &_ccdba); _affcc != nil {
					return _affcc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061s\u0074e\u0072\u0020\u0025\u0076", _ccdba.Name)
				if _dbbcb := d.Skip(); _dbbcb != nil {
					return _dbbcb
				}
			}
		case _d.EndElement:
			break _feead
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLTriggerRuntimeNodeUnset ST_TLTriggerRuntimeNode = 0
	ST_TLTriggerRuntimeNodeFirst ST_TLTriggerRuntimeNode = 1
	ST_TLTriggerRuntimeNodeLast  ST_TLTriggerRuntimeNode = 2
	ST_TLTriggerRuntimeNodeAll   ST_TLTriggerRuntimeNode = 3
)

func (_cfgca ST_TLChartSubelementType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dcgaa := _d.Attr{}
	_dcgaa.Name = name
	switch _cfgca {
	case ST_TLChartSubelementTypeUnset:
		_dcgaa.Value = ""
	case ST_TLChartSubelementTypeGridLegend:
		_dcgaa.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	case ST_TLChartSubelementTypeSeries:
		_dcgaa.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypeCategory:
		_dcgaa.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_TLChartSubelementTypePtInSeries:
		_dcgaa.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_TLChartSubelementTypePtInCategory:
		_dcgaa.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	}
	return _dcgaa, nil
}
func NewCT_SlideMasterIdListEntry() *CT_SlideMasterIdListEntry {
	_efgea := &CT_SlideMasterIdListEntry{}
	return _efgea
}

type CT_ApplicationNonVisualDrawingProps struct {

	// Is a Photo Album
	IsPhotoAttr *bool

	// Is User Drawn
	UserDrawnAttr *bool

	// Placeholder Shape
	Ph            *CT_Placeholder
	AudioCd       *_ad.CT_AudioCD
	WavAudioFile  *_ad.CT_EmbeddedWAVAudioFile
	AudioFile     *_ad.CT_AudioFile
	VideoFile     *_ad.CT_VideoFile
	QuickTimeFile *_ad.CT_QuickTimeFile

	// Customer Data List
	CustDataLst *CT_CustomerDataList
	ExtLst      *CT_ExtensionList
}

// ValidateWithPath validates the CT_TLTimeTargetElement and its children, prefixing error messages with path
func (_cagc *CT_TLTimeTargetElement) ValidateWithPath(path string) error {
	if _cagc.SldTgt != nil {
		if _efccb := _cagc.SldTgt.ValidateWithPath(path + "\u002fS\u006c\u0064\u0054\u0067\u0074"); _efccb != nil {
			return _efccb
		}
	}
	if _cagc.SndTgt != nil {
		if _cdfdd := _cagc.SndTgt.ValidateWithPath(path + "\u002fS\u006e\u0064\u0054\u0067\u0074"); _cdfdd != nil {
			return _cdfdd
		}
	}
	if _cagc.SpTgt != nil {
		if _ddbf := _cagc.SpTgt.ValidateWithPath(path + "\u002f\u0053\u0070\u0054\u0067\u0074"); _ddbf != nil {
			return _ddbf
		}
	}
	if _cagc.InkTgt != nil {
		if _gggff := _cagc.InkTgt.ValidateWithPath(path + "\u002fI\u006e\u006b\u0054\u0067\u0074"); _gggff != nil {
			return _gggff
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideSize and its children, prefixing error messages with path
func (_eceb *CT_SlideSize) ValidateWithPath(path string) error {
	if _eceb.CxAttr < 914400 {
		return _gc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eceb.CxAttr)
	}
	if _eceb.CxAttr > 51206400 {
		return _gc.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eceb.CxAttr)
	}
	if _eceb.CxAttr < 0 {
		return _gc.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eceb.CxAttr)
	}
	if _eceb.CyAttr < 914400 {
		return _gc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0039\u0031\u0034\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _eceb.CyAttr)
	}
	if _eceb.CyAttr > 51206400 {
		return _gc.Errorf("\u0025\u0073\u002f\u006d\u002eC\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eceb.CyAttr)
	}
	if _eceb.CyAttr < 0 {
		return _gc.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _eceb.CyAttr)
	}
	if _gggfe := _eceb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gggfe != nil {
		return _gggfe
	}
	return nil
}

type PresentationPr struct{ CT_PresentationProperties }
type CT_TLTimeAnimateValueList struct {

	// Time Animate Value
	Tav []*CT_TLTimeAnimateValue
}

func (_gdbcfb *ST_TLAnimateMotionPathEditMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gdbcfb = 0
	case "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065":
		*_gdbcfb = 1
	case "\u0066\u0069\u0078e\u0064":
		*_gdbcfb = 2
	}
	return nil
}

type CT_OptionalBlackTransition struct {

	// Transition Through Black
	ThruBlkAttr *bool
}

// ValidateWithPath validates the CT_CommonSlideViewProperties and its children, prefixing error messages with path
func (_ddac *CT_CommonSlideViewProperties) ValidateWithPath(path string) error {
	if _bgab := _ddac.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _bgab != nil {
		return _bgab
	}
	if _ddac.GuideLst != nil {
		if _gdd := _ddac.GuideLst.ValidateWithPath(path + "\u002fG\u0075\u0069\u0064\u0065\u004c\u0073t"); _gdd != nil {
			return _gdd
		}
	}
	return nil
}

const (
	ST_TLBehaviorTransformTypeUnset ST_TLBehaviorTransformType = 0
	ST_TLBehaviorTransformTypePt    ST_TLBehaviorTransformType = 1
	ST_TLBehaviorTransformTypeImg   ST_TLBehaviorTransformType = 2
)

func (_bebad ST_TLBehaviorTransformType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bebad.String(), start)
}

const (
	ST_TLTimeNodeMasterRelationUnset     ST_TLTimeNodeMasterRelation = 0
	ST_TLTimeNodeMasterRelationSameClick ST_TLTimeNodeMasterRelation = 1
	ST_TLTimeNodeMasterRelationLastClick ST_TLTimeNodeMasterRelation = 2
	ST_TLTimeNodeMasterRelationNextClick ST_TLTimeNodeMasterRelation = 3
)

func (_cced *CT_ExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cced.Ext != nil {
		_ddeec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065x\u0074"}}
		for _, _fbde := range _cced.Ext {
			e.EncodeElement(_fbde, _ddeec)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ConnectorNonVisual() *CT_ConnectorNonVisual {
	_gfgc := &CT_ConnectorNonVisual{}
	_gfgc.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_gfgc.CNvCxnSpPr = _ad.NewCT_NonVisualConnectorProperties()
	_gfgc.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _gfgc
}
func (_gfba *CT_TLIterateIntervalTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _gfba.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_HandoutMasterIdList() *CT_HandoutMasterIdList {
	_fabeb := &CT_HandoutMasterIdList{}
	return _fabeb
}
func (_eafef *ST_TLTimeNodePresetClassType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgadd, _dcaec := d.Token()
	if _dcaec != nil {
		return _dcaec
	}
	if _dfggf, _addafg := _cgadd.(_d.EndElement); _addafg && _dfggf.Name == start.Name {
		*_eafef = 1
		return nil
	}
	if _dcbbd, _bcaeg := _cgadd.(_d.CharData); !_bcaeg {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgadd)
	} else {
		switch string(_dcbbd) {
		case "":
			*_eafef = 0
		case "\u0065\u006e\u0074\u0072":
			*_eafef = 1
		case "\u0065\u0078\u0069\u0074":
			*_eafef = 2
		case "\u0065\u006d\u0070\u0068":
			*_eafef = 3
		case "\u0070\u0061\u0074\u0068":
			*_eafef = 4
		case "\u0076\u0065\u0072\u0062":
			*_eafef = 5
		case "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl":
			*_eafef = 6
		}
	}
	_cgadd, _dcaec = d.Token()
	if _dcaec != nil {
		return _dcaec
	}
	if _fcea, _efcb := _cgadd.(_d.EndElement); _efcb && _fcea.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgadd)
}
func NewCT_TLAnimateMotionBehavior() *CT_TLAnimateMotionBehavior {
	_fbaba := &CT_TLAnimateMotionBehavior{}
	_fbaba.CBhvr = NewCT_TLCommonBehaviorData()
	return _fbaba
}

const (
	ST_TransitionSideDirectionTypeUnset ST_TransitionSideDirectionType = 0
	ST_TransitionSideDirectionTypeL     ST_TransitionSideDirectionType = 1
	ST_TransitionSideDirectionTypeU     ST_TransitionSideDirectionType = 2
	ST_TransitionSideDirectionTypeR     ST_TransitionSideDirectionType = 3
	ST_TransitionSideDirectionTypeD     ST_TransitionSideDirectionType = 4
)

func NewCT_Comment() *CT_Comment { _cfc := &CT_Comment{}; _cfc.Pos = _ad.NewCT_Point2D(); return _cfc }
func (_acgd *ST_TLTimeNodeRestartType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdbfc, _bfccf := d.Token()
	if _bfccf != nil {
		return _bfccf
	}
	if _fdcde, _eecfca := _cdbfc.(_d.EndElement); _eecfca && _fdcde.Name == start.Name {
		*_acgd = 1
		return nil
	}
	if _ccfdc, _cfgdc := _cdbfc.(_d.CharData); !_cfgdc {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdbfc)
	} else {
		switch string(_ccfdc) {
		case "":
			*_acgd = 0
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_acgd = 1
		case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
			*_acgd = 2
		case "\u006e\u0065\u0076e\u0072":
			*_acgd = 3
		}
	}
	_cdbfc, _bfccf = d.Token()
	if _bfccf != nil {
		return _bfccf
	}
	if _abefg, _cdged := _cdbfc.(_d.EndElement); _cdged && _abefg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdbfc)
}
func (_bagfe *CT_TLBuildDiagram) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bagfe.BldAttr != ST_TLDiagramBuildTypeUnset {
		_gcfc, _begab := _bagfe.BldAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0064"})
		if _begab != nil {
			return _begab
		}
		start.Attr = append(start.Attr, _gcfc)
	}
	if _bagfe.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_bagfe.SpidAttr)})
	}
	if _bagfe.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_bagfe.GrpIdAttr)})
	}
	if _bagfe.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bagfe.UiExpandAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gafg ST_OleObjectFollowColorScheme) String() string {
	switch _gafg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0066\u0075\u006c\u006c"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return ""
}
func (_efaef *CT_TLMediaNodeVideo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efaef.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _daddg := range start.Attr {
		if _daddg.Name.Local == "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e" {
			_gccae, _ffee := _dc.ParseBool(_daddg.Value)
			if _ffee != nil {
				return _ffee
			}
			_efaef.FullScrnAttr = &_gccae
			continue
		}
	}
_fggeb:
	for {
		_eebda, _accec := d.Token()
		if _accec != nil {
			return _accec
		}
		switch _cafe := _eebda.(type) {
		case _d.StartElement:
			switch _cafe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _cddb := d.DecodeElement(_efaef.CMediaNode, &_cafe); _cddb != nil {
					return _cddb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0056\u0069\u0064\u0065\u006f\u0020\u0025\u0076", _cafe.Name)
				if _fcgd := d.Skip(); _fcgd != nil {
					return _fcgd
				}
			}
		case _d.EndElement:
			break _fggeb
		case _d.CharData:
		}
	}
	return nil
}
func (_abdgd ST_SlideLayoutType) Validate() error { return _abdgd.ValidateWithPath("") }
func (_dffdc *CT_SlideTransitionChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dffdc.Blinds != nil {
		_acfeee := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u006e\u0064\u0073"}}
		e.EncodeElement(_dffdc.Blinds, _acfeee)
	}
	if _dffdc.Checker != nil {
		_cabdc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0068\u0065\u0063\u006b\u0065r"}}
		e.EncodeElement(_dffdc.Checker, _cabdc)
	}
	if _dffdc.Circle != nil {
		_feeg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0069\u0072\u0063\u006c\u0065"}}
		e.EncodeElement(_dffdc.Circle, _feeg)
	}
	if _dffdc.Dissolve != nil {
		_gfcda := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}}
		e.EncodeElement(_dffdc.Dissolve, _gfcda)
	}
	if _dffdc.Comb != nil {
		_gaccc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006d\u0062"}}
		e.EncodeElement(_dffdc.Comb, _gaccc)
	}
	if _dffdc.Cover != nil {
		_aabce := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_dffdc.Cover, _aabce)
	}
	if _dffdc.Cut != nil {
		_daage := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063u\u0074"}}
		e.EncodeElement(_dffdc.Cut, _daage)
	}
	if _dffdc.Diamond != nil {
		_aabdb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0064\u0069\u0061\u006d\u006f\u006ed"}}
		e.EncodeElement(_dffdc.Diamond, _aabdb)
	}
	if _dffdc.Fade != nil {
		_bffa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0061\u0064\u0065"}}
		e.EncodeElement(_dffdc.Fade, _bffa)
	}
	if _dffdc.Newsflash != nil {
		_ceafg := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"}}
		e.EncodeElement(_dffdc.Newsflash, _ceafg)
	}
	if _dffdc.Plus != nil {
		_edgaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u006c\u0075\u0073"}}
		e.EncodeElement(_dffdc.Plus, _edgaf)
	}
	if _dffdc.Pull != nil {
		_ebga := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0075\u006c\u006c"}}
		e.EncodeElement(_dffdc.Pull, _ebga)
	}
	if _dffdc.Push != nil {
		_afgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0075\u0073\u0068"}}
		e.EncodeElement(_dffdc.Push, _afgf)
	}
	if _dffdc.Random != nil {
		_aggb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0072\u0061\u006e\u0064\u006f\u006d"}}
		e.EncodeElement(_dffdc.Random, _aggb)
	}
	if _dffdc.RandomBar != nil {
		_bacfe := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0072\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"}}
		e.EncodeElement(_dffdc.RandomBar, _bacfe)
	}
	if _dffdc.Split != nil {
		_dgcfa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0070\u006c\u0069\u0074"}}
		e.EncodeElement(_dffdc.Split, _dgcfa)
	}
	if _dffdc.Strips != nil {
		_afbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0074\u0072\u0069\u0070\u0073"}}
		e.EncodeElement(_dffdc.Strips, _afbg)
	}
	if _dffdc.Wedge != nil {
		_aace := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0065\u0064\u0067\u0065"}}
		e.EncodeElement(_dffdc.Wedge, _aace)
	}
	if _dffdc.Wheel != nil {
		_gagfg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0077\u0068\u0065\u0065\u006c"}}
		e.EncodeElement(_dffdc.Wheel, _gagfg)
	}
	if _dffdc.Wipe != nil {
		_eccf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0077\u0069\u0070\u0065"}}
		e.EncodeElement(_dffdc.Wipe, _eccf)
	}
	if _dffdc.Zoom != nil {
		_gdbcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u007a\u006f\u006f\u006d"}}
		e.EncodeElement(_dffdc.Zoom, _gdbcd)
	}
	return nil
}

type ST_OleObjectFollowColorScheme byte

// ValidateWithPath validates the CT_TLOleBuildChart and its children, prefixing error messages with path
func (_debeg *CT_TLOleBuildChart) ValidateWithPath(path string) error {
	if _eafe := _debeg.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _eafe != nil {
		return _eafe
	}
	return nil
}
func NewCT_ModifyVerifier() *CT_ModifyVerifier { _ecggd := &CT_ModifyVerifier{}; return _ecggd }
func (_bgaf *ST_OleObjectFollowColorScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbeef, _ededf := d.Token()
	if _ededf != nil {
		return _ededf
	}
	if _gggdc, _gbcfg := _cbeef.(_d.EndElement); _gbcfg && _gggdc.Name == start.Name {
		*_bgaf = 1
		return nil
	}
	if _cacaf, _cgdbc := _cbeef.(_d.CharData); !_cgdbc {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cbeef)
	} else {
		switch string(_cacaf) {
		case "":
			*_bgaf = 0
		case "\u006e\u006f\u006e\u0065":
			*_bgaf = 1
		case "\u0066\u0075\u006c\u006c":
			*_bgaf = 2
		case "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064":
			*_bgaf = 3
		}
	}
	_cbeef, _ededf = d.Token()
	if _ededf != nil {
		return _ededf
	}
	if _eddd, _bfcgb := _cbeef.(_d.EndElement); _bfcgb && _eddd.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cbeef)
}
func (_fgee *CT_CommentAuthorList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fgee.CmAuthor != nil {
		_ecge := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}}
		for _, _fbab := range _fgee.CmAuthor {
			e.EncodeElement(_fbab, _ecge)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewSldSyncPr() *SldSyncPr {
	_ddfce := &SldSyncPr{}
	_ddfce.CT_SlideSyncProperties = *NewCT_SlideSyncProperties()
	return _ddfce
}

type TagLst struct{ CT_TagList }

// ValidateWithPath validates the CT_TransitionStartSoundAction and its children, prefixing error messages with path
func (_ffbdaa *CT_TransitionStartSoundAction) ValidateWithPath(path string) error {
	if _daffg := _ffbdaa.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _daffg != nil {
		return _daffg
	}
	return nil
}
func (_ggaa ST_SplitterBarState) String() string {
	switch _ggaa {
	case 0:
		return ""
	case 1:
		return "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"
	case 2:
		return "\u0072\u0065\u0073\u0074\u006f\u0072\u0065\u0064"
	case 3:
		return "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"
	}
	return ""
}

// ValidateWithPath validates the CT_TransitionSoundAction and its children, prefixing error messages with path
func (_ecfbe *CT_TransitionSoundAction) ValidateWithPath(path string) error {
	if _ecfbe.StSnd != nil {
		if _faag := _ecfbe.StSnd.ValidateWithPath(path + "\u002f\u0053\u0074\u0053\u006e\u0064"); _faag != nil {
			return _faag
		}
	}
	if _ecfbe.EndSnd != nil {
		if _fbbac := _ecfbe.EndSnd.ValidateWithPath(path + "\u002fE\u006e\u0064\u0053\u006e\u0064"); _fbbac != nil {
			return _fbbac
		}
	}
	return nil
}
func (_ddgf ST_TransitionCornerDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_babcf := _d.Attr{}
	_babcf.Name = name
	switch _ddgf {
	case ST_TransitionCornerDirectionTypeUnset:
		_babcf.Value = ""
	case ST_TransitionCornerDirectionTypeLu:
		_babcf.Value = "\u006c\u0075"
	case ST_TransitionCornerDirectionTypeRu:
		_babcf.Value = "\u0072\u0075"
	case ST_TransitionCornerDirectionTypeLd:
		_babcf.Value = "\u006c\u0064"
	case ST_TransitionCornerDirectionTypeRd:
		_babcf.Value = "\u0072\u0064"
	}
	return _babcf, nil
}

// ValidateWithPath validates the CT_TLShapeTargetElement and its children, prefixing error messages with path
func (_fbdcd *CT_TLShapeTargetElement) ValidateWithPath(path string) error {
	if _fbdcd.Bg != nil {
		if _baec := _fbdcd.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _baec != nil {
			return _baec
		}
	}
	if _fbdcd.SubSp != nil {
		if _dgfbc := _fbdcd.SubSp.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0053\u0070"); _dgfbc != nil {
			return _dgfbc
		}
	}
	if _fbdcd.OleChartEl != nil {
		if _gfac := _fbdcd.OleChartEl.ValidateWithPath(path + "/\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"); _gfac != nil {
			return _gfac
		}
	}
	if _fbdcd.TxEl != nil {
		if _dfdd := _fbdcd.TxEl.ValidateWithPath(path + "\u002f\u0054\u0078E\u006c"); _dfdd != nil {
			return _dfdd
		}
	}
	if _fbdcd.GraphicEl != nil {
		if _fbdaa := _fbdcd.GraphicEl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"); _fbdaa != nil {
			return _fbdaa
		}
	}
	return nil
}
func NewCT_TLAnimVariantBooleanVal() *CT_TLAnimVariantBooleanVal {
	_dbgfa := &CT_TLAnimVariantBooleanVal{}
	return _dbgfa
}
func (_fecebf *ST_TLBehaviorAccumulateType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fecebf = 0
	case "\u006e\u006f\u006e\u0065":
		*_fecebf = 1
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_fecebf = 2
	}
	return nil
}
func (_baef *CT_IndexRange) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acca := range start.Attr {
		if _acca.Name.Local == "\u0073\u0074" {
			_edd, _ddde := _dc.ParseUint(_acca.Value, 10, 32)
			if _ddde != nil {
				return _ddde
			}
			_baef.StAttr = uint32(_edd)
			continue
		}
		if _acca.Name.Local == "\u0065\u006e\u0064" {
			_edge, _acefc := _dc.ParseUint(_acca.Value, 10, 32)
			if _acefc != nil {
				return _acefc
			}
			_baef.EndAttr = uint32(_edge)
			continue
		}
	}
	for {
		_begg, _bdac := d.Token()
		if _bdac != nil {
			return _gc.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0064e\u0078R\u0061\u006e\u0067\u0065\u003a\u0020\u0025s", _bdac)
		}
		if _dbbd, _bcec := _begg.(_d.EndElement); _bcec && _dbbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aegcd ST_TLAnimateBehaviorCalcMode) ValidateWithPath(path string) error {
	switch _aegcd {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aegcd))
	}
	return nil
}
func NewCT_PhotoAlbum() *CT_PhotoAlbum { _gffda := &CT_PhotoAlbum{}; return _gffda }
func (_ebae *CT_SmartTags) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _ebae.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cggae ST_SlideLayoutType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bgabf := _d.Attr{}
	_bgabf.Name = name
	switch _cggae {
	case ST_SlideLayoutTypeUnset:
		_bgabf.Value = ""
	case ST_SlideLayoutTypeTitle:
		_bgabf.Value = "\u0074\u0069\u0074l\u0065"
	case ST_SlideLayoutTypeTx:
		_bgabf.Value = "\u0074\u0078"
	case ST_SlideLayoutTypeTwoColTx:
		_bgabf.Value = "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case ST_SlideLayoutTypeTbl:
		_bgabf.Value = "\u0074\u0062\u006c"
	case ST_SlideLayoutTypeTxAndChart:
		_bgabf.Value = "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeChartAndTx:
		_bgabf.Value = "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeDgm:
		_bgabf.Value = "\u0064\u0067\u006d"
	case ST_SlideLayoutTypeChart:
		_bgabf.Value = "\u0063\u0068\u0061r\u0074"
	case ST_SlideLayoutTypeTxAndClipArt:
		_bgabf.Value = "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case ST_SlideLayoutTypeClipArtAndTx:
		_bgabf.Value = "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTitleOnly:
		_bgabf.Value = "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case ST_SlideLayoutTypeBlank:
		_bgabf.Value = "\u0062\u006c\u0061n\u006b"
	case ST_SlideLayoutTypeTxAndObj:
		_bgabf.Value = "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTx:
		_bgabf.Value = "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOnly:
		_bgabf.Value = "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case ST_SlideLayoutTypeObj:
		_bgabf.Value = "\u006f\u0062\u006a"
	case ST_SlideLayoutTypeTxAndMedia:
		_bgabf.Value = "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case ST_SlideLayoutTypeMediaAndTx:
		_bgabf.Value = "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeObjOverTx:
		_bgabf.Value = "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case ST_SlideLayoutTypeTxOverObj:
		_bgabf.Value = "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case ST_SlideLayoutTypeTxAndTwoObj:
		_bgabf.Value = "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndTx:
		_bgabf.Value = "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeTwoObjOverTx:
		_bgabf.Value = "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case ST_SlideLayoutTypeFourObj:
		_bgabf.Value = "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case ST_SlideLayoutTypeVertTx:
		_bgabf.Value = "\u0076\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeClipArtAndVertTx:
		_bgabf.Value = "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTx:
		_bgabf.Value = "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case ST_SlideLayoutTypeVertTitleAndTxOverChart:
		_bgabf.Value = "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case ST_SlideLayoutTypeTwoObj:
		_bgabf.Value = "\u0074\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjAndTwoObj:
		_bgabf.Value = "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeTwoObjAndObj:
		_bgabf.Value = "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case ST_SlideLayoutTypeCust:
		_bgabf.Value = "\u0063\u0075\u0073\u0074"
	case ST_SlideLayoutTypeSecHead:
		_bgabf.Value = "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case ST_SlideLayoutTypeTwoTxTwoObj:
		_bgabf.Value = "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case ST_SlideLayoutTypeObjTx:
		_bgabf.Value = "\u006f\u0062\u006aT\u0078"
	case ST_SlideLayoutTypePicTx:
		_bgabf.Value = "\u0070\u0069\u0063T\u0078"
	}
	return _bgabf, nil
}
func (_dfff ST_TLTimeNodeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dfff.String(), start)
}

// ValidateWithPath validates the CT_OutlineViewProperties and its children, prefixing error messages with path
func (_ggfdc *CT_OutlineViewProperties) ValidateWithPath(path string) error {
	if _bbec := _ggfdc.CViewPr.ValidateWithPath(path + "\u002f\u0043\u0056\u0069\u0065\u0077\u0050\u0072"); _bbec != nil {
		return _bbec
	}
	if _ggfdc.SldLst != nil {
		if _cafcd := _ggfdc.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _cafcd != nil {
			return _cafcd
		}
	}
	if _ggfdc.ExtLst != nil {
		if _gebad := _ggfdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gebad != nil {
			return _gebad
		}
	}
	return nil
}
func (_bgeg *CT_SlideRelationshipList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bgeg.Sld != nil {
		_ceea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _cfgg := range _bgeg.Sld {
			e.EncodeElement(_cfgg, _ceea)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egafa *CT_TLTimeConditionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fdecc:
	for {
		_cfbfe, _dcfb := d.Token()
		if _dcfb != nil {
			return _dcfb
		}
		switch _aefd := _cfbfe.(type) {
		case _d.StartElement:
			switch _aefd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064"}:
				_cfeg := NewCT_TLTimeCondition()
				if _dbfcg := d.DecodeElement(_cfeg, &_aefd); _dbfcg != nil {
					return _dbfcg
				}
				_egafa.Cond = append(_egafa.Cond, _cfeg)
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u004c\u0054\u0069m\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aefd.Name)
				if _gegb := d.Skip(); _gegb != nil {
					return _gegb
				}
			}
		case _d.EndElement:
			break _fdecc
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SlideIdList and its children
func (_fdadg *CT_SlideIdList) Validate() error {
	return _fdadg.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074")
}

// Validate validates the SldSyncPr and its children
func (_bebe *SldSyncPr) Validate() error {
	return _bebe.ValidateWithPath("\u0053l\u0064\u0053\u0079\u006e\u0063\u0050r")
}

// Validate validates the CT_CustomerData and its children
func (_aba *CT_CustomerData) Validate() error {
	return _aba.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061")
}

type CT_Presentation struct {

	// Server Zoom
	ServerZoomAttr *_ad.ST_Percentage

	// First Slide Number
	FirstSlideNumAttr *int32

	// Show Header and Footer Placeholders on Titles
	ShowSpecialPlsOnTitleSldAttr *bool

	// Right-To-Left Views
	RtlAttr *bool

	// Remove Personal Information on Save
	RemovePersonalInfoOnSaveAttr *bool

	// Compatibility Mode
	CompatModeAttr *bool

	// Strict First and Last Characters
	StrictFirstAndLastCharsAttr *bool

	// Embed True Type Fonts
	EmbedTrueTypeFontsAttr *bool

	// Save Subset Fonts
	SaveSubsetFontsAttr *bool

	// Automatically Compress Pictures
	AutoCompressPicturesAttr *bool

	// Bookmark ID Seed
	BookmarkIdSeedAttr *uint32

	// Document Conformance Class
	ConformanceAttr _c.ST_ConformanceClass

	// List of Slide Master IDs
	SldMasterIdLst *CT_SlideMasterIdList

	// List of Notes Master IDs
	NotesMasterIdLst *CT_NotesMasterIdList

	// List of Handout Master IDs
	HandoutMasterIdLst *CT_HandoutMasterIdList

	// List of Slide IDs
	SldIdLst *CT_SlideIdList

	// Presentation Slide Size
	SldSz *CT_SlideSize

	// Notes Slide Size
	NotesSz *_ad.CT_PositiveSize2D

	// Smart Tags
	SmartTags *CT_SmartTags

	// Embedded Font List
	EmbeddedFontLst *CT_EmbeddedFontList

	// List of Custom Shows
	CustShowLst *CT_CustomShowList

	// Photo Album Information
	PhotoAlbum *CT_PhotoAlbum

	// List of Customer Data Buckets
	CustDataLst *CT_CustomerDataList

	// Kinsoku Settings
	Kinsoku *CT_Kinsoku

	// Presentation Default Text Style
	DefaultTextStyle *_ad.CT_TextListStyle

	// Modification Verifier
	ModifyVerifier *CT_ModifyVerifier

	// Extension List
	ExtLst *CT_ExtensionList
}
type CT_CommentAuthor struct {

	// Comment Author ID
	IdAttr uint32

	// Comment Author Name
	NameAttr string

	// Comment Author Initials
	InitialsAttr string

	// Index of Comment Author's last comment
	LastIdxAttr uint32

	// Comment Author Color Index
	ClrIdxAttr uint32
	ExtLst     *CT_ExtensionList
}

func (_dfce *CT_CommentAuthorList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddee:
	for {
		_cad, _cbed := d.Token()
		if _cbed != nil {
			return _cbed
		}
		switch _aeb := _cad.(type) {
		case _d.StartElement:
			switch _aeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_dcb := NewCT_CommentAuthor()
				if _fac := d.DecodeElement(_dcb, &_aeb); _fac != nil {
					return _fac
				}
				_dfce.CmAuthor = append(_dfce.CmAuthor, _dcb)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aeb.Name)
				if _adfa := d.Skip(); _adfa != nil {
					return _adfa
				}
			}
		case _d.EndElement:
			break _ddee
		case _d.CharData:
		}
	}
	return nil
}

type CT_SlideLayoutIdListEntry struct {

	// ID Tag
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

func (_abege ST_TLOleChartBuildType) ValidateWithPath(path string) error {
	switch _abege {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abege))
	}
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipListEntry and its children, prefixing error messages with path
func (_ceeca *CT_SlideRelationshipListEntry) ValidateWithPath(path string) error { return nil }
func NewEG_SlideListChoice() *EG_SlideListChoice                                 { _cdbeca := &EG_SlideListChoice{}; return _cdbeca }

type CT_GroupShape struct {

	// Non-Visual Properties for a Group Shape
	NvGrpSpPr *CT_GroupShapeNonVisual

	// Group Shape Properties
	GrpSpPr *_ad.CT_GroupShapeProperties
	Choice  []*CT_GroupShapeChoice
	ExtLst  *CT_ExtensionListModify
}

func (_gcgcg *ST_TLTriggerEvent) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gcgcg = 0
	case "\u006fn\u0042\u0065\u0067\u0069\u006e":
		*_gcgcg = 1
	case "\u006f\u006e\u0045n\u0064":
		*_gcgcg = 2
	case "\u0062\u0065\u0067i\u006e":
		*_gcgcg = 3
	case "\u0065\u006e\u0064":
		*_gcgcg = 4
	case "\u006fn\u0043\u006c\u0069\u0063\u006b":
		*_gcgcg = 5
	case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
		*_gcgcg = 6
	case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
		*_gcgcg = 7
	case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
		*_gcgcg = 8
	case "\u006f\u006e\u004e\u0065\u0078\u0074":
		*_gcgcg = 9
	case "\u006f\u006e\u0050\u0072\u0065\u0076":
		*_gcgcg = 10
	case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
		*_gcgcg = 11
	}
	return nil
}
func (_fbcfa ST_PhotoAlbumFrameShape) String() string {
	switch _fbcfa {
	case 0:
		return ""
	case 1:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case 2:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case 3:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case 4:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case 5:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case 6:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case 7:
		return "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return ""
}
func (_fbdda *ST_TLAnimateEffectTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgbgg, _abbge := d.Token()
	if _abbge != nil {
		return _abbge
	}
	if _dbfbe, _feaaa := _fgbgg.(_d.EndElement); _feaaa && _dbfbe.Name == start.Name {
		*_fbdda = 1
		return nil
	}
	if _daeda, _cagcgg := _fgbgg.(_d.CharData); !_cagcgg {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgbgg)
	} else {
		switch string(_daeda) {
		case "":
			*_fbdda = 0
		case "\u0069\u006e":
			*_fbdda = 1
		case "\u006f\u0075\u0074":
			*_fbdda = 2
		case "\u006e\u006f\u006e\u0065":
			*_fbdda = 3
		}
	}
	_fgbgg, _abbge = d.Token()
	if _abbge != nil {
		return _abbge
	}
	if _defdg, _ddfge := _fgbgg.(_d.EndElement); _ddfge && _defdg.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgbgg)
}
func (_gedecb ST_WebColorType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gedecb.String(), start)
}
func (_fecee *CT_SideDirectionTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebdagg := range start.Attr {
		if _ebdagg.Name.Local == "\u0064\u0069\u0072" {
			_fecee.DirAttr.UnmarshalXMLAttr(_ebdagg)
			continue
		}
	}
	for {
		_bbdd, _dbeeg := d.Token()
		if _dbeeg != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006e\u0073\u0069t\u0069\u006fn\u003a\u0020\u0025\u0073", _dbeeg)
		}
		if _ccgba, _gcbfd := _bbdd.(_d.EndElement); _gcbfd && _ccgba.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_EmbeddedFontDataId() *CT_EmbeddedFontDataId {
	_deed := &CT_EmbeddedFontDataId{}
	return _deed
}

// Validate validates the CT_SlideMaster and its children
func (_bcggd *CT_SlideMaster) Validate() error {
	return _bcggd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072")
}

const (
	ST_TransitionCornerDirectionTypeUnset ST_TransitionCornerDirectionType = 0
	ST_TransitionCornerDirectionTypeLu    ST_TransitionCornerDirectionType = 1
	ST_TransitionCornerDirectionTypeRu    ST_TransitionCornerDirectionType = 2
	ST_TransitionCornerDirectionTypeLd    ST_TransitionCornerDirectionType = 3
	ST_TransitionCornerDirectionTypeRd    ST_TransitionCornerDirectionType = 4
)

func (_ccff ST_TLTriggerRuntimeNode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ccff.String(), start)
}
func (_dfef *CT_Connector) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ccef := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_dfef.NvCxnSpPr, _ccef)
	_dcca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_dfef.SpPr, _dcca)
	if _dfef.Style != nil {
		_fgc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_dfef.Style, _fgc)
	}
	if _dfef.ExtLst != nil {
		_fcg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfef.ExtLst, _fcg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_feegc *CT_TLAnimVariant) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_adacg:
	for {
		_bgde, _dagb := d.Token()
		if _dagb != nil {
			return _dagb
		}
		switch _acedc := _bgde.(type) {
		case _d.StartElement:
			switch _acedc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006c\u0056\u0061\u006c"}:
				_feegc.BoolVal = NewCT_TLAnimVariantBooleanVal()
				if _ggbbf := d.DecodeElement(_feegc.BoolVal, &_acedc); _ggbbf != nil {
					return _ggbbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0074\u0056\u0061\u006c"}:
				_feegc.IntVal = NewCT_TLAnimVariantIntegerVal()
				if _ggdde := d.DecodeElement(_feegc.IntVal, &_acedc); _ggdde != nil {
					return _ggdde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0074\u0056\u0061\u006c"}:
				_feegc.FltVal = NewCT_TLAnimVariantFloatVal()
				if _bagcc := d.DecodeElement(_feegc.FltVal, &_acedc); _bagcc != nil {
					return _bagcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0056\u0061\u006c"}:
				_feegc.StrVal = NewCT_TLAnimVariantStringVal()
				if _cgcb := d.DecodeElement(_feegc.StrVal, &_acedc); _cgcb != nil {
					return _cgcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u0056\u0061\u006c"}:
				_feegc.ClrVal = _ad.NewCT_Color()
				if _acgf := d.DecodeElement(_feegc.ClrVal, &_acedc); _acgf != nil {
					return _acgf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074\u0020\u0025v", _acedc.Name)
				if _geecc := d.Skip(); _geecc != nil {
					return _geecc
				}
			}
		case _d.EndElement:
			break _adacg
		case _d.CharData:
		}
	}
	return nil
}
func (_gacgc ST_TransitionSideDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gdbbd := _d.Attr{}
	_gdbbd.Name = name
	switch _gacgc {
	case ST_TransitionSideDirectionTypeUnset:
		_gdbbd.Value = ""
	case ST_TransitionSideDirectionTypeL:
		_gdbbd.Value = "\u006c"
	case ST_TransitionSideDirectionTypeU:
		_gdbbd.Value = "\u0075"
	case ST_TransitionSideDirectionTypeR:
		_gdbbd.Value = "\u0072"
	case ST_TransitionSideDirectionTypeD:
		_gdbbd.Value = "\u0064"
	}
	return _gdbbd, nil
}

// ValidateWithPath validates the CT_Connector and its children, prefixing error messages with path
func (_bae *CT_Connector) ValidateWithPath(path string) error {
	if _ecab := _bae.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _ecab != nil {
		return _ecab
	}
	if _dffb := _bae.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dffb != nil {
		return _dffb
	}
	if _bae.Style != nil {
		if _dab := _bae.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _dab != nil {
			return _dab
		}
	}
	if _bae.ExtLst != nil {
		if _aabb := _bae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aabb != nil {
			return _aabb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameNonVisual and its children, prefixing error messages with path
func (_dfgb *CT_GraphicalObjectFrameNonVisual) ValidateWithPath(path string) error {
	if _eegd := _dfgb.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _eegd != nil {
		return _eegd
	}
	if _bdfa := _dfgb.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _bdfa != nil {
		return _bdfa
	}
	if _dba := _dfgb.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _dba != nil {
		return _dba
	}
	return nil
}

type CT_TLTimeConditionList struct {

	// Condition
	Cond []*CT_TLTimeCondition
}

func (_deeba ST_TLAnimateColorSpace) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gafbdd := _d.Attr{}
	_gafbdd.Name = name
	switch _deeba {
	case ST_TLAnimateColorSpaceUnset:
		_gafbdd.Value = ""
	case ST_TLAnimateColorSpaceRgb:
		_gafbdd.Value = "\u0072\u0067\u0062"
	case ST_TLAnimateColorSpaceHsl:
		_gafbdd.Value = "\u0068\u0073\u006c"
	}
	return _gafbdd, nil
}
func (_caga *CT_TLAnimVariantStringVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _caga.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgde *CT_CustomerData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abff := range start.Attr {
		if _abff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _abff.Name.Local == "\u0069\u0064" || _abff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _abff.Name.Local == "\u0069\u0064" {
			_afde, _gedd := _abff.Value, error(nil)
			if _gedd != nil {
				return _gedd
			}
			_dgde.IdAttr = _afde
			continue
		}
	}
	for {
		_cgg, _aabd := d.Token()
		if _aabd != nil {
			return _gc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006de\u0072\u0044\u0061t\u0061:\u0020\u0025\u0073", _aabd)
		}
		if _dga, _ffg := _cgg.(_d.EndElement); _ffg && _dga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_badde ST_TransitionInOutDirectionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_febgc := _d.Attr{}
	_febgc.Name = name
	switch _badde {
	case ST_TransitionInOutDirectionTypeUnset:
		_febgc.Value = ""
	case ST_TransitionInOutDirectionTypeOut:
		_febgc.Value = "\u006f\u0075\u0074"
	case ST_TransitionInOutDirectionTypeIn:
		_febgc.Value = "\u0069\u006e"
	}
	return _febgc, nil
}
func (_dbga *ST_TLAnimateBehaviorValueType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgfdg, _bggaf := d.Token()
	if _bggaf != nil {
		return _bggaf
	}
	if _cfebg, _dffc := _bgfdg.(_d.EndElement); _dffc && _cfebg.Name == start.Name {
		*_dbga = 1
		return nil
	}
	if _ebegc, _baab := _bgfdg.(_d.CharData); !_baab {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bgfdg)
	} else {
		switch string(_ebegc) {
		case "":
			*_dbga = 0
		case "\u0073\u0074\u0072":
			*_dbga = 1
		case "\u006e\u0075\u006d":
			*_dbga = 2
		case "\u0063\u006c\u0072":
			*_dbga = 3
		}
	}
	_bgfdg, _bggaf = d.Token()
	if _bggaf != nil {
		return _bggaf
	}
	if _fabda, _edged := _bgfdg.(_d.EndElement); _edged && _fabda.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bgfdg)
}
func NewTagLst() *TagLst { _baag := &TagLst{}; _baag.CT_TagList = *NewCT_TagList(); return _baag }
func (_fbfc *ST_PlaceholderSize) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbfc = 0
	case "\u0066\u0075\u006c\u006c":
		*_fbfc = 1
	case "\u0068\u0061\u006c\u0066":
		*_fbfc = 2
	case "\u0071u\u0061\u0072\u0074\u0065\u0072":
		*_fbfc = 3
	}
	return nil
}
func (_gegc *CT_NotesSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gegc.CSld = NewCT_CommonSlideData()
	for _, _agge := range start.Attr {
		if _agge.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_cbgc, _beaf := _dc.ParseBool(_agge.Value)
			if _beaf != nil {
				return _beaf
			}
			_gegc.ShowMasterSpAttr = &_cbgc
			continue
		}
		if _agge.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_dbgb, _debd := _dc.ParseBool(_agge.Value)
			if _debd != nil {
				return _debd
			}
			_gegc.ShowMasterPhAnimAttr = &_dbgb
			continue
		}
	}
_cbfb:
	for {
		_geef, _eeaf := d.Token()
		if _eeaf != nil {
			return _eeaf
		}
		switch _gbfe := _geef.(type) {
		case _d.StartElement:
			switch _gbfe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _fadb := d.DecodeElement(_gegc.CSld, &_gbfe); _fadb != nil {
					return _fadb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_gegc.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _eagbb := d.DecodeElement(_gegc.ClrMapOvr, &_gbfe); _eagbb != nil {
					return _eagbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gegc.ExtLst = NewCT_ExtensionListModify()
				if _gdgd := d.DecodeElement(_gegc.ExtLst, &_gbfe); _gdgd != nil {
					return _gdgd
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004eo\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _gbfe.Name)
				if _gedec := d.Skip(); _gedec != nil {
					return _gedec
				}
			}
		case _d.EndElement:
			break _cbfb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjectEmbed and its children, prefixing error messages with path
func (_gabcb *CT_OleObjectEmbed) ValidateWithPath(path string) error {
	if _cege := _gabcb.FollowColorSchemeAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006clo\u0077\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u0074t\u0072"); _cege != nil {
		return _cege
	}
	if _gabcb.ExtLst != nil {
		if _gcef := _gabcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcef != nil {
			return _gcef
		}
	}
	return nil
}

type ST_Direction byte

func (_ecdgaf ST_TLAnimateEffectTransition) String() string {
	switch _ecdgaf {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e"
	case 2:
		return "\u006f\u0075\u0074"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_dggdd ST_ViewType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dggdd.String(), start)
}

// Validate validates the CT_ShowProperties and its children
func (_abgf *CT_ShowProperties) Validate() error {
	return _abgf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func NewCT_TLAnimateRotationBehavior() *CT_TLAnimateRotationBehavior {
	_eeaab := &CT_TLAnimateRotationBehavior{}
	_eeaab.CBhvr = NewCT_TLCommonBehaviorData()
	return _eeaab
}

type CT_TLTriggerTimeNodeID struct {

	// Value
	ValAttr uint32
}

func (_faefe ST_TLTimeNodeSyncType) String() string {
	switch _faefe {
	case 0:
		return ""
	case 1:
		return "\u0063a\u006e\u0053\u006c\u0069\u0070"
	case 2:
		return "\u006c\u006f\u0063\u006b\u0065\u0064"
	}
	return ""
}

// Validate validates the CT_Control and its children
func (_fdfd *CT_Control) Validate() error {
	return _fdfd.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

type CT_TransitionSoundAction struct {

	// Start Sound Action
	StSnd *CT_TransitionStartSoundAction

	// Stop Sound Action
	EndSnd *CT_Empty
}

func (_befa *CT_TLTimeNodeSequence) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _befa.ConcurrentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006e\u0074"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_befa.ConcurrentAttr))})
	}
	if _befa.PrevAcAttr != ST_TLPreviousActionTypeUnset {
		_ddcf, _acac := _befa.PrevAcAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0065\u0076\u0041\u0063"})
		if _acac != nil {
			return _acac
		}
		start.Attr = append(start.Attr, _ddcf)
	}
	if _befa.NextAcAttr != ST_TLNextActionTypeUnset {
		_agcd, _ebaeg := _befa.NextAcAttr.MarshalXMLAttr(_d.Name{Local: "\u006e\u0065\u0078\u0074\u0041\u0063"})
		if _ebaeg != nil {
			return _ebaeg
		}
		start.Attr = append(start.Attr, _agcd)
	}
	e.EncodeToken(start)
	_daeec := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_befa.CTn, _daeec)
	if _befa.PrevCondLst != nil {
		_cbcbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0072\u0065\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_befa.PrevCondLst, _cbcbf)
	}
	if _befa.NextCondLst != nil {
		_fbabad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u0065\u0078\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_befa.NextCondLst, _fbabad)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dabed *ST_TLAnimateEffectTransition) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dabed = 0
	case "\u0069\u006e":
		*_dabed = 1
	case "\u006f\u0075\u0074":
		*_dabed = 2
	case "\u006e\u006f\u006e\u0065":
		*_dabed = 3
	}
	return nil
}

type CT_SlideMasterTextStyles struct {

	// Slide Master Title Text Style
	TitleStyle *_ad.CT_TextListStyle

	// Slide Master Body Text Style
	BodyStyle *_ad.CT_TextListStyle

	// Slide Master Other Text Style
	OtherStyle *_ad.CT_TextListStyle
	ExtLst     *CT_ExtensionList
}

const (
	ST_TLCommandTypeUnset ST_TLCommandType = 0
	ST_TLCommandTypeEvt   ST_TLCommandType = 1
	ST_TLCommandTypeCall  ST_TLCommandType = 2
	ST_TLCommandTypeVerb  ST_TLCommandType = 3
)

func (_ccade *CT_GroupShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eagb := _d.StartElement{Name: _d.Name{Local: "p\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_ccade.NvGrpSpPr, _eagb)
	_fdea := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_ccade.GrpSpPr, _fdea)
	if _ccade.Choice != nil {
		for _, _ebgc := range _ccade.Choice {
			_ebgc.MarshalXML(e, _d.StartElement{})
		}
	}
	if _ccade.ExtLst != nil {
		_gbcd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ccade.ExtLst, _gbcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLSetBehavior struct {

	// Common Behavior
	CBhvr *CT_TLCommonBehaviorData

	// To
	To *CT_TLAnimVariant
}

func (_aade *CT_OleObjectChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aade.Embed != nil {
		_daed := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0065\u006d\u0062\u0065\u0064"}}
		e.EncodeElement(_aade.Embed, _daed)
	}
	if _aade.Link != nil {
		_gdafg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006c\u0069\u006e\u006b"}}
		e.EncodeElement(_aade.Link, _gdafg)
	}
	return nil
}

type CT_NormalViewPortion struct {

	// Normal View Dimension Size
	SzAttr _ad.ST_PositiveFixedPercentage

	// Auto Adjust Normal View
	AutoAdjustAttr *bool
}

func (_adbffa ST_ViewType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bgcdd := _d.Attr{}
	_bgcdd.Name = name
	switch _adbffa {
	case ST_ViewTypeUnset:
		_bgcdd.Value = ""
	case ST_ViewTypeSldView:
		_bgcdd.Value = "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldMasterView:
		_bgcdd.Value = "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesView:
		_bgcdd.Value = "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case ST_ViewTypeHandoutView:
		_bgcdd.Value = "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case ST_ViewTypeNotesMasterView:
		_bgcdd.Value = "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeOutlineView:
		_bgcdd.Value = "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldSorterView:
		_bgcdd.Value = "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case ST_ViewTypeSldThumbnailView:
		_bgcdd.Value = "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return _bgcdd, nil
}
func (_fefcb ST_PrintColorMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fefcb.String(), start)
}

// ValidateWithPath validates the CT_ConnectorNonVisual and its children, prefixing error messages with path
func (_dfga *CT_ConnectorNonVisual) ValidateWithPath(path string) error {
	if _baea := _dfga.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _baea != nil {
		return _baea
	}
	if _aeab := _dfga.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _aeab != nil {
		return _aeab
	}
	if _fdf := _dfga.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _fdf != nil {
		return _fdf
	}
	return nil
}
func (_fbdg *CT_Connector) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fbdg.NvCxnSpPr = NewCT_ConnectorNonVisual()
	_fbdg.SpPr = _ad.NewCT_ShapeProperties()
_acgc:
	for {
		_gacf, _gacff := d.Token()
		if _gacff != nil {
			return _gacff
		}
		switch _ead := _gacf.(type) {
		case _d.StartElement:
			switch _ead.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _aage := d.DecodeElement(_fbdg.NvCxnSpPr, &_ead); _aage != nil {
					return _aage
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _edbb := d.DecodeElement(_fbdg.SpPr, &_ead); _edbb != nil {
					return _edbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_fbdg.Style = _ad.NewCT_ShapeStyle()
				if _bcfc := d.DecodeElement(_fbdg.Style, &_ead); _bcfc != nil {
					return _bcfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbdg.ExtLst = NewCT_ExtensionListModify()
				if _abd := d.DecodeElement(_fbdg.ExtLst, &_ead); _abd != nil {
					return _abd
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006en\u0065\u0063\u0074\u006f\u0072\u0020\u0025\u0076", _ead.Name)
				if _gdgg := d.Skip(); _gdgg != nil {
					return _gdgg
				}
			}
		case _d.EndElement:
			break _acgc
		case _d.CharData:
		}
	}
	return nil
}
func (_fddb *CT_SlideMasterTextStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fddb.TitleStyle != nil {
		_fedaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074i\u0074\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fddb.TitleStyle, _fedaa)
	}
	if _fddb.BodyStyle != nil {
		_edff := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0062\u006f\u0064\u0079\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fddb.BodyStyle, _edff)
	}
	if _fddb.OtherStyle != nil {
		_bbfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006ft\u0068\u0065\u0072\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fddb.OtherStyle, _bbfb)
	}
	if _fddb.ExtLst != nil {
		_ffac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fddb.ExtLst, _ffac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bfecg *EG_ChildSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bfecg.ClrMapOvr != nil {
		_gabaf := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0063\u006c\u0072\u004d\u0061\u0070\u004f\u0076\u0072"}}
		e.EncodeElement(_bfecg.ClrMapOvr, _gabaf)
	}
	return nil
}
func NewCT_GroupShapeNonVisual() *CT_GroupShapeNonVisual {
	_gagee := &CT_GroupShapeNonVisual{}
	_gagee.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_gagee.CNvGrpSpPr = _ad.NewCT_NonVisualGroupDrawingShapeProps()
	_gagee.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _gagee
}

type CT_TLAnimateRotationBehavior struct {

	// By
	ByAttr *int32

	// From
	FromAttr *int32

	// To
	ToAttr *int32
	CBhvr  *CT_TLCommonBehaviorData
}

func (_baagb ST_TransitionCornerDirectionType) ValidateWithPath(path string) error {
	switch _baagb {
	case 0, 1, 2, 3, 4:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baagb))
	}
	return nil
}
func NewCT_TLAnimateScaleBehavior() *CT_TLAnimateScaleBehavior {
	_bgbgd := &CT_TLAnimateScaleBehavior{}
	_bgbgd.CBhvr = NewCT_TLCommonBehaviorData()
	return _bgbgd
}
func (_dddeb *CmLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dddeb.CT_CommentList = *NewCT_CommentList()
_gcga:
	for {
		_aacbccc, _dbff := d.Token()
		if _dbff != nil {
			return _dbff
		}
		switch _bbaga := _aacbccc.(type) {
		case _d.StartElement:
			switch _bbaga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d"}:
				_ddcbgd := NewCT_Comment()
				if _dgcb := d.DecodeElement(_ddcbgd, &_bbaga); _dgcb != nil {
					return _dgcb
				}
				_dddeb.Cm = append(_dddeb.Cm, _ddcbgd)
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u006d\u004cs\u0074 \u0025\u0076", _bbaga.Name)
				if _bdffa := d.Skip(); _bdffa != nil {
					return _bdffa
				}
			}
		case _d.EndElement:
			break _gcga
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideMaster and its children, prefixing error messages with path
func (_cdge *CT_SlideMaster) ValidateWithPath(path string) error {
	if _ffbb := _cdge.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _ffbb != nil {
		return _ffbb
	}
	if _bbgdg := _cdge.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _bbgdg != nil {
		return _bbgdg
	}
	if _cdge.SldLayoutIdLst != nil {
		if _decgb := _cdge.SldLayoutIdLst.ValidateWithPath(path + "\u002fS\u006cd\u004c\u0061\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"); _decgb != nil {
			return _decgb
		}
	}
	if _cdge.Transition != nil {
		if _cffda := _cdge.Transition.ValidateWithPath(path + "/\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"); _cffda != nil {
			return _cffda
		}
	}
	if _cdge.Timing != nil {
		if _edcbd := _cdge.Timing.ValidateWithPath(path + "\u002fT\u0069\u006d\u0069\u006e\u0067"); _edcbd != nil {
			return _edcbd
		}
	}
	if _cdge.Hf != nil {
		if _bbdg := _cdge.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _bbdg != nil {
			return _bbdg
		}
	}
	if _cdge.TxStyles != nil {
		if _eaaef := _cdge.TxStyles.ValidateWithPath(path + "\u002fT\u0078\u0053\u0074\u0079\u006c\u0065s"); _eaaef != nil {
			return _eaaef
		}
	}
	if _cdge.ExtLst != nil {
		if _beffe := _cdge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _beffe != nil {
			return _beffe
		}
	}
	return nil
}
func (_ffgff *CT_TLSubShapeId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acgfa := range start.Attr {
		if _acgfa.Name.Local == "\u0073\u0070\u0069\u0064" {
			_bacd, _dbef := _acgfa.Value, error(nil)
			if _dbef != nil {
				return _dbef
			}
			_ffgff.SpidAttr = _bacd
			continue
		}
	}
	for {
		_bgbgf, _dcba := d.Token()
		if _dcba != nil {
			return _gc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u004c\u0053\u0075\u0062\u0053h\u0061\u0070\u0065I\u0064:\u0020\u0025\u0073", _dcba)
		}
		if _cbda, _dabc := _bgbgf.(_d.EndElement); _dabc && _cbda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_BackgroundProperties and its children
func (_fea *CT_BackgroundProperties) Validate() error {
	return _fea.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ValidateWithPath validates the AG_ChildSlide and its children, prefixing error messages with path
func (_ef *AG_ChildSlide) ValidateWithPath(path string) error { return nil }
func NewCT_Background() *CT_Background                        { _eec := &CT_Background{}; return _eec }
func NewCT_TLCommonBehaviorData() *CT_TLCommonBehaviorData {
	_ffafc := &CT_TLCommonBehaviorData{}
	_ffafc.CTn = NewCT_TLCommonTimeNodeData()
	_ffafc.TgtEl = NewCT_TLTimeTargetElement()
	return _ffafc
}
func (_bffff *CT_TLOleChartTargetElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bffff.TypeAttr = ST_TLChartSubelementType(1)
	for _, _dabde := range start.Attr {
		if _dabde.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bffff.TypeAttr.UnmarshalXMLAttr(_dabde)
			continue
		}
		if _dabde.Name.Local == "\u006c\u0076\u006c" {
			_acfc, _cgegg := _dc.ParseUint(_dabde.Value, 10, 32)
			if _cgegg != nil {
				return _cgegg
			}
			_egebcc := uint32(_acfc)
			_bffff.LvlAttr = &_egebcc
			continue
		}
	}
	for {
		_fafd, _caggf := d.Token()
		if _caggf != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074\u0054\u0061\u0072g\u0065\u0074\u0045\u006c\u0065m\u0065\u006et\u003a\u0020\u0025\u0073", _caggf)
		}
		if _bfdb, _bcbca := _fafd.(_d.EndElement); _bcbca && _bfdb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the OleObj and its children, prefixing error messages with path
func (_fcbde *OleObj) ValidateWithPath(path string) error {
	if _bfccg := _fcbde.CT_OleObject.ValidateWithPath(path); _bfccg != nil {
		return _bfccg
	}
	return nil
}
func (_gfgab *ST_TLAnimateBehaviorValueType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gfgab = 0
	case "\u0073\u0074\u0072":
		*_gfgab = 1
	case "\u006e\u0075\u006d":
		*_gfgab = 2
	case "\u0063\u006c\u0072":
		*_gfgab = 3
	}
	return nil
}
func (_cgef *CT_ExtensionListModify) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecba := range start.Attr {
		if _ecba.Name.Local == "\u006d\u006f\u0064" {
			_gegaf, _gae := _dc.ParseBool(_ecba.Value)
			if _gae != nil {
				return _gae
			}
			_cgef.ModAttr = &_gegaf
			continue
		}
	}
_afab:
	for {
		_adcb, _dce := d.Token()
		if _dce != nil {
			return _dce
		}
		switch _fggd := _adcb.(type) {
		case _d.StartElement:
			switch _fggd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_fbb := NewCT_Extension()
				if _decc := d.DecodeElement(_fbb, &_fggd); _decc != nil {
					return _decc
				}
				_cgef.Ext = append(_cgef.Ext, _fbb)
			default:
				_de.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0045\u0078\u0074\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069\u0066\u0079\u0020\u0025\u0076", _fggd.Name)
				if _dbd := d.Skip(); _dbd != nil {
					return _dbd
				}
			}
		case _d.EndElement:
			break _afab
		case _d.CharData:
		}
	}
	return nil
}

type CT_NotesViewProperties struct {

	// Common Slide View Properties
	CSldViewPr *CT_CommonSlideViewProperties
	ExtLst     *CT_ExtensionList
}

func (_bbgda *OleObj) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbgda.CT_OleObject = *NewCT_OleObject()
	for _, _dbccd := range start.Attr {
		if _dbccd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dbccd.Name.Local == "\u0069\u0064" {
			_acaeca, _fdbece := _dbccd.Value, error(nil)
			if _fdbece != nil {
				return _fdbece
			}
			_bbgda.IdAttr = &_acaeca
			continue
		}
		if _dbccd.Name.Local == "\u0073\u0070\u0069\u0064" {
			_dgfgd, _cfgfg := _dbccd.Value, error(nil)
			if _cfgfg != nil {
				return _cfgfg
			}
			_bbgda.SpidAttr = &_dgfgd
			continue
		}
		if _dbccd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_eacgf, _acfa := _dbccd.Value, error(nil)
			if _acfa != nil {
				return _acfa
			}
			_bbgda.NameAttr = &_eacgf
			continue
		}
		if _dbccd.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0049\u0063\u006f\u006e" {
			_gdbb, _dcbad := _dc.ParseBool(_dbccd.Value)
			if _dcbad != nil {
				return _dcbad
			}
			_bbgda.ShowAsIconAttr = &_gdbb
			continue
		}
		if _dbccd.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_dbdgd, _degd := _dbccd.Value, error(nil)
			if _degd != nil {
				return _degd
			}
			_bbgda.ProgIdAttr = &_dbdgd
			continue
		}
		if _dbccd.Name.Local == "\u0069\u006d\u0067\u0057" {
			_afef, _fdbgb := _dc.ParseInt(_dbccd.Value, 10, 32)
			if _fdbgb != nil {
				return _fdbgb
			}
			_cfdg := int32(_afef)
			_bbgda.ImgWAttr = &_cfdg
			continue
		}
		if _dbccd.Name.Local == "\u0069\u006d\u0067\u0048" {
			_gcfba, _gbbc := _dc.ParseInt(_dbccd.Value, 10, 32)
			if _gbbc != nil {
				return _gbbc
			}
			_gefea := int32(_gcfba)
			_bbgda.ImgHAttr = &_gefea
			continue
		}
	}
_ceecc:
	for {
		_aedgd, _cbaab := d.Token()
		if _cbaab != nil {
			return _cbaab
		}
		switch _gfccd := _aedgd.(type) {
		case _d.StartElement:
			switch _gfccd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006d\u0062e\u0064"}:
				_bbgda.Choice = NewCT_OleObjectChoice()
				if _bcdd := d.DecodeElement(&_bbgda.Choice.Embed, &_gfccd); _bcdd != nil {
					return _bcdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e\u006b"}:
				_bbgda.Choice = NewCT_OleObjectChoice()
				if _geed := d.DecodeElement(&_bbgda.Choice.Link, &_gfccd); _geed != nil {
					return _geed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_bbgda.Pic = NewCT_Picture()
				if _ccggdf := d.DecodeElement(_bbgda.Pic, &_gfccd); _ccggdf != nil {
					return _ccggdf
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004f\u006c\u0065\u004f\u0062\u006a\u0020\u0025\u0076", _gfccd.Name)
				if _fcgefg := d.Skip(); _fcgefg != nil {
					return _fcgefg
				}
			}
		case _d.EndElement:
			break _ceecc
		case _d.CharData:
		}
	}
	return nil
}
func (_abdbc ST_TLTriggerEvent) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffggbg := _d.Attr{}
	_ffggbg.Name = name
	switch _abdbc {
	case ST_TLTriggerEventUnset:
		_ffggbg.Value = ""
	case ST_TLTriggerEventOnBegin:
		_ffggbg.Value = "\u006fn\u0042\u0065\u0067\u0069\u006e"
	case ST_TLTriggerEventOnEnd:
		_ffggbg.Value = "\u006f\u006e\u0045n\u0064"
	case ST_TLTriggerEventBegin:
		_ffggbg.Value = "\u0062\u0065\u0067i\u006e"
	case ST_TLTriggerEventEnd:
		_ffggbg.Value = "\u0065\u006e\u0064"
	case ST_TLTriggerEventOnClick:
		_ffggbg.Value = "\u006fn\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnDblClick:
		_ffggbg.Value = "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b"
	case ST_TLTriggerEventOnMouseOver:
		_ffggbg.Value = "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"
	case ST_TLTriggerEventOnMouseOut:
		_ffggbg.Value = "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074"
	case ST_TLTriggerEventOnNext:
		_ffggbg.Value = "\u006f\u006e\u004e\u0065\u0078\u0074"
	case ST_TLTriggerEventOnPrev:
		_ffggbg.Value = "\u006f\u006e\u0050\u0072\u0065\u0076"
	case ST_TLTriggerEventOnStopAudio:
		_ffggbg.Value = "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f"
	}
	return _ffggbg, nil
}
func (_edgf ST_TLTriggerEvent) ValidateWithPath(path string) error {
	switch _edgf {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edgf))
	}
	return nil
}

type ST_TLTimeNodeFillType byte

// ValidateWithPath validates the CT_GraphicalObjectFrame and its children, prefixing error messages with path
func (_edgad *CT_GraphicalObjectFrame) ValidateWithPath(path string) error {
	if _gge := _edgad.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _gge != nil {
		return _gge
	}
	if _cgdd := _edgad.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _cgdd != nil {
		return _cgdd
	}
	if _abdb := _edgad.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _abdb != nil {
		return _abdb
	}
	if _fbaf := _edgad.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _fbaf != nil {
		return _fbaf
	}
	if _edgad.ExtLst != nil {
		if _affc := _edgad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _affc != nil {
			return _affc
		}
	}
	return nil
}
func (_gfbcc ST_TLTimeNodePresetClassType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdaaff := _d.Attr{}
	_bdaaff.Name = name
	switch _gfbcc {
	case ST_TLTimeNodePresetClassTypeUnset:
		_bdaaff.Value = ""
	case ST_TLTimeNodePresetClassTypeEntr:
		_bdaaff.Value = "\u0065\u006e\u0074\u0072"
	case ST_TLTimeNodePresetClassTypeExit:
		_bdaaff.Value = "\u0065\u0078\u0069\u0074"
	case ST_TLTimeNodePresetClassTypeEmph:
		_bdaaff.Value = "\u0065\u006d\u0070\u0068"
	case ST_TLTimeNodePresetClassTypePath:
		_bdaaff.Value = "\u0070\u0061\u0074\u0068"
	case ST_TLTimeNodePresetClassTypeVerb:
		_bdaaff.Value = "\u0076\u0065\u0072\u0062"
	case ST_TLTimeNodePresetClassTypeMediacall:
		_bdaaff.Value = "\u006de\u0064\u0069\u0061\u0063\u0061\u006cl"
	}
	return _bdaaff, nil
}

// Validate validates the CT_BuildList and its children
func (_cbd *CT_BuildList) Validate() error {
	return _cbd.ValidateWithPath("\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_SlideLayoutIdList and its children, prefixing error messages with path
func (_ggdce *CT_SlideLayoutIdList) ValidateWithPath(path string) error {
	for _ddbag, _gfgb := range _ggdce.SldLayoutId {
		if _fafgd := _gfgb.ValidateWithPath(_gc.Sprintf("\u0025s\u002fS\u006c\u0064\u004c\u0061\u0079o\u0075\u0074I\u0064\u005b\u0025\u0064\u005d", path, _ddbag)); _fafgd != nil {
			return _fafgd
		}
	}
	return nil
}
func (_eadba ST_PrintWhat) Validate() error { return _eadba.ValidateWithPath("") }
func ParseUnionST_Percentage(s string) (_ad.ST_Percentage, error) {
	return _ad.ParseUnionST_Percentage(s)
}

// Validate validates the CT_OleObjectChoice and its children
func (_aecag *CT_OleObjectChoice) Validate() error {
	return _aecag.ValidateWithPath("\u0043T\u005fO\u006c\u0065\u004f\u0062\u006ae\u0063\u0074C\u0068\u006f\u0069\u0063\u0065")
}
func (_abea ST_TLBehaviorAdditiveType) ValidateWithPath(path string) error {
	switch _abea {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abea))
	}
	return nil
}
func (_bcfg *CT_TLMediaNodeAudio) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcfg.IsNarrationAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bcfg.IsNarrationAttr))})
	}
	e.EncodeToken(start)
	_defc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_bcfg.CMediaNode, _defc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fffac *CT_OleObjectEmbed) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fgeea := range start.Attr {
		if _fgeea.Name.Local == "\u0066\u006f\u006c\u006c\u006f\u0077\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065" {
			_fffac.FollowColorSchemeAttr.UnmarshalXMLAttr(_fgeea)
			continue
		}
	}
_bbdc:
	for {
		_cfgd, _feaeb := d.Token()
		if _feaeb != nil {
			return _feaeb
		}
		switch _ddgd := _cfgd.(type) {
		case _d.StartElement:
			switch _ddgd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fffac.ExtLst = NewCT_ExtensionList()
				if _cgaf := d.DecodeElement(_fffac.ExtLst, &_ddgd); _cgaf != nil {
					return _cgaf
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0045\u006d\u0062\u0065\u0064\u0020\u0025\u0076", _ddgd.Name)
				if _eabd := d.Skip(); _eabd != nil {
					return _eabd
				}
			}
		case _d.EndElement:
			break _bbdc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideTransitionChoice and its children, prefixing error messages with path
func (_eeae *CT_SlideTransitionChoice) ValidateWithPath(path string) error {
	if _eeae.Blinds != nil {
		if _ebeece := _eeae.Blinds.ValidateWithPath(path + "\u002fB\u006c\u0069\u006e\u0064\u0073"); _ebeece != nil {
			return _ebeece
		}
	}
	if _eeae.Checker != nil {
		if _gagaae := _eeae.Checker.ValidateWithPath(path + "\u002f\u0043\u0068\u0065\u0063\u006b\u0065\u0072"); _gagaae != nil {
			return _gagaae
		}
	}
	if _eeae.Circle != nil {
		if _cfbe := _eeae.Circle.ValidateWithPath(path + "\u002fC\u0069\u0072\u0063\u006c\u0065"); _cfbe != nil {
			return _cfbe
		}
	}
	if _eeae.Dissolve != nil {
		if _ffeb := _eeae.Dissolve.ValidateWithPath(path + "\u002fD\u0069\u0073\u0073\u006f\u006c\u0076e"); _ffeb != nil {
			return _ffeb
		}
	}
	if _eeae.Comb != nil {
		if _abac := _eeae.Comb.ValidateWithPath(path + "\u002f\u0043\u006fm\u0062"); _abac != nil {
			return _abac
		}
	}
	if _eeae.Cover != nil {
		if _cbdb := _eeae.Cover.ValidateWithPath(path + "\u002f\u0043\u006f\u0076\u0065\u0072"); _cbdb != nil {
			return _cbdb
		}
	}
	if _eeae.Cut != nil {
		if _faafd := _eeae.Cut.ValidateWithPath(path + "\u002f\u0043\u0075\u0074"); _faafd != nil {
			return _faafd
		}
	}
	if _eeae.Diamond != nil {
		if _gdgb := _eeae.Diamond.ValidateWithPath(path + "\u002f\u0044\u0069\u0061\u006d\u006f\u006e\u0064"); _gdgb != nil {
			return _gdgb
		}
	}
	if _eeae.Fade != nil {
		if _fcdgee := _eeae.Fade.ValidateWithPath(path + "\u002f\u0046\u0061d\u0065"); _fcdgee != nil {
			return _fcdgee
		}
	}
	if _eeae.Newsflash != nil {
		if _cdace := _eeae.Newsflash.ValidateWithPath(path + "\u002f\u004e\u0065\u0077\u0073\u0066\u006c\u0061\u0073\u0068"); _cdace != nil {
			return _cdace
		}
	}
	if _eeae.Plus != nil {
		if _edeaa := _eeae.Plus.ValidateWithPath(path + "\u002f\u0050\u006cu\u0073"); _edeaa != nil {
			return _edeaa
		}
	}
	if _eeae.Pull != nil {
		if _feaf := _eeae.Pull.ValidateWithPath(path + "\u002f\u0050\u0075l\u006c"); _feaf != nil {
			return _feaf
		}
	}
	if _eeae.Push != nil {
		if _afac := _eeae.Push.ValidateWithPath(path + "\u002f\u0050\u0075s\u0068"); _afac != nil {
			return _afac
		}
	}
	if _eeae.Random != nil {
		if _egeba := _eeae.Random.ValidateWithPath(path + "\u002fR\u0061\u006e\u0064\u006f\u006d"); _egeba != nil {
			return _egeba
		}
	}
	if _eeae.RandomBar != nil {
		if _bbafb := _eeae.RandomBar.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0064\u006f\u006d\u0042\u0061\u0072"); _bbafb != nil {
			return _bbafb
		}
	}
	if _eeae.Split != nil {
		if _ffggb := _eeae.Split.ValidateWithPath(path + "\u002f\u0053\u0070\u006c\u0069\u0074"); _ffggb != nil {
			return _ffggb
		}
	}
	if _eeae.Strips != nil {
		if _gaaef := _eeae.Strips.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u0070\u0073"); _gaaef != nil {
			return _gaaef
		}
	}
	if _eeae.Wedge != nil {
		if _dgag := _eeae.Wedge.ValidateWithPath(path + "\u002f\u0057\u0065\u0064\u0067\u0065"); _dgag != nil {
			return _dgag
		}
	}
	if _eeae.Wheel != nil {
		if _bdgc := _eeae.Wheel.ValidateWithPath(path + "\u002f\u0057\u0068\u0065\u0065\u006c"); _bdgc != nil {
			return _bdgc
		}
	}
	if _eeae.Wipe != nil {
		if _agafa := _eeae.Wipe.ValidateWithPath(path + "\u002f\u0057\u0069p\u0065"); _agafa != nil {
			return _agafa
		}
	}
	if _eeae.Zoom != nil {
		if _bffad := _eeae.Zoom.ValidateWithPath(path + "\u002f\u005a\u006fo\u006d"); _bffad != nil {
			return _bffad
		}
	}
	return nil
}
func NewCT_TLAnimVariantIntegerVal() *CT_TLAnimVariantIntegerVal {
	_daac := &CT_TLAnimVariantIntegerVal{}
	return _daac
}
func (_cfbec *ST_TLTimeNodeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edecgf, _dgfcg := d.Token()
	if _dgfcg != nil {
		return _dgfcg
	}
	if _cdcfc, _agfe := _edecgf.(_d.EndElement); _agfe && _cdcfc.Name == start.Name {
		*_cfbec = 1
		return nil
	}
	if _cffg, _ebbgfa := _edecgf.(_d.CharData); !_ebbgfa {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edecgf)
	} else {
		switch string(_cffg) {
		case "":
			*_cfbec = 0
		case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
			*_cfbec = 1
		case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
			*_cfbec = 2
		case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
			*_cfbec = 3
		case "\u006da\u0069\u006e\u0053\u0065\u0071":
			*_cfbec = 4
		case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
			*_cfbec = 5
		case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
			*_cfbec = 6
		case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
			*_cfbec = 7
		case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
			*_cfbec = 8
		case "\u0074\u006d\u0052\u006f\u006f\u0074":
			*_cfbec = 9
		}
	}
	_edecgf, _dgfcg = d.Token()
	if _dgfcg != nil {
		return _dgfcg
	}
	if _facfde, _fdgab := _edecgf.(_d.EndElement); _fdgab && _facfde.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edecgf)
}
func (_eabcd *EG_SlideListChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eabcd.SldAll != nil {
		_gfeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0041\u006c\u006c"}}
		e.EncodeElement(_eabcd.SldAll, _gfeb)
	}
	if _eabcd.SldRg != nil {
		_becad := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0052\u0067"}}
		e.EncodeElement(_eabcd.SldRg, _becad)
	}
	if _eabcd.CustShow != nil {
		_gaaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077"}}
		e.EncodeElement(_eabcd.CustShow, _gaaf)
	}
	return nil
}
func NewAG_ChildSlide() *AG_ChildSlide { _f := &AG_ChildSlide{}; return _f }
func (_ddacf ST_TLTimeNodeFillType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ddacf.String(), start)
}
func NewCT_EightDirectionTransition() *CT_EightDirectionTransition {
	_cbg := &CT_EightDirectionTransition{}
	return _cbg
}

// Validate validates the CT_NormalViewProperties and its children
func (_deda *CT_NormalViewProperties) Validate() error {
	return _deda.ValidateWithPath("\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_OrientationTransition struct {

	// Transition Direction
	DirAttr ST_Direction
}

func NewCT_ExtensionListModify() *CT_ExtensionListModify {
	_dbbg := &CT_ExtensionListModify{}
	return _dbbg
}
func (_gg *CT_BuildList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gg.BldP != nil {
		_gbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0050"}}
		for _, _dgg := range _gg.BldP {
			e.EncodeElement(_dgg, _gbg)
		}
	}
	if _gg.BldDgm != nil {
		_efef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		for _, _acc := range _gg.BldDgm {
			e.EncodeElement(_acc, _efef)
		}
	}
	if _gg.BldOleChart != nil {
		_age := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004f\u006c\u0065\u0043\u0068\u0061\u0072\u0074"}}
		for _, _dac := range _gg.BldOleChart {
			e.EncodeElement(_dac, _age)
		}
	}
	if _gg.BldGraphic != nil {
		_ggg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062l\u0064\u0047\u0072\u0061\u0070\u0068\u0069\u0063"}}
		for _, _fcd := range _gg.BldGraphic {
			e.EncodeElement(_fcd, _ggg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dabdc *EG_ChildSlide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cafcdf:
	for {
		_cfadc, _dccgc := d.Token()
		if _dccgc != nil {
			return _dccgc
		}
		switch _caad := _cfadc.(type) {
		case _d.StartElement:
			switch _caad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_dabdc.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _bgabd := d.DecodeElement(_dabdc.ClrMapOvr, &_caad); _bgabd != nil {
					return _bgabd
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043h\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065 \u0025\u0076", _caad.Name)
				if _adgc := d.Skip(); _adgc != nil {
					return _adgc
				}
			}
		case _d.EndElement:
			break _cafcdf
		case _d.CharData:
		}
	}
	return nil
}

type CT_IndexRange struct {

	// Start
	StAttr uint32

	// End
	EndAttr uint32
}

// Validate validates the CT_SlideSorterViewProperties and its children
func (_ggcac *CT_SlideSorterViewProperties) Validate() error {
	return _ggcac.ValidateWithPath("\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073")
}
func (_dadag *CT_TLAnimateMotionBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dadag.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _edcag := range start.Attr {
		if _edcag.Name.Local == "\u006f\u0072\u0069\u0067\u0069\u006e" {
			_dadag.OriginAttr.UnmarshalXMLAttr(_edcag)
			continue
		}
		if _edcag.Name.Local == "\u0070\u0061\u0074\u0068" {
			_gbfa, _adecc := _edcag.Value, error(nil)
			if _adecc != nil {
				return _adecc
			}
			_dadag.PathAttr = &_gbfa
			continue
		}
		if _edcag.Name.Local == "\u0070\u0061\u0074h\u0045\u0064\u0069\u0074\u004d\u006f\u0064\u0065" {
			_dadag.PathEditModeAttr.UnmarshalXMLAttr(_edcag)
			continue
		}
		if _edcag.Name.Local == "\u0072\u0041\u006e\u0067" {
			_ffga, _dbba := _dc.ParseInt(_edcag.Value, 10, 32)
			if _dbba != nil {
				return _dbba
			}
			_gfcc := int32(_ffga)
			_dadag.RAngAttr = &_gfcc
			continue
		}
		if _edcag.Name.Local == "\u0070\u0074\u0073\u0054\u0079\u0070\u0065\u0073" {
			_ggcf, _aadgd := _edcag.Value, error(nil)
			if _aadgd != nil {
				return _aadgd
			}
			_dadag.PtsTypesAttr = &_ggcf
			continue
		}
	}
_aagbb:
	for {
		_fdfae, _egcc := d.Token()
		if _egcc != nil {
			return _egcc
		}
		switch _beabf := _fdfae.(type) {
		case _d.StartElement:
			switch _beabf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _bgdda := d.DecodeElement(_dadag.CBhvr, &_beabf); _bgdda != nil {
					return _bgdda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0079"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0079"}:
				_dadag.By = NewCT_TLPoint()
				if _dbfc := d.DecodeElement(_dadag.By, &_beabf); _dbfc != nil {
					return _dbfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0072\u006f\u006d"}:
				_dadag.From = NewCT_TLPoint()
				if _gadgg := d.DecodeElement(_dadag.From, &_beabf); _gadgg != nil {
					return _gadgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u006f"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f"}:
				_dadag.To = NewCT_TLPoint()
				if _gceg := d.DecodeElement(_dadag.To, &_beabf); _gceg != nil {
					return _gceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0043\u0074\u0072"}:
				_dadag.RCtr = NewCT_TLPoint()
				if _abgbf := d.DecodeElement(_dadag.RCtr, &_beabf); _abgbf != nil {
					return _abgbf
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u004cA\u006e\u0069\u006d\u0061\u0074\u0065\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0020\u0025\u0076", _beabf.Name)
				if _bccf := d.Skip(); _bccf != nil {
					return _bccf
				}
			}
		case _d.EndElement:
			break _aagbb
		case _d.CharData:
		}
	}
	return nil
}
func (_gagbb *CT_NormalViewPortion) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agac := range start.Attr {
		if _agac.Name.Local == "\u0073\u007a" {
			_cgebg, _effa := ParseUnionST_PositiveFixedPercentage(_agac.Value)
			if _effa != nil {
				return _effa
			}
			_gagbb.SzAttr = _cgebg
			continue
		}
		if _agac.Name.Local == "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074" {
			_ecff, _bgba := _dc.ParseBool(_agac.Value)
			if _bgba != nil {
				return _bgba
			}
			_gagbb.AutoAdjustAttr = &_ecff
			continue
		}
	}
	for {
		_ffbe, _cdag := d.Token()
		if _cdag != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006da\u006cV\u0069\u0065\u0077\u0050\u006f\u0072\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _cdag)
		}
		if _efea, _dfcbe := _ffbe.(_d.EndElement); _dfcbe && _efea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TransitionSoundAction and its children
func (_baac *CT_TransitionSoundAction) Validate() error {
	return _baac.ValidateWithPath("\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e")
}
func (_ceca *ST_TLAnimateMotionBehaviorOrigin) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ceca = 0
	case "\u0070\u0061\u0072\u0065\u006e\u0074":
		*_ceca = 1
	case "\u006c\u0061\u0079\u006f\u0075\u0074":
		*_ceca = 2
	}
	return nil
}

// Validate validates the CT_ConnectorNonVisual and its children
func (_accf *CT_ConnectorNonVisual) Validate() error {
	return _accf.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}

// ValidateWithPath validates the CT_EmbeddedFontList and its children, prefixing error messages with path
func (_afdc *CT_EmbeddedFontList) ValidateWithPath(path string) error {
	for _faf, _cfd := range _afdc.EmbeddedFont {
		if _gfbf := _cfd.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _faf)); _gfbf != nil {
			return _gfbf
		}
	}
	return nil
}

const (
	ST_TLAnimateMotionPathEditModeUnset    ST_TLAnimateMotionPathEditMode = 0
	ST_TLAnimateMotionPathEditModeRelative ST_TLAnimateMotionPathEditMode = 1
	ST_TLAnimateMotionPathEditModeFixed    ST_TLAnimateMotionPathEditMode = 2
)

func (_bbea *CT_OutlineViewSlideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bbea.Sld != nil {
		_ggde := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073l\u0064"}}
		for _, _eeafb := range _bbea.Sld {
			e.EncodeElement(_eeafb, _ggde)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbdeg *ST_TransitionSideDirectionType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fbdeg = 0
	case "\u006c":
		*_fbdeg = 1
	case "\u0075":
		*_fbdeg = 2
	case "\u0072":
		*_fbdeg = 3
	case "\u0064":
		*_fbdeg = 4
	}
	return nil
}

// Validate validates the CT_TLTimeNodeSequence and its children
func (_ggge *CT_TLTimeNodeSequence) Validate() error {
	return _ggge.ValidateWithPath("C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065")
}

// Validate validates the CT_SplitTransition and its children
func (_aeabf *CT_SplitTransition) Validate() error {
	return _aeabf.ValidateWithPath("\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e")
}

type ST_ViewType byte
type CT_PresentationProperties struct {

	// HTML Publishing Properties
	HtmlPubPr *CT_HtmlPublishProperties

	// Web Properties
	WebPr *CT_WebProperties

	// Printing Properties
	PrnPr *CT_PrintProperties

	// Presentation-wide Show Properties
	ShowPr *CT_ShowProperties

	// Color MRU
	ClrMru *_ad.CT_ColorMRU
	ExtLst *CT_ExtensionList
}
type CT_NotesTextViewProperties struct {

	// Base properties for Notes View
	CViewPr *CT_CommonViewProperties
	ExtLst  *CT_ExtensionList
}

func (_gdafd ST_TLTriggerRuntimeNode) ValidateWithPath(path string) error {
	switch _gdafd {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdafd))
	}
	return nil
}

// ValidateWithPath validates the CT_TLByRgbColorTransform and its children, prefixing error messages with path
func (_gefbd *CT_TLByRgbColorTransform) ValidateWithPath(path string) error {
	if _gffbb := _gefbd.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _gffbb != nil {
		return _gffbb
	}
	if _gbfb := _gefbd.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _gbfb != nil {
		return _gbfb
	}
	if _fbadb := _gefbd.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _fbadb != nil {
		return _fbadb
	}
	return nil
}
func (_ceced *ST_PhotoAlbumFrameShape) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ceced = 0
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031":
		*_ceced = 1
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032":
		*_ceced = 2
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033":
		*_ceced = 3
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034":
		*_ceced = 4
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035":
		*_ceced = 5
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036":
		*_ceced = 6
	case "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037":
		*_ceced = 7
	}
	return nil
}
func (_cbdfbg ST_TransitionSpeed) ValidateWithPath(path string) error {
	switch _cbdfbg {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbdfbg))
	}
	return nil
}

type CT_OleObject struct {

	// Embedded Object ProgID
	ProgIdAttr     *string
	Choice         *CT_OleObjectChoice
	Pic            *CT_Picture
	SpidAttr       *string
	NameAttr       *string
	ShowAsIconAttr *bool
	IdAttr         *string
	ImgWAttr       *int32
	ImgHAttr       *int32
}

// Validate validates the EG_TopLevelSlide and its children
func (_faac *EG_TopLevelSlide) Validate() error {
	return _faac.ValidateWithPath("\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065")
}

type ST_PhotoAlbumLayout byte

func (_ddceg ST_TLAnimateMotionBehaviorOrigin) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ddceg.String(), start)
}

// ValidateWithPath validates the CT_TLTimeAnimateValue and its children, prefixing error messages with path
func (_fcagd *CT_TLTimeAnimateValue) ValidateWithPath(path string) error {
	if _fcagd.TmAttr != nil {
		if _dadf := _fcagd.TmAttr.ValidateWithPath(path + "\u002fT\u006d\u0041\u0074\u0074\u0072"); _dadf != nil {
			return _dadf
		}
	}
	if _fcagd.Val != nil {
		if _bede := _fcagd.Val.ValidateWithPath(path + "\u002f\u0056\u0061\u006c"); _bede != nil {
			return _bede
		}
	}
	return nil
}
func (_bdff *CT_TLTemplateList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bdff.Tmpl != nil {
		_cddbf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006d\u0070\u006c"}}
		for _, _eagef := range _bdff.Tmpl {
			e.EncodeElement(_eagef, _cddbf)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_EightDirectionTransition struct {

	// Direction
	DirAttr *ST_TransitionEightDirectionType
}

func NewCT_PictureNonVisual() *CT_PictureNonVisual {
	_dddd := &CT_PictureNonVisual{}
	_dddd.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_dddd.CNvPicPr = _ad.NewCT_NonVisualPictureProperties()
	_dddd.NvPr = NewCT_ApplicationNonVisualDrawingProps()
	return _dddd
}
func (_feeb *CT_TLAnimVariantBooleanVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(_feeb.ValAttr))})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eff *CT_CommentAuthor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gabg := range start.Attr {
		if _gabg.Name.Local == "\u0069\u0064" {
			_aff, _eg := _dc.ParseUint(_gabg.Value, 10, 32)
			if _eg != nil {
				return _eg
			}
			_eff.IdAttr = uint32(_aff)
			continue
		}
		if _gabg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ged, _gede := _gabg.Value, error(nil)
			if _gede != nil {
				return _gede
			}
			_eff.NameAttr = _ged
			continue
		}
		if _gabg.Name.Local == "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073" {
			_dccg, _ageb := _gabg.Value, error(nil)
			if _ageb != nil {
				return _ageb
			}
			_eff.InitialsAttr = _dccg
			continue
		}
		if _gabg.Name.Local == "\u006ca\u0073\u0074\u0049\u0064\u0078" {
			_baa, _acb := _dc.ParseUint(_gabg.Value, 10, 32)
			if _acb != nil {
				return _acb
			}
			_eff.LastIdxAttr = uint32(_baa)
			continue
		}
		if _gabg.Name.Local == "\u0063\u006c\u0072\u0049\u0064\u0078" {
			_afb, _edea := _dc.ParseUint(_gabg.Value, 10, 32)
			if _edea != nil {
				return _edea
			}
			_eff.ClrIdxAttr = uint32(_afb)
			continue
		}
	}
_fba:
	for {
		_gdeg, _gca := d.Token()
		if _gca != nil {
			return _gca
		}
		switch _dgf := _gdeg.(type) {
		case _d.StartElement:
			switch _dgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eff.ExtLst = NewCT_ExtensionList()
				if _ffdc := d.DecodeElement(_eff.ExtLst, &_dgf); _ffdc != nil {
					return _ffdc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072\u0020\u0025v", _dgf.Name)
				if _acbg := d.Skip(); _acbg != nil {
					return _acbg
				}
			}
		case _d.EndElement:
			break _fba
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_InOutTransition() *CT_InOutTransition { _fbg := &CT_InOutTransition{}; return _fbg }

type CT_BackgroundProperties struct {

	// Shade to Title
	ShadeToTitleAttr *bool
	NoFill           *_ad.CT_NoFillProperties
	SolidFill        *_ad.CT_SolidColorFillProperties
	GradFill         *_ad.CT_GradientFillProperties
	BlipFill         *_ad.CT_BlipFillProperties
	PattFill         *_ad.CT_PatternFillProperties
	GrpFill          *_ad.CT_GroupFillProperties
	EffectLst        *_ad.CT_EffectList
	EffectDag        *_ad.CT_EffectContainer
	ExtLst           *CT_ExtensionList
}

func NewCT_TLIterateIntervalPercentage() *CT_TLIterateIntervalPercentage {
	_gdaca := &CT_TLIterateIntervalPercentage{}
	return _gdaca
}
func (_deaa *PresentationPr) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deaa.CT_PresentationProperties = *NewCT_PresentationProperties()
_caefa:
	for {
		_dcbfa, _fbfd := d.Token()
		if _fbfd != nil {
			return _fbfd
		}
		switch _dcfead := _dcbfa.(type) {
		case _d.StartElement:
			switch _dcfead.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068t\u006d\u006c\u0050\u0075\u0062\u0050r"}:
				_deaa.HtmlPubPr = NewCT_HtmlPublishProperties()
				if _daagf := d.DecodeElement(_deaa.HtmlPubPr, &_dcfead); _daagf != nil {
					return _daagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_deaa.WebPr = NewCT_WebProperties()
				if _fdbeced := d.DecodeElement(_deaa.WebPr, &_dcfead); _fdbeced != nil {
					return _fdbeced
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006eP\u0072"}:
				_deaa.PrnPr = NewCT_PrintProperties()
				if _ddcef := d.DecodeElement(_deaa.PrnPr, &_dcfead); _ddcef != nil {
					return _ddcef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u006f\u0077\u0050\u0072"}:
				_deaa.ShowPr = NewCT_ShowProperties()
				if _aafcfd := d.DecodeElement(_deaa.ShowPr, &_dcfead); _aafcfd != nil {
					return _aafcfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0072\u0075"}:
				_deaa.ClrMru = _ad.NewCT_ColorMRU()
				if _aedad := d.DecodeElement(_deaa.ClrMru, &_dcfead); _aedad != nil {
					return _aedad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_deaa.ExtLst = NewCT_ExtensionList()
				if _adefe := d.DecodeElement(_deaa.ExtLst, &_dcfead); _adefe != nil {
					return _adefe
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0050\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006eP\u0072\u0020\u0025\u0076", _dcfead.Name)
				if _dgbbf := d.Skip(); _dgbbf != nil {
					return _dgbbf
				}
			}
		case _d.EndElement:
			break _caefa
		case _d.CharData:
		}
	}
	return nil
}
func NewAG_TLBuild() *AG_TLBuild { _bfe := &AG_TLBuild{}; return _bfe }
func (_dcfgb ST_TLCommandType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dcfgb.String(), start)
}
func (_dfad ST_TransitionInOutDirectionType) Validate() error { return _dfad.ValidateWithPath("") }
func (_aedf *CT_TLTriggerTimeNodeID) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _gc.Sprintf("\u0025\u0076", _aedf.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TLBehaviorAdditiveTypeUnset ST_TLBehaviorAdditiveType = 0
	ST_TLBehaviorAdditiveTypeBase  ST_TLBehaviorAdditiveType = 1
	ST_TLBehaviorAdditiveTypeSum   ST_TLBehaviorAdditiveType = 2
	ST_TLBehaviorAdditiveTypeRepl  ST_TLBehaviorAdditiveType = 3
	ST_TLBehaviorAdditiveTypeMult  ST_TLBehaviorAdditiveType = 4
	ST_TLBehaviorAdditiveTypeNone  ST_TLBehaviorAdditiveType = 5
)

func (_gd *AG_ChildSlide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gd.ShowMasterSpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gd.ShowMasterSpAttr))})
	}
	if _gd.ShowMasterPhAnimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gd.ShowMasterPhAnimAttr))})
	}
	return nil
}
func (_dbbde *CmAuthorLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbbde.CT_CommentAuthorList = *NewCT_CommentAuthorList()
_cgcgg:
	for {
		_dfgec, _gfcdg := d.Token()
		if _gfcdg != nil {
			return _gfcdg
		}
		switch _eebdg := _dfgec.(type) {
		case _d.StartElement:
			switch _eebdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006d\u0041\u0075\u0074\u0068\u006f\u0072"}:
				_eccbb := NewCT_CommentAuthor()
				if _cecbe := d.DecodeElement(_eccbb, &_eebdg); _cecbe != nil {
					return _cecbe
				}
				_dbbde.CmAuthor = append(_dbbde.CmAuthor, _eccbb)
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074\u0020\u0025\u0076", _eebdg.Name)
				if _cabe := d.Skip(); _cabe != nil {
					return _cabe
				}
			}
		case _d.EndElement:
			break _cgcgg
		case _d.CharData:
		}
	}
	return nil
}

type ST_TLAnimateBehaviorCalcMode byte

func (_bbed *ST_TLBehaviorOverrideType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bbed = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_bbed = 1
	case "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065":
		*_bbed = 2
	}
	return nil
}
func NewCT_CommonSlideData() *CT_CommonSlideData {
	_bfc := &CT_CommonSlideData{}
	_bfc.SpTree = NewCT_GroupShape()
	return _bfc
}
func NewSldMaster() *SldMaster {
	_adgff := &SldMaster{}
	_adgff.CT_SlideMaster = *NewCT_SlideMaster()
	return _adgff
}
func NewCT_TLByAnimateColorTransform() *CT_TLByAnimateColorTransform {
	_edggf := &CT_TLByAnimateColorTransform{}
	return _edggf
}
func (_bfffb ST_PhotoAlbumFrameShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bfffb.String(), start)
}
func (_fbace *CT_ShowInfoBrowse) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbace.ShowScrollbarAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0063\u0072\u006f\u006c\u006c\u0062\u0061\u0072"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fbace.ShowScrollbarAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_babec *ST_SlideLayoutType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_babec = 0
	case "\u0074\u0069\u0074l\u0065":
		*_babec = 1
	case "\u0074\u0078":
		*_babec = 2
	case "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078":
		*_babec = 3
	case "\u0074\u0062\u006c":
		*_babec = 4
	case "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074":
		*_babec = 5
	case "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_babec = 6
	case "\u0064\u0067\u006d":
		*_babec = 7
	case "\u0063\u0068\u0061r\u0074":
		*_babec = 8
	case "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074":
		*_babec = 9
	case "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078":
		*_babec = 10
	case "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy":
		*_babec = 11
	case "\u0062\u006c\u0061n\u006b":
		*_babec = 12
	case "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a":
		*_babec = 13
	case "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_babec = 14
	case "\u006fb\u006a\u004f\u006e\u006c\u0079":
		*_babec = 15
	case "\u006f\u0062\u006a":
		*_babec = 16
	case "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061":
		*_babec = 17
	case "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078":
		*_babec = 18
	case "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x":
		*_babec = 19
	case "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j":
		*_babec = 20
	case "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_babec = 21
	case "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078":
		*_babec = 22
	case "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078":
		*_babec = 23
	case "\u0066o\u0075\u0072\u004f\u0062\u006a":
		*_babec = 24
	case "\u0076\u0065\u0072\u0074\u0054\u0078":
		*_babec = 25
	case "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078":
		*_babec = 26
	case "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078":
		*_babec = 27
	case "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074":
		*_babec = 28
	case "\u0074\u0077\u006f\u004f\u0062\u006a":
		*_babec = 29
	case "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a":
		*_babec = 30
	case "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a":
		*_babec = 31
	case "\u0063\u0075\u0073\u0074":
		*_babec = 32
	case "\u0073e\u0063\u0048\u0065\u0061\u0064":
		*_babec = 33
	case "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a":
		*_babec = 34
	case "\u006f\u0062\u006aT\u0078":
		*_babec = 35
	case "\u0070\u0069\u0063T\u0078":
		*_babec = 36
	}
	return nil
}
func (_cagaa ST_TLAnimateColorSpace) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cagaa.String(), start)
}
func (_bdgab ST_TLTimeNodeMasterRelation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bdgab.String(), start)
}

// ValidateWithPath validates the SldMaster and its children, prefixing error messages with path
func (_fbddc *SldMaster) ValidateWithPath(path string) error {
	if _gceabg := _fbddc.CT_SlideMaster.ValidateWithPath(path); _gceabg != nil {
		return _gceabg
	}
	return nil
}
func (_ddbgc *CT_TLAnimateEffectBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddbgc.TransitionAttr != ST_TLAnimateEffectTransitionUnset {
		_gbgg, _egagd := _ddbgc.TransitionAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"})
		if _egagd != nil {
			return _egagd
		}
		start.Attr = append(start.Attr, _gbgg)
	}
	if _ddbgc.FilterAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _gc.Sprintf("\u0025\u0076", *_ddbgc.FilterAttr)})
	}
	if _ddbgc.PrLstAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u004cs\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_ddbgc.PrLstAttr)})
	}
	e.EncodeToken(start)
	_bdgcf := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_ddbgc.CBhvr, _bdgcf)
	if _ddbgc.Progress != nil {
		_dbaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0072\u006f\u0067\u0072\u0065\u0073\u0073"}}
		e.EncodeElement(_ddbgc.Progress, _dbaa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aagge *CT_GraphicalObjectFrame) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aagge.BwModeAttr != _ad.ST_BlackWhiteModeUnset {
		_fead, _bead := _aagge.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _bead != nil {
			return _bead
		}
		start.Attr = append(start.Attr, _fead)
	}
	e.EncodeToken(start)
	_affg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_aagge.NvGraphicFramePr, _affg)
	_bdgg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_aagge.Xfrm, _bdgg)
	_cdac := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_aagge.Graphic, _cdac)
	if _aagge.ExtLst != nil {
		_gfea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aagge.ExtLst, _gfea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fddae ST_TLAnimateEffectTransition) ValidateWithPath(path string) error {
	switch _fddae {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fddae))
	}
	return nil
}

// Validate validates the OleObj and its children
func (_bccgd *OleObj) Validate() error {
	return _bccgd.ValidateWithPath("\u004f\u006c\u0065\u004f\u0062\u006a")
}
func (_cbag *CT_CustomShowId) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgbf := range start.Attr {
		if _cgbf.Name.Local == "\u0069\u0064" {
			_bbc, _fdbf := _dc.ParseUint(_cgbf.Value, 10, 32)
			if _fdbf != nil {
				return _fdbf
			}
			_cbag.IdAttr = uint32(_bbc)
			continue
		}
	}
	for {
		_fdbe, _dca := d.Token()
		if _dca != nil {
			return _gc.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u006f\u0077I\u0064:\u0020\u0025\u0073", _dca)
		}
		if _afg, _cceff := _fdbe.(_d.EndElement); _cceff && _afg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffddc ST_TLPreviousActionType) Validate() error { return _ffddc.ValidateWithPath("") }
func (_fdbef ST_PhotoAlbumFrameShape) ValidateWithPath(path string) error {
	switch _fdbef {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdbef))
	}
	return nil
}

// ValidateWithPath validates the CT_Kinsoku and its children, prefixing error messages with path
func (_fbc *CT_Kinsoku) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_TLSubShapeId and its children, prefixing error messages with path
func (_cbagec *CT_TLSubShapeId) ValidateWithPath(path string) error { return nil }
func (_dbdb *CT_SlideRelationshipListEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cefee := range start.Attr {
		if _cefee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cefee.Name.Local == "\u0069\u0064" || _cefee.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cefee.Name.Local == "\u0069\u0064" {
			_eebcge, _aadc := _cefee.Value, error(nil)
			if _aadc != nil {
				return _aadc
			}
			_dbdb.IdAttr = _eebcge
			continue
		}
	}
	for {
		_dfdcc, _caca := d.Token()
		if _caca != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006ca\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079\u003a\u0020\u0025\u0073", _caca)
		}
		if _fadd, _eedb := _dfdcc.(_d.EndElement); _eedb && _fadd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the NotesMaster and its children, prefixing error messages with path
func (_bedc *NotesMaster) ValidateWithPath(path string) error {
	if _abbcg := _bedc.CT_NotesMaster.ValidateWithPath(path); _abbcg != nil {
		return _abbcg
	}
	return nil
}
func NewCT_SlideViewProperties() *CT_SlideViewProperties {
	_bdcd := &CT_SlideViewProperties{}
	_bdcd.CSldViewPr = NewCT_CommonSlideViewProperties()
	return _bdcd
}

// Validate validates the CT_ShowInfoBrowse and its children
func (_beba *CT_ShowInfoBrowse) Validate() error {
	return _beba.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065")
}

type CT_CommonViewProperties struct {

	// Variable Scale
	VarScaleAttr *bool

	// View Scale
	Scale *_ad.CT_Scale2D

	// View Origin
	Origin *_ad.CT_Point2D
}

func (_bgcda ST_SplitterBarState) Validate() error { return _bgcda.ValidateWithPath("") }
func (_cfgeg *CT_PhotoAlbum) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfgeg.BwAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0077"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cfgeg.BwAttr))})
	}
	if _cfgeg.ShowCaptionsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_cfgeg.ShowCaptionsAttr))})
	}
	if _cfgeg.LayoutAttr != ST_PhotoAlbumLayoutUnset {
		_dfdce, _bdeg := _cfgeg.LayoutAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0061\u0079\u006f\u0075\u0074"})
		if _bdeg != nil {
			return _bdeg
		}
		start.Attr = append(start.Attr, _dfdce)
	}
	if _cfgeg.FrameAttr != ST_PhotoAlbumFrameShapeUnset {
		_egcb, _eed := _cfgeg.FrameAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0072\u0061m\u0065"})
		if _eed != nil {
			return _eed
		}
		start.Attr = append(start.Attr, _egcb)
	}
	e.EncodeToken(start)
	if _cfgeg.ExtLst != nil {
		_eacfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cfgeg.ExtLst, _eacfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SmartTags and its children
func (_bdcc *CT_SmartTags) Validate() error {
	return _bdcc.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}
func (_bacec ST_Direction) String() string {
	switch _bacec {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	}
	return ""
}

type CT_NotesSlide struct {

	// Common slide data for notes slides
	CSld *CT_CommonSlideData

	// Color Scheme Map Override
	ClrMapOvr            *_ad.CT_ColorMappingOverride
	ExtLst               *CT_ExtensionListModify
	ShowMasterSpAttr     *bool
	ShowMasterPhAnimAttr *bool
}

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_fga *CT_Extension) ValidateWithPath(path string) error { return nil }
func (_fafbd *ST_PlaceholderType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gaeaa, _fgdfb := d.Token()
	if _fgdfb != nil {
		return _fgdfb
	}
	if _fabcc, _baead := _gaeaa.(_d.EndElement); _baead && _fabcc.Name == start.Name {
		*_fafbd = 1
		return nil
	}
	if _aadeb, _bbff := _gaeaa.(_d.CharData); !_bbff {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaeaa)
	} else {
		switch string(_aadeb) {
		case "":
			*_fafbd = 0
		case "\u0074\u0069\u0074l\u0065":
			*_fafbd = 1
		case "\u0062\u006f\u0064\u0079":
			*_fafbd = 2
		case "\u0063\u0074\u0072\u0054\u0069\u0074\u006c\u0065":
			*_fafbd = 3
		case "\u0073\u0075\u0062\u0054\u0069\u0074\u006c\u0065":
			*_fafbd = 4
		case "\u0064\u0074":
			*_fafbd = 5
		case "\u0073\u006c\u0064\u004e\u0075\u006d":
			*_fafbd = 6
		case "\u0066\u0074\u0072":
			*_fafbd = 7
		case "\u0068\u0064\u0072":
			*_fafbd = 8
		case "\u006f\u0062\u006a":
			*_fafbd = 9
		case "\u0063\u0068\u0061r\u0074":
			*_fafbd = 10
		case "\u0074\u0062\u006c":
			*_fafbd = 11
		case "\u0063l\u0069\u0070\u0041\u0072\u0074":
			*_fafbd = 12
		case "\u0064\u0067\u006d":
			*_fafbd = 13
		case "\u006d\u0065\u0064i\u0061":
			*_fafbd = 14
		case "\u0073\u006c\u0064\u0049\u006d\u0067":
			*_fafbd = 15
		case "\u0070\u0069\u0063":
			*_fafbd = 16
		}
	}
	_gaeaa, _fgdfb = d.Token()
	if _fgdfb != nil {
		return _fgdfb
	}
	if _eeadb, _agaa := _gaeaa.(_d.EndElement); _agaa && _eeadb.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaeaa)
}

// ValidateWithPath validates the CT_NormalViewPortion and its children, prefixing error messages with path
func (_cbegg *CT_NormalViewPortion) ValidateWithPath(path string) error {
	if _aeee := _cbegg.SzAttr.ValidateWithPath(path + "\u002fS\u007a\u0041\u0074\u0074\u0072"); _aeee != nil {
		return _aeee
	}
	return nil
}

const (
	ST_TLTimeNodePresetClassTypeUnset     ST_TLTimeNodePresetClassType = 0
	ST_TLTimeNodePresetClassTypeEntr      ST_TLTimeNodePresetClassType = 1
	ST_TLTimeNodePresetClassTypeExit      ST_TLTimeNodePresetClassType = 2
	ST_TLTimeNodePresetClassTypeEmph      ST_TLTimeNodePresetClassType = 3
	ST_TLTimeNodePresetClassTypePath      ST_TLTimeNodePresetClassType = 4
	ST_TLTimeNodePresetClassTypeVerb      ST_TLTimeNodePresetClassType = 5
	ST_TLTimeNodePresetClassTypeMediacall ST_TLTimeNodePresetClassType = 6
)

type CT_EmbeddedFontListEntry struct {

	// Embedded Font Name
	Font *_ad.CT_TextFont

	// Regular Embedded Font
	Regular *CT_EmbeddedFontDataId

	// Bold Embedded Font
	Bold *CT_EmbeddedFontDataId

	// Italic Embedded Font
	Italic *CT_EmbeddedFontDataId

	// Bold Italic Embedded Font
	BoldItalic *CT_EmbeddedFontDataId
}

// Validate validates the CT_PresentationProperties and its children
func (_agd *CT_PresentationProperties) Validate() error {
	return _agd.ValidateWithPath("\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

type ST_TLParaBuildType byte
type ST_WebScreenSize byte

func (_eaeag ST_SlideLayoutType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eaeag.String(), start)
}
func (_bdbde *CT_SlideMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fadaf:
	for {
		_ddcec, _deebf := d.Token()
		if _deebf != nil {
			return _deebf
		}
		switch _bfee := _ddcec.(type) {
		case _d.StartElement:
			switch _bfee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_eefa := NewCT_SlideMasterIdListEntry()
				if _ffcgbd := d.DecodeElement(_eefa, &_bfee); _ffcgbd != nil {
					return _ffcgbd
				}
				_bdbde.SldMasterId = append(_bdbde.SldMasterId, _eefa)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bfee.Name)
				if _deeda := d.Skip(); _deeda != nil {
					return _deeda
				}
			}
		case _d.EndElement:
			break _fadaf
		case _d.CharData:
		}
	}
	return nil
}
func (_dfdca *ST_TLTimeAnimateValueTime) Validate() error { return _dfdca.ValidateWithPath("") }

// ValidateWithPath validates the Sld and its children, prefixing error messages with path
func (_gbbbf *Sld) ValidateWithPath(path string) error {
	if _agbee := _gbbbf.CT_Slide.ValidateWithPath(path); _agbee != nil {
		return _agbee
	}
	return nil
}
func (_fgca *CT_Rel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _fgca.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_HandoutMasterIdList and its children
func (_abee *CT_HandoutMasterIdList) Validate() error {
	return _abee.ValidateWithPath("\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074")
}
func (_caced ST_IterateType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_caced.String(), start)
}
func (_fdfab ST_TLTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdfab.Uint32 != nil {
		e.EncodeToken(_d.CharData(_gc.Sprintf("\u0025\u0064", *_fdfab.Uint32)))
	}
	if _fdfab.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		e.EncodeToken(_d.CharData(_fdfab.ST_TLTimeIndefinite.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

type CT_SlideRelationshipListEntry struct{ IdAttr string }

func (_edcad *CT_SlideSorterViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edcad.CViewPr = NewCT_CommonViewProperties()
	for _, _gabfa := range start.Attr {
		if _gabfa.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_gfbcf, _befc := _dc.ParseBool(_gabfa.Value)
			if _befc != nil {
				return _befc
			}
			_edcad.ShowFormattingAttr = &_gfbcf
			continue
		}
	}
_bceg:
	for {
		_effaf, _fbebf := d.Token()
		if _fbebf != nil {
			return _fbebf
		}
		switch _aecaf := _effaf.(type) {
		case _d.StartElement:
			switch _aecaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063V\u0069\u0065\u0077\u0050\u0072"}:
				if _fcaba := d.DecodeElement(_edcad.CViewPr, &_aecaf); _fcaba != nil {
					return _fcaba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edcad.ExtLst = NewCT_ExtensionList()
				if _adea := d.DecodeElement(_edcad.ExtLst, &_aecaf); _adea != nil {
					return _adea
				}
			default:
				_de.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065w\u0050\u0072op\u0065\u0072\u0074i\u0065\u0073\u0020\u0025\u0076", _aecaf.Name)
				if _ecefa := d.Skip(); _ecefa != nil {
					return _ecefa
				}
			}
		case _d.EndElement:
			break _bceg
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_HandoutMasterIdListEntry() *CT_HandoutMasterIdListEntry {
	_ebeg := &CT_HandoutMasterIdListEntry{}
	return _ebeg
}
func (_dfag *CT_SlideMasterIdListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfag.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_dfag.IdAttr)})
	}
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _dfag.RIdAttr)})
	e.EncodeToken(start)
	if _dfag.ExtLst != nil {
		_dfcea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dfag.ExtLst, _dfcea)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_badb ST_TLAnimateColorDirection) String() string {
	switch _badb {
	case 0:
		return ""
	case 1:
		return "\u0063\u0077"
	case 2:
		return "\u0063\u0063\u0077"
	}
	return ""
}
func (_bag *CT_Comment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bag.Pos = _ad.NewCT_Point2D()
	for _, _abe := range start.Attr {
		if _abe.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_eda, _eaab := _dc.ParseUint(_abe.Value, 10, 32)
			if _eaab != nil {
				return _eaab
			}
			_bag.AuthorIdAttr = uint32(_eda)
			continue
		}
		if _abe.Name.Local == "\u0064\u0074" {
			_efbdg, _ddc := ParseStdlibTime(_abe.Value)
			if _ddc != nil {
				return _ddc
			}
			_bag.DtAttr = &_efbdg
			continue
		}
		if _abe.Name.Local == "\u0069\u0064\u0078" {
			_ecbd, _dfa := _dc.ParseUint(_abe.Value, 10, 32)
			if _dfa != nil {
				return _dfa
			}
			_bag.IdxAttr = uint32(_ecbd)
			continue
		}
	}
_degg:
	for {
		_bab, _gggc := d.Token()
		if _gggc != nil {
			return _gggc
		}
		switch _ddf := _bab.(type) {
		case _d.StartElement:
			switch _ddf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _ceag := d.DecodeElement(_bag.Pos, &_ddf); _ceag != nil {
					return _ceag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _gbc := d.DecodeElement(&_bag.Text, &_ddf); _gbc != nil {
					return _gbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bag.ExtLst = NewCT_ExtensionListModify()
				if _ffeg := d.DecodeElement(_bag.ExtLst, &_ddf); _ffeg != nil {
					return _ffeg
				}
			default:
				_de.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _ddf.Name)
				if _dcg := d.Skip(); _dcg != nil {
					return _dcg
				}
			}
		case _d.EndElement:
			break _degg
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantStringVal and its children, prefixing error messages with path
func (_dcdc *CT_TLAnimVariantStringVal) ValidateWithPath(path string) error { return nil }
func (_aebee *CT_NotesMasterIdList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fbdf:
	for {
		_ceaf, _fece := d.Token()
		if _fece != nil {
			return _fece
		}
		switch _cfec := _ceaf.(type) {
		case _d.StartElement:
			switch _cfec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064"}:
				_aebee.NotesMasterId = NewCT_NotesMasterIdListEntry()
				if _eaeb := d.DecodeElement(_aebee.NotesMasterId, &_cfec); _eaeb != nil {
					return _eaeb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _cfec.Name)
				if _bgfa := d.Skip(); _bgfa != nil {
					return _bgfa
				}
			}
		case _d.EndElement:
			break _fbdf
		case _d.CharData:
		}
	}
	return nil
}
func (_abeeb *Notes) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abeeb.CT_NotesSlide = *NewCT_NotesSlide()
	for _, _gfae := range start.Attr {
		if _gfae.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_eefd, _cabba := _dc.ParseBool(_gfae.Value)
			if _cabba != nil {
				return _cabba
			}
			_abeeb.ShowMasterSpAttr = &_eefd
			continue
		}
		if _gfae.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_adcfb, _daeb := _dc.ParseBool(_gfae.Value)
			if _daeb != nil {
				return _daeb
			}
			_abeeb.ShowMasterPhAnimAttr = &_adcfb
			continue
		}
	}
_ccba:
	for {
		_gcfcf, _eadab := d.Token()
		if _eadab != nil {
			return _eadab
		}
		switch _eccgf := _gcfcf.(type) {
		case _d.StartElement:
			switch _eccgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _bcdcb := d.DecodeElement(_abeeb.CSld, &_eccgf); _bcdcb != nil {
					return _bcdcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_abeeb.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _aegcb := d.DecodeElement(_abeeb.ClrMapOvr, &_eccgf); _aegcb != nil {
					return _aegcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abeeb.ExtLst = NewCT_ExtensionListModify()
				if _bffga := d.DecodeElement(_abeeb.ExtLst, &_eccgf); _bffga != nil {
					return _bffga
				}
			default:
				_de.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u004e\u006f\u0074e\u0073 \u0025\u0076", _eccgf.Name)
				if _faadc := d.Skip(); _faadc != nil {
					return _faadc
				}
			}
		case _d.EndElement:
			break _ccba
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLCommonTimeNodeData and its children
func (_aeabe *CT_TLCommonTimeNodeData) Validate() error {
	return _aeabe.ValidateWithPath("\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061")
}
func NewCT_TLTimeAnimateValueList() *CT_TLTimeAnimateValueList {
	_fdabc := &CT_TLTimeAnimateValueList{}
	return _fdabc
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_fgeag *CT_HeaderFooter) ValidateWithPath(path string) error {
	if _fgeag.ExtLst != nil {
		if _adac := _fgeag.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adac != nil {
			return _adac
		}
	}
	return nil
}
func (_dfbaf ST_TLAnimateColorDirection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dfbaf.String(), start)
}

// ValidateWithPath validates the CT_TimeNodeList and its children, prefixing error messages with path
func (_efab *CT_TimeNodeList) ValidateWithPath(path string) error {
	for _fcbaa, _ddfeb := range _efab.Par {
		if _bbdgg := _ddfeb.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0050\u0061\u0072\u005b\u0025\u0064\u005d", path, _fcbaa)); _bbdgg != nil {
			return _bbdgg
		}
	}
	for _dfee, _egdf := range _efab.Seq {
		if _caabfe := _egdf.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0071\u005b\u0025\u0064\u005d", path, _dfee)); _caabfe != nil {
			return _caabfe
		}
	}
	for _dagbd, _fgedf := range _efab.Excl {
		if _fffc := _fgedf.ValidateWithPath(_gc.Sprintf("%\u0073\u002f\u0045\u0078\u0063\u006c\u005b\u0025\u0064\u005d", path, _dagbd)); _fffc != nil {
			return _fffc
		}
	}
	for _egfca, _fccff := range _efab.Anim {
		if _bfdff := _fccff.ValidateWithPath(_gc.Sprintf("%\u0073\u002f\u0041\u006e\u0069\u006d\u005b\u0025\u0064\u005d", path, _egfca)); _bfdff != nil {
			return _bfdff
		}
	}
	for _ababf, _aadf := range _efab.AnimClr {
		if _gabgd := _aadf.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0043\u006cr\u005b\u0025\u0064\u005d", path, _ababf)); _gabgd != nil {
			return _gabgd
		}
	}
	for _eagcg, _cecbb := range _efab.AnimEffect {
		if _acgbb := _cecbb.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0045\u0066\u0066\u0065\u0063t\u005b\u0025\u0064\u005d", path, _eagcg)); _acgbb != nil {
			return _acgbb
		}
	}
	for _cdcea, _adabe := range _efab.AnimMotion {
		if _dcdbff := _adabe.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u004d\u006f\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _cdcea)); _dcdbff != nil {
			return _dcdbff
		}
	}
	for _fcbad, _ggfbb := range _efab.AnimRot {
		if _gfabg := _ggfbb.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0041\u006e\u0069\u006d\u0052\u006ft\u005b\u0025\u0064\u005d", path, _fcbad)); _gfabg != nil {
			return _gfabg
		}
	}
	for _gbeae, _ebgef := range _efab.AnimScale {
		if _aadga := _ebgef.ValidateWithPath(_gc.Sprintf("\u0025\u0073/\u0041\u006e\u0069m\u0053\u0063\u0061\u006c\u0065\u005b\u0025\u0064\u005d", path, _gbeae)); _aadga != nil {
			return _aadga
		}
	}
	for _fadc, _ccbeb := range _efab.Cmd {
		if _eeff := _ccbeb.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0043\u006d\u0064\u005b\u0025\u0064\u005d", path, _fadc)); _eeff != nil {
			return _eeff
		}
	}
	for _debfe, _fffaad := range _efab.Set {
		if _gdgad := _fffaad.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _debfe)); _gdgad != nil {
			return _gdgad
		}
	}
	for _aegfe, _gffdg := range _efab.Audio {
		if _bbca := _gffdg.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fA\u0075\u0064\u0069\u006f\u005b\u0025\u0064\u005d", path, _aegfe)); _bbca != nil {
			return _bbca
		}
	}
	for _cagcg, _gcgdf := range _efab.Video {
		if _feecbb := _gcgdf.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fV\u0069\u0064\u0065\u006f\u005b\u0025\u0064\u005d", path, _cagcg)); _feecbb != nil {
			return _feecbb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SlideLayoutIdListEntry and its children, prefixing error messages with path
func (_bbgd *CT_SlideLayoutIdListEntry) ValidateWithPath(path string) error {
	if _bbgd.IdAttr != nil {
		if *_bbgd.IdAttr < 2147483648 {
			return _gc.Errorf("\u0025\u0073\u002f\u006d\u002e\u0049\u0064A\u0074\u0074\u0072 \u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003e\u003d\u0020\u0032\u0031\u0034\u0037\u0034\u0038\u0033\u0036\u0034\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_bbgd.IdAttr)
		}
	}
	if _bbgd.ExtLst != nil {
		if _dgfbb := _bbgd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgfbb != nil {
			return _dgfbb
		}
	}
	return nil
}

// Validate validates the CT_SlideTiming and its children
func (_acbc *CT_SlideTiming) Validate() error {
	return _acbc.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067")
}
func (_dcbgb ST_TLAnimateBehaviorCalcMode) Validate() error { return _dcbgb.ValidateWithPath("") }
func (_fbdee *CT_SlideMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbdee.PreserveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0072\u0065\u0073\u0065\u0072\u0076\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_fbdee.PreserveAttr))})
	}
	e.EncodeToken(start)
	_cadf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_fbdee.CSld, _cadf)
	_decade := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_fbdee.ClrMap, _decade)
	if _fbdee.SldLayoutIdLst != nil {
		_caagc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003as\u006c\u0064\u004ca\u0079\u006f\u0075\u0074\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_fbdee.SldLayoutIdLst, _caagc)
	}
	if _fbdee.Transition != nil {
		_ffbda := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fbdee.Transition, _ffbda)
	}
	if _fbdee.Timing != nil {
		_fffaa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0069\u006d\u0069\u006e\u0067"}}
		e.EncodeElement(_fbdee.Timing, _fffaa)
	}
	if _fbdee.Hf != nil {
		_aabbg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_fbdee.Hf, _aabbg)
	}
	if _fbdee.TxStyles != nil {
		_cddggd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_fbdee.TxStyles, _cddggd)
	}
	if _fbdee.ExtLst != nil {
		_gfbc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbdee.ExtLst, _gfbc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLCommonTimeNodeData struct {

	// ID
	IdAttr *uint32

	// Preset ID
	PresetIDAttr *int32

	// Preset Types
	PresetClassAttr ST_TLTimeNodePresetClassType

	// Preset SubType
	PresetSubtypeAttr *int32

	// Duration
	DurAttr *ST_TLTime

	// Repeat Count
	RepeatCountAttr *ST_TLTime

	// Repeat Duration
	RepeatDurAttr *ST_TLTime

	// Speed
	SpdAttr *_ad.ST_Percentage

	// Acceleration
	AccelAttr *_ad.ST_PositiveFixedPercentage

	// Deceleration
	DecelAttr *_ad.ST_PositiveFixedPercentage

	// Auto Reverse
	AutoRevAttr *bool

	// Restart
	RestartAttr ST_TLTimeNodeRestartType

	// Fill
	FillAttr ST_TLTimeNodeFillType

	// Synchronization Behavior
	SyncBehaviorAttr ST_TLTimeNodeSyncType

	// Time Filter
	TmFilterAttr *string

	// Event Filter
	EvtFilterAttr *string

	// Display
	DisplayAttr *bool

	// Master Relation
	MasterRelAttr ST_TLTimeNodeMasterRelation

	// Build level
	BldLvlAttr *int32

	// Group ID
	GrpIdAttr *uint32

	// After Effect
	AfterEffectAttr *bool

	// Node Type
	NodeTypeAttr ST_TLTimeNodeType

	// Node Placeholder
	NodePhAttr *bool

	// Start Conditions List
	StCondLst *CT_TLTimeConditionList

	// End Conditions List
	EndCondLst *CT_TLTimeConditionList

	// EndSync
	EndSync *CT_TLTimeCondition

	// Iterate
	Iterate *CT_TLIterateData

	// Children Time Node List
	ChildTnLst *CT_TimeNodeList

	// Sub-TimeNodes List
	SubTnLst *CT_TimeNodeList
}

func (_egf *CT_ConnectorNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_egf.CNvPr = _ad.NewCT_NonVisualDrawingProps()
	_egf.CNvCxnSpPr = _ad.NewCT_NonVisualConnectorProperties()
	_egf.NvPr = NewCT_ApplicationNonVisualDrawingProps()
_fdec:
	for {
		_ccdd, _gga := d.Token()
		if _gga != nil {
			return _gga
		}
		switch _egd := _ccdd.(type) {
		case _d.StartElement:
			switch _egd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cddg := d.DecodeElement(_egf.CNvPr, &_egd); _cddg != nil {
					return _cddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _bcfa := d.DecodeElement(_egf.CNvCxnSpPr, &_egd); _bcfa != nil {
					return _bcfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0050\u0072"}:
				if _ddab := d.DecodeElement(_egf.NvPr, &_egd); _ddab != nil {
					return _ddab
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _egd.Name)
				if _egdg := d.Skip(); _egdg != nil {
					return _egdg
				}
			}
		case _d.EndElement:
			break _fdec
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupShapeNonVisual and its children, prefixing error messages with path
func (_dbae *CT_GroupShapeNonVisual) ValidateWithPath(path string) error {
	if _bcgd := _dbae.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _bcgd != nil {
		return _bcgd
	}
	if _cdb := _dbae.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cdb != nil {
		return _cdb
	}
	if _cebe := _dbae.NvPr.ValidateWithPath(path + "\u002f\u004e\u0076P\u0072"); _cebe != nil {
		return _cebe
	}
	return nil
}
func (_dbgebd *CT_TLMediaNodeVideo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dbgebd.FullScrnAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0075\u006c\u006c\u0053\u0063\u0072\u006e"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dbgebd.FullScrnAttr))})
	}
	e.EncodeToken(start)
	_cfbd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063M\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}}
	e.EncodeElement(_dbgebd.CMediaNode, _cfbd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TLIterateData and its children
func (_bagb *CT_TLIterateData) Validate() error {
	return _bagb.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061")
}
func (_ggdag ST_TLParaBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ggdag.String(), start)
}
func NewCT_TLTriggerRuntimeNode() *CT_TLTriggerRuntimeNode {
	_gadaa := &CT_TLTriggerRuntimeNode{}
	_gadaa.ValAttr = ST_TLTriggerRuntimeNode(1)
	return _gadaa
}
func (_bcdf *CT_TLAnimateScaleBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bcdf.ZoomContentsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a\u006f\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_bcdf.ZoomContentsAttr))})
	}
	e.EncodeToken(start)
	_bggaa := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_bcdf.CBhvr, _bggaa)
	if _bcdf.By != nil {
		_badgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_bcdf.By, _badgf)
	}
	if _bcdf.From != nil {
		_cdfa := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_bcdf.From, _cdfa)
	}
	if _bcdf.To != nil {
		_bfabd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_bcdf.To, _bfabd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_acaca ST_PhotoAlbumFrameShape) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bcbde := _d.Attr{}
	_bcbde.Name = name
	switch _acaca {
	case ST_PhotoAlbumFrameShapeUnset:
		_bcbde.Value = ""
	case ST_PhotoAlbumFrameShapeFrameStyle1:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0031"
	case ST_PhotoAlbumFrameShapeFrameStyle2:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0032"
	case ST_PhotoAlbumFrameShapeFrameStyle3:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0033"
	case ST_PhotoAlbumFrameShapeFrameStyle4:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0034"
	case ST_PhotoAlbumFrameShapeFrameStyle5:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0035"
	case ST_PhotoAlbumFrameShapeFrameStyle6:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0036"
	case ST_PhotoAlbumFrameShapeFrameStyle7:
		_bcbde.Value = "f\u0072\u0061\u006d\u0065\u0053\u0074\u0079\u006c\u0065\u0037"
	}
	return _bcbde, nil
}
func (_dede *CT_Presentation) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dede.ServerZoomAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u005a\u006f\u006f\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_dede.ServerZoomAttr)})
	}
	if _dede.FirstSlideNumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u006c\u0069\u0064\u0065\u004e\u0075\u006d"}, Value: _gc.Sprintf("\u0025\u0076", *_dede.FirstSlideNumAttr)})
	}
	if _dede.ShowSpecialPlsOnTitleSldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073h\u006f\u0077\u0053\u0070\u0065\u0063\u0069\u0061\u006c\u0050\u006cs\u004f\u006e\u0054\u0069\u0074\u006c\u0065\u0053\u006c\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.ShowSpecialPlsOnTitleSldAttr))})
	}
	if _dede.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.RtlAttr))})
	}
	if _dede.RemovePersonalInfoOnSaveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072e\u006d\u006f\u0076\u0065\u0050\u0065\u0072\u0073\u006f\u006e\u0061l\u0049\u006e\u0066\u006f\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.RemovePersonalInfoOnSaveAttr))})
	}
	if _dede.CompatModeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006d\u0070\u0061\u0074\u004d\u006f\u0064\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.CompatModeAttr))})
	}
	if _dede.StrictFirstAndLastCharsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0072ic\u0074\u0046\u0069\u0072\u0073\u0074\u0041\u006e\u0064\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.StrictFirstAndLastCharsAttr))})
	}
	if _dede.EmbedTrueTypeFontsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065m\u0062e\u0064\u0054\u0072\u0075\u0065T\u0079\u0070e\u0046\u006f\u006e\u0074\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.EmbedTrueTypeFontsAttr))})
	}
	if _dede.SaveSubsetFontsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073a\u0076e\u0053\u0075\u0062\u0073\u0065\u0074\u0046\u006f\u006e\u0074\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.SaveSubsetFontsAttr))})
	}
	if _dede.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_dede.AutoCompressPicturesAttr))})
	}
	if _dede.BookmarkIdSeedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006f\u006f\u006b\u006d\u0061\u0072\u006b\u0049d\u0053\u0065\u0065\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_dede.BookmarkIdSeedAttr)})
	}
	if _dede.ConformanceAttr != _c.ST_ConformanceClassUnset {
		_ddgc, _bdfaf := _dede.ConformanceAttr.MarshalXMLAttr(_d.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _bdfaf != nil {
			return _bdfaf
		}
		start.Attr = append(start.Attr, _ddgc)
	}
	e.EncodeToken(start)
	if _dede.SldMasterIdLst != nil {
		_abcgf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003as\u006c\u0064\u004da\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.SldMasterIdLst, _abcgf)
	}
	if _dede.NotesMasterIdLst != nil {
		_edcg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006eo\u0074\u0065\u0073\u004d\u0061s\u0074\u0065r\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.NotesMasterIdLst, _edcg)
	}
	if _dede.HandoutMasterIdLst != nil {
		_cacb := _d.StartElement{Name: _d.Name{Local: "p\u003ah\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061s\u0074\u0065\u0072\u0049dL\u0073\u0074"}}
		e.EncodeElement(_dede.HandoutMasterIdLst, _cacb)
	}
	if _dede.SldIdLst != nil {
		_eebb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0073\u006c\u0064\u0049\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.SldIdLst, _eebb)
	}
	if _dede.SldSz != nil {
		_ffca := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u006c\u0064\u0053\u007a"}}
		e.EncodeElement(_dede.SldSz, _ffca)
	}
	_afeag := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006e\u006f\u0074\u0065\u0073\u0053z"}}
	e.EncodeElement(_dede.NotesSz, _afeag)
	if _dede.SmartTags != nil {
		_edde := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_dede.SmartTags, _edde)
	}
	if _dede.EmbeddedFontLst != nil {
		_dcag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.EmbeddedFontLst, _dcag)
	}
	if _dede.CustShowLst != nil {
		_bebg := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.CustShowLst, _bebg)
	}
	if _dede.PhotoAlbum != nil {
		_gbgca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070h\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d"}}
		e.EncodeElement(_dede.PhotoAlbum, _gbgca)
	}
	if _dede.CustDataLst != nil {
		_bfda := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.CustDataLst, _bfda)
	}
	if _dede.Kinsoku != nil {
		_gbde := _d.StartElement{Name: _d.Name{Local: "\u0070:\u006b\u0069\u006e\u0073\u006f\u006bu"}}
		e.EncodeElement(_dede.Kinsoku, _gbde)
	}
	if _dede.DefaultTextStyle != nil {
		_efgeb := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0064e\u0066\u0061\u0075\u006c\u0074T\u0065\u0078t\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_dede.DefaultTextStyle, _efgeb)
	}
	if _dede.ModifyVerifier != nil {
		_acdf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003am\u006f\u0064\u0069f\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072"}}
		e.EncodeElement(_dede.ModifyVerifier, _acdf)
	}
	if _dede.ExtLst != nil {
		_caac := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dede.ExtLst, _caac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_efbba *CT_Slide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efbba.CSld = NewCT_CommonSlideData()
	for _, _daea := range start.Attr {
		if _daea.Name.Local == "\u0073\u0068\u006f\u0077" {
			_adfeg, _fdddd := _dc.ParseBool(_daea.Value)
			if _fdddd != nil {
				return _fdddd
			}
			_efbba.ShowAttr = &_adfeg
			continue
		}
		if _daea.Name.Local == "\u0073\u0068\u006fw\u004d\u0061\u0073\u0074\u0065\u0072\u0053\u0070" {
			_fccf, _gebd := _dc.ParseBool(_daea.Value)
			if _gebd != nil {
				return _gebd
			}
			_efbba.ShowMasterSpAttr = &_fccf
			continue
		}
		if _daea.Name.Local == "\u0073\u0068o\u0077\u004d\u0061s\u0074\u0065\u0072\u0050\u0068\u0041\u006e\u0069\u006d" {
			_fabebg, _dfcba := _dc.ParseBool(_daea.Value)
			if _dfcba != nil {
				return _dfcba
			}
			_efbba.ShowMasterPhAnimAttr = &_fabebg
			continue
		}
	}
_cecc:
	for {
		_dfgeg, _fafa := d.Token()
		if _fafa != nil {
			return _fafa
		}
		switch _fbec := _dfgeg.(type) {
		case _d.StartElement:
			switch _fbec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0053\u006c\u0064"}:
				if _caaf := d.DecodeElement(_efbba.CSld, &_fbec); _caaf != nil {
					return _caaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u004d\u0061\u0070\u004f\u0076r"}:
				_efbba.ClrMapOvr = _ad.NewCT_ColorMappingOverride()
				if _gecb := d.DecodeElement(_efbba.ClrMapOvr, &_fbec); _gecb != nil {
					return _gecb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e"}:
				_efbba.Transition = NewCT_SlideTransition()
				if _ecae := d.DecodeElement(_efbba.Transition, &_fbec); _ecae != nil {
					return _ecae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006d\u0069\u006e\u0067"}:
				_efbba.Timing = NewCT_SlideTiming()
				if _caaa := d.DecodeElement(_efbba.Timing, &_fbec); _caaa != nil {
					return _caaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efbba.ExtLst = NewCT_ExtensionListModify()
				if _cabde := d.DecodeElement(_efbba.ExtLst, &_fbec); _cabde != nil {
					return _cabde
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0020\u0025\u0076", _fbec.Name)
				if _dadc := d.Skip(); _dadc != nil {
					return _dadc
				}
			}
		case _d.EndElement:
			break _cecc
		case _d.CharData:
		}
	}
	return nil
}
func (_cabf *CT_ControlList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_edcb:
	for {
		_fbac, _abf := d.Token()
		if _abf != nil {
			return _abf
		}
		switch _eebe := _fbac.(type) {
		case _d.StartElement:
			switch _eebe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_aabc := NewCT_Control()
				if _fbdb := d.DecodeElement(_aabc, &_eebe); _fbdb != nil {
					return _fbdb
				}
				_cabf.Control = append(_cabf.Control, _aabc)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006cL\u0069s\u0074\u0020\u0025\u0076", _eebe.Name)
				if _aaa := d.Skip(); _aaa != nil {
					return _aaa
				}
			}
		case _d.EndElement:
			break _edcb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HandoutMaster and its children, prefixing error messages with path
func (_feba *CT_HandoutMaster) ValidateWithPath(path string) error {
	if _ecdg := _feba.CSld.ValidateWithPath(path + "\u002f\u0043\u0053l\u0064"); _ecdg != nil {
		return _ecdg
	}
	if _faeg := _feba.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _faeg != nil {
		return _faeg
	}
	if _feba.Hf != nil {
		if _gddf := _feba.Hf.ValidateWithPath(path + "\u002f\u0048\u0066"); _gddf != nil {
			return _gddf
		}
	}
	if _feba.ExtLst != nil {
		if _bdfb := _feba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdfb != nil {
			return _bdfb
		}
	}
	return nil
}
func (_fdcgb *EG_ShowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_adbec:
	for {
		_daeab, _ecbdd := d.Token()
		if _ecbdd != nil {
			return _ecbdd
		}
		switch _fecfe := _daeab.(type) {
		case _d.StartElement:
			switch _fecfe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0065\u0073\u0065\u006e\u0074"}:
				_fdcgb.Present = NewCT_Empty()
				if _cbeec := d.DecodeElement(_fdcgb.Present, &_fecfe); _cbeec != nil {
					return _cbeec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006f\u0077\u0073\u0065"}:
				_fdcgb.Browse = NewCT_ShowInfoBrowse()
				if _gaea := d.DecodeElement(_fdcgb.Browse, &_fecfe); _gaea != nil {
					return _gaea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0069\u006fs\u006b"}:
				_fdcgb.Kiosk = NewCT_ShowInfoKiosk()
				if _acfeg := d.DecodeElement(_fdcgb.Kiosk, &_fecfe); _acfeg != nil {
					return _acfeg
				}
			default:
				_de.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _fecfe.Name)
				if _daacc := d.Skip(); _daacc != nil {
					return _daacc
				}
			}
		case _d.EndElement:
			break _adbec
		case _d.CharData:
		}
	}
	return nil
}

type ST_TLTimeNodeType byte

// Validate validates the CT_StringTag and its children
func (_fcda *CT_StringTag) Validate() error {
	return _fcda.ValidateWithPath("\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067")
}
func (_gaeb ST_OleObjectFollowColorScheme) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aafbe := _d.Attr{}
	_aafbe.Name = name
	switch _gaeb {
	case ST_OleObjectFollowColorSchemeUnset:
		_aafbe.Value = ""
	case ST_OleObjectFollowColorSchemeNone:
		_aafbe.Value = "\u006e\u006f\u006e\u0065"
	case ST_OleObjectFollowColorSchemeFull:
		_aafbe.Value = "\u0066\u0075\u006c\u006c"
	case ST_OleObjectFollowColorSchemeTextAndBackground:
		_aafbe.Value = "\u0074\u0065\u0078\u0074\u0041\u006e\u0064\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064"
	}
	return _aafbe, nil
}

// ValidateWithPath validates the CT_TLTimeNodeSequence and its children, prefixing error messages with path
func (_bedb *CT_TLTimeNodeSequence) ValidateWithPath(path string) error {
	if _fcgfc := _bedb.PrevAcAttr.ValidateWithPath(path + "/\u0050\u0072\u0065\u0076\u0041\u0063\u0041\u0074\u0074\u0072"); _fcgfc != nil {
		return _fcgfc
	}
	if _acbeg := _bedb.NextAcAttr.ValidateWithPath(path + "/\u004e\u0065\u0078\u0074\u0041\u0063\u0041\u0074\u0074\u0072"); _acbeg != nil {
		return _acbeg
	}
	if _ddgag := _bedb.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _ddgag != nil {
		return _ddgag
	}
	if _bedb.PrevCondLst != nil {
		if _fdaeag := _bedb.PrevCondLst.ValidateWithPath(path + "\u002f\u0050\u0072e\u0076\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _fdaeag != nil {
			return _fdaeag
		}
	}
	if _bedb.NextCondLst != nil {
		if _addaf := _bedb.NextCondLst.ValidateWithPath(path + "\u002f\u004e\u0065x\u0074\u0043\u006f\u006e\u0064\u004c\u0073\u0074"); _addaf != nil {
			return _addaf
		}
	}
	return nil
}

// Validate validates the CT_IndexRange and its children
func (_abgc *CT_IndexRange) Validate() error {
	return _abgc.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065")
}

type CT_HandoutMasterIdList struct {

	// Handout Master ID
	HandoutMasterId *CT_HandoutMasterIdListEntry
}

func (_ecbf *CT_SlideRelationshipListEntry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _ecbf.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TLTimeAnimateValue struct {

	// Time
	TmAttr *ST_TLTimeAnimateValueTime

	// Formula
	FmlaAttr *string

	// Value
	Val *CT_TLAnimVariant
}

func (_ceacd *ST_TLTimeNodeRestartType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ceacd = 0
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_ceacd = 1
	case "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065":
		*_ceacd = 2
	case "\u006e\u0065\u0076e\u0072":
		*_ceacd = 3
	}
	return nil
}
func (_dfffb ST_SlideSizeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fgdc := _d.Attr{}
	_fgdc.Name = name
	switch _dfffb {
	case ST_SlideSizeTypeUnset:
		_fgdc.Value = ""
	case ST_SlideSizeTypeScreen4x3:
		_fgdc.Value = "\u0073c\u0072\u0065\u0065\u006e\u0034\u00783"
	case ST_SlideSizeTypeLetter:
		_fgdc.Value = "\u006c\u0065\u0074\u0074\u0065\u0072"
	case ST_SlideSizeTypeA4:
		_fgdc.Value = "\u0041\u0034"
	case ST_SlideSizeType35mm:
		_fgdc.Value = "\u0033\u0035\u006d\u006d"
	case ST_SlideSizeTypeOverhead:
		_fgdc.Value = "\u006f\u0076\u0065\u0072\u0068\u0065\u0061\u0064"
	case ST_SlideSizeTypeBanner:
		_fgdc.Value = "\u0062\u0061\u006e\u006e\u0065\u0072"
	case ST_SlideSizeTypeCustom:
		_fgdc.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	case ST_SlideSizeTypeLedger:
		_fgdc.Value = "\u006c\u0065\u0064\u0067\u0065\u0072"
	case ST_SlideSizeTypeA3:
		_fgdc.Value = "\u0041\u0033"
	case ST_SlideSizeTypeB4ISO:
		_fgdc.Value = "\u0042\u0034\u0049S\u004f"
	case ST_SlideSizeTypeB5ISO:
		_fgdc.Value = "\u0042\u0035\u0049S\u004f"
	case ST_SlideSizeTypeB4JIS:
		_fgdc.Value = "\u0042\u0034\u004aI\u0053"
	case ST_SlideSizeTypeB5JIS:
		_fgdc.Value = "\u0042\u0035\u004aI\u0053"
	case ST_SlideSizeTypeHagakiCard:
		_fgdc.Value = "\u0068\u0061\u0067\u0061\u006b\u0069\u0043\u0061\u0072\u0064"
	case ST_SlideSizeTypeScreen16x9:
		_fgdc.Value = "\u0073\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0039"
	case ST_SlideSizeTypeScreen16x10:
		_fgdc.Value = "s\u0063\u0072\u0065\u0065\u006e\u0031\u0036\u0078\u0031\u0030"
	}
	return _fgdc, nil
}
func NewCT_SlideMasterTextStyles() *CT_SlideMasterTextStyles {
	_bbaa := &CT_SlideMasterTextStyles{}
	return _bbaa
}

// ValidateWithPath validates the CT_TLTimeCondition and its children, prefixing error messages with path
func (_gbebe *CT_TLTimeCondition) ValidateWithPath(path string) error {
	if _faad := _gbebe.EvtAttr.ValidateWithPath(path + "\u002f\u0045\u0076\u0074\u0041\u0074\u0074\u0072"); _faad != nil {
		return _faad
	}
	if _gbebe.DelayAttr != nil {
		if _fbcfb := _gbebe.DelayAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u006c\u0061\u0079\u0041\u0074\u0074\u0072"); _fbcfb != nil {
			return _fbcfb
		}
	}
	if _gbebe.TgtEl != nil {
		if _facee := _gbebe.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _facee != nil {
			return _facee
		}
	}
	if _gbebe.Tn != nil {
		if _acee := _gbebe.Tn.ValidateWithPath(path + "\u002f\u0054\u006e"); _acee != nil {
			return _acee
		}
	}
	if _gbebe.Rtn != nil {
		if _eefab := _gbebe.Rtn.ValidateWithPath(path + "\u002f\u0052\u0074\u006e"); _eefab != nil {
			return _eefab
		}
	}
	return nil
}
func (_bdgfe ST_Direction) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fddbb := _d.Attr{}
	_fddbb.Name = name
	switch _bdgfe {
	case ST_DirectionUnset:
		_fddbb.Value = ""
	case ST_DirectionHorz:
		_fddbb.Value = "\u0068\u006f\u0072\u007a"
	case ST_DirectionVert:
		_fddbb.Value = "\u0076\u0065\u0072\u0074"
	}
	return _fddbb, nil
}

// ValidateWithPath validates the CT_CommonSlideData and its children, prefixing error messages with path
func (_add *CT_CommonSlideData) ValidateWithPath(path string) error {
	if _add.Bg != nil {
		if _ebd := _add.Bg.ValidateWithPath(path + "\u002f\u0042\u0067"); _ebd != nil {
			return _ebd
		}
	}
	if _baf := _add.SpTree.ValidateWithPath(path + "\u002fS\u0070\u0054\u0072\u0065\u0065"); _baf != nil {
		return _baf
	}
	if _add.CustDataLst != nil {
		if _aed := _add.CustDataLst.ValidateWithPath(path + "\u002f\u0043\u0075s\u0074\u0044\u0061\u0074\u0061\u004c\u0073\u0074"); _aed != nil {
			return _aed
		}
	}
	if _add.Controls != nil {
		if _dfe := _add.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _dfe != nil {
			return _dfe
		}
	}
	if _add.ExtLst != nil {
		if _gdbd := _add.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbd != nil {
			return _gdbd
		}
	}
	return nil
}
func (_becfe *CT_TLAnimateColorBehavior) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _becfe.ClrSpcAttr != ST_TLAnimateColorSpaceUnset {
		_agcgd, _adgf := _becfe.ClrSpcAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006c\u0072\u0053\u0070\u0063"})
		if _adgf != nil {
			return _adgf
		}
		start.Attr = append(start.Attr, _agcgd)
	}
	if _becfe.DirAttr != ST_TLAnimateColorDirectionUnset {
		_begf, _gbef := _becfe.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
		if _gbef != nil {
			return _gbef
		}
		start.Attr = append(start.Attr, _begf)
	}
	e.EncodeToken(start)
	_ddcgc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0063\u0042\u0068\u0076\u0072"}}
	e.EncodeElement(_becfe.CBhvr, _ddcgc)
	if _becfe.By != nil {
		_ddbeb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0079"}}
		e.EncodeElement(_becfe.By, _ddbeb)
	}
	if _becfe.From != nil {
		_acgfb := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0066\u0072\u006f\u006d"}}
		e.EncodeElement(_becfe.From, _acgfb)
	}
	if _becfe.To != nil {
		_bbfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u006f"}}
		e.EncodeElement(_becfe.To, _bbfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_OptionalBlackTransition and its children
func (_ffbc *CT_OptionalBlackTransition) Validate() error {
	return _ffbc.ValidateWithPath("\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e")
}
func NewCmLst() *CmLst {
	_cgegb := &CmLst{}
	_cgegb.CT_CommentList = *NewCT_CommentList()
	return _cgegb
}
func (_dagaae ST_TLTimeNodeRestartType) ValidateWithPath(path string) error {
	switch _dagaae {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dagaae))
	}
	return nil
}

// ValidateWithPath validates the CT_Guide and its children, prefixing error messages with path
func (_dceb *CT_Guide) ValidateWithPath(path string) error {
	if _eabg := _dceb.OrientAttr.ValidateWithPath(path + "/\u004f\u0072\u0069\u0065\u006e\u0074\u0041\u0074\u0074\u0072"); _eabg != nil {
		return _eabg
	}
	if _dceb.PosAttr != nil {
		if _cgeb := _dceb.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _cgeb != nil {
			return _cgeb
		}
	}
	return nil
}
func NewCT_OleObjectChoice() *CT_OleObjectChoice { _cacf := &CT_OleObjectChoice{}; return _cacf }

type CT_TLAnimVariantStringVal struct {

	// Value
	ValAttr string
}

func (_fdaeb *CT_SlideSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0078"}, Value: _gc.Sprintf("\u0025\u0076", _fdaeb.CxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0079"}, Value: _gc.Sprintf("\u0025\u0076", _fdaeb.CyAttr)})
	if _fdaeb.TypeAttr != ST_SlideSizeTypeUnset {
		_cdae, _fdbg := _fdaeb.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _fdbg != nil {
			return _fdbg
		}
		start.Attr = append(start.Attr, _cdae)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLTemplate and its children, prefixing error messages with path
func (_bcdga *CT_TLTemplate) ValidateWithPath(path string) error {
	if _cfda := _bcdga.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _cfda != nil {
		return _cfda
	}
	return nil
}
func (_ecfb *CT_TLMediaNodeAudio) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecfb.CMediaNode = NewCT_TLCommonMediaNodeData()
	for _, _adaa := range start.Attr {
		if _adaa.Name.Local == "i\u0073\u004e\u0061\u0072\u0072\u0061\u0074\u0069\u006f\u006e" {
			_dbgeb, _fgefg := _dc.ParseBool(_adaa.Value)
			if _fgefg != nil {
				return _fgefg
			}
			_ecfb.IsNarrationAttr = &_dbgeb
			continue
		}
	}
_facfd:
	for {
		_dedb, _bdec := d.Token()
		if _bdec != nil {
			return _bdec
		}
		switch _fggb := _dedb.(type) {
		case _d.StartElement:
			switch _fggb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004d\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065"}:
				if _agdcb := d.DecodeElement(_ecfb.CMediaNode, &_fggb); _agdcb != nil {
					return _agdcb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u004d\u0065\u0064\u0069\u0061No\u0064\u0065\u0041\u0075\u0064\u0069\u006f\u0020\u0025\u0076", _fggb.Name)
				if _ddebc := d.Skip(); _ddebc != nil {
					return _ddebc
				}
			}
		case _d.EndElement:
			break _facfd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TimeNodeList and its children
func (_eaba *CT_TimeNodeList) Validate() error {
	return _eaba.ValidateWithPath("\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074")
}
func (_dgbaeb ST_SlideLayoutType) String() string {
	switch _dgbaeb {
	case 0:
		return ""
	case 1:
		return "\u0074\u0069\u0074l\u0065"
	case 2:
		return "\u0074\u0078"
	case 3:
		return "\u0074\u0077\u006f\u0043\u006f\u006c\u0054\u0078"
	case 4:
		return "\u0074\u0062\u006c"
	case 5:
		return "\u0074\u0078\u0041\u006e\u0064\u0043\u0068\u0061\u0072\u0074"
	case 6:
		return "\u0063\u0068\u0061\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 7:
		return "\u0064\u0067\u006d"
	case 8:
		return "\u0063\u0068\u0061r\u0074"
	case 9:
		return "\u0074\u0078\u0041n\u0064\u0043\u006c\u0069\u0070\u0041\u0072\u0074"
	case 10:
		return "\u0063\u006c\u0069p\u0041\u0072\u0074\u0041\u006e\u0064\u0054\u0078"
	case 11:
		return "\u0074i\u0074\u006c\u0065\u004f\u006e\u006cy"
	case 12:
		return "\u0062\u006c\u0061n\u006b"
	case 13:
		return "\u0074\u0078\u0041\u006e\u0064\u004f\u0062\u006a"
	case 14:
		return "\u006f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 15:
		return "\u006fb\u006a\u004f\u006e\u006c\u0079"
	case 16:
		return "\u006f\u0062\u006a"
	case 17:
		return "\u0074\u0078\u0041\u006e\u0064\u004d\u0065\u0064\u0069\u0061"
	case 18:
		return "\u006d\u0065\u0064\u0069\u0061\u0041\u006e\u0064\u0054\u0078"
	case 19:
		return "\u006fb\u006a\u004f\u0076\u0065\u0072\u0054x"
	case 20:
		return "\u0074x\u004f\u0076\u0065\u0072\u004f\u0062j"
	case 21:
		return "t\u0078\u0041\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 22:
		return "t\u0077\u006f\u004f\u0062\u006a\u0041\u006e\u0064\u0054\u0078"
	case 23:
		return "\u0074\u0077\u006fO\u0062\u006a\u004f\u0076\u0065\u0072\u0054\u0078"
	case 24:
		return "\u0066o\u0075\u0072\u004f\u0062\u006a"
	case 25:
		return "\u0076\u0065\u0072\u0074\u0054\u0078"
	case 26:
		return "\u0063\u006ci\u0070\u0041\u0072t\u0041\u006e\u0064\u0056\u0065\u0072\u0074\u0054\u0078"
	case 27:
		return "\u0076\u0065\u0072\u0074\u0054\u0069\u0074\u006c\u0065A\u006e\u0064\u0054\u0078"
	case 28:
		return "\u0076\u0065\u0072tT\u0069\u0074\u006c\u0065\u0041\u006e\u0064\u0054\u0078\u004f\u0076\u0065\u0072\u0043\u0068\u0061\u0072\u0074"
	case 29:
		return "\u0074\u0077\u006f\u004f\u0062\u006a"
	case 30:
		return "\u006f\u0062\u006aA\u006e\u0064\u0054\u0077\u006f\u004f\u0062\u006a"
	case 31:
		return "\u0074\u0077\u006fO\u0062\u006a\u0041\u006e\u0064\u004f\u0062\u006a"
	case 32:
		return "\u0063\u0075\u0073\u0074"
	case 33:
		return "\u0073e\u0063\u0048\u0065\u0061\u0064"
	case 34:
		return "t\u0077\u006f\u0054\u0078\u0054\u0077\u006f\u004f\u0062\u006a"
	case 35:
		return "\u006f\u0062\u006aT\u0078"
	case 36:
		return "\u0070\u0069\u0063T\u0078"
	}
	return ""
}

const (
	ST_TLTimeIndefiniteUnset      ST_TLTimeIndefinite = 0
	ST_TLTimeIndefiniteIndefinite ST_TLTimeIndefinite = 1
)

func NewCT_PrintProperties() *CT_PrintProperties             { _cbga := &CT_PrintProperties{}; return _cbga }
func (_bfcff ST_TLAnimateBehaviorValueType) Validate() error { return _bfcff.ValidateWithPath("") }

const (
	ST_TLAnimateBehaviorValueTypeUnset ST_TLAnimateBehaviorValueType = 0
	ST_TLAnimateBehaviorValueTypeStr   ST_TLAnimateBehaviorValueType = 1
	ST_TLAnimateBehaviorValueTypeNum   ST_TLAnimateBehaviorValueType = 2
	ST_TLAnimateBehaviorValueTypeClr   ST_TLAnimateBehaviorValueType = 3
)

// ValidateWithPath validates the CT_ModifyVerifier and its children, prefixing error messages with path
func (_aeac *CT_ModifyVerifier) ValidateWithPath(path string) error {
	if _eecfc := _aeac.CryptProviderTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072\u0079pt\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u0054\u0079\u0070\u0065\u0041\u0074t\u0072"); _eecfc != nil {
		return _eecfc
	}
	if _bbfg := _aeac.CryptAlgorithmClassAttr.ValidateWithPath(path + "\u002fC\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0043\u006c\u0061\u0073\u0073\u0041\u0074\u0074\u0072"); _bbfg != nil {
		return _bbfg
	}
	if _baeg := _aeac.CryptAlgorithmTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0072yp\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _baeg != nil {
		return _baeg
	}
	return nil
}

// ValidateWithPath validates the CT_SlideRelationshipList and its children, prefixing error messages with path
func (_ddfe *CT_SlideRelationshipList) ValidateWithPath(path string) error {
	for _feec, _gdfe := range _ddfe.Sld {
		if _eacfg := _gdfe.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002f\u0053\u006c\u0064\u005b\u0025\u0064\u005d", path, _feec)); _eacfg != nil {
			return _eacfg
		}
	}
	return nil
}

// Validate validates the CT_TLAnimateScaleBehavior and its children
func (_ecedg *CT_TLAnimateScaleBehavior) Validate() error {
	return _ecedg.ValidateWithPath("\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr")
}
func (_beadge *CmLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070:\u0063\u006d\u004c\u0073\u0074"
	return _beadge.CT_CommentList.MarshalXML(e, start)
}

type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_gfef *ST_TransitionEightDirectionType) Validate() error { return _gfef.ValidateWithPath("") }
func (_bbfge ST_TLTimeNodeSyncType) Validate() error           { return _bbfge.ValidateWithPath("") }

type CT_ShapeNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_ad.CT_NonVisualDrawingProps

	// Non-Visual Drawing Properties for a Shape
	CNvSpPr *_ad.CT_NonVisualDrawingShapeProps

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_dfde ST_WebColorType) Validate() error { return _dfde.ValidateWithPath("") }

type ST_TLAnimateMotionPathEditMode byte
type ST_TLDiagramBuildType byte

func (_dbddg ST_TLOleChartBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dbddg.String(), start)
}

type CT_NotesMasterIdList struct {

	// Notes Master ID
	NotesMasterId *CT_NotesMasterIdListEntry
}
type CT_TLAnimateMotionBehavior struct {

	// Origin
	OriginAttr ST_TLAnimateMotionBehaviorOrigin

	// Path
	PathAttr *string

	// Path Edit Mode
	PathEditModeAttr ST_TLAnimateMotionPathEditMode

	// Relative Angle
	RAngAttr *int32

	// Points Types
	PtsTypesAttr *string
	CBhvr        *CT_TLCommonBehaviorData
	By           *CT_TLPoint

	// From
	From *CT_TLPoint
	To   *CT_TLPoint

	// Rotation Center
	RCtr *CT_TLPoint
}

// ValidateWithPath validates the CT_TLTemplateList and its children, prefixing error messages with path
func (_bbcdff *CT_TLTemplateList) ValidateWithPath(path string) error {
	for _bbeab, _cfada := range _bbcdff.Tmpl {
		if _fceea := _cfada.ValidateWithPath(_gc.Sprintf("%\u0073\u002f\u0054\u006d\u0070\u006c\u005b\u0025\u0064\u005d", path, _bbeab)); _fceea != nil {
			return _fceea
		}
	}
	return nil
}

type CT_OutlineViewSlideList struct {

	// Presentation Slide
	Sld []*CT_OutlineViewSlideEntry
}

func (_decef ST_TLTimeNodeMasterRelation) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fdbce := _d.Attr{}
	_fdbce.Name = name
	switch _decef {
	case ST_TLTimeNodeMasterRelationUnset:
		_fdbce.Value = ""
	case ST_TLTimeNodeMasterRelationSameClick:
		_fdbce.Value = "\u0073a\u006d\u0065\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationLastClick:
		_fdbce.Value = "\u006ca\u0073\u0074\u0043\u006c\u0069\u0063k"
	case ST_TLTimeNodeMasterRelationNextClick:
		_fdbce.Value = "\u006ee\u0078\u0074\u0043\u006c\u0069\u0063k"
	}
	return _fdbce, nil
}
func (_geegf ST_TLAnimateEffectTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_geegf.String(), start)
}
func (_egbdf ST_SplitterBarState) ValidateWithPath(path string) error {
	switch _egbdf {
	case 0, 1, 2, 3:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egbdf))
	}
	return nil
}

type CT_SlideMasterIdListEntry struct {

	// Slide Master Identifier
	IdAttr  *uint32
	RIdAttr string
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_SlideIdListEntry and its children
func (_ddfga *CT_SlideIdListEntry) Validate() error {
	return _ddfga.ValidateWithPath("\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079")
}
func (_ffaaf ST_TLNextActionType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_fddgf := _d.Attr{}
	_fddgf.Name = name
	switch _ffaaf {
	case ST_TLNextActionTypeUnset:
		_fddgf.Value = ""
	case ST_TLNextActionTypeNone:
		_fddgf.Value = "\u006e\u006f\u006e\u0065"
	case ST_TLNextActionTypeSeek:
		_fddgf.Value = "\u0073\u0065\u0065\u006b"
	}
	return _fddgf, nil
}
func NewCT_TLAnimateEffectBehavior() *CT_TLAnimateEffectBehavior {
	_efagb := &CT_TLAnimateEffectBehavior{}
	_efagb.CBhvr = NewCT_TLCommonBehaviorData()
	return _efagb
}
func NewCT_TLCommonTimeNodeData() *CT_TLCommonTimeNodeData {
	_eagd := &CT_TLCommonTimeNodeData{}
	return _eagd
}
func (_gad *CT_BackgroundProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gad.ShadeToTitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0068\u0061d\u0065\u0054\u006f\u0054\u0069\u0074\u006c\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gad.ShadeToTitleAttr))})
	}
	e.EncodeToken(start)
	if _gad.NoFill != nil {
		_fab := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gad.NoFill, _fab)
	}
	if _gad.SolidFill != nil {
		_fdeb := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gad.SolidFill, _fdeb)
	}
	if _gad.GradFill != nil {
		_dcf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gad.GradFill, _dcf)
	}
	if _gad.BlipFill != nil {
		_gef := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gad.BlipFill, _gef)
	}
	if _gad.PattFill != nil {
		_aag := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_gad.PattFill, _aag)
	}
	if _gad.GrpFill != nil {
		_bgg := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_gad.GrpFill, _bgg)
	}
	if _gad.EffectLst != nil {
		_aga := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gad.EffectLst, _aga)
	}
	if _gad.EffectDag != nil {
		_bd := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_gad.EffectDag, _bd)
	}
	if _gad.ExtLst != nil {
		_degf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gad.ExtLst, _degf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_SlideLayoutType byte

// Validate validates the CT_SlideSize and its children
func (_gecfd *CT_SlideSize) Validate() error {
	return _gecfd.ValidateWithPath("\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065")
}
func (_eadb *CT_NormalViewProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eadb.RestoredLeft = NewCT_NormalViewPortion()
	_eadb.RestoredTop = NewCT_NormalViewPortion()
	for _, _bace := range start.Attr {
		if _bace.Name.Local == "\u0073\u0068o\u0077\u004f\u0075t\u006c\u0069\u006e\u0065\u0049\u0063\u006f\u006e\u0073" {
			_egaa, _fcgef := _dc.ParseBool(_bace.Value)
			if _fcgef != nil {
				return _fcgef
			}
			_eadb.ShowOutlineIconsAttr = &_egaa
			continue
		}
		if _bace.Name.Local == "\u0073\u006ea\u0070\u0056\u0065r\u0074\u0053\u0070\u006c\u0069\u0074\u0074\u0065\u0072" {
			_bgbe, _dfcd := _dc.ParseBool(_bace.Value)
			if _dfcd != nil {
				return _dfcd
			}
			_eadb.SnapVertSplitterAttr = &_bgbe
			continue
		}
		if _bace.Name.Local == "\u0076\u0065\u0072t\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_eadb.VertBarStateAttr.UnmarshalXMLAttr(_bace)
			continue
		}
		if _bace.Name.Local == "\u0068\u006f\u0072z\u0042\u0061\u0072\u0053\u0074\u0061\u0074\u0065" {
			_eadb.HorzBarStateAttr.UnmarshalXMLAttr(_bace)
			continue
		}
		if _bace.Name.Local == "\u0070\u0072e\u0066\u0065\u0072S\u0069\u006e\u0067\u006c\u0065\u0056\u0069\u0065\u0077" {
			_bba, _ggbe := _dc.ParseBool(_bace.Value)
			if _ggbe != nil {
				return _ggbe
			}
			_eadb.PreferSingleViewAttr = &_bba
			continue
		}
	}
_acce:
	for {
		_ecdgg, _cafc := d.Token()
		if _cafc != nil {
			return _cafc
		}
		switch _ebdc := _ecdgg.(type) {
		case _d.StartElement:
			switch _ebdc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0073t\u006f\u0072\u0065\u0064\u004c\u0065\u0066\u0074"}:
				if _bgc := d.DecodeElement(_eadb.RestoredLeft, &_ebdc); _bgc != nil {
					return _bgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "r\u0065\u0073\u0074\u006f\u0072\u0065\u0064\u0054\u006f\u0070"}:
				if _dcfg := d.DecodeElement(_eadb.RestoredTop, &_ebdc); _dcfg != nil {
					return _dcfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eadb.ExtLst = NewCT_ExtensionList()
				if _geffg := d.DecodeElement(_eadb.ExtLst, &_ebdc); _geffg != nil {
					return _geffg
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _ebdc.Name)
				if _edbag := d.Skip(); _edbag != nil {
					return _edbag
				}
			}
		case _d.EndElement:
			break _acce
		case _d.CharData:
		}
	}
	return nil
}
func (_eddbd *CT_SlideTransition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfgfef := range start.Attr {
		if _bfgfef.Name.Local == "\u0073\u0070\u0064" {
			_eddbd.SpdAttr.UnmarshalXMLAttr(_bfgfef)
			continue
		}
		if _bfgfef.Name.Local == "\u0061\u0064\u0076\u0043\u006c\u0069\u0063\u006b" {
			_ceef, _fdcge := _dc.ParseBool(_bfgfef.Value)
			if _fdcge != nil {
				return _fdcge
			}
			_eddbd.AdvClickAttr = &_ceef
			continue
		}
		if _bfgfef.Name.Local == "\u0061\u0064\u0076T\u006d" {
			_afae, _eefb := _dc.ParseUint(_bfgfef.Value, 10, 32)
			if _eefb != nil {
				return _eefb
			}
			_aaecf := uint32(_afae)
			_eddbd.AdvTmAttr = &_aaecf
			continue
		}
	}
_dbgc:
	for {
		_fdfc, _ddbef := d.Token()
		if _ddbef != nil {
			return _ddbef
		}
		switch _dabab := _fdfc.(type) {
		case _d.StartElement:
			switch _dabab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u006e\u0064\u0073"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _agef := d.DecodeElement(&_eddbd.Choice.Blinds, &_dabab); _agef != nil {
					return _agef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0065\u0063\u006b\u0065\u0072"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _bceag := d.DecodeElement(&_eddbd.Choice.Checker, &_dabab); _bceag != nil {
					return _bceag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0069\u0072\u0063\u006c\u0065"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _abffd := d.DecodeElement(&_eddbd.Choice.Circle, &_dabab); _abffd != nil {
					return _abffd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0073\u006f\u006c\u0076\u0065"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _eegfc := d.DecodeElement(&_eddbd.Choice.Dissolve, &_dabab); _eegfc != nil {
					return _eegfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0062"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _ccdee := d.DecodeElement(&_eddbd.Choice.Comb, &_dabab); _ccdee != nil {
					return _ccdee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u0076e\u0072"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _eacg := d.DecodeElement(&_eddbd.Choice.Cover, &_dabab); _eacg != nil {
					return _eacg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0075\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0074"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _dfcdc := d.DecodeElement(&_eddbd.Choice.Cut, &_dabab); _dfcdc != nil {
					return _dfcdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u0061\u006d\u006f\u006e\u0064"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _cafga := d.DecodeElement(&_eddbd.Choice.Diamond, &_dabab); _cafga != nil {
					return _cafga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u0064\u0065"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _edag := d.DecodeElement(&_eddbd.Choice.Fade, &_dabab); _edag != nil {
					return _edag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ee\u0077\u0073\u0066\u006c\u0061\u0073h"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _edgbg := d.DecodeElement(&_eddbd.Choice.Newsflash, &_dabab); _edgbg != nil {
					return _edgbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006c\u0075\u0073"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _edce := d.DecodeElement(&_eddbd.Choice.Plus, &_dabab); _edce != nil {
					return _edce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u006c\u006c"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _ccca := d.DecodeElement(&_eddbd.Choice.Pull, &_dabab); _ccca != nil {
					return _ccca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0075\u0073\u0068"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _cfccb := d.DecodeElement(&_eddbd.Choice.Push, &_dabab); _cfccb != nil {
					return _cfccb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0064\u006f\u006d"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _bceac := d.DecodeElement(&_eddbd.Choice.Random, &_dabab); _bceac != nil {
					return _bceac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0064\u006f\u006d\u0042\u0061r"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _gcbdf := d.DecodeElement(&_eddbd.Choice.RandomBar, &_dabab); _gcbdf != nil {
					return _gcbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u006ci\u0074"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _dfgfa := d.DecodeElement(&_eddbd.Choice.Split, &_dabab); _dfgfa != nil {
					return _dfgfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u0070\u0073"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _eebef := d.DecodeElement(&_eddbd.Choice.Strips, &_dabab); _eebef != nil {
					return _eebef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0064g\u0065"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _aacbc := d.DecodeElement(&_eddbd.Choice.Wedge, &_dabab); _aacbc != nil {
					return _aacbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u0065e\u006c"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _aacf := d.DecodeElement(&_eddbd.Choice.Wheel, &_dabab); _aacf != nil {
					return _aacf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0069\u0070\u0065"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _dbdf := d.DecodeElement(&_eddbd.Choice.Wipe, &_dabab); _dbdf != nil {
					return _dbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u007a\u006f\u006f\u006d"}:
				_eddbd.Choice = NewCT_SlideTransitionChoice()
				if _ggfg := d.DecodeElement(&_eddbd.Choice.Zoom, &_dabab); _ggfg != nil {
					return _ggfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064A\u0063"}:
				_eddbd.SndAc = NewCT_TransitionSoundAction()
				if _dgge := d.DecodeElement(_eddbd.SndAc, &_dabab); _dgge != nil {
					return _dgge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eddbd.ExtLst = NewCT_ExtensionListModify()
				if _bdc := d.DecodeElement(_eddbd.ExtLst, &_dabab); _bdc != nil {
					return _bdc
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054r\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _dabab.Name)
				if _eacfc := d.Skip(); _eacfc != nil {
					return _eacfc
				}
			}
		case _d.EndElement:
			break _dbgc
		case _d.CharData:
		}
	}
	return nil
}

type CT_PrintProperties struct {

	// Print Output
	PrnWhatAttr ST_PrintWhat

	// Print Color Mode
	ClrModeAttr ST_PrintColorMode

	// Print Hidden Slides
	HiddenSlidesAttr *bool

	// Scale to Fit Paper when printing
	ScaleToFitPaperAttr *bool

	// Frame slides when printing
	FrameSlidesAttr *bool
	ExtLst          *CT_ExtensionList
}

// Validate validates the CT_GraphicalObjectFrameNonVisual and its children
func (_gfcd *CT_GraphicalObjectFrameNonVisual) Validate() error {
	return _gfcd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}

type ST_TLTimeNodePresetClassType byte
type ST_PhotoAlbumFrameShape byte

func (_cecda ST_PlaceholderSize) Validate() error { return _cecda.ValidateWithPath("") }

type CT_GuideList struct {

	// A Guide
	Guide []*CT_Guide
}

func (_gebca *ST_Direction) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aagbc, _faaffe := d.Token()
	if _faaffe != nil {
		return _faaffe
	}
	if _eaeae, _cgfec := _aagbc.(_d.EndElement); _cgfec && _eaeae.Name == start.Name {
		*_gebca = 1
		return nil
	}
	if _dfeda, _afbbce := _aagbc.(_d.CharData); !_afbbce {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aagbc)
	} else {
		switch string(_dfeda) {
		case "":
			*_gebca = 0
		case "\u0068\u006f\u0072\u007a":
			*_gebca = 1
		case "\u0076\u0065\u0072\u0074":
			*_gebca = 2
		}
	}
	_aagbc, _faaffe = d.Token()
	if _faaffe != nil {
		return _faaffe
	}
	if _cccdb, _bgeea := _aagbc.(_d.EndElement); _bgeea && _cccdb.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aagbc)
}

type ST_TLCommandType byte

// Validate validates the CT_Shape and its children
func (_cafcf *CT_Shape) Validate() error {
	return _cafcf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065")
}
func NewCT_SlideTransitionChoice() *CT_SlideTransitionChoice {
	_bgbc := &CT_SlideTransitionChoice{}
	return _bgbc
}

// Validate validates the CT_EmbeddedFontList and its children
func (_dad *CT_EmbeddedFontList) Validate() error {
	return _dad.ValidateWithPath("\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074")
}
func (_cdfg *CT_SlideTiming) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cdfg.TnLst != nil {
		_fcgab := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfg.TnLst, _fcgab)
	}
	if _cdfg.BldLst != nil {
		_bgaea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u006c\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfg.BldLst, _bgaea)
	}
	if _cdfg.ExtLst != nil {
		_efged := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdfg.ExtLst, _efged)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type SldMaster struct{ CT_SlideMaster }

// Validate validates the CmLst and its children
func (_ggcfe *CmLst) Validate() error { return _ggcfe.ValidateWithPath("\u0043\u006d\u004cs\u0074") }
func (_bbfgb *ST_TLCommandType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ceabe, _agee := d.Token()
	if _agee != nil {
		return _agee
	}
	if _cdeee, _dbcaa := _ceabe.(_d.EndElement); _dbcaa && _cdeee.Name == start.Name {
		*_bbfgb = 1
		return nil
	}
	if _aaagg, _cece := _ceabe.(_d.CharData); !_cece {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceabe)
	} else {
		switch string(_aaagg) {
		case "":
			*_bbfgb = 0
		case "\u0065\u0076\u0074":
			*_bbfgb = 1
		case "\u0063\u0061\u006c\u006c":
			*_bbfgb = 2
		case "\u0076\u0065\u0072\u0062":
			*_bbfgb = 3
		}
	}
	_ceabe, _agee = d.Token()
	if _agee != nil {
		return _agee
	}
	if _aafed, _faab := _ceabe.(_d.EndElement); _faab && _aafed.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceabe)
}

// ValidateWithPath validates the CT_OrientationTransition and its children, prefixing error messages with path
func (_dggc *CT_OrientationTransition) ValidateWithPath(path string) error {
	if _febe := _dggc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _febe != nil {
		return _febe
	}
	return nil
}

type CT_TLAnimateBehavior struct {

	// By
	ByAttr *string

	// From
	FromAttr *string

	// To
	ToAttr *string

	// Calculation Mode
	CalcmodeAttr ST_TLAnimateBehaviorCalcMode

	// Value Type
	ValueTypeAttr ST_TLAnimateBehaviorValueType
	CBhvr         *CT_TLCommonBehaviorData

	// Time Animated Value List
	TavLst *CT_TLTimeAnimateValueList
}

func NewCT_GroupShapeChoice() *CT_GroupShapeChoice { _egg := &CT_GroupShapeChoice{}; return _egg }

// ValidateWithPath validates the CmLst and its children, prefixing error messages with path
func (_gabfg *CmLst) ValidateWithPath(path string) error {
	if _beggf := _gabfg.CT_CommentList.ValidateWithPath(path); _beggf != nil {
		return _beggf
	}
	return nil
}
func (_fdcfa ST_ViewType) Validate() error { return _fdcfa.ValidateWithPath("") }

// ValidateWithPath validates the CT_WheelTransition and its children, prefixing error messages with path
func (_bfaa *CT_WheelTransition) ValidateWithPath(path string) error { return nil }
func (_edaaf *ST_WebScreenSize) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_edaaf = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_edaaf = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_edaaf = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_edaaf = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_edaaf = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_edaaf = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_edaaf = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_edaaf = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_edaaf = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_edaaf = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00300":
		*_edaaf = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_edaaf = 11
	}
	return nil
}
func (_cfdfc ST_TLTimeNodeRestartType) String() string {
	switch _cfdfc {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	case 2:
		return "\u0077\u0068\u0065\u006e\u004e\u006f\u0074\u0041\u0063\u0074\u0069\u0076\u0065"
	case 3:
		return "\u006e\u0065\u0076e\u0072"
	}
	return ""
}

type CT_WheelTransition struct {

	// Spokes
	SpokesAttr *uint32
}

func (_gadae ST_TLTime) String() string {
	if _gadae.Uint32 != nil {
		return _gc.Sprintf("\u0025\u0076", *_gadae.Uint32)
	}
	if _gadae.ST_TLTimeIndefinite != ST_TLTimeIndefiniteUnset {
		return _gadae.ST_TLTimeIndefinite.String()
	}
	return ""
}
func ParseUnionST_TransitionEightDirectionType(s string) (ST_TransitionEightDirectionType, error) {
	return ST_TransitionEightDirectionType{}, nil
}
func NewCT_Placeholder() *CT_Placeholder { _fcde := &CT_Placeholder{}; return _fcde }
func NewCT_TLSetBehavior() *CT_TLSetBehavior {
	_aegf := &CT_TLSetBehavior{}
	_aegf.CBhvr = NewCT_TLCommonBehaviorData()
	return _aegf
}
func (_afgd *CT_TLShapeTargetElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _afgd.SpidAttr)})
	e.EncodeToken(start)
	if _afgd.Bg != nil {
		_fgbd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0062\u0067"}}
		e.EncodeElement(_afgd.Bg, _fgbd)
	}
	if _afgd.SubSp != nil {
		_bbdda := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0075\u0062\u0053\u0070"}}
		e.EncodeElement(_afgd.SubSp, _bbdda)
	}
	if _afgd.OleChartEl != nil {
		_cabbgc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006fl\u0065\u0043\u0068\u0061\u0072\u0074\u0045\u006c"}}
		e.EncodeElement(_afgd.OleChartEl, _cabbgc)
	}
	if _afgd.TxEl != nil {
		_fgbdc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0074\u0078\u0045\u006c"}}
		e.EncodeElement(_afgd.TxEl, _fgbdc)
	}
	if _afgd.GraphicEl != nil {
		_ecgef := _d.StartElement{Name: _d.Name{Local: "p\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0045\u006c"}}
		e.EncodeElement(_afgd.GraphicEl, _ecgef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_ShowType() *EG_ShowType { _ccec := &EG_ShowType{}; return _ccec }
func (_fgedg ST_TLAnimateColorDirection) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffde := _d.Attr{}
	_ffde.Name = name
	switch _fgedg {
	case ST_TLAnimateColorDirectionUnset:
		_ffde.Value = ""
	case ST_TLAnimateColorDirectionCw:
		_ffde.Value = "\u0063\u0077"
	case ST_TLAnimateColorDirectionCcw:
		_ffde.Value = "\u0063\u0063\u0077"
	}
	return _ffde, nil
}
func (_aede ST_PrintColorMode) String() string {
	switch _aede {
	case 0:
		return ""
	case 1:
		return "\u0062\u0077"
	case 2:
		return "\u0067\u0072\u0061\u0079"
	case 3:
		return "\u0063\u006c\u0072"
	}
	return ""
}
func NewCT_Slide() *CT_Slide {
	_bfba := &CT_Slide{}
	_bfba.CSld = NewCT_CommonSlideData()
	return _bfba
}

type CT_HtmlPublishProperties struct {

	// Show Speaker Notes
	ShowSpeakerNotesAttr *bool

	// Target Output Profile
	TargetAttr *string

	// HTML Output Title
	TitleAttr *string
	IdAttr    string

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
	ExtLst   *CT_ExtensionList
}

// ValidateWithPath validates the CT_SlideTiming and its children, prefixing error messages with path
func (_fdba *CT_SlideTiming) ValidateWithPath(path string) error {
	if _fdba.TnLst != nil {
		if _aacae := _fdba.TnLst.ValidateWithPath(path + "\u002f\u0054\u006e\u004c\u0073\u0074"); _aacae != nil {
			return _aacae
		}
	}
	if _fdba.BldLst != nil {
		if _gcdg := _fdba.BldLst.ValidateWithPath(path + "\u002fB\u006c\u0064\u004c\u0073\u0074"); _gcdg != nil {
			return _gcdg
		}
	}
	if _fdba.ExtLst != nil {
		if _gcaag := _fdba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcaag != nil {
			return _gcaag
		}
	}
	return nil
}

type CT_PhotoAlbum struct {

	// Black and White
	BwAttr *bool

	// Show/Hide Captions
	ShowCaptionsAttr *bool

	// Photo Album Layout
	LayoutAttr ST_PhotoAlbumLayout

	// Frame Type
	FrameAttr ST_PhotoAlbumFrameShape
	ExtLst    *CT_ExtensionList
}
type CT_GraphicalObjectFrame struct {
	BwModeAttr _ad.ST_BlackWhiteMode

	// Non-Visual Properties for a Graphic Frame
	NvGraphicFramePr *CT_GraphicalObjectFrameNonVisual

	// 2D Transform for Graphic Frame
	Xfrm    *_ad.CT_Transform2D
	Graphic *_ad.Graphic

	// Extension List with Modification Flag
	ExtLst *CT_ExtensionListModify
}

// ValidateWithPath validates the CT_GuideList and its children, prefixing error messages with path
func (_aebb *CT_GuideList) ValidateWithPath(path string) error {
	for _cgfc, _ecec := range _aebb.Guide {
		if _efecc := _ecec.ValidateWithPath(_gc.Sprintf("\u0025\u0073\u002fG\u0075\u0069\u0064\u0065\u005b\u0025\u0064\u005d", path, _cgfc)); _efecc != nil {
			return _efecc
		}
	}
	return nil
}

// Validate validates the CT_NotesMaster and its children
func (_ccdf *CT_NotesMaster) Validate() error {
	return _ccdf.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072")
}
func (_bcaege ST_PhotoAlbumFrameShape) Validate() error { return _bcaege.ValidateWithPath("") }
func (_ccggd *CT_TLAnimateRotationBehavior) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccggd.CBhvr = NewCT_TLCommonBehaviorData()
	for _, _egce := range start.Attr {
		if _egce.Name.Local == "\u0062\u0079" {
			_bgag, _cagac := _dc.ParseInt(_egce.Value, 10, 32)
			if _cagac != nil {
				return _cagac
			}
			_gefb := int32(_bgag)
			_ccggd.ByAttr = &_gefb
			continue
		}
		if _egce.Name.Local == "\u0066\u0072\u006f\u006d" {
			_aefb, _ecaf := _dc.ParseInt(_egce.Value, 10, 32)
			if _ecaf != nil {
				return _ecaf
			}
			_aeefd := int32(_aefb)
			_ccggd.FromAttr = &_aeefd
			continue
		}
		if _egce.Name.Local == "\u0074\u006f" {
			_abdge, _bbcd := _dc.ParseInt(_egce.Value, 10, 32)
			if _bbcd != nil {
				return _bbcd
			}
			_gbedf := int32(_abdge)
			_ccggd.ToAttr = &_gbedf
			continue
		}
	}
_gefd:
	for {
		_afecd, _dggee := d.Token()
		if _dggee != nil {
			return _dggee
		}
		switch _dbbag := _afecd.(type) {
		case _d.StartElement:
			switch _dbbag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0042\u0068v\u0072"}:
				if _adba := d.DecodeElement(_ccggd.CBhvr, &_dbbag); _adba != nil {
					return _adba
				}
			default:
				_de.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074\u0061\u0074i\u006f\u006eBe\u0068\u0061\u0076i\u006f\u0072\u0020\u0025\u0076", _dbbag.Name)
				if _ccaef := d.Skip(); _ccaef != nil {
					return _ccaef
				}
			}
		case _d.EndElement:
			break _gefd
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TLByHslColorTransform and its children, prefixing error messages with path
func (_ecaef *CT_TLByHslColorTransform) ValidateWithPath(path string) error {
	if _debff := _ecaef.SAttr.ValidateWithPath(path + "\u002f\u0053\u0041\u0074\u0074\u0072"); _debff != nil {
		return _debff
	}
	if _dcbdf := _ecaef.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _dcbdf != nil {
		return _dcbdf
	}
	return nil
}
func (_acgae *CT_TLTimeConditionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bfdfd := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006f\u006e\u0064"}}
	for _, _gfbe := range _acgae.Cond {
		e.EncodeElement(_gfbe, _bfdfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_SlideIdListEntry() *CT_SlideIdListEntry {
	_cgdb := &CT_SlideIdListEntry{}
	_cgdb.IdAttr = 256
	return _cgdb
}
func (_gffa *CT_OutlineViewSlideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eaedb:
	for {
		_gadeb, _fbe := d.Token()
		if _fbe != nil {
			return _fbe
		}
		switch _agga := _gadeb.(type) {
		case _d.StartElement:
			switch _agga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_dfdg := NewCT_OutlineViewSlideEntry()
				if _afafe := d.DecodeElement(_dfdg, &_agga); _afafe != nil {
					return _afafe
				}
				_gffa.Sld = append(_gffa.Sld, _dfdg)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069e\u0077\u0053\u006c\u0069\u0064\u0065L\u0069\u0073\u0074 \u0025\u0076", _agga.Name)
				if _cgcc := d.Skip(); _cgcc != nil {
					return _cgcc
				}
			}
		case _d.EndElement:
			break _eaedb
		case _d.CharData:
		}
	}
	return nil
}
func _cfgbd(_ebbda bool) uint8 {
	if _ebbda {
		return 1
	}
	return 0
}
func NewCT_TLByHslColorTransform() *CT_TLByHslColorTransform {
	_aedbg := &CT_TLByHslColorTransform{}
	return _aedbg
}
func (_daafg *CT_TLTimeNodeParallel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_daafg.CTn = NewCT_TLCommonTimeNodeData()
_aeff:
	for {
		_acgg, _cfcgc := d.Token()
		if _cfcgc != nil {
			return _cfcgc
		}
		switch _ebdac := _acgg.(type) {
		case _d.StartElement:
			switch _ebdac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0063\u0054\u006e"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0054\u006e"}:
				if _eeca := d.DecodeElement(_daafg.CTn, &_ebdac); _eeca != nil {
					return _eeca
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u004c\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0050\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u0020\u0025\u0076", _ebdac.Name)
				if _cbege := d.Skip(); _cbege != nil {
					return _cbege
				}
			}
		case _d.EndElement:
			break _aeff
		case _d.CharData:
		}
	}
	return nil
}
func (_cgafc *CT_SlideRelationshipList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcfcg:
	for {
		_fdgga, _ffbf := d.Token()
		if _ffbf != nil {
			return _ffbf
		}
		switch _cfacf := _fdgga.(type) {
		case _d.StartElement:
			switch _cfacf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0073\u006c\u0064"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006c\u0064"}:
				_eacdb := NewCT_SlideRelationshipListEntry()
				if _beacb := d.DecodeElement(_eacdb, &_cfacf); _beacb != nil {
					return _beacb
				}
				_cgafc.Sld = append(_cgafc.Sld, _eacdb)
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069p\u004c\u0069\u0073\u0074\u0020%\u0076", _cfacf.Name)
				if _eada := d.Skip(); _eada != nil {
					return _eada
				}
			}
		case _d.EndElement:
			break _fcfcg
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TLBehaviorOverrideTypeUnset      ST_TLBehaviorOverrideType = 0
	ST_TLBehaviorOverrideTypeNormal     ST_TLBehaviorOverrideType = 1
	ST_TLBehaviorOverrideTypeChildStyle ST_TLBehaviorOverrideType = 2
)

func (_cbggg ST_TLNextActionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cbggg.String(), start)
}

type CT_TLAnimateEffectBehavior struct {

	// Transition
	TransitionAttr ST_TLAnimateEffectTransition

	// Filter
	FilterAttr *string

	// Property List
	PrLstAttr *string
	CBhvr     *CT_TLCommonBehaviorData

	// Progress
	Progress *CT_TLAnimVariant
}

// ValidateWithPath validates the EG_ShowType and its children, prefixing error messages with path
func (_bfcga *EG_ShowType) ValidateWithPath(path string) error {
	if _bfcga.Present != nil {
		if _fdcfd := _bfcga.Present.ValidateWithPath(path + "\u002f\u0050\u0072\u0065\u0073\u0065\u006e\u0074"); _fdcfd != nil {
			return _fdcfd
		}
	}
	if _bfcga.Browse != nil {
		if _abaf := _bfcga.Browse.ValidateWithPath(path + "\u002fB\u0072\u006f\u0077\u0073\u0065"); _abaf != nil {
			return _abaf
		}
	}
	if _bfcga.Kiosk != nil {
		if _fbdeeg := _bfcga.Kiosk.ValidateWithPath(path + "\u002f\u004b\u0069\u006f\u0073\u006b"); _fbdeeg != nil {
			return _fbdeeg
		}
	}
	return nil
}
func NewCT_OleObjectEmbed() *CT_OleObjectEmbed { _bfgd := &CT_OleObjectEmbed{}; return _bfgd }
func (_afdcd *CT_TLTemplate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afdcd.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _gc.Sprintf("\u0025\u0076", *_afdcd.LvlAttr)})
	}
	e.EncodeToken(start)
	_effc := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0074\u006e\u004c\u0073\u0074"}}
	e.EncodeElement(_afdcd.TnLst, _effc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbbaa *PresentationPr) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0070"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0070\u003ap\u0072\u0065\u0073e\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u0050\u0072"
	return _cbbaa.CT_PresentationProperties.MarshalXML(e, start)
}
func (_gbed *CT_NormalViewPortion) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u007a"}, Value: _gc.Sprintf("\u0025\u0076", _gbed.SzAttr)})
	if _gbed.AutoAdjustAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0075\u0074\u006f\u0041\u0064\u006a\u0075\u0073\u0074"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gbed.AutoAdjustAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_WebScreenSizeUnset     ST_WebScreenSize = 0
	ST_WebScreenSize544x376   ST_WebScreenSize = 1
	ST_WebScreenSize640x480   ST_WebScreenSize = 2
	ST_WebScreenSize720x512   ST_WebScreenSize = 3
	ST_WebScreenSize800x600   ST_WebScreenSize = 4
	ST_WebScreenSize1024x768  ST_WebScreenSize = 5
	ST_WebScreenSize1152x882  ST_WebScreenSize = 6
	ST_WebScreenSize1152x900  ST_WebScreenSize = 7
	ST_WebScreenSize1280x1024 ST_WebScreenSize = 8
	ST_WebScreenSize1600x1200 ST_WebScreenSize = 9
	ST_WebScreenSize1800x1400 ST_WebScreenSize = 10
	ST_WebScreenSize1920x1200 ST_WebScreenSize = 11
)

type CT_ConnectorNonVisual struct {

	// Non-Visual Drawing Properties
	CNvPr *_ad.CT_NonVisualDrawingProps

	// Non-Visual Connector Shape Drawing Properties
	CNvCxnSpPr *_ad.CT_NonVisualConnectorProperties

	// Application Non-Visual Drawing Properties
	NvPr *CT_ApplicationNonVisualDrawingProps
}

func (_adggg ST_TLParaBuildType) Validate() error { return _adggg.ValidateWithPath("") }

type CT_StringTag struct {

	// Name
	NameAttr string

	// Value
	ValAttr string
}

// Validate validates the CT_SlideLayoutIdList and its children
func (_fggff *CT_SlideLayoutIdList) Validate() error {
	return _fggff.ValidateWithPath("C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074")
}

// Validate validates the CT_SlideLayout and its children
func (_daege *CT_SlideLayout) Validate() error {
	return _daege.ValidateWithPath("\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074")
}
func (_gafaf *CT_OptionalBlackTransition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gafaf.ThruBlkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074h\u0072\u0075\u0042\u006c\u006b"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_gafaf.ThruBlkAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomShow and its children, prefixing error messages with path
func (_aac *CT_CustomShow) ValidateWithPath(path string) error {
	if _gadg := _aac.SldLst.ValidateWithPath(path + "\u002fS\u006c\u0064\u004c\u0073\u0074"); _gadg != nil {
		return _gadg
	}
	if _aac.ExtLst != nil {
		if _egdc := _aac.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egdc != nil {
			return _egdc
		}
	}
	return nil
}
func (_aafge *ST_TLTimeNodeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aafge = 0
	case "c\u006c\u0069\u0063\u006b\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aafge = 1
	case "\u0077\u0069\u0074\u0068\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aafge = 2
	case "a\u0066\u0074\u0065\u0072\u0045\u0066\u0066\u0065\u0063\u0074":
		*_aafge = 3
	case "\u006da\u0069\u006e\u0053\u0065\u0071":
		*_aafge = 4
	case "\u0069\u006e\u0074\u0065\u0072\u0061\u0063\u0074\u0069v\u0065\u0053\u0065\u0071":
		*_aafge = 5
	case "\u0063\u006c\u0069\u0063\u006b\u0050\u0061\u0072":
		*_aafge = 6
	case "\u0077i\u0074\u0068\u0047\u0072\u006f\u0075p":
		*_aafge = 7
	case "\u0061\u0066\u0074\u0065\u0072\u0047\u0072\u006f\u0075\u0070":
		*_aafge = 8
	case "\u0074\u006d\u0052\u006f\u006f\u0074":
		*_aafge = 9
	}
	return nil
}

type CT_TLCommonMediaNodeData struct {

	// Volume
	VolAttr *_ad.ST_PositiveFixedPercentage

	// Mute
	MuteAttr *bool

	// Number of Slides
	NumSldAttr *uint32

	// Show When Stopped
	ShowWhenStoppedAttr *bool

	// Common Time Node Properties
	CTn   *CT_TLCommonTimeNodeData
	TgtEl *CT_TLTimeTargetElement
}

func (_gccg *CT_HandoutMaster) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fadf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u0053\u006c\u0064"}}
	e.EncodeElement(_gccg.CSld, _fadf)
	_cddf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_gccg.ClrMap, _cddf)
	if _gccg.Hf != nil {
		_ggbaf := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0068\u0066"}}
		e.EncodeElement(_gccg.Hf, _ggbaf)
	}
	if _gccg.ExtLst != nil {
		_fcca := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gccg.ExtLst, _fcca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cebff *ST_TLTriggerEvent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dafdee, _ebacf := d.Token()
	if _ebacf != nil {
		return _ebacf
	}
	if _ecgdc, _bcddg := _dafdee.(_d.EndElement); _bcddg && _ecgdc.Name == start.Name {
		*_cebff = 1
		return nil
	}
	if _gebf, _edcge := _dafdee.(_d.CharData); !_edcge {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafdee)
	} else {
		switch string(_gebf) {
		case "":
			*_cebff = 0
		case "\u006fn\u0042\u0065\u0067\u0069\u006e":
			*_cebff = 1
		case "\u006f\u006e\u0045n\u0064":
			*_cebff = 2
		case "\u0062\u0065\u0067i\u006e":
			*_cebff = 3
		case "\u0065\u006e\u0064":
			*_cebff = 4
		case "\u006fn\u0043\u006c\u0069\u0063\u006b":
			*_cebff = 5
		case "\u006f\u006e\u0044\u0062\u006c\u0043\u006c\u0069\u0063\u006b":
			*_cebff = 6
		case "o\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072":
			*_cebff = 7
		case "\u006f\u006e\u004d\u006f\u0075\u0073\u0065\u004f\u0075\u0074":
			*_cebff = 8
		case "\u006f\u006e\u004e\u0065\u0078\u0074":
			*_cebff = 9
		case "\u006f\u006e\u0050\u0072\u0065\u0076":
			*_cebff = 10
		case "o\u006e\u0053\u0074\u006f\u0070\u0041\u0075\u0064\u0069\u006f":
			*_cebff = 11
		}
	}
	_dafdee, _ebacf = d.Token()
	if _ebacf != nil {
		return _ebacf
	}
	if _ecaaf, _ebbgf := _dafdee.(_d.EndElement); _ebbgf && _ecaaf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafdee)
}

const (
	ST_TLParaBuildTypeUnset     ST_TLParaBuildType = 0
	ST_TLParaBuildTypeAllAtOnce ST_TLParaBuildType = 1
	ST_TLParaBuildTypeP         ST_TLParaBuildType = 2
	ST_TLParaBuildTypeCust      ST_TLParaBuildType = 3
	ST_TLParaBuildTypeWhole     ST_TLParaBuildType = 4
)

func (_aefgc ST_PrintWhat) ValidateWithPath(path string) error {
	switch _aefgc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _gc.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aefgc))
	}
	return nil
}

// ValidateWithPath validates the CT_BackgroundProperties and its children, prefixing error messages with path
func (_cbcc *CT_BackgroundProperties) ValidateWithPath(path string) error {
	if _cbcc.NoFill != nil {
		if _dgcg := _cbcc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _dgcg != nil {
			return _dgcg
		}
	}
	if _cbcc.SolidFill != nil {
		if _dfg := _cbcc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _dfg != nil {
			return _dfg
		}
	}
	if _cbcc.GradFill != nil {
		if _edf := _cbcc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _edf != nil {
			return _edf
		}
	}
	if _cbcc.BlipFill != nil {
		if _cbfc := _cbcc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cbfc != nil {
			return _cbfc
		}
	}
	if _cbcc.PattFill != nil {
		if _gfc := _cbcc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gfc != nil {
			return _gfc
		}
	}
	if _cbcc.GrpFill != nil {
		if _gff := _cbcc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gff != nil {
			return _gff
		}
	}
	if _cbcc.EffectLst != nil {
		if _eac := _cbcc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _eac != nil {
			return _eac
		}
	}
	if _cbcc.EffectDag != nil {
		if _dde := _cbcc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _dde != nil {
			return _dde
		}
	}
	if _cbcc.ExtLst != nil {
		if _adb := _cbcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adb != nil {
			return _adb
		}
	}
	return nil
}

type CT_EmbeddedFontDataId struct{ IdAttr string }

// Validate validates the CT_TLSetBehavior and its children
func (_dedeb *CT_TLSetBehavior) Validate() error {
	return _dedeb.ValidateWithPath("\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072")
}

const (
	ST_TLTimeNodeTypeUnset          ST_TLTimeNodeType = 0
	ST_TLTimeNodeTypeClickEffect    ST_TLTimeNodeType = 1
	ST_TLTimeNodeTypeWithEffect     ST_TLTimeNodeType = 2
	ST_TLTimeNodeTypeAfterEffect    ST_TLTimeNodeType = 3
	ST_TLTimeNodeTypeMainSeq        ST_TLTimeNodeType = 4
	ST_TLTimeNodeTypeInteractiveSeq ST_TLTimeNodeType = 5
	ST_TLTimeNodeTypeClickPar       ST_TLTimeNodeType = 6
	ST_TLTimeNodeTypeWithGroup      ST_TLTimeNodeType = 7
	ST_TLTimeNodeTypeAfterGroup     ST_TLTimeNodeType = 8
	ST_TLTimeNodeTypeTmRoot         ST_TLTimeNodeType = 9
)

func (_dcff *CT_SlideSyncProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0053\u006c\u0064\u0049\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _dcff.ServerSldIdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "s\u0065\u0072\u0076\u0065rS\u006cd\u004d\u006f\u0064\u0069\u0066i\u0065\u0064\u0054\u0069\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", _dcff.ServerSldModifiedTimeAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063l\u0069e\u006e\u0074\u0049\u006e\u0073e\u0072\u0074e\u0064\u0054\u0069\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", _dcff.ClientInsertedTimeAttr)})
	e.EncodeToken(start)
	if _dcff.ExtLst != nil {
		_aegc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcff.ExtLst, _aegc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gfaec ST_TLOleChartBuildType) String() string {
	switch _gfaec {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	case 2:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 3:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 4:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 5:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}
func NewOleObj() *OleObj {
	_agcff := &OleObj{}
	_agcff.CT_OleObject = *NewCT_OleObject()
	return _agcff
}

// ValidateWithPath validates the CT_CustomShowList and its children, prefixing error messages with path
func (_ccgbg *CT_CustomShowList) ValidateWithPath(path string) error {
	for _eegb, _ecabc := range _ccgbg.CustShow {
		if _ddce := _ecabc.ValidateWithPath(_gc.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u0053\u0068\u006f\u0077\u005b\u0025\u0064\u005d", path, _eegb)); _ddce != nil {
			return _ddce
		}
	}
	return nil
}
func (_ag *AG_TLBuild) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ag.SpidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ag.SpidAttr)})
	}
	if _ag.GrpIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0070I\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_ag.GrpIdAttr)})
	}
	if _ag.UiExpandAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_ag.UiExpandAttr))})
	}
	return nil
}

type Notes struct{ CT_NotesSlide }

func NewCT_Empty() *CT_Empty { _cfcc := &CT_Empty{}; return _cfcc }
func (_gfgd *CT_ModifyVerifier) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfgd.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.AlgorithmNameAttr)})
	}
	if _gfgd.HashValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.HashValueAttr)})
	}
	if _gfgd.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.SaltValueAttr)})
	}
	if _gfgd.SpinValueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.SpinValueAttr)})
	}
	if _gfgd.CryptProviderTypeAttr != _c.ST_CryptProvUnset {
		_efage, _gbae := _gfgd.CryptProviderTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065"})
		if _gbae != nil {
			return _gbae
		}
		start.Attr = append(start.Attr, _efage)
	}
	if _gfgd.CryptAlgorithmClassAttr != _c.ST_AlgClassUnset {
		_edfc, _ccfac := _gfgd.CryptAlgorithmClassAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073"})
		if _ccfac != nil {
			return _ccfac
		}
		start.Attr = append(start.Attr, _edfc)
	}
	if _gfgd.CryptAlgorithmTypeAttr != _c.ST_AlgTypeUnset {
		_fafb, _acga := _gfgd.CryptAlgorithmTypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065"})
		if _acga != nil {
			return _acga
		}
		start.Attr = append(start.Attr, _fafb)
	}
	if _gfgd.CryptAlgorithmSidAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.CryptAlgorithmSidAttr)})
	}
	if _gfgd.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.SpinCountAttr)})
	}
	if _gfgd.SaltDataAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.SaltDataAttr)})
	}
	if _gfgd.HashDataAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.HashDataAttr)})
	}
	if _gfgd.CryptProviderAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.CryptProviderAttr)})
	}
	if _gfgd.AlgIdExtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.AlgIdExtAttr)})
	}
	if _gfgd.AlgIdExtSourceAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.AlgIdExtSourceAttr)})
	}
	if _gfgd.CryptProviderTypeExtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.CryptProviderTypeExtAttr)})
	}
	if _gfgd.CryptProviderTypeExtSourceAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065"}, Value: _gc.Sprintf("\u0025\u0076", *_gfgd.CryptProviderTypeExtSourceAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OleObjectChoice and its children, prefixing error messages with path
func (_edgab *CT_OleObjectChoice) ValidateWithPath(path string) error {
	if _edgab.Embed != nil {
		if _cegd := _edgab.Embed.ValidateWithPath(path + "\u002f\u0045\u006d\u0062\u0065\u0064"); _cegd != nil {
			return _cegd
		}
	}
	if _edgab.Link != nil {
		if _abfadf := _edgab.Link.ValidateWithPath(path + "\u002f\u004c\u0069n\u006b"); _abfadf != nil {
			return _abfadf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OutlineViewSlideEntry and its children, prefixing error messages with path
func (_eddb *CT_OutlineViewSlideEntry) ValidateWithPath(path string) error { return nil }
func (_ggggf *CT_TLIterateIntervalTime) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbgbf := range start.Attr {
		if _fbgbf.Name.Local == "\u0076\u0061\u006c" {
			_gdafgg, _fcgf := ParseUnionST_TLTime(_fbgbf.Value)
			if _fcgf != nil {
				return _fcgf
			}
			_ggggf.ValAttr = _gdafgg
			continue
		}
	}
	for {
		_decfg, _cbcdc := d.Token()
		if _cbcdc != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054LIt\u0065ra\u0074\u0065\u0049\u006e\u0074\u0065\u0072va\u006c\u0054\u0069\u006d\u0065\u003a\u0020%\u0073", _cbcdc)
		}
		if _ggef, _acgcb := _decfg.(_d.EndElement); _acgcb && _ggef.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CommentList and its children
func (_cff *CT_CommentList) Validate() error {
	return _cff.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}

type ST_PlaceholderType byte

// ValidateWithPath validates the CT_SlideSyncProperties and its children, prefixing error messages with path
func (_dccc *CT_SlideSyncProperties) ValidateWithPath(path string) error {
	if _dccc.ExtLst != nil {
		if _agdb := _dccc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agdb != nil {
			return _agdb
		}
	}
	return nil
}

type CT_HeaderFooter struct {

	// Slide Number Placeholder
	SldNumAttr *bool

	// Header Placeholder
	HdrAttr *bool

	// Footer Placeholder
	FtrAttr *bool

	// Date/Time Placeholder
	DtAttr *bool
	ExtLst *CT_ExtensionListModify
}

// Validate validates the CT_CustomShow and its children
func (_fedc *CT_CustomShow) Validate() error {
	return _fedc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077")
}
func (_dfaaa ST_ViewType) String() string {
	switch _dfaaa {
	case 0:
		return ""
	case 1:
		return "\u0073l\u0064\u0056\u0069\u0065\u0077"
	case 2:
		return "\u0073\u006c\u0064\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 3:
		return "\u006eo\u0074\u0065\u0073\u0056\u0069\u0065w"
	case 4:
		return "h\u0061\u006e\u0064\u006f\u0075\u0074\u0056\u0069\u0065\u0077"
	case 5:
		return "\u006eo\u0074e\u0073\u004d\u0061\u0073\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 6:
		return "o\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077"
	case 7:
		return "\u0073\u006c\u0064\u0053\u006f\u0072\u0074\u0065\u0072\u0056\u0069\u0065\u0077"
	case 8:
		return "\u0073\u006cd\u0054\u0068\u0075m\u0062\u006e\u0061\u0069\u006c\u0056\u0069\u0065\u0077"
	}
	return ""
}

type EG_SlideListChoice struct {

	// All Slides
	SldAll *CT_Empty

	// Slide Range
	SldRg *CT_IndexRange

	// Custom Show
	CustShow *CT_CustomShowId
}

func (_fffd *CT_Kinsoku) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aeefg := range start.Attr {
		if _aeefg.Name.Local == "\u006c\u0061\u006e\u0067" {
			_febd, _agfc := _aeefg.Value, error(nil)
			if _agfc != nil {
				return _agfc
			}
			_fffd.LangAttr = &_febd
			continue
		}
		if _aeefg.Name.Local == "\u0069\u006e\u0076a\u006c\u0053\u0074\u0043\u0068\u0061\u0072\u0073" {
			_adce, _faed := _aeefg.Value, error(nil)
			if _faed != nil {
				return _faed
			}
			_fffd.InvalStCharsAttr = _adce
			continue
		}
		if _aeefg.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0045\u006e\u0064\u0043\u0068\u0061\u0072\u0073" {
			_aaff, _dgae := _aeefg.Value, error(nil)
			if _dgae != nil {
				return _dgae
			}
			_fffd.InvalEndCharsAttr = _aaff
			continue
		}
	}
	for {
		_cfab, _dfbb := d.Token()
		if _dfbb != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075\u003a\u0020%\u0073", _dfbb)
		}
		if _eddg, _faca := _cfab.(_d.EndElement); _faca && _eddg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_EmbeddedFontListEntry() *CT_EmbeddedFontListEntry {
	_aggg := &CT_EmbeddedFontListEntry{}
	_aggg.Font = _ad.NewCT_TextFont()
	return _aggg
}
func (_fecg ST_TransitionSideDirectionType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fecg.String(), start)
}
func (_ababb ST_TLAnimateColorDirection) Validate() error { return _ababb.ValidateWithPath("") }
func (_gdaf *CT_ModifyVerifier) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgfg := range start.Attr {
		if _dgfg.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_afagd, _gebb := _dc.ParseUint(_dgfg.Value, 10, 32)
			if _gebb != nil {
				return _gebb
			}
			_adeed := uint32(_afagd)
			_gdaf.SpinCountAttr = &_adeed
			continue
		}
		if _dgfg.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_dccbb, _addf := _dgfg.Value, error(nil)
			if _addf != nil {
				return _addf
			}
			_gdaf.AlgorithmNameAttr = &_dccbb
			continue
		}
		if _dgfg.Name.Local == "\u0073\u0061\u006c\u0074\u0044\u0061\u0074\u0061" {
			_fefae, _afdb := _dgfg.Value, error(nil)
			if _afdb != nil {
				return _afdb
			}
			_gdaf.SaltDataAttr = &_fefae
			continue
		}
		if _dgfg.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_fafg, _daeg := _dgfg.Value, error(nil)
			if _daeg != nil {
				return _daeg
			}
			_gdaf.SaltValueAttr = &_fafg
			continue
		}
		if _dgfg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065r\u0054\u0079\u0070\u0065" {
			_gdaf.CryptProviderTypeAttr.UnmarshalXMLAttr(_dgfg)
			continue
		}
		if _dgfg.Name.Local == "\u0063\u0072\u0079\u0070tA\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u0043\u006c\u0061\u0073\u0073" {
			_gdaf.CryptAlgorithmClassAttr.UnmarshalXMLAttr(_dgfg)
			continue
		}
		if _dgfg.Name.Local == "\u0063r\u0079p\u0074\u0041\u006c\u0067\u006fr\u0069\u0074h\u006d\u0054\u0079\u0070\u0065" {
			_gdaf.CryptAlgorithmTypeAttr.UnmarshalXMLAttr(_dgfg)
			continue
		}
		if _dgfg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0041\u006c\u0067\u006f\u0072\u0069\u0074h\u006d\u0053\u0069\u0064" {
			_dfca, _cgc := _dc.ParseUint(_dgfg.Value, 10, 32)
			if _cgc != nil {
				return _cgc
			}
			_abgcb := uint32(_dfca)
			_gdaf.CryptAlgorithmSidAttr = &_abgcb
			continue
		}
		if _dgfg.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_gebae, _fefd := _dgfg.Value, error(nil)
			if _fefd != nil {
				return _fefd
			}
			_gdaf.HashValueAttr = &_gebae
			continue
		}
		if _dgfg.Name.Local == "\u0073p\u0069\u006e\u0056\u0061\u006c\u0075e" {
			_dbc, _cabg := _dc.ParseUint(_dgfg.Value, 10, 32)
			if _cabg != nil {
				return _cabg
			}
			_egc := uint32(_dbc)
			_gdaf.SpinValueAttr = &_egc
			continue
		}
		if _dgfg.Name.Local == "\u0068\u0061\u0073\u0068\u0044\u0061\u0074\u0061" {
			_ceabc, _eea := _dgfg.Value, error(nil)
			if _eea != nil {
				return _eea
			}
			_gdaf.HashDataAttr = &_ceabc
			continue
		}
		if _dgfg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064\u0065\u0072" {
			_dggg, _bbde := _dgfg.Value, error(nil)
			if _bbde != nil {
				return _bbde
			}
			_gdaf.CryptProviderAttr = &_dggg
			continue
		}
		if _dgfg.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074" {
			_aagea, _adgb := _dc.ParseUint(_dgfg.Value, 10, 32)
			if _adgb != nil {
				return _adgb
			}
			_gffd := uint32(_aagea)
			_gdaf.AlgIdExtAttr = &_gffd
			continue
		}
		if _dgfg.Name.Local == "\u0061\u006c\u0067\u0049\u0064\u0045\u0078\u0074\u0053o\u0075\u0072\u0063\u0065" {
			_bee, _fggg := _dgfg.Value, error(nil)
			if _fggg != nil {
				return _fggg
			}
			_gdaf.AlgIdExtSourceAttr = &_bee
			continue
		}
		if _dgfg.Name.Local == "c\u0072y\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070eE\u0078\u0074" {
			_eeaa, _fbcb := _dc.ParseUint(_dgfg.Value, 10, 32)
			if _fbcb != nil {
				return _fbcb
			}
			_afdd := uint32(_eeaa)
			_gdaf.CryptProviderTypeExtAttr = &_afdd
			continue
		}
		if _dgfg.Name.Local == "\u0063\u0072\u0079\u0070\u0074\u0050\u0072\u006f\u0076\u0069\u0064e\u0072\u0054\u0079\u0070\u0065\u0045\u0078\u0074\u0053\u006fu\u0072\u0063\u0065" {
			_cbbf, _adbc := _dgfg.Value, error(nil)
			if _adbc != nil {
				return _adbc
			}
			_gdaf.CryptProviderTypeExtSourceAttr = &_cbbf
			continue
		}
	}
	for {
		_bgb, _bcc := d.Token()
		if _bcc != nil {
			return _gc.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072\u0069\u0066\u0069\u0065\u0072: \u0025\u0073", _bcc)
		}
		if _edda, _feeac := _bgb.(_d.EndElement); _feeac && _edda.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cead *CT_HeaderFooter) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fddd := range start.Attr {
		if _fddd.Name.Local == "\u0073\u006c\u0064\u004e\u0075\u006d" {
			_ecag, _egdge := _dc.ParseBool(_fddd.Value)
			if _egdge != nil {
				return _egdge
			}
			_cead.SldNumAttr = &_ecag
			continue
		}
		if _fddd.Name.Local == "\u0068\u0064\u0072" {
			_gdbf, _bdd := _dc.ParseBool(_fddd.Value)
			if _bdd != nil {
				return _bdd
			}
			_cead.HdrAttr = &_gdbf
			continue
		}
		if _fddd.Name.Local == "\u0066\u0074\u0072" {
			_fbda, _aaaga := _dc.ParseBool(_fddd.Value)
			if _aaaga != nil {
				return _aaaga
			}
			_cead.FtrAttr = &_fbda
			continue
		}
		if _fddd.Name.Local == "\u0064\u0074" {
			_cde, _bfcg := _dc.ParseBool(_fddd.Value)
			if _bfcg != nil {
				return _bfcg
			}
			_cead.DtAttr = &_cde
			continue
		}
	}
_adde:
	for {
		_addg, _ggaf := d.Token()
		if _ggaf != nil {
			return _ggaf
		}
		switch _aeaec := _addg.(type) {
		case _d.StartElement:
			switch _aeaec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cead.ExtLst = NewCT_ExtensionListModify()
				if _abga := d.DecodeElement(_cead.ExtLst, &_aeaec); _abga != nil {
					return _abga
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _aeaec.Name)
				if _cefa := d.Skip(); _cefa != nil {
					return _cefa
				}
			}
		case _d.EndElement:
			break _adde
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_NotesTextViewProperties and its children
func (_dcae *CT_NotesTextViewProperties) Validate() error {
	return _dcae.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_efff *CT_CommonViewProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efff.VarScaleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u0072\u0053\u0063\u0061\u006c\u0065"}, Value: _gc.Sprintf("\u0025\u0064", _cfgbd(*_efff.VarScaleAttr))})
	}
	e.EncodeToken(start)
	_aeba := _d.StartElement{Name: _d.Name{Local: "\u0070:\u0073\u0063\u0061\u006c\u0065"}}
	e.EncodeElement(_efff.Scale, _aeba)
	_efc := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u006f\u0072\u0069\u0067\u0069\u006e"}}
	e.EncodeElement(_efff.Origin, _efc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SideDirectionTransition and its children, prefixing error messages with path
func (_gecc *CT_SideDirectionTransition) ValidateWithPath(path string) error {
	if _fedeac := _gecc.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _fedeac != nil {
		return _fedeac
	}
	return nil
}

// ValidateWithPath validates the CT_TLCommonMediaNodeData and its children, prefixing error messages with path
func (_becc *CT_TLCommonMediaNodeData) ValidateWithPath(path string) error {
	if _becc.VolAttr != nil {
		if _gcgd := _becc.VolAttr.ValidateWithPath(path + "\u002f\u0056\u006f\u006c\u0041\u0074\u0074\u0072"); _gcgd != nil {
			return _gcgd
		}
	}
	if _bfce := _becc.CTn.ValidateWithPath(path + "\u002f\u0043\u0054\u006e"); _bfce != nil {
		return _bfce
	}
	if _fbcff := _becc.TgtEl.ValidateWithPath(path + "\u002f\u0054\u0067\u0074\u0045\u006c"); _fbcff != nil {
		return _fbcff
	}
	return nil
}

// ValidateWithPath validates the Presentation and its children, prefixing error messages with path
func (_dggdab *Presentation) ValidateWithPath(path string) error {
	if _ddec := _dggdab.CT_Presentation.ValidateWithPath(path); _ddec != nil {
		return _ddec
	}
	return nil
}
func (_ffdcb ST_TLTimeNodePresetClassType) Validate() error     { return _ffdcb.ValidateWithPath("") }
func (_ffgcd ST_TLAnimateMotionBehaviorOrigin) Validate() error { return _ffgcd.ValidateWithPath("") }

// Validate validates the CT_TLTimeConditionList and its children
func (_bgddga *CT_TLTimeConditionList) Validate() error {
	return _bgddga.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074")
}
func (_dfgbe ST_TLTriggerEvent) Validate() error { return _dfgbe.ValidateWithPath("") }

// ValidateWithPath validates the CT_TLAnimateBehavior and its children, prefixing error messages with path
func (_efaa *CT_TLAnimateBehavior) ValidateWithPath(path string) error {
	if _cedca := _efaa.CalcmodeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u006d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cedca != nil {
		return _cedca
	}
	if _cdeae := _efaa.ValueTypeAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _cdeae != nil {
		return _cdeae
	}
	if _abgg := _efaa.CBhvr.ValidateWithPath(path + "\u002f\u0043\u0042\u0068\u0076\u0072"); _abgg != nil {
		return _abgg
	}
	if _efaa.TavLst != nil {
		if _cfcbf := _efaa.TavLst.ValidateWithPath(path + "\u002fT\u0061\u0076\u004c\u0073\u0074"); _cfcbf != nil {
			return _cfcbf
		}
	}
	return nil
}

type CT_HandoutMasterIdListEntry struct {
	IdAttr string
	ExtLst *CT_ExtensionList
}

func (_bedbc ST_TLBehaviorOverrideType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bedbc.String(), start)
}
func (_bgcgg ST_WebScreenSize) Validate() error { return _bgcgg.ValidateWithPath("") }
func NewCT_NotesTextViewProperties() *CT_NotesTextViewProperties {
	_cbba := &CT_NotesTextViewProperties{}
	_cbba.CViewPr = NewCT_CommonViewProperties()
	return _cbba
}

// ValidateWithPath validates the CT_Background and its children, prefixing error messages with path
func (_dgb *CT_Background) ValidateWithPath(path string) error {
	if _ccad := _dgb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _ccad != nil {
		return _ccad
	}
	if _dgb.BgPr != nil {
		if _dccb := _dgb.BgPr.ValidateWithPath(path + "\u002f\u0042\u0067P\u0072"); _dccb != nil {
			return _dccb
		}
	}
	if _dgb.BgRef != nil {
		if _fcb := _dgb.BgRef.ValidateWithPath(path + "\u002f\u0042\u0067\u0052\u0065\u0066"); _fcb != nil {
			return _fcb
		}
	}
	return nil
}

// Validate validates the CT_TLTriggerTimeNodeID and its children
func (_ccdae *CT_TLTriggerTimeNodeID) Validate() error {
	return _ccdae.ValidateWithPath("\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044")
}
func NewPresentationPr() *PresentationPr {
	_aagbf := &PresentationPr{}
	_aagbf.CT_PresentationProperties = *NewCT_PresentationProperties()
	return _aagbf
}
func (_cbcbfg *ST_TransitionSpeed) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cbcbfg = 0
	case "\u0073\u006c\u006f\u0077":
		*_cbcbfg = 1
	case "\u006d\u0065\u0064":
		*_cbcbfg = 2
	case "\u0066\u0061\u0073\u0074":
		*_cbcbfg = 3
	}
	return nil
}

type ST_PlaceholderSize byte

func (_afafee *ST_PrintColorMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_afafee = 0
	case "\u0062\u0077":
		*_afafee = 1
	case "\u0067\u0072\u0061\u0079":
		*_afafee = 2
	case "\u0063\u006c\u0072":
		*_afafee = 3
	}
	return nil
}
func (_cbe *CT_CommentAuthor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _gc.Sprintf("\u0025\u0076", _cbe.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _gc.Sprintf("\u0025\u0076", _cbe.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0073"}, Value: _gc.Sprintf("\u0025\u0076", _cbe.InitialsAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0049\u0064\u0078"}, Value: _gc.Sprintf("\u0025\u0076", _cbe.LastIdxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006c\u0072\u0049\u0064\u0078"}, Value: _gc.Sprintf("\u0025\u0076", _cbe.ClrIdxAttr)})
	e.EncodeToken(start)
	if _cbe.ExtLst != nil {
		_aad := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbe.ExtLst, _aad)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TLBuildDiagram() *CT_TLBuildDiagram { _egbe := &CT_TLBuildDiagram{}; return _egbe }
func (_dadb *CT_TLAnimVariantBooleanVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbbf := range start.Attr {
		if _gbbf.Name.Local == "\u0076\u0061\u006c" {
			_ddcd, _ebdce := _dc.ParseBool(_gbbf.Value)
			if _ebdce != nil {
				return _ebdce
			}
			_dadb.ValAttr = _ddcd
			continue
		}
	}
	for {
		_dgbg, _ggag := d.Token()
		if _ggag != nil {
			return _gc.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074B\u006f\u006f\u006c\u0065\u0061n\u0056\u0061l\u003a\u0020\u0025\u0073", _ggag)
		}
		if _aggac, _fbeaa := _dgbg.(_d.EndElement); _fbeaa && _aggac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_debdb ST_TLBehaviorOverrideType) String() string {
	switch _debdb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0063\u0068\u0069\u006c\u0064\u0053\u0074\u0079\u006c\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_TLIterateData and its children, prefixing error messages with path
func (_bcadd *CT_TLIterateData) ValidateWithPath(path string) error {
	if _egge := _bcadd.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _egge != nil {
		return _egge
	}
	if _bcadd.TmAbs != nil {
		if _cace := _bcadd.TmAbs.ValidateWithPath(path + "\u002f\u0054\u006d\u0041\u0062\u0073"); _cace != nil {
			return _cace
		}
	}
	if _bcadd.TmPct != nil {
		if _bdaaa := _bcadd.TmPct.ValidateWithPath(path + "\u002f\u0054\u006d\u0050\u0063\u0074"); _bdaaa != nil {
			return _bdaaa
		}
	}
	return nil
}

const (
	ST_SplitterBarStateUnset     ST_SplitterBarState = 0
	ST_SplitterBarStateMinimized ST_SplitterBarState = 1
	ST_SplitterBarStateRestored  ST_SplitterBarState = 2
	ST_SplitterBarStateMaximized ST_SplitterBarState = 3
)

func (_fgfcb ST_IterateType) Validate() error { return _fgfcb.ValidateWithPath("") }
func (_dacddg *CT_TLBuildParagraph) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fcgb := range start.Attr {
		if _fcgb.Name.Local == "\u0062\u0075\u0069l\u0064" {
			_dacddg.BuildAttr.UnmarshalXMLAttr(_fcgb)
			continue
		}
		if _fcgb.Name.Local == "\u0062\u006c\u0064\u004c\u0076\u006c" {
			_febdf, _fbcd := _dc.ParseUint(_fcgb.Value, 10, 32)
			if _fbcd != nil {
				return _fbcd
			}
			_gcaccd := uint32(_febdf)
			_dacddg.BldLvlAttr = &_gcaccd
			continue
		}
		if _fcgb.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_bdeb, _ebbef := _dc.ParseBool(_fcgb.Value)
			if _ebbef != nil {
				return _ebbef
			}
			_dacddg.AnimBgAttr = &_bdeb
			continue
		}
		if _fcgb.Name.Local == "\u0061\u0075t\u006f\u0055\u0070d\u0061\u0074\u0065\u0041\u006e\u0069\u006d\u0042\u0067" {
			_fcgacb, _ffdf := _dc.ParseBool(_fcgb.Value)
			if _ffdf != nil {
				return _ffdf
			}
			_dacddg.AutoUpdateAnimBgAttr = &_fcgacb
			continue
		}
		if _fcgb.Name.Local == "\u0072\u0065\u0076" {
			_bbcda, _gcdc := _dc.ParseBool(_fcgb.Value)
			if _gcdc != nil {
				return _gcdc
			}
			_dacddg.RevAttr = &_bbcda
			continue
		}
		if _fcgb.Name.Local == "\u0061d\u0076\u0041\u0075\u0074\u006f" {
			_bfad, _gegcf := ParseUnionST_TLTime(_fcgb.Value)
			if _gegcf != nil {
				return _gegcf
			}
			_dacddg.AdvAutoAttr = &_bfad
			continue
		}
		if _fcgb.Name.Local == "\u0073\u0070\u0069\u0064" {
			_aaef, _gdfde := _dc.ParseUint(_fcgb.Value, 10, 32)
			if _gdfde != nil {
				return _gdfde
			}
			_beade := uint32(_aaef)
			_dacddg.SpidAttr = &_beade
			continue
		}
		if _fcgb.Name.Local == "\u0067\u0072\u0070I\u0064" {
			_cfcga, _dbabf := _dc.ParseUint(_fcgb.Value, 10, 32)
			if _dbabf != nil {
				return _dbabf
			}
			_cagg := uint32(_cfcga)
			_dacddg.GrpIdAttr = &_cagg
			continue
		}
		if _fcgb.Name.Local == "\u0075\u0069\u0045\u0078\u0070\u0061\u006e\u0064" {
			_dbgbd, _dgfbf := _dc.ParseBool(_fcgb.Value)
			if _dgfbf != nil {
				return _dgfbf
			}
			_dacddg.UiExpandAttr = &_dbgbd
			continue
		}
	}
_fbgbd:
	for {
		_cged, _agbec := d.Token()
		if _agbec != nil {
			return _agbec
		}
		switch _aggec := _cged.(type) {
		case _d.StartElement:
			switch _aggec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074m\u0070\u006c\u004c\u0073\u0074"}:
				_dacddg.TmplLst = NewCT_TLTemplateList()
				if _afagb := d.DecodeElement(_dacddg.TmplLst, &_aggec); _afagb != nil {
					return _afagb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064Pa\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025\u0076", _aggec.Name)
				if _ffbcd := d.Skip(); _ffbcd != nil {
					return _ffbcd
				}
			}
		case _d.EndElement:
			break _fbgbd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TLTemplateList and its children
func (_ecdbf *CT_TLTemplateList) Validate() error {
	return _ecdbf.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074")
}

// Validate validates the Presentation and its children
func (_dfed *Presentation) Validate() error {
	return _dfed.ValidateWithPath("\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e")
}
func (_cfac *CT_OutlineViewSlideEntry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ceec := range start.Attr {
		if _ceec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ceec.Name.Local == "\u0069\u0064" || _ceec.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ceec.Name.Local == "\u0069\u0064" {
			_abgcd, _eebf := _ceec.Value, error(nil)
			if _eebf != nil {
				return _eebf
			}
			_cfac.IdAttr = _abgcd
			continue
		}
		if _ceec.Name.Local == "\u0063\u006f\u006c\u006c\u0061\u0070\u0073\u0065" {
			_faec, _fggdb := _dc.ParseBool(_ceec.Value)
			if _fggdb != nil {
				return _fggdb
			}
			_cfac.CollapseAttr = &_faec
			continue
		}
	}
	for {
		_ggfe, _gdde := d.Token()
		if _gdde != nil {
			return _gc.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004futl\u0069ne\u0056\u0069\u0065\u0077\u0053\u006c\u0069de\u0045\u006e\u0074\u0072\u0079\u003a\u0020%\u0073", _gdde)
		}
		if _eced, _aaea := _ggfe.(_d.EndElement); _aaea && _eced.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdgc *ST_PrintWhat) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgaf, _beggc := d.Token()
	if _beggc != nil {
		return _beggc
	}
	if _cdaff, _cbfbc := _dgaf.(_d.EndElement); _cbfbc && _cdaff.Name == start.Name {
		*_cdgc = 1
		return nil
	}
	if _bbeag, _cbfbb := _dgaf.(_d.CharData); !_cbfbb {
		return _gc.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dgaf)
	} else {
		switch string(_bbeag) {
		case "":
			*_cdgc = 0
		case "\u0073\u006c\u0069\u0064\u0065\u0073":
			*_cdgc = 1
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00731":
			*_cdgc = 2
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00732":
			*_cdgc = 3
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00733":
			*_cdgc = 4
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00734":
			*_cdgc = 5
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00736":
			*_cdgc = 6
		case "\u0068a\u006e\u0064\u006f\u0075\u0074\u00739":
			*_cdgc = 7
		case "\u006e\u006f\u0074e\u0073":
			*_cdgc = 8
		case "\u006fu\u0074\u006c\u0069\u006e\u0065":
			*_cdgc = 9
		}
	}
	_dgaf, _beggc = d.Token()
	if _beggc != nil {
		return _beggc
	}
	if _bdabf, _bfdag := _dgaf.(_d.EndElement); _bfdag && _bdabf.Name == start.Name {
		return nil
	}
	return _gc.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dgaf)
}

// ValidateWithPath validates the CT_CommonViewProperties and its children, prefixing error messages with path
func (_ccgb *CT_CommonViewProperties) ValidateWithPath(path string) error {
	if _adef := _ccgb.Scale.ValidateWithPath(path + "\u002f\u0053\u0063\u0061\u006c\u0065"); _adef != nil {
		return _adef
	}
	if _cee := _ccgb.Origin.ValidateWithPath(path + "\u002fO\u0072\u0069\u0067\u0069\u006e"); _cee != nil {
		return _cee
	}
	return nil
}
func NewCT_SlideLayoutIdListEntry() *CT_SlideLayoutIdListEntry {
	_ebcd := &CT_SlideLayoutIdListEntry{}
	return _ebcd
}

// Validate validates the CT_TagList and its children
func (_fggebc *CT_TagList) Validate() error {
	return _fggebc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074")
}

type ST_TLTimeNodeRestartType byte

func (_cdfea *CT_TLTimeNodeParallel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eefea := _d.StartElement{Name: _d.Name{Local: "\u0070\u003a\u0063T\u006e"}}
	e.EncodeElement(_cdfea.CTn, _eefea)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TLAnimVariantFloatVal and its children, prefixing error messages with path
func (_dbdee *CT_TLAnimVariantFloatVal) ValidateWithPath(path string) error { return nil }
func (_adc *CT_Background) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gcc := range start.Attr {
		if _gcc.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_adc.BwModeAttr.UnmarshalXMLAttr(_gcc)
			continue
		}
	}
_efbd:
	for {
		_ge, _ca := d.Token()
		if _ca != nil {
			return _ca
		}
		switch _fde := _ge.(type) {
		case _d.StartElement:
			switch _fde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0050\u0072"}:
				_adc.BgPr = NewCT_BackgroundProperties()
				if _ccgd := d.DecodeElement(_adc.BgPr, &_fde); _ccgd != nil {
					return _ccgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074t\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072\u0067\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0052e\u0066"}:
				_adc.BgRef = _ad.NewCT_StyleMatrixReference()
				if _gdb := d.DecodeElement(_adc.BgRef, &_fde); _gdb != nil {
					return _gdb
				}
			default:
				_de.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064 \u0025\u0076", _fde.Name)
				if _efe := d.Skip(); _efe != nil {
					return _efe
				}
			}
		case _d.EndElement:
			break _efbd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TLTriggerTimeNodeID() *CT_TLTriggerTimeNodeID {
	_geaea := &CT_TLTriggerTimeNodeID{}
	return _geaea
}

const (
	ST_TLNextActionTypeUnset ST_TLNextActionType = 0
	ST_TLNextActionTypeNone  ST_TLNextActionType = 1
	ST_TLNextActionTypeSeek  ST_TLNextActionType = 2
)

// Validate validates the CT_TLBehaviorAttributeNameList and its children
func (_agdc *CT_TLBehaviorAttributeNameList) Validate() error {
	return _agdc.ValidateWithPath("\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074")
}

// Validate validates the CT_TLMediaNodeVideo and its children
func (_cfgc *CT_TLMediaNodeVideo) Validate() error {
	return _cfgc.ValidateWithPath("\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f")
}

// Validate validates the CT_CommentAuthor and its children
func (_dcgd *CT_CommentAuthor) Validate() error {
	return _dcgd.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072")
}
func NewCT_CommentAuthorList() *CT_CommentAuthorList { _gdbc := &CT_CommentAuthorList{}; return _gdbc }

// ValidateWithPath validates the CT_TLBuildDiagram and its children, prefixing error messages with path
func (_fafe *CT_TLBuildDiagram) ValidateWithPath(path string) error {
	if _ddcde := _fafe.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _ddcde != nil {
		return _ddcde
	}
	return nil
}

// Validate validates the CT_ShowInfoKiosk and its children
func (_bafeg *CT_ShowInfoKiosk) Validate() error {
	return _bafeg.ValidateWithPath("\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b")
}
func init() {
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u0064\u0065\u0044\u0069\u0072\u0065c\u0074\u0069\u006f\u006e\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_SideDirectionTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u0072\u006e\u0065\u0072\u0044\u0069\u0072\u0065\u0063\u0074i\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074i\u006f\u006e", NewCT_CornerDirectionTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u0069\u0067\u0068t\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006eT\u0072\u0061\u006es\u0069t\u0069\u006f\u006e", NewCT_EightDirectionTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006fn\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e", NewCT_OrientationTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fI\u006e\u004f\u0075\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_InOutTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u0070\u0074\u0069\u006f\u006e\u0061\u006cB\u006c\u0061\u0063\u006b\u0054\u0072\u0061\u006e\u0073\u0069t\u0069\u006f\u006e", NewCT_OptionalBlackTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u0070\u006c\u0069\u0074\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SplitTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fW\u0068\u0065\u0065\u006c\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_WheelTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0053\u0074\u0061\u0072\u0074\u0053\u006f\u0075\u006e\u0064\u0041\u0063ti\u006f\u006e", NewCT_TransitionStartSoundAction)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u0072\u0061\u006e\u0073\u0069\u0074\u0069\u006f\u006eS\u006f\u0075\u006e\u0064\u0041\u0063\u0074\u0069\u006f\u006e", NewCT_TransitionSoundAction)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fS\u006c\u0069\u0064\u0065\u0054r\u0061\u006es\u0069\u0074\u0069\u006f\u006e", NewCT_SlideTransition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061\u0074\u0065\u0049n\u0074\u0065\u0072\u0076\u0061\u006c\u0054\u0069\u006d\u0065", NewCT_TLIterateIntervalTime)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0049\u0074\u0065\u0072\u0061t\u0065\u0049\u006e\u0074\u0065\u0072\u0076a\u006c\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_TLIterateIntervalPercentage)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0049t\u0065\u0072\u0061\u0074\u0065\u0044\u0061\u0074\u0061", NewCT_TLIterateData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0053\u0075\u0062\u0053\u0068\u0061\u0070\u0065\u0049\u0064", NewCT_TLSubShapeId)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0065\u0078\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTextTargetElement)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u004f\u006c\u0065\u0043\u0068\u0061r\u0074\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065m\u0065\u006e\u0074", NewCT_TLOleChartTargetElement)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0053\u0068\u0061\u0070\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_TLShapeTargetElement)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0054\u0061\u0072\u0067\u0065\u0074\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_TLTimeTargetElement)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0072\u0069\u0067\u0067\u0065\u0072\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065I\u0044", NewCT_TLTriggerTimeNodeID)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0054\u0072\u0069\u0067\u0067\u0065\u0072\u0052\u0075\u006e\u0074\u0069\u006d\u0065\u004e\u006f\u0064\u0065", NewCT_TLTriggerRuntimeNode)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u0054\u0069\u006d\u0065C\u006f\u006ed\u0069\u0074\u0069\u006f\u006e", NewCT_TLTimeCondition)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u004c\u0069s\u0074", NewCT_TLTimeConditionList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_TimeNodeList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0054\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonTimeNodeData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0050a\u0072\u0061\u006c\u006c\u0065\u006c", NewCT_TLTimeNodeParallel)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u004e\u006f\u0064\u0065\u0053e\u0071\u0075\u0065\u006e\u0063\u0065", NewCT_TLTimeNodeSequence)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LT\u0069\u006d\u0065\u004e\u006f\u0064\u0065\u0045\u0078\u0063\u006c\u0075\u0073\u0069v\u0065", NewCT_TLTimeNodeExclusive)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0065\u0068\u0061\u0076i\u006f\u0072\u0041\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u004e\u0061\u006d\u0065\u004c\u0069\u0073\u0074", NewCT_TLBehaviorAttributeNameList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fTL\u0043\u006f\u006d\u006d\u006f\u006e\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072\u0044\u0061\u0074\u0061", NewCT_TLCommonBehaviorData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0042\u006f\u006f\u006c\u0065\u0061n\u0056\u0061\u006c", NewCT_TLAnimVariantBooleanVal)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061r\u0069\u0061\u006e\u0074\u0049\u006e\u0074\u0065\u0067\u0065r\u0056\u0061\u006c", NewCT_TLAnimVariantIntegerVal)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0056\u0061\u0072\u0069a\u006e\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c", NewCT_TLAnimVariantFloatVal)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072i\u0061n\u0074S\u0074\u0072\u0069\u006e\u0067\u0056\u0061l", NewCT_TLAnimVariantStringVal)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0041n\u0069\u006d\u0056\u0061\u0072\u0069\u0061\u006e\u0074", NewCT_TLAnimVariant)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u004cTi\u006de\u0041\u006e\u0069\u006d\u0061t\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_TLTimeAnimateValue)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0054i\u006d\u0065\u0041\u006e\u0069m\u0061t\u0065V\u0061\u006c\u0075\u0065\u004c\u0069\u0073t", NewCT_TLTimeAnimateValueList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLAnimateBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0052\u0067\u0062\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByRgbColorTransform)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0042\u0079\u0048\u0073\u006c\u0043\u006f\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_TLByHslColorTransform)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0042\u0079\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0043o\u006co\u0072\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d", NewCT_TLByAnimateColorTransform)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065C\u006fl\u006fr\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateColorBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u0045\u0066\u0066\u0065\u0063\u0074\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateEffectBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0050\u006f\u0069\u006e\u0074", NewCT_TLPoint)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0041\u006e\u0069\u006d\u0061\u0074e\u004d\u006f\u0074\u0069\u006f\u006e\u0042\u0065\u0068\u0061v\u0069\u006f\u0072", NewCT_TLAnimateMotionBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054L\u0041\u006e\u0069\u006d\u0061\u0074\u0065\u0052\u006f\u0074a\u0074i\u006f\u006e\u0042\u0065\u0068\u0061\u0076i\u006f\u0072", NewCT_TLAnimateRotationBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0041n\u0069\u006d\u0061\u0074\u0065S\u0063a\u006ce\u0042\u0065\u0068\u0061\u0076\u0069\u006fr", NewCT_TLAnimateScaleBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0054\u004c\u0043\u006f\u006d\u006d\u0061\u006ed\u0042\u0065\u0068\u0061vi\u006f\u0072", NewCT_TLCommandBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0054\u004c\u0053e\u0074\u0042\u0065\u0068\u0061\u0076\u0069\u006f\u0072", NewCT_TLSetBehavior)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0043\u006f\u006d\u006d\u006f\u006e\u004d\u0065d\u0069\u0061\u004e\u006f\u0064\u0065\u0044\u0061\u0074\u0061", NewCT_TLCommonMediaNodeData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0041\u0075\u0064\u0069\u006f", NewCT_TLMediaNodeAudio)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LM\u0065\u0064\u0069\u0061\u004e\u006f\u0064\u0065\u0056\u0069\u0064\u0065\u006f", NewCT_TLMediaNodeVideo)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065", NewCT_TLTemplate)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u004c\u0069\u0073\u0074", NewCT_TLTemplateList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054LB\u0075\u0069\u006c\u0064\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TLBuildParagraph)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064\u0044\u0069a\u0067\u0072\u0061\u006d", NewCT_TLBuildDiagram)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fT\u004c\u004f\u006c\u0065\u0042u\u0069\u006cd\u0043\u0068\u0061\u0072\u0074", NewCT_TLOleBuildChart)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0054\u004c\u0047r\u0061\u0070\u0068\u0069\u0063a\u006cO\u0062j\u0065\u0063\u0074\u0042\u0075\u0069\u006cd", NewCT_TLGraphicalObjectBuild)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fB\u0075\u0069\u006c\u0064\u004c\u0069\u0073\u0074", NewCT_BuildList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0054i\u006d\u0069\u006e\u0067", NewCT_SlideTiming)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079", NewCT_Empty)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0052\u0061\u006e\u0067\u0065", NewCT_IndexRange)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074\u0045nt\u0072\u0079", NewCT_SlideRelationshipListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u0052\u0065\u006c\u0061\u0074i\u006f\u006e\u0073\u0068\u0069\u0070\u004c\u0069\u0073\u0074", NewCT_SlideRelationshipList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077\u0049\u0064", NewCT_CustomShowId)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061", NewCT_CustomerData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0067\u0073\u0044\u0061\u0074\u0061", NewCT_TagsData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0065\u0072\u0044\u0061\u0074\u0061\u004c\u0069\u0073\u0074", NewCT_CustomerDataList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u004d\u006f\u0064\u0069f\u0079", NewCT_ExtensionListModify)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006dm\u0065\u006e\u0074\u0041\u0075\u0074\u0068\u006f\u0072", NewCT_CommentAuthor)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0041u\u0074\u0068\u006f\u0072Li\u0073\u0074", NewCT_CommentAuthorList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074E\u006d\u0062\u0065\u0064", NewCT_OleObjectEmbed)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u004c\u0069\u006e\u006b", NewCT_OleObjectLink)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006fl\u004c\u0069\u0073\u0074", NewCT_ControlList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0049\u0064\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_SlideIdListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u0049d\u004c\u0069\u0073\u0074", NewCT_SlideIdList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideMasterIdListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_SlideMasterIdList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004e\u006f\u0074e\u0073\u004d\u0061\u0073\u0074e\u0072I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_NotesMasterIdListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0074\u0065\u0073\u004d\u0061\u0073t\u0065\u0072\u0049\u0064Li\u0073\u0074", NewCT_NotesMasterIdList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0048\u0061\u006e\u0064o\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049d\u004c\u0069\u0073t\u0045n\u0074\u0072\u0079", NewCT_HandoutMasterIdListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0048an\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072\u0049\u0064\u004c\u0069s\u0074", NewCT_HandoutMasterIdList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0045\u006dbe\u0064d\u0065\u0064\u0046\u006f\u006et\u0044\u0061\u0074\u0061\u0049\u0064", NewCT_EmbeddedFontDataId)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0046\u006fn\u0074\u004c\u0069\u0073\u0074\u0045\u006e\u0074\u0072\u0079", NewCT_EmbeddedFontListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0045mb\u0065\u0064\u0064\u0065\u0064\u0046\u006f\u006e\u0074\u004c\u0069\u0073\u0074", NewCT_EmbeddedFontList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006f\u0077", NewCT_CustomShow)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u006fw\u004c\u0069\u0073\u0074", NewCT_CustomShowList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u0074\u006f\u0041\u006c\u0062\u0075\u006d", NewCT_PhotoAlbum)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u006c\u0069\u0064\u0065\u0053\u0069\u007a\u0065", NewCT_SlideSize)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004b\u0069\u006e\u0073\u006f\u006b\u0075", NewCT_Kinsoku)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004d\u006f\u0064\u0069\u0066\u0079\u0056\u0065\u0072i\u0066\u0069\u0065\u0072", NewCT_ModifyVerifier)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewCT_Presentation)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0048\u0074\u006d\u006c\u0050\u0075\u0062\u006c\u0069\u0073h\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_HtmlPublishProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_WebProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_PrintProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0049\u006e\u0066\u006f\u0042r\u006f\u0077\u0073\u0065", NewCT_ShowInfoBrowse)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0053\u0068\u006fw\u0049\u006e\u0066\u006f\u004b\u0069\u006f\u0073\u006b", NewCT_ShowInfoKiosk)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ShowProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0050\u0072\u0065s\u0065\u006e\u0074\u0061\u0074i\u006fn\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_PresentationProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u006c\u0061\u0063\u0065\u0068o\u006c\u0064\u0065\u0072", NewCT_Placeholder)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0041\u0070\u0070\u006ci\u0063\u0061\u0074\u0069\u006f\u006eN\u006f\u006e\u0056\u0069\u0073\u0075\u0061l\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006fp\u0073", NewCT_ApplicationNonVisualDrawingProps)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056i\u0073\u0075\u0061\u006c", NewCT_ShapeNonVisual)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065", NewCT_Shape)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u006f\u0072\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_ConnectorNonVisual)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_Connector)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050ic\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_PictureNonVisual)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065", NewCT_Picture)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006ae\u0063t\u0046\u0072\u0061\u006d\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GraphicalObjectFrameNonVisual)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fGr\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065", NewCT_GraphicalObjectFrame)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c", NewCT_GroupShapeNonVisual)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065", NewCT_GroupShape)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u006c", NewCT_Rel)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BackgroundProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewCT_Background)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005fC\u006f\u006d\u006d\u006f\u006eS\u006c\u0069d\u0065\u0044\u0061\u0074\u0061", NewCT_CommonSlideData)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065", NewCT_Slide)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004ca\u0079\u006f\u0075\u0074", NewCT_SlideLayout)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069\u0064\u0065\u004d\u0061\u0073\u0074\u0065r\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_SlideMasterTextStyles)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u0053\u006c\u0069d\u0065\u004c\u0061\u0079\u006fu\u0074I\u0064L\u0069\u0073\u0074\u0045\u006e\u0074\u0072y", NewCT_SlideLayoutIdListEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u0053\u006c\u0069\u0064\u0065\u004c\u0061\u0079o\u0075\u0074\u0049\u0064Li\u0073\u0074", NewCT_SlideLayoutIdList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053\u006c\u0069\u0064\u0065\u004da\u0073\u0074\u0065\u0072", NewCT_SlideMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054_\u0048\u0061\u006ed\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewCT_HandoutMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u004da\u0073\u0074\u0065\u0072", NewCT_NotesMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0053\u006c\u0069\u0064\u0065", NewCT_NotesSlide)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0053\u0079\u006e\u0063\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideSyncProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fS\u0074\u0072\u0069\u006e\u0067\u0054\u0061\u0067", NewCT_StringTag)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0067\u004c\u0069\u0073\u0074", NewCT_TagList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "C\u0054_\u004e\u006f\u0072\u006d\u0061\u006c\u0056\u0069e\u0077\u0050\u006f\u0072ti\u006f\u006e", NewCT_NormalViewPortion)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fNo\u0072\u006d\u0061\u006c\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NormalViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fCo\u006d\u006d\u006f\u006e\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CommonViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u0074\u0065\u0073\u0054\u0065\u0078t\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_NotesTextViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0053\u006c\u0069\u0064\u0065\u0045\u006e\u0074\u0072\u0079", NewCT_OutlineViewSlideEntry)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fOu\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065\u0077\u0053\u006c\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_OutlineViewSlideList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043T\u005f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0056\u0069\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_OutlineViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053l\u0069\u0064\u0065\u0053\u006f\u0072\u0074\u0065\u0072\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_SlideSorterViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0047\u0075\u0069\u0064\u0065", NewCT_Guide)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005fG\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GuideList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0043o\u006d\u006d\u006f\u006e\u0053\u006c\u0069\u0064\u0065\u0056i\u0065w\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065\u0073", NewCT_CommonSlideViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0053li\u0064\u0065\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_SlideViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u004eot\u0065\u0073\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_NotesViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0043\u0054\u005f\u0056\u0069\u0065\u0077\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_ViewProperties)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "c\u006d\u0041\u0075\u0074\u0068\u006f\u0072\u004c\u0073\u0074", NewCmAuthorLst)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0063\u006d\u004cs\u0074", NewCmLst)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006f\u006c\u0065\u004f\u0062\u006a", NewOleObj)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065s\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e", NewPresentation)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074i\u006f\u006e\u0050\u0072", NewPresentationPr)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073\u006c\u0064", NewSld)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004c\u0061\u0079\u006f\u0075t", NewSldLayout)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u004d\u0061\u0073\u0074\u0065r", NewSldMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0068\u0061\u006e\u0064\u006f\u0075\u0074\u004d\u0061\u0073\u0074\u0065\u0072", NewHandoutMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "n\u006f\u0074\u0065\u0073\u004d\u0061\u0073\u0074\u0065\u0072", NewNotesMaster)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u006e\u006f\u0074e\u0073", NewNotes)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0073l\u0064\u0053\u0079\u006e\u0063\u0050r", NewSldSyncPr)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0074\u0061\u0067\u004c\u0073\u0074", NewTagLst)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0076\u0069\u0065\u0077\u0050\u0072", NewViewPr)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045G\u005fS\u006c\u0069\u0064\u0065\u004ci\u0073\u0074C\u0068\u006f\u0069\u0063\u0065", NewEG_SlideListChoice)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "E\u0047\u005f\u0053\u0068\u006f\u0077\u0054\u0079\u0070\u0065", NewEG_ShowType)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047_\u0054\u006f\u0070L\u0065\u0076\u0065\u006c\u0053\u006c\u0069\u0064\u0065", NewEG_TopLevelSlide)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewEG_ChildSlide)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0045\u0047\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064", NewEG_Background)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0054\u004c\u0042\u0075\u0069\u006c\u0064", NewAG_TLBuild)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u004f\u006c\u0065", NewAG_Ole)
	_de.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002eo\u0072\u0067\u002f\u0070\u0072\u0065\u0073\u0065\u006e\u0074\u0061\u0074\u0069o\u006e\u006d\u006c\u002f\u0032\u00300\u0036\u002f\u006da\u0069\u006e", "\u0041\u0047\u005f\u0043\u0068\u0069\u006c\u0064\u0053\u006c\u0069\u0064\u0065", NewAG_ChildSlide)
}
