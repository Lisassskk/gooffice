package sml

import (
	_b "encoding/xml"
	_a "fmt"
	_g "strconv"
	_c "strings"
	_d "time"

	_f "gitee.com/yu_sheng/gooffice"
	_bb "gitee.com/yu_sheng/gooffice/schema/soo/dml/spreadsheetDrawing"
	_ff "gitee.com/yu_sheng/gooffice/schema/soo/ofc/sharedTypes"
)

func NewCT_ExternalDefinedName() *CT_ExternalDefinedName {
	_bdegg := &CT_ExternalDefinedName{}
	return _bdegg
}

type ST_DataValidationOperator byte

func (_bab *CT_Borders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gea := range start.Attr {
		if _gea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgdg, _gbbe := _g.ParseUint(_gea.Value, 10, 32)
			if _gbbe != nil {
				return _gbbe
			}
			_cbeg := uint32(_bgdg)
			_bab.CountAttr = &_cbeg
			continue
		}
	}
_fge:
	for {
		_eae, _aaa := d.Token()
		if _aaa != nil {
			return _aaa
		}
		switch _ccg := _eae.(type) {
		case _b.StartElement:
			switch _ccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_dcef := NewCT_Border()
				if _dbf := d.DecodeElement(_dcef, &_ccg); _dbf != nil {
					return _dbf
				}
				_bab.Border = append(_bab.Border, _dcef)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u0072\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _ccg.Name)
				if _cafg := d.Skip(); _cafg != nil {
					return _cafg
				}
			}
		case _b.EndElement:
			break _fge
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ServerFormat() *CT_ServerFormat { _gdaed := &CT_ServerFormat{}; return _gdaed }
func (_cceecfe *ST_Visibility) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cceecfe = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_cceecfe = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_cceecfe = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_cceecfe = 3
	}
	return nil
}

// Validate validates the CT_Tables and its children
func (_cebcg *CT_Tables) Validate() error {
	return _cebcg.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s")
}

type CT_CalculatedMembers struct {

	// Calculated Members Count
	CountAttr *uint32

	// Calculated Member
	CalculatedMember []*CT_CalculatedMember
}

// Validate validates the Metadata and its children
func (_fbbfg *Metadata) Validate() error {
	return _fbbfg.ValidateWithPath("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}
func NewCT_MergeCells() *CT_MergeCells { _dgaa := &CT_MergeCells{}; return _dgaa }

// Validate validates the CT_MdxMetadata and its children
func (_bdbaa *CT_MdxMetadata) Validate() error {
	return _bdbaa.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}
func (_gfedga ST_PatternType) String() string {
	switch _gfedga {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006f\u006ci\u0064"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case 7:
		return "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 8:
		return "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case 9:
		return "\u0064\u0061\u0072\u006b\u0055\u0070"
	case 10:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case 11:
		return "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 12:
		return "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case 13:
		return "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case 14:
		return "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case 15:
		return "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case 16:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case 17:
		return "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case 18:
		return "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case 19:
		return "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return ""
}

type Headers struct{ CT_RevisionHeaders }
type CT_RowHierarchiesUsage struct {

	// Item Count
	CountAttr *uint32

	// Row OLAP Hierarchies
	RowHierarchyUsage []*CT_HierarchyUsage
}

func (_bfdde ST_PivotFilterType) String() string {
	switch _bfdde {
	case 0:
		return ""
	case 1:
		return "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "\u0073\u0075\u006d"
	case 5:
		return "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case 8:
		return "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case 9:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 10:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case 11:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 12:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case 13:
		return "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case 14:
		return "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case 15:
		return "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 16:
		return "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case 17:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 18:
		return "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 19:
		return "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case 20:
		return "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 21:
		return "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 22:
		return "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 23:
		return "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 24:
		return "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 25:
		return "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 26:
		return "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 27:
		return "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case 28:
		return "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 29:
		return "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case 30:
		return "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 31:
		return "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case 32:
		return "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case 33:
		return "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 34:
		return "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case 35:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 36:
		return "\u0074\u006f\u0064a\u0079"
	case 37:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 38:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 39:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 40:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 41:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 42:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 43:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 44:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 45:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 46:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 47:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 48:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 49:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 50:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 51:
		return "\u0051\u0031"
	case 52:
		return "\u0051\u0032"
	case 53:
		return "\u0051\u0033"
	case 54:
		return "\u0051\u0034"
	case 55:
		return "\u004d\u0031"
	case 56:
		return "\u004d\u0032"
	case 57:
		return "\u004d\u0033"
	case 58:
		return "\u004d\u0034"
	case 59:
		return "\u004d\u0035"
	case 60:
		return "\u004d\u0036"
	case 61:
		return "\u004d\u0037"
	case 62:
		return "\u004d\u0038"
	case 63:
		return "\u004d\u0039"
	case 64:
		return "\u004d\u0031\u0030"
	case 65:
		return "\u004d\u0031\u0031"
	case 66:
		return "\u004d\u0031\u0032"
	}
	return ""
}

// Validate validates the CT_RevisionDefinedName and its children
func (_ecebb *CT_RevisionDefinedName) Validate() error {
	return _ecebb.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}
func (_gcbfc *CT_MeasureDimensionMaps) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfbeb := range start.Attr {
		if _gfbeb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecabf, _cegda := _g.ParseUint(_gfbeb.Value, 10, 32)
			if _cegda != nil {
				return _cegda
			}
			_ededd := uint32(_ecabf)
			_gcbfc.CountAttr = &_ededd
			continue
		}
	}
_dffff:
	for {
		_bcbgb, _afccd := d.Token()
		if _afccd != nil {
			return _afccd
		}
		switch _efbcg := _bcbgb.(type) {
		case _b.StartElement:
			switch _efbcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070"}:
				_eeffag := NewCT_MeasureDimensionMap()
				if _aabbd := d.DecodeElement(_eeffag, &_efbcg); _aabbd != nil {
					return _aabbd
				}
				_gcbfc.Map = append(_gcbfc.Map, _eeffag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0044\u0069m\u0065\u006e\u0073\u0069\u006f\u006eM\u0061\u0070\u0073 \u0025\u0076", _efbcg.Name)
				if _fdfcb := d.Skip(); _fdfcb != nil {
					return _fdfcb
				}
			}
		case _b.EndElement:
			break _dffff
		case _b.CharData:
		}
	}
	return nil
}
func (_accdga *ST_Scope) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_accdga = 0
	case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
		*_accdga = 1
	case "\u0064\u0061\u0074\u0061":
		*_accdga = 2
	case "\u0066\u0069\u0065l\u0064":
		*_accdga = 3
	}
	return nil
}
func (_eacdf *CT_Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eacdf.SheetPr != nil {
		_gdgeac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_eacdf.SheetPr, _gdgeac)
	}
	if _eacdf.SheetViews != nil {
		_fabad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_eacdf.SheetViews, _fabad)
	}
	if _eacdf.SheetFormatPr != nil {
		_cbefc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_eacdf.SheetFormatPr, _cbefc)
	}
	if _eacdf.SheetProtection != nil {
		_gfecg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_eacdf.SheetProtection, _gfecg)
	}
	if _eacdf.CustomSheetViews != nil {
		_cbbag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_eacdf.CustomSheetViews, _cbbag)
	}
	if _eacdf.PrintOptions != nil {
		_fdcaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_eacdf.PrintOptions, _fdcaa)
	}
	if _eacdf.PageMargins != nil {
		_bbagg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_eacdf.PageMargins, _bbagg)
	}
	if _eacdf.PageSetup != nil {
		_cgcdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_eacdf.PageSetup, _cgcdg)
	}
	if _eacdf.HeaderFooter != nil {
		_dfbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_eacdf.HeaderFooter, _dfbe)
	}
	if _eacdf.Drawing != nil {
		_eefcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_eacdf.Drawing, _eefcd)
	}
	if _eacdf.LegacyDrawing != nil {
		_gccc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_eacdf.LegacyDrawing, _gccc)
	}
	if _eacdf.LegacyDrawingHF != nil {
		_ggfdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_eacdf.LegacyDrawingHF, _ggfdd)
	}
	if _eacdf.DrawingHF != nil {
		_gafd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_eacdf.DrawingHF, _gafd)
	}
	if _eacdf.OleObjects != nil {
		_faggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_eacdf.OleObjects, _faggc)
	}
	if _eacdf.Controls != nil {
		_ffdb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_eacdf.Controls, _ffdb)
	}
	if _eacdf.ExtLst != nil {
		_cefa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eacdf.ExtLst, _cefa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_IconFilter struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

// Validate validates the CT_ExtensionList and its children
func (_ecbe *CT_ExtensionList) Validate() error {
	return _ecbe.ValidateWithPath("\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_cbgcb ST_BorderStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbgcb.String(), start)
}
func (_ae *AG_AutoFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ae.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ae.AutoFormatIdAttr)})
	}
	if _ae.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyNumberFormatsAttr))})
	}
	if _ae.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyBorderFormatsAttr))})
	}
	if _ae.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyFontFormatsAttr))})
	}
	if _ae.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyPatternFormatsAttr))})
	}
	if _ae.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyAlignmentFormatsAttr))})
	}
	if _ae.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ae.ApplyWidthHeightFormatsAttr))})
	}
	return nil
}

// Validate validates the AG_AutoFormat and its children
func (_gdb *AG_AutoFormat) Validate() error {
	return _gdb.ValidateWithPath("\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074")
}

type CT_CustomProperty struct {

	// Custom Property Name
	NameAttr string
	IdAttr   string
}

func (_acbgcg *CT_Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdgbc := range start.Attr {
		if _bdgbc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fbafe, _bedeaa := _g.ParseUint(_bdgbc.Value, 10, 32)
			if _bedeaa != nil {
				return _bedeaa
			}
			_fecge := uint32(_fbafe)
			_acbgcg.CountAttr = &_fecge
			continue
		}
	}
_dbfgg:
	for {
		_fcfdcg, _cdcfb := d.Token()
		if _cdcfb != nil {
			return _cdcfb
		}
		switch _eggdg := _fcfdcg.(type) {
		case _b.StartElement:
			switch _eggdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_bbfbe := NewCT_SharedUser()
				if _ecdace := d.DecodeElement(_bbfbe, &_eggdg); _ecdace != nil {
					return _ecdace
				}
				_acbgcg.UserInfo = append(_acbgcg.UserInfo, _bbfbe)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073\u0020\u0025\u0076", _eggdg.Name)
				if _fdgcd := d.Skip(); _fdgcd != nil {
					return _fdgcd
				}
			}
		case _b.EndElement:
			break _dbfgg
		case _b.CharData:
		}
	}
	return nil
}
func (_ebac *CT_CellWatch) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dec := range start.Attr {
		if _dec.Name.Local == "\u0072" {
			_dfeb, _gddc := _dec.Value, error(nil)
			if _gddc != nil {
				return _gddc
			}
			_ebac.RAttr = _dfeb
			continue
		}
	}
	for {
		_cfdab, _beegf := d.Token()
		if _beegf != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u003a\u0020\u0025\u0073", _beegf)
		}
		if _ggeb, _gfaa := _cfdab.(_b.EndElement); _gfaa && _ggeb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcbfb ST_UpdateLinks) Validate() error { return _adcbfb.ValidateWithPath("") }

type CT_Pane struct {

	// Horizontal Split Position
	XSplitAttr *float64

	// Vertical Split Position
	YSplitAttr *float64

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Active Pane
	ActivePaneAttr ST_Pane

	// Split State
	StateAttr ST_PaneState
}
type CT_VolMain struct {

	// First String
	FirstAttr string

	// Topic
	Tp []*CT_VolTopic
}

func (_bdfe *CT_ChartFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdfe.PivotArea = NewCT_PivotArea()
	for _, _ccea := range start.Attr {
		if _ccea.Name.Local == "\u0063\u0068\u0061r\u0074" {
			_cgag, _dfee := _g.ParseUint(_ccea.Value, 10, 32)
			if _dfee != nil {
				return _dfee
			}
			_bdfe.ChartAttr = uint32(_cgag)
			continue
		}
		if _ccea.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_abffbe, _gbee := _g.ParseUint(_ccea.Value, 10, 32)
			if _gbee != nil {
				return _gbee
			}
			_bdfe.FormatAttr = uint32(_abffbe)
			continue
		}
		if _ccea.Name.Local == "\u0073\u0065\u0072\u0069\u0065\u0073" {
			_abbab, _gdgg := _g.ParseBool(_ccea.Value)
			if _gdgg != nil {
				return _gdgg
			}
			_bdfe.SeriesAttr = &_abbab
			continue
		}
	}
_ceag:
	for {
		_dga, _gbfe := d.Token()
		if _gbfe != nil {
			return _gbfe
		}
		switch _abea := _dga.(type) {
		case _b.StartElement:
			switch _abea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _egcb := d.DecodeElement(_bdfe.PivotArea, &_abea); _egcb != nil {
					return _egcb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046\u006fr\u006da\u0074\u0020\u0025\u0076", _abea.Name)
				if _bebc := d.Skip(); _bebc != nil {
					return _bebc
				}
			}
		case _b.EndElement:
			break _ceag
		case _b.CharData:
		}
	}
	return nil
}
func (_fgdfg *ST_SheetViewType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fgdfg = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_fgdfg = 1
	case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
		*_fgdfg = 2
	case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
		*_fgdfg = 3
	}
	return nil
}
func (_gdcfe ST_CfType) String() string {
	switch _gdcfe {
	case 0:
		return ""
	case 1:
		return "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case 2:
		return "\u0063\u0065\u006c\u006c\u0049\u0073"
	case 3:
		return "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case 4:
		return "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case 5:
		return "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case 6:
		return "\u0074\u006f\u00701\u0030"
	case 7:
		return "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 8:
		return "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case 13:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 14:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case 15:
		return "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 16:
		return "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case 17:
		return "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case 18:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return ""
}
func (_ddfbe *ST_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edebd, _cefcg := d.Token()
	if _cefcg != nil {
		return _cefcg
	}
	if _bfedb, _gebcc := _edebd.(_b.EndElement); _gebcc && _bfedb.Name == start.Name {
		*_ddfbe = 1
		return nil
	}
	if _aeaaa, _aacfeg := _edebd.(_b.CharData); !_aacfeg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edebd)
	} else {
		switch string(_aeaaa) {
		case "":
			*_ddfbe = 0
		case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_ddfbe = 1
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_ddfbe = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_ddfbe = 3
		case "\u0074o\u0070\u004c\u0065\u0066\u0074":
			*_ddfbe = 4
		}
	}
	_edebd, _cefcg = d.Token()
	if _cefcg != nil {
		return _cefcg
	}
	if _ccfaddc, _ebbea := _edebd.(_b.EndElement); _ebbea && _ccfaddc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edebd)
}
func (_fbbed ST_Visibility) String() string {
	switch _fbbed {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_DdeLink and its children, prefixing error messages with path
func (_fcfdg *CT_DdeLink) ValidateWithPath(path string) error {
	if _fcfdg.DdeItems != nil {
		if _bddbf := _fcfdg.DdeItems.ValidateWithPath(path + "\u002fD\u0064\u0065\u0049\u0074\u0065\u006ds"); _bddbf != nil {
			return _bddbf
		}
	}
	return nil
}
func (_gbfeee *Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbfeee.CT_Chartsheet = *NewCT_Chartsheet()
_dafad:
	for {
		_efffe, _fdbfcc := d.Token()
		if _fdbfcc != nil {
			return _fdbfcc
		}
		switch _ceeab := _efffe.(type) {
		case _b.StartElement:
			switch _ceeab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_gbfeee.SheetPr = NewCT_ChartsheetPr()
				if _cgdfba := d.DecodeElement(_gbfeee.SheetPr, &_ceeab); _cgdfba != nil {
					return _cgdfba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _gafdf := d.DecodeElement(_gbfeee.SheetViews, &_ceeab); _gafdf != nil {
					return _gafdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gbfeee.SheetProtection = NewCT_ChartsheetProtection()
				if _cbgcc := d.DecodeElement(_gbfeee.SheetProtection, &_ceeab); _cbgcc != nil {
					return _cbgcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_gbfeee.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _bbgfe := d.DecodeElement(_gbfeee.CustomSheetViews, &_ceeab); _bbgfe != nil {
					return _bbgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_gbfeee.PageMargins = NewCT_PageMargins()
				if _aebdge := d.DecodeElement(_gbfeee.PageMargins, &_ceeab); _aebdge != nil {
					return _aebdge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_gbfeee.PageSetup = NewCT_CsPageSetup()
				if _acgc := d.DecodeElement(_gbfeee.PageSetup, &_ceeab); _acgc != nil {
					return _acgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_gbfeee.HeaderFooter = NewCT_HeaderFooter()
				if _fbgagcg := d.DecodeElement(_gbfeee.HeaderFooter, &_ceeab); _fbgagcg != nil {
					return _fbgagcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _aaggcg := d.DecodeElement(_gbfeee.Drawing, &_ceeab); _aaggcg != nil {
					return _aaggcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_gbfeee.LegacyDrawing = NewCT_LegacyDrawing()
				if _fddca := d.DecodeElement(_gbfeee.LegacyDrawing, &_ceeab); _fddca != nil {
					return _fddca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_gbfeee.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _eeeab := d.DecodeElement(_gbfeee.LegacyDrawingHF, &_ceeab); _eeeab != nil {
					return _eeeab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_gbfeee.DrawingHF = NewCT_DrawingHF()
				if _ggebd := d.DecodeElement(_gbfeee.DrawingHF, &_ceeab); _ggebd != nil {
					return _ggebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_gbfeee.Picture = NewCT_SheetBackgroundPicture()
				if _cabadg := d.DecodeElement(_gbfeee.Picture, &_ceeab); _cabadg != nil {
					return _cabadg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_gbfeee.WebPublishItems = NewCT_WebPublishItems()
				if _bgecf := d.DecodeElement(_gbfeee.WebPublishItems, &_ceeab); _bgecf != nil {
					return _bgecf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gbfeee.ExtLst = NewCT_ExtensionList()
				if _dfgade := d.DecodeElement(_gbfeee.ExtLst, &_ceeab); _dfgade != nil {
					return _dfgade
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _ceeab.Name)
				if _acbde := d.Skip(); _acbde != nil {
					return _acbde
				}
			}
		case _b.EndElement:
			break _dafad
		case _b.CharData:
		}
	}
	return nil
}
func (_gdbfe *CT_MetadataRecord) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abdee := range start.Attr {
		if _abdee.Name.Local == "\u0074" {
			_bbagbc, _ccaa := _g.ParseUint(_abdee.Value, 10, 32)
			if _ccaa != nil {
				return _ccaa
			}
			_gdbfe.TAttr = uint32(_bbagbc)
			continue
		}
		if _abdee.Name.Local == "\u0076" {
			_cddbd, _babeb := _g.ParseUint(_abdee.Value, 10, 32)
			if _babeb != nil {
				return _babeb
			}
			_gdbfe.VAttr = uint32(_cddbd)
			continue
		}
	}
	for {
		_cdfe, _dbage := d.Token()
		if _dbage != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052\u0065\u0063\u006f\u0072\u0064: \u0025\u0073", _dbage)
		}
		if _bdfec, _eecagg := _cdfe.(_b.EndElement); _eecagg && _bdfec.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_LegacyDrawing and its children
func (_bdaec *CT_LegacyDrawing) Validate() error {
	return _bdaec.ValidateWithPath("\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}

// Validate validates the CT_Query and its children
func (_gadee *CT_Query) Validate() error {
	return _gadee.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079")
}
func (_bdbde *CT_Missing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afagc := range start.Attr {
		if _afagc.Name.Local == "\u0066\u0063" {
			_faea, _ddda := _afagc.Value, error(nil)
			if _ddda != nil {
				return _ddda
			}
			_bdbde.FcAttr = &_faea
			continue
		}
		if _afagc.Name.Local == "\u0066" {
			_aceccf, _ggfgd := _g.ParseBool(_afagc.Value)
			if _ggfgd != nil {
				return _ggfgd
			}
			_bdbde.FAttr = &_aceccf
			continue
		}
		if _afagc.Name.Local == "\u0063" {
			_agfbd, _ggdfgb := _afagc.Value, error(nil)
			if _ggdfgb != nil {
				return _ggdfgb
			}
			_bdbde.CAttr = &_agfbd
			continue
		}
		if _afagc.Name.Local == "\u0063\u0070" {
			_cfbcb, _adcgg := _g.ParseUint(_afagc.Value, 10, 32)
			if _adcgg != nil {
				return _adcgg
			}
			_ggeda := uint32(_cfbcb)
			_bdbde.CpAttr = &_ggeda
			continue
		}
		if _afagc.Name.Local == "\u0069\u006e" {
			_gaecc, _deffe := _g.ParseUint(_afagc.Value, 10, 32)
			if _deffe != nil {
				return _deffe
			}
			_edce := uint32(_gaecc)
			_bdbde.InAttr = &_edce
			continue
		}
		if _afagc.Name.Local == "\u0062\u0063" {
			_bafcg, _acfcc := _afagc.Value, error(nil)
			if _acfcc != nil {
				return _acfcc
			}
			_bdbde.BcAttr = &_bafcg
			continue
		}
		if _afagc.Name.Local == "\u0075" {
			_bgff, _eafad := _g.ParseBool(_afagc.Value)
			if _eafad != nil {
				return _eafad
			}
			_bdbde.UAttr = &_bgff
			continue
		}
		if _afagc.Name.Local == "\u0069" {
			_bbfbf, _bdeae := _g.ParseBool(_afagc.Value)
			if _bdeae != nil {
				return _bdeae
			}
			_bdbde.IAttr = &_bbfbf
			continue
		}
		if _afagc.Name.Local == "\u0075\u006e" {
			_becgc, _acbaa := _g.ParseBool(_afagc.Value)
			if _acbaa != nil {
				return _acbaa
			}
			_bdbde.UnAttr = &_becgc
			continue
		}
		if _afagc.Name.Local == "\u0073\u0074" {
			_ffbgec, _dfca := _g.ParseBool(_afagc.Value)
			if _dfca != nil {
				return _dfca
			}
			_bdbde.StAttr = &_ffbgec
			continue
		}
		if _afagc.Name.Local == "\u0062" {
			_fcaad, _fabae := _g.ParseBool(_afagc.Value)
			if _fabae != nil {
				return _fabae
			}
			_bdbde.BAttr = &_fcaad
			continue
		}
	}
_ccceb:
	for {
		_ecbff, _fadgd := d.Token()
		if _fadgd != nil {
			return _fadgd
		}
		switch _cgedf := _ecbff.(type) {
		case _b.StartElement:
			switch _cgedf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_ebbbg := NewCT_Tuples()
				if _daabg := d.DecodeElement(_ebbbg, &_cgedf); _daabg != nil {
					return _daabg
				}
				_bdbde.Tpls = append(_bdbde.Tpls, _ebbbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_eccdc := NewCT_X()
				if _ffabb := d.DecodeElement(_eccdc, &_cgedf); _ffabb != nil {
					return _ffabb
				}
				_bdbde.X = append(_bdbde.X, _eccdc)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0025\u0076", _cgedf.Name)
				if _effee := d.Skip(); _effee != nil {
					return _effee
				}
			}
		case _b.EndElement:
			break _ccceb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_String and its children, prefixing error messages with path
func (_cffcc *CT_String) ValidateWithPath(path string) error {
	for _edeaa, _fadce := range _cffcc.Tpls {
		if _gffdbf := _fadce.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _edeaa)); _gffdbf != nil {
			return _gffdbf
		}
	}
	for _bacee, _afbbe := range _cffcc.X {
		if _eeeaeb := _afbbe.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bacee)); _eeeaeb != nil {
			return _eeeaeb
		}
	}
	return nil
}

// Validate validates the CT_ChartsheetPr and its children
func (_gefc *CT_ChartsheetPr) Validate() error {
	return _gefc.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_dcfed *CT_Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bcabed := range start.Attr {
		if _bcabed.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_beecf, _fbgdg := _g.ParseUint(_bcabed.Value, 10, 32)
			if _fbgdg != nil {
				return _fbgdg
			}
			_eaaca := uint32(_beecf)
			_dcfed.CountAttr = &_eaaca
			continue
		}
		if _bcabed.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_beacgf, _ecagb := _g.ParseUint(_bcabed.Value, 10, 32)
			if _ecagb != nil {
				return _ecagb
			}
			_bgbff := uint32(_beacgf)
			_dcfed.UniqueCountAttr = &_bgbff
			continue
		}
	}
_ddaed:
	for {
		_eddfgf, _beeggf := d.Token()
		if _beeggf != nil {
			return _beeggf
		}
		switch _gbcacc := _eddfgf.(type) {
		case _b.StartElement:
			switch _gbcacc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_gbdaed := NewCT_Rst()
				if _dfabede := d.DecodeElement(_gbdaed, &_gbcacc); _dfabede != nil {
					return _dfabede
				}
				_dcfed.Si = append(_dcfed.Si, _gbdaed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcfed.ExtLst = NewCT_ExtensionList()
				if _gacea := d.DecodeElement(_dcfed.ExtLst, &_gbcacc); _gacea != nil {
					return _gacea
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0073\u0074\u0020\u0025\u0076", _gbcacc.Name)
				if _ebcbf := d.Skip(); _ebcbf != nil {
					return _ebcbf
				}
			}
		case _b.EndElement:
			break _ddaed
		case _b.CharData:
		}
	}
	return nil
}
func (_agfe *CT_DataField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbfb := range start.Attr {
		if _gbfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edddg, _ddgff := _gbfb.Value, error(nil)
			if _ddgff != nil {
				return _ddgff
			}
			_agfe.NameAttr = &_edddg
			continue
		}
		if _gbfb.Name.Local == "\u0066\u006c\u0064" {
			_bdedb, _ebcc := _g.ParseUint(_gbfb.Value, 10, 32)
			if _ebcc != nil {
				return _ebcc
			}
			_agfe.FldAttr = uint32(_bdedb)
			continue
		}
		if _gbfb.Name.Local == "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_agfe.SubtotalAttr.UnmarshalXMLAttr(_gbfb)
			continue
		}
		if _gbfb.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073" {
			_agfe.ShowDataAsAttr.UnmarshalXMLAttr(_gbfb)
			continue
		}
		if _gbfb.Name.Local == "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd" {
			_bebfe, _daeaf := _g.ParseInt(_gbfb.Value, 10, 32)
			if _daeaf != nil {
				return _daeaf
			}
			_ddade := int32(_bebfe)
			_agfe.BaseFieldAttr = &_ddade
			continue
		}
		if _gbfb.Name.Local == "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d" {
			_accd, _aecdb := _g.ParseUint(_gbfb.Value, 10, 32)
			if _aecdb != nil {
				return _aecdb
			}
			_ebcg := uint32(_accd)
			_agfe.BaseItemAttr = &_ebcg
			continue
		}
		if _gbfb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bcbg, _fcbg := _g.ParseUint(_gbfb.Value, 10, 32)
			if _fcbg != nil {
				return _fcbg
			}
			_gffa := uint32(_bcbg)
			_agfe.NumFmtIdAttr = &_gffa
			continue
		}
	}
_gddge:
	for {
		_fgcg, _daeb := d.Token()
		if _daeb != nil {
			return _daeb
		}
		switch _gcefa := _fgcg.(type) {
		case _b.StartElement:
			switch _gcefa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfe.ExtLst = NewCT_ExtensionList()
				if _egbgf := d.DecodeElement(_agfe.ExtLst, &_gcefa); _egbgf != nil {
					return _egbgf
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _gcefa.Name)
				if _caffb := d.Skip(); _caffb != nil {
					return _caffb
				}
			}
		case _b.EndElement:
			break _gddge
		case _b.CharData:
		}
	}
	return nil
}

type CT_Pages struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Items
	Page []*CT_PCDSCPage
}

func (_beefbg ST_VerticalAlignment) Validate() error { return _beefbg.ValidateWithPath("") }
func (_gfaac *CT_ConditionalFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfaac.PivotAreas = NewCT_PivotAreas()
	for _, _fcbdc := range start.Attr {
		if _fcbdc.Name.Local == "\u0073\u0063\u006fp\u0065" {
			_gfaac.ScopeAttr.UnmarshalXMLAttr(_fcbdc)
			continue
		}
		if _fcbdc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gfaac.TypeAttr.UnmarshalXMLAttr(_fcbdc)
			continue
		}
		if _fcbdc.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_aecga, _aacge := _g.ParseUint(_fcbdc.Value, 10, 32)
			if _aacge != nil {
				return _aacge
			}
			_gfaac.PriorityAttr = uint32(_aecga)
			continue
		}
	}
_fagff:
	for {
		_efadg, _cdaf := d.Token()
		if _cdaf != nil {
			return _cdaf
		}
		switch _fgcab := _efadg.(type) {
		case _b.StartElement:
			switch _fgcab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}:
				if _begdg := d.DecodeElement(_gfaac.PivotAreas, &_fgcab); _begdg != nil {
					return _begdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfaac.ExtLst = NewCT_ExtensionList()
				if _dcbb := d.DecodeElement(_gfaac.ExtLst, &_fgcab); _dcbb != nil {
					return _dcbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0020\u0025\u0076", _fgcab.Name)
				if _bad := d.Skip(); _bad != nil {
					return _bad
				}
			}
		case _b.EndElement:
			break _fagff
		case _b.CharData:
		}
	}
	return nil
}
func (_egfgc *CT_ConditionalFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gabg := range start.Attr {
		if _gabg.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_bbdf, _bdfef := _g.ParseBool(_gabg.Value)
			if _bdfef != nil {
				return _bdfef
			}
			_egfgc.PivotAttr = &_bbdf
			continue
		}
		if _gabg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_eebc, _bbbe := ParseSliceST_Sqref(_gabg.Value)
			if _bbbe != nil {
				return _bbbe
			}
			_egfgc.SqrefAttr = &_eebc
			continue
		}
	}
_eacfc:
	for {
		_bada, _egdf := d.Token()
		if _egdf != nil {
			return _egdf
		}
		switch _eafc := _bada.(type) {
		case _b.StartElement:
			switch _eafc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0052\u0075\u006c\u0065"}:
				_ddeca := NewCT_CfRule()
				if _ccgg := d.DecodeElement(_ddeca, &_eafc); _ccgg != nil {
					return _ccgg
				}
				_egfgc.CfRule = append(_egfgc.CfRule, _ddeca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egfgc.ExtLst = NewCT_ExtensionList()
				if _egdde := d.DecodeElement(_egfgc.ExtLst, &_eafc); _egdde != nil {
					return _egdde
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067\u0020%\u0076", _eafc.Name)
				if _bcadd := d.Skip(); _bcadd != nil {
					return _bcadd
				}
			}
		case _b.EndElement:
			break _eacfc
		case _b.CharData:
		}
	}
	return nil
}
func (_ccgagb *CT_SmartTagType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aaddgb := range start.Attr {
		if _aaddgb.Name.Local == "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069" {
			_babec, _fbbfaa := _aaddgb.Value, error(nil)
			if _fbbfaa != nil {
				return _fbbfaa
			}
			_ccgagb.NamespaceUriAttr = &_babec
			continue
		}
		if _aaddgb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_egaffd, _dfgddg := _aaddgb.Value, error(nil)
			if _dfgddg != nil {
				return _dfgddg
			}
			_ccgagb.NameAttr = &_egaffd
			continue
		}
		if _aaddgb.Name.Local == "\u0075\u0072\u006c" {
			_agbaa, _ecgead := _aaddgb.Value, error(nil)
			if _ecgead != nil {
				return _ecgead
			}
			_ccgagb.UrlAttr = &_agbaa
			continue
		}
	}
	for {
		_accbc, _dccdcc := d.Token()
		if _dccdcc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054a\u0067\u0054\u0079p\u0065:\u0020\u0025\u0073", _dccdcc)
		}
		if _cdada, _cfebg := _accbc.(_b.EndElement); _cfebg && _cdada.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ColHierarchiesUsage and its children
func (_cgefe *CT_ColHierarchiesUsage) Validate() error {
	return _cgefe.ValidateWithPath("\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}
func NewCT_PageSetup() *CT_PageSetup { _bbebdd := &CT_PageSetup{}; return _bbebdd }
func (_adgg *CT_ExternalSheetNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bgeeg:
	for {
		_agccc, _gdbea := d.Token()
		if _gdbea != nil {
			return _gdbea
		}
		switch _dgfe := _agccc.(type) {
		case _b.StartElement:
			switch _dgfe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u004e\u0061\u006de"}:
				_cgde := NewCT_ExternalSheetName()
				if _ddeea := d.DecodeElement(_cgde, &_dgfe); _ddeea != nil {
					return _ddeea
				}
				_adgg.SheetName = append(_adgg.SheetName, _cgde)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _dgfe.Name)
				if _cbbfd := d.Skip(); _cbbfd != nil {
					return _cbbfd
				}
			}
		case _b.EndElement:
			break _bgeeg
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionDefinedName struct {

	// Local Name Sheet Id
	LocalSheetIdAttr *uint32

	// Custom View
	CustomViewAttr *bool

	// Name
	NameAttr string

	// Function
	FunctionAttr *bool

	// Old Function
	OldFunctionAttr *bool

	// Function Group Id
	FunctionGroupIdAttr *uint8

	// Old Function Group Id
	OldFunctionGroupIdAttr *uint8

	// Shortcut Key
	ShortcutKeyAttr *uint8

	// Old Short Cut Key
	OldShortcutKeyAttr *uint8

	// Named Range Hidden
	HiddenAttr *bool

	// Old Hidden
	OldHiddenAttr *bool

	// New Custom Menu
	CustomMenuAttr *string

	// Old Custom Menu Text
	OldCustomMenuAttr *string

	// Description
	DescriptionAttr *string

	// Old Description
	OldDescriptionAttr *string

	// New Help Topic
	HelpAttr *string

	// Old Help Topic
	OldHelpAttr *string

	// Status Bar
	StatusBarAttr *string

	// Old Status Bar
	OldStatusBarAttr *string

	// Name Comment
	CommentAttr *string

	// Old Name Comment
	OldCommentAttr *string

	// Formula
	Formula *string

	// Old Formula
	OldFormula *string
	ExtLst     *CT_ExtensionList
	RIdAttr    *uint32
	UaAttr     *bool
	RaAttr     *bool
}

func (_ggagag ST_SortMethod) String() string {
	switch _ggagag {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u0072\u006f\u006b\u0065"
	case 2:
		return "\u0070\u0069\u006e\u0059\u0069\u006e"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func (_dacg *CT_CellSmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecfd := range start.Attr {
		if _ecfd.Name.Local == "\u0072" {
			_beeebe, _bddc := _ecfd.Value, error(nil)
			if _bddc != nil {
				return _bddc
			}
			_dacg.RAttr = _beeebe
			continue
		}
	}
_ceac:
	for {
		_babab, _debb := d.Token()
		if _debb != nil {
			return _debb
		}
		switch _ggeg := _babab.(type) {
		case _b.StartElement:
			switch _ggeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}:
				_cbegf := NewCT_CellSmartTag()
				if _bbbd := d.DecodeElement(_cbegf, &_ggeg); _bbbd != nil {
					return _bbbd
				}
				_dacg.CellSmartTag = append(_dacg.CellSmartTag, _cbegf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073\u0020\u0025v", _ggeg.Name)
				if _dbda := d.Skip(); _dbda != nil {
					return _dbda
				}
			}
		case _b.EndElement:
			break _ceac
		case _b.CharData:
		}
	}
	return nil
}
func (_bcabf *CT_QueryCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcabf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bcabf.CountAttr)})
	}
	e.EncodeToken(start)
	_gbabfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079"}}
	for _, _baeda := range _bcabf.Query {
		e.EncodeElement(_baeda, _gbabfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_SmartTags() *CT_SmartTags             { _fbebce := &CT_SmartTags{}; return _fbebce }
func NewCT_BooleanProperty() *CT_BooleanProperty { _gee := &CT_BooleanProperty{}; return _gee }
func (_ccggbe *CT_RevisionCustomView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ccggbe.GuidAttr)})
	_fbbbg, _baeff := _ccggbe.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _baeff != nil {
		return _baeff
	}
	start.Attr = append(start.Attr, _fbbbg)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbbbc ST_DataValidationErrorStyle) String() string {
	switch _cbbbc {
	case 0:
		return ""
	case 1:
		return "\u0073\u0074\u006f\u0070"
	case 2:
		return "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case 3:
		return "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_CellStyles and its children, prefixing error messages with path
func (_fdea *CT_CellStyles) ValidateWithPath(path string) error {
	for _gcda, _aead := range _fdea.CellStyle {
		if _edcd := _aead.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _gcda)); _edcd != nil {
			return _edcd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RPrElt and its children, prefixing error messages with path
func (_egfbg *CT_RPrElt) ValidateWithPath(path string) error {
	if _egfbg.RFont != nil {
		if _dedfc := _egfbg.RFont.ValidateWithPath(path + "\u002f\u0052\u0046\u006f\u006e\u0074"); _dedfc != nil {
			return _dedfc
		}
	}
	if _egfbg.Charset != nil {
		if _gebcg := _egfbg.Charset.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0073\u0065\u0074"); _gebcg != nil {
			return _gebcg
		}
	}
	if _egfbg.Family != nil {
		if _fadda := _egfbg.Family.ValidateWithPath(path + "\u002fF\u0061\u006d\u0069\u006c\u0079"); _fadda != nil {
			return _fadda
		}
	}
	if _egfbg.B != nil {
		if _caggf := _egfbg.B.ValidateWithPath(path + "\u002f\u0042"); _caggf != nil {
			return _caggf
		}
	}
	if _egfbg.I != nil {
		if _eeade := _egfbg.I.ValidateWithPath(path + "\u002f\u0049"); _eeade != nil {
			return _eeade
		}
	}
	if _egfbg.Strike != nil {
		if _babgb := _egfbg.Strike.ValidateWithPath(path + "\u002fS\u0074\u0072\u0069\u006b\u0065"); _babgb != nil {
			return _babgb
		}
	}
	if _egfbg.Outline != nil {
		if _ecdff := _egfbg.Outline.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065"); _ecdff != nil {
			return _ecdff
		}
	}
	if _egfbg.Shadow != nil {
		if _cgdba := _egfbg.Shadow.ValidateWithPath(path + "\u002fS\u0068\u0061\u0064\u006f\u0077"); _cgdba != nil {
			return _cgdba
		}
	}
	if _egfbg.Condense != nil {
		if _ebegd := _egfbg.Condense.ValidateWithPath(path + "\u002fC\u006f\u006e\u0064\u0065\u006e\u0073e"); _ebegd != nil {
			return _ebegd
		}
	}
	if _egfbg.Extend != nil {
		if _gabdeg := _egfbg.Extend.ValidateWithPath(path + "\u002fE\u0078\u0074\u0065\u006e\u0064"); _gabdeg != nil {
			return _gabdeg
		}
	}
	if _egfbg.Color != nil {
		if _eafdc := _egfbg.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _eafdc != nil {
			return _eafdc
		}
	}
	if _egfbg.Sz != nil {
		if _adaec := _egfbg.Sz.ValidateWithPath(path + "\u002f\u0053\u007a"); _adaec != nil {
			return _adaec
		}
	}
	if _egfbg.U != nil {
		if _ebgbd := _egfbg.U.ValidateWithPath(path + "\u002f\u0055"); _ebgbd != nil {
			return _ebgbd
		}
	}
	if _egfbg.VertAlign != nil {
		if _bedcde := _egfbg.VertAlign.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"); _bedcde != nil {
			return _bedcde
		}
	}
	if _egfbg.Scheme != nil {
		if _cgbgaf := _egfbg.Scheme.ValidateWithPath(path + "\u002fS\u0063\u0068\u0065\u006d\u0065"); _cgbgaf != nil {
			return _cgbgaf
		}
	}
	return nil
}
func (_dcafdb ST_FormulaExpression) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efcbc := _b.Attr{}
	_efcbc.Name = name
	switch _dcafdb {
	case ST_FormulaExpressionUnset:
		_efcbc.Value = ""
	case ST_FormulaExpressionRef:
		_efcbc.Value = "\u0072\u0065\u0066"
	case ST_FormulaExpressionRefError:
		_efcbc.Value = "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case ST_FormulaExpressionArea:
		_efcbc.Value = "\u0061\u0072\u0065\u0061"
	case ST_FormulaExpressionAreaError:
		_efcbc.Value = "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case ST_FormulaExpressionComputedArea:
		_efcbc.Value = "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return _efcbc, nil
}
func (_eebcb *CT_RevisionHeaders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _eebcb.GuidAttr)})
	if _eebcb.LastGuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_eebcb.LastGuidAttr)})
	}
	if _eebcb.SharedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0061\u0072\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.SharedAttr))})
	}
	if _eebcb.DiskRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.DiskRevisionsAttr))})
	}
	if _eebcb.HistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.HistoryAttr))})
	}
	if _eebcb.TrackRevisionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.TrackRevisionsAttr))})
	}
	if _eebcb.ExclusiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.ExclusiveAttr))})
	}
	if _eebcb.RevisionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_eebcb.RevisionIdAttr)})
	}
	if _eebcb.VersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076e\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_eebcb.VersionAttr)})
	}
	if _eebcb.KeepChangeHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.KeepChangeHistoryAttr))})
	}
	if _eebcb.ProtectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eebcb.ProtectedAttr))})
	}
	if _eebcb.PreserveHistoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_eebcb.PreserveHistoryAttr)})
	}
	e.EncodeToken(start)
	_ceade := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0068\u0065\u0061\u0064\u0065r"}}
	for _, _ebgdg := range _eebcb.Header {
		e.EncodeElement(_ebgdg, _ceade)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ChartsheetView and its children
func (_abda *CT_ChartsheetView) Validate() error {
	return _abda.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077")
}
func (_dgeb *CT_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fgcec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u0068\u006f\u0072\u0073"}}
	e.EncodeElement(_dgeb.Authors, _fgcec)
	_fgde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074"}}
	e.EncodeElement(_dgeb.CommentList, _fgde)
	if _dgeb.ExtLst != nil {
		_bdfa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgeb.ExtLst, _bdfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type QueryTable struct{ CT_QueryTable }

func (_fbedc *CT_Tuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbbeee := range start.Attr {
		if _gbbeee.Name.Local == "\u0066\u006c\u0064" {
			_begaeg, _bafcc := _g.ParseUint(_gbbeee.Value, 10, 32)
			if _bafcc != nil {
				return _bafcc
			}
			_eabaf := uint32(_begaeg)
			_fbedc.FldAttr = &_eabaf
			continue
		}
		if _gbbeee.Name.Local == "\u0068\u0069\u0065\u0072" {
			_ebcfg, _cccgaa := _g.ParseUint(_gbbeee.Value, 10, 32)
			if _cccgaa != nil {
				return _cccgaa
			}
			_fdbdf := uint32(_ebcfg)
			_fbedc.HierAttr = &_fdbdf
			continue
		}
		if _gbbeee.Name.Local == "\u0069\u0074\u0065\u006d" {
			_bbbdf, _edage := _g.ParseUint(_gbbeee.Value, 10, 32)
			if _edage != nil {
				return _edage
			}
			_fbedc.ItemAttr = uint32(_bbbdf)
			continue
		}
	}
	for {
		_fbecd, _fccba := d.Token()
		if _fccba != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0075\u0070\u006c\u0065: \u0025\u0073", _fccba)
		}
		if _bbebcc, _abfgbc := _fbecd.(_b.EndElement); _abfgbc && _bbebcc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Member() *CT_Member { _dgbe := &CT_Member{}; return _dgbe }

type CT_ChartFormat struct {

	// Chart Index
	ChartAttr uint32

	// Pivot Format Id
	FormatAttr uint32

	// Series Format
	SeriesAttr *bool

	// Pivot Table Location Rule
	PivotArea *CT_PivotArea
}

// ValidateWithPath validates the CT_MapInfo and its children, prefixing error messages with path
func (_fcaaf *CT_MapInfo) ValidateWithPath(path string) error {
	for _egcdd, _gddcg := range _fcaaf.Schema {
		if _dbfac := _gddcg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0061\u005b\u0025\u0064\u005d", path, _egcdd)); _dbfac != nil {
			return _dbfac
		}
	}
	for _befg, _gcgad := range _fcaaf.Map {
		if _bccbc := _gcgad.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _befg)); _bccbc != nil {
			return _bccbc
		}
	}
	return nil
}
func (_ddeacb *ST_CellComments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdfaff, _aeabaa := d.Token()
	if _aeabaa != nil {
		return _aeabaa
	}
	if _dgaef, _fcbbfe := _bdfaff.(_b.EndElement); _fcbbfe && _dgaef.Name == start.Name {
		*_ddeacb = 1
		return nil
	}
	if _fedcd, _bffdb := _bdfaff.(_b.CharData); !_bffdb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdfaff)
	} else {
		switch string(_fedcd) {
		case "":
			*_ddeacb = 0
		case "\u006e\u006f\u006e\u0065":
			*_ddeacb = 1
		case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
			*_ddeacb = 2
		case "\u0061\u0074\u0045n\u0064":
			*_ddeacb = 3
		}
	}
	_bdfaff, _aeabaa = d.Token()
	if _aeabaa != nil {
		return _aeabaa
	}
	if _bcbbbc, _efgaad := _bdfaff.(_b.EndElement); _efgaad && _bcbbbc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdfaff)
}

// Validate validates the CT_MdxKPI and its children
func (_dceea *CT_MdxKPI) Validate() error {
	return _dceea.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I")
}
func (_ffgfac *CT_Tuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffgfac.FldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffgfac.FldAttr)})
	}
	if _ffgfac.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_ffgfac.HierAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _a.Sprintf("\u0025\u0076", _ffgfac.ItemAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DdeItem and its children
func (_fgbc *CT_DdeItem) Validate() error {
	return _fgbc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d")
}
func (_faaad ST_Axis) String() string {
	switch _faaad {
	case 0:
		return ""
	case 1:
		return "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case 2:
		return "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case 3:
		return "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case 4:
		return "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}
func (_cgffc *CT_MetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdggb:
	for {
		_gddca, _afdac := d.Token()
		if _afdac != nil {
			return _afdac
		}
		switch _gfab := _gddca.(type) {
		case _b.StartElement:
			switch _gfab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063"}:
				_bdddb := NewCT_MetadataRecord()
				if _ccadf := d.DecodeElement(_bdddb, &_gfab); _ccadf != nil {
					return _ccadf
				}
				_cgffc.Rc = append(_cgffc.Rc, _bdddb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025v", _gfab.Name)
				if _aeefa := d.Skip(); _aeefa != nil {
					return _aeefa
				}
			}
		case _b.EndElement:
			break _cdggb
		case _b.CharData:
		}
	}
	return nil
}

type CT_BookView struct {

	// Visibility
	VisibilityAttr ST_Visibility

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Upper Left Corner (X Coordinate)
	XWindowAttr *int32

	// Upper Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr *uint32

	// Window Height
	WindowHeightAttr *uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// First Sheet
	FirstSheetAttr *uint32

	// Active Sheet Index
	ActiveTabAttr *uint32

	// AutoFilter Date Grouping
	AutoFilterDateGroupingAttr *bool
	ExtLst                     *CT_ExtensionList
}

func ParseSliceST_CellSpans(s string) (ST_CellSpans, error) { return ST_CellSpans(_c.Fields(s)), nil }

type CT_Fill struct {

	// Pattern
	PatternFill *CT_PatternFill

	// Gradient
	GradientFill *CT_GradientFill
}

func (_adee *CT_Boolean) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gaf := range start.Attr {
		if _gaf.Name.Local == "\u0076" {
			_geb, _cad := _g.ParseBool(_gaf.Value)
			if _cad != nil {
				return _cad
			}
			_adee.VAttr = _geb
			continue
		}
		if _gaf.Name.Local == "\u0075" {
			_adc, _cgg := _g.ParseBool(_gaf.Value)
			if _cgg != nil {
				return _cgg
			}
			_adee.UAttr = &_adc
			continue
		}
		if _gaf.Name.Local == "\u0066" {
			_cgbe, _eag := _g.ParseBool(_gaf.Value)
			if _eag != nil {
				return _eag
			}
			_adee.FAttr = &_cgbe
			continue
		}
		if _gaf.Name.Local == "\u0063" {
			_cbc, _dff := _gaf.Value, error(nil)
			if _dff != nil {
				return _dff
			}
			_adee.CAttr = &_cbc
			continue
		}
		if _gaf.Name.Local == "\u0063\u0070" {
			_bafg, _fcg := _g.ParseUint(_gaf.Value, 10, 32)
			if _fcg != nil {
				return _fcg
			}
			_gaec := uint32(_bafg)
			_adee.CpAttr = &_gaec
			continue
		}
	}
_bff:
	for {
		_add, _fcb := d.Token()
		if _fcb != nil {
			return _fcb
		}
		switch _beg := _add.(type) {
		case _b.StartElement:
			switch _beg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ddc := NewCT_X()
				if _dggc := d.DecodeElement(_ddc, &_beg); _dggc != nil {
					return _dggc
				}
				_adee.X = append(_adee.X, _ddc)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fB\u006f\u006f\u006c\u0065\u0061\u006e\u0020\u0025\u0076", _beg.Name)
				if _gfd := d.Skip(); _gfd != nil {
					return _gfd
				}
			}
		case _b.EndElement:
			break _bff
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Cols and its children
func (_beba *CT_Cols) Validate() error {
	return _beba.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u0073")
}
func (_gccea *CT_Comment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gccea.Text = NewCT_Rst()
	for _, _ecfe := range start.Attr {
		if _ecfe.Name.Local == "\u0072\u0065\u0066" {
			_bfbe, _eggc := _ecfe.Value, error(nil)
			if _eggc != nil {
				return _eggc
			}
			_gccea.RefAttr = _bfbe
			continue
		}
		if _ecfe.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064" {
			_bbba, _acdea := _g.ParseUint(_ecfe.Value, 10, 32)
			if _acdea != nil {
				return _acdea
			}
			_gccea.AuthorIdAttr = uint32(_bbba)
			continue
		}
		if _ecfe.Name.Local == "\u0067\u0075\u0069\u0064" {
			_fcdg, _aeaff := _ecfe.Value, error(nil)
			if _aeaff != nil {
				return _aeaff
			}
			_gccea.GuidAttr = &_fcdg
			continue
		}
		if _ecfe.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_fcgc, _afabd := _g.ParseUint(_ecfe.Value, 10, 32)
			if _afabd != nil {
				return _afabd
			}
			_cbbe := uint32(_fcgc)
			_gccea.ShapeIdAttr = &_cbbe
			continue
		}
	}
_aggge:
	for {
		_dacgd, _gbgb := d.Token()
		if _gbgb != nil {
			return _gbgb
		}
		switch _eecdc := _dacgd.(type) {
		case _b.StartElement:
			switch _eecdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074"}:
				if _deda := d.DecodeElement(_gccea.Text, &_eecdc); _deda != nil {
					return _deda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074\u0050r"}:
				_gccea.CommentPr = NewCT_CommentPr()
				if _gbecfa := d.DecodeElement(_gccea.CommentPr, &_eecdc); _gbecfa != nil {
					return _gbecfa
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0020\u0025\u0076", _eecdc.Name)
				if _bdaa := d.Skip(); _bdaa != nil {
					return _bdaa
				}
			}
		case _b.EndElement:
			break _aggge
		case _b.CharData:
		}
	}
	return nil
}

type Table struct{ CT_Table }
type CT_Workbook struct {

	// Document Conformance Class
	ConformanceAttr _ff.ST_ConformanceClass

	// File Version
	FileVersion *CT_FileVersion

	// File Sharing
	FileSharing *CT_FileSharing

	// Workbook Properties
	WorkbookPr *CT_WorkbookPr

	// Workbook Protection
	WorkbookProtection *CT_WorkbookProtection

	// Workbook Views
	BookViews *CT_BookViews

	// Sheets
	Sheets *CT_Sheets

	// Function Groups
	FunctionGroups *CT_FunctionGroups

	// External References
	ExternalReferences *CT_ExternalReferences

	// Defined Names
	DefinedNames *CT_DefinedNames

	// Calculation Properties
	CalcPr *CT_CalcPr

	// Embedded Object Size
	OleSize *CT_OleSize

	// Custom Workbook Views
	CustomWorkbookViews *CT_CustomWorkbookViews

	// PivotCaches
	PivotCaches *CT_PivotCaches

	// Smart Tag Properties
	SmartTagPr *CT_SmartTagPr

	// Smart Tag Types
	SmartTagTypes *CT_SmartTagTypes

	// Web Publishing Properties
	WebPublishing *CT_WebPublishing

	// File Recovery Properties
	FileRecoveryPr []*CT_FileRecoveryPr

	// Web Publish Objects
	WebPublishObjects *CT_WebPublishObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PivotAreas and its children
func (_bgbdc *CT_PivotAreas) Validate() error {
	return _bgbdc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073")
}
func (_ffgd *CT_ConditionalFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffgd.ScopeAttr != ST_ScopeUnset {
		_ddgc, _bbfde := _ffgd.ScopeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0063\u006fp\u0065"})
		if _bbfde != nil {
			return _bbfde
		}
		start.Attr = append(start.Attr, _ddgc)
	}
	if _ffgd.TypeAttr != ST_TypeUnset {
		_efba, _cafb := _ffgd.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cafb != nil {
			return _cafb
		}
		start.Attr = append(start.Attr, _efba)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _a.Sprintf("\u0025\u0076", _ffgd.PriorityAttr)})
	e.EncodeToken(start)
	_fdag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"}}
	e.EncodeElement(_ffgd.PivotAreas, _fdag)
	if _ffgd.ExtLst != nil {
		_daadb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffgd.ExtLst, _daadb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ChartsheetView and its children, prefixing error messages with path
func (_cfcc *CT_ChartsheetView) ValidateWithPath(path string) error {
	if _cfcc.ExtLst != nil {
		if _cbae := _cfcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbae != nil {
			return _cbae
		}
	}
	return nil
}
func (_aagfdb ST_FontScheme) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gdbdge := _b.Attr{}
	_gdbdge.Name = name
	switch _aagfdb {
	case ST_FontSchemeUnset:
		_gdbdge.Value = ""
	case ST_FontSchemeNone:
		_gdbdge.Value = "\u006e\u006f\u006e\u0065"
	case ST_FontSchemeMajor:
		_gdbdge.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontSchemeMinor:
		_gdbdge.Value = "\u006d\u0069\u006eo\u0072"
	}
	return _gdbdge, nil
}

// Validate validates the CT_PivotFields and its children
func (_fdceee *CT_PivotFields) Validate() error {
	return _fdceee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073")
}

// Validate validates the CT_DefinedNames and its children
func (_decff *CT_DefinedNames) Validate() error {
	return _decff.ValidateWithPath("\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_gdfgca *ST_VolDepType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gdfgca = 0
	case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
		*_gdfgca = 1
	case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
		*_gdfgca = 2
	}
	return nil
}

// ValidateWithPath validates the CT_CustomChartsheetViews and its children, prefixing error messages with path
func (_cgeea *CT_CustomChartsheetViews) ValidateWithPath(path string) error {
	for _bedfe, _bbbcf := range _cgeea.CustomSheetView {
		if _fdgb := _bbbcf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _bedfe)); _fdgb != nil {
			return _fdgb
		}
	}
	return nil
}

type CT_GradientFill struct {

	// Gradient Fill Type
	TypeAttr ST_GradientType

	// Linear Gradient Degree
	DegreeAttr *float64

	// Left Convergence
	LeftAttr *float64

	// Right Convergence
	RightAttr *float64

	// Top Gradient Convergence
	TopAttr *float64

	// Bottom Convergence
	BottomAttr *float64

	// Gradient Stop
	Stop []*CT_GradientStop
}

func (_fbegb ST_PaneState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dcebf := _b.Attr{}
	_dcebf.Name = name
	switch _fbegb {
	case ST_PaneStateUnset:
		_dcebf.Value = ""
	case ST_PaneStateSplit:
		_dcebf.Value = "\u0073\u0070\u006ci\u0074"
	case ST_PaneStateFrozen:
		_dcebf.Value = "\u0066\u0072\u006f\u007a\u0065\u006e"
	case ST_PaneStateFrozenSplit:
		_dcebf.Value = "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return _dcebf, nil
}

const (
	ST_PivotFilterTypeUnset                     ST_PivotFilterType = 0
	ST_PivotFilterTypeUnknown                   ST_PivotFilterType = 1
	ST_PivotFilterTypeCount                     ST_PivotFilterType = 2
	ST_PivotFilterTypePercent                   ST_PivotFilterType = 3
	ST_PivotFilterTypeSum                       ST_PivotFilterType = 4
	ST_PivotFilterTypeCaptionEqual              ST_PivotFilterType = 5
	ST_PivotFilterTypeCaptionNotEqual           ST_PivotFilterType = 6
	ST_PivotFilterTypeCaptionBeginsWith         ST_PivotFilterType = 7
	ST_PivotFilterTypeCaptionNotBeginsWith      ST_PivotFilterType = 8
	ST_PivotFilterTypeCaptionEndsWith           ST_PivotFilterType = 9
	ST_PivotFilterTypeCaptionNotEndsWith        ST_PivotFilterType = 10
	ST_PivotFilterTypeCaptionContains           ST_PivotFilterType = 11
	ST_PivotFilterTypeCaptionNotContains        ST_PivotFilterType = 12
	ST_PivotFilterTypeCaptionGreaterThan        ST_PivotFilterType = 13
	ST_PivotFilterTypeCaptionGreaterThanOrEqual ST_PivotFilterType = 14
	ST_PivotFilterTypeCaptionLessThan           ST_PivotFilterType = 15
	ST_PivotFilterTypeCaptionLessThanOrEqual    ST_PivotFilterType = 16
	ST_PivotFilterTypeCaptionBetween            ST_PivotFilterType = 17
	ST_PivotFilterTypeCaptionNotBetween         ST_PivotFilterType = 18
	ST_PivotFilterTypeValueEqual                ST_PivotFilterType = 19
	ST_PivotFilterTypeValueNotEqual             ST_PivotFilterType = 20
	ST_PivotFilterTypeValueGreaterThan          ST_PivotFilterType = 21
	ST_PivotFilterTypeValueGreaterThanOrEqual   ST_PivotFilterType = 22
	ST_PivotFilterTypeValueLessThan             ST_PivotFilterType = 23
	ST_PivotFilterTypeValueLessThanOrEqual      ST_PivotFilterType = 24
	ST_PivotFilterTypeValueBetween              ST_PivotFilterType = 25
	ST_PivotFilterTypeValueNotBetween           ST_PivotFilterType = 26
	ST_PivotFilterTypeDateEqual                 ST_PivotFilterType = 27
	ST_PivotFilterTypeDateNotEqual              ST_PivotFilterType = 28
	ST_PivotFilterTypeDateOlderThan             ST_PivotFilterType = 29
	ST_PivotFilterTypeDateOlderThanOrEqual      ST_PivotFilterType = 30
	ST_PivotFilterTypeDateNewerThan             ST_PivotFilterType = 31
	ST_PivotFilterTypeDateNewerThanOrEqual      ST_PivotFilterType = 32
	ST_PivotFilterTypeDateBetween               ST_PivotFilterType = 33
	ST_PivotFilterTypeDateNotBetween            ST_PivotFilterType = 34
	ST_PivotFilterTypeTomorrow                  ST_PivotFilterType = 35
	ST_PivotFilterTypeToday                     ST_PivotFilterType = 36
	ST_PivotFilterTypeYesterday                 ST_PivotFilterType = 37
	ST_PivotFilterTypeNextWeek                  ST_PivotFilterType = 38
	ST_PivotFilterTypeThisWeek                  ST_PivotFilterType = 39
	ST_PivotFilterTypeLastWeek                  ST_PivotFilterType = 40
	ST_PivotFilterTypeNextMonth                 ST_PivotFilterType = 41
	ST_PivotFilterTypeThisMonth                 ST_PivotFilterType = 42
	ST_PivotFilterTypeLastMonth                 ST_PivotFilterType = 43
	ST_PivotFilterTypeNextQuarter               ST_PivotFilterType = 44
	ST_PivotFilterTypeThisQuarter               ST_PivotFilterType = 45
	ST_PivotFilterTypeLastQuarter               ST_PivotFilterType = 46
	ST_PivotFilterTypeNextYear                  ST_PivotFilterType = 47
	ST_PivotFilterTypeThisYear                  ST_PivotFilterType = 48
	ST_PivotFilterTypeLastYear                  ST_PivotFilterType = 49
	ST_PivotFilterTypeYearToDate                ST_PivotFilterType = 50
	ST_PivotFilterTypeQ1                        ST_PivotFilterType = 51
	ST_PivotFilterTypeQ2                        ST_PivotFilterType = 52
	ST_PivotFilterTypeQ3                        ST_PivotFilterType = 53
	ST_PivotFilterTypeQ4                        ST_PivotFilterType = 54
	ST_PivotFilterTypeM1                        ST_PivotFilterType = 55
	ST_PivotFilterTypeM2                        ST_PivotFilterType = 56
	ST_PivotFilterTypeM3                        ST_PivotFilterType = 57
	ST_PivotFilterTypeM4                        ST_PivotFilterType = 58
	ST_PivotFilterTypeM5                        ST_PivotFilterType = 59
	ST_PivotFilterTypeM6                        ST_PivotFilterType = 60
	ST_PivotFilterTypeM7                        ST_PivotFilterType = 61
	ST_PivotFilterTypeM8                        ST_PivotFilterType = 62
	ST_PivotFilterTypeM9                        ST_PivotFilterType = 63
	ST_PivotFilterTypeM10                       ST_PivotFilterType = 64
	ST_PivotFilterTypeM11                       ST_PivotFilterType = 65
	ST_PivotFilterTypeM12                       ST_PivotFilterType = 66
)

func NewCT_ConditionalFormatting() *CT_ConditionalFormatting {
	_ffdg := &CT_ConditionalFormatting{}
	return _ffdg
}
func NewCT_CellFormula() *CT_CellFormula { _bcad := &CT_CellFormula{}; return _bcad }
func NewCT_BorderPr() *CT_BorderPr       { _cbe := &CT_BorderPr{}; return _cbe }
func (_acdgd ST_CellType) ValidateWithPath(path string) error {
	switch _acdgd {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acdgd))
	}
	return nil
}

// ValidateWithPath validates the CT_DataConsolidate and its children, prefixing error messages with path
func (_dgfg *CT_DataConsolidate) ValidateWithPath(path string) error {
	if _fgdcb := _dgfg.FunctionAttr.ValidateWithPath(path + "\u002f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fgdcb != nil {
		return _fgdcb
	}
	if _dgfg.DataRefs != nil {
		if _eafb := _dgfg.DataRefs.ValidateWithPath(path + "\u002fD\u0061\u0074\u0061\u0052\u0065\u0066s"); _eafb != nil {
			return _eafb
		}
	}
	return nil
}

// Validate validates the CT_CsPageSetup and its children
func (_agdg *CT_CsPageSetup) Validate() error {
	return _agdg.ValidateWithPath("\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070")
}

// ValidateWithPath validates the CT_PageSetUpPr and its children, prefixing error messages with path
func (_efbac *CT_PageSetUpPr) ValidateWithPath(path string) error { return nil }

type CT_Extension struct {

	// URI
	UriAttr *string
	Any     _f.Any
}

func (_eacf *CT_CommentList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eacf.Comment != nil {
		_bcff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074"}}
		for _, _gaaf := range _eacf.Comment {
			e.EncodeElement(_gaaf, _bcff)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adfab *ST_DataValidationErrorStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adfab = 0
	case "\u0073\u0074\u006f\u0070":
		*_adfab = 1
	case "\u0077a\u0072\u006e\u0069\u006e\u0067":
		*_adfab = 2
	case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_adfab = 3
	}
	return nil
}

const (
	ST_PaneUnset       ST_Pane = 0
	ST_PaneBottomRight ST_Pane = 1
	ST_PaneTopRight    ST_Pane = 2
	ST_PaneBottomLeft  ST_Pane = 3
	ST_PaneTopLeft     ST_Pane = 4
)

// ValidateWithPath validates the CT_XmlPr and its children, prefixing error messages with path
func (_afccddc *CT_XmlPr) ValidateWithPath(path string) error {
	if _afccddc.ExtLst != nil {
		if _geegb := _afccddc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geegb != nil {
			return _geegb
		}
	}
	return nil
}

type CT_TextFields struct {

	// Count of Fields
	CountAttr *uint32

	// Text Import Field Settings
	TextField []*CT_TextField
}
type CT_ExternalSheetData struct {

	// Sheet Id
	SheetIdAttr uint32

	// Last Refresh Resulted in Error
	RefreshErrorAttr *bool

	// Row
	Row []*CT_ExternalRow
}

func (_ccfdff ST_SheetViewType) ValidateWithPath(path string) error {
	switch _ccfdff {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccfdff))
	}
	return nil
}

// ValidateWithPath validates the CT_Filter and its children, prefixing error messages with path
func (_ebbg *CT_Filter) ValidateWithPath(path string) error { return nil }
func NewCT_PivotField() *CT_PivotField                      { _acbfbd := &CT_PivotField{}; return _acbfbd }

type CT_CalcChain struct {

	// Cell
	C      []*CT_CalcCell
	ExtLst *CT_ExtensionList
}

func (_cfeadf *ST_MdxSetOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfeadf = 0
	case "\u0075":
		*_cfeadf = 1
	case "\u0061":
		*_cfeadf = 2
	case "\u0064":
		*_cfeadf = 3
	case "\u0061\u0061":
		*_cfeadf = 4
	case "\u0061\u0064":
		*_cfeadf = 5
	case "\u006e\u0061":
		*_cfeadf = 6
	case "\u006e\u0064":
		*_cfeadf = 7
	}
	return nil
}

type CT_OleObject struct {

	// Embedded Object ProgId
	ProgIdAttr *string

	// Data or View Aspect
	DvAspectAttr ST_DvAspect

	// Embedded Object's Link Moniker
	LinkAttr *string

	// Linked Embedded Object Update
	OleUpdateAttr ST_OleUpdate

	// Auto Load
	AutoLoadAttr *bool

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      *string

	// Embedded Object Properties
	ObjectPr *CT_ObjectPr
}

func (_adad *CT_Controls) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fagea:
	for {
		_cfdc, _bfdgd := d.Token()
		if _bfdgd != nil {
			return _bfdgd
		}
		switch _egcd := _cfdc.(type) {
		case _b.StartElement:
			switch _egcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c"}:
				_fccga := NewCT_Control()
				if _cfdd := d.DecodeElement(_fccga, &_egcd); _cfdd != nil {
					return _cfdd
				}
				_adad.Control = append(_adad.Control, _fccga)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073\u0020\u0025\u0076", _egcd.Name)
				if _agddb := d.Skip(); _agddb != nil {
					return _agddb
				}
			}
		case _b.EndElement:
			break _fagea
		case _b.CharData:
		}
	}
	return nil
}
func (_ebacg *CT_FileVersion) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebacg.AppNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ebacg.AppNameAttr)})
	}
	if _ebacg.LastEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ebacg.LastEditedAttr)})
	}
	if _ebacg.LowestEditedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ebacg.LowestEditedAttr)})
	}
	if _ebacg.RupBuildAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ebacg.RupBuildAttr)})
	}
	if _ebacg.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ebacg.CodeNameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTableDeletedFields and its children, prefixing error messages with path
func (_fddfa *CT_QueryTableDeletedFields) ValidateWithPath(path string) error {
	for _ebacb, _fcdbd := range _fddfa.DeletedField {
		if _abcbc := _fcdbd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044el\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _ebacb)); _abcbc != nil {
			return _abcbc
		}
	}
	return nil
}
func NewCT_BookViews() *CT_BookViews { _bbb := &CT_BookViews{}; return _bbb }
func NewCT_CfRule() *CT_CfRule       { _gddb := &CT_CfRule{}; return _gddb }
func (_gdbeg *CT_Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_acec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}}
	for _, _cadf := range _gdbeg.Connection {
		e.EncodeElement(_cadf, _acec)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddagg *CT_CalculatedMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gggc := range start.Attr {
		if _gggc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bbcag, _ggedd := _gggc.Value, error(nil)
			if _ggedd != nil {
				return _ggedd
			}
			_ddagg.NameAttr = _bbcag
			continue
		}
		if _gggc.Name.Local == "\u006d\u0064\u0078" {
			_fbec, _cca := _gggc.Value, error(nil)
			if _cca != nil {
				return _cca
			}
			_ddagg.MdxAttr = _fbec
			continue
		}
		if _gggc.Name.Local == "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065" {
			_geeg, _fead := _gggc.Value, error(nil)
			if _fead != nil {
				return _fead
			}
			_ddagg.MemberNameAttr = &_geeg
			continue
		}
		if _gggc.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_efe, _fage := _gggc.Value, error(nil)
			if _fage != nil {
				return _fage
			}
			_ddagg.HierarchyAttr = &_efe
			continue
		}
		if _gggc.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_fffab, _cecb := _gggc.Value, error(nil)
			if _cecb != nil {
				return _cecb
			}
			_ddagg.ParentAttr = &_fffab
			continue
		}
		if _gggc.Name.Local == "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072" {
			_fccd, _ebd := _g.ParseInt(_gggc.Value, 10, 32)
			if _ebd != nil {
				return _ebd
			}
			_abff := int32(_fccd)
			_ddagg.SolveOrderAttr = &_abff
			continue
		}
		if _gggc.Name.Local == "\u0073\u0065\u0074" {
			_deec, _fgfe := _g.ParseBool(_gggc.Value)
			if _fgfe != nil {
				return _fgfe
			}
			_ddagg.SetAttr = &_deec
			continue
		}
	}
_bdad:
	for {
		_aeb, _bgcc := d.Token()
		if _bgcc != nil {
			return _bgcc
		}
		switch _gdge := _aeb.(type) {
		case _b.StartElement:
			switch _gdge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ddagg.ExtLst = NewCT_ExtensionList()
				if _daeee := d.DecodeElement(_ddagg.ExtLst, &_gdge); _daeee != nil {
					return _daeee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061te\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0020\u0025\u0076", _gdge.Name)
				if _dfgd := d.Skip(); _dfgd != nil {
					return _dfgd
				}
			}
		case _b.EndElement:
			break _bdad
		case _b.CharData:
		}
	}
	return nil
}
func (_efadbg *CT_XmlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aceadgc := range start.Attr {
		if _aceadgc.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_bgbdbc, _aadac := _g.ParseUint(_aceadgc.Value, 10, 32)
			if _aadac != nil {
				return _aadac
			}
			_efadbg.MapIdAttr = uint32(_bgbdbc)
			continue
		}
		if _aceadgc.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_bcbcc, _aaggdg := _aceadgc.Value, error(nil)
			if _aaggdg != nil {
				return _aaggdg
			}
			_efadbg.XpathAttr = _bcbcc
			continue
		}
		if _aceadgc.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_gdbag, _gdced := _aceadgc.Value, error(nil)
			if _gdced != nil {
				return _gdced
			}
			_efadbg.XmlDataTypeAttr = _gdbag
			continue
		}
	}
_fbefd:
	for {
		_cfddf, _adfaf := d.Token()
		if _adfaf != nil {
			return _adfaf
		}
		switch _eebeb := _cfddf.(type) {
		case _b.StartElement:
			switch _eebeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efadbg.ExtLst = NewCT_ExtensionList()
				if _efgdd := d.DecodeElement(_efadbg.ExtLst, &_eebeb); _efgdd != nil {
					return _efgdd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072\u0020\u0025\u0076", _eebeb.Name)
				if _decdb := d.Skip(); _decdb != nil {
					return _decdb
				}
			}
		case _b.EndElement:
			break _fbefd
		case _b.CharData:
		}
	}
	return nil
}
func (_dbddac *Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbddac.CT_Revisions = *NewCT_Revisions()
_fegfcg:
	for {
		_dfdaa, _abfgca := d.Token()
		if _abfgca != nil {
			return _abfgca
		}
		switch _degfa := _dfdaa.(type) {
		case _b.StartElement:
			switch _degfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_cdgff := NewCT_RevisionRowColumn()
				if _babgg := d.DecodeElement(_cdgff, &_degfa); _babgg != nil {
					return _babgg
				}
				_dbddac.Rrc = append(_dbddac.Rrc, _cdgff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_gecbaf := NewCT_RevisionMove()
				if _ffabdb := d.DecodeElement(_gecbaf, &_degfa); _ffabdb != nil {
					return _ffabdb
				}
				_dbddac.Rm = append(_dbddac.Rm, _gecbaf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_dbeebc := NewCT_RevisionCustomView()
				if _gafbd := d.DecodeElement(_dbeebc, &_degfa); _gafbd != nil {
					return _gafbd
				}
				_dbddac.Rcv = append(_dbddac.Rcv, _dbeebc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_dcbfea := NewCT_RevisionSheetRename()
				if _dgefc := d.DecodeElement(_dcbfea, &_degfa); _dgefc != nil {
					return _dgefc
				}
				_dbddac.Rsnm = append(_dbddac.Rsnm, _dcbfea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_ddage := NewCT_RevisionInsertSheet()
				if _ceecf := d.DecodeElement(_ddage, &_degfa); _ceecf != nil {
					return _ceecf
				}
				_dbddac.Ris = append(_dbddac.Ris, _ddage)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_fbdab := NewCT_RevisionCellChange()
				if _dadgag := d.DecodeElement(_fbdab, &_degfa); _dadgag != nil {
					return _dadgag
				}
				_dbddac.Rcc = append(_dbddac.Rcc, _fbdab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_egaege := NewCT_RevisionFormatting()
				if _gcbdba := d.DecodeElement(_egaege, &_degfa); _gcbdba != nil {
					return _gcbdba
				}
				_dbddac.Rfmt = append(_dbddac.Rfmt, _egaege)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_fdbbde := NewCT_RevisionAutoFormatting()
				if _deaab := d.DecodeElement(_fdbbde, &_degfa); _deaab != nil {
					return _deaab
				}
				_dbddac.Raf = append(_dbddac.Raf, _fdbbde)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_ggccb := NewCT_RevisionDefinedName()
				if _gfbfa := d.DecodeElement(_ggccb, &_degfa); _gfbfa != nil {
					return _gfbfa
				}
				_dbddac.Rdn = append(_dbddac.Rdn, _ggccb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_ccbgb := NewCT_RevisionComment()
				if _cadcde := d.DecodeElement(_ccbgb, &_degfa); _cadcde != nil {
					return _cadcde
				}
				_dbddac.Rcmt = append(_dbddac.Rcmt, _ccbgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_ddcbg := NewCT_RevisionQueryTableField()
				if _aadea := d.DecodeElement(_ddcbg, &_degfa); _aadea != nil {
					return _aadea
				}
				_dbddac.Rqt = append(_dbddac.Rqt, _ddcbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_ageef := NewCT_RevisionConflict()
				if _ebfbdc := d.DecodeElement(_ageef, &_degfa); _ebfbdc != nil {
					return _ebfbdc
				}
				_dbddac.Rcft = append(_dbddac.Rcft, _ageef)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0073 \u0025\u0076", _degfa.Name)
				if _bbabg := d.Skip(); _bbabg != nil {
					return _bbabg
				}
			}
		case _b.EndElement:
			break _fegfcg
		case _b.CharData:
		}
	}
	return nil
}
func (_cfede *CT_Extension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfede.UriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_cfede.UriAttr)})
	}
	e.EncodeToken(start)
	if _cfede.Any != nil {
		_cfede.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_QueryTableRefresh and its children, prefixing error messages with path
func (_cbbdc *CT_QueryTableRefresh) ValidateWithPath(path string) error {
	if _gfcadf := _cbbdc.QueryTableFields.ValidateWithPath(path + "\u002f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064\u0073"); _gfcadf != nil {
		return _gfcadf
	}
	if _cbbdc.QueryTableDeletedFields != nil {
		if _afbce := _cbbdc.QueryTableDeletedFields.ValidateWithPath(path + "\u002fQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065l\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"); _afbce != nil {
			return _afbce
		}
	}
	if _cbbdc.SortState != nil {
		if _gccdgd := _cbbdc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _gccdgd != nil {
			return _gccdgd
		}
	}
	if _cbbdc.ExtLst != nil {
		if _cbbdd := _cbbdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cbbdd != nil {
			return _cbbdd
		}
	}
	return nil
}

type CT_Comment struct {

	// Cell Reference
	RefAttr string

	// Author Id
	AuthorIdAttr uint32

	// Unique Identifier for Comment
	GuidAttr *string

	// Shape ID
	ShapeIdAttr *uint32

	// Comment Text
	Text *CT_Rst

	// Comment Properties
	CommentPr *CT_CommentPr
}

func NewCT_OlapPr() *CT_OlapPr { _eaadge := &CT_OlapPr{}; return _eaadge }

// ValidateWithPath validates the CT_MetadataRecord and its children, prefixing error messages with path
func (_fdacc *CT_MetadataRecord) ValidateWithPath(path string) error { return nil }

type CT_PivotCache struct {

	// PivotCache Id
	CacheIdAttr uint32
	IdAttr      string
}

func (_efaa *CT_RevisionRowColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _efaa.SIdAttr)})
	if _efaa.EolAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efaa.EolAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _efaa.RefAttr)})
	_ebaad, _bdgce := _efaa.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
	if _bdgce != nil {
		return _bdgce
	}
	start.Attr = append(start.Attr, _ebaad)
	if _efaa.EdgeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efaa.EdgeAttr))})
	}
	if _efaa.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_efaa.RIdAttr)})
	}
	if _efaa.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efaa.UaAttr))})
	}
	if _efaa.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efaa.RaAttr))})
	}
	e.EncodeToken(start)
	if _efaa.Undo != nil {
		_cfbfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _ecgff := range _efaa.Undo {
			e.EncodeElement(_ecgff, _cfbfc)
		}
	}
	if _efaa.Rcc != nil {
		_acfeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _geegg := range _efaa.Rcc {
			e.EncodeElement(_geegg, _acfeb)
		}
	}
	if _efaa.Rfmt != nil {
		_fecga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _ddbdc := range _efaa.Rfmt {
			e.EncodeElement(_ddbdc, _fecga)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DefinedName and its children
func (_fgede *CT_DefinedName) Validate() error {
	return _fgede.ValidateWithPath("\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065")
}

// ValidateWithPath validates the CT_MdxKPI and its children, prefixing error messages with path
func (_adda *CT_MdxKPI) ValidateWithPath(path string) error {
	if _adda.PAttr == ST_MdxKPIPropertyUnset {
		return _a.Errorf("\u0025\u0073/\u0050\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _bbcgd := _adda.PAttr.ValidateWithPath(path + "\u002f\u0050\u0041\u0074\u0074\u0072"); _bbcgd != nil {
		return _bbcgd
	}
	return nil
}
func NewCT_PivotHierarchies() *CT_PivotHierarchies { _cfced := &CT_PivotHierarchies{}; return _cfced }

// ValidateWithPath validates the CT_DataRef and its children, prefixing error messages with path
func (_edgb *CT_DataRef) ValidateWithPath(path string) error { return nil }
func (_ddeegb *CT_SheetCalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccfcbe := range start.Attr {
		if _ccfcbe.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_dgffbcb, _ebcdd := _g.ParseBool(_ccfcbe.Value)
			if _ebcdd != nil {
				return _ebcdd
			}
			_ddeegb.FullCalcOnLoadAttr = &_dgffbcb
			continue
		}
	}
	for {
		_caebc, _cgceb := d.Token()
		if _cgceb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072:\u0020\u0025\u0073", _cgceb)
		}
		if _acdagg, _dgcbg := _caebc.(_b.EndElement); _dgcbg && _acdagg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Member struct {

	// Hidden Item Name
	NameAttr string
}
type CT_ServerFormats struct {

	// Format Count
	CountAttr *uint32

	// Server Format
	ServerFormat []*CT_ServerFormat
}

func (_fcdee *CT_PivotFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcdee.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fcdee.CountAttr)})
	}
	e.EncodeToken(start)
	if _fcdee.Filter != nil {
		_ecege := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _fedae := range _fcdee.Filter {
			e.EncodeElement(_fedae, _ecege)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DdeValue() *CT_DdeValue { _dcacc := &CT_DdeValue{}; return _dcacc }

const (
	ST_GradientTypeUnset  ST_GradientType = 0
	ST_GradientTypeLinear ST_GradientType = 1
	ST_GradientTypePath   ST_GradientType = 2
)

// Validate validates the CT_MapInfo and its children
func (_fbegf *CT_MapInfo) Validate() error {
	return _fbegf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f")
}
func NewCT_Col() *CT_Col { _gdace := &CT_Col{}; return _gdace }

// Validate validates the CT_RevisionHeader and its children
func (_abgbdf *CT_RevisionHeader) Validate() error {
	return _abgbdf.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072")
}
func (_aceaaa *ST_HtmlFmt) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aceaaa = 0
	case "\u006e\u006f\u006e\u0065":
		*_aceaaa = 1
	case "\u0072\u0074\u0066":
		*_aceaaa = 2
	case "\u0061\u006c\u006c":
		*_aceaaa = 3
	}
	return nil
}
func (_dffbga ST_RefMode) String() string {
	switch _dffbga {
	case 0:
		return ""
	case 1:
		return "\u0041\u0031"
	case 2:
		return "\u0052\u0031\u0043\u0031"
	}
	return ""
}

// ValidateWithPath validates the CT_PageMargins and its children, prefixing error messages with path
func (_baadbe *CT_PageMargins) ValidateWithPath(path string) error { return nil }

type CT_Font struct {

	// Font Name
	Name []*CT_FontName

	// Character Set
	Charset []*CT_IntProperty

	// Font Family
	Family []*CT_FontFamily

	// Bold
	B []*CT_BooleanProperty

	// Italic
	I []*CT_BooleanProperty

	// Strike Through
	Strike []*CT_BooleanProperty

	// Outline
	Outline []*CT_BooleanProperty

	// Shadow
	Shadow []*CT_BooleanProperty

	// Condense
	Condense []*CT_BooleanProperty

	// Extend
	Extend []*CT_BooleanProperty

	// Text Color
	Color []*CT_Color

	// Font Size
	Sz []*CT_FontSize

	// Underline
	U []*CT_UnderlineProperty

	// Text Vertical Alignment
	VertAlign []*CT_VerticalAlignFontProperty

	// Scheme
	Scheme []*CT_FontScheme
}
type CT_Revisions struct {

	// Revision Row Column Insert Delete
	Rrc []*CT_RevisionRowColumn

	// Revision Cell Move
	Rm []*CT_RevisionMove

	// Revision Custom View
	Rcv []*CT_RevisionCustomView

	// Revision Sheet Name
	Rsnm []*CT_RevisionSheetRename

	// Revision Insert Sheet
	Ris []*CT_RevisionInsertSheet

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt []*CT_RevisionFormatting

	// Revision AutoFormat
	Raf []*CT_RevisionAutoFormatting

	// Revision Defined Name
	Rdn []*CT_RevisionDefinedName

	// Revision Cell Comment
	Rcmt []*CT_RevisionComment

	// Revision Query Table
	Rqt []*CT_RevisionQueryTableField

	// Revision Merge Conflict
	Rcft []*CT_RevisionConflict
}

func (_aebaef *CT_OleObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aebaef.ProgIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aebaef.ProgIdAttr)})
	}
	if _aebaef.DvAspectAttr != ST_DvAspectUnset {
		_cgbbf, _fgddg := _aebaef.DvAspectAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074"})
		if _fgddg != nil {
			return _fgddg
		}
		start.Attr = append(start.Attr, _cgbbf)
	}
	if _aebaef.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0076", *_aebaef.LinkAttr)})
	}
	if _aebaef.OleUpdateAttr != ST_OleUpdateUnset {
		_cgbff, _gbbbf := _aebaef.OleUpdateAttr.MarshalXMLAttr(_b.Name{Local: "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e"})
		if _gbbbf != nil {
			return _gbbbf
		}
		start.Attr = append(start.Attr, _cgbff)
	}
	if _aebaef.AutoLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aebaef.AutoLoadAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _aebaef.ShapeIdAttr)})
	if _aebaef.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aebaef.IdAttr)})
	}
	e.EncodeToken(start)
	if _aebaef.ObjectPr != nil {
		_fdedg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}}
		e.EncodeElement(_aebaef.ObjectPr, _fdedg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cabgf *CT_GradientStop) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _cabgf.PositionAttr)})
	e.EncodeToken(start)
	_ffdee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_cabgf.Color, _ffdee)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PCDKPI and its children
func (_aafa *CT_PCDKPI) Validate() error {
	return _aafa.ValidateWithPath("\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I")
}

// ValidateWithPath validates the CT_Comment and its children, prefixing error messages with path
func (_cgce *CT_Comment) ValidateWithPath(path string) error {
	if _cgce.GuidAttr != nil {
		if !_ff.ST_GuidPatternRe.MatchString(*_cgce.GuidAttr) {
			return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, *_cgce.GuidAttr)
		}
	}
	if _dafe := _cgce.Text.ValidateWithPath(path + "\u002f\u0054\u0065x\u0074"); _dafe != nil {
		return _dafe
	}
	if _cgce.CommentPr != nil {
		if _gfgf := _cgce.CommentPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"); _gfgf != nil {
			return _gfgf
		}
	}
	return nil
}
func (_bgbfg *CT_MetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dedca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0063"}}
	for _, _cccb := range _bgbfg.Rc {
		e.EncodeElement(_cccb, _dedca)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gccad *CT_ConditionalFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gccad.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gccad.PivotAttr))})
	}
	if _gccad.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_gccad.SqrefAttr)})
	}
	e.EncodeToken(start)
	_cdcdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0052\u0075\u006ce"}}
	for _, _edga := range _gccad.CfRule {
		e.EncodeElement(_edga, _cdcdg)
	}
	if _gccad.ExtLst != nil {
		_beaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gccad.ExtLst, _beaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fdce *CT_CellStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fdce.CountAttr)})
	}
	e.EncodeToken(start)
	_dbfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}}
	for _, _cbdgb := range _fdce.CellStyle {
		e.EncodeElement(_cbdgb, _dbfa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellSmartTag and its children
func (_beec *CT_CellSmartTag) Validate() error {
	return _beec.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067")
}
func NewCT_CalculatedMember() *CT_CalculatedMember { _begd := &CT_CalculatedMember{}; return _begd }

const (
	ST_GrowShrinkTypeUnset          ST_GrowShrinkType = 0
	ST_GrowShrinkTypeInsertDelete   ST_GrowShrinkType = 1
	ST_GrowShrinkTypeInsertClear    ST_GrowShrinkType = 2
	ST_GrowShrinkTypeOverwriteClear ST_GrowShrinkType = 3
)

func (_ggec *CT_CellFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbef := range start.Attr {
		if _bbef.Name.Local == "\u0074" {
			_ggec.TAttr.UnmarshalXMLAttr(_bbef)
			continue
		}
		if _bbef.Name.Local == "\u0061\u0063\u0061" {
			_gdbfb, _aeab := _g.ParseBool(_bbef.Value)
			if _aeab != nil {
				return _aeab
			}
			_ggec.AcaAttr = &_gdbfb
			continue
		}
		if _bbef.Name.Local == "\u0072\u0065\u0066" {
			_bfe, _bdcf := _bbef.Value, error(nil)
			if _bdcf != nil {
				return _bdcf
			}
			_ggec.RefAttr = &_bfe
			continue
		}
		if _bbef.Name.Local == "\u0064\u0074\u0032\u0044" {
			_fcgba, _ageb := _g.ParseBool(_bbef.Value)
			if _ageb != nil {
				return _ageb
			}
			_ggec.Dt2DAttr = &_fcgba
			continue
		}
		if _bbef.Name.Local == "\u0064\u0074\u0072" {
			_bgbd, _adeec := _g.ParseBool(_bbef.Value)
			if _adeec != nil {
				return _adeec
			}
			_ggec.DtrAttr = &_bgbd
			continue
		}
		if _bbef.Name.Local == "\u0064\u0065\u006c\u0031" {
			_fcced, _cfbf := _g.ParseBool(_bbef.Value)
			if _cfbf != nil {
				return _cfbf
			}
			_ggec.Del1Attr = &_fcced
			continue
		}
		if _bbef.Name.Local == "\u0064\u0065\u006c\u0032" {
			_acfg, _cegd := _g.ParseBool(_bbef.Value)
			if _cegd != nil {
				return _cegd
			}
			_ggec.Del2Attr = &_acfg
			continue
		}
		if _bbef.Name.Local == "\u0072\u0031" {
			_eegcc, _fedebe := _bbef.Value, error(nil)
			if _fedebe != nil {
				return _fedebe
			}
			_ggec.R1Attr = &_eegcc
			continue
		}
		if _bbef.Name.Local == "\u0072\u0032" {
			_cdcab, _ccac := _bbef.Value, error(nil)
			if _ccac != nil {
				return _ccac
			}
			_ggec.R2Attr = &_cdcab
			continue
		}
		if _bbef.Name.Local == "\u0063\u0061" {
			_bfdbb, _dbd := _g.ParseBool(_bbef.Value)
			if _dbd != nil {
				return _dbd
			}
			_ggec.CaAttr = &_bfdbb
			continue
		}
		if _bbef.Name.Local == "\u0073\u0069" {
			_efae, _gddg := _g.ParseUint(_bbef.Value, 10, 32)
			if _gddg != nil {
				return _gddg
			}
			_bbcg := uint32(_efae)
			_ggec.SiAttr = &_bbcg
			continue
		}
		if _bbef.Name.Local == "\u0062\u0078" {
			_efcc, _bbgcf := _g.ParseBool(_bbef.Value)
			if _bbgcf != nil {
				return _bbgcf
			}
			_ggec.BxAttr = &_efcc
			continue
		}
	}
	for {
		_faaaa, _cgac := d.Token()
		if _cgac != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0046\u006f\u0072\u006d\u0075\u006c\u0061:\u0020\u0025\u0073", _cgac)
		}
		if _egdc, _ceb := _faaaa.(_b.CharData); _ceb {
			_ggec.Content = string(_egdc)
		}
		if _dcd, _ecaa := _faaaa.(_b.EndElement); _ecaa && _dcd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afaebc *CT_PivotCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _afaebc.CacheIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _afaebc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Cfvo and its children
func (_faae *CT_Cfvo) Validate() error {
	return _faae.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0076\u006f")
}
func (_fefbf *CT_Location) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _fefbf.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", _fefbf.FirstHeaderRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", _fefbf.FirstDataRowAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0076", _fefbf.FirstDataColAttr)})
	if _fefbf.RowPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fefbf.RowPageCountAttr)})
	}
	if _fefbf.ColPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fefbf.ColPageCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PageSetUpPr struct {

	// Show Auto Page Breaks
	AutoPageBreaksAttr *bool

	// Fit To Page
	FitToPageAttr *bool
}

// ValidateWithPath validates the PivotCacheRecords and its children, prefixing error messages with path
func (_fadde *PivotCacheRecords) ValidateWithPath(path string) error {
	if _ccgffb := _fadde.CT_PivotCacheRecords.ValidateWithPath(path); _ccgffb != nil {
		return _ccgffb
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionFormatting and its children, prefixing error messages with path
func (_gdfdfc *CT_RevisionFormatting) ValidateWithPath(path string) error {
	if _gdfdfc.Dxf != nil {
		if _bbgfdf := _gdfdfc.Dxf.ValidateWithPath(path + "\u002f\u0044\u0078\u0066"); _bbgfdf != nil {
			return _bbgfdf
		}
	}
	if _gdfdfc.ExtLst != nil {
		if _efcfcdb := _gdfdfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efcfcdb != nil {
			return _efcfcdb
		}
	}
	return nil
}

// Validate validates the CT_CellStyleXfs and its children
func (_ebfgd *CT_CellStyleXfs) Validate() error {
	return _ebfgd.ValidateWithPath("\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073")
}
func (_aafeg *CT_RangePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _debdaf := range start.Attr {
		if _debdaf.Name.Local == "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t" {
			_ecdbeb, _aadba := _g.ParseBool(_debdaf.Value)
			if _aadba != nil {
				return _aadba
			}
			_aafeg.AutoStartAttr = &_ecdbeb
			continue
		}
		if _debdaf.Name.Local == "\u0061u\u0074\u006f\u0045\u006e\u0064" {
			_ffgdg, _bgeed := _g.ParseBool(_debdaf.Value)
			if _bgeed != nil {
				return _bgeed
			}
			_aafeg.AutoEndAttr = &_ffgdg
			continue
		}
		if _debdaf.Name.Local == "\u0067r\u006f\u0075\u0070\u0042\u0079" {
			_aafeg.GroupByAttr.UnmarshalXMLAttr(_debdaf)
			continue
		}
		if _debdaf.Name.Local == "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d" {
			_adcbee, _agbdc := _g.ParseFloat(_debdaf.Value, 64)
			if _agbdc != nil {
				return _agbdc
			}
			_aafeg.StartNumAttr = &_adcbee
			continue
		}
		if _debdaf.Name.Local == "\u0065\u006e\u0064\u004e\u0075\u006d" {
			_afdbb, _ebddbe := _g.ParseFloat(_debdaf.Value, 64)
			if _ebddbe != nil {
				return _ebddbe
			}
			_aafeg.EndNumAttr = &_afdbb
			continue
		}
		if _debdaf.Name.Local == "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e" {
			_dggab, _bbgbcf := ParseStdlibTime(_debdaf.Value)
			if _bbgbcf != nil {
				return _bbgbcf
			}
			_aafeg.StartDateAttr = &_dggab
			continue
		}
		if _debdaf.Name.Local == "\u0065n\u0064\u0044\u0061\u0074\u0065" {
			_cadea, _gbgfda := ParseStdlibTime(_debdaf.Value)
			if _gbgfda != nil {
				return _gbgfda
			}
			_aafeg.EndDateAttr = &_cadea
			continue
		}
		if _debdaf.Name.Local == "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_edeff, _fdbga := _g.ParseFloat(_debdaf.Value, 64)
			if _fdbga != nil {
				return _fdbga
			}
			_aafeg.GroupIntervalAttr = &_edeff
			continue
		}
	}
	for {
		_dceee, _ebgef := d.Token()
		if _ebgef != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072\u003a\u0020%\u0073", _ebgef)
		}
		if _aeggb, _eagade := _dceee.(_b.EndElement); _eagade && _aeggb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abfgcc ST_PivotFilterType) ValidateWithPath(path string) error {
	switch _abfgcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abfgcc))
	}
	return nil
}
func (_ffgca *CT_FileSharing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _begag := range start.Attr {
		if _begag.Name.Local == "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064" {
			_dggfc, _bdfdb := _g.ParseBool(_begag.Value)
			if _bdfdb != nil {
				return _bdfdb
			}
			_ffgca.ReadOnlyRecommendedAttr = &_dggfc
			continue
		}
		if _begag.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_bbbad, _dcgca := _begag.Value, error(nil)
			if _dcgca != nil {
				return _dcgca
			}
			_ffgca.UserNameAttr = &_bbbad
			continue
		}
		if _begag.Name.Local == "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_afbbb, _ffdbb := _begag.Value, error(nil)
			if _ffdbb != nil {
				return _ffdbb
			}
			_ffgca.ReservationPasswordAttr = &_afbbb
			continue
		}
		if _begag.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_gaagb, _eecbc := _begag.Value, error(nil)
			if _eecbc != nil {
				return _eecbc
			}
			_ffgca.AlgorithmNameAttr = &_gaagb
			continue
		}
		if _begag.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_cdfdf, _dbfd := _begag.Value, error(nil)
			if _dbfd != nil {
				return _dbfd
			}
			_ffgca.HashValueAttr = &_cdfdf
			continue
		}
		if _begag.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_fbfdd, _adbfb := _begag.Value, error(nil)
			if _adbfb != nil {
				return _adbfb
			}
			_ffgca.SaltValueAttr = &_fbfdd
			continue
		}
		if _begag.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_cfdgf, _bcgeg := _g.ParseUint(_begag.Value, 10, 32)
			if _bcgeg != nil {
				return _bcgeg
			}
			_bgdf := uint32(_cfdgf)
			_ffgca.SpinCountAttr = &_bgdf
			continue
		}
	}
	for {
		_fgbea, _efccg := d.Token()
		if _efccg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067:\u0020\u0025\u0073", _efccg)
		}
		if _abee, _fgag := _fgbea.(_b.EndElement); _fgag && _abee.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomSheetViews struct {

	// Custom Sheet View
	CustomSheetView []*CT_CustomSheetView
}

func (_ebffg ST_PrintError) Validate() error { return _ebffg.ValidateWithPath("") }
func (_daff *CT_CellAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efc := range start.Attr {
		if _efc.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c" {
			_daff.HorizontalAttr.UnmarshalXMLAttr(_efc)
			continue
		}
		if _efc.Name.Local == "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_daff.VerticalAttr.UnmarshalXMLAttr(_efc)
			continue
		}
		if _efc.Name.Local == "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e" {
			_ecdd, _eebd := _g.ParseUint(_efc.Value, 10, 8)
			if _eebd != nil {
				return _eebd
			}
			_eccf := uint8(_ecdd)
			_daff.TextRotationAttr = &_eccf
			continue
		}
		if _efc.Name.Local == "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074" {
			_gcfg, _deedc := _g.ParseBool(_efc.Value)
			if _deedc != nil {
				return _deedc
			}
			_daff.WrapTextAttr = &_gcfg
			continue
		}
		if _efc.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_acbc, _gfcb := _g.ParseUint(_efc.Value, 10, 32)
			if _gfcb != nil {
				return _gfcb
			}
			_ebeb := uint32(_acbc)
			_daff.IndentAttr = &_ebeb
			continue
		}
		if _efc.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074" {
			_ecfg, _bafcb := _g.ParseInt(_efc.Value, 10, 32)
			if _bafcb != nil {
				return _bafcb
			}
			_fccc := int32(_ecfg)
			_daff.RelativeIndentAttr = &_fccc
			continue
		}
		if _efc.Name.Local == "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065" {
			_ceea, _gfed := _g.ParseBool(_efc.Value)
			if _gfed != nil {
				return _gfed
			}
			_daff.JustifyLastLineAttr = &_ceea
			continue
		}
		if _efc.Name.Local == "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074" {
			_aaaf, _deg := _g.ParseBool(_efc.Value)
			if _deg != nil {
				return _deg
			}
			_daff.ShrinkToFitAttr = &_aaaf
			continue
		}
		if _efc.Name.Local == "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072" {
			_gfgcb, _ecde := _g.ParseUint(_efc.Value, 10, 32)
			if _ecde != nil {
				return _ecde
			}
			_adfa := uint32(_gfgcb)
			_daff.ReadingOrderAttr = &_adfa
			continue
		}
	}
	for {
		_baa, _daca := d.Token()
		if _daca != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006cA\u006ci\u0067\u006e\u006d\u0065\u006e\u0074\u003a \u0025\u0073", _daca)
		}
		if _dfdb, _ccca := _baa.(_b.EndElement); _ccca && _dfdb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_baabd ST_MdxSetOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ddagf := _b.Attr{}
	_ddagf.Name = name
	switch _baabd {
	case ST_MdxSetOrderUnset:
		_ddagf.Value = ""
	case ST_MdxSetOrderU:
		_ddagf.Value = "\u0075"
	case ST_MdxSetOrderA:
		_ddagf.Value = "\u0061"
	case ST_MdxSetOrderD:
		_ddagf.Value = "\u0064"
	case ST_MdxSetOrderAa:
		_ddagf.Value = "\u0061\u0061"
	case ST_MdxSetOrderAd:
		_ddagf.Value = "\u0061\u0064"
	case ST_MdxSetOrderNa:
		_ddagf.Value = "\u006e\u0061"
	case ST_MdxSetOrderNd:
		_ddagf.Value = "\u006e\u0064"
	}
	return _ddagf, nil
}
func (_bbeeg ST_DdeValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efdebce := _b.Attr{}
	_efdebce.Name = name
	switch _bbeeg {
	case ST_DdeValueTypeUnset:
		_efdebce.Value = ""
	case ST_DdeValueTypeNil:
		_efdebce.Value = "\u006e\u0069\u006c"
	case ST_DdeValueTypeB:
		_efdebce.Value = "\u0062"
	case ST_DdeValueTypeN:
		_efdebce.Value = "\u006e"
	case ST_DdeValueTypeE:
		_efdebce.Value = "\u0065"
	case ST_DdeValueTypeStr:
		_efdebce.Value = "\u0073\u0074\u0072"
	}
	return _efdebce, nil
}
func (_gfagc *CT_Drawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gegg := range start.Attr {
		if _gegg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gegg.Name.Local == "\u0069\u0064" || _gegg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gegg.Name.Local == "\u0069\u0064" {
			_fagef, _gcad := _gegg.Value, error(nil)
			if _gcad != nil {
				return _gcad
			}
			_gfagc.IdAttr = _fagef
			continue
		}
	}
	for {
		_cafff, _gbdb := d.Token()
		if _gbdb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u003a\u0020%\u0073", _gbdb)
		}
		if _eafgg, _efcfc := _cafff.(_b.EndElement); _efcfc && _eafgg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_AutoSortScope struct {

	// Auto Sort Scope
	PivotArea *CT_PivotArea
}
type CT_CacheSource struct {

	// Cache Type
	TypeAttr ST_SourceType

	// Connection Index
	ConnectionIdAttr *uint32

	// Worksheet PivotCache Source
	WorksheetSource *CT_WorksheetSource

	// Consolidation Source
	Consolidation *CT_Consolidation

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cfbgb *CT_MemberProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfbgb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cfbgb.CountAttr)})
	}
	e.EncodeToken(start)
	_beeaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0070"}}
	for _, _ceccd := range _cfbgb.Mp {
		e.EncodeElement(_ceccd, _beeaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffefag ST_FormatAction) Validate() error { return _ffefag.ValidateWithPath("") }
func (_cbfdbg *CT_QueryTableDeletedFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbfdbg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbfdbg.CountAttr)})
	}
	e.EncodeToken(start)
	_bfgbdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}}
	for _, _ebbga := range _cbfdbg.DeletedField {
		e.EncodeElement(_ebbga, _bfgbdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Drawing() *CT_Drawing { _dgfc := &CT_Drawing{}; return _dgfc }

type ST_SourceType byte

func NewCT_MeasureGroup() *CT_MeasureGroup { _abbdg := &CT_MeasureGroup{}; return _abbdg }
func NewCT_MeasureDimensionMaps() *CT_MeasureDimensionMaps {
	_bgabe := &CT_MeasureDimensionMaps{}
	return _bgabe
}

// Validate validates the CT_Borders and its children
func (_gce *CT_Borders) Validate() error {
	return _gce.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073")
}
func (_afdgb *CT_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_afdgb.Authors = NewCT_Authors()
	_afdgb.CommentList = NewCT_CommentList()
_gacbe:
	for {
		_addc, _bbbf := d.Token()
		if _bbbf != nil {
			return _bbbf
		}
		switch _dafda := _addc.(type) {
		case _b.StartElement:
			switch _dafda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _eaeg := d.DecodeElement(_afdgb.Authors, &_dafda); _eaeg != nil {
					return _eaeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _gggd := d.DecodeElement(_afdgb.CommentList, &_dafda); _gggd != nil {
					return _gggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afdgb.ExtLst = NewCT_ExtensionList()
				if _bcgf := d.DecodeElement(_afdgb.ExtLst, &_dafda); _bcgf != nil {
					return _bcgf
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _dafda.Name)
				if _gbag := d.Skip(); _gbag != nil {
					return _gbag
				}
			}
		case _b.EndElement:
			break _gacbe
		case _b.CharData:
		}
	}
	return nil
}
func (_baab *CT_GroupMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_baab.CountAttr)})
	}
	e.EncodeToken(start)
	_dabgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072"}}
	for _, _ggbe := range _baab.GroupMember {
		e.EncodeElement(_ggbe, _dabgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Col struct {

	// Minimum Column
	MinAttr uint32

	// Maximum Column
	MaxAttr uint32

	// Column Width
	WidthAttr *float64

	// Style
	StyleAttr *uint32

	// Hidden Columns
	HiddenAttr *bool

	// Best Fit Column Width
	BestFitAttr *bool

	// Custom Width
	CustomWidthAttr *bool

	// Show Phonetic Information
	PhoneticAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_ece *CT_Boolean) ValidateWithPath(path string) error {
	for _bbcff, _bcb := range _ece.X {
		if _abe := _bcb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bbcff)); _abe != nil {
			return _abe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Field and its children, prefixing error messages with path
func (_ggfge *CT_Field) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Comment and its children
func (_abfa *CT_Comment) Validate() error {
	return _abfa.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074")
}
func (_gccce *CT_ProtectedRanges) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fbab:
	for {
		_abdeef, _gcade := d.Token()
		if _gcade != nil {
			return _gcade
		}
		switch _fcebc := _abdeef.(type) {
		case _b.StartElement:
			switch _fcebc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}:
				_fbaeac := NewCT_ProtectedRange()
				if _agdbag := d.DecodeElement(_fbaeac, &_fcebc); _agdbag != nil {
					return _agdbag
				}
				_gccce.ProtectedRange = append(_gccce.ProtectedRange, _fbaeac)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063t\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073\u0020\u0025\u0076", _fcebc.Name)
				if _fbgga := d.Skip(); _fbgga != nil {
					return _fbgga
				}
			}
		case _b.EndElement:
			break _fbab
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Fonts and its children
func (_efgbg *CT_Fonts) Validate() error {
	return _efgbg.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073")
}
func (_gbcf *CT_I) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgfa := range start.Attr {
		if _cgfa.Name.Local == "\u0074" {
			_gbcf.TAttr.UnmarshalXMLAttr(_cgfa)
			continue
		}
		if _cgfa.Name.Local == "\u0072" {
			_dbfdf, _bebg := _g.ParseUint(_cgfa.Value, 10, 32)
			if _bebg != nil {
				return _bebg
			}
			_ddadf := uint32(_dbfdf)
			_gbcf.RAttr = &_ddadf
			continue
		}
		if _cgfa.Name.Local == "\u0069" {
			_abaca, _dfbba := _g.ParseUint(_cgfa.Value, 10, 32)
			if _dfbba != nil {
				return _dfbba
			}
			_bfded := uint32(_abaca)
			_gbcf.IAttr = &_bfded
			continue
		}
	}
_cfcfe:
	for {
		_aceec, _cdabc := d.Token()
		if _cdabc != nil {
			return _cdabc
		}
		switch _babcb := _aceec.(type) {
		case _b.StartElement:
			switch _babcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fbcbf := NewCT_X()
				if _fecg := d.DecodeElement(_fbcbf, &_babcb); _fecg != nil {
					return _fecg
				}
				_gbcf.X = append(_gbcf.X, _fbcbf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0049\u0020\u0025\u0076", _babcb.Name)
				if _cegbdg := d.Skip(); _cegbdg != nil {
					return _cegbdg
				}
			}
		case _b.EndElement:
			break _cfcfe
		case _b.CharData:
		}
	}
	return nil
}
func (_gbeeb *CT_PivotCaches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfcbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}}
	for _, _dfgec := range _gbeeb.PivotCache {
		e.EncodeElement(_dfgec, _dfcbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfceg *CT_SharedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfceg.ContainsSemiMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsSemiMixedTypesAttr))})
	}
	if _gfceg.ContainsNonDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsNonDateAttr))})
	}
	if _gfceg.ContainsDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsDateAttr))})
	}
	if _gfceg.ContainsStringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsStringAttr))})
	}
	if _gfceg.ContainsBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsBlankAttr))})
	}
	if _gfceg.ContainsMixedTypesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsMixedTypesAttr))})
	}
	if _gfceg.ContainsNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsNumberAttr))})
	}
	if _gfceg.ContainsIntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.ContainsIntegerAttr))})
	}
	if _gfceg.MinValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gfceg.MinValueAttr)})
	}
	if _gfceg.MaxValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gfceg.MaxValueAttr)})
	}
	if _gfceg.MinDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gfceg.MinDateAttr)})
	}
	if _gfceg.MaxDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gfceg.MaxDateAttr)})
	}
	if _gfceg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gfceg.CountAttr)})
	}
	if _gfceg.LongTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfceg.LongTextAttr))})
	}
	e.EncodeToken(start)
	if _gfceg.M != nil {
		_feccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _dceaed := range _gfceg.M {
			e.EncodeElement(_dceaed, _feccf)
		}
	}
	if _gfceg.N != nil {
		_gbecd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _faeebc := range _gfceg.N {
			e.EncodeElement(_faeebc, _gbecd)
		}
	}
	if _gfceg.B != nil {
		_gdegc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _cffdf := range _gfceg.B {
			e.EncodeElement(_cffdf, _gdegc)
		}
	}
	if _gfceg.E != nil {
		_gbbfeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _fegcec := range _gfceg.E {
			e.EncodeElement(_fegcec, _gbbfeb)
		}
	}
	if _gfceg.S != nil {
		_efaag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _dfaddd := range _gfceg.S {
			e.EncodeElement(_dfaddd, _efaag)
		}
	}
	if _gfceg.D != nil {
		_afbdcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _adbcfd := range _gfceg.D {
			e.EncodeElement(_adbcfd, _afbdcd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccgeg *CT_Missing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccgeg.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.UAttr))})
	}
	if _ccgeg.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.FAttr))})
	}
	if _ccgeg.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_ccgeg.CAttr)})
	}
	if _ccgeg.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_ccgeg.CpAttr)})
	}
	if _ccgeg.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ccgeg.InAttr)})
	}
	if _ccgeg.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_ccgeg.BcAttr)})
	}
	if _ccgeg.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_ccgeg.FcAttr)})
	}
	if _ccgeg.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.IAttr))})
	}
	if _ccgeg.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.UnAttr))})
	}
	if _ccgeg.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.StAttr))})
	}
	if _ccgeg.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgeg.BAttr))})
	}
	e.EncodeToken(start)
	if _ccgeg.Tpls != nil {
		_baabg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _bbfec := range _ccgeg.Tpls {
			e.EncodeElement(_bbfec, _baabg)
		}
	}
	if _ccgeg.X != nil {
		_efbag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _egdfg := range _ccgeg.X {
			e.EncodeElement(_egdfg, _efbag)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalReference struct{ IdAttr string }
type CT_FieldsUsage struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field Id
	FieldUsage []*CT_FieldUsage
}

func NewCT_Tuples() *CT_Tuples { _dggfbd := &CT_Tuples{}; return _dggfbd }

type CT_MetadataBlocks struct {

	// Metadata Block Count
	CountAttr *uint32

	// Metadata Block
	Bk []*CT_MetadataBlock
}
type CT_ExternalBook struct {
	IdAttr string

	// Supporting Workbook Sheet Names
	SheetNames *CT_ExternalSheetNames

	// Named Links
	DefinedNames *CT_ExternalDefinedNames

	// Cached Worksheet Data
	SheetDataSet *CT_ExternalSheetDataSet
}
type CT_WebPublishing struct {

	// Use CSS
	CssAttr *bool

	// Thicket
	ThicketAttr *bool

	// Enable Long File Names
	LongFileNamesAttr *bool

	// VML in Browsers
	VmlAttr *bool

	// Allow PNG
	AllowPngAttr *bool

	// Target Screen Size
	TargetScreenSizeAttr ST_TargetScreenSize

	// DPI
	DpiAttr *uint32

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string
}

func (_gbcab ST_SortBy) ValidateWithPath(path string) error {
	switch _gbcab {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbcab))
	}
	return nil
}
func (_eggee *CT_DdeValue) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebcgf := range start.Attr {
		if _ebcgf.Name.Local == "\u0074" {
			_eggee.TAttr.UnmarshalXMLAttr(_ebcgf)
			continue
		}
	}
_ebbb:
	for {
		_gdgfb, _gbecfc := d.Token()
		if _gbecfc != nil {
			return _gbecfc
		}
		switch _dccde := _gdgfb.(type) {
		case _b.StartElement:
			switch _dccde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c"}:
				if _ggac := d.DecodeElement(&_eggee.Val, &_dccde); _ggac != nil {
					return _ggac
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0020\u0025\u0076", _dccde.Name)
				if _bfecg := d.Skip(); _bfecg != nil {
					return _bfecg
				}
			}
		case _b.EndElement:
			break _ebbb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_DataValidation() *CT_DataValidation { _gfbe := &CT_DataValidation{}; return _gfbe }

type ST_Qualifier byte

const (
	ST_ItemTypeUnset   ST_ItemType = 0
	ST_ItemTypeData    ST_ItemType = 1
	ST_ItemTypeDefault ST_ItemType = 2
	ST_ItemTypeSum     ST_ItemType = 3
	ST_ItemTypeCountA  ST_ItemType = 4
	ST_ItemTypeAvg     ST_ItemType = 5
	ST_ItemTypeMax     ST_ItemType = 6
	ST_ItemTypeMin     ST_ItemType = 7
	ST_ItemTypeProduct ST_ItemType = 8
	ST_ItemTypeCount   ST_ItemType = 9
	ST_ItemTypeStdDev  ST_ItemType = 10
	ST_ItemTypeStdDevP ST_ItemType = 11
	ST_ItemTypeVar     ST_ItemType = 12
	ST_ItemTypeVarP    ST_ItemType = 13
	ST_ItemTypeGrand   ST_ItemType = 14
	ST_ItemTypeBlank   ST_ItemType = 15
)

func (_eabfb *CT_MdxMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egbgb := range start.Attr {
		if _egbgb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdecbe, _feafe := _g.ParseUint(_egbgb.Value, 10, 32)
			if _feafe != nil {
				return _feafe
			}
			_fddaa := uint32(_gdecbe)
			_eabfb.CountAttr = &_fddaa
			continue
		}
	}
_ddgfc:
	for {
		_begg, _bcefc := d.Token()
		if _bcefc != nil {
			return _bcefc
		}
		switch _efcdd := _begg.(type) {
		case _b.StartElement:
			switch _efcdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0064\u0078"}:
				_cgcad := NewCT_Mdx()
				if _ceaga := d.DecodeElement(_cgcad, &_efcdd); _ceaga != nil {
					return _ceaga
				}
				_eabfb.Mdx = append(_eabfb.Mdx, _cgcad)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074\u0061d\u0061t\u0061\u0020\u0025\u0076", _efcdd.Name)
				if _cedcb := d.Skip(); _cedcb != nil {
					return _cedcb
				}
			}
		case _b.EndElement:
			break _ddgfc
		case _b.CharData:
		}
	}
	return nil
}
func (_cgafac *CT_SortState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fafed := range start.Attr {
		if _fafed.Name.Local == "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074" {
			_ffgfag, _adedb := _g.ParseBool(_fafed.Value)
			if _adedb != nil {
				return _adedb
			}
			_cgafac.ColumnSortAttr = &_ffgfag
			continue
		}
		if _fafed.Name.Local == "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065" {
			_fgdda, _bdggf := _g.ParseBool(_fafed.Value)
			if _bdggf != nil {
				return _bdggf
			}
			_cgafac.CaseSensitiveAttr = &_fgdda
			continue
		}
		if _fafed.Name.Local == "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064" {
			_cgafac.SortMethodAttr.UnmarshalXMLAttr(_fafed)
			continue
		}
		if _fafed.Name.Local == "\u0072\u0065\u0066" {
			_cdccd, _gbed := _fafed.Value, error(nil)
			if _gbed != nil {
				return _gbed
			}
			_cgafac.RefAttr = _cdccd
			continue
		}
	}
_eebbg:
	for {
		_gecfg, _dbdfeb := d.Token()
		if _dbdfeb != nil {
			return _dbdfeb
		}
		switch _cbggb := _gecfg.(type) {
		case _b.StartElement:
			switch _cbggb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0072\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}:
				_gaeeda := NewCT_SortCondition()
				if _afcef := d.DecodeElement(_gaeeda, &_cbggb); _afcef != nil {
					return _afcef
				}
				_cgafac.SortCondition = append(_cgafac.SortCondition, _gaeeda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cgafac.ExtLst = NewCT_ExtensionList()
				if _dbcbaa := d.DecodeElement(_cgafac.ExtLst, &_cbggb); _dbcbaa != nil {
					return _dbcbaa
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006f\u0072t\u0053\u0074\u0061\u0074\u0065\u0020\u0025\u0076", _cbggb.Name)
				if _ddebfg := d.Skip(); _ddebfg != nil {
					return _ddebfg
				}
			}
		case _b.EndElement:
			break _eebbg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RowHierarchiesUsage and its children
func (_bgadge *CT_RowHierarchiesUsage) Validate() error {
	return _bgadge.ValidateWithPath("\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065")
}
func NewCT_PhoneticRun() *CT_PhoneticRun { _bbcge := &CT_PhoneticRun{}; return _bbcge }

// ValidateWithPath validates the CT_RevisionMove and its children, prefixing error messages with path
func (_fccee *CT_RevisionMove) ValidateWithPath(path string) error {
	for _cgcdgc, _bcebf := range _fccee.Undo {
		if _edged := _bcebf.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _cgcdgc)); _edged != nil {
			return _edged
		}
	}
	for _fggff, _aebaae := range _fccee.Rcc {
		if _fdade := _aebaae.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _fggff)); _fdade != nil {
			return _fdade
		}
	}
	for _dgfae, _eaded := range _fccee.Rfmt {
		if _bbbb := _eaded.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _dgfae)); _bbbb != nil {
			return _bbbb
		}
	}
	return nil
}

// Validate validates the CT_FontScheme and its children
func (_bgggb *CT_FontScheme) Validate() error {
	return _bgggb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

// Validate validates the CT_CellFormula and its children
func (_dgcd *CT_CellFormula) Validate() error {
	return _dgcd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061")
}
func (_dcgbc ST_CfType) ValidateWithPath(path string) error {
	switch _dcgbc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcgbc))
	}
	return nil
}

// Validate validates the CT_DataRefs and its children
func (_ccfea *CT_DataRefs) Validate() error {
	return _ccfea.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073")
}

// Validate validates the CT_CalculatedItem and its children
func (_abac *CT_CalculatedItem) Validate() error {
	return _abac.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d")
}
func (_fgacfg *CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgacfg.CT_CalcChain = *NewCT_CalcChain()
_dcacca:
	for {
		_accge, _dgcbb := d.Token()
		if _dgcbb != nil {
			return _dgcbb
		}
		switch _abbdecc := _accge.(type) {
		case _b.StartElement:
			switch _abbdecc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_gagdfa := NewCT_CalcCell()
				if _cdgae := d.DecodeElement(_gagdfa, &_abbdecc); _cdgae != nil {
					return _cdgae
				}
				_fgacfg.C = append(_fgacfg.C, _gagdfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgacfg.ExtLst = NewCT_ExtensionList()
				if _cbeafg := d.DecodeElement(_fgacfg.ExtLst, &_abbdecc); _cbeafg != nil {
					return _cbeafg
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0061\u006c\u0063\u0043\u0068a\u0069\u006e \u0025\u0076", _abbdecc.Name)
				if _beggd := d.Skip(); _beggd != nil {
					return _beggd
				}
			}
		case _b.EndElement:
			break _dcacca
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Number() *CT_Number { _efdfc := &CT_Number{}; return _efdfc }

// ValidateWithPath validates the CT_SharedUser and its children, prefixing error messages with path
func (_edbfe *CT_SharedUser) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_edbfe.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _edbfe.GuidAttr)
	}
	if _edbfe.ExtLst != nil {
		if _dgdad := _edbfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgdad != nil {
			return _dgdad
		}
	}
	return nil
}

// Validate validates the CT_VolTopic and its children
func (_ggged *CT_VolTopic) Validate() error {
	return _ggged.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063")
}
func (_cdebc ST_CalcMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fadddfe := _b.Attr{}
	_fadddfe.Name = name
	switch _cdebc {
	case ST_CalcModeUnset:
		_fadddfe.Value = ""
	case ST_CalcModeManual:
		_fadddfe.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_CalcModeAuto:
		_fadddfe.Value = "\u0061\u0075\u0074\u006f"
	case ST_CalcModeAutoNoTable:
		_fadddfe.Value = "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return _fadddfe, nil
}

const (
	ST_CellFormulaTypeUnset     ST_CellFormulaType = 0
	ST_CellFormulaTypeNormal    ST_CellFormulaType = 1
	ST_CellFormulaTypeArray     ST_CellFormulaType = 2
	ST_CellFormulaTypeDataTable ST_CellFormulaType = 3
	ST_CellFormulaTypeShared    ST_CellFormulaType = 4
)

func (_cdcag *ST_TargetScreenSize) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdcag = 0
	case "\u00354\u0034\u0078\u0033\u0037\u0036":
		*_cdcag = 1
	case "\u00364\u0030\u0078\u0034\u0038\u0030":
		*_cdcag = 2
	case "\u00372\u0030\u0078\u0035\u0031\u0032":
		*_cdcag = 3
	case "\u00380\u0030\u0078\u0036\u0030\u0030":
		*_cdcag = 4
	case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
		*_cdcag = 5
	case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
		*_cdcag = 6
	case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
		*_cdcag = 7
	case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
		*_cdcag = 8
	case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
		*_cdcag = 9
	case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
		*_cdcag = 10
	case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
		*_cdcag = 11
	}
	return nil
}

// Validate validates the CT_Connection and its children
func (_cagfec *CT_Connection) Validate() error {
	return _cagfec.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_gedceg ST_UnderlineValues) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffggg := _b.Attr{}
	_ffggg.Name = name
	switch _gedceg {
	case ST_UnderlineValuesUnset:
		_ffggg.Value = ""
	case ST_UnderlineValuesSingle:
		_ffggg.Value = "\u0073\u0069\u006e\u0067\u006c\u0065"
	case ST_UnderlineValuesDouble:
		_ffggg.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_UnderlineValuesSingleAccounting:
		_ffggg.Value = "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesDoubleAccounting:
		_ffggg.Value = "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case ST_UnderlineValuesNone:
		_ffggg.Value = "\u006e\u006f\u006e\u0065"
	}
	return _ffggg, nil
}

// ValidateWithPath validates the CT_CalcPr and its children, prefixing error messages with path
func (_eaadb *CT_CalcPr) ValidateWithPath(path string) error {
	if _gabd := _eaadb.CalcModeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0063\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _gabd != nil {
		return _gabd
	}
	if _bcga := _eaadb.RefModeAttr.ValidateWithPath(path + "\u002f\u0052\u0065f\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _bcga != nil {
		return _bcga
	}
	return nil
}

// Validate validates the CT_Dimensions and its children
func (_fcage *CT_Dimensions) Validate() error {
	return _fcage.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073")
}
func (_fdgfb ST_DataValidationOperator) Validate() error { return _fdgfb.ValidateWithPath("") }

// ValidateWithPath validates the CT_PhoneticRun and its children, prefixing error messages with path
func (_afdcb *CT_PhoneticRun) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_ServerFormats and its children, prefixing error messages with path
func (_deeed *CT_ServerFormats) ValidateWithPath(path string) error {
	for _gfdee, _gaacf := range _deeed.ServerFormat {
		if _ecefc := _gaacf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053er\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _gfdee)); _ecefc != nil {
			return _ecefc
		}
	}
	return nil
}
func (_cddd *CT_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdedd:
	for {
		_ccedd, _aafbc := d.Token()
		if _aafbc != nil {
			return _aafbc
		}
		switch _afcdc := _ccedd.(type) {
		case _b.StartElement:
			switch _afcdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_gafb := NewCT_Extension()
				if _eagff := d.DecodeElement(_gafb, &_afcdc); _eagff != nil {
					return _eagff
				}
				_cddd.Ext = append(_cddd.Ext, _gafb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _afcdc.Name)
				if _efgcb := d.Skip(); _efgcb != nil {
					return _efgcb
				}
			}
		case _b.EndElement:
			break _cdedd
		case _b.CharData:
		}
	}
	return nil
}
func (_gbdba ST_ConditionalFormattingOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbdba.String(), start)
}
func (_befdf *CT_UnderlineProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _befdf.ValAttr != ST_UnderlineValuesUnset {
		_bdbc, _aaaebf := _befdf.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
		if _aaaebf != nil {
			return _aaaebf
		}
		start.Attr = append(start.Attr, _bdbc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_PCDKPI() *CT_PCDKPI { _dgbb := &CT_PCDKPI{}; return _dgbb }

type CT_ControlPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Recalculation Flag
	RecalcAlwaysAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Linked Formula
	LinkedCellAttr *string

	// List Items Source Range
	ListFillRangeAttr *string

	// Image Format
	CfAttr *string
	IdAttr *string

	// Object Cell Anchor
	Anchor *CT_ObjectAnchor
}

func (_gacfaa ST_TotalsRowFunction) ValidateWithPath(path string) error {
	switch _gacfaa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gacfaa))
	}
	return nil
}

// Validate validates the CT_Drawing and its children
func (_ccede *CT_Drawing) Validate() error {
	return _ccede.ValidateWithPath("\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067")
}
func (_afeff ST_SortMethod) ValidateWithPath(path string) error {
	switch _afeff {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afeff))
	}
	return nil
}
func (_eaffg *ST_SortBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eaffg = 0
	case "\u0076\u0061\u006cu\u0065":
		*_eaffg = 1
	case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
		*_eaffg = 2
	case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
		*_eaffg = 3
	case "\u0069\u0063\u006f\u006e":
		*_eaffg = 4
	}
	return nil
}

// Validate validates the CT_DbPr and its children
func (_fdaff *CT_DbPr) Validate() error {
	return _fdaff.ValidateWithPath("\u0043T\u005f\u0044\u0062\u0050\u0072")
}
func (_afed *CT_CustomWorkbookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_febb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _bcfa := range _afed.CustomWorkbookView {
		e.EncodeElement(_bcfa, _febb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MetadataBlocks() *CT_MetadataBlocks { _fecec := &CT_MetadataBlocks{}; return _fecec }

// ValidateWithPath validates the CT_TextPr and its children, prefixing error messages with path
func (_fdgdf *CT_TextPr) ValidateWithPath(path string) error {
	if _ebggc := _fdgdf.FileTypeAttr.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ebggc != nil {
		return _ebggc
	}
	if _bfdddg := _fdgdf.QualifierAttr.ValidateWithPath(path + "\u002f\u0051\u0075\u0061\u006c\u0069\u0066\u0069\u0065r\u0041\u0074\u0074\u0072"); _bfdddg != nil {
		return _bfdddg
	}
	if _fdgdf.TextFields != nil {
		if _ebagb := _fdgdf.TextFields.ValidateWithPath(path + "/\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _ebagb != nil {
			return _ebagb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilters and its children, prefixing error messages with path
func (_fdec *CT_CustomFilters) ValidateWithPath(path string) error {
	for _geabf, _ccaf := range _fdec.CustomFilter {
		if _cbefb := _ccaf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _geabf)); _cbefb != nil {
			return _cbefb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCacheRecords and its children, prefixing error messages with path
func (_ccagd *CT_PivotCacheRecords) ValidateWithPath(path string) error {
	for _bdadd, _deccb := range _ccagd.R {
		if _dagda := _deccb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _bdadd)); _dagda != nil {
			return _dagda
		}
	}
	if _ccagd.ExtLst != nil {
		if _bcae := _ccagd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcae != nil {
			return _bcae
		}
	}
	return nil
}

// Validate validates the Table and its children
func (_dcabfg *Table) Validate() error { return _dcabfg.ValidateWithPath("\u0054\u0061\u0062l\u0065") }
func (_gdagg ST_DynamicFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdagg.String(), start)
}
func (_cdafc *CT_FileSharing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdafc.ReadOnlyRecommendedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061\u0064On\u006c\u0079\u0052\u0065\u0063\u006f\u006d\u006d\u0065\u006e\u0064\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cdafc.ReadOnlyRecommendedAttr))})
	}
	if _cdafc.UserNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.UserNameAttr)})
	}
	if _cdafc.ReservationPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0073\u0065rv\u0061\u0074\u0069\u006f\u006e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.ReservationPasswordAttr)})
	}
	if _cdafc.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.AlgorithmNameAttr)})
	}
	if _cdafc.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.HashValueAttr)})
	}
	if _cdafc.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.SaltValueAttr)})
	}
	if _cdafc.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _a.Sprintf("\u0025\u0076", *_cdafc.SpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Revisions and its children
func (_ccfccd *CT_Revisions) Validate() error {
	return _ccfccd.ValidateWithPath("\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073")
}
func (_bebdad *CT_Number) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faafg := range start.Attr {
		if _faafg.Name.Local == "\u0066\u0063" {
			_eabeeb, _gaef := _faafg.Value, error(nil)
			if _gaef != nil {
				return _gaef
			}
			_bebdad.FcAttr = &_eabeeb
			continue
		}
		if _faafg.Name.Local == "\u0076" {
			_adfdd, _eeeea := _g.ParseFloat(_faafg.Value, 64)
			if _eeeea != nil {
				return _eeeea
			}
			_bebdad.VAttr = _adfdd
			continue
		}
		if _faafg.Name.Local == "\u0066" {
			_gaad, _gbdbe := _g.ParseBool(_faafg.Value)
			if _gbdbe != nil {
				return _gbdbe
			}
			_bebdad.FAttr = &_gaad
			continue
		}
		if _faafg.Name.Local == "\u0063" {
			_afbd, _faebb := _faafg.Value, error(nil)
			if _faebb != nil {
				return _faebb
			}
			_bebdad.CAttr = &_afbd
			continue
		}
		if _faafg.Name.Local == "\u0063\u0070" {
			_faebg, _dgcfb := _g.ParseUint(_faafg.Value, 10, 32)
			if _dgcfb != nil {
				return _dgcfb
			}
			_bbcgc := uint32(_faebg)
			_bebdad.CpAttr = &_bbcgc
			continue
		}
		if _faafg.Name.Local == "\u0069\u006e" {
			_bfeda, _gabfaf := _g.ParseUint(_faafg.Value, 10, 32)
			if _gabfaf != nil {
				return _gabfaf
			}
			_deeec := uint32(_bfeda)
			_bebdad.InAttr = &_deeec
			continue
		}
		if _faafg.Name.Local == "\u0062\u0063" {
			_gaebb, _agfag := _faafg.Value, error(nil)
			if _agfag != nil {
				return _agfag
			}
			_bebdad.BcAttr = &_gaebb
			continue
		}
		if _faafg.Name.Local == "\u0075" {
			_acdba, _fecc := _g.ParseBool(_faafg.Value)
			if _fecc != nil {
				return _fecc
			}
			_bebdad.UAttr = &_acdba
			continue
		}
		if _faafg.Name.Local == "\u0069" {
			_bbadg, _adfee := _g.ParseBool(_faafg.Value)
			if _adfee != nil {
				return _adfee
			}
			_bebdad.IAttr = &_bbadg
			continue
		}
		if _faafg.Name.Local == "\u0075\u006e" {
			_deega, _babf := _g.ParseBool(_faafg.Value)
			if _babf != nil {
				return _babf
			}
			_bebdad.UnAttr = &_deega
			continue
		}
		if _faafg.Name.Local == "\u0073\u0074" {
			_baggb, _ddacb := _g.ParseBool(_faafg.Value)
			if _ddacb != nil {
				return _ddacb
			}
			_bebdad.StAttr = &_baggb
			continue
		}
		if _faafg.Name.Local == "\u0062" {
			_fdba, _adggg := _g.ParseBool(_faafg.Value)
			if _adggg != nil {
				return _adggg
			}
			_bebdad.BAttr = &_fdba
			continue
		}
	}
_dfdfcg:
	for {
		_faffb, _accfb := d.Token()
		if _accfb != nil {
			return _accfb
		}
		switch _gbagf := _faffb.(type) {
		case _b.StartElement:
			switch _gbagf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_dbeef := NewCT_Tuples()
				if _ffbdd := d.DecodeElement(_dbeef, &_gbagf); _ffbdd != nil {
					return _ffbdd
				}
				_bebdad.Tpls = append(_bebdad.Tpls, _dbeef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_fffag := NewCT_X()
				if _bbcgad := d.DecodeElement(_fffag, &_gbagf); _bbcgad != nil {
					return _bbcgad
				}
				_bebdad.X = append(_bebdad.X, _fffag)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004e\u0075\u006db\u0065\u0072 \u0025\u0076", _gbagf.Name)
				if _adfbf := d.Skip(); _adfbf != nil {
					return _adfbf
				}
			}
		case _b.EndElement:
			break _dfdfcg
		case _b.CharData:
		}
	}
	return nil
}
func (_abbd *CT_CalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abbd.CalcIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_abbd.CalcIdAttr)})
	}
	if _abbd.CalcModeAttr != ST_CalcModeUnset {
		_cagf, _beea := _abbd.CalcModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065"})
		if _beea != nil {
			return _beea
		}
		start.Attr = append(start.Attr, _cagf)
	}
	if _abbd.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.FullCalcOnLoadAttr))})
	}
	if _abbd.RefModeAttr != ST_RefModeUnset {
		_dcaa, _daea := _abbd.RefModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0072e\u0066\u004d\u006f\u0064\u0065"})
		if _daea != nil {
			return _daea
		}
		start.Attr = append(start.Attr, _dcaa)
	}
	if _abbd.IterateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065\u0072\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.IterateAttr))})
	}
	if _abbd.IterateCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_abbd.IterateCountAttr)})
	}
	if _abbd.IterateDeltaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0076", *_abbd.IterateDeltaAttr)})
	}
	if _abbd.FullPrecisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.FullPrecisionAttr))})
	}
	if _abbd.CalcCompletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.CalcCompletedAttr))})
	}
	if _abbd.CalcOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.CalcOnSaveAttr))})
	}
	if _abbd.ConcurrentCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.ConcurrentCalcAttr))})
	}
	if _abbd.ConcurrentManualCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_abbd.ConcurrentManualCountAttr)})
	}
	if _abbd.ForceFullCalcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abbd.ForceFullCalcAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dccge ST_CalcMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dccge.String(), start)
}

// ValidateWithPath validates the CT_ColFields and its children, prefixing error messages with path
func (_geda *CT_ColFields) ValidateWithPath(path string) error {
	for _fagd, _eceb := range _geda.Field {
		if _aegf := _eceb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _fagd)); _aegf != nil {
			return _aegf
		}
	}
	return nil
}

// Validate validates the CT_ConditionalFormat and its children
func (_badc *CT_ConditionalFormat) Validate() error {
	return _badc.ValidateWithPath("C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074")
}

// ValidateWithPath validates the CT_OleLink and its children, prefixing error messages with path
func (_ddcbe *CT_OleLink) ValidateWithPath(path string) error {
	if _ddcbe.OleItems != nil {
		if _egbgfb := _ddcbe.OleItems.ValidateWithPath(path + "\u002fO\u006c\u0065\u0049\u0074\u0065\u006ds"); _egbgfb != nil {
			return _egbgfb
		}
	}
	return nil
}
func (_badecd ST_Objects) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgede := _b.Attr{}
	_bgede.Name = name
	switch _badecd {
	case ST_ObjectsUnset:
		_bgede.Value = ""
	case ST_ObjectsAll:
		_bgede.Value = "\u0061\u006c\u006c"
	case ST_ObjectsPlaceholders:
		_bgede.Value = "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case ST_ObjectsNone:
		_bgede.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bgede, nil
}
func (_efcd *CT_FunctionGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efcd.BuiltInGroupCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_efcd.BuiltInGroupCountAttr)})
	}
	e.EncodeToken(start)
	if _efcd.FunctionGroup != nil {
		_gccfff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0066\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}}
		for _, _daegb := range _efcd.FunctionGroup {
			e.EncodeElement(_daegb, _gccfff)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaebf ST_FilterOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gaebf.String(), start)
}
func (_bgfbcb ST_CellType) String() string {
	switch _bgfbcb {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	case 5:
		return "\u0073\u0074\u0072"
	case 6:
		return "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return ""
}
func (_dagff *CT_PageField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dagff.FldAttr)})
	if _dagff.ItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_dagff.ItemAttr)})
	}
	if _dagff.HierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_dagff.HierAttr)})
	}
	if _dagff.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_dagff.NameAttr)})
	}
	if _dagff.CapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_dagff.CapAttr)})
	}
	e.EncodeToken(start)
	if _dagff.ExtLst != nil {
		_gdbgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dagff.ExtLst, _gdbgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_pivotTableDefinition struct {

	// Name
	NameAttr string

	// PivotCache Definition Id
	CacheIdAttr uint32

	// Data On Rows
	DataOnRowsAttr *bool

	// Default Data Field Position
	DataPositionAttr *uint32

	// Data Field Header Name
	DataCaptionAttr string

	// Grand Totals Caption
	GrandTotalCaptionAttr *string

	// Error Caption
	ErrorCaptionAttr *string

	// Show Error
	ShowErrorAttr *bool

	// Caption for Missing Values
	MissingCaptionAttr *string

	// Show Missing
	ShowMissingAttr *bool

	// Page Header Style Name
	PageStyleAttr *string

	// Table Style Name
	PivotTableStyleAttr *string

	// Vacated Style
	VacatedStyleAttr *string

	// PivotTable Custom String
	TagAttr *string

	// PivotTable Last Updated Version
	UpdatedVersionAttr *uint8

	// Minimum Refreshable Version
	MinRefreshableVersionAttr *uint8

	// Asterisk Totals
	AsteriskTotalsAttr *bool

	// Show Item Names
	ShowItemsAttr *bool

	// Allow Edit Data
	EditDataAttr *bool

	// Disable Field List
	DisableFieldListAttr *bool

	// Show Calculated Members
	ShowCalcMbrsAttr *bool

	// Total Visual Data
	VisualTotalsAttr *bool

	// Show Multiple Labels
	ShowMultipleLabelAttr *bool

	// Show Drop Down
	ShowDataDropDownAttr *bool

	// Show Expand Collapse
	ShowDrillAttr *bool

	// Print Drill Indicators
	PrintDrillAttr *bool

	// Show Member Property ToolTips
	ShowMemberPropertyTipsAttr *bool

	// Show ToolTips on Data
	ShowDataTipsAttr *bool

	// Enable PivotTable Wizard
	EnableWizardAttr *bool

	// Enable Drill Down
	EnableDrillAttr *bool

	// Enable Field Properties
	EnableFieldPropertiesAttr *bool

	// Preserve Formatting
	PreserveFormattingAttr *bool

	// Auto Formatting
	UseAutoFormattingAttr *bool

	// Page Wrap
	PageWrapAttr *uint32

	// Page Over Then Down
	PageOverThenDownAttr *bool

	// Subtotal Hidden Items
	SubtotalHiddenItemsAttr *bool

	// Row Grand Totals
	RowGrandTotalsAttr *bool

	// Grand Totals On Columns
	ColGrandTotalsAttr *bool

	// Field Print Titles
	FieldPrintTitlesAttr *bool

	// Item Print Titles
	ItemPrintTitlesAttr *bool

	// Merge Titles
	MergeItemAttr *bool

	// Show Drop Zones
	ShowDropZonesAttr *bool

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// Indentation for Compact Axis
	IndentAttr *uint32

	// Show Empty Row
	ShowEmptyRowAttr *bool

	// Show Empty Column
	ShowEmptyColAttr *bool

	// Show Field Headers
	ShowHeadersAttr *bool

	// Compact New Fields
	CompactAttr *bool

	// Outline New Fields
	OutlineAttr *bool

	// Outline Data Fields
	OutlineDataAttr *bool

	// Compact Data
	CompactDataAttr *bool

	// Data Fields Published
	PublishedAttr *bool

	// Enable Drop Zones
	GridDropZonesAttr *bool

	// Stop Immersive UI
	ImmersiveAttr *bool

	// Multiple Field Filters
	MultipleFieldFiltersAttr *bool

	// Chart Format Id
	ChartFormatAttr *uint32

	// Row Header Caption
	RowHeaderCaptionAttr *string

	// Column Header Caption
	ColHeaderCaptionAttr *string

	// Default Sort Order
	FieldListSortAscendingAttr *bool

	// MDX Subqueries Supported
	MdxSubqueriesAttr *bool

	// Custom List AutoSort
	CustomListSortAttr *bool

	// PivotTable Location
	Location *CT_Location

	// PivotTable Fields
	PivotFields *CT_PivotFields

	// Row Fields
	RowFields *CT_RowFields

	// Row Items
	RowItems *CT_rowItems

	// Column Fields
	ColFields *CT_ColFields

	// Column Items
	ColItems *CT_colItems

	// Page Field Items
	PageFields *CT_PageFields

	// Data Fields
	DataFields *CT_DataFields

	// PivotTable Formats
	Formats *CT_Formats

	// Conditional Formats
	ConditionalFormats *CT_ConditionalFormats

	// PivotChart Formats
	ChartFormats *CT_ChartFormats

	// PivotTable OLAP Hierarchies
	PivotHierarchies *CT_PivotHierarchies

	// PivotTable Style
	PivotTableStyleInfo *CT_PivotTableStyle

	// Filters
	Filters *CT_PivotFilters

	// Row OLAP Hierarchy References
	RowHierarchiesUsage *CT_RowHierarchiesUsage

	// Column OLAP Hierarchy References
	ColHierarchiesUsage *CT_ColHierarchiesUsage

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}
type CT_Boolean struct {

	// Value
	VAttr bool

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Indexes
	X []*CT_X
}

// Validate validates the CT_PageSetup and its children
func (_fefge *CT_PageSetup) Validate() error {
	return _fefge.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070")
}

type CT_FileSharing struct {

	// Read Only Recommended
	ReadOnlyRecommendedAttr *bool

	// User Name
	UserNameAttr *string

	// Write Reservation Password
	ReservationPasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32
}
type CT_MeasureGroups struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	MeasureGroup []*CT_MeasureGroup
}

func (_fgcfb *CT_SingleXmlCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgcfb.XmlCellPr = NewCT_XmlCellPr()
	for _, _baedce := range start.Attr {
		if _baedce.Name.Local == "\u0069\u0064" {
			_gecdg, _dfeda := _g.ParseUint(_baedce.Value, 10, 32)
			if _dfeda != nil {
				return _dfeda
			}
			_fgcfb.IdAttr = uint32(_gecdg)
			continue
		}
		if _baedce.Name.Local == "\u0072" {
			_ecefcf, _fegfg := _baedce.Value, error(nil)
			if _fegfg != nil {
				return _fegfg
			}
			_fgcfb.RAttr = _ecefcf
			continue
		}
		if _baedce.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_cbbge, _edadg := _g.ParseUint(_baedce.Value, 10, 32)
			if _edadg != nil {
				return _edadg
			}
			_fgcfb.ConnectionIdAttr = uint32(_cbbge)
			continue
		}
	}
_debcae:
	for {
		_cbebg, _ecdcb := d.Token()
		if _ecdcb != nil {
			return _ecdcb
		}
		switch _edcfd := _cbebg.(type) {
		case _b.StartElement:
			switch _edcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078m\u006c\u0043\u0065\u006c\u006c\u0050r"}:
				if _gecfe := d.DecodeElement(_fgcfb.XmlCellPr, &_edcfd); _gecfe != nil {
					return _gecfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgcfb.ExtLst = NewCT_ExtensionList()
				if _cebdb := d.DecodeElement(_fgcfb.ExtLst, &_edcfd); _cebdb != nil {
					return _cebdb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0020\u0025v", _edcfd.Name)
				if _dgcbgf := d.Skip(); _dgcbgf != nil {
					return _dgcbgf
				}
			}
		case _b.EndElement:
			break _debcae
		case _b.CharData:
		}
	}
	return nil
}

type CT_VolType struct {

	// Type
	TypeAttr ST_VolDepType

	// Main
	Main []*CT_VolMain
}

func (_cabba *Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cabba.CT_Workbook = *NewCT_Workbook()
	for _, _beafde := range start.Attr {
		if _beafde.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_cabba.ConformanceAttr.UnmarshalXMLAttr(_beafde)
			continue
		}
	}
_bcbbgb:
	for {
		_cabdd, _efagc := d.Token()
		if _efagc != nil {
			return _efagc
		}
		switch _gbcfef := _cabdd.(type) {
		case _b.StartElement:
			switch _gbcfef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_cabba.FileVersion = NewCT_FileVersion()
				if _ebea := d.DecodeElement(_cabba.FileVersion, &_gbcfef); _ebea != nil {
					return _ebea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_cabba.FileSharing = NewCT_FileSharing()
				if _gadaa := d.DecodeElement(_cabba.FileSharing, &_gbcfef); _gadaa != nil {
					return _gadaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_cabba.WorkbookPr = NewCT_WorkbookPr()
				if _bccadd := d.DecodeElement(_cabba.WorkbookPr, &_gbcfef); _bccadd != nil {
					return _bccadd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_cabba.WorkbookProtection = NewCT_WorkbookProtection()
				if _ecabfab := d.DecodeElement(_cabba.WorkbookProtection, &_gbcfef); _ecabfab != nil {
					return _ecabfab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_cabba.BookViews = NewCT_BookViews()
				if _acfcfd := d.DecodeElement(_cabba.BookViews, &_gbcfef); _acfcfd != nil {
					return _acfcfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _febcc := d.DecodeElement(_cabba.Sheets, &_gbcfef); _febcc != nil {
					return _febcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_cabba.FunctionGroups = NewCT_FunctionGroups()
				if _cafgf := d.DecodeElement(_cabba.FunctionGroups, &_gbcfef); _cafgf != nil {
					return _cafgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_cabba.ExternalReferences = NewCT_ExternalReferences()
				if _ccggfd := d.DecodeElement(_cabba.ExternalReferences, &_gbcfef); _ccggfd != nil {
					return _ccggfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_cabba.DefinedNames = NewCT_DefinedNames()
				if _ccbce := d.DecodeElement(_cabba.DefinedNames, &_gbcfef); _ccbce != nil {
					return _ccbce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_cabba.CalcPr = NewCT_CalcPr()
				if _dbdcd := d.DecodeElement(_cabba.CalcPr, &_gbcfef); _dbdcd != nil {
					return _dbdcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_cabba.OleSize = NewCT_OleSize()
				if _ccdeab := d.DecodeElement(_cabba.OleSize, &_gbcfef); _ccdeab != nil {
					return _ccdeab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_cabba.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _addfc := d.DecodeElement(_cabba.CustomWorkbookViews, &_gbcfef); _addfc != nil {
					return _addfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_cabba.PivotCaches = NewCT_PivotCaches()
				if _gbcgc := d.DecodeElement(_cabba.PivotCaches, &_gbcfef); _gbcgc != nil {
					return _gbcgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_cabba.SmartTagPr = NewCT_SmartTagPr()
				if _dcafab := d.DecodeElement(_cabba.SmartTagPr, &_gbcfef); _dcafab != nil {
					return _dcafab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_cabba.SmartTagTypes = NewCT_SmartTagTypes()
				if _efbeb := d.DecodeElement(_cabba.SmartTagTypes, &_gbcfef); _efbeb != nil {
					return _efbeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_cabba.WebPublishing = NewCT_WebPublishing()
				if _fbgfgb := d.DecodeElement(_cabba.WebPublishing, &_gbcfef); _fbgfgb != nil {
					return _fbgfgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_dgcfa := NewCT_FileRecoveryPr()
				if _cabdcd := d.DecodeElement(_dgcfa, &_gbcfef); _cabdcd != nil {
					return _cabdcd
				}
				_cabba.FileRecoveryPr = append(_cabba.FileRecoveryPr, _dgcfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_cabba.WebPublishObjects = NewCT_WebPublishObjects()
				if _bgbfc := d.DecodeElement(_cabba.WebPublishObjects, &_gbcfef); _bgbfc != nil {
					return _bgbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cabba.ExtLst = NewCT_ExtensionList()
				if _geaabg := d.DecodeElement(_cabba.ExtLst, &_gbcfef); _geaabg != nil {
					return _geaabg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _gbcfef.Name)
				if _fcbfea := d.Skip(); _fcbfea != nil {
					return _fcbfea
				}
			}
		case _b.EndElement:
			break _bcbbgb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Row and its children
func (_faebga *CT_Row) Validate() error {
	return _faebga.ValidateWithPath("\u0043\u0054\u005f\u0052\u006f\u0077")
}
func (_accf *CT_Connection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _accf.IdAttr)})
	if _accf.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_accf.SourceFileAttr)})
	}
	if _accf.OdcFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fd\u0063\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_accf.OdcFileAttr)})
	}
	if _accf.KeepAliveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.KeepAliveAttr))})
	}
	if _accf.IntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_accf.IntervalAttr)})
	}
	if _accf.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_accf.NameAttr)})
	}
	if _accf.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_accf.DescriptionAttr)})
	}
	if _accf.TypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_accf.TypeAttr)})
	}
	if _accf.ReconnectionMethodAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_accf.ReconnectionMethodAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _accf.RefreshedVersionAttr)})
	if _accf.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_accf.MinRefreshableVersionAttr)})
	}
	if _accf.SavePasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.SavePasswordAttr))})
	}
	if _accf.NewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.NewAttr))})
	}
	if _accf.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.DeletedAttr))})
	}
	if _accf.OnlyUseConnectionFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.OnlyUseConnectionFileAttr))})
	}
	if _accf.BackgroundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.BackgroundAttr))})
	}
	if _accf.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.RefreshOnLoadAttr))})
	}
	if _accf.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_accf.SaveDataAttr))})
	}
	if _accf.CredentialsAttr != ST_CredMethodUnset {
		_dcgd, _dfffc := _accf.CredentialsAttr.MarshalXMLAttr(_b.Name{Local: "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073"})
		if _dfffc != nil {
			return _dfffc
		}
		start.Attr = append(start.Attr, _dcgd)
	}
	if _accf.SingleSignOnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_accf.SingleSignOnIdAttr)})
	}
	e.EncodeToken(start)
	if _accf.DbPr != nil {
		_bbcb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0062\u0050\u0072"}}
		e.EncodeElement(_accf.DbPr, _bbcb)
	}
	if _accf.OlapPr != nil {
		_gdca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u006c\u0061\u0070\u0050r"}}
		e.EncodeElement(_accf.OlapPr, _gdca)
	}
	if _accf.WebPr != nil {
		_fefd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0072"}}
		e.EncodeElement(_accf.WebPr, _fefd)
	}
	if _accf.TextPr != nil {
		_fbddb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074\u0050r"}}
		e.EncodeElement(_accf.TextPr, _fbddb)
	}
	if _accf.Parameters != nil {
		_cbfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_accf.Parameters, _cbfc)
	}
	if _accf.ExtLst != nil {
		_gefcf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_accf.ExtLst, _gefcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfeg *CT_CellFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfeg.TAttr != ST_CellFormulaTypeUnset {
		_gccd, _dagd := _gfeg.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _dagd != nil {
			return _dagd
		}
		start.Attr = append(start.Attr, _gccd)
	}
	if _gfeg.AcaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.AcaAttr))})
	}
	if _gfeg.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_gfeg.RefAttr)})
	}
	if _gfeg.Dt2DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0032\u0044"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.Dt2DAttr))})
	}
	if _gfeg.DtrAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0074\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.DtrAttr))})
	}
	if _gfeg.Del1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0031"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.Del1Attr))})
	}
	if _gfeg.Del2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0032"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.Del2Attr))})
	}
	if _gfeg.R1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0031"}, Value: _a.Sprintf("\u0025\u0076", *_gfeg.R1Attr)})
	}
	if _gfeg.R2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0032"}, Value: _a.Sprintf("\u0025\u0076", *_gfeg.R2Attr)})
	}
	if _gfeg.CaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.CaAttr))})
	}
	if _gfeg.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_gfeg.SiAttr)})
	}
	if _gfeg.BxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0078"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfeg.BxAttr))})
	}
	e.EncodeElement(_gfeg.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgcae *CT_VolTopic) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgcae.TAttr != ST_VolValueTypeUnset {
		_gfeeg, _gedeg := _cgcae.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _gedeg != nil {
			return _gedeg
		}
		start.Attr = append(start.Attr, _gfeeg)
	}
	e.EncodeToken(start)
	_gbbedd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
	_f.AddPreserveSpaceAttr(&_gbbedd, _cgcae.V)
	e.EncodeElement(_cgcae.V, _gbbedd)
	if _cgcae.Stp != nil {
		_efgbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0070"}}
		for _, _eagfea := range _cgcae.Stp {
			e.EncodeElement(_eagfea, _efgbd)
		}
	}
	_bbfbg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0072"}}
	for _, _cgdff := range _cgcae.Tr {
		e.EncodeElement(_cgdff, _bbfbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecgd *CT_CustomSheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gecg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
	for _, _ffde := range _ecgd.CustomSheetView {
		e.EncodeElement(_ffde, _gecg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gegag *CT_Reviewed) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gegag.RIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfge *CT_DrawingHF) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcgbaf := range start.Attr {
		if _fcgbaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fcgbaf.Name.Local == "\u0069\u0064" || _fcgbaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fcgbaf.Name.Local == "\u0069\u0064" {
			_eecag, _bfccb := _fcgbaf.Value, error(nil)
			if _bfccb != nil {
				return _bfccb
			}
			_cfge.IdAttr = _eecag
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0068\u0066" {
			_begcg, _gbdge := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _gbdge != nil {
				return _gbdge
			}
			_cgfg := uint32(_begcg)
			_cfge.RhfAttr = &_cgfg
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0066\u006f" {
			_gdbfc, _dgddd := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _dgddd != nil {
				return _dgddd
			}
			_agdbg := uint32(_gdbfc)
			_cfge.LfoAttr = &_agdbg
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0066\u0065" {
			_fbeec, _aaff := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _aaff != nil {
				return _aaff
			}
			_bdbab := uint32(_fbeec)
			_cfge.LfeAttr = &_bdbab
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0068\u0066" {
			_aeea, _fcggd := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fcggd != nil {
				return _fcggd
			}
			_agca := uint32(_aeea)
			_cfge.LhfAttr = &_agca
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0066\u0066" {
			_fcgcg, _cgdfd := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _cgdfd != nil {
				return _cgdfd
			}
			_deaea := uint32(_fcgcg)
			_cfge.LffAttr = &_deaea
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0068\u0065" {
			_edfedc, _dbag := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _dbag != nil {
				return _dbag
			}
			_cfed := uint32(_edfedc)
			_cfge.CheAttr = &_cfed
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0068\u006f" {
			_bafe, _eddef := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _eddef != nil {
				return _eddef
			}
			_gfebb := uint32(_bafe)
			_cfge.RhoAttr = &_gfebb
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0068\u0065" {
			_dacfa, _cedce := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _cedce != nil {
				return _cedce
			}
			_dgcda := uint32(_dacfa)
			_cfge.RheAttr = &_dgcda
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0068\u006f" {
			_edegf, _afaff := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _afaff != nil {
				return _afaff
			}
			_gcfab := uint32(_edegf)
			_cfge.LhoAttr = &_gcfab
			continue
		}
		if _fcgbaf.Name.Local == "\u006c\u0068\u0065" {
			_fddag, _dbaba := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _dbaba != nil {
				return _dbaba
			}
			_bgae := uint32(_fddag)
			_cfge.LheAttr = &_bgae
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0068\u006f" {
			_afcdg, _fedgb := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fedgb != nil {
				return _fedgb
			}
			_bffdf := uint32(_afcdg)
			_cfge.ChoAttr = &_bffdf
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0068\u0066" {
			_gddec, _fdecgd := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fdecgd != nil {
				return _fdecgd
			}
			_bfgdd := uint32(_gddec)
			_cfge.ChfAttr = &_bfgdd
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0066\u006f" {
			_fcdbe, _cbeca := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _cbeca != nil {
				return _cbeca
			}
			_fgfgac := uint32(_fcdbe)
			_cfge.CfoAttr = &_fgfgac
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0066\u0065" {
			_agdea, _gaeab := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _gaeab != nil {
				return _gaeab
			}
			_ebgdd := uint32(_agdea)
			_cfge.CfeAttr = &_ebgdd
			continue
		}
		if _fcgbaf.Name.Local == "\u0063\u0066\u0066" {
			_aggd, _fbcda := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fbcda != nil {
				return _fbcda
			}
			_cefec := uint32(_aggd)
			_cfge.CffAttr = &_cefec
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0066\u006f" {
			_ceace, _fefdg := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fefdg != nil {
				return _fefdg
			}
			_dfac := uint32(_ceace)
			_cfge.RfoAttr = &_dfac
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0066\u0065" {
			_dfbd, _eaga := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _eaga != nil {
				return _eaga
			}
			_effed := uint32(_dfbd)
			_cfge.RfeAttr = &_effed
			continue
		}
		if _fcgbaf.Name.Local == "\u0072\u0066\u0066" {
			_fbggc, _fffaa := _g.ParseUint(_fcgbaf.Value, 10, 32)
			if _fffaa != nil {
				return _fffaa
			}
			_fcfc := uint32(_fbggc)
			_cfge.RffAttr = &_fcfc
			continue
		}
	}
	for {
		_ddbb, _gdcg := d.Token()
		if _gdcg != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0072a\u0077\u0069\u006e\u0067\u0048\u0046\u003a\u0020\u0025\u0073", _gdcg)
		}
		if _bdae, _egce := _ddbb.(_b.EndElement); _egce && _bdae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdbaaa *Sst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdbaaa.CT_Sst = *NewCT_Sst()
	for _, _deadfa := range start.Attr {
		if _deadfa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_eacbabe, _cfdeg := _g.ParseUint(_deadfa.Value, 10, 32)
			if _cfdeg != nil {
				return _cfdeg
			}
			_dabdcf := uint32(_eacbabe)
			_bdbaaa.CountAttr = &_dabdcf
			continue
		}
		if _deadfa.Name.Local == "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074" {
			_ffdfde, _eeeefg := _g.ParseUint(_deadfa.Value, 10, 32)
			if _eeeefg != nil {
				return _eeeefg
			}
			_fdbfda := uint32(_ffdfde)
			_bdbaaa.UniqueCountAttr = &_fdbfda
			continue
		}
	}
_cbdfga:
	for {
		_ecfegc, _ffcdf := d.Token()
		if _ffcdf != nil {
			return _ffcdf
		}
		switch _gcgcbb := _ecfegc.(type) {
		case _b.StartElement:
			switch _gcgcbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069"}:
				_gffdeg := NewCT_Rst()
				if _befcfb := d.DecodeElement(_gffdeg, &_gcgcbb); _befcfb != nil {
					return _befcfb
				}
				_bdbaaa.Si = append(_bdbaaa.Si, _gffdeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdbaaa.ExtLst = NewCT_ExtensionList()
				if _efdbef := d.DecodeElement(_bdbaaa.ExtLst, &_gcgcbb); _efdbef != nil {
					return _efdbef
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0053s\u0074\u0020\u0025\u0076", _gcgcbb.Name)
				if _dbgegb := d.Skip(); _dbgegb != nil {
					return _dbgegb
				}
			}
		case _b.EndElement:
			break _cbdfga
		case _b.CharData:
		}
	}
	return nil
}
func (_fccfb ST_Objects) ValidateWithPath(path string) error {
	switch _fccfb {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fccfb))
	}
	return nil
}
func NewCT_colItems() *CT_colItems { _agbfge := &CT_colItems{}; return _agbfge }
func (_bfege *CT_DateGroupItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0065\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0076", _bfege.YearAttr)})
	if _bfege.MonthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u006et\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_bfege.MonthAttr)})
	}
	if _bfege.DayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_bfege.DayAttr)})
	}
	if _bfege.HourAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0075\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_bfege.HourAttr)})
	}
	if _bfege.MinuteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0075\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bfege.MinuteAttr)})
	}
	if _bfege.SecondAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0063\u006f\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_bfege.SecondAttr)})
	}
	_egccg, _eeege := _bfege.DateTimeGroupingAttr.MarshalXMLAttr(_b.Name{Local: "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067"})
	if _eeege != nil {
		return _eeege
	}
	start.Attr = append(start.Attr, _egccg)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gddgb *StyleSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gddgb.CT_Stylesheet = *NewCT_Stylesheet()
_aeaae:
	for {
		_adeab, _dggbb := d.Token()
		if _dggbb != nil {
			return _dggbb
		}
		switch _caaceg := _adeab.(type) {
		case _b.StartElement:
			switch _caaceg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_gddgb.NumFmts = NewCT_NumFmts()
				if _cfegad := d.DecodeElement(_gddgb.NumFmts, &_caaceg); _cfegad != nil {
					return _cfegad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_gddgb.Fonts = NewCT_Fonts()
				if _begfdga := d.DecodeElement(_gddgb.Fonts, &_caaceg); _begfdga != nil {
					return _begfdga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_gddgb.Fills = NewCT_Fills()
				if _bbbeg := d.DecodeElement(_gddgb.Fills, &_caaceg); _bbbeg != nil {
					return _bbbeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_gddgb.Borders = NewCT_Borders()
				if _dbacf := d.DecodeElement(_gddgb.Borders, &_caaceg); _dbacf != nil {
					return _dbacf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_gddgb.CellStyleXfs = NewCT_CellStyleXfs()
				if _bfega := d.DecodeElement(_gddgb.CellStyleXfs, &_caaceg); _bfega != nil {
					return _bfega
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_gddgb.CellXfs = NewCT_CellXfs()
				if _gdgbfa := d.DecodeElement(_gddgb.CellXfs, &_caaceg); _gdgbfa != nil {
					return _gdgbfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gddgb.CellStyles = NewCT_CellStyles()
				if _gdggeb := d.DecodeElement(_gddgb.CellStyles, &_caaceg); _gdggeb != nil {
					return _gdggeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_gddgb.Dxfs = NewCT_Dxfs()
				if _cagfd := d.DecodeElement(_gddgb.Dxfs, &_caaceg); _cagfd != nil {
					return _cagfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gddgb.TableStyles = NewCT_TableStyles()
				if _feeea := d.DecodeElement(_gddgb.TableStyles, &_caaceg); _feeea != nil {
					return _feeea
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_gddgb.Colors = NewCT_Colors()
				if _afebf := d.DecodeElement(_gddgb.Colors, &_caaceg); _afebf != nil {
					return _afebf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gddgb.ExtLst = NewCT_ExtensionList()
				if _aecgd := d.DecodeElement(_gddgb.ExtLst, &_caaceg); _aecgd != nil {
					return _aecgd
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0053\u0074\u0079l\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _caaceg.Name)
				if _ddacc := d.Skip(); _ddacc != nil {
					return _ddacc
				}
			}
		case _b.EndElement:
			break _aeaae
		case _b.CharData:
		}
	}
	return nil
}
func (_ffceb *ST_DataValidationOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfeefc, _dafca := d.Token()
	if _dafca != nil {
		return _dafca
	}
	if _babega, _fafefc := _dfeefc.(_b.EndElement); _fafefc && _babega.Name == start.Name {
		*_ffceb = 1
		return nil
	}
	if _bfbeaa, _adbcgf := _dfeefc.(_b.CharData); !_adbcgf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfeefc)
	} else {
		switch string(_bfbeaa) {
		case "":
			*_ffceb = 0
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_ffceb = 1
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_ffceb = 2
		case "\u0065\u0071\u0075a\u006c":
			*_ffceb = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_ffceb = 4
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_ffceb = 5
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_ffceb = 6
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_ffceb = 7
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_ffceb = 8
		}
	}
	_dfeefc, _dafca = d.Token()
	if _dafca != nil {
		return _dafca
	}
	if _dadfc, _bcdbdf := _dfeefc.(_b.EndElement); _bcdbdf && _dadfc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfeefc)
}

type CT_I struct {

	// Item Type
	TAttr ST_ItemType

	// Repeated Items Count
	RAttr *uint32

	// Data Field Index
	IAttr *uint32

	// Row / Column Item Index
	X []*CT_X
}

func (_agbg *CT_ExternalSheetDataSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aagdf:
	for {
		_cgab, _gfaf := d.Token()
		if _gfaf != nil {
			return _gfaf
		}
		switch _ecce := _cgab.(type) {
		case _b.StartElement:
			switch _ecce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				_dceeb := NewCT_ExternalSheetData()
				if _feacf := d.DecodeElement(_dceeb, &_ecce); _feacf != nil {
					return _feacf
				}
				_agbg.SheetData = append(_agbg.SheetData, _dceeb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053h\u0065\u0065\u0074\u0044\u0061\u0074a\u0053\u0065\u0074 \u0025\u0076", _ecce.Name)
				if _aeeda := d.Skip(); _aeeda != nil {
					return _aeeda
				}
			}
		case _b.EndElement:
			break _aagdf
		case _b.CharData:
		}
	}
	return nil
}

type CT_PivotFilter struct {

	// Field Index
	FldAttr uint32

	// Member Property Field Id
	MpFldAttr *uint32

	// Pivot Filter Type
	TypeAttr ST_PivotFilterType

	// Evaluation Order
	EvalOrderAttr *int32

	// Pivot Filter Id
	IdAttr uint32

	// Measure Index
	IMeasureHierAttr *uint32

	// Measure Field Index
	IMeasureFldAttr *uint32

	// Pivot Filter Name
	NameAttr *string

	// Pivot Filter Description
	DescriptionAttr *string

	// Label Pivot
	StringValue1Attr *string

	// Label Pivot Filter String Value 2
	StringValue2Attr *string

	// Auto Filter
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func (_gebbf *CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ac\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e"
	return _gebbf.CT_CalcChain.MarshalXML(e, start)
}
func (_cfcdb *ST_ShowDataAs) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfcdb = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_cfcdb = 1
	case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
		*_cfcdb = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_cfcdb = 3
	case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
		*_cfcdb = 4
	case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
		*_cfcdb = 5
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
		*_cfcdb = 6
	case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
		*_cfcdb = 7
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
		*_cfcdb = 8
	case "\u0069\u006e\u0064e\u0078":
		*_cfcdb = 9
	}
	return nil
}

// ValidateWithPath validates the CT_BookViews and its children, prefixing error messages with path
func (_gfc *CT_BookViews) ValidateWithPath(path string) error {
	for _eacd, _dac := range _gfc.WorkbookView {
		if _dgd := _dac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0057or\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _eacd)); _dgd != nil {
			return _dgd
		}
	}
	return nil
}
func (_efafac ST_SmartTagShow) Validate() error { return _efafac.ValidateWithPath("") }

const (
	ST_VerticalAlignmentUnset       ST_VerticalAlignment = 0
	ST_VerticalAlignmentTop         ST_VerticalAlignment = 1
	ST_VerticalAlignmentCenter      ST_VerticalAlignment = 2
	ST_VerticalAlignmentBottom      ST_VerticalAlignment = 3
	ST_VerticalAlignmentJustify     ST_VerticalAlignment = 4
	ST_VerticalAlignmentDistributed ST_VerticalAlignment = 5
)

func (_febec ST_TotalsRowFunction) String() string {
	switch _febec {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0075\u006d"
	case 3:
		return "\u006d\u0069\u006e"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 6:
		return "\u0063\u006f\u0075n\u0074"
	case 7:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 8:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 9:
		return "\u0076\u0061\u0072"
	case 10:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}
func NewCT_WebPublishObjects() *CT_WebPublishObjects {
	_ecfgabg := &CT_WebPublishObjects{}
	return _ecfgabg
}
func NewCT_CellXfs() *CT_CellXfs { _dfae := &CT_CellXfs{}; return _dfae }

type ST_CredMethod byte

// Validate validates the CT_FilterColumn and its children
func (_dcbaa *CT_FilterColumn) Validate() error {
	return _dcbaa.ValidateWithPath("\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e")
}

// Validate validates the CT_TableStyleInfo and its children
func (_ebcdc *CT_TableStyleInfo) Validate() error {
	return _ebcdc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f")
}
func (_dgaf *CT_ExternalReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_caeef:
	for {
		_egbbg, _ddadb := d.Token()
		if _ddadb != nil {
			return _ddadb
		}
		switch _aebff := _egbbg.(type) {
		case _b.StartElement:
			switch _aebff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065r\u0065\u006e\u0063\u0065"}:
				_abgbda := NewCT_ExternalReference()
				if _ggdff := d.DecodeElement(_abgbda, &_aebff); _ggdff != nil {
					return _ggdff
				}
				_dgaf.ExternalReference = append(_dgaf.ExternalReference, _abgbda)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _aebff.Name)
				if _gfaef := d.Skip(); _gfaef != nil {
					return _gfaef
				}
			}
		case _b.EndElement:
			break _caeef
		case _b.CharData:
		}
	}
	return nil
}
func (_dcf *CT_CacheSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_afc, _aacff := _dcf.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _aacff != nil {
		return _aacff
	}
	start.Attr = append(start.Attr, _afc)
	if _dcf.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dcf.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _dcf.WorksheetSource != nil {
		_ffea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065"}}
		e.EncodeElement(_dcf.WorksheetSource, _ffea)
	}
	if _dcf.Consolidation != nil {
		_dgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_dcf.Consolidation, _dgdg)
	}
	if _dcf.ExtLst != nil {
		_aefbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcf.ExtLst, _aefbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deacc *CT_PageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _deacc.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.PaperSizeAttr)})
	}
	if _deacc.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.PaperHeightAttr)})
	}
	if _deacc.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.PaperWidthAttr)})
	}
	if _deacc.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.ScaleAttr)})
	}
	if _deacc.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.FirstPageNumberAttr)})
	}
	if _deacc.FitToWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.FitToWidthAttr)})
	}
	if _deacc.FitToHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.FitToHeightAttr)})
	}
	if _deacc.PageOrderAttr != ST_PageOrderUnset {
		_cgfggf, _aebfb := _deacc.PageOrderAttr.MarshalXMLAttr(_b.Name{Local: "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r"})
		if _aebfb != nil {
			return _aebfb
		}
		start.Attr = append(start.Attr, _cgfggf)
	}
	if _deacc.OrientationAttr != ST_OrientationUnset {
		_gecada, _dfafg := _deacc.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _dfafg != nil {
			return _dfafg
		}
		start.Attr = append(start.Attr, _gecada)
	}
	if _deacc.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deacc.UsePrinterDefaultsAttr))})
	}
	if _deacc.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deacc.BlackAndWhiteAttr))})
	}
	if _deacc.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deacc.DraftAttr))})
	}
	if _deacc.CellCommentsAttr != ST_CellCommentsUnset {
		_dfggd, _bacbg := _deacc.CellCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _bacbg != nil {
			return _bacbg
		}
		start.Attr = append(start.Attr, _dfggd)
	}
	if _deacc.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deacc.UseFirstPageNumberAttr))})
	}
	if _deacc.ErrorsAttr != ST_PrintErrorUnset {
		_ceddeb, _edgf := _deacc.ErrorsAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0073"})
		if _edgf != nil {
			return _edgf
		}
		start.Attr = append(start.Attr, _ceddeb)
	}
	if _deacc.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.HorizontalDpiAttr)})
	}
	if _deacc.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.VerticalDpiAttr)})
	}
	if _deacc.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.CopiesAttr)})
	}
	if _deacc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_deacc.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Rst and its children, prefixing error messages with path
func (_gccbg *CT_Rst) ValidateWithPath(path string) error {
	for _adcbb, _bcaef := range _gccbg.R {
		if _bfbacg := _bcaef.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u005b\u0025\u0064\u005d", path, _adcbb)); _bfbacg != nil {
			return _bfbacg
		}
	}
	for _afaaa, _afdee := range _gccbg.RPh {
		if _efcca := _afdee.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0050\u0068\u005b\u0025\u0064\u005d", path, _afaaa)); _efcca != nil {
			return _efcca
		}
	}
	if _gccbg.PhoneticPr != nil {
		if _aaaefb := _gccbg.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _aaaefb != nil {
			return _aaaefb
		}
	}
	return nil
}

// Validate validates the CT_CustomSheetView and its children
func (_ccgdb *CT_CustomSheetView) Validate() error {
	return _ccgdb.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_FilterColumn and its children, prefixing error messages with path
func (_dbbdd *CT_FilterColumn) ValidateWithPath(path string) error {
	if _dbbdd.Filters != nil {
		if _cfaeb := _dbbdd.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _cfaeb != nil {
			return _cfaeb
		}
	}
	if _dbbdd.Top10 != nil {
		if _gbbed := _dbbdd.Top10.ValidateWithPath(path + "\u002f\u0054\u006f\u0070\u0031\u0030"); _gbbed != nil {
			return _gbbed
		}
	}
	if _dbbdd.CustomFilters != nil {
		if _ebbd := _dbbdd.CustomFilters.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069l\u0074\u0065\u0072\u0073"); _ebbd != nil {
			return _ebbd
		}
	}
	if _dbbdd.DynamicFilter != nil {
		if _cbccg := _dbbdd.DynamicFilter.ValidateWithPath(path + "\u002f\u0044\u0079\u006e\u0061\u006d\u0069\u0063\u0046i\u006c\u0074\u0065\u0072"); _cbccg != nil {
			return _cbccg
		}
	}
	if _dbbdd.ColorFilter != nil {
		if _egcdc := _dbbdd.ColorFilter.ValidateWithPath(path + "\u002f\u0043\u006fl\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"); _egcdc != nil {
			return _egcdc
		}
	}
	if _dbbdd.IconFilter != nil {
		if _fdeg := _dbbdd.IconFilter.ValidateWithPath(path + "/\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"); _fdeg != nil {
			return _fdeg
		}
	}
	if _dbbdd.ExtLst != nil {
		if _bfbbbf := _dbbdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfbbbf != nil {
			return _bfbbbf
		}
	}
	return nil
}

// Validate validates the CT_SortCondition and its children
func (_gdga *CT_SortCondition) Validate() error {
	return _gdga.ValidateWithPath("\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_PageFields and its children
func (_dgcag *CT_PageFields) Validate() error {
	return _dgcag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_dafaa *SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073"
	return _dafaa.CT_SingleXmlCells.MarshalXML(e, start)
}

// ValidateWithPath validates the Metadata and its children, prefixing error messages with path
func (_gcbbg *Metadata) ValidateWithPath(path string) error {
	if _dgeab := _gcbbg.CT_Metadata.ValidateWithPath(path); _dgeab != nil {
		return _dgeab
	}
	return nil
}

// ValidateWithPath validates the CT_ColHierarchiesUsage and its children, prefixing error messages with path
func (_cecd *CT_ColHierarchiesUsage) ValidateWithPath(path string) error {
	for _bbfd, _agbc := range _cecd.ColHierarchyUsage {
		if _bedca := _agbc.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0043\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _bbfd)); _bedca != nil {
			return _bedca
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MdxSet and its children, prefixing error messages with path
func (_dcbge *CT_MdxSet) ValidateWithPath(path string) error {
	if _ccabf := _dcbge.OAttr.ValidateWithPath(path + "\u002f\u004f\u0041\u0074\u0074\u0072"); _ccabf != nil {
		return _ccabf
	}
	for _dffae, _feafdc := range _dcbge.N {
		if _defcg := _feafdc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _dffae)); _defcg != nil {
			return _defcg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Fills and its children, prefixing error messages with path
func (_faffd *CT_Fills) ValidateWithPath(path string) error {
	for _dbbfa, _fggf := range _faffd.Fill {
		if _cedg := _fggf.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0046\u0069\u006c\u006c\u005b\u0025\u0064\u005d", path, _dbbfa)); _cedg != nil {
			return _cedg
		}
	}
	return nil
}
func (_edfede *CT_PCDSDTCEntries) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _addca := range start.Attr {
		if _addca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egcdb, _fgcac := _g.ParseUint(_addca.Value, 10, 32)
			if _fgcac != nil {
				return _fgcac
			}
			_ebff := uint32(_egcdb)
			_edfede.CountAttr = &_ebff
			continue
		}
	}
_cbee:
	for {
		_bbedd, _aagae := d.Token()
		if _aagae != nil {
			return _aagae
		}
		switch _dfcd := _bbedd.(type) {
		case _b.StartElement:
			switch _dfcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_befeca := NewCT_Missing()
				if _eadg := d.DecodeElement(_befeca, &_dfcd); _eadg != nil {
					return _eadg
				}
				_edfede.M = append(_edfede.M, _befeca)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_fbfef := NewCT_Number()
				if _fabadb := d.DecodeElement(_fbfef, &_dfcd); _fabadb != nil {
					return _fabadb
				}
				_edfede.N = append(_edfede.N, _fbfef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_edbf := NewCT_Error()
				if _fggbd := d.DecodeElement(_edbf, &_dfcd); _fggbd != nil {
					return _fggbd
				}
				_edfede.E = append(_edfede.E, _edbf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cbdbf := NewCT_String()
				if _dbfbf := d.DecodeElement(_cbdbf, &_dfcd); _dbfbf != nil {
					return _dbfbf
				}
				_edfede.S = append(_edfede.S, _cbdbf)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006e\u0074\u0072\u0069\u0065\u0073\u0020\u0025\u0076", _dfcd.Name)
				if _egdg := d.Skip(); _egdg != nil {
					return _egdg
				}
			}
		case _b.EndElement:
			break _cbee
		case _b.CharData:
		}
	}
	return nil
}
func (_abbfg ST_HtmlFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abbfg.String(), start)
}

// Validate validates the CT_Comments and its children
func (_baaed *CT_Comments) Validate() error {
	return _baaed.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_egbb *CT_CalculatedMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _egbb.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _a.Sprintf("\u0025\u0076", _egbb.MdxAttr)})
	if _egbb.MemberNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_egbb.MemberNameAttr)})
	}
	if _egbb.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _a.Sprintf("\u0025\u0076", *_egbb.HierarchyAttr)})
	}
	if _egbb.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_egbb.ParentAttr)})
	}
	if _egbb.SolveOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u006c\u0076\u0065\u004f\u0072\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_egbb.SolveOrderAttr)})
	}
	if _egbb.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_egbb.SetAttr))})
	}
	e.EncodeToken(start)
	if _egbb.ExtLst != nil {
		_eefc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_egbb.ExtLst, _eefc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Worksheet and its children, prefixing error messages with path
func (_ddecba *Worksheet) ValidateWithPath(path string) error {
	if _aagga := _ddecba.CT_Worksheet.ValidateWithPath(path); _aagga != nil {
		return _aagga
	}
	return nil
}

// ValidateWithPath validates the CT_Comments and its children, prefixing error messages with path
func (_eagbg *CT_Comments) ValidateWithPath(path string) error {
	if _fbcb := _eagbg.Authors.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u0068\u006f\u0072\u0073"); _fbcb != nil {
		return _fbcb
	}
	if _caag := _eagbg.CommentList.ValidateWithPath(path + "\u002f\u0043\u006fm\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"); _caag != nil {
		return _caag
	}
	if _eagbg.ExtLst != nil {
		if _fgec := _eagbg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgec != nil {
			return _fgec
		}
	}
	return nil
}
func (_afdbfg *ST_PaneState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gadcbg, _bgfdf := d.Token()
	if _bgfdf != nil {
		return _bgfdf
	}
	if _bbgdd, _gdabdc := _gadcbg.(_b.EndElement); _gdabdc && _bbgdd.Name == start.Name {
		*_afdbfg = 1
		return nil
	}
	if _ceged, _aagge := _gadcbg.(_b.CharData); !_aagge {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gadcbg)
	} else {
		switch string(_ceged) {
		case "":
			*_afdbfg = 0
		case "\u0073\u0070\u006ci\u0074":
			*_afdbfg = 1
		case "\u0066\u0072\u006f\u007a\u0065\u006e":
			*_afdbfg = 2
		case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
			*_afdbfg = 3
		}
	}
	_gadcbg, _bgfdf = d.Token()
	if _bgfdf != nil {
		return _bgfdf
	}
	if _fefdf, _fegca := _gadcbg.(_b.EndElement); _fegca && _fefdf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gadcbg)
}

// ValidateWithPath validates the CT_MdxMemeberProp and its children, prefixing error messages with path
func (_edfg *CT_MdxMemeberProp) ValidateWithPath(path string) error { return nil }
func (_cfcfc *CT_Groups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdcbg := range start.Attr {
		if _cdcbg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bgccb, _ffffg := _g.ParseUint(_cdcbg.Value, 10, 32)
			if _ffffg != nil {
				return _ffffg
			}
			_gabf := uint32(_bgccb)
			_cfcfc.CountAttr = &_gabf
			continue
		}
	}
_cffddc:
	for {
		_bdfbfc, _daabf := d.Token()
		if _daabf != nil {
			return _daabf
		}
		switch _dbef := _bdfbfc.(type) {
		case _b.StartElement:
			switch _dbef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070"}:
				_cbagf := NewCT_LevelGroup()
				if _afef := d.DecodeElement(_cbagf, &_dbef); _afef != nil {
					return _afef
				}
				_cfcfc.Group = append(_cfcfc.Group, _cbagf)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u0073 \u0025\u0076", _dbef.Name)
				if _deee := d.Skip(); _deee != nil {
					return _deee
				}
			}
		case _b.EndElement:
			break _cffddc
		case _b.CharData:
		}
	}
	return nil
}
func (_defed *CT_DefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _defed.DefinedName != nil {
		_efggc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _fdca := range _defed.DefinedName {
			e.EncodeElement(_fdca, _efggc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_WebPublishItem struct {

	// Id
	IdAttr uint32

	// Destination Bookmark
	DivIdAttr string

	// Web Source Type
	SourceTypeAttr ST_WebSourceType

	// Source Id
	SourceRefAttr *string

	// Source Object Name
	SourceObjectAttr *string

	// Destination File Name
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Automatically Publish
	AutoRepublishAttr *bool
}

func (_fcgcc ST_PhoneticAlignment) String() string {
	switch _fcgcc {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func NewCT_Mdx() *CT_Mdx { _agbb := &CT_Mdx{}; _agbb.FAttr = ST_MdxFunctionType(1); return _agbb }

type CT_RowFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Row Items
	Field []*CT_Field
}

func (_afddd ST_Scope) Validate() error { return _afddd.ValidateWithPath("") }
func (_bddbbb *CT_MeasureGroups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bddbbb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bddbbb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bddbbb.MeasureGroup != nil {
		_bgbfd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}}
		for _, _eabgd := range _bddbbb.MeasureGroup {
			e.EncodeElement(_eabgd, _bgbfd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Item() *CT_Item   { _bbbaf := &CT_Item{}; return _bbbaf }
func NewCT_Fonts() *CT_Fonts { _caeg := &CT_Fonts{}; return _caeg }
func NewCT_WebPr() *CT_WebPr { _dabeab := &CT_WebPr{}; return _dabeab }

// ValidateWithPath validates the CT_Items and its children, prefixing error messages with path
func (_cbbcf *CT_Items) ValidateWithPath(path string) error {
	for _bdbd, _gaffg := range _cbbcf.Item {
		if _becdg := _gaffg.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _bdbd)); _becdg != nil {
			return _becdg
		}
	}
	return nil
}

type CT_Dimensions struct {

	// OLAP Dimensions Count
	CountAttr *uint32

	// OLAP Dimension
	Dimension []*CT_PivotDimension
}

func NewCT_ExternalSheetName() *CT_ExternalSheetName { _cggd := &CT_ExternalSheetName{}; return _cggd }
func (_cecff *CT_ExternalSheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cecff.SheetIdAttr)})
	if _cecff.RefreshErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cecff.RefreshErrorAttr))})
	}
	e.EncodeToken(start)
	if _cecff.Row != nil {
		_ecgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _cgdfg := range _cecff.Row {
			e.EncodeElement(_cgdfg, _ecgdg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebfdfb *CT_RevisionCellChange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebfdfb.Nc = NewCT_Cell()
	for _, _egbf := range start.Attr {
		if _egbf.Name.Local == "\u006f\u006c\u0064P\u0068" {
			_gdfca, _fcceba := _g.ParseBool(_egbf.Value)
			if _fcceba != nil {
				return _fcceba
			}
			_ebfdfb.OldPhAttr = &_gdfca
			continue
		}
		if _egbf.Name.Local == "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065" {
			_gbaedc, _gcafc := _g.ParseBool(_egbf.Value)
			if _gcafc != nil {
				return _gcafc
			}
			_ebfdfb.EndOfListFormulaUpdateAttr = &_gbaedc
			continue
		}
		if _egbf.Name.Local == "\u006f\u0064\u0078\u0066" {
			_bfagdb, _deaaec := _g.ParseBool(_egbf.Value)
			if _deaaec != nil {
				return _deaaec
			}
			_ebfdfb.OdxfAttr = &_bfagdb
			continue
		}
		if _egbf.Name.Local == "\u0073" {
			_fdcggg, _gfeffd := _g.ParseBool(_egbf.Value)
			if _gfeffd != nil {
				return _gfeffd
			}
			_ebfdfb.SAttr = &_fdcggg
			continue
		}
		if _egbf.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bfbea, _fbge := _g.ParseUint(_egbf.Value, 10, 32)
			if _fbge != nil {
				return _fbge
			}
			_dfefd := uint32(_bfbea)
			_ebfdfb.NumFmtIdAttr = &_dfefd
			continue
		}
		if _egbf.Name.Local == "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078" {
			_bdefg, _eegda := _g.ParseBool(_egbf.Value)
			if _eegda != nil {
				return _eegda
			}
			_ebfdfb.OldQuotePrefixAttr = &_bdefg
			continue
		}
		if _egbf.Name.Local == "\u0070\u0068" {
			_dfebf, _adaab := _g.ParseBool(_egbf.Value)
			if _adaab != nil {
				return _adaab
			}
			_ebfdfb.PhAttr = &_dfebf
			continue
		}
		if _egbf.Name.Local == "\u0073\u0049\u0064" {
			_afbfcd, _efgga := _g.ParseUint(_egbf.Value, 10, 32)
			if _efgga != nil {
				return _efgga
			}
			_ebfdfb.SIdAttr = uint32(_afbfcd)
			continue
		}
		if _egbf.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_dabdgb, _gddcge := _g.ParseBool(_egbf.Value)
			if _gddcge != nil {
				return _gddcge
			}
			_ebfdfb.XfDxfAttr = &_dabdgb
			continue
		}
		if _egbf.Name.Local == "\u0064\u0078\u0066" {
			_cecaad, _fcebg := _g.ParseBool(_egbf.Value)
			if _fcebg != nil {
				return _fcebg
			}
			_ebfdfb.DxfAttr = &_cecaad
			continue
		}
		if _egbf.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_decfbf, _acbd := _g.ParseBool(_egbf.Value)
			if _acbd != nil {
				return _acbd
			}
			_ebfdfb.QuotePrefixAttr = &_decfbf
			continue
		}
		if _egbf.Name.Local == "\u0072\u0049\u0064" {
			_ffgbd, _dabb := _g.ParseUint(_egbf.Value, 10, 32)
			if _dabb != nil {
				return _dabb
			}
			_caceeg := uint32(_ffgbd)
			_ebfdfb.RIdAttr = &_caceeg
			continue
		}
		if _egbf.Name.Local == "\u0075\u0061" {
			_bcgbccb, _bdacdb := _g.ParseBool(_egbf.Value)
			if _bdacdb != nil {
				return _bdacdb
			}
			_ebfdfb.UaAttr = &_bcgbccb
			continue
		}
		if _egbf.Name.Local == "\u0072\u0061" {
			_cgeedb, _ddagd := _g.ParseBool(_egbf.Value)
			if _ddagd != nil {
				return _ddagd
			}
			_ebfdfb.RaAttr = &_cgeedb
			continue
		}
	}
_edge:
	for {
		_cebb, _eegee := d.Token()
		if _eegee != nil {
			return _eegee
		}
		switch _dfbbd := _cebb.(type) {
		case _b.StartElement:
			switch _dfbbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0063"}:
				_ebfdfb.Oc = NewCT_Cell()
				if _dgagg := d.DecodeElement(_ebfdfb.Oc, &_dfbbd); _dgagg != nil {
					return _dgagg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0063"}:
				if _aedfga := d.DecodeElement(_ebfdfb.Nc, &_dfbbd); _aedfga != nil {
					return _aedfga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0064\u0078\u0066"}:
				_ebfdfb.Odxf = NewCT_Dxf()
				if _ebbdb := d.DecodeElement(_ebfdfb.Odxf, &_dfbbd); _ebbdb != nil {
					return _ebbdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0064\u0078\u0066"}:
				_ebfdfb.Ndxf = NewCT_Dxf()
				if _bgbfdc := d.DecodeElement(_ebfdfb.Ndxf, &_dfbbd); _bgbfdc != nil {
					return _bgbfdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebfdfb.ExtLst = NewCT_ExtensionList()
				if _fdbac := d.DecodeElement(_ebfdfb.ExtLst, &_dfbbd); _fdbac != nil {
					return _fdbac
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043\u0065\u006c\u006c\u0043\u0068\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _dfbbd.Name)
				if _cbfcdd := d.Skip(); _cbfcdd != nil {
					return _cbfcdd
				}
			}
		case _b.EndElement:
			break _edge
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_TableStyleElement() *CT_TableStyleElement {
	_aafbe := &CT_TableStyleElement{}
	_aafbe.TypeAttr = ST_TableStyleType(1)
	return _aafbe
}
func (_bfbcd *CT_CommentList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edff:
	for {
		_affd, _cacfg := d.Token()
		if _cacfg != nil {
			return _cacfg
		}
		switch _cdcbc := _affd.(type) {
		case _b.StartElement:
			switch _cdcbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}:
				_dbebg := NewCT_Comment()
				if _ddecg := d.DecodeElement(_dbebg, &_cdcbc); _ddecg != nil {
					return _ddecg
				}
				_bfbcd.Comment = append(_bfbcd.Comment, _dbebg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074L\u0069s\u0074\u0020\u0025\u0076", _cdcbc.Name)
				if _edec := d.Skip(); _edec != nil {
					return _edec
				}
			}
		case _b.EndElement:
			break _edff
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SingleXmlCell() *CT_SingleXmlCell {
	_fffdfg := &CT_SingleXmlCell{}
	_fffdfg.XmlCellPr = NewCT_XmlCellPr()
	return _fffdfg
}

// ValidateWithPath validates the CT_CellXfs and its children, prefixing error messages with path
func (_bgbg *CT_CellXfs) ValidateWithPath(path string) error {
	for _bfcc, _gebbc := range _bgbg.Xf {
		if _aagf := _gebbc.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _bfcc)); _aagf != nil {
			return _aagf
		}
	}
	return nil
}

type CT_CommentPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Alternative Text
	AltTextAttr *string

	// Text Horizontal Alignment
	TextHAlignAttr ST_TextHAlign

	// ext Vertical Alignment
	TextVAlignAttr ST_TextVAlign

	// Text Lock Flag
	LockTextAttr *bool

	// Far East Alignment Flag
	JustLastXAttr *bool

	// Automatic Text Scaling Flag
	AutoScaleAttr *bool
	Anchor        *CT_ObjectAnchor
}

// ValidateWithPath validates the CT_WebPr and its children, prefixing error messages with path
func (_dbba *CT_WebPr) ValidateWithPath(path string) error {
	if _fbfed := _dbba.HtmlFormatAttr.ValidateWithPath(path + "\u002fH\u0074m\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0041\u0074\u0074\u0072"); _fbfed != nil {
		return _fbfed
	}
	if _dbba.Tables != nil {
		if _fabcdc := _dbba.Tables.ValidateWithPath(path + "\u002fT\u0061\u0062\u006c\u0065\u0073"); _fabcdc != nil {
			return _fabcdc
		}
	}
	return nil
}

type CT_SortState struct {

	// Sort by Columns
	ColumnSortAttr *bool

	// Case Sensitive
	CaseSensitiveAttr *bool

	// Sort Method
	SortMethodAttr ST_SortMethod

	// Sort Range
	RefAttr string

	// Sort Condition
	SortCondition []*CT_SortCondition
	ExtLst        *CT_ExtensionList
}

// Validate validates the CT_ExternalDefinedName and its children
func (_cdfb *CT_ExternalDefinedName) Validate() error {
	return _cdfb.ValidateWithPath("\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065")
}
func (_fadbc *ST_TextVAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_edfaa, _fccdb := d.Token()
	if _fccdb != nil {
		return _fccdb
	}
	if _afccde, _ccfee := _edfaa.(_b.EndElement); _ccfee && _afccde.Name == start.Name {
		*_fadbc = 1
		return nil
	}
	if _feafg, _fgcaa := _edfaa.(_b.CharData); !_fgcaa {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edfaa)
	} else {
		switch string(_feafg) {
		case "":
			*_fadbc = 0
		case "\u0074\u006f\u0070":
			*_fadbc = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_fadbc = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_fadbc = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_fadbc = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_fadbc = 5
		}
	}
	_edfaa, _fccdb = d.Token()
	if _fccdb != nil {
		return _fccdb
	}
	if _fgfec, _cgdbc := _edfaa.(_b.EndElement); _cgdbc && _fgfec.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edfaa)
}
func NewCT_VolTopic() *CT_VolTopic { _adgdf := &CT_VolTopic{}; return _adgdf }
func NewCT_MdxKPI() *CT_MdxKPI {
	_gagadg := &CT_MdxKPI{}
	_gagadg.PAttr = ST_MdxKPIProperty(1)
	return _gagadg
}

type CT_PageField struct {

	// Field
	FldAttr int32

	// Item Index
	ItemAttr *uint32

	// OLAP Hierarchy Index
	HierAttr *int32

	// Hierarchy Unique Name
	NameAttr *string

	// Hierarchy Display Name
	CapAttr *string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_RgbColor and its children, prefixing error messages with path
func (_fccgab *CT_RgbColor) ValidateWithPath(path string) error { return nil }
func (_bedee *ST_BorderStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_baabf, _ccbgc := d.Token()
	if _ccbgc != nil {
		return _ccbgc
	}
	if _ffgcgb, _gffdbc := _baabf.(_b.EndElement); _gffdbc && _ffgcgb.Name == start.Name {
		*_bedee = 1
		return nil
	}
	if _efdbgb, _agagd := _baabf.(_b.CharData); !_agagd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _baabf)
	} else {
		switch string(_efdbgb) {
		case "":
			*_bedee = 0
		case "\u006e\u006f\u006e\u0065":
			*_bedee = 1
		case "\u0074\u0068\u0069\u006e":
			*_bedee = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d":
			*_bedee = 3
		case "\u0064\u0061\u0073\u0068\u0065\u0064":
			*_bedee = 4
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_bedee = 5
		case "\u0074\u0068\u0069c\u006b":
			*_bedee = 6
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_bedee = 7
		case "\u0068\u0061\u0069\u0072":
			*_bedee = 8
		case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
			*_bedee = 9
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_bedee = 10
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bedee = 11
		case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bedee = 12
		case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_bedee = 13
		case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_bedee = 14
		}
	}
	_baabf, _ccbgc = d.Token()
	if _ccbgc != nil {
		return _ccbgc
	}
	if _fbada, _cfdcbg := _baabf.(_b.EndElement); _cfdcbg && _fbada.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _baabf)
}

// ValidateWithPath validates the CT_Parameter and its children, prefixing error messages with path
func (_ececf *CT_Parameter) ValidateWithPath(path string) error {
	if _bgeag := _ececf.ParameterTypeAttr.ValidateWithPath(path + "\u002fP\u0061r\u0061\u006d\u0065\u0074\u0065r\u0054\u0079p\u0065\u0041\u0074\u0074\u0072"); _bgeag != nil {
		return _bgeag
	}
	return nil
}

// Validate validates the CT_XmlColumnPr and its children
func (_dacdd *CT_XmlColumnPr) Validate() error {
	return _dacdd.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072")
}

type CT_Sheets struct {

	// Sheet Information
	Sheet []*CT_Sheet
}

// Validate validates the CT_FunctionGroup and its children
func (_dfba *CT_FunctionGroup) Validate() error {
	return _dfba.ValidateWithPath("\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070")
}

// Validate validates the CT_RevisionQueryTableField and its children
func (_fcbab *CT_RevisionQueryTableField) Validate() error {
	return _fcbab.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064")
}
func (_dagbd *ST_MdxKPIProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgcf, _bggfe := d.Token()
	if _bggfe != nil {
		return _bggfe
	}
	if _eabbca, _bdbdf := _bdgcf.(_b.EndElement); _bdbdf && _eabbca.Name == start.Name {
		*_dagbd = 1
		return nil
	}
	if _cdgbg, _bdfacc := _bdgcf.(_b.CharData); !_bdfacc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bdgcf)
	} else {
		switch string(_cdgbg) {
		case "":
			*_dagbd = 0
		case "\u0076":
			*_dagbd = 1
		case "\u0067":
			*_dagbd = 2
		case "\u0073":
			*_dagbd = 3
		case "\u0074":
			*_dagbd = 4
		case "\u0077":
			*_dagbd = 5
		case "\u006d":
			*_dagbd = 6
		}
	}
	_bdgcf, _bggfe = d.Token()
	if _bggfe != nil {
		return _bggfe
	}
	if _gfaacca, _bcgagg := _bdgcf.(_b.EndElement); _bcgagg && _gfaacca.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bdgcf)
}

// Validate validates the CT_OleItem and its children
func (_eccaa *CT_OleItem) Validate() error {
	return _eccaa.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_Worksheet and its children
func (_adcbcc *CT_Worksheet) Validate() error {
	return _adcbcc.ValidateWithPath("\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074")
}
func (_fbce *CT_PageMargins) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0076", _fbce.LeftAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _a.Sprintf("\u0025\u0076", _fbce.RightAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0076", _fbce.TopAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _a.Sprintf("\u0025\u0076", _fbce.BottomAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", _fbce.HeaderAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006f\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", _fbce.FooterAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Sets() *CT_Sets { _bcdgcb := &CT_Sets{}; return _bcdgcb }
func (_daagegf *ST_PrintError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ebbaed, _ddebg := d.Token()
	if _ddebg != nil {
		return _ddebg
	}
	if _baffdd, _ggbcee := _ebbaed.(_b.EndElement); _ggbcee && _baffdd.Name == start.Name {
		*_daagegf = 1
		return nil
	}
	if _egfde, _agefcb := _ebbaed.(_b.CharData); !_agefcb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ebbaed)
	} else {
		switch string(_egfde) {
		case "":
			*_daagegf = 0
		case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
			*_daagegf = 1
		case "\u0062\u006c\u0061n\u006b":
			*_daagegf = 2
		case "\u0064\u0061\u0073\u0068":
			*_daagegf = 3
		case "\u004e\u0041":
			*_daagegf = 4
		}
	}
	_ebbaed, _ddebg = d.Token()
	if _ddebg != nil {
		return _ddebg
	}
	if _gfdgg, _edgabc := _ebbaed.(_b.EndElement); _edgabc && _gfdgg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ebbaed)
}
func NewCT_CellWatches() *CT_CellWatches { _dedcg := &CT_CellWatches{}; return _dedcg }
func (_fedgbe *CT_ExternalBook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efaeb := range start.Attr {
		if _efaeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efaeb.Name.Local == "\u0069\u0064" || _efaeb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efaeb.Name.Local == "\u0069\u0064" {
			_aeed, _fdccc := _efaeb.Value, error(nil)
			if _fdccc != nil {
				return _fdccc
			}
			_fedgbe.IdAttr = _aeed
			continue
		}
	}
_cbggd:
	for {
		_gcecg, _gbfddd := d.Token()
		if _gbfddd != nil {
			return _gbfddd
		}
		switch _cbag := _gcecg.(type) {
		case _b.StartElement:
			switch _cbag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}:
				_fedgbe.SheetNames = NewCT_ExternalSheetNames()
				if _fdgd := d.DecodeElement(_fedgbe.SheetNames, &_cbag); _fdgd != nil {
					return _fdgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_fedgbe.DefinedNames = NewCT_ExternalDefinedNames()
				if _dgga := d.DecodeElement(_fedgbe.DefinedNames, &_cbag); _dgga != nil {
					return _dgga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}:
				_fedgbe.SheetDataSet = NewCT_ExternalSheetDataSet()
				if _bafbg := d.DecodeElement(_fedgbe.SheetDataSet, &_cbag); _bafbg != nil {
					return _bafbg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b\u0020\u0025\u0076", _cbag.Name)
				if _fecb := d.Skip(); _fecb != nil {
					return _fecb
				}
			}
		case _b.EndElement:
			break _cbggd
		case _b.CharData:
		}
	}
	return nil
}
func (_bcbce *CT_ColFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcbce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bcbce.CountAttr)})
	}
	e.EncodeToken(start)
	_gdde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _febdg := range _bcbce.Field {
		e.EncodeElement(_febdg, _gdde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_addf *CT_ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fabd:
	for {
		_aecfc, _edcff := d.Token()
		if _edcff != nil {
			return _edcff
		}
		switch _dcegf := _aecfc.(type) {
		case _b.StartElement:
			switch _dcegf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_addf.Choice = NewCT_ExternalLinkChoice()
				if _fdbbg := d.DecodeElement(&_addf.Choice.ExternalBook, &_dcegf); _fdbbg != nil {
					return _fdbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_addf.Choice = NewCT_ExternalLinkChoice()
				if _acgbc := d.DecodeElement(&_addf.Choice.DdeLink, &_dcegf); _acgbc != nil {
					return _acgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_addf.Choice = NewCT_ExternalLinkChoice()
				if _bafee := d.DecodeElement(&_addf.Choice.OleLink, &_dcegf); _bafee != nil {
					return _bafee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_addf.ExtLst = NewCT_ExtensionList()
				if _bgda := d.DecodeElement(_addf.ExtLst, &_dcegf); _bgda != nil {
					return _bgda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _dcegf.Name)
				if _ddgg := d.Skip(); _ddgg != nil {
					return _ddgg
				}
			}
		case _b.EndElement:
			break _fabd
		case _b.CharData:
		}
	}
	return nil
}

type CT_Cell struct {

	// Reference
	RAttr *string

	// Style Index
	SAttr *uint32

	// Cell Data Type
	TAttr ST_CellType

	// Cell Metadata Index
	CmAttr *uint32

	// Value Metadata Index
	VmAttr *uint32

	// Show Phonetic
	PhAttr *bool

	// Formula
	F *CT_CellFormula

	// Cell Value
	V *string

	// Rich Text Inline
	Is *CT_Rst

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bdfc *CT_Break) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fafg := range start.Attr {
		if _fafg.Name.Local == "\u0069\u0064" {
			_fac, _cefg := _g.ParseUint(_fafg.Value, 10, 32)
			if _cefg != nil {
				return _cefg
			}
			_cdca := uint32(_fac)
			_bdfc.IdAttr = &_cdca
			continue
		}
		if _fafg.Name.Local == "\u006d\u0069\u006e" {
			_eeee, _daa := _g.ParseUint(_fafg.Value, 10, 32)
			if _daa != nil {
				return _daa
			}
			_bda := uint32(_eeee)
			_bdfc.MinAttr = &_bda
			continue
		}
		if _fafg.Name.Local == "\u006d\u0061\u0078" {
			_aec, _dgda := _g.ParseUint(_fafg.Value, 10, 32)
			if _dgda != nil {
				return _dgda
			}
			_aefb := uint32(_aec)
			_bdfc.MaxAttr = &_aefb
			continue
		}
		if _fafg.Name.Local == "\u006d\u0061\u006e" {
			_ffba, _aaag := _g.ParseBool(_fafg.Value)
			if _aaag != nil {
				return _aaag
			}
			_bdfc.ManAttr = &_ffba
			continue
		}
		if _fafg.Name.Local == "\u0070\u0074" {
			_baeb, _fadf := _g.ParseBool(_fafg.Value)
			if _fadf != nil {
				return _fadf
			}
			_bdfc.PtAttr = &_baeb
			continue
		}
	}
	for {
		_cedc, _ecdb := d.Token()
		if _ecdb != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0072\u0065\u0061\u006b: \u0025\u0073", _ecdb)
		}
		if _ccgb, _ggg := _cedc.(_b.EndElement); _ggg && _ccgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dffagae ST_UpdateLinks) String() string {
	switch _dffagae {
	case 0:
		return ""
	case 1:
		return "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case 2:
		return "\u006e\u0065\u0076e\u0072"
	case 3:
		return "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return ""
}
func NewCT_RgbColor() *CT_RgbColor { _geacf := &CT_RgbColor{}; return _geacf }

// ValidateWithPath validates the CT_FutureMetadataBlock and its children, prefixing error messages with path
func (_gdgfe *CT_FutureMetadataBlock) ValidateWithPath(path string) error {
	if _gdgfe.ExtLst != nil {
		if _febdgb := _gdgfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _febdgb != nil {
			return _febdgb
		}
	}
	return nil
}
func (_gdegag ST_SourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdegag.String(), start)
}

// Validate validates the CT_FontFamily and its children
func (_befde *CT_FontFamily) Validate() error {
	return _befde.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079")
}
func (_ecgfa *CT_UndoInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecgfa.ExpAttr = ST_FormulaExpression(1)
	for _, _cgacb := range start.Attr {
		if _cgacb.Name.Local == "\u0069\u006e\u0064e\u0078" {
			_fbgce, _efdgc := _g.ParseUint(_cgacb.Value, 10, 32)
			if _efdgc != nil {
				return _efdgc
			}
			_ecgfa.IndexAttr = uint32(_fbgce)
			continue
		}
		if _cgacb.Name.Local == "\u0065\u0078\u0070" {
			_ecgfa.ExpAttr.UnmarshalXMLAttr(_cgacb)
			continue
		}
		if _cgacb.Name.Local == "\u0072\u0065\u00663\u0044" {
			_ebbab, _fadga := _g.ParseBool(_cgacb.Value)
			if _fadga != nil {
				return _fadga
			}
			_ecgfa.Ref3DAttr = &_ebbab
			continue
		}
		if _cgacb.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_fggbgc, _bfecce := _g.ParseBool(_cgacb.Value)
			if _bfecce != nil {
				return _bfecce
			}
			_ecgfa.ArrayAttr = &_fggbgc
			continue
		}
		if _cgacb.Name.Local == "\u0076" {
			_eefdd, _cfbb := _g.ParseBool(_cgacb.Value)
			if _cfbb != nil {
				return _cfbb
			}
			_ecgfa.VAttr = &_eefdd
			continue
		}
		if _cgacb.Name.Local == "\u006e\u0066" {
			_gagbe, _bfbbe := _g.ParseBool(_cgacb.Value)
			if _bfbbe != nil {
				return _bfbbe
			}
			_ecgfa.NfAttr = &_gagbe
			continue
		}
		if _cgacb.Name.Local == "\u0063\u0073" {
			_agbdg, _aagbe := _g.ParseBool(_cgacb.Value)
			if _aagbe != nil {
				return _aagbe
			}
			_ecgfa.CsAttr = &_agbdg
			continue
		}
		if _cgacb.Name.Local == "\u0064\u0072" {
			_aagbd, _acdbe := _cgacb.Value, error(nil)
			if _acdbe != nil {
				return _acdbe
			}
			_ecgfa.DrAttr = _aagbd
			continue
		}
		if _cgacb.Name.Local == "\u0064\u006e" {
			_feaddc, _ggdece := _cgacb.Value, error(nil)
			if _ggdece != nil {
				return _ggdece
			}
			_ecgfa.DnAttr = &_feaddc
			continue
		}
		if _cgacb.Name.Local == "\u0072" {
			_ggcde, _gaefa := _cgacb.Value, error(nil)
			if _gaefa != nil {
				return _gaefa
			}
			_ecgfa.RAttr = &_ggcde
			continue
		}
		if _cgacb.Name.Local == "\u0073\u0049\u0064" {
			_egbbf, _cbabfg := _g.ParseUint(_cgacb.Value, 10, 32)
			if _cbabfg != nil {
				return _cbabfg
			}
			_bdcbe := uint32(_egbbf)
			_ecgfa.SIdAttr = &_bdcbe
			continue
		}
	}
	for {
		_cfcgf, _adaga := d.Token()
		if _adaga != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f\u003a\u0020\u0025\u0073", _adaga)
		}
		if _dacba, _adebb := _cfcgf.(_b.EndElement); _adebb && _dacba.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the QueryTable and its children
func (_ffgagb *QueryTable) Validate() error {
	return _ffgagb.ValidateWithPath("\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}
func (_gdccbd ST_CellType) Validate() error { return _gdccbd.ValidateWithPath("") }

// ValidateWithPath validates the CT_DateGroupItem and its children, prefixing error messages with path
func (_efaec *CT_DateGroupItem) ValidateWithPath(path string) error {
	if _efaec.DateTimeGroupingAttr == ST_DateTimeGroupingUnset {
		return _a.Errorf("\u0025s\u002f\u0044a\u0074\u0065\u0054\u0069m\u0065\u0047\u0072o\u0075\u0070\u0069\u006e\u0067\u0041\u0074\u0074\u0072 i\u0073\u0020\u0061 \u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079 \u0066\u0069e\u006c\u0064", path)
	}
	if _fdfd := _efaec.DateTimeGroupingAttr.ValidateWithPath(path + "/\u0044\u0061\u0074\u0065Ti\u006de\u0047\u0072\u006f\u0075\u0070i\u006e\u0067\u0041\u0074\u0074\u0072"); _fdfd != nil {
		return _fdfd
	}
	return nil
}

type Revisions struct{ CT_Revisions }

// ValidateWithPath validates the CT_FontFamily and its children, prefixing error messages with path
func (_dabc *CT_FontFamily) ValidateWithPath(path string) error {
	if _dabc.ValAttr < 0 {
		return _a.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dabc.ValAttr)
	}
	if _dabc.ValAttr > 14 {
		return _a.Errorf("\u0025\u0073/m\u002e\u0056\u0061l\u0041\u0074\u0074\u0072 mu\u0073t \u0062\u0065\u0020\u003c\u003d\u0020\u00314 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dabc.ValAttr)
	}
	return nil
}
func (_cddfa *CT_Xf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cddfa.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cddfa.NumFmtIdAttr)})
	}
	if _cddfa.FontIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cddfa.FontIdAttr)})
	}
	if _cddfa.FillIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u006c\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cddfa.FillIdAttr)})
	}
	if _cddfa.BorderIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cddfa.BorderIdAttr)})
	}
	if _cddfa.XfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cddfa.XfIdAttr)})
	}
	if _cddfa.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.QuotePrefixAttr))})
	}
	if _cddfa.PivotButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.PivotButtonAttr))})
	}
	if _cddfa.ApplyNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyNumberFormatAttr))})
	}
	if _cddfa.ApplyFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyFontAttr))})
	}
	if _cddfa.ApplyFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyFillAttr))})
	}
	if _cddfa.ApplyBorderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyBorderAttr))})
	}
	if _cddfa.ApplyAlignmentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyAlignmentAttr))})
	}
	if _cddfa.ApplyProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cddfa.ApplyProtectionAttr))})
	}
	e.EncodeToken(start)
	if _cddfa.Alignment != nil {
		_bdcbce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_cddfa.Alignment, _bdcbce)
	}
	if _cddfa.Protection != nil {
		_fcfefb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cddfa.Protection, _fcfefb)
	}
	if _cddfa.ExtLst != nil {
		_dedgdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cddfa.ExtLst, _dedgdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type Comments struct{ CT_Comments }
type CT_DrawingHF struct {
	IdAttr string

	// Left Header for Odd Pages
	LhoAttr *uint32

	// Left Header for Even Pages
	LheAttr *uint32

	// Left Header for First Page
	LhfAttr *uint32

	// Center Header for Odd Pages
	ChoAttr *uint32

	// Center Header for Even Pages
	CheAttr *uint32

	// Center Header for First Page
	ChfAttr *uint32

	// Right Header for Odd Pages
	RhoAttr *uint32

	// Right Header for Even Pages
	RheAttr *uint32

	// Right Header for First Page
	RhfAttr *uint32

	// Left Footer for Odd Pages
	LfoAttr *uint32

	// Left Footer for Even Pages
	LfeAttr *uint32

	// Left Footer for First Page
	LffAttr *uint32

	// Center Footer for Odd Pages
	CfoAttr *uint32

	// Center Footer for Even Pages
	CfeAttr *uint32

	// Center Footer for First Page
	CffAttr *uint32

	// Right Footer for Odd Pages
	RfoAttr *uint32

	// Right Footer for Even Pages
	RfeAttr *uint32

	// Right Footer for First Page
	RffAttr *uint32
}
type ST_FilterOperator byte

func (_fdeag *CT_CustomFilters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdeag.AndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fdeag.AndAttr))})
	}
	e.EncodeToken(start)
	_dcfd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}}
	for _, _dadgd := range _fdeag.CustomFilter {
		e.EncodeElement(_dadgd, _dcfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ExternalLinkChoice struct {
	ExternalBook *CT_ExternalBook
	DdeLink      *CT_DdeLink
	OleLink      *CT_OleLink
}

func (_gggdc *CT_ServerFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gggdc.CultureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u006c\u0074\u0075\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gggdc.CultureAttr)})
	}
	if _gggdc.FormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gggdc.FormatAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableStyleElement and its children
func (_ffcba *CT_TableStyleElement) Validate() error {
	return _ffcba.ValidateWithPath("C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074")
}
func (_gacca ST_GrowShrinkType) Validate() error { return _gacca.ValidateWithPath("") }
func (_fdab *CT_OleItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdab.OleItem != nil {
		_fffdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d"}}
		for _, _acadf := range _fdab.OleItem {
			e.EncodeElement(_acadf, _fffdc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fccfd *CT_ExternalDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddbd := range start.Attr {
		if _ddbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebagg, _cgcgf := _ddbd.Value, error(nil)
			if _cgcgf != nil {
				return _cgcgf
			}
			_fccfd.NameAttr = _ebagg
			continue
		}
		if _ddbd.Name.Local == "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f" {
			_fedf, _gfebbg := _ddbd.Value, error(nil)
			if _gfebbg != nil {
				return _gfebbg
			}
			_fccfd.RefersToAttr = &_fedf
			continue
		}
		if _ddbd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_bbagb, _faag := _g.ParseUint(_ddbd.Value, 10, 32)
			if _faag != nil {
				return _faag
			}
			_gegbb := uint32(_bbagb)
			_fccfd.SheetIdAttr = &_gegbb
			continue
		}
	}
	for {
		_dcegg, _egag := d.Token()
		if _egag != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072n\u0061l\u0044e\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _egag)
		}
		if _agedg, _dedd := _dcegg.(_b.EndElement); _dedd && _agedg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfdeee *CT_Stylesheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gfdeee.NumFmts != nil {
		_gafeea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e\u0075\u006d\u0046\u006d\u0074\u0073"}}
		e.EncodeElement(_gfdeee.NumFmts, _gafeea)
	}
	if _gfdeee.Fonts != nil {
		_facde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u006e\u0074\u0073"}}
		e.EncodeElement(_gfdeee.Fonts, _facde)
	}
	if _gfdeee.Fills != nil {
		_begdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u006c\u0073"}}
		e.EncodeElement(_gfdeee.Fills, _begdc)
	}
	if _gfdeee.Borders != nil {
		_bedfga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u006f\u0072\u0064\u0065\u0072\u0073"}}
		e.EncodeElement(_gfdeee.Borders, _bedfga)
	}
	if _gfdeee.CellStyleXfs != nil {
		_egece := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}}
		e.EncodeElement(_gfdeee.CellStyleXfs, _egece)
	}
	if _gfdeee.CellXfs != nil {
		_gacdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0058\u0066\u0073"}}
		e.EncodeElement(_gfdeee.CellXfs, _gacdc)
	}
	if _gfdeee.CellStyles != nil {
		_dcaga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_gfdeee.CellStyles, _dcaga)
	}
	if _gfdeee.Dxfs != nil {
		_cbbgea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0064\u0078\u0066\u0073"}}
		e.EncodeElement(_gfdeee.Dxfs, _cbbgea)
	}
	if _gfdeee.TableStyles != nil {
		_afeda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073"}}
		e.EncodeElement(_gfdeee.TableStyles, _afeda)
	}
	if _gfdeee.Colors != nil {
		_ffdgbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u006f\u0072s"}}
		e.EncodeElement(_gfdeee.Colors, _ffdgbe)
	}
	if _gfdeee.ExtLst != nil {
		_cgacfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gfdeee.ExtLst, _cgacfc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ExtensionList and its children, prefixing error messages with path
func (_feefcf *EG_ExtensionList) ValidateWithPath(path string) error {
	for _fdcdbc, _cadae := range _feefcf.Ext {
		if _fafdde := _cadae.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _fdcdbc)); _fafdde != nil {
			return _fafdde
		}
	}
	return nil
}
func (_gbggf *CT_XStringElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgabd := range start.Attr {
		if _cgabd.Name.Local == "\u0076" {
			_bffbe, _cacad := _cgabd.Value, error(nil)
			if _cacad != nil {
				return _cacad
			}
			_gbggf.VAttr = _bffbe
			continue
		}
	}
	for {
		_fbaffd, _bedeaf := d.Token()
		if _bedeaf != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006c\u0065\u006d\u0065\u006e\u0074: \u0025\u0073", _bedeaf)
		}
		if _edgdd, _cfefg := _fbaffd.(_b.EndElement); _cfefg && _edgdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_babef *ST_VolValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_babef = 0
	case "\u0062":
		*_babef = 1
	case "\u006e":
		*_babef = 2
	case "\u0065":
		*_babef = 3
	case "\u0073":
		*_babef = 4
	}
	return nil
}
func (_bcgedd ST_PatternType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcgedd.String(), start)
}
func (_begee *CT_SheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gagde:
	for {
		_ddbdbg, _fdcba := d.Token()
		if _fdcba != nil {
			return _fdcba
		}
		switch _fdeaa := _ddbdbg.(type) {
		case _b.StartElement:
			switch _fdeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_caaag := NewCT_Row()
				if _eaddd := d.DecodeElement(_caaag, &_fdeaa); _eaddd != nil {
					return _eaddd
				}
				_begee.Row = append(_begee.Row, _caaag)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _fdeaa.Name)
				if _cdfgd := d.Skip(); _cdfgd != nil {
					return _cdfgd
				}
			}
		case _b.EndElement:
			break _gagde
		case _b.CharData:
		}
	}
	return nil
}
func (_febfg *CT_Consolidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_febfg.RangeSets = NewCT_RangeSets()
	for _, _gaffc := range start.Attr {
		if _gaffc.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065" {
			_eege, _cead := _g.ParseBool(_gaffc.Value)
			if _cead != nil {
				return _cead
			}
			_febfg.AutoPageAttr = &_eege
			continue
		}
	}
_aecd:
	for {
		_ccad, _edbd := d.Token()
		if _edbd != nil {
			return _edbd
		}
		switch _fbeb := _ccad.(type) {
		case _b.StartElement:
			switch _fbeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067e\u0073"}:
				_febfg.Pages = NewCT_Pages()
				if _beae := d.DecodeElement(_febfg.Pages, &_fbeb); _beae != nil {
					return _beae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0053\u0065\u0074s"}:
				if _ggddab := d.DecodeElement(_febfg.RangeSets, &_fbeb); _ggddab != nil {
					return _ggddab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025v", _fbeb.Name)
				if _fece := d.Skip(); _fece != nil {
					return _fece
				}
			}
		case _b.EndElement:
			break _aecd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_DataBinding and its children
func (_gfag *CT_DataBinding) Validate() error {
	return _gfag.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067")
}
func (_ebecf ST_IconSetType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcaaa := _b.Attr{}
	_gcaaa.Name = name
	switch _ebecf {
	case ST_IconSetTypeUnset:
		_gcaaa.Value = ""
	case ST_IconSetType3Arrows:
		_gcaaa.Value = "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType3ArrowsGray:
		_gcaaa.Value = "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType3Flags:
		_gcaaa.Value = "\u0033\u0046\u006c\u0061\u0067\u0073"
	case ST_IconSetType3TrafficLights1:
		_gcaaa.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case ST_IconSetType3TrafficLights2:
		_gcaaa.Value = "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case ST_IconSetType3Signs:
		_gcaaa.Value = "\u0033\u0053\u0069\u0067\u006e\u0073"
	case ST_IconSetType3Symbols:
		_gcaaa.Value = "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case ST_IconSetType3Symbols2:
		_gcaaa.Value = "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case ST_IconSetType4Arrows:
		_gcaaa.Value = "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType4ArrowsGray:
		_gcaaa.Value = "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType4RedToBlack:
		_gcaaa.Value = "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case ST_IconSetType4Rating:
		_gcaaa.Value = "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType4TrafficLights:
		_gcaaa.Value = "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case ST_IconSetType5Arrows:
		_gcaaa.Value = "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case ST_IconSetType5ArrowsGray:
		_gcaaa.Value = "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case ST_IconSetType5Rating:
		_gcaaa.Value = "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case ST_IconSetType5Quarters:
		_gcaaa.Value = "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return _gcaaa, nil
}
func NewCT_Xf() *CT_Xf { _cgbef := &CT_Xf{}; return _cgbef }

// Validate validates the CT_OleItems and its children
func (_aedfc *CT_OleItems) Validate() error {
	return _aedfc.ValidateWithPath("C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_MapInfo() *CT_MapInfo { _befcf := &CT_MapInfo{}; return _befcf }
func (_fcdfab ST_DataValidationErrorStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fcdfab.String(), start)
}
func (_fadca ST_DataValidationImeMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdaag := _b.Attr{}
	_bdaag.Name = name
	switch _fadca {
	case ST_DataValidationImeModeUnset:
		_bdaag.Value = ""
	case ST_DataValidationImeModeNoControl:
		_bdaag.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_DataValidationImeModeOff:
		_bdaag.Value = "\u006f\u0066\u0066"
	case ST_DataValidationImeModeOn:
		_bdaag.Value = "\u006f\u006e"
	case ST_DataValidationImeModeDisabled:
		_bdaag.Value = "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case ST_DataValidationImeModeHiragana:
		_bdaag.Value = "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullKatakana:
		_bdaag.Value = "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeHalfKatakana:
		_bdaag.Value = "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case ST_DataValidationImeModeFullAlpha:
		_bdaag.Value = "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeHalfAlpha:
		_bdaag.Value = "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case ST_DataValidationImeModeFullHangul:
		_bdaag.Value = "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case ST_DataValidationImeModeHalfHangul:
		_bdaag.Value = "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return _bdaag, nil
}

// ValidateWithPath validates the CT_Tuples and its children, prefixing error messages with path
func (_cbgfd *CT_Tuples) ValidateWithPath(path string) error {
	for _beeef, _gefda := range _cbgfd.Tpl {
		if _cfegea := _gefda.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0054\u0070\u006c\u005b\u0025\u0064\u005d", path, _beeef)); _cfegea != nil {
			return _cfegea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolMain and its children, prefixing error messages with path
func (_bdbdcf *CT_VolMain) ValidateWithPath(path string) error {
	for _fgfaf, _gggec := range _bdbdcf.Tp {
		if _ccfdb := _gggec.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0054\u0070\u005b\u0025\u0064]", path, _fgfaf)); _ccfdb != nil {
			return _ccfdb
		}
	}
	return nil
}
func NewCT_GroupMember() *CT_GroupMember { _ccaea := &CT_GroupMember{}; return _ccaea }

// Validate validates the CT_WebPublishing and its children
func (_fegfcb *CT_WebPublishing) Validate() error {
	return _fegfcb.ValidateWithPath("\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067")
}
func NewCT_RangeSets() *CT_RangeSets { _dfece := &CT_RangeSets{}; return _dfece }

// ValidateWithPath validates the CT_Sheet and its children, prefixing error messages with path
func (_acfca *CT_Sheet) ValidateWithPath(path string) error {
	if _bfcbd := _acfca.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _bfcbd != nil {
		return _bfcbd
	}
	return nil
}

type CT_CalcCell struct {

	// Cell Reference
	RAttr   *string
	RefAttr *string

	// Sheet Id
	IAttr *int32

	// Child Chain
	SAttr *bool

	// New Dependency Level
	LAttr *bool

	// New Thread
	TAttr *bool

	// Array
	AAttr *bool
}

// ValidateWithPath validates the CT_Drawing and its children, prefixing error messages with path
func (_fdbbf *CT_Drawing) ValidateWithPath(path string) error { return nil }
func NewCT_Consolidation() *CT_Consolidation {
	_dbgaf := &CT_Consolidation{}
	_dbgaf.RangeSets = NewCT_RangeSets()
	return _dbgaf
}
func NewCT_Border() *CT_Border { _bdc := &CT_Border{}; return _bdc }

type CT_MemberProperties struct {

	// OLAP Member Properties Count
	CountAttr *uint32

	// OLAP Member Property
	Mp []*CT_MemberProperty
}
type CT_WebPublishItems struct {

	// Web Publishing Items Count
	CountAttr *uint32

	// Web Publishing Item
	WebPublishItem []*CT_WebPublishItem
}

func (_aebe *CT_IconFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_eefcc, _acbae := _aebe.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
	if _acbae != nil {
		return _acbae
	}
	start.Attr = append(start.Attr, _eefcc)
	if _aebe.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aebe.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cafdb *CT_TableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdaee := range start.Attr {
		if _gdaee.Name.Local == "\u006e\u0061\u006d\u0065" {
			_feffb, _accff := _gdaee.Value, error(nil)
			if _accff != nil {
				return _accff
			}
			_cafdb.NameAttr = _feffb
			continue
		}
		if _gdaee.Name.Local == "\u0070\u0069\u0076o\u0074" {
			_dfbece, _gbaedgd := _g.ParseBool(_gdaee.Value)
			if _gbaedgd != nil {
				return _gbaedgd
			}
			_cafdb.PivotAttr = &_dfbece
			continue
		}
		if _gdaee.Name.Local == "\u0074\u0061\u0062l\u0065" {
			_geaabb, _dfgaba := _g.ParseBool(_gdaee.Value)
			if _dfgaba != nil {
				return _dfgaba
			}
			_cafdb.TableAttr = &_geaabb
			continue
		}
		if _gdaee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gceee, _aegad := _g.ParseUint(_gdaee.Value, 10, 32)
			if _aegad != nil {
				return _aegad
			}
			_dabed := uint32(_gceee)
			_cafdb.CountAttr = &_dabed
			continue
		}
	}
_eacgb:
	for {
		_cbagd, _ceded := d.Token()
		if _ceded != nil {
			return _ceded
		}
		switch _efcfga := _cbagd.(type) {
		case _b.StartElement:
			switch _efcfga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0045\u006ce\u006d\u0065\u006e\u0074"}:
				_abfcbg := NewCT_TableStyleElement()
				if _cgbfe := d.DecodeElement(_abfcbg, &_efcfga); _cgbfe != nil {
					return _cgbfe
				}
				_cafdb.TableStyleElement = append(_cafdb.TableStyleElement, _abfcbg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _efcfga.Name)
				if _ddbaga := d.Skip(); _ddbaga != nil {
					return _ddbaga
				}
			}
		case _b.EndElement:
			break _eacgb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RangeSet and its children, prefixing error messages with path
func (_fbffb *CT_RangeSet) ValidateWithPath(path string) error { return nil }
func (_gfabe ST_CalcMode) Validate() error                     { return _gfabe.ValidateWithPath("") }

// ValidateWithPath validates the CT_ServerFormat and its children, prefixing error messages with path
func (_efeeec *CT_ServerFormat) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GroupMembers and its children
func (_edffc *CT_GroupMembers) Validate() error {
	return _edffc.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}
func (_dbcbac *CT_SharedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adcca := range start.Attr {
		if _adcca.Name.Local == "\u006di\u006e\u0044\u0061\u0074\u0065" {
			_egbef, _cccbf := ParseStdlibTime(_adcca.Value)
			if _cccbf != nil {
				return _cccbf
			}
			_dbcbac.MinDateAttr = &_egbef
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u006e\u0074ai\u006e\u0073\u0053\u0065\u006d\u0069\u004d\u0069\u0078\u0065\u0064\u0054\u0079\u0070e\u0073" {
			_dcdgb, _baccc := _g.ParseBool(_adcca.Value)
			if _baccc != nil {
				return _baccc
			}
			_dbcbac.ContainsSemiMixedTypesAttr = &_dcdgb
			continue
		}
		if _adcca.Name.Local == "\u006da\u0078\u0044\u0061\u0074\u0065" {
			_cfeea, _cebf := ParseStdlibTime(_adcca.Value)
			if _cebf != nil {
				return _cebf
			}
			_dbcbac.MaxDateAttr = &_cfeea
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0044\u0061\u0074\u0065" {
			_fbbcg, _gdebed := _g.ParseBool(_adcca.Value)
			if _gdebed != nil {
				return _gdebed
			}
			_dbcbac.ContainsDateAttr = &_fbbcg
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbbbb, _gfbec := _g.ParseUint(_adcca.Value, 10, 32)
			if _gfbec != nil {
				return _gfbec
			}
			_dbbgd := uint32(_bbbbb)
			_dbcbac.CountAttr = &_dbbgd
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042\u006c\u0061\u006e\u006b" {
			_bccgab, _cfdaf := _g.ParseBool(_adcca.Value)
			if _cfdaf != nil {
				return _cfdaf
			}
			_dbcbac.ContainsBlankAttr = &_bccgab
			continue
		}
		if _adcca.Name.Local == "\u006c\u006f\u006e\u0067\u0054\u0065\u0078\u0074" {
			_ffbcb, _begeg := _g.ParseBool(_adcca.Value)
			if _begeg != nil {
				return _begeg
			}
			_dbcbac.LongTextAttr = &_ffbcb
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u004eu\u006d\u0062\u0065\u0072" {
			_agdbgg, _cafbag := _g.ParseBool(_adcca.Value)
			if _cafbag != nil {
				return _cafbag
			}
			_dbcbac.ContainsNumberAttr = &_agdbgg
			continue
		}
		if _adcca.Name.Local == "\u006d\u0069\u006e\u0056\u0061\u006c\u0075\u0065" {
			_faagfd, _aeead := _g.ParseFloat(_adcca.Value, 64)
			if _aeead != nil {
				return _aeead
			}
			_dbcbac.MinValueAttr = &_faagfd
			continue
		}
		if _adcca.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c\u0075\u0065" {
			_bbcaf, _ggdcb := _g.ParseFloat(_adcca.Value, 64)
			if _ggdcb != nil {
				return _ggdcb
			}
			_dbcbac.MaxValueAttr = &_bbcaf
			continue
		}
		if _adcca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004e\u006f\u006e\u0044\u0061\u0074\u0065" {
			_gceadd, _eacdga := _g.ParseBool(_adcca.Value)
			if _eacdga != nil {
				return _eacdga
			}
			_dbcbac.ContainsNonDateAttr = &_gceadd
			continue
		}
		if _adcca.Name.Local == "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0053t\u0072\u0069\u006e\u0067" {
			_ecdcdc, _dedbd := _g.ParseBool(_adcca.Value)
			if _dedbd != nil {
				return _dedbd
			}
			_dbcbac.ContainsStringAttr = &_ecdcdc
			continue
		}
		if _adcca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u004di\u0078\u0065d\u0054\u0079\u0070\u0065\u0073" {
			_ebggg, _daafe := _g.ParseBool(_adcca.Value)
			if _daafe != nil {
				return _daafe
			}
			_dbcbac.ContainsMixedTypesAttr = &_ebggg
			continue
		}
		if _adcca.Name.Local == "\u0063o\u006et\u0061\u0069\u006e\u0073\u0049\u006e\u0074\u0065\u0067\u0065\u0072" {
			_degaga, _geede := _g.ParseBool(_adcca.Value)
			if _geede != nil {
				return _geede
			}
			_dbcbac.ContainsIntegerAttr = &_degaga
			continue
		}
	}
_egbgfe:
	for {
		_feggab, _eedgd := d.Token()
		if _eedgd != nil {
			return _eedgd
		}
		switch _acddf := _feggab.(type) {
		case _b.StartElement:
			switch _acddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_baedb := NewCT_Missing()
				if _dbagb := d.DecodeElement(_baedb, &_acddf); _dbagb != nil {
					return _dbagb
				}
				_dbcbac.M = append(_dbcbac.M, _baedb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_cdcgd := NewCT_Number()
				if _bgggc := d.DecodeElement(_cdcgd, &_acddf); _bgggc != nil {
					return _bgggc
				}
				_dbcbac.N = append(_dbcbac.N, _cdcgd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_daged := NewCT_Boolean()
				if _gbdce := d.DecodeElement(_daged, &_acddf); _gbdce != nil {
					return _gbdce
				}
				_dbcbac.B = append(_dbcbac.B, _daged)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_ffebg := NewCT_Error()
				if _bbfdd := d.DecodeElement(_ffebg, &_acddf); _bbfdd != nil {
					return _bbfdd
				}
				_dbcbac.E = append(_dbcbac.E, _ffebg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_aceeb := NewCT_String()
				if _bfafgc := d.DecodeElement(_aceeb, &_acddf); _bfafgc != nil {
					return _bfafgc
				}
				_dbcbac.S = append(_dbcbac.S, _aceeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_dabcb := NewCT_DateTime()
				if _cfefeb := d.DecodeElement(_dabcb, &_acddf); _cfefeb != nil {
					return _cfefeb
				}
				_dbcbac.D = append(_dbcbac.D, _dabcb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0049t\u0065m\u0073\u0020\u0025\u0076", _acddf.Name)
				if _fcacf := d.Skip(); _fcacf != nil {
					return _fcacf
				}
			}
		case _b.EndElement:
			break _egbgfe
		case _b.CharData:
		}
	}
	return nil
}
func (_dacged *ST_TotalsRowFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eddcgc, _fecad := d.Token()
	if _fecad != nil {
		return _fecad
	}
	if _ffbefa, _eeebae := _eddcgc.(_b.EndElement); _eeebae && _ffbefa.Name == start.Name {
		*_dacged = 1
		return nil
	}
	if _efcad, _bbfba := _eddcgc.(_b.CharData); !_bbfba {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eddcgc)
	} else {
		switch string(_efcad) {
		case "":
			*_dacged = 0
		case "\u006e\u006f\u006e\u0065":
			*_dacged = 1
		case "\u0073\u0075\u006d":
			*_dacged = 2
		case "\u006d\u0069\u006e":
			*_dacged = 3
		case "\u006d\u0061\u0078":
			*_dacged = 4
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_dacged = 5
		case "\u0063\u006f\u0075n\u0074":
			*_dacged = 6
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_dacged = 7
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_dacged = 8
		case "\u0076\u0061\u0072":
			*_dacged = 9
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_dacged = 10
		}
	}
	_eddcgc, _fecad = d.Token()
	if _fecad != nil {
		return _fecad
	}
	if _efedcb, _efcdf := _eddcgc.(_b.EndElement); _efcdf && _efedcb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eddcgc)
}
func (_cfegc *CT_TupleCache) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _cfegc.Entries != nil {
		_dggaeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0074\u0072\u0069\u0065\u0073"}}
		e.EncodeElement(_cfegc.Entries, _dggaeg)
	}
	if _cfegc.Sets != nil {
		_gfbfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0065\u0074\u0073"}}
		e.EncodeElement(_cfegc.Sets, _gfbfc)
	}
	if _cfegc.QueryCache != nil {
		_fadeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_cfegc.QueryCache, _fadeg)
	}
	if _cfegc.ServerFormats != nil {
		_accee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_cfegc.ServerFormats, _accee)
	}
	if _cfegc.ExtLst != nil {
		_eedbdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfegc.ExtLst, _eedbdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dabda ST_Pane) ValidateWithPath(path string) error {
	switch _dabda {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dabda))
	}
	return nil
}
func NewCT_IconFilter() *CT_IconFilter {
	_dbfcbb := &CT_IconFilter{}
	_dbfcbb.IconSetAttr = ST_IconSetType(1)
	return _dbfcbb
}
func NewCT_CustomWorkbookView() *CT_CustomWorkbookView {
	_affac := &CT_CustomWorkbookView{}
	_affac.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _affac
}

// ValidateWithPath validates the CT_CalcChain and its children, prefixing error messages with path
func (_gfb *CT_CalcChain) ValidateWithPath(path string) error {
	for _cefe, _afgf := range _gfb.C {
		if _ccb := _afgf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _cefe)); _ccb != nil {
			return _ccb
		}
	}
	if _gfb.ExtLst != nil {
		if _faba := _gfb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faba != nil {
			return _faba
		}
	}
	return nil
}
func NewCT_RevisionComment() *CT_RevisionComment {
	_cfgfd := &CT_RevisionComment{}
	_cfgfd.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cfgfd
}

// ValidateWithPath validates the CT_SingleXmlCell and its children, prefixing error messages with path
func (_cebgb *CT_SingleXmlCell) ValidateWithPath(path string) error {
	if _decgg := _cebgb.XmlCellPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"); _decgg != nil {
		return _decgg
	}
	if _cebgb.ExtLst != nil {
		if _agggea := _cebgb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agggea != nil {
			return _agggea
		}
	}
	return nil
}

// Validate validates the CT_PivotTableStyle and its children
func (_cgega *CT_PivotTableStyle) Validate() error {
	return _cgega.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065")
}
func NewCT_TableMissing() *CT_TableMissing { _gbdec := &CT_TableMissing{}; return _gbdec }

type CT_Location struct {

	// Reference
	RefAttr string

	// First Header Row
	FirstHeaderRowAttr uint32

	// PivotTable Data First Row
	FirstDataRowAttr uint32

	// First Data Column
	FirstDataColAttr uint32

	// Rows Per Page Count
	RowPageCountAttr *uint32

	// Columns Per Page
	ColPageCountAttr *uint32
}

func (_egedd *CT_Schema) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _a.Sprintf("\u0025\u0076", _egedd.IDAttr)})
	if _egedd.SchemaRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f"}, Value: _a.Sprintf("\u0025\u0076", *_egedd.SchemaRefAttr)})
	}
	if _egedd.NamespaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e"}, Value: _a.Sprintf("\u0025\u0076", *_egedd.NamespaceAttr)})
	}
	if _egedd.SchemaLanguageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_egedd.SchemaLanguageAttr)})
	}
	e.EncodeToken(start)
	if _egedd.Any != nil {
		_egedd.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FileRecoveryPr and its children, prefixing error messages with path
func (_bbce *CT_FileRecoveryPr) ValidateWithPath(path string) error { return nil }
func (_fgggg ST_ExternalConnectionType) ValidateWithPath(path string) error {
	switch _fgggg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgggg))
	}
	return nil
}

// ValidateWithPath validates the CT_Colors and its children, prefixing error messages with path
func (_fdbc *CT_Colors) ValidateWithPath(path string) error {
	if _fdbc.IndexedColors != nil {
		if _caefb := _fdbc.IndexedColors.ValidateWithPath(path + "\u002f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043o\u006c\u006f\u0072\u0073"); _caefb != nil {
			return _caefb
		}
	}
	if _fdbc.MruColors != nil {
		if _ccfc := _fdbc.MruColors.ValidateWithPath(path + "\u002f\u004d\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"); _ccfc != nil {
			return _ccfc
		}
	}
	return nil
}

type ST_DynamicFilterType byte

func NewCT_RElt() *CT_RElt                 { _aabad := &CT_RElt{}; return _aabad }
func (_gcgdfe ST_Objects) Validate() error { return _gcgdfe.ValidateWithPath("") }
func (_cdggec ST_MdxFunctionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdggec.String(), start)
}

type CT_Cols struct {

	// Column Width & Formatting
	Col []*CT_Col
}

func (_cefbg *CT_PivotArea) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cefbg.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cefbg.FieldAttr)})
	}
	if _cefbg.TypeAttr != ST_PivotAreaTypeUnset {
		_cbcgc, _dcbeg := _cefbg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dcbeg != nil {
			return _dcbeg
		}
		start.Attr = append(start.Attr, _cbcgc)
	}
	if _cefbg.DataOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.DataOnlyAttr))})
	}
	if _cefbg.LabelOnlyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.LabelOnlyAttr))})
	}
	if _cefbg.GrandRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.GrandRowAttr))})
	}
	if _cefbg.GrandColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.GrandColAttr))})
	}
	if _cefbg.CacheIndexAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.CacheIndexAttr))})
	}
	if _cefbg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.OutlineAttr))})
	}
	if _cefbg.OffsetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0066\u0066\u0073\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cefbg.OffsetAttr)})
	}
	if _cefbg.CollapsedLevelsAreSubtotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cefbg.CollapsedLevelsAreSubtotalsAttr))})
	}
	if _cefbg.AxisAttr != ST_AxisUnset {
		_gggeg, _aegfc := _cefbg.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _aegfc != nil {
			return _aegfc
		}
		start.Attr = append(start.Attr, _gggeg)
	}
	if _cefbg.FieldPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_cefbg.FieldPositionAttr)})
	}
	e.EncodeToken(start)
	if _cefbg.References != nil {
		_bdadce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_cefbg.References, _bdadce)
	}
	if _cefbg.ExtLst != nil {
		_deafff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cefbg.ExtLst, _deafff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acfac ST_PivotFilterType) Validate() error { return _acfac.ValidateWithPath("") }

// Validate validates the CT_RevisionCustomView and its children
func (_edgbgc *CT_RevisionCustomView) Validate() error {
	return _edgbgc.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077")
}
func (_fcafb *CT_SortCondition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcaega := range start.Attr {
		if _dcaega.Name.Local == "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067" {
			_abgbf, _ccggf := _g.ParseBool(_dcaega.Value)
			if _ccggf != nil {
				return _ccggf
			}
			_fcafb.DescendingAttr = &_abgbf
			continue
		}
		if _dcaega.Name.Local == "\u0073\u006f\u0072\u0074\u0042\u0079" {
			_fcafb.SortByAttr.UnmarshalXMLAttr(_dcaega)
			continue
		}
		if _dcaega.Name.Local == "\u0072\u0065\u0066" {
			_gecab, _gfbfg := _dcaega.Value, error(nil)
			if _gfbfg != nil {
				return _gfbfg
			}
			_fcafb.RefAttr = _gecab
			continue
		}
		if _dcaega.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074" {
			_fafbad, _cdacf := _dcaega.Value, error(nil)
			if _cdacf != nil {
				return _cdacf
			}
			_fcafb.CustomListAttr = &_fafbad
			continue
		}
		if _dcaega.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_gadcf, _gcceae := _g.ParseUint(_dcaega.Value, 10, 32)
			if _gcceae != nil {
				return _gcceae
			}
			_ggegd := uint32(_gadcf)
			_fcafb.DxfIdAttr = &_ggegd
			continue
		}
		if _dcaega.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_fcafb.IconSetAttr.UnmarshalXMLAttr(_dcaega)
			continue
		}
		if _dcaega.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_agfadf, _ddefcg := _g.ParseUint(_dcaega.Value, 10, 32)
			if _ddefcg != nil {
				return _ddefcg
			}
			_gffgdg := uint32(_agfadf)
			_fcafb.IconIdAttr = &_gffgdg
			continue
		}
	}
	for {
		_bfcea, _bffce := d.Token()
		if _bffce != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u006f\u0072\u0074C\u006fn\u0064\u0069\u0074\u0069\u006f\u006e\u003a \u0025\u0073", _bffce)
		}
		if _gdfabd, _agdbggb := _bfcea.(_b.EndElement); _agdbggb && _gdfabd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bagdea ST_PhoneticType) Validate() error { return _bagdea.ValidateWithPath("") }

// ValidateWithPath validates the VolTypes and its children, prefixing error messages with path
func (_fedbg *VolTypes) ValidateWithPath(path string) error {
	if _cbddb := _fedbg.CT_VolTypes.ValidateWithPath(path); _cbddb != nil {
		return _cbddb
	}
	return nil
}

const (
	ST_PhoneticTypeUnset             ST_PhoneticType = 0
	ST_PhoneticTypeHalfwidthKatakana ST_PhoneticType = 1
	ST_PhoneticTypeFullwidthKatakana ST_PhoneticType = 2
	ST_PhoneticTypeHiragana          ST_PhoneticType = 3
	ST_PhoneticTypeNoConversion      ST_PhoneticType = 4
)

func (_egeca *CT_PivotTableStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebgfb := range start.Attr {
		if _bebgfb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgafg, _aabbda := _bebgfb.Value, error(nil)
			if _aabbda != nil {
				return _aabbda
			}
			_egeca.NameAttr = &_dgafg
			continue
		}
		if _bebgfb.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_ggeed, _gegcfb := _g.ParseBool(_bebgfb.Value)
			if _gegcfb != nil {
				return _gegcfb
			}
			_egeca.ShowRowHeadersAttr = &_ggeed
			continue
		}
		if _bebgfb.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_ebbfga, _acdfc := _g.ParseBool(_bebgfb.Value)
			if _acdfc != nil {
				return _acdfc
			}
			_egeca.ShowColHeadersAttr = &_ebbfga
			continue
		}
		if _bebgfb.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_accdf, _aaeeg := _g.ParseBool(_bebgfb.Value)
			if _aaeeg != nil {
				return _aaeeg
			}
			_egeca.ShowRowStripesAttr = &_accdf
			continue
		}
		if _bebgfb.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_cbaecff, _fabadc := _g.ParseBool(_bebgfb.Value)
			if _fabadc != nil {
				return _fabadc
			}
			_egeca.ShowColStripesAttr = &_cbaecff
			continue
		}
		if _bebgfb.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_gbddb, _gbbbab := _g.ParseBool(_bebgfb.Value)
			if _gbbbab != nil {
				return _gbbbab
			}
			_egeca.ShowLastColumnAttr = &_gbddb
			continue
		}
	}
	for {
		_egada, _bbfecb := d.Token()
		if _bbfecb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0050\u0069\u0076\u006f\u0074\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u003a\u0020\u0025\u0073", _bbfecb)
		}
		if _dadbg, _efgab := _egada.(_b.EndElement); _efgab && _dadbg.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SmartTagShow byte

// Validate validates the CT_Rst and its children
func (_aggbd *CT_Rst) Validate() error {
	return _aggbd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0073\u0074")
}
func (_bbeg *CT_Col) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", _bbeg.MinAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _a.Sprintf("\u0025\u0076", _bbeg.MaxAttr)})
	if _bbeg.WidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u0064t\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_bbeg.WidthAttr)})
	}
	if _bbeg.StyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0079l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bbeg.StyleAttr)})
	}
	if _bbeg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbeg.HiddenAttr))})
	}
	if _bbeg.BestFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062e\u0073\u0074\u0046\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbeg.BestFitAttr))})
	}
	if _bbeg.CustomWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbeg.CustomWidthAttr))})
	}
	if _bbeg.PhoneticAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbeg.PhoneticAttr))})
	}
	if _bbeg.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_bbeg.OutlineLevelAttr)})
	}
	if _bbeg.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbeg.CollapsedAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbdg *CT_ConditionalFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbdg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gbdg.CountAttr)})
	}
	e.EncodeToken(start)
	_dgag := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074"}}
	for _, _ega := range _gbdg.ConditionalFormat {
		e.EncodeElement(_ega, _dgag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Filters and its children
func (_bcafe *CT_Filters) Validate() error {
	return _bcafe.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_ccf *CT_CacheField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbd := range start.Attr {
		if _bbd.Name.Local == "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y" {
			_ddd, _baba := _g.ParseInt(_bbd.Value, 10, 32)
			if _baba != nil {
				return _baba
			}
			_afd := int32(_ddd)
			_ccf.HierarchyAttr = &_afd
			continue
		}
		if _bbd.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_edfe, _afg := _g.ParseUint(_bbd.Value, 10, 32)
			if _afg != nil {
				return _afg
			}
			_eaa := uint32(_edfe)
			_ccf.LevelAttr = &_eaa
			continue
		}
		if _bbd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fcce, _fcab := _bbd.Value, error(nil)
			if _fcab != nil {
				return _fcab
			}
			_ccf.CaptionAttr = &_fcce
			continue
		}
		if _bbd.Name.Local == "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064" {
			_bbfa, _abge := _g.ParseBool(_bbd.Value)
			if _abge != nil {
				return _abge
			}
			_ccf.DatabaseFieldAttr = &_bbfa
			continue
		}
		if _bbd.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_gaa, _agb := _g.ParseBool(_bbd.Value)
			if _agb != nil {
				return _agb
			}
			_ccf.ServerFieldAttr = &_gaa
			continue
		}
		if _bbd.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_fccg, _aab := _g.ParseUint(_bbd.Value, 10, 32)
			if _aab != nil {
				return _aab
			}
			_faff := uint32(_fccg)
			_ccf.NumFmtIdAttr = &_faff
			continue
		}
		if _bbd.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_fbb, _fcca := _bbd.Value, error(nil)
			if _fcca != nil {
				return _fcca
			}
			_ccf.FormulaAttr = &_fbb
			continue
		}
		if _bbd.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cecf, _dgge := _g.ParseInt(_bbd.Value, 10, 32)
			if _dgge != nil {
				return _dgge
			}
			_geeb := int32(_cecf)
			_ccf.SqlTypeAttr = &_geeb
			continue
		}
		if _bbd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dddf, _abfd := _bbd.Value, error(nil)
			if _abfd != nil {
				return _abfd
			}
			_ccf.NameAttr = _dddf
			continue
		}
		if _bbd.Name.Local == "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065" {
			_gfff, _egbc := _bbd.Value, error(nil)
			if _egbc != nil {
				return _egbc
			}
			_ccf.PropertyNameAttr = &_gfff
			continue
		}
		if _bbd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074" {
			_cfda, _gfdg := _g.ParseBool(_bbd.Value)
			if _gfdg != nil {
				return _gfdg
			}
			_ccf.UniqueListAttr = &_cfda
			continue
		}
		if _bbd.Name.Local == "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074" {
			_bffd, _dadg := _g.ParseUint(_bbd.Value, 10, 32)
			if _dadg != nil {
				return _dadg
			}
			_eece := uint32(_bffd)
			_ccf.MappingCountAttr = &_eece
			continue
		}
		if _bbd.Name.Local == "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064" {
			_bdb, _ecf := _g.ParseBool(_bbd.Value)
			if _ecf != nil {
				return _ecf
			}
			_ccf.MemberPropertyFieldAttr = &_bdb
			continue
		}
	}
_egdd:
	for {
		_fbd, _ggdg := d.Token()
		if _ggdg != nil {
			return _ggdg
		}
		switch _eaad := _fbd.(type) {
		case _b.StartElement:
			switch _eaad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0061\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_ccf.SharedItems = NewCT_SharedItems()
				if _cbb := d.DecodeElement(_ccf.SharedItems, &_eaad); _cbb != nil {
					return _cbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}:
				_ccf.FieldGroup = NewCT_FieldGroup()
				if _deb := d.DecodeElement(_ccf.FieldGroup, &_eaad); _deb != nil {
					return _deb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u004da\u0070"}:
				_cbcc := NewCT_X()
				if _efge := d.DecodeElement(_cbcc, &_eaad); _efge != nil {
					return _efge
				}
				_ccf.MpMap = append(_ccf.MpMap, _cbcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccf.ExtLst = NewCT_ExtensionList()
				if _bdfd := d.DecodeElement(_ccf.ExtLst, &_eaad); _bdfd != nil {
					return _bdfd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043a\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _eaad.Name)
				if _efda := d.Skip(); _efda != nil {
					return _efda
				}
			}
		case _b.EndElement:
			break _egdd
		case _b.CharData:
		}
	}
	return nil
}
func (_bgffd *Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074"
	return _bgffd.CT_Chartsheet.MarshalXML(e, start)
}

type CT_GroupItems struct {

	// Items Created Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}

func (_cceab *CT_Connection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befc := range start.Attr {
		if _befc.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_bace, _cbega := _g.ParseBool(_befc.Value)
			if _cbega != nil {
				return _cbega
			}
			_cceab.DeletedAttr = &_bace
			continue
		}
		if _befc.Name.Local == "\u0069\u0064" {
			_efgg, _cabdb := _g.ParseUint(_befc.Value, 10, 32)
			if _cabdb != nil {
				return _cabdb
			}
			_cceab.IdAttr = uint32(_efgg)
			continue
		}
		if _befc.Name.Local == "o\u006e\u006c\u0079\u0055se\u0043o\u006e\u006e\u0065\u0063\u0074i\u006f\u006e\u0046\u0069\u006c\u0065" {
			_ceaad, _ebcbd := _g.ParseBool(_befc.Value)
			if _ebcbd != nil {
				return _ebcbd
			}
			_cceab.OnlyUseConnectionFileAttr = &_ceaad
			continue
		}
		if _befc.Name.Local == "\u006fd\u0063\u0046\u0069\u006c\u0065" {
			_adfag, _affa := _befc.Value, error(nil)
			if _affa != nil {
				return _affa
			}
			_cceab.OdcFileAttr = &_adfag
			continue
		}
		if _befc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064" {
			_abcd, _cgae := _g.ParseBool(_befc.Value)
			if _cgae != nil {
				return _cgae
			}
			_cceab.BackgroundAttr = &_abcd
			continue
		}
		if _befc.Name.Local == "\u0069\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_ddce, _gaee := _g.ParseUint(_befc.Value, 10, 32)
			if _gaee != nil {
				return _gaee
			}
			_bbaf := uint32(_ddce)
			_cceab.IntervalAttr = &_bbaf
			continue
		}
		if _befc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_facca, _fcbeg := _g.ParseBool(_befc.Value)
			if _fcbeg != nil {
				return _fcbeg
			}
			_cceab.RefreshOnLoadAttr = &_facca
			continue
		}
		if _befc.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_eaffa, _cdba := _befc.Value, error(nil)
			if _cdba != nil {
				return _cdba
			}
			_cceab.DescriptionAttr = &_eaffa
			continue
		}
		if _befc.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_ccgd, _gcbda := _g.ParseBool(_befc.Value)
			if _gcbda != nil {
				return _gcbda
			}
			_cceab.SaveDataAttr = &_ccgd
			continue
		}
		if _befc.Name.Local == "\u0072e\u0063o\u006e\u006e\u0065\u0063\u0074i\u006f\u006eM\u0065\u0074\u0068\u006f\u0064" {
			_gbbg, _ccbe := _g.ParseUint(_befc.Value, 10, 32)
			if _ccbe != nil {
				return _ccbe
			}
			_aeege := uint32(_gbbg)
			_cceab.ReconnectionMethodAttr = &_aeege
			continue
		}
		if _befc.Name.Local == "c\u0072\u0065\u0064\u0065\u006e\u0074\u0069\u0061\u006c\u0073" {
			_cceab.CredentialsAttr.UnmarshalXMLAttr(_befc)
			continue
		}
		if _befc.Name.Local == "\u006be\u0065\u0070\u0041\u006c\u0069\u0076e" {
			_bgfcd, _accc := _g.ParseBool(_befc.Value)
			if _accc != nil {
				return _accc
			}
			_cceab.KeepAliveAttr = &_bgfcd
			continue
		}
		if _befc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_dfaa, _acged := _befc.Value, error(nil)
			if _acged != nil {
				return _acged
			}
			_cceab.SourceFileAttr = &_dfaa
			continue
		}
		if _befc.Name.Local == "\u0073\u0069\u006e\u0067\u006c\u0065\u0053\u0069\u0067n\u004f\u006e\u0049\u0064" {
			_efga, _aebaa := _befc.Value, error(nil)
			if _aebaa != nil {
				return _aebaa
			}
			_cceab.SingleSignOnIdAttr = &_efga
			continue
		}
		if _befc.Name.Local == "\u0073\u0061\u0076e\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ecgb, _dacde := _g.ParseBool(_befc.Value)
			if _dacde != nil {
				return _dacde
			}
			_cceab.SavePasswordAttr = &_ecgb
			continue
		}
		if _befc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbdf, _dccg := _befc.Value, error(nil)
			if _dccg != nil {
				return _dccg
			}
			_cceab.NameAttr = &_gbdf
			continue
		}
		if _befc.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dbed, _bbge := _g.ParseUint(_befc.Value, 10, 8)
			if _bbge != nil {
				return _bbge
			}
			_cceab.RefreshedVersionAttr = uint8(_dbed)
			continue
		}
		if _befc.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ffbag, _gccbf := _g.ParseUint(_befc.Value, 10, 8)
			if _gccbf != nil {
				return _gccbf
			}
			_aaef := uint8(_ffbag)
			_cceab.MinRefreshableVersionAttr = &_aaef
			continue
		}
		if _befc.Name.Local == "\u006e\u0065\u0077" {
			_cffdd, _fedd := _g.ParseBool(_befc.Value)
			if _fedd != nil {
				return _fedd
			}
			_cceab.NewAttr = &_cffdd
			continue
		}
		if _befc.Name.Local == "\u0074\u0079\u0070\u0065" {
			_eafe, _gfae := _g.ParseUint(_befc.Value, 10, 32)
			if _gfae != nil {
				return _gfae
			}
			_fegb := uint32(_eafe)
			_cceab.TypeAttr = &_fegb
			continue
		}
	}
_aadgc:
	for {
		_debbb, _fbfb := d.Token()
		if _fbfb != nil {
			return _fbfb
		}
		switch _ebdd := _debbb.(type) {
		case _b.StartElement:
			switch _ebdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0062\u0050\u0072"}:
				_cceab.DbPr = NewCT_DbPr()
				if _bdebc := d.DecodeElement(_cceab.DbPr, &_ebdd); _bdebc != nil {
					return _bdebc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0061\u0070\u0050\u0072"}:
				_cceab.OlapPr = NewCT_OlapPr()
				if _efde := d.DecodeElement(_cceab.OlapPr, &_ebdd); _efde != nil {
					return _efde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062P\u0072"}:
				_cceab.WebPr = NewCT_WebPr()
				if _afabc := d.DecodeElement(_cceab.WebPr, &_ebdd); _afabc != nil {
					return _afabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0050\u0072"}:
				_cceab.TextPr = NewCT_TextPr()
				if _beff := d.DecodeElement(_cceab.TextPr, &_ebdd); _beff != nil {
					return _beff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"}:
				_cceab.Parameters = NewCT_Parameters()
				if _fbfc := d.DecodeElement(_cceab.Parameters, &_ebdd); _fbfc != nil {
					return _fbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cceab.ExtLst = NewCT_ExtensionList()
				if _fgfa := d.DecodeElement(_cceab.ExtLst, &_ebdd); _fgfa != nil {
					return _fgfa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e \u0025\u0076", _ebdd.Name)
				if _afad := d.Skip(); _afad != nil {
					return _afad
				}
			}
		case _b.EndElement:
			break _aadgc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_FieldsUsage and its children
func (_dabe *CT_FieldsUsage) Validate() error {
	return _dabe.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065")
}
func (_caffbc ST_CredMethod) Validate() error { return _caffbc.ValidateWithPath("") }
func (_bcfcd *QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcfcd.CT_QueryTable = *NewCT_QueryTable()
	for _, _dcgdc := range start.Attr {
		if _dcgdc.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_ebeecc, _ecgfba := _g.ParseBool(_dcgdc.Value)
			if _ecgfba != nil {
				return _ecgfba
			}
			_bcfcd.AdjustColumnWidthAttr = &_ebeecc
			continue
		}
		if _dcgdc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgeece, _dfbeff := _dcgdc.Value, error(nil)
			if _dfbeff != nil {
				return _dfbeff
			}
			_bcfcd.NameAttr = _fgeece
			continue
		}
		if _dcgdc.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_ffcff, _defgbg := _g.ParseBool(_dcgdc.Value)
			if _defgbg != nil {
				return _defgbg
			}
			_bcfcd.IntermediateAttr = &_ffcff
			continue
		}
		if _dcgdc.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_gagfe, _dfdeb := _g.ParseBool(_dcgdc.Value)
			if _dfdeb != nil {
				return _dfdeb
			}
			_bcfcd.RowNumbersAttr = &_gagfe
			continue
		}
		if _dcgdc.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_aaaaag, _egadac := _g.ParseUint(_dcgdc.Value, 10, 32)
			if _egadac != nil {
				return _egadac
			}
			_bcfcd.ConnectionIdAttr = uint32(_aaaaag)
			continue
		}
		if _dcgdc.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_caccf, _cfgcg := _g.ParseBool(_dcgdc.Value)
			if _cfgcg != nil {
				return _cfgcg
			}
			_bcfcd.BackgroundRefreshAttr = &_caccf
			continue
		}
		if _dcgdc.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_bdebde, _ggbccb := _g.ParseBool(_dcgdc.Value)
			if _ggbccb != nil {
				return _ggbccb
			}
			_bcfcd.RefreshOnLoadAttr = &_bdebde
			continue
		}
		if _dcgdc.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_acabg, _aaeca := _g.ParseBool(_dcgdc.Value)
			if _aaeca != nil {
				return _aaeca
			}
			_bcfcd.FillFormulasAttr = &_acabg
			continue
		}
		if _dcgdc.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bcdeb, _fcgfdb := _g.ParseBool(_dcgdc.Value)
			if _fcgfdb != nil {
				return _fcgfdb
			}
			_bcfcd.ApplyNumberFormatsAttr = &_bcdeb
			continue
		}
		if _dcgdc.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fagefa, _gbggg := _g.ParseBool(_dcgdc.Value)
			if _gbggg != nil {
				return _gbggg
			}
			_bcfcd.ApplyFontFormatsAttr = &_fagefa
			continue
		}
		if _dcgdc.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_eabggc, _bcdad := _g.ParseBool(_dcgdc.Value)
			if _bcdad != nil {
				return _bcdad
			}
			_bcfcd.FirstBackgroundRefreshAttr = &_eabggc
			continue
		}
		if _dcgdc.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_acgdb, _gcfgfb := _g.ParseUint(_dcgdc.Value, 10, 32)
			if _gcfgfb != nil {
				return _gcfgfb
			}
			_gfeee := uint32(_acgdb)
			_bcfcd.AutoFormatIdAttr = &_gfeee
			continue
		}
		if _dcgdc.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_gdfcd, _ecbfgf := _g.ParseBool(_dcgdc.Value)
			if _ecbfgf != nil {
				return _ecbfgf
			}
			_bcfcd.ApplyAlignmentFormatsAttr = &_gdfcd
			continue
		}
		if _dcgdc.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_afdfd, _efgac := _g.ParseBool(_dcgdc.Value)
			if _efgac != nil {
				return _efgac
			}
			_bcfcd.DisableRefreshAttr = &_afdfd
			continue
		}
		if _dcgdc.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_egeceb, _cbeed := _g.ParseBool(_dcgdc.Value)
			if _cbeed != nil {
				return _cbeed
			}
			_bcfcd.ApplyBorderFormatsAttr = &_egeceb
			continue
		}
		if _dcgdc.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_decbf, _bbcef := _g.ParseBool(_dcgdc.Value)
			if _bbcef != nil {
				return _bbcef
			}
			_bcfcd.PreserveFormattingAttr = &_decbf
			continue
		}
		if _dcgdc.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_acbgcgb, _faced := _g.ParseBool(_dcgdc.Value)
			if _faced != nil {
				return _faced
			}
			_bcfcd.ApplyPatternFormatsAttr = &_acbgcgb
			continue
		}
		if _dcgdc.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_bcfcd.GrowShrinkTypeAttr.UnmarshalXMLAttr(_dcgdc)
			continue
		}
		if _dcgdc.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_cadaeb, _cdegbg := _g.ParseBool(_dcgdc.Value)
			if _cdegbg != nil {
				return _cdegbg
			}
			_bcfcd.DisableEditAttr = &_cadaeb
			continue
		}
		if _dcgdc.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_fcfgee, _defbg := _g.ParseBool(_dcgdc.Value)
			if _defbg != nil {
				return _defbg
			}
			_bcfcd.HeadersAttr = &_fcfgee
			continue
		}
		if _dcgdc.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_ebfc, _dfgge := _g.ParseBool(_dcgdc.Value)
			if _dfgge != nil {
				return _dfgge
			}
			_bcfcd.RemoveDataOnSaveAttr = &_ebfc
			continue
		}
		if _dcgdc.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_beadbfb, _deeca := _g.ParseBool(_dcgdc.Value)
			if _deeca != nil {
				return _deeca
			}
			_bcfcd.ApplyWidthHeightFormatsAttr = &_beadbfb
			continue
		}
	}
_bafbfe:
	for {
		_cdbab, _dbeada := d.Token()
		if _dbeada != nil {
			return _dbeada
		}
		switch _aebba := _cdbab.(type) {
		case _b.StartElement:
			switch _aebba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_bcfcd.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _geded := d.DecodeElement(_bcfcd.QueryTableRefresh, &_aebba); _geded != nil {
					return _geded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcfcd.ExtLst = NewCT_ExtensionList()
				if _fbfgd := d.DecodeElement(_bcfcd.ExtLst, &_aebba); _fbfgd != nil {
					return _fbfgd
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0051\u0075\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _aebba.Name)
				if _fdcff := d.Skip(); _fdcff != nil {
					return _fdcff
				}
			}
		case _b.EndElement:
			break _bafbfe
		case _b.CharData:
		}
	}
	return nil
}
func (_ebddb *CT_HierarchyUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", _ebddb.HierarchyUsageAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebgge *CT_Selection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebgge.PaneAttr != ST_PaneUnset {
		_gdgeb, _fdedeb := _ebgge.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _fdedeb != nil {
			return _fdedeb
		}
		start.Attr = append(start.Attr, _gdgeb)
	}
	if _ebgge.ActiveCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_ebgge.ActiveCellAttr)})
	}
	if _ebgge.ActiveCellIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ebgge.ActiveCellIdAttr)})
	}
	if _ebgge.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_ebgge.SqrefAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ObjectPr and its children, prefixing error messages with path
func (_bfbfg *CT_ObjectPr) ValidateWithPath(path string) error {
	if _ceddc := _bfbfg.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _ceddc != nil {
		return _ceddc
	}
	return nil
}
func (_ggfae *CT_ExternalSheetData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbff := range start.Attr {
		if _cbff.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_aecgff, _dddcf := _g.ParseUint(_cbff.Value, 10, 32)
			if _dddcf != nil {
				return _dddcf
			}
			_ggfae.SheetIdAttr = uint32(_aecgff)
			continue
		}
		if _cbff.Name.Local == "\u0072\u0065\u0066r\u0065\u0073\u0068\u0045\u0072\u0072\u006f\u0072" {
			_cfaf, _bgafg := _g.ParseBool(_cbff.Value)
			if _bgafg != nil {
				return _bgafg
			}
			_ggfae.RefreshErrorAttr = &_cfaf
			continue
		}
	}
_ebfe:
	for {
		_acgdeb, _agdba := d.Token()
		if _agdba != nil {
			return _agdba
		}
		switch _fbcabe := _acgdeb.(type) {
		case _b.StartElement:
			switch _fbcabe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077"}:
				_dcade := NewCT_ExternalRow()
				if _eagbgd := d.DecodeElement(_dcade, &_fbcabe); _eagbgd != nil {
					return _eagbgd
				}
				_ggfae.Row = append(_ggfae.Row, _dcade)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0020\u0025\u0076", _fbcabe.Name)
				if _fgeac := d.Skip(); _fgeac != nil {
					return _fgeac
				}
			}
		case _b.EndElement:
			break _ebfe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishing and its children, prefixing error messages with path
func (_cbfde *CT_WebPublishing) ValidateWithPath(path string) error {
	if _ccbcf := _cbfde.TargetScreenSizeAttr.ValidateWithPath(path + "/\u0054\u0061\u0072\u0067et\u0053c\u0072\u0065\u0065\u006e\u0053i\u007a\u0065\u0041\u0074\u0074\u0072"); _ccbcf != nil {
		return _ccbcf
	}
	return nil
}

type CT_OleItem struct {

	// Object Name
	NameAttr string

	// Icon
	IconAttr *bool

	// Advise
	AdviseAttr *bool

	// Object is an Image
	PreferPicAttr *bool
}

func (_aabcc ST_OleUpdate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aabcc.String(), start)
}
func (_eefef ST_DataConsolidateFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbefc := _b.Attr{}
	_fbefc.Name = name
	switch _eefef {
	case ST_DataConsolidateFunctionUnset:
		_fbefc.Value = ""
	case ST_DataConsolidateFunctionAverage:
		_fbefc.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_DataConsolidateFunctionCount:
		_fbefc.Value = "\u0063\u006f\u0075n\u0074"
	case ST_DataConsolidateFunctionCountNums:
		_fbefc.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_DataConsolidateFunctionMax:
		_fbefc.Value = "\u006d\u0061\u0078"
	case ST_DataConsolidateFunctionMin:
		_fbefc.Value = "\u006d\u0069\u006e"
	case ST_DataConsolidateFunctionProduct:
		_fbefc.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_DataConsolidateFunctionStdDev:
		_fbefc.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_DataConsolidateFunctionStdDevp:
		_fbefc.Value = "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case ST_DataConsolidateFunctionSum:
		_fbefc.Value = "\u0073\u0075\u006d"
	case ST_DataConsolidateFunctionVar:
		_fbefc.Value = "\u0076\u0061\u0072"
	case ST_DataConsolidateFunctionVarp:
		_fbefc.Value = "\u0076\u0061\u0072\u0070"
	}
	return _fbefc, nil
}

type CT_FontName struct {

	// String Value
	ValAttr string
}

func NewCT_DiscretePr() *CT_DiscretePr { _afdb := &CT_DiscretePr{}; return _afdb }

type CT_ExternalSheetDataSet struct {

	// External Sheet Data Set
	SheetData []*CT_ExternalSheetData
}

// ValidateWithPath validates the CT_ExternalBook and its children, prefixing error messages with path
func (_fbgc *CT_ExternalBook) ValidateWithPath(path string) error {
	if _fbgc.SheetNames != nil {
		if _bdgdf := _fbgc.SheetNames.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"); _bdgdf != nil {
			return _bdgdf
		}
	}
	if _fbgc.DefinedNames != nil {
		if _fdcdb := _fbgc.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _fdcdb != nil {
			return _fdcdb
		}
	}
	if _fbgc.SheetDataSet != nil {
		if _cedca := _fbgc.SheetDataSet.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"); _cedca != nil {
			return _cedca
		}
	}
	return nil
}
func (_abgbbe ST_ExternalConnectionType) String() string {
	switch _abgbbe {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u0074\u0065\u0078\u0074"
	case 3:
		return "\u004d\u0044\u0059"
	case 4:
		return "\u0044\u004d\u0059"
	case 5:
		return "\u0059\u004d\u0044"
	case 6:
		return "\u004d\u0059\u0044"
	case 7:
		return "\u0044\u0059\u004d"
	case 8:
		return "\u0059\u0044\u004d"
	case 9:
		return "\u0073\u006b\u0069\u0070"
	case 10:
		return "\u0045\u004d\u0044"
	}
	return ""
}
func (_cggaf *CT_RevisionCellChange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cggaf.SIdAttr)})
	if _cggaf.OdxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0064\u0078\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.OdxfAttr))})
	}
	if _cggaf.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.XfDxfAttr))})
	}
	if _cggaf.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.SAttr))})
	}
	if _cggaf.DxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.DxfAttr))})
	}
	if _cggaf.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cggaf.NumFmtIdAttr)})
	}
	if _cggaf.QuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.QuotePrefixAttr))})
	}
	if _cggaf.OldQuotePrefixAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0051\u0075\u006f\u0074\u0065\u0050r\u0065\u0066\u0069\u0078"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.OldQuotePrefixAttr))})
	}
	if _cggaf.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.PhAttr))})
	}
	if _cggaf.OldPhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064P\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.OldPhAttr))})
	}
	if _cggaf.EndOfListFormulaUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004ffL\u0069\u0073\u0074\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0055\u0070\u0064\u0061t\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.EndOfListFormulaUpdateAttr))})
	}
	if _cggaf.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cggaf.RIdAttr)})
	}
	if _cggaf.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.UaAttr))})
	}
	if _cggaf.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cggaf.RaAttr))})
	}
	e.EncodeToken(start)
	if _cggaf.Oc != nil {
		_bcdbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0063"}}
		e.EncodeElement(_cggaf.Oc, _bcdbd)
	}
	_aadaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003an\u0063"}}
	e.EncodeElement(_cggaf.Nc, _aadaa)
	if _cggaf.Odxf != nil {
		_bbbecg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006f\u0064\u0078\u0066"}}
		e.EncodeElement(_cggaf.Odxf, _bbbecg)
	}
	if _cggaf.Ndxf != nil {
		_ggfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0064\u0078\u0066"}}
		e.EncodeElement(_cggaf.Ndxf, _ggfb)
	}
	if _cggaf.ExtLst != nil {
		_gfdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cggaf.ExtLst, _gfdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbbfa *CT_HierarchyUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feabg := range start.Attr {
		if _feabg.Name.Local == "\u0068\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065" {
			_efaccc, _adebd := _g.ParseInt(_feabg.Value, 10, 32)
			if _adebd != nil {
				return _adebd
			}
			_fbbfa.HierarchyUsageAttr = int32(_efaccc)
			continue
		}
	}
	for {
		_beabb, _aaggbdf := d.Token()
		if _aaggbdf != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0055\u0073\u0061\u0067\u0065: \u0025\u0073", _aaggbdf)
		}
		if _bcfb, _gcdb := _beabb.(_b.EndElement); _gcdb && _bcfb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Fills struct {

	// Fill Count
	CountAttr *uint32

	// Fill
	Fill []*CT_Fill
}

// ValidateWithPath validates the CT_CalculatedItems and its children, prefixing error messages with path
func (_cgdf *CT_CalculatedItems) ValidateWithPath(path string) error {
	for _dba, _dded := range _cgdf.CalculatedItem {
		if _ecdg := _dded.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0061lc\u0075l\u0061\u0074\u0065\u0064\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _dba)); _ecdg != nil {
			return _ecdg
		}
	}
	return nil
}
func NewVolTypes() *VolTypes {
	_bgcggg := &VolTypes{}
	_bgcggg.CT_VolTypes = *NewCT_VolTypes()
	return _bgcggg
}
func NewCT_PivotDimension() *CT_PivotDimension { _bfgee := &CT_PivotDimension{}; return _bfgee }
func (_adeeb ST_CellFormulaType) String() string {
	switch _adeeb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0061\u0072\u0072a\u0079"
	case 3:
		return "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case 4:
		return "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return ""
}
func (_gfdeeb *CT_Set) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfdeeb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gfdeeb.CountAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0052\u0061\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0076", _gfdeeb.MaxRankAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _gfdeeb.SetDefinitionAttr)})
	if _gfdeeb.SortTypeAttr != ST_SortTypeUnset {
		_agfbg, _fafea := _gfdeeb.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _fafea != nil {
			return _fafea
		}
		start.Attr = append(start.Attr, _agfbg)
	}
	if _gfdeeb.QueryFailedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gfdeeb.QueryFailedAttr))})
	}
	e.EncodeToken(start)
	if _gfdeeb.Tpls != nil {
		_fgfde := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _ebbgf := range _gfdeeb.Tpls {
			e.EncodeElement(_ebbgf, _fgfde)
		}
	}
	if _gfdeeb.SortByTuple != nil {
		_ceaae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006f\u0072\u0074\u0042\u0079T\u0075\u0070\u006c\u0065"}}
		e.EncodeElement(_gfdeeb.SortByTuple, _ceaae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcgab *CT_RowHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcgab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dcgab.CountAttr)})
	}
	e.EncodeToken(start)
	_dcgbbb := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _ecdgb := range _dcgab.RowHierarchyUsage {
		e.EncodeElement(_ecdgb, _dcgbbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupMember and its children
func (_faagg *CT_GroupMember) Validate() error {
	return _faagg.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072")
}
func (_fbfga ST_PageOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbfga.String(), start)
}

type CT_IntProperty struct {

	// Value
	ValAttr int32
}

func (_befae *CT_TableColumns) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _befae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_befae.CountAttr)})
	}
	e.EncodeToken(start)
	_dfccf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e"}}
	for _, _fbbaa := range _befae.TableColumn {
		e.EncodeElement(_fbbaa, _dfccf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_NumFmt and its children
func (_fcdc *CT_NumFmt) Validate() error {
	return _fcdc.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt")
}

// ValidateWithPath validates the CT_ExternalDefinedName and its children, prefixing error messages with path
func (_abbgc *CT_ExternalDefinedName) ValidateWithPath(path string) error { return nil }
func (_cfgfeg *CT_MetadataType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _cfgfeg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _cfgfeg.MinSupportedVersionAttr)})
	if _cfgfeg.GhostRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.GhostRowAttr))})
	}
	if _cfgfeg.GhostColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.GhostColAttr))})
	}
	if _cfgfeg.EditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.EditAttr))})
	}
	if _cfgfeg.DeleteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.DeleteAttr))})
	}
	if _cfgfeg.CopyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.CopyAttr))})
	}
	if _cfgfeg.PasteAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteAllAttr))})
	}
	if _cfgfeg.PasteFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteFormulasAttr))})
	}
	if _cfgfeg.PasteValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteValuesAttr))})
	}
	if _cfgfeg.PasteFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteFormatsAttr))})
	}
	if _cfgfeg.PasteCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteCommentsAttr))})
	}
	if _cfgfeg.PasteDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteDataValidationAttr))})
	}
	if _cfgfeg.PasteBordersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteBordersAttr))})
	}
	if _cfgfeg.PasteColWidthsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteColWidthsAttr))})
	}
	if _cfgfeg.PasteNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.PasteNumberFormatsAttr))})
	}
	if _cfgfeg.MergeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072g\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.MergeAttr))})
	}
	if _cfgfeg.SplitFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.SplitFirstAttr))})
	}
	if _cfgfeg.SplitAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.SplitAllAttr))})
	}
	if _cfgfeg.RowColShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.RowColShiftAttr))})
	}
	if _cfgfeg.ClearAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.ClearAllAttr))})
	}
	if _cfgfeg.ClearFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.ClearFormatsAttr))})
	}
	if _cfgfeg.ClearContentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.ClearContentsAttr))})
	}
	if _cfgfeg.ClearCommentsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.ClearCommentsAttr))})
	}
	if _cfgfeg.AssignAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0073\u0069\u0067\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.AssignAttr))})
	}
	if _cfgfeg.CoerceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0065\u0072\u0063\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.CoerceAttr))})
	}
	if _cfgfeg.AdjustAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.AdjustAttr))})
	}
	if _cfgfeg.CellMetaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfgfeg.CellMetaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PageItem and its children
func (_bafde *CT_PageItem) Validate() error {
	return _bafde.ValidateWithPath("C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_DataConsolidate and its children
func (_fdcd *CT_DataConsolidate) Validate() error {
	return _fdcd.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065")
}
func (_ffef *CT_CacheField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _ffef.NameAttr)})
	if _ffef.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.CaptionAttr)})
	}
	if _ffef.PropertyNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006fp\u0065\u0072\u0074\u0079\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.PropertyNameAttr)})
	}
	if _ffef.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffef.ServerFieldAttr))})
	}
	if _ffef.UniqueListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004c\u0069\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffef.UniqueListAttr))})
	}
	if _ffef.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.NumFmtIdAttr)})
	}
	if _ffef.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.FormulaAttr)})
	}
	if _ffef.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.SqlTypeAttr)})
	}
	if _ffef.HierarchyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0065\u0072\u0061\u0072\u0063\u0068y"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.HierarchyAttr)})
	}
	if _ffef.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.LevelAttr)})
	}
	if _ffef.DatabaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0062\u0061\u0073\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffef.DatabaseFieldAttr))})
	}
	if _ffef.MappingCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070p\u0069\u006e\u0067\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffef.MappingCountAttr)})
	}
	if _ffef.MemberPropertyFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0046\u0069\u0065\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffef.MemberPropertyFieldAttr))})
	}
	e.EncodeToken(start)
	if _ffef.SharedItems != nil {
		_aaee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ffef.SharedItems, _aaee)
	}
	if _ffef.FieldGroup != nil {
		_ggdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"}}
		e.EncodeElement(_ffef.FieldGroup, _ggdb)
	}
	if _ffef.MpMap != nil {
		_cce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u004d\u0061\u0070"}}
		for _, _acg := range _ffef.MpMap {
			e.EncodeElement(_acg, _cce)
		}
	}
	if _ffef.ExtLst != nil {
		_agef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffef.ExtLst, _agef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_TupleCache() *CT_TupleCache { _fdcfdg := &CT_TupleCache{}; return _fdcfdg }
func (_gbdaff *CT_SharedUser) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gbdaff.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gbdaff.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gbdaff.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gbdaff.DateTimeAttr)})
	e.EncodeToken(start)
	if _gbdaff.ExtLst != nil {
		_cfgdga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gbdaff.ExtLst, _cfgdga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_X() *CT_X { _fafbde := &CT_X{}; return _fafbde }

type CT_PCDKPIs struct {

	// KPI Count
	CountAttr *uint32

	// OLAP KPI
	Kpi []*CT_PCDKPI
}

func (_fdadg ST_BorderStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_efffb := _b.Attr{}
	_efffb.Name = name
	switch _fdadg {
	case ST_BorderStyleUnset:
		_efffb.Value = ""
	case ST_BorderStyleNone:
		_efffb.Value = "\u006e\u006f\u006e\u0065"
	case ST_BorderStyleThin:
		_efffb.Value = "\u0074\u0068\u0069\u006e"
	case ST_BorderStyleMedium:
		_efffb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d"
	case ST_BorderStyleDashed:
		_efffb.Value = "\u0064\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDotted:
		_efffb.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_BorderStyleThick:
		_efffb.Value = "\u0074\u0068\u0069c\u006b"
	case ST_BorderStyleDouble:
		_efffb.Value = "\u0064\u006f\u0075\u0062\u006c\u0065"
	case ST_BorderStyleHair:
		_efffb.Value = "\u0068\u0061\u0069\u0072"
	case ST_BorderStyleMediumDashed:
		_efffb.Value = "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case ST_BorderStyleDashDot:
		_efffb.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDot:
		_efffb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_BorderStyleDashDotDot:
		_efffb.Value = "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleMediumDashDotDot:
		_efffb.Value = "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_BorderStyleSlantDashDot:
		_efffb.Value = "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return _efffb, nil
}

type EG_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}

func (_edgda ST_RevisionAction) ValidateWithPath(path string) error {
	switch _edgda {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edgda))
	}
	return nil
}
func (_ggdag *CT_MemberProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gacfa := range start.Attr {
		if _gacfa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cgeee, _afgc := _gacfa.Value, error(nil)
			if _afgc != nil {
				return _afgc
			}
			_ggdag.NameAttr = &_cgeee
			continue
		}
		if _gacfa.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c" {
			_debbbc, _aebgf := _g.ParseBool(_gacfa.Value)
			if _aebgf != nil {
				return _aebgf
			}
			_ggdag.ShowCellAttr = &_debbbc
			continue
		}
		if _gacfa.Name.Local == "\u0073h\u006f\u0077\u0054\u0069\u0070" {
			_cbagb, _accbe := _g.ParseBool(_gacfa.Value)
			if _accbe != nil {
				return _accbe
			}
			_ggdag.ShowTipAttr = &_cbagb
			continue
		}
		if _gacfa.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_aceee, _fcegde := _g.ParseBool(_gacfa.Value)
			if _fcegde != nil {
				return _fcegde
			}
			_ggdag.ShowAsCaptionAttr = &_aceee
			continue
		}
		if _gacfa.Name.Local == "\u006ea\u006d\u0065\u004c\u0065\u006e" {
			_gfege, _eabfab := _g.ParseUint(_gacfa.Value, 10, 32)
			if _eabfab != nil {
				return _eabfab
			}
			_gdcbc := uint32(_gfege)
			_ggdag.NameLenAttr = &_gdcbc
			continue
		}
		if _gacfa.Name.Local == "\u0070\u0050\u006f\u0073" {
			_cgafa, _gaebe := _g.ParseUint(_gacfa.Value, 10, 32)
			if _gaebe != nil {
				return _gaebe
			}
			_fcfe := uint32(_cgafa)
			_ggdag.PPosAttr = &_fcfe
			continue
		}
		if _gacfa.Name.Local == "\u0070\u004c\u0065\u006e" {
			_cagaf, _begae := _g.ParseUint(_gacfa.Value, 10, 32)
			if _begae != nil {
				return _begae
			}
			_ebbfb := uint32(_cagaf)
			_ggdag.PLenAttr = &_ebbfb
			continue
		}
		if _gacfa.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_ggbab, _fcgbgf := _g.ParseUint(_gacfa.Value, 10, 32)
			if _fcgbgf != nil {
				return _fcgbgf
			}
			_caaeed := uint32(_ggbab)
			_ggdag.LevelAttr = &_caaeed
			continue
		}
		if _gacfa.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_fffgg, _afede := _g.ParseUint(_gacfa.Value, 10, 32)
			if _afede != nil {
				return _afede
			}
			_ggdag.FieldAttr = uint32(_fffgg)
			continue
		}
	}
	for {
		_bgggg, _afeaf := d.Token()
		if _afeaf != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _afeaf)
		}
		if _bbddc, _cbgga := _bgggg.(_b.EndElement); _cbgga && _bbddc.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_LevelGroup() *CT_LevelGroup {
	_beadb := &CT_LevelGroup{}
	_beadb.GroupMembers = NewCT_GroupMembers()
	return _beadb
}
func NewCT_Macrosheet() *CT_Macrosheet {
	_eddce := &CT_Macrosheet{}
	_eddce.SheetData = NewCT_SheetData()
	return _eddce
}
func NewCT_WebPublishing() *CT_WebPublishing { _ffccc := &CT_WebPublishing{}; return _ffccc }
func (_baafb ST_PatternType) ValidateWithPath(path string) error {
	switch _baafb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baafb))
	}
	return nil
}
func (_efabb *CT_Rst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _efabb.T != nil {
		_dbcbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		_f.AddPreserveSpaceAttr(&_dbcbd, *_efabb.T)
		e.EncodeElement(_efabb.T, _dbcbd)
	}
	if _efabb.R != nil {
		_egdfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _cbbdb := range _efabb.R {
			e.EncodeElement(_cbbdb, _egdfc)
		}
	}
	if _efabb.RPh != nil {
		_cdgfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0068"}}
		for _, _gegcdb := range _efabb.RPh {
			e.EncodeElement(_gegcdb, _cdgfg)
		}
	}
	if _efabb.PhoneticPr != nil {
		_cbdaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_efabb.PhoneticPr, _cbdaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataValidationType byte

const (
	ST_CommentsUnset             ST_Comments = 0
	ST_CommentsCommNone          ST_Comments = 1
	ST_CommentsCommIndicator     ST_Comments = 2
	ST_CommentsCommIndAndComment ST_Comments = 3
)

// ValidateWithPath validates the CT_IconFilter and its children, prefixing error messages with path
func (_abced *CT_IconFilter) ValidateWithPath(path string) error {
	if _abced.IconSetAttr == ST_IconSetTypeUnset {
		return _a.Errorf("%\u0073\u002f\u0049\u0063\u006f\u006eS\u0065\u0074\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _affdb := _abced.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _affdb != nil {
		return _affdb
	}
	return nil
}

type CT_Connection struct {

	// Connection Id
	IdAttr uint32

	// Source Database File
	SourceFileAttr *string

	// Connection File
	OdcFileAttr *string

	// Keep Connection Open
	KeepAliveAttr *bool

	// Automatic Refresh Interval
	IntervalAttr *uint32

	// Connection Name
	NameAttr *string

	// Connection Description
	DescriptionAttr *string

	// Database Source Type
	TypeAttr *uint32

	// Reconnection Method
	ReconnectionMethodAttr *uint32

	// Last Refresh Version
	RefreshedVersionAttr uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// Save Password
	SavePasswordAttr *bool

	// New Connection
	NewAttr *bool

	// Deleted Connection
	DeletedAttr *bool

	// Only Use Connection File
	OnlyUseConnectionFileAttr *bool

	// Background Refresh
	BackgroundAttr *bool

	// Refresh on Open
	RefreshOnLoadAttr *bool

	// Save Data
	SaveDataAttr *bool

	// Reconnection Method
	CredentialsAttr ST_CredMethod

	// SSO Id
	SingleSignOnIdAttr *string

	// Database Properties
	DbPr *CT_DbPr

	// OLAP Properties
	OlapPr *CT_OlapPr

	// Web Query Properties
	WebPr *CT_WebPr

	// Text Import Settings
	TextPr *CT_TextPr

	// Query Parameters
	Parameters *CT_Parameters

	// Future Feature Data Storage
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_DdeValue and its children
func (_dfeab *CT_DdeValue) Validate() error {
	return _dfeab.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065")
}

type CT_Row struct {

	// Row Index
	RAttr *uint32

	// Spans
	SpansAttr *ST_CellSpans

	// Style Index
	SAttr *uint32

	// Custom Format
	CustomFormatAttr *bool

	// Row Height
	HtAttr *float64

	// Hidden
	HiddenAttr *bool

	// Custom Height
	CustomHeightAttr *bool

	// Outline Level
	OutlineLevelAttr *uint8

	// Collapsed
	CollapsedAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom
	ThickBotAttr *bool

	// Show Phonetic
	PhAttr *bool

	// Cell
	C []*CT_Cell

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cdeef ST_Objects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdeef.String(), start)
}

type CT_FontScheme struct {

	// Font Scheme
	ValAttr ST_FontScheme
}

func (_ebcb *CT_ColorFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebcb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ebcb.DxfIdAttr)})
	}
	if _ebcb.CellColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebcb.CellColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_FileTypeUnset ST_FileType = 0
	ST_FileTypeMac   ST_FileType = 1
	ST_FileTypeWin   ST_FileType = 2
	ST_FileTypeDos   ST_FileType = 3
	ST_FileTypeLin   ST_FileType = 4
	ST_FileTypeOther ST_FileType = 5
)

// ValidateWithPath validates the CT_RangeSets and its children, prefixing error messages with path
func (_bcfgb *CT_RangeSets) ValidateWithPath(path string) error {
	for _eeegae, _agacg := range _bcfgb.RangeSet {
		if _gaaeb := _agacg.ValidateWithPath(_a.Sprintf("\u0025s\u002fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _eeegae)); _gaaeb != nil {
			return _gaaeb
		}
	}
	return nil
}

type CT_Chartsheet struct {

	// Chart Sheet Properties
	SheetPr *CT_ChartsheetPr

	// Chart Sheet Views
	SheetViews *CT_ChartsheetViews

	// Chart Sheet Protection
	SheetProtection *CT_ChartsheetProtection

	// Custom Chart Sheet Views
	CustomSheetViews *CT_CustomChartsheetViews
	PageMargins      *CT_PageMargins
	PageSetup        *CT_CsPageSetup
	HeaderFooter     *CT_HeaderFooter

	// Drawing
	Drawing       *CT_Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Reference in Header Footer
	LegacyDrawingHF *CT_LegacyDrawing

	// Drawing Reference in Header Footer
	DrawingHF       *CT_DrawingHF
	Picture         *CT_SheetBackgroundPicture
	WebPublishItems *CT_WebPublishItems
	ExtLst          *CT_ExtensionList
}

func NewCT_Boolean() *CT_Boolean { _beeg := &CT_Boolean{}; return _beeg }

// Validate validates the CT_Items and its children
func (_effg *CT_Items) Validate() error {
	return _effg.ValidateWithPath("\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073")
}

// Validate validates the CT_ConditionalFormats and its children
func (_cbaa *CT_ConditionalFormats) Validate() error {
	return _cbaa.ValidateWithPath("C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073")
}

// Validate validates the CT_PCDSDTCEntries and its children
func (_dcdfg *CT_PCDSDTCEntries) Validate() error {
	return _dcdfg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_MetadataType and its children, prefixing error messages with path
func (_bdfed *CT_MetadataType) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_CacheHierarchy and its children, prefixing error messages with path
func (_gbcbd *CT_CacheHierarchy) ValidateWithPath(path string) error {
	if _gbcbd.FieldsUsage != nil {
		if _faad := _gbcbd.FieldsUsage.ValidateWithPath(path + "\u002f\u0046\u0069e\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"); _faad != nil {
			return _faad
		}
	}
	if _gbcbd.GroupLevels != nil {
		if _bec := _gbcbd.GroupLevels.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"); _bec != nil {
			return _bec
		}
	}
	if _gbcbd.ExtLst != nil {
		if _gacac := _gbcbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gacac != nil {
			return _gacac
		}
	}
	return nil
}
func (_begaee ST_CfvoType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_begaee.String(), start)
}
func (_cdc *CT_Break) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cdc.IdAttr)})
	}
	if _cdc.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_cdc.MinAttr)})
	}
	if _cdc.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _a.Sprintf("\u0025\u0076", *_cdc.MaxAttr)})
	}
	if _cdc.ManAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cdc.ManAttr))})
	}
	if _cdc.PtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cdc.PtAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Filter() *CT_Filter { _bfgaa := &CT_Filter{}; return _bfgaa }
func (_dfaff *CT_OleLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dfaff.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u0067\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dfaff.ProgIdAttr)})
	e.EncodeToken(start)
	if _dfaff.OleItems != nil {
		_efbaa := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_dfaff.OleItems, _efbaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cebgg *CT_DrawingHF) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cebgg.IdAttr)})
	if _cebgg.LhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LhoAttr)})
	}
	if _cebgg.LheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LheAttr)})
	}
	if _cebgg.LhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0068\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LhfAttr)})
	}
	if _cebgg.ChoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.ChoAttr)})
	}
	if _cebgg.CheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.CheAttr)})
	}
	if _cebgg.ChfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.ChfAttr)})
	}
	if _cebgg.RhoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RhoAttr)})
	}
	if _cebgg.RheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RheAttr)})
	}
	if _cebgg.RhfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0068\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RhfAttr)})
	}
	if _cebgg.LfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LfoAttr)})
	}
	if _cebgg.LfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LfeAttr)})
	}
	if _cebgg.LffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0066\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.LffAttr)})
	}
	if _cebgg.CfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.CfoAttr)})
	}
	if _cebgg.CfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.CfeAttr)})
	}
	if _cebgg.CffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.CffAttr)})
	}
	if _cebgg.RfoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RfoAttr)})
	}
	if _cebgg.RfeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RfeAttr)})
	}
	if _cebgg.RffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0066\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cebgg.RffAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffdf *CT_DateTime) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _ffdf.VAttr)})
	if _ffdf.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffdf.UAttr))})
	}
	if _ffdf.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffdf.FAttr))})
	}
	if _ffdf.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_ffdf.CAttr)})
	}
	if _ffdf.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_ffdf.CpAttr)})
	}
	e.EncodeToken(start)
	if _ffdf.X != nil {
		_cfgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _bagc := range _ffdf.X {
			e.EncodeElement(_bagc, _cfgb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_colItems and its children, prefixing error messages with path
func (_aafcdg *CT_colItems) ValidateWithPath(path string) error {
	for _bgfgg, _gececc := range _aafcdg.I {
		if _gacdf := _gececc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _bgfgg)); _gacdf != nil {
			return _gacdf
		}
	}
	return nil
}
func (_gcbfeb *CT_TablePart) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dffd := range start.Attr {
		if _dffd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dffd.Name.Local == "\u0069\u0064" || _dffd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dffd.Name.Local == "\u0069\u0064" {
			_fffcc, _gfaacc := _dffd.Value, error(nil)
			if _gfaacc != nil {
				return _gfaacc
			}
			_gcbfeb.IdAttr = _fffcc
			continue
		}
	}
	for {
		_cfbdg, _dfgbe := d.Token()
		if _dfgbe != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061b\u006c\u0065\u0050\u0061\u0072\u0074\u003a\u0020\u0025\u0073", _dfgbe)
		}
		if _caedg, _ecfdf := _cfbdg.(_b.EndElement); _ecfdf && _caedg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fffac *CT_CalcChain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
	for _, _cggg := range _fffac.C {
		e.EncodeElement(_cggg, _gef)
	}
	if _fffac.ExtLst != nil {
		_egbe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fffac.ExtLst, _egbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eddcec *ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b"
	return _eddcec.CT_ExternalLink.MarshalXML(e, start)
}

type ST_SheetState byte
type CT_DefinedName struct {
	NameAttr              string
	CommentAttr           *string
	CustomMenuAttr        *string
	DescriptionAttr       *string
	HelpAttr              *string
	StatusBarAttr         *string
	LocalSheetIdAttr      *uint32
	HiddenAttr            *bool
	FunctionAttr          *bool
	VbProcedureAttr       *bool
	XlmAttr               *bool
	FunctionGroupIdAttr   *uint32
	ShortcutKeyAttr       *string
	PublishToServerAttr   *bool
	WorkbookParameterAttr *bool
	Content               string
}

const (
	ST_CellCommentsUnset       ST_CellComments = 0
	ST_CellCommentsNone        ST_CellComments = 1
	ST_CellCommentsAsDisplayed ST_CellComments = 2
	ST_CellCommentsAtEnd       ST_CellComments = 3
)

// ValidateWithPath validates the CT_CacheField and its children, prefixing error messages with path
func (_eecd *CT_CacheField) ValidateWithPath(path string) error {
	if _eecd.SharedItems != nil {
		if _bce := _eecd.SharedItems.ValidateWithPath(path + "\u002f\u0053\u0068a\u0072\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _bce != nil {
			return _bce
		}
	}
	if _eecd.FieldGroup != nil {
		if _gcec := _eecd.FieldGroup.ValidateWithPath(path + "/\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070"); _gcec != nil {
			return _gcec
		}
	}
	for _afb, _bbage := range _eecd.MpMap {
		if _fffae := _bbage.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fM\u0070\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _afb)); _fffae != nil {
			return _fffae
		}
	}
	if _eecd.ExtLst != nil {
		if _cea := _eecd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cea != nil {
			return _cea
		}
	}
	return nil
}

// Validate validates the CT_CellSmartTags and its children
func (_affb *CT_CellSmartTags) Validate() error {
	return _affb.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}

// ValidateWithPath validates the CT_Revisions and its children, prefixing error messages with path
func (_bfgf *CT_Revisions) ValidateWithPath(path string) error {
	for _egdgg, _gegcd := range _bfgf.Rrc {
		if _dbgdfa := _gegcd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0072\u0063\u005b\u0025\u0064\u005d", path, _egdgg)); _dbgdfa != nil {
			return _dbgdfa
		}
	}
	for _egbcg, _abecg := range _bfgf.Rm {
		if _bbdae := _abecg.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0052\u006d\u005b\u0025\u0064]", path, _egbcg)); _bbdae != nil {
			return _bbdae
		}
	}
	for _ccbgf, _fdgcf := range _bfgf.Rcv {
		if _gceeg := _fdgcf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0076\u005b\u0025\u0064\u005d", path, _ccbgf)); _gceeg != nil {
			return _gceeg
		}
	}
	for _daaaac, _cbaef := range _bfgf.Rsnm {
		if _debcd := _cbaef.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0073\u006e\u006d\u005b\u0025\u0064\u005d", path, _daaaac)); _debcd != nil {
			return _debcd
		}
	}
	for _bfdaf, _eaccd := range _bfgf.Ris {
		if _eddfg := _eaccd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0069\u0073\u005b\u0025\u0064\u005d", path, _bfdaf)); _eddfg != nil {
			return _eddfg
		}
	}
	for _badcg, _ggdbd := range _bfgf.Rcc {
		if _eegddce := _ggdbd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _badcg)); _eegddce != nil {
			return _eegddce
		}
	}
	for _eccea, _acbdb := range _bfgf.Rfmt {
		if _dbce := _acbdb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _eccea)); _dbce != nil {
			return _dbce
		}
	}
	for _fcafd, _dgaee := range _bfgf.Raf {
		if _bbceg := _dgaee.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0061\u0066\u005b\u0025\u0064\u005d", path, _fcafd)); _bbceg != nil {
			return _bbceg
		}
	}
	for _babgc, _cbdedg := range _bfgf.Rdn {
		if _fffdg := _cbdedg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0064\u006e\u005b\u0025\u0064\u005d", path, _babgc)); _fffdg != nil {
			return _fffdg
		}
	}
	for _eebef, _efdcd := range _bfgf.Rcmt {
		if _bfggd := _efdcd.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0063\u006d\u0074\u005b\u0025\u0064\u005d", path, _eebef)); _bfggd != nil {
			return _bfggd
		}
	}
	for _faeaf, _eaadff := range _bfgf.Rqt {
		if _fbbea := _eaadff.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0071\u0074\u005b\u0025\u0064\u005d", path, _faeaf)); _fbbea != nil {
			return _fbbea
		}
	}
	for _cebge, _gedfe := range _bfgf.Rcft {
		if _cgceg := _gedfe.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0063\u0066\u0074\u005b\u0025\u0064\u005d", path, _cebge)); _cgceg != nil {
			return _cgceg
		}
	}
	return nil
}
func NewCT_QueryTableField() *CT_QueryTableField { _cbcba := &CT_QueryTableField{}; return _cbcba }
func (_ecfcd *CT_PivotFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ecfcd.TypeAttr = ST_PivotFilterType(1)
	_ecfcd.AutoFilter = NewCT_AutoFilter()
	for _, _gfaff := range start.Attr {
		if _gfaff.Name.Local == "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064" {
			_begbf, _bbeba := _g.ParseUint(_gfaff.Value, 10, 32)
			if _bbeba != nil {
				return _bbeba
			}
			_fbdaa := uint32(_begbf)
			_ecfcd.IMeasureFldAttr = &_fbdaa
			continue
		}
		if _gfaff.Name.Local == "\u006d\u0070\u0046l\u0064" {
			_bfdc, _cfdb := _g.ParseUint(_gfaff.Value, 10, 32)
			if _cfdb != nil {
				return _cfdb
			}
			_ebbdaf := uint32(_bfdc)
			_ecfcd.MpFldAttr = &_ebbdaf
			continue
		}
		if _gfaff.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ecfcd.TypeAttr.UnmarshalXMLAttr(_gfaff)
			continue
		}
		if _gfaff.Name.Local == "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r" {
			_bcccg, _ffcag := _g.ParseInt(_gfaff.Value, 10, 32)
			if _ffcag != nil {
				return _ffcag
			}
			_bcgfaf := int32(_bcccg)
			_ecfcd.EvalOrderAttr = &_bcgfaf
			continue
		}
		if _gfaff.Name.Local == "\u0069\u0064" {
			_fecca, _aaaae := _g.ParseUint(_gfaff.Value, 10, 32)
			if _aaaae != nil {
				return _aaaae
			}
			_ecfcd.IdAttr = uint32(_fecca)
			continue
		}
		if _gfaff.Name.Local == "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072" {
			_edgae, _bffdg := _g.ParseUint(_gfaff.Value, 10, 32)
			if _bffdg != nil {
				return _bffdg
			}
			_cbcbb := uint32(_edgae)
			_ecfcd.IMeasureHierAttr = &_cbcbb
			continue
		}
		if _gfaff.Name.Local == "\u0066\u006c\u0064" {
			_edcac, _bdafe := _g.ParseUint(_gfaff.Value, 10, 32)
			if _bdafe != nil {
				return _bdafe
			}
			_ecfcd.FldAttr = uint32(_edcac)
			continue
		}
		if _gfaff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gccab, _fcgab := _gfaff.Value, error(nil)
			if _fcgab != nil {
				return _fcgab
			}
			_ecfcd.NameAttr = &_gccab
			continue
		}
		if _gfaff.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_cfdbe, _ecafec := _gfaff.Value, error(nil)
			if _ecafec != nil {
				return _ecafec
			}
			_ecfcd.DescriptionAttr = &_cfdbe
			continue
		}
		if _gfaff.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031" {
			_gfgcf, _dcgdf := _gfaff.Value, error(nil)
			if _dcgdf != nil {
				return _dcgdf
			}
			_ecfcd.StringValue1Attr = &_gfgcf
			continue
		}
		if _gfaff.Name.Local == "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032" {
			_ggaea, _ffaf := _gfaff.Value, error(nil)
			if _ffaf != nil {
				return _ffaf
			}
			_ecfcd.StringValue2Attr = &_ggaea
			continue
		}
	}
_gbddc:
	for {
		_ebdee, _ggagg := d.Token()
		if _ggagg != nil {
			return _ggagg
		}
		switch _aecab := _ebdee.(type) {
		case _b.StartElement:
			switch _aecab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				if _dfgcg := d.DecodeElement(_ecfcd.AutoFilter, &_aecab); _dfgcg != nil {
					return _dfgcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecfcd.ExtLst = NewCT_ExtensionList()
				if _aaaebe := d.DecodeElement(_ecfcd.ExtLst, &_aecab); _aaaebe != nil {
					return _aaaebe
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069l\u0074e\u0072\u0020\u0025\u0076", _aecab.Name)
				if _eabdb := d.Skip(); _eabdb != nil {
					return _eabdb
				}
			}
		case _b.EndElement:
			break _gbddc
		case _b.CharData:
		}
	}
	return nil
}
func (_ccgf *CT_CalcCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccgf.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_ccgf.RAttr)})
	}
	if _ccgf.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_ccgf.RefAttr)})
	}
	if _ccgf.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_ccgf.IAttr)})
	}
	if _ccgf.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgf.SAttr))})
	}
	if _ccgf.LAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgf.LAttr))})
	}
	if _ccgf.TAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgf.TAttr))})
	}
	if _ccgf.AAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ccgf.AAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CustomSheetViews and its children, prefixing error messages with path
func (_acba *CT_CustomSheetViews) ValidateWithPath(path string) error {
	for _afcg, _dcec := range _acba.CustomSheetView {
		if _edba := _dcec.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u005b\u0025d\u005d", path, _afcg)); _edba != nil {
			return _edba
		}
	}
	return nil
}
func NewCT_FieldUsage() *CT_FieldUsage { _fgee := &CT_FieldUsage{}; return _fgee }

type ST_FileType byte

func (_bfabb ST_FormulaExpression) Validate() error { return _bfabb.ValidateWithPath("") }
func (_eafd *CT_ExternalDefinedNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eafd.DefinedName != nil {
		_ebfga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065"}}
		for _, _dcgec := range _eafd.DefinedName {
			e.EncodeElement(_dcgec, _ebfga)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Fill and its children, prefixing error messages with path
func (_ffebf *CT_Fill) ValidateWithPath(path string) error {
	if _ffebf.PatternFill != nil {
		if _cdfa := _ffebf.PatternFill.ValidateWithPath(path + "\u002f\u0050\u0061t\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"); _cdfa != nil {
			return _cdfa
		}
	}
	if _ffebf.GradientFill != nil {
		if _cafa := _ffebf.GradientFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"); _cafa != nil {
			return _cafa
		}
	}
	return nil
}
func (_dcafa *CT_Xf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgbfdb := range start.Attr {
		if _bgbfdb.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u006f\u006et" {
			_gbfbe, _agabe := _g.ParseBool(_bgbfdb.Value)
			if _agabe != nil {
				return _agabe
			}
			_dcafa.ApplyFontAttr = &_gbfbe
			continue
		}
		if _bgbfdb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_egeba, _bgaabd := _g.ParseUint(_bgbfdb.Value, 10, 32)
			if _bgaabd != nil {
				return _bgaabd
			}
			_gefbe := uint32(_egeba)
			_dcafa.NumFmtIdAttr = &_gefbe
			continue
		}
		if _bgbfdb.Name.Local == "\u0061p\u0070\u006c\u0079\u0046\u0069\u006cl" {
			_aaaaf, _eddbe := _g.ParseBool(_bgbfdb.Value)
			if _eddbe != nil {
				return _eddbe
			}
			_dcafa.ApplyFillAttr = &_aaaaf
			continue
		}
		if _bgbfdb.Name.Local == "\u0066\u0069\u006c\u006c\u0049\u0064" {
			_deeae, _bgada := _g.ParseUint(_bgbfdb.Value, 10, 32)
			if _bgada != nil {
				return _bgada
			}
			_bbacc := uint32(_deeae)
			_dcafa.FillIdAttr = &_bbacc
			continue
		}
		if _bgbfdb.Name.Local == "\u0078\u0066\u0049\u0064" {
			_gdcgb, _fcgaf := _g.ParseUint(_bgbfdb.Value, 10, 32)
			if _fcgaf != nil {
				return _fcgaf
			}
			_gfafa := uint32(_gdcgb)
			_dcafa.XfIdAttr = &_gfafa
			continue
		}
		if _bgbfdb.Name.Local == "q\u0075\u006f\u0074\u0065\u0050\u0072\u0065\u0066\u0069\u0078" {
			_fcfcbd, _cbgded := _g.ParseBool(_bgbfdb.Value)
			if _cbgded != nil {
				return _cbgded
			}
			_dcafa.QuotePrefixAttr = &_fcfcbd
			continue
		}
		if _bgbfdb.Name.Local == "p\u0069\u0076\u006f\u0074\u0042\u0075\u0074\u0074\u006f\u006e" {
			_cgaba, _gedce := _g.ParseBool(_bgbfdb.Value)
			if _gedce != nil {
				return _gedce
			}
			_dcafa.PivotButtonAttr = &_cgaba
			continue
		}
		if _bgbfdb.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u004e\u0075\u006d\u0062\u0065\u0072\u0046o\u0072\u006d\u0061\u0074" {
			_dcdae, _ggcdda := _g.ParseBool(_bgbfdb.Value)
			if _ggcdda != nil {
				return _ggcdda
			}
			_dcafa.ApplyNumberFormatAttr = &_dcdae
			continue
		}
		if _bgbfdb.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_caaega, _egffe := _g.ParseUint(_bgbfdb.Value, 10, 32)
			if _egffe != nil {
				return _egffe
			}
			_ffefe := uint32(_caaega)
			_dcafa.FontIdAttr = &_ffefe
			continue
		}
		if _bgbfdb.Name.Local == "\u0062\u006f\u0072\u0064\u0065\u0072\u0049\u0064" {
			_gbcff, _faffa := _g.ParseUint(_bgbfdb.Value, 10, 32)
			if _faffa != nil {
				return _faffa
			}
			_dccdgd := uint32(_gbcff)
			_dcafa.BorderIdAttr = &_dccdgd
			continue
		}
		if _bgbfdb.Name.Local == "a\u0070\u0070\u006c\u0079\u0042\u006f\u0072\u0064\u0065\u0072" {
			_caecc, _eggfa := _g.ParseBool(_bgbfdb.Value)
			if _eggfa != nil {
				return _eggfa
			}
			_dcafa.ApplyBorderAttr = &_caecc
			continue
		}
		if _bgbfdb.Name.Local == "\u0061\u0070\u0070\u006c\u0079\u0041\u006c\u0069\u0067n\u006d\u0065\u006e\u0074" {
			_dacgfe, _agfef := _g.ParseBool(_bgbfdb.Value)
			if _agfef != nil {
				return _agfef
			}
			_dcafa.ApplyAlignmentAttr = &_dacgfe
			continue
		}
		if _bgbfdb.Name.Local == "\u0061p\u0070l\u0079\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_afccdd, _bggbd := _g.ParseBool(_bgbfdb.Value)
			if _bggbd != nil {
				return _bggbd
			}
			_dcafa.ApplyProtectionAttr = &_afccdd
			continue
		}
	}
_bdede:
	for {
		_fdbeb, _acdgg := d.Token()
		if _acdgg != nil {
			return _acdgg
		}
		switch _dfccg := _fdbeb.(type) {
		case _b.StartElement:
			switch _dfccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_dcafa.Alignment = NewCT_CellAlignment()
				if _fbgcfc := d.DecodeElement(_dcafa.Alignment, &_dfccg); _fbgcfc != nil {
					return _fbgcfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dcafa.Protection = NewCT_CellProtection()
				if _eagadee := d.DecodeElement(_dcafa.Protection, &_dfccg); _eagadee != nil {
					return _eagadee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcafa.ExtLst = NewCT_ExtensionList()
				if _aeagg := d.DecodeElement(_dcafa.ExtLst, &_dfccg); _aeagg != nil {
					return _aeagg
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0043\u0054\u005fX\u0066 \u0025\u0076", _dfccg.Name)
				if _ebaca := d.Skip(); _ebaca != nil {
					return _ebaca
				}
			}
		case _b.EndElement:
			break _bdede
		case _b.CharData:
		}
	}
	return nil
}

type CT_FontFamily struct{ ValAttr int64 }

func NewCT_PivotArea() *CT_PivotArea { _gebca := &CT_PivotArea{}; return _gebca }

// Validate validates the CT_ColFields and its children
func (_abde *CT_ColFields) Validate() error {
	return _abde.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073")
}
func NewCT_ExternalSheetData() *CT_ExternalSheetData {
	_fabge := &CT_ExternalSheetData{}
	return _fabge
}
func NewCT_CustomProperty() *CT_CustomProperty { _gdbfg := &CT_CustomProperty{}; return _gdbfg }
func (_dgebg *CT_SmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgebg.EmbedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006d\u0062e\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgebg.EmbedAttr))})
	}
	if _dgebg.ShowAttr != ST_SmartTagShowUnset {
		_cfcad, _fbeebd := _dgebg.ShowAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077"})
		if _fbeebd != nil {
			return _fbeebd
		}
		start.Attr = append(start.Attr, _cfcad)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Top10 and its children, prefixing error messages with path
func (_bagga *CT_Top10) ValidateWithPath(path string) error { return nil }
func NewCT_CellProtection() *CT_CellProtection              { _bbfae := &CT_CellProtection{}; return _bbfae }
func (_dfceae *ST_ParameterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfceae = 0
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_dfceae = 1
	case "\u0076\u0061\u006cu\u0065":
		*_dfceae = 2
	case "\u0063\u0065\u006c\u006c":
		*_dfceae = 3
	}
	return nil
}
func (_bacded *CT_LegacyDrawing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbgae := range start.Attr {
		if _gbgae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gbgae.Name.Local == "\u0069\u0064" || _gbgae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gbgae.Name.Local == "\u0069\u0064" {
			_gfgge, _acbcb := _gbgae.Value, error(nil)
			if _acbcb != nil {
				return _acbcb
			}
			_bacded.IdAttr = _gfgge
			continue
		}
	}
	for {
		_ddeb, _gaafa := d.Token()
		if _gaafa != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0065\u0067\u0061c\u0079D\u0072\u0061\u0077\u0069\u006e\u0067\u003a \u0025\u0073", _gaafa)
		}
		if _bbfb, _fbeg := _ddeb.(_b.EndElement); _fbeg && _bbfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbab *CT_XmlColumnPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bbab.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _a.Sprintf("\u0025\u0076", _bbab.XpathAttr)})
	if _bbab.DenormalizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbab.DenormalizedAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bbab.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _bbab.ExtLst != nil {
		_dgfdc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbab.ExtLst, _dgfdc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_badec *CT_pivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_badec.Location = NewCT_Location()
	for _, _fgebf := range start.Attr {
		if _fgebf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_efdaf, _ecdfce := _g.ParseUint(_fgebf.Value, 10, 8)
			if _ecdfce != nil {
				return _ecdfce
			}
			_ecaege := uint8(_efdaf)
			_badec.CreatedVersionAttr = &_ecaege
			continue
		}
		if _fgebf.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_eaeea, _cbfdeg := _g.ParseUint(_fgebf.Value, 10, 32)
			if _cbfdeg != nil {
				return _cbfdeg
			}
			_bbacdc := uint32(_eaeea)
			_badec.IndentAttr = &_bbacdc
			continue
		}
		if _fgebf.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_caeag, _bgeaaf := _fgebf.Value, error(nil)
			if _bgeaaf != nil {
				return _bgeaaf
			}
			_badec.PivotTableStyleAttr = &_caeag
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_caeddc, _bfecgg := _g.ParseBool(_fgebf.Value)
			if _bfecgg != nil {
				return _bfecgg
			}
			_badec.ShowEmptyRowAttr = &_caeddc
			continue
		}
		if _fgebf.Name.Local == "\u0074\u0061\u0067" {
			_ddaee, _fcbfb := _fgebf.Value, error(nil)
			if _fcbfb != nil {
				return _fcbfb
			}
			_badec.TagAttr = &_ddaee
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_ggfded, _bgage := _g.ParseBool(_fgebf.Value)
			if _bgage != nil {
				return _bgage
			}
			_badec.ShowEmptyColAttr = &_ggfded
			continue
		}
		if _fgebf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_cebac, _bdgfc := _g.ParseUint(_fgebf.Value, 10, 8)
			if _bdgfc != nil {
				return _bdgfc
			}
			_ddceb := uint8(_cebac)
			_badec.MinRefreshableVersionAttr = &_ddceb
			continue
		}
		if _fgebf.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_agdebg, _cdgge := _g.ParseBool(_fgebf.Value)
			if _cdgge != nil {
				return _cdgge
			}
			_badec.ShowHeadersAttr = &_agdebg
			continue
		}
		if _fgebf.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_ebaaa, _dcdad := _g.ParseBool(_fgebf.Value)
			if _dcdad != nil {
				return _dcdad
			}
			_badec.AsteriskTotalsAttr = &_ebaaa
			continue
		}
		if _fgebf.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_cbagbf, _cfdcd := _g.ParseBool(_fgebf.Value)
			if _cfdcd != nil {
				return _cfdcd
			}
			_badec.CompactAttr = &_cbagbf
			continue
		}
		if _fgebf.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_eaaad, _effbg := _g.ParseBool(_fgebf.Value)
			if _effbg != nil {
				return _effbg
			}
			_badec.EditDataAttr = &_eaaad
			continue
		}
		if _fgebf.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_ccgcf, _bdddg := _g.ParseBool(_fgebf.Value)
			if _bdddg != nil {
				return _bdddg
			}
			_badec.OutlineAttr = &_ccgcf
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_cfead, _ddbcef := _g.ParseBool(_fgebf.Value)
			if _ddbcef != nil {
				return _ddbcef
			}
			_badec.ShowCalcMbrsAttr = &_cfead
			continue
		}
		if _fgebf.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_fdddg, _edageg := _g.ParseBool(_fgebf.Value)
			if _edageg != nil {
				return _edageg
			}
			_badec.OutlineDataAttr = &_fdddg
			continue
		}
		if _fgebf.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_bdbcc, _eaeebf := _g.ParseBool(_fgebf.Value)
			if _eaeebf != nil {
				return _eaeebf
			}
			_badec.GridDropZonesAttr = &_bdbcc
			continue
		}
		if _fgebf.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_cdadc, _fcdfa := _g.ParseBool(_fgebf.Value)
			if _fcdfa != nil {
				return _fcdfa
			}
			_badec.CustomListSortAttr = &_cdadc
			continue
		}
		if _fgebf.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_bbdea, _efebg := _g.ParseBool(_fgebf.Value)
			if _efebg != nil {
				return _efebg
			}
			_badec.RowGrandTotalsAttr = &_bbdea
			continue
		}
		if _fgebf.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ffaegg, _fbccdc := _g.ParseBool(_fgebf.Value)
			if _fbccdc != nil {
				return _fbccdc
			}
			_badec.ApplyWidthHeightFormatsAttr = &_ffaegg
			continue
		}
		if _fgebf.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_cffaae, _eefca := _g.ParseBool(_fgebf.Value)
			if _eefca != nil {
				return _eefca
			}
			_badec.UseAutoFormattingAttr = &_cffaae
			continue
		}
		if _fgebf.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_daac, _faadda := _fgebf.Value, error(nil)
			if _faadda != nil {
				return _faadda
			}
			_badec.RowHeaderCaptionAttr = &_daac
			continue
		}
		if _fgebf.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_eebec, _cbddg := _g.ParseBool(_fgebf.Value)
			if _cbddg != nil {
				return _cbddg
			}
			_badec.ShowDrillAttr = &_eebec
			continue
		}
		if _fgebf.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_cedbfe, _gddgdf := _g.ParseBool(_fgebf.Value)
			if _gddgdf != nil {
				return _gddgdf
			}
			_badec.MergeItemAttr = &_cedbfe
			continue
		}
		if _fgebf.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bafad, _dgbeg := _g.ParseBool(_fgebf.Value)
			if _dgbeg != nil {
				return _dgbeg
			}
			_badec.ApplyBorderFormatsAttr = &_bafad
			continue
		}
		if _fgebf.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_dbfge, _cagdce := _g.ParseBool(_fgebf.Value)
			if _cagdce != nil {
				return _cagdce
			}
			_badec.VisualTotalsAttr = &_dbfge
			continue
		}
		if _fgebf.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_ebebcb, _edcgdd := _g.ParseBool(_fgebf.Value)
			if _edcgdd != nil {
				return _edcgdd
			}
			_badec.CompactDataAttr = &_ebebcb
			continue
		}
		if _fgebf.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_bbaffc, _ccebc := _g.ParseUint(_fgebf.Value, 10, 32)
			if _ccebc != nil {
				return _ccebc
			}
			_eegabcf := uint32(_bbaffc)
			_badec.DataPositionAttr = &_eegabcf
			continue
		}
		if _fgebf.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_cafaeb, _gffdf := _g.ParseBool(_fgebf.Value)
			if _gffdf != nil {
				return _gffdf
			}
			_badec.MultipleFieldFiltersAttr = &_cafaeb
			continue
		}
		if _fgebf.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_bfbfgg, _ggdfgg := _g.ParseBool(_fgebf.Value)
			if _ggdfgg != nil {
				return _ggdfgg
			}
			_badec.PageOverThenDownAttr = &_bfbfgg
			continue
		}
		if _fgebf.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_aecae, _dggef := _g.ParseBool(_fgebf.Value)
			if _dggef != nil {
				return _dggef
			}
			_badec.FieldListSortAscendingAttr = &_aecae
			continue
		}
		if _fgebf.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_aafed, _cabfdf := _g.ParseBool(_fgebf.Value)
			if _cabfdf != nil {
				return _cabfdf
			}
			_badec.ShowMissingAttr = &_aafed
			continue
		}
		if _fgebf.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_cgdbdg, _ecdaa := _g.ParseBool(_fgebf.Value)
			if _ecdaa != nil {
				return _ecdaa
			}
			_badec.FieldPrintTitlesAttr = &_cgdbdg
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_agfgae, _cfgae := _g.ParseBool(_fgebf.Value)
			if _cfgae != nil {
				return _cfgae
			}
			_badec.ShowMemberPropertyTipsAttr = &_agfgae
			continue
		}
		if _fgebf.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_gbaged, _bgabg := _fgebf.Value, error(nil)
			if _bgabg != nil {
				return _bgabg
			}
			_badec.PageStyleAttr = &_gbaged
			continue
		}
		if _fgebf.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_eeffd, _bcgde := _g.ParseUint(_fgebf.Value, 10, 32)
			if _bcgde != nil {
				return _bcgde
			}
			_dbgab := uint32(_eeffd)
			_badec.AutoFormatIdAttr = &_dbgab
			continue
		}
		if _fgebf.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_ebdaa, _ebggb := _g.ParseBool(_fgebf.Value)
			if _ebggb != nil {
				return _ebggb
			}
			_badec.ShowItemsAttr = &_ebdaa
			continue
		}
		if _fgebf.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cgegca, _cffaeb := _g.ParseBool(_fgebf.Value)
			if _cffaeb != nil {
				return _cffaeb
			}
			_badec.ApplyPatternFormatsAttr = &_cgegca
			continue
		}
		if _fgebf.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_dbdaf, _gccfg := _g.ParseBool(_fgebf.Value)
			if _gccfg != nil {
				return _gccfg
			}
			_badec.EnableFieldPropertiesAttr = &_dbdaf
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_ceebg, _dgffaa := _g.ParseBool(_fgebf.Value)
			if _dgffaa != nil {
				return _dgffaa
			}
			_badec.ShowMultipleLabelAttr = &_ceebg
			continue
		}
		if _fgebf.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_fdebec, _caababe := _g.ParseBool(_fgebf.Value)
			if _caababe != nil {
				return _caababe
			}
			_badec.PreserveFormattingAttr = &_fdebec
			continue
		}
		if _fgebf.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_eefec, _dffgc := _g.ParseBool(_fgebf.Value)
			if _dffgc != nil {
				return _dffgc
			}
			_badec.PublishedAttr = &_eefec
			continue
		}
		if _fgebf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_cecddd, _bbadag := _fgebf.Value, error(nil)
			if _bbadag != nil {
				return _bbadag
			}
			_badec.MissingCaptionAttr = &_cecddd
			continue
		}
		if _fgebf.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_degdee, _fedbf := _g.ParseBool(_fgebf.Value)
			if _fedbf != nil {
				return _fedbf
			}
			_badec.ImmersiveAttr = &_degdee
			continue
		}
		if _fgebf.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_gdgag, _fgfacb := _g.ParseUint(_fgebf.Value, 10, 32)
			if _fgfacb != nil {
				return _fgfacb
			}
			_cegcbd := uint32(_gdgag)
			_badec.PageWrapAttr = &_cegcbd
			continue
		}
		if _fgebf.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_dgaggg, _beaed := _g.ParseUint(_fgebf.Value, 10, 32)
			if _beaed != nil {
				return _beaed
			}
			_adffd := uint32(_dgaggg)
			_badec.ChartFormatAttr = &_adffd
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_egdggac, _bggbf := _g.ParseBool(_fgebf.Value)
			if _bggbf != nil {
				return _bggbf
			}
			_badec.ShowDataDropDownAttr = &_egdggac
			continue
		}
		if _fgebf.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cfgcb, _agggg := _fgebf.Value, error(nil)
			if _agggg != nil {
				return _agggg
			}
			_badec.ColHeaderCaptionAttr = &_cfgcb
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_afffg, _dbcef := _g.ParseBool(_fgebf.Value)
			if _dbcef != nil {
				return _dbcef
			}
			_badec.SubtotalHiddenItemsAttr = &_afffg
			continue
		}
		if _fgebf.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_cgcbdd, _fgabc := _g.ParseBool(_fgebf.Value)
			if _fgabc != nil {
				return _fgabc
			}
			_badec.MdxSubqueriesAttr = &_cgcbdd
			continue
		}
		if _fgebf.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_acefa, _gcfbg := _fgebf.Value, error(nil)
			if _gcfbg != nil {
				return _gcfbg
			}
			_badec.ErrorCaptionAttr = &_acefa
			continue
		}
		if _fgebf.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_egcbfc, _dbgeb := _g.ParseBool(_fgebf.Value)
			if _dbgeb != nil {
				return _dbgeb
			}
			_badec.ColGrandTotalsAttr = &_egcbfc
			continue
		}
		if _fgebf.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_edfcg, _ababb := _g.ParseBool(_fgebf.Value)
			if _ababb != nil {
				return _ababb
			}
			_badec.PrintDrillAttr = &_edfcg
			continue
		}
		if _fgebf.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_afdcfd, _bfceg := _g.ParseBool(_fgebf.Value)
			if _bfceg != nil {
				return _bfceg
			}
			_badec.ItemPrintTitlesAttr = &_afdcfd
			continue
		}
		if _fgebf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agffe, _bgaga := _fgebf.Value, error(nil)
			if _bgaga != nil {
				return _bgaga
			}
			_badec.NameAttr = _agffe
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_efaagb, _efedgf := _g.ParseBool(_fgebf.Value)
			if _efedgf != nil {
				return _efedgf
			}
			_badec.ShowDropZonesAttr = &_efaagb
			continue
		}
		if _fgebf.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_dbgce, _agcdef := _g.ParseBool(_fgebf.Value)
			if _agcdef != nil {
				return _agcdef
			}
			_badec.ShowDataTipsAttr = &_dbgce
			continue
		}
		if _fgebf.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_cefgbd, _cdaaa := _fgebf.Value, error(nil)
			if _cdaaa != nil {
				return _cdaaa
			}
			_badec.VacatedStyleAttr = &_cefgbd
			continue
		}
		if _fgebf.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bfgff, _deagb := _fgebf.Value, error(nil)
			if _deagb != nil {
				return _deagb
			}
			_badec.GrandTotalCaptionAttr = &_bfgff
			continue
		}
		if _fgebf.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_aceaa, _abadf := _g.ParseBool(_fgebf.Value)
			if _abadf != nil {
				return _abadf
			}
			_badec.ApplyNumberFormatsAttr = &_aceaa
			continue
		}
		if _fgebf.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_edabe, _dabge := _g.ParseBool(_fgebf.Value)
			if _dabge != nil {
				return _dabge
			}
			_badec.EnableDrillAttr = &_edabe
			continue
		}
		if _fgebf.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bgggd, _gacfae := _g.ParseBool(_fgebf.Value)
			if _gacfae != nil {
				return _gacfae
			}
			_badec.ApplyFontFormatsAttr = &_bgggd
			continue
		}
		if _fgebf.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_fecfg, _gabdc := _g.ParseBool(_fgebf.Value)
			if _gabdc != nil {
				return _gabdc
			}
			_badec.DisableFieldListAttr = &_fecfg
			continue
		}
		if _fgebf.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ffebfa, _ceedc := _g.ParseBool(_fgebf.Value)
			if _ceedc != nil {
				return _ceedc
			}
			_badec.ApplyAlignmentFormatsAttr = &_ffebfa
			continue
		}
		if _fgebf.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_ffcede, _bffeb := _g.ParseBool(_fgebf.Value)
			if _bffeb != nil {
				return _bffeb
			}
			_badec.DataOnRowsAttr = &_ffcede
			continue
		}
		if _fgebf.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_becbb, _gbfcef := _fgebf.Value, error(nil)
			if _gbfcef != nil {
				return _gbfcef
			}
			_badec.DataCaptionAttr = _becbb
			continue
		}
		if _fgebf.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_gagbcb, _fggegc := _g.ParseBool(_fgebf.Value)
			if _fggegc != nil {
				return _fggegc
			}
			_badec.ShowErrorAttr = &_gagbcb
			continue
		}
		if _fgebf.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_dacfd, _aaebab := _g.ParseUint(_fgebf.Value, 10, 32)
			if _aaebab != nil {
				return _aaebab
			}
			_badec.CacheIdAttr = uint32(_dacfd)
			continue
		}
		if _fgebf.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_gbdgad, _bccbb := _g.ParseBool(_fgebf.Value)
			if _bccbb != nil {
				return _bccbb
			}
			_badec.EnableWizardAttr = &_gbdgad
			continue
		}
		if _fgebf.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_ccagee, _daacf := _g.ParseUint(_fgebf.Value, 10, 8)
			if _daacf != nil {
				return _daacf
			}
			_gcaeg := uint8(_ccagee)
			_badec.UpdatedVersionAttr = &_gcaeg
			continue
		}
	}
_gabdec:
	for {
		_ccbgac, _gaaaf := d.Token()
		if _gaaaf != nil {
			return _gaaaf
		}
		switch _deegd := _ccbgac.(type) {
		case _b.StartElement:
			switch _deegd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _cfdac := d.DecodeElement(_badec.Location, &_deegd); _cfdac != nil {
					return _cfdac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_badec.PivotFields = NewCT_PivotFields()
				if _degfb := d.DecodeElement(_badec.PivotFields, &_deegd); _degfb != nil {
					return _degfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_badec.RowFields = NewCT_RowFields()
				if _dgafcb := d.DecodeElement(_badec.RowFields, &_deegd); _dgafcb != nil {
					return _dgafcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_badec.RowItems = NewCT_rowItems()
				if _abecfc := d.DecodeElement(_badec.RowItems, &_deegd); _abecfc != nil {
					return _abecfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_badec.ColFields = NewCT_ColFields()
				if _adcge := d.DecodeElement(_badec.ColFields, &_deegd); _adcge != nil {
					return _adcge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_badec.ColItems = NewCT_colItems()
				if _gbabbg := d.DecodeElement(_badec.ColItems, &_deegd); _gbabbg != nil {
					return _gbabbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_badec.PageFields = NewCT_PageFields()
				if _bedcbb := d.DecodeElement(_badec.PageFields, &_deegd); _bedcbb != nil {
					return _bedcbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_badec.DataFields = NewCT_DataFields()
				if _bggbga := d.DecodeElement(_badec.DataFields, &_deegd); _bggbga != nil {
					return _bggbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_badec.Formats = NewCT_Formats()
				if _ggfac := d.DecodeElement(_badec.Formats, &_deegd); _ggfac != nil {
					return _ggfac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_badec.ConditionalFormats = NewCT_ConditionalFormats()
				if _cbfffe := d.DecodeElement(_badec.ConditionalFormats, &_deegd); _cbfffe != nil {
					return _cbfffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_badec.ChartFormats = NewCT_ChartFormats()
				if _ccbgaf := d.DecodeElement(_badec.ChartFormats, &_deegd); _ccbgaf != nil {
					return _ccbgaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_badec.PivotHierarchies = NewCT_PivotHierarchies()
				if _ccegf := d.DecodeElement(_badec.PivotHierarchies, &_deegd); _ccegf != nil {
					return _ccegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_badec.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _ebccb := d.DecodeElement(_badec.PivotTableStyleInfo, &_deegd); _ebccb != nil {
					return _ebccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_badec.Filters = NewCT_PivotFilters()
				if _bgggbc := d.DecodeElement(_badec.Filters, &_deegd); _bgggbc != nil {
					return _bgggbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_badec.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _dfcad := d.DecodeElement(_badec.RowHierarchiesUsage, &_deegd); _dfcad != nil {
					return _dfcad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_badec.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _gacde := d.DecodeElement(_badec.ColHierarchiesUsage, &_deegd); _gacde != nil {
					return _gacde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_badec.ExtLst = NewCT_ExtensionList()
				if _ebfgce := d.DecodeElement(_badec.ExtLst, &_deegd); _ebfgce != nil {
					return _ebfgce
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006ce\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _deegd.Name)
				if _cgeca := d.Skip(); _cgeca != nil {
					return _cgeca
				}
			}
		case _b.EndElement:
			break _gabdec
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Fill() *CT_Fill { _cbbfg := &CT_Fill{}; return _cbbfg }
func (_cgdcd *ST_UnderlineValues) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgdcd = 0
	case "\u0073\u0069\u006e\u0067\u006c\u0065":
		*_cgdcd = 1
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_cgdcd = 2
	case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_cgdcd = 3
	case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
		*_cgdcd = 4
	case "\u006e\u006f\u006e\u0065":
		*_cgdcd = 5
	}
	return nil
}
func (_agafb *CT_Dimensions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agafb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_agafb.CountAttr)})
	}
	e.EncodeToken(start)
	if _agafb.Dimension != nil {
		_dadda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		for _, _gecbg := range _agafb.Dimension {
			e.EncodeElement(_gecbg, _dadda)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddbcc *CT_RowFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfgfb := range start.Attr {
		if _bfgfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdedga, _ccgdg := _g.ParseUint(_bfgfb.Value, 10, 32)
			if _ccgdg != nil {
				return _ccgdg
			}
			_gdeeac := uint32(_fdedga)
			_ddbcc.CountAttr = &_gdeeac
			continue
		}
	}
_gbece:
	for {
		_gbeec, _gdccb := d.Token()
		if _gdccb != nil {
			return _gdccb
		}
		switch _gbdaf := _gbeec.(type) {
		case _b.StartElement:
			switch _gbdaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_fdgga := NewCT_Field()
				if _dfafe := d.DecodeElement(_fdgga, &_gbdaf); _dfafe != nil {
					return _dfafe
				}
				_ddbcc.Field = append(_ddbcc.Field, _fdgga)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u006f\u0077F\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _gbdaf.Name)
				if _abeef := d.Skip(); _abeef != nil {
					return _abeef
				}
			}
		case _b.EndElement:
			break _gbece
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionHeader struct {

	// GUID
	GuidAttr string

	// Date Time
	DateTimeAttr _d.Time

	// Last Sheet Id
	MaxSheetIdAttr uint32

	// User Name
	UserNameAttr string
	IdAttr       string

	// Minimum Revision Id
	MinRIdAttr *uint32

	// Max Revision Id
	MaxRIdAttr *uint32

	// Sheet Id Map
	SheetIdMap *CT_SheetIdMap

	// Reviewed List
	ReviewedList *CT_ReviewedRevisions
	ExtLst       *CT_ExtensionList
}

func (_adaef ST_MdxSetOrder) Validate() error { return _adaef.ValidateWithPath("") }

type CT_ServerFormat struct {

	// Culture
	CultureAttr *string

	// Format
	FormatAttr *string
}

func (_gcbga *ST_SortBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aagad, _dedeaa := d.Token()
	if _dedeaa != nil {
		return _dedeaa
	}
	if _bebdb, _gefcg := _aagad.(_b.EndElement); _gefcg && _bebdb.Name == start.Name {
		*_gcbga = 1
		return nil
	}
	if _cdgcef, _febcg := _aagad.(_b.CharData); !_febcg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aagad)
	} else {
		switch string(_cdgcef) {
		case "":
			*_gcbga = 0
		case "\u0076\u0061\u006cu\u0065":
			*_gcbga = 1
		case "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr":
			*_gcbga = 2
		case "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr":
			*_gcbga = 3
		case "\u0069\u0063\u006f\u006e":
			*_gcbga = 4
		}
	}
	_aagad, _dedeaa = d.Token()
	if _dedeaa != nil {
		return _dedeaa
	}
	if _fbgdca, _efdgfd := _aagad.(_b.EndElement); _efdgfd && _fbgdca.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aagad)
}
func (_bfba *CT_CustomChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bfba.CustomSheetView != nil {
		_abed := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077"}}
		for _, _edgg := range _bfba.CustomSheetView {
			e.EncodeElement(_edgg, _abed)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Chartsheet and its children
func (_bcdfe *CT_Chartsheet) Validate() error {
	return _bcdfe.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}

type CT_SheetBackgroundPicture struct{ IdAttr string }

func NewCT_CalcPr() *CT_CalcPr { _cfff := &CT_CalcPr{}; return _cfff }

// ValidateWithPath validates the Workbook and its children, prefixing error messages with path
func (_dgeegg *Workbook) ValidateWithPath(path string) error {
	if _geddd := _dgeegg.CT_Workbook.ValidateWithPath(path); _geddd != nil {
		return _geddd
	}
	return nil
}
func (_cbaffe *CT_Fills) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aece := range start.Attr {
		if _aece.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gfaea, _edfac := _g.ParseUint(_aece.Value, 10, 32)
			if _edfac != nil {
				return _edfac
			}
			_ccfab := uint32(_gfaea)
			_cbaffe.CountAttr = &_ccfab
			continue
		}
	}
_bggcf:
	for {
		_fcegb, _badca := d.Token()
		if _badca != nil {
			return _badca
		}
		switch _dedgc := _fcegb.(type) {
		case _b.StartElement:
			switch _dedgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_adbed := NewCT_Fill()
				if _aeefb := d.DecodeElement(_adbed, &_dedgc); _aeefb != nil {
					return _aeefb
				}
				_cbaffe.Fill = append(_cbaffe.Fill, _adbed)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073\u0020\u0025\u0076", _dedgc.Name)
				if _fagba := d.Skip(); _fagba != nil {
					return _fagba
				}
			}
		case _b.EndElement:
			break _bggcf
		case _b.CharData:
		}
	}
	return nil
}
func (_bbcba ST_MdxFunctionType) Validate() error { return _bbcba.ValidateWithPath("") }

// Validate validates the CT_Sst and its children
func (_abgbgd *CT_Sst) Validate() error {
	return _abgbgd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0073\u0074")
}

// Validate validates the Connections and its children
func (_gfffg *Connections) Validate() error {
	return _gfffg.ValidateWithPath("C\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073")
}
func (_edafee *CT_SheetFormatPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _badcc := range start.Attr {
		if _badcc.Name.Local == "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_fdegd, _dgdaba := _g.ParseUint(_badcc.Value, 10, 32)
			if _dgdaba != nil {
				return _dgdaba
			}
			_bgcac := uint32(_fdegd)
			_edafee.BaseColWidthAttr = &_bgcac
			continue
		}
		if _badcc.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068" {
			_edbbg, _ccace := _g.ParseFloat(_badcc.Value, 64)
			if _ccace != nil {
				return _ccace
			}
			_edafee.DefaultColWidthAttr = &_edbbg
			continue
		}
		if _badcc.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_aebfgf, _cgbeec := _g.ParseFloat(_badcc.Value, 64)
			if _cgbeec != nil {
				return _cgbeec
			}
			_edafee.DefaultRowHeightAttr = _aebfgf
			continue
		}
		if _badcc.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_eddgc, _dcadc := _g.ParseBool(_badcc.Value)
			if _dcadc != nil {
				return _dcadc
			}
			_edafee.CustomHeightAttr = &_eddgc
			continue
		}
		if _badcc.Name.Local == "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_beddf, _gfbgg := _g.ParseBool(_badcc.Value)
			if _gfbgg != nil {
				return _gfbgg
			}
			_edafee.ZeroHeightAttr = &_beddf
			continue
		}
		if _badcc.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_fgeeed, _cecdc := _g.ParseBool(_badcc.Value)
			if _cecdc != nil {
				return _cecdc
			}
			_edafee.ThickTopAttr = &_fgeeed
			continue
		}
		if _badcc.Name.Local == "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d" {
			_eecee, _bedbf := _g.ParseBool(_badcc.Value)
			if _bedbf != nil {
				return _bedbf
			}
			_edafee.ThickBottomAttr = &_eecee
			continue
		}
		if _badcc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077" {
			_gaffa, _cgagg := _g.ParseUint(_badcc.Value, 10, 8)
			if _cgagg != nil {
				return _cgagg
			}
			_bdfge := uint8(_gaffa)
			_edafee.OutlineLevelRowAttr = &_bdfge
			continue
		}
		if _badcc.Name.Local == "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c" {
			_cffca, _geecb := _g.ParseUint(_badcc.Value, 10, 8)
			if _geecb != nil {
				return _geecb
			}
			_fcceg := uint8(_cffca)
			_edafee.OutlineLevelColAttr = &_fcceg
			continue
		}
	}
	for {
		_ddbdcg, _fgdab := d.Token()
		if _fgdab != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065t\u0046o\u0072\u006d\u0061\u0074\u0050\u0072\u003a \u0025\u0073", _fgdab)
		}
		if _dfbfa, _beaad := _ddbdcg.(_b.EndElement); _beaad && _dfbfa.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetDimension struct {

	// Reference
	RefAttr string
}
type ST_DataConsolidateFunction byte

func (_ddfggc ST_IconSetType) String() string {
	switch _ddfggc {
	case 0:
		return ""
	case 1:
		return "\u0033A\u0072\u0072\u006f\u0077\u0073"
	case 2:
		return "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 3:
		return "\u0033\u0046\u006c\u0061\u0067\u0073"
	case 4:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031"
	case 5:
		return "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032"
	case 6:
		return "\u0033\u0053\u0069\u0067\u006e\u0073"
	case 7:
		return "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073"
	case 8:
		return "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732"
	case 9:
		return "\u0034A\u0072\u0072\u006f\u0077\u0073"
	case 10:
		return "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 11:
		return "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b"
	case 12:
		return "\u0034R\u0061\u0074\u0069\u006e\u0067"
	case 13:
		return "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073"
	case 14:
		return "\u0035A\u0072\u0072\u006f\u0077\u0073"
	case 15:
		return "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079"
	case 16:
		return "\u0035R\u0061\u0074\u0069\u006e\u0067"
	case 17:
		return "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s"
	}
	return ""
}

type CT_Top10 struct {

	// Top
	TopAttr *bool

	// Filter by Percent
	PercentAttr *bool

	// Top or Bottom Value
	ValAttr float64

	// Filter Value
	FilterValAttr *float64
}

// ValidateWithPath validates the CT_PageFields and its children, prefixing error messages with path
func (_cgebc *CT_PageFields) ValidateWithPath(path string) error {
	for _edecg, _gccead := range _cgebc.PageField {
		if _cfege := _gccead.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0050\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _edecg)); _cfege != nil {
			return _cfege
		}
	}
	return nil
}
func (_ffcfc *CT_IndexedColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gccge:
	for {
		_gcbbc, _eegb := d.Token()
		if _eegb != nil {
			return _eegb
		}
		switch _fgfebe := _gcbbc.(type) {
		case _b.StartElement:
			switch _fgfebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_affgd := NewCT_RgbColor()
				if _ccbg := d.DecodeElement(_affgd, &_fgfebe); _ccbg != nil {
					return _ccbg
				}
				_ffcfc.RgbColor = append(_ffcfc.RgbColor, _affgd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073\u0020\u0025v", _fgfebe.Name)
				if _bdgg := d.Skip(); _bdgg != nil {
					return _bdgg
				}
			}
		case _b.EndElement:
			break _gccge
		case _b.CharData:
		}
	}
	return nil
}

type CT_Metadata struct {

	// Metadata Types Collection
	MetadataTypes *CT_MetadataTypes

	// Metadata String Store
	MetadataStrings *CT_MetadataStrings

	// MDX Metadata Information
	MdxMetadata *CT_MdxMetadata

	// Future Metadata
	FutureMetadata []*CT_FutureMetadata

	// Cell Metadata
	CellMetadata *CT_MetadataBlocks

	// Value Metadata
	ValueMetadata *CT_MetadataBlocks

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_QueryTable() *CT_QueryTable { _eegcb := &CT_QueryTable{}; return _eegcb }
func (_bgbda *CT_QueryTableFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cddff := range start.Attr {
		if _cddff.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_agdde, _bdfda := _g.ParseUint(_cddff.Value, 10, 32)
			if _bdfda != nil {
				return _bdfda
			}
			_bcaaa := uint32(_agdde)
			_bgbda.CountAttr = &_bcaaa
			continue
		}
	}
_bbefe:
	for {
		_befbc, _fdccda := d.Token()
		if _fdccda != nil {
			return _fdccda
		}
		switch _fcgcb := _befbc.(type) {
		case _b.StartElement:
			switch _fcgcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0065r\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_cecag := NewCT_QueryTableField()
				if _gcfabf := d.DecodeElement(_cecag, &_fcgcb); _gcfabf != nil {
					return _gcfabf
				}
				_bgbda.QueryTableField = append(_bgbda.QueryTableField, _cecag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061bl\u0065\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _fcgcb.Name)
				if _agdga := d.Skip(); _agdga != nil {
					return _agdga
				}
			}
		case _b.EndElement:
			break _bbefe
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PCDSDTCEntries() *CT_PCDSDTCEntries { _gcdac := &CT_PCDSDTCEntries{}; return _gcdac }
func (_becea *ST_TargetScreenSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egfgb, _fdggd := d.Token()
	if _fdggd != nil {
		return _fdggd
	}
	if _bbabb, _deeaeg := _egfgb.(_b.EndElement); _deeaeg && _bbabb.Name == start.Name {
		*_becea = 1
		return nil
	}
	if _acddg, _dcbadg := _egfgb.(_b.CharData); !_dcbadg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egfgb)
	} else {
		switch string(_acddg) {
		case "":
			*_becea = 0
		case "\u00354\u0034\u0078\u0033\u0037\u0036":
			*_becea = 1
		case "\u00364\u0030\u0078\u0034\u0038\u0030":
			*_becea = 2
		case "\u00372\u0030\u0078\u0035\u0031\u0032":
			*_becea = 3
		case "\u00380\u0030\u0078\u0036\u0030\u0030":
			*_becea = 4
		case "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038":
			*_becea = 5
		case "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032":
			*_becea = 6
		case "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030":
			*_becea = 7
		case "\u00312\u0038\u0030\u0078\u0031\u0030\u00324":
			*_becea = 8
		case "\u00316\u0030\u0030\u0078\u0031\u0032\u00300":
			*_becea = 9
		case "\u00318\u0030\u0030\u0078\u0031\u0034\u00340":
			*_becea = 10
		case "\u00319\u0032\u0030\u0078\u0031\u0032\u00300":
			*_becea = 11
		}
	}
	_egfgb, _fdggd = d.Token()
	if _fdggd != nil {
		return _fdggd
	}
	if _ddfga, _ceeadd := _egfgb.(_b.EndElement); _ceeadd && _ddfga.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egfgb)
}

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_bfgb *CT_Hyperlink) ValidateWithPath(path string) error { return nil }
func (_fabfc *CT_DynamicFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabfc.TypeAttr = ST_DynamicFilterType(1)
	for _, _bcccf := range start.Attr {
		if _bcccf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fabfc.TypeAttr.UnmarshalXMLAttr(_bcccf)
			continue
		}
		if _bcccf.Name.Local == "\u0076\u0061\u006c" {
			_bffbc, _ebgb := _g.ParseFloat(_bcccf.Value, 64)
			if _ebgb != nil {
				return _ebgb
			}
			_fabfc.ValAttr = &_bffbc
			continue
		}
		if _bcccf.Name.Local == "\u0076\u0061\u006c\u0049\u0073\u006f" {
			_accb, _gebec := ParseStdlibTime(_bcccf.Value)
			if _gebec != nil {
				return _gebec
			}
			_fabfc.ValIsoAttr = &_accb
			continue
		}
		if _bcccf.Name.Local == "\u006d\u0061\u0078\u0056\u0061\u006c" {
			_cagfb, _adgcb := _g.ParseFloat(_bcccf.Value, 64)
			if _adgcb != nil {
				return _adgcb
			}
			_fabfc.MaxValAttr = &_cagfb
			continue
		}
		if _bcccf.Name.Local == "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o" {
			_ggcb, _fcfag := ParseStdlibTime(_bcccf.Value)
			if _fcfag != nil {
				return _fcfag
			}
			_fabfc.MaxValIsoAttr = &_ggcb
			continue
		}
	}
	for {
		_fecd, _ecbb := d.Token()
		if _ecbb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0079\u006e\u0061m\u0069c\u0046\u0069\u006c\u0074\u0065\u0072\u003a \u0025\u0073", _ecbb)
		}
		if _eada, _ebgdb := _fecd.(_b.EndElement); _ebgdb && _eada.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edcag ST_ItemType) Validate() error { return _edcag.ValidateWithPath("") }

type CT_X struct {

	// Shared Items Index
	VAttr *int32
}

func (_fdaba *ST_HtmlFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcecf, _faadaf := d.Token()
	if _faadaf != nil {
		return _faadaf
	}
	if _bfegf, _cfggb := _gcecf.(_b.EndElement); _cfggb && _bfegf.Name == start.Name {
		*_fdaba = 1
		return nil
	}
	if _cdfcga, _gdbagg := _gcecf.(_b.CharData); !_gdbagg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcecf)
	} else {
		switch string(_cdfcga) {
		case "":
			*_fdaba = 0
		case "\u006e\u006f\u006e\u0065":
			*_fdaba = 1
		case "\u0072\u0074\u0066":
			*_fdaba = 2
		case "\u0061\u006c\u006c":
			*_fdaba = 3
		}
	}
	_gcecf, _faadaf = d.Token()
	if _faadaf != nil {
		return _faadaf
	}
	if _cccccd, _ddbcdb := _gcecf.(_b.EndElement); _ddbcdb && _cccccd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcecf)
}
func NewCT_SingleXmlCells() *CT_SingleXmlCells { _ecfae := &CT_SingleXmlCells{}; return _ecfae }

// Validate validates the Chartsheet and its children
func (_acbce *Chartsheet) Validate() error {
	return _acbce.ValidateWithPath("\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074")
}
func (_eefbf *CT_PrintOptions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eefbf.HorizontalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefbf.HorizontalCenteredAttr))})
	}
	if _eefbf.VerticalCenteredAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefbf.VerticalCenteredAttr))})
	}
	if _eefbf.HeadingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefbf.HeadingsAttr))})
	}
	if _eefbf.GridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefbf.GridLinesAttr))})
	}
	if _eefbf.GridLinesSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefbf.GridLinesSetAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalcPr and its children
func (_bgddg *CT_CalcPr) Validate() error {
	return _bgddg.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r")
}

const (
	ST_FormatActionUnset      ST_FormatAction = 0
	ST_FormatActionBlank      ST_FormatAction = 1
	ST_FormatActionFormatting ST_FormatAction = 2
	ST_FormatActionDrill      ST_FormatAction = 3
	ST_FormatActionFormula    ST_FormatAction = 4
)

func (_eeaag *CT_Hyperlinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_abcdd:
	for {
		_aegg, _efbe := d.Token()
		if _efbe != nil {
			return _efbe
		}
		switch _ddfbg := _aegg.(type) {
		case _b.StartElement:
			switch _ddfbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068y\u0070\u0065\u0072\u006c\u0069\u006ek"}:
				_gcbbe := NewCT_Hyperlink()
				if _gbcg := d.DecodeElement(_gcbbe, &_ddfbg); _gbcg != nil {
					return _gbcg
				}
				_eeaag.Hyperlink = append(_eeaag.Hyperlink, _gcbbe)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048y\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073 \u0025\u0076", _ddfbg.Name)
				if _dcce := d.Skip(); _dcce != nil {
					return _dcce
				}
			}
		case _b.EndElement:
			break _abcdd
		case _b.CharData:
		}
	}
	return nil
}

type CT_CustomWorkbookView struct {

	// Custom View Name
	NameAttr string

	// Custom View GUID
	GuidAttr string

	// Auto Update
	AutoUpdateAttr *bool

	// Merge Interval
	MergeIntervalAttr *uint32

	// Changes Saved Win
	ChangesSavedWinAttr *bool

	// Only Synch
	OnlySyncAttr *bool

	// Personal View
	PersonalViewAttr *bool

	// Include Print Settings
	IncludePrintSettingsAttr *bool

	// Include Hidden Rows & Columns
	IncludeHiddenRowColAttr *bool

	// Maximized
	MaximizedAttr *bool

	// Minimized
	MinimizedAttr *bool

	// Show Horizontal Scroll
	ShowHorizontalScrollAttr *bool

	// Show Vertical Scroll
	ShowVerticalScrollAttr *bool

	// Show Sheet Tabs
	ShowSheetTabsAttr *bool

	// Top Left Corner (X Coordinate)
	XWindowAttr *int32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *int32

	// Window Width
	WindowWidthAttr uint32

	// Window Height
	WindowHeightAttr uint32

	// Sheet Tab Ratio
	TabRatioAttr *uint32

	// Active Sheet in Book View
	ActiveSheetIdAttr uint32

	// Show Formula Bar
	ShowFormulaBarAttr *bool

	// Show Status Bar
	ShowStatusbarAttr *bool

	// Show Comments
	ShowCommentsAttr ST_Comments

	// Show Objects
	ShowObjectsAttr ST_Objects
	ExtLst          *CT_ExtensionList
}

func NewCT_MetadataStringIndex() *CT_MetadataStringIndex {
	_deddf := &CT_MetadataStringIndex{}
	return _deddf
}

// Validate validates the CT_DataField and its children
func (_cgaa *CT_DataField) Validate() error {
	return _cgaa.ValidateWithPath("\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064")
}

// ValidateWithPath validates the CT_DataValidation and its children, prefixing error messages with path
func (_debc *CT_DataValidation) ValidateWithPath(path string) error {
	if _dgdca := _debc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dgdca != nil {
		return _dgdca
	}
	if _gbfcf := _debc.ErrorStyleAttr.ValidateWithPath(path + "\u002fE\u0072r\u006f\u0072\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _gbfcf != nil {
		return _gbfcf
	}
	if _acbea := _debc.ImeModeAttr.ValidateWithPath(path + "\u002f\u0049\u006de\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _acbea != nil {
		return _acbea
	}
	if _eafgf := _debc.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _eafgf != nil {
		return _eafgf
	}
	return nil
}
func (_aefbcb *CT_Fill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aefbcb.PatternFill != nil {
		_fabgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefbcb.PatternFill, _fabgc)
	}
	if _aefbcb.GradientFill != nil {
		_cfded := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_aefbcb.GradientFill, _cfded)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Field struct {

	// Field Index
	XAttr int32
}

func NewCT_SheetFormatPr() *CT_SheetFormatPr { _eegcbf := &CT_SheetFormatPr{}; return _eegcbf }

// ValidateWithPath validates the CT_AutoSortScope and its children, prefixing error messages with path
func (_abg *CT_AutoSortScope) ValidateWithPath(path string) error {
	if _eac := _abg.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _eac != nil {
		return _eac
	}
	return nil
}
func NewCT_GroupLevels() *CT_GroupLevels { _dafgc := &CT_GroupLevels{}; return _dafgc }
func (_acecdf *ST_UnderlineValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcbecd, _eggec := d.Token()
	if _eggec != nil {
		return _eggec
	}
	if _cebe, _ebbfcb := _gcbecd.(_b.EndElement); _ebbfcb && _cebe.Name == start.Name {
		*_acecdf = 1
		return nil
	}
	if _bcgdbg, _bgcbba := _gcbecd.(_b.CharData); !_bgcbba {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcbecd)
	} else {
		switch string(_bcgdbg) {
		case "":
			*_acecdf = 0
		case "\u0073\u0069\u006e\u0067\u006c\u0065":
			*_acecdf = 1
		case "\u0064\u006f\u0075\u0062\u006c\u0065":
			*_acecdf = 2
		case "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_acecdf = 3
		case "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067":
			*_acecdf = 4
		case "\u006e\u006f\u006e\u0065":
			*_acecdf = 5
		}
	}
	_gcbecd, _eggec = d.Token()
	if _eggec != nil {
		return _eggec
	}
	if _fcegc, _feecg := _gcbecd.(_b.EndElement); _feecg && _fcegc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcbecd)
}
func (_cbabb ST_ParameterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbabb.String(), start)
}

// Validate validates the CT_CellProtection and its children
func (_fbc *CT_CellProtection) Validate() error {
	return _fbc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e")
}
func (_ggaba *CT_PhoneticPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u006e\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ggaba.FontIdAttr)})
	if _ggaba.TypeAttr != ST_PhoneticTypeUnset {
		_aggfag, _gebaf := _ggaba.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _gebaf != nil {
			return _gebaf
		}
		start.Attr = append(start.Attr, _aggfag)
	}
	if _ggaba.AlignmentAttr != ST_PhoneticAlignmentUnset {
		_eeab, _gdee := _ggaba.AlignmentAttr.MarshalXMLAttr(_b.Name{Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"})
		if _gdee != nil {
			return _gdee
		}
		start.Attr = append(start.Attr, _eeab)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_CellSmartTag() *CT_CellSmartTag { _aebfd := &CT_CellSmartTag{}; return _aebfd }

type CT_PageBreak struct {

	// Page Break Count
	CountAttr *uint32

	// Manual Break Count
	ManualBreakCountAttr *uint32

	// Break
	Brk []*CT_Break
}
type CT_VolTopicRef struct {

	// Reference
	RAttr string

	// Sheet Id
	SAttr uint32
}

// Validate validates the CT_PivotCacheDefinition and its children
func (_dcecd *CT_PivotCacheDefinition) Validate() error {
	return _dcecd.ValidateWithPath("\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}
func (_fgba *CT_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cgff, _debdd := _fgba.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _debdd != nil {
		return _debdd
	}
	start.Attr = append(start.Attr, _cgff)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FutureMetadata and its children
func (_cddgd *CT_FutureMetadata) Validate() error {
	return _cddgd.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061")
}
func (_fddagc ST_GroupBy) Validate() error { return _fddagc.ValidateWithPath("") }
func (_dddccd ST_FilterOperator) ValidateWithPath(path string) error {
	switch _dddccd {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dddccd))
	}
	return nil
}

type CT_PivotCacheRecords struct {

	// PivotCache Records Count
	CountAttr *uint32

	// PivotCache Record
	R []*CT_Record

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ecfbd *CT_PageSetUpPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfea := range start.Attr {
		if _ddfea.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_fbece, _eecfa := _g.ParseBool(_ddfea.Value)
			if _eecfa != nil {
				return _eecfa
			}
			_ecfbd.AutoPageBreaksAttr = &_fbece
			continue
		}
		if _ddfea.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_fegd, _gbcdf := _g.ParseBool(_ddfea.Value)
			if _gbcdf != nil {
				return _gbcdf
			}
			_ecfbd.FitToPageAttr = &_fegd
			continue
		}
	}
	for {
		_cfdfg, _ggcg := d.Token()
		if _ggcg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072:\u0020\u0025\u0073", _ggcg)
		}
		if _fbdec, _ebcga := _cfdfg.(_b.EndElement); _ebcga && _fbdec.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebbee *CT_FontSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cegcf := range start.Attr {
		if _cegcf.Name.Local == "\u0076\u0061\u006c" {
			_dfcc, _fadgb := _g.ParseFloat(_cegcf.Value, 64)
			if _fadgb != nil {
				return _fadgb
			}
			_ebbee.ValAttr = _dfcc
			continue
		}
	}
	for {
		_fdcgg, _afgfd := d.Token()
		if _afgfd != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0073", _afgfd)
		}
		if _adeg, _gbfbd := _fdcgg.(_b.EndElement); _gbfbd && _adeg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TableColumns struct {

	// Column Count
	CountAttr *uint32

	// Table Column
	TableColumn []*CT_TableColumn
}

// ValidateWithPath validates the CT_CellSmartTag and its children, prefixing error messages with path
func (_eecdg *CT_CellSmartTag) ValidateWithPath(path string) error {
	for _fga, _efgb := range _eecdg.CellSmartTagPr {
		if _bege := _efgb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0065ll\u0053m\u0061\u0072\u0074\u0054\u0061g\u0050\u0072\u005b\u0025\u0064\u005d", path, _fga)); _bege != nil {
			return _bege
		}
	}
	return nil
}
func NewCT_SortCondition() *CT_SortCondition { _aafad := &CT_SortCondition{}; return _aafad }

type CT_DataValidation struct {

	// Data Validation Type
	TypeAttr ST_DataValidationType

	// Data Validation Error Style
	ErrorStyleAttr ST_DataValidationErrorStyle

	// IME Mode Enforced
	ImeModeAttr ST_DataValidationImeMode

	// Operator
	OperatorAttr ST_DataValidationOperator

	// Allow Blank
	AllowBlankAttr *bool

	// Show Drop Down
	ShowDropDownAttr *bool

	// Show Input Message
	ShowInputMessageAttr *bool

	// Show Error Message
	ShowErrorMessageAttr *bool

	// Error Alert Text
	ErrorTitleAttr *string

	// Error Message
	ErrorAttr *string

	// Prompt Title
	PromptTitleAttr *string

	// Input Prompt
	PromptAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Formula 1
	Formula1 *string

	// Formula 2
	Formula2 *string
}

// Validate validates the CT_VolTopicRef and its children
func (_adedd *CT_VolTopicRef) Validate() error {
	return _adedd.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066")
}
func (_bfcb *CT_ExternalSheetDataSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_aefc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	for _, _acfgb := range _bfcb.SheetData {
		e.EncodeElement(_acfgb, _aefc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcbfcg *CT_PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eddda := range start.Attr {
		if _eddda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccafb, _cdcde := _g.ParseUint(_eddda.Value, 10, 32)
			if _cdcde != nil {
				return _cdcde
			}
			_eebcd := uint32(_ccafb)
			_gcbfcg.CountAttr = &_eebcd
			continue
		}
	}
_afdbce:
	for {
		_gaeeg, _deffce := d.Token()
		if _deffce != nil {
			return _deffce
		}
		switch _edfag := _gaeeg.(type) {
		case _b.StartElement:
			switch _edfag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_bdacb := NewCT_Record()
				if _fdbdd := d.DecodeElement(_bdacb, &_edfag); _fdbdd != nil {
					return _fdbdd
				}
				_gcbfcg.R = append(_gcbfcg.R, _bdacb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcbfcg.ExtLst = NewCT_ExtensionList()
				if _fbgddg := d.DecodeElement(_gcbfcg.ExtLst, &_edfag); _fbgddg != nil {
					return _fbgddg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _edfag.Name)
				if _cefea := d.Skip(); _cefea != nil {
					return _cefea
				}
			}
		case _b.EndElement:
			break _afdbce
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the MapInfo and its children, prefixing error messages with path
func (_egaedf *MapInfo) ValidateWithPath(path string) error {
	if _gdgdc := _egaedf.CT_MapInfo.ValidateWithPath(path); _gdgdc != nil {
		return _gdgdc
	}
	return nil
}

// ValidateWithPath validates the CT_FutureMetadata and its children, prefixing error messages with path
func (_ccade *CT_FutureMetadata) ValidateWithPath(path string) error {
	for _cfegg, _dfed := range _ccade.Bk {
		if _adgba := _dfed.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _cfegg)); _adgba != nil {
			return _adgba
		}
	}
	if _ccade.ExtLst != nil {
		if _adcegb := _ccade.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adcegb != nil {
			return _adcegb
		}
	}
	return nil
}
func NewCT_Font() *CT_Font       { _fdegc := &CT_Font{}; return _fdegc }
func NewAG_RevData() *AG_RevData { _fgg := &AG_RevData{}; return _fgg }

type CT_QueryCache struct {

	// Cached Query Count
	CountAttr *uint32

	// Query
	Query []*CT_Query
}

// ValidateWithPath validates the CT_CellWatch and its children, prefixing error messages with path
func (_dfdbd *CT_CellWatch) ValidateWithPath(path string) error { return nil }

type CT_SheetFormatPr struct {

	// Base Column Width
	BaseColWidthAttr *uint32

	// Default Column Width
	DefaultColWidthAttr *float64

	// Default Row Height
	DefaultRowHeightAttr float64

	// Custom Height
	CustomHeightAttr *bool

	// Hidden By Default
	ZeroHeightAttr *bool

	// Thick Top Border
	ThickTopAttr *bool

	// Thick Bottom Border
	ThickBottomAttr *bool

	// Maximum Outline Row
	OutlineLevelRowAttr *uint8

	// Column Outline Level
	OutlineLevelColAttr *uint8
}

func (_aceabc *CT_ExternalSheetNames) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_efadb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065"}}
	for _, _dbgbcf := range _aceabc.SheetName {
		e.EncodeElement(_dbgbcf, _efadb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egecgc ST_GradientType) Validate() error { return _egecgc.ValidateWithPath("") }
func (_dacga *CT_DataValidation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fabff := range start.Attr {
		if _fabff.Name.Local == "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_ffbf, _abec := _g.ParseBool(_fabff.Value)
			if _abec != nil {
				return _abec
			}
			_dacga.ShowErrorMessageAttr = &_ffbf
			continue
		}
		if _fabff.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065" {
			_dgbda, _bfbac := _fabff.Value, error(nil)
			if _bfbac != nil {
				return _bfbac
			}
			_dacga.ErrorTitleAttr = &_dgbda
			continue
		}
		if _fabff.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065" {
			_dacga.ErrorStyleAttr.UnmarshalXMLAttr(_fabff)
			continue
		}
		if _fabff.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_dacga.OperatorAttr.UnmarshalXMLAttr(_fabff)
			continue
		}
		if _fabff.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b" {
			_eceg, _bcgbg := _g.ParseBool(_fabff.Value)
			if _bcgbg != nil {
				return _bcgbg
			}
			_dacga.AllowBlankAttr = &_eceg
			continue
		}
		if _fabff.Name.Local == "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_degg, _cfca := _g.ParseBool(_fabff.Value)
			if _cfca != nil {
				return _cfca
			}
			_dacga.ShowDropDownAttr = &_degg
			continue
		}
		if _fabff.Name.Local == "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065" {
			_eeecc, _aeae := _g.ParseBool(_fabff.Value)
			if _aeae != nil {
				return _aeae
			}
			_dacga.ShowInputMessageAttr = &_eeecc
			continue
		}
		if _fabff.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dacga.TypeAttr.UnmarshalXMLAttr(_fabff)
			continue
		}
		if _fabff.Name.Local == "\u0069m\u0065\u004d\u006f\u0064\u0065" {
			_dacga.ImeModeAttr.UnmarshalXMLAttr(_fabff)
			continue
		}
		if _fabff.Name.Local == "\u0065\u0072\u0072o\u0072" {
			_ebacff, _aedf := _fabff.Value, error(nil)
			if _aedf != nil {
				return _aedf
			}
			_dacga.ErrorAttr = &_ebacff
			continue
		}
		if _fabff.Name.Local == "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065" {
			_ccdc, _fbgf := _fabff.Value, error(nil)
			if _fbgf != nil {
				return _fbgf
			}
			_dacga.PromptTitleAttr = &_ccdc
			continue
		}
		if _fabff.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_fbda, _bcda := _fabff.Value, error(nil)
			if _bcda != nil {
				return _bcda
			}
			_dacga.PromptAttr = &_fbda
			continue
		}
		if _fabff.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_cfea, _gbdab := ParseSliceST_Sqref(_fabff.Value)
			if _gbdab != nil {
				return _gbdab
			}
			_dacga.SqrefAttr = _cfea
			continue
		}
	}
_fgab:
	for {
		_dbab, _gdgge := d.Token()
		if _gdgge != nil {
			return _gdgge
		}
		switch _abbg := _dbab.(type) {
		case _b.StartElement:
			switch _abbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}:
				_dacga.Formula1 = new(string)
				if _bacac := d.DecodeElement(_dacga.Formula1, &_abbg); _bacac != nil {
					return _bacac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}:
				_dacga.Formula2 = new(string)
				if _eccb := d.DecodeElement(_dacga.Formula2, &_abbg); _eccb != nil {
					return _eccb
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _abbg.Name)
				if _dgeea := d.Skip(); _dgeea != nil {
					return _dgeea
				}
			}
		case _b.EndElement:
			break _fgab
		case _b.CharData:
		}
	}
	return nil
}
func (_aegag *CT_Font) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aegag.Name != nil {
		_gagad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0061\u006d\u0065"}}
		for _, _bgedf := range _aegag.Name {
			e.EncodeElement(_bgedf, _gagad)
		}
	}
	if _aegag.Charset != nil {
		_dfgdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		for _, _cfeda := range _aegag.Charset {
			e.EncodeElement(_cfeda, _dfgdd)
		}
	}
	if _aegag.Family != nil {
		_daafg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		for _, _egfae := range _aegag.Family {
			e.EncodeElement(_egfae, _daafg)
		}
	}
	if _aegag.B != nil {
		_adaba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _afbf := range _aegag.B {
			e.EncodeElement(_afbf, _adaba)
		}
	}
	if _aegag.I != nil {
		_dfgca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		for _, _efbg := range _aegag.I {
			e.EncodeElement(_efbg, _dfgca)
		}
	}
	if _aegag.Strike != nil {
		_bedfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		for _, _ceagb := range _aegag.Strike {
			e.EncodeElement(_ceagb, _bedfg)
		}
	}
	if _aegag.Outline != nil {
		_bcaba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		for _, _befcdd := range _aegag.Outline {
			e.EncodeElement(_befcdd, _bcaba)
		}
	}
	if _aegag.Shadow != nil {
		_eace := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		for _, _ffgbc := range _aegag.Shadow {
			e.EncodeElement(_ffgbc, _eace)
		}
	}
	if _aegag.Condense != nil {
		_afgac := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		for _, _gaddb := range _aegag.Condense {
			e.EncodeElement(_gaddb, _afgac)
		}
	}
	if _aegag.Extend != nil {
		_bfff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		for _, _gfgec := range _aegag.Extend {
			e.EncodeElement(_gfgec, _bfff)
		}
	}
	if _aegag.Color != nil {
		_gecad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		for _, _eaaga := range _aegag.Color {
			e.EncodeElement(_eaaga, _gecad)
		}
	}
	if _aegag.Sz != nil {
		_cbfcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		for _, _ceggc := range _aegag.Sz {
			e.EncodeElement(_ceggc, _cbfcb)
		}
	}
	if _aegag.U != nil {
		_fcgfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		for _, _ddbc := range _aegag.U {
			e.EncodeElement(_ddbc, _fcgfd)
		}
	}
	if _aegag.VertAlign != nil {
		_adcee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		for _, _ddgca := range _aegag.VertAlign {
			e.EncodeElement(_ddgca, _adcee)
		}
	}
	if _aegag.Scheme != nil {
		_accfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		for _, _gbdcc := range _aegag.Scheme {
			e.EncodeElement(_gbdcc, _accfe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ServerFormats() *CT_ServerFormats { _febfbd := &CT_ServerFormats{}; return _febfbd }
func (_dbeab *CT_RevisionComment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbeab.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ebecd := range start.Attr {
		if _ebecd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_gfcga, _ebfda := _g.ParseUint(_ebecd.Value, 10, 32)
			if _ebfda != nil {
				return _ebfda
			}
			_dbeab.SheetIdAttr = uint32(_gfcga)
			continue
		}
		if _ebecd.Name.Local == "\u0063\u0065\u006c\u006c" {
			_afbfcb, _eaee := _ebecd.Value, error(nil)
			if _eaee != nil {
				return _eaee
			}
			_dbeab.CellAttr = _afbfcb
			continue
		}
		if _ebecd.Name.Local == "\u0067\u0075\u0069\u0064" {
			_dcfae, _fdged := _ebecd.Value, error(nil)
			if _fdged != nil {
				return _fdged
			}
			_dbeab.GuidAttr = _dcfae
			continue
		}
		if _ebecd.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_dbeab.ActionAttr.UnmarshalXMLAttr(_ebecd)
			continue
		}
		if _ebecd.Name.Local == "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077" {
			_cagadf, _cdgfc := _g.ParseBool(_ebecd.Value)
			if _cdgfc != nil {
				return _cdgfc
			}
			_dbeab.AlwaysShowAttr = &_cagadf
			continue
		}
		if _ebecd.Name.Local == "\u006f\u006c\u0064" {
			_fgggbb, _abccg := _g.ParseBool(_ebecd.Value)
			if _abccg != nil {
				return _abccg
			}
			_dbeab.OldAttr = &_fgggbb
			continue
		}
		if _ebecd.Name.Local == "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw" {
			_dcefbe, _ebcggd := _g.ParseBool(_ebecd.Value)
			if _ebcggd != nil {
				return _ebcggd
			}
			_dbeab.HiddenRowAttr = &_dcefbe
			continue
		}
		if _ebecd.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e" {
			_bgbad, _eefea := _g.ParseBool(_ebecd.Value)
			if _eefea != nil {
				return _eefea
			}
			_dbeab.HiddenColumnAttr = &_bgbad
			continue
		}
		if _ebecd.Name.Local == "\u0061\u0075\u0074\u0068\u006f\u0072" {
			_gabgg, _gbfge := _ebecd.Value, error(nil)
			if _gbfge != nil {
				return _gbfge
			}
			_dbeab.AuthorAttr = _gabgg
			continue
		}
		if _ebecd.Name.Local == "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h" {
			_cfbfe, _egede := _g.ParseUint(_ebecd.Value, 10, 32)
			if _egede != nil {
				return _egede
			}
			_dgabb := uint32(_cfbfe)
			_dbeab.OldLengthAttr = &_dgabb
			continue
		}
		if _ebecd.Name.Local == "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h" {
			_cbdbbb, _cabdee := _g.ParseUint(_ebecd.Value, 10, 32)
			if _cabdee != nil {
				return _cabdee
			}
			_agaece := uint32(_cbdbbb)
			_dbeab.NewLengthAttr = &_agaece
			continue
		}
	}
	for {
		_abddd, _ddeaec := d.Token()
		if _ddeaec != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006fn\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _ddeaec)
		}
		if _dffadb, _eaege := _abddd.(_b.EndElement); _eaege && _dffadb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_MRUColors struct {

	// Color
	Color []*CT_Color
}

// Validate validates the CT_CommentList and its children
func (_dabg *CT_CommentList) Validate() error {
	return _dabg.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074")
}
func (_gfedbf ST_SortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bfbeb := _b.Attr{}
	_bfbeb.Name = name
	switch _gfedbf {
	case ST_SortTypeUnset:
		_bfbeb.Value = ""
	case ST_SortTypeNone:
		_bfbeb.Value = "\u006e\u006f\u006e\u0065"
	case ST_SortTypeAscending:
		_bfbeb.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_SortTypeDescending:
		_bfbeb.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case ST_SortTypeAscendingAlpha:
		_bfbeb.Value = "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case ST_SortTypeDescendingAlpha:
		_bfbeb.Value = "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case ST_SortTypeAscendingNatural:
		_bfbeb.Value = "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case ST_SortTypeDescendingNatural:
		_bfbeb.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return _bfbeb, nil
}

type CT_RevisionConflict struct {

	// Sheet Id
	SheetIdAttr *uint32
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func NewCT_String() *CT_String { _ggcbf := &CT_String{}; return _ggcbf }
func (_dagg *CT_Controls) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dced := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c"}}
	for _, _feabf := range _dagg.Control {
		e.EncodeElement(_feabf, _dced)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotSelection and its children, prefixing error messages with path
func (_dbgafd *CT_PivotSelection) ValidateWithPath(path string) error {
	if _eabfc := _dbgafd.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _eabfc != nil {
		return _eabfc
	}
	if _cgbee := _dbgafd.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _cgbee != nil {
		return _cgbee
	}
	if _bbbdg := _dbgafd.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bbbdg != nil {
		return _bbbdg
	}
	return nil
}
func (_egbgg *CT_CustomChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egbgg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ecga := range start.Attr {
		if _ecga.Name.Local == "\u0067\u0075\u0069\u0064" {
			_geddc, _afcd := _ecga.Value, error(nil)
			if _afcd != nil {
				return _afcd
			}
			_egbgg.GuidAttr = _geddc
			continue
		}
		if _ecga.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_egbda, _gcfbe := _g.ParseUint(_ecga.Value, 10, 32)
			if _gcfbe != nil {
				return _gcfbe
			}
			_fcda := uint32(_egbda)
			_egbgg.ScaleAttr = &_fcda
			continue
		}
		if _ecga.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_egbgg.StateAttr.UnmarshalXMLAttr(_ecga)
			continue
		}
		if _ecga.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_dgfbf, _dgce := _g.ParseBool(_ecga.Value)
			if _dgce != nil {
				return _dgce
			}
			_egbgg.ZoomToFitAttr = &_dgfbf
			continue
		}
	}
_egdba:
	for {
		_gfdd, _baed := d.Token()
		if _baed != nil {
			return _baed
		}
		switch _cfaea := _gfdd.(type) {
		case _b.StartElement:
			switch _cfaea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_egbgg.PageMargins = NewCT_PageMargins()
				if _ggecb := d.DecodeElement(_egbgg.PageMargins, &_cfaea); _ggecb != nil {
					return _ggecb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_egbgg.PageSetup = NewCT_CsPageSetup()
				if _aaaca := d.DecodeElement(_egbgg.PageSetup, &_cfaea); _aaaca != nil {
					return _aaaca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_egbgg.HeaderFooter = NewCT_HeaderFooter()
				if _eacb := d.DecodeElement(_egbgg.HeaderFooter, &_cfaea); _eacb != nil {
					return _eacb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077 \u0025\u0076", _cfaea.Name)
				if _ebbc := d.Skip(); _ebbc != nil {
					return _ebbc
				}
			}
		case _b.EndElement:
			break _egdba
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalSheetName struct {

	// Sheet Name Value
	ValAttr *string
}

func NewCT_DdeItem() *CT_DdeItem { _badae := &CT_DdeItem{}; return _badae }
func (_bbegd ST_Type) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbegd.String(), start)
}
func NewCT_CellStyles() *CT_CellStyles { _efag := &CT_CellStyles{}; return _efag }

type CT_OleObjects struct {

	// Embedded Object
	OleObject []*CT_OleObject
}

// Validate validates the CT_QueryTableRefresh and its children
func (_agebb *CT_QueryTableRefresh) Validate() error {
	return _agebb.ValidateWithPath("C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068")
}

type CT_RgbColor struct {

	// Alpha Red Green Blue
	RgbAttr *string
}

func (_cfbd *CT_ChartsheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gggb := range start.Attr {
		if _gggb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_ccba, _eedc := _g.ParseBool(_gggb.Value)
			if _eedc != nil {
				return _eedc
			}
			_cfbd.PublishedAttr = &_ccba
			continue
		}
		if _gggb.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_cfecf, _bfbfe := _gggb.Value, error(nil)
			if _bfbfe != nil {
				return _bfbfe
			}
			_cfbd.CodeNameAttr = &_cfecf
			continue
		}
	}
_ceeg:
	for {
		_aged, _eacce := d.Token()
		if _eacce != nil {
			return _eacce
		}
		switch _ddfb := _aged.(type) {
		case _b.StartElement:
			switch _ddfb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_cfbd.TabColor = NewCT_Color()
				if _bcee := d.DecodeElement(_cfbd.TabColor, &_ddfb); _bcee != nil {
					return _bcee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _ddfb.Name)
				if _efcb := d.Skip(); _efcb != nil {
					return _efcb
				}
			}
		case _b.EndElement:
			break _ceeg
		case _b.CharData:
		}
	}
	return nil
}
func (_cbaec *CT_MetadataBlocks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbaec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbaec.CountAttr)})
	}
	e.EncodeToken(start)
	_dcafd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
	for _, _eeebe := range _cbaec.Bk {
		e.EncodeElement(_eeebe, _dcafd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gfadd *Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"
	return _gfadd.CT_Metadata.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_PivotAreaReferences and its children, prefixing error messages with path
func (_gaead *CT_PivotAreaReferences) ValidateWithPath(path string) error {
	for _ecaad, _feae := range _gaead.Reference {
		if _aebfc := _feae.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _ecaad)); _aebfc != nil {
			return _aebfc
		}
	}
	return nil
}

// Validate validates the CT_ReviewedRevisions and its children
func (_dcefe *CT_ReviewedRevisions) Validate() error {
	return _dcefe.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073")
}
func (_agaaf *CT_Member) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbddba := range start.Attr {
		if _fbddba.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cfcef, _fbcfa := _fbddba.Value, error(nil)
			if _fbcfa != nil {
				return _fbcfa
			}
			_agaaf.NameAttr = _cfcef
			continue
		}
	}
	for {
		_egafb, _cacfcfe := d.Token()
		if _cacfcfe != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0065\u006db\u0065\u0072\u003a\u0020\u0025\u0073", _cacfcfe)
		}
		if _effdc, _ecced := _egafb.(_b.EndElement); _ecced && _effdc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adggb *ST_CalcMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adggb = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_adggb = 1
	case "\u0061\u0075\u0074\u006f":
		*_adggb = 2
	case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
		*_adggb = 3
	}
	return nil
}
func (_cgegfa *ST_HorizontalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cgegfa = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_cgegfa = 1
	case "\u006c\u0065\u0066\u0074":
		*_cgegfa = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_cgegfa = 3
	case "\u0072\u0069\u0067h\u0074":
		*_cgegfa = 4
	case "\u0066\u0069\u006c\u006c":
		*_cgegfa = 5
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_cgegfa = 6
	case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
		*_cgegfa = 7
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_cgegfa = 8
	}
	return nil
}

// ValidateWithPath validates the CT_DdeItems and its children, prefixing error messages with path
func (_fabce *CT_DdeItems) ValidateWithPath(path string) error {
	for _fagab, _gbab := range _fabce.DdeItem {
		if _adcf := _gbab.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u0064\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _fagab)); _adcf != nil {
			return _adcf
		}
	}
	return nil
}
func (_cbfcd *CT_RevisionAutoFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbcgdd := range start.Attr {
		if _cbcgdd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_fggee, _gfega := _g.ParseUint(_cbcgdd.Value, 10, 32)
			if _gfega != nil {
				return _gfega
			}
			_cbfcd.SheetIdAttr = uint32(_fggee)
			continue
		}
		if _cbcgdd.Name.Local == "\u0072\u0065\u0066" {
			_fgdg, _gaeabe := _cbcgdd.Value, error(nil)
			if _gaeabe != nil {
				return _gaeabe
			}
			_cbfcd.RefAttr = _fgdg
			continue
		}
		if _cbcgdd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_fbbgd, _daaed := _g.ParseUint(_cbcgdd.Value, 10, 32)
			if _daaed != nil {
				return _daaed
			}
			_cffaa := uint32(_fbbgd)
			_cbfcd.AutoFormatIdAttr = &_cffaa
			continue
		}
		if _cbcgdd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_cfcace, _cagdcb := _g.ParseBool(_cbcgdd.Value)
			if _cagdcb != nil {
				return _cagdcb
			}
			_cbfcd.ApplyNumberFormatsAttr = &_cfcace
			continue
		}
		if _cbcgdd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bgfba, _ecbca := _g.ParseBool(_cbcgdd.Value)
			if _ecbca != nil {
				return _ecbca
			}
			_cbfcd.ApplyBorderFormatsAttr = &_bgfba
			continue
		}
		if _cbcgdd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cedbd, _ddbecd := _g.ParseBool(_cbcgdd.Value)
			if _ddbecd != nil {
				return _ddbecd
			}
			_cbfcd.ApplyFontFormatsAttr = &_cedbd
			continue
		}
		if _cbcgdd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_acgbce, _cbacb := _g.ParseBool(_cbcgdd.Value)
			if _cbacb != nil {
				return _cbacb
			}
			_cbfcd.ApplyPatternFormatsAttr = &_acgbce
			continue
		}
		if _cbcgdd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bceca, _daeegg := _g.ParseBool(_cbcgdd.Value)
			if _daeegg != nil {
				return _daeegg
			}
			_cbfcd.ApplyAlignmentFormatsAttr = &_bceca
			continue
		}
		if _cbcgdd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fbabg, _fabcb := _g.ParseBool(_cbcgdd.Value)
			if _fabcb != nil {
				return _fabcb
			}
			_cbfcd.ApplyWidthHeightFormatsAttr = &_fbabg
			continue
		}
	}
	for {
		_dffabf, _ggede := d.Token()
		if _ggede != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eA\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006eg\u003a\u0020\u0025\u0073", _ggede)
		}
		if _ecbda, _fceaf := _dffabf.(_b.EndElement); _fceaf && _ecbda.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetId and its children, prefixing error messages with path
func (_fcfbc *CT_SheetId) ValidateWithPath(path string) error { return nil }
func NewCT_Dxf() *CT_Dxf                                      { _gdcb := &CT_Dxf{}; return _gdcb }
func (_beaea *CT_WebPublishItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _beaea.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _a.Sprintf("\u0025\u0076", _beaea.DivIdAttr)})
	_afcfg, _fgcgbc := _beaea.SourceTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065"})
	if _fgcgbc != nil {
		return _fgcgbc
	}
	start.Attr = append(start.Attr, _afcfg)
	if _beaea.SourceRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f"}, Value: _a.Sprintf("\u0025\u0076", *_beaea.SourceRefAttr)})
	}
	if _beaea.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_beaea.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", _beaea.DestinationFileAttr)})
	if _beaea.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_beaea.TitleAttr)})
	}
	if _beaea.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_beaea.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_baage *CT_QueryCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbgcgg := range start.Attr {
		if _gbgcgg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dddgec, _caadb := _g.ParseUint(_gbgcgg.Value, 10, 32)
			if _caadb != nil {
				return _caadb
			}
			_eebbb := uint32(_dddgec)
			_baage.CountAttr = &_eebbb
			continue
		}
	}
_adcga:
	for {
		_accdfb, _eaabdc := d.Token()
		if _eaabdc != nil {
			return _eaabdc
		}
		switch _dbabg := _accdfb.(type) {
		case _b.StartElement:
			switch _dbabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065r\u0079"}:
				_cbded := NewCT_Query()
				if _eefcg := d.DecodeElement(_cbded, &_dbabg); _eefcg != nil {
					return _eefcg
				}
				_baage.Query = append(_baage.Query, _cbded)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _dbabg.Name)
				if _bccgc := d.Skip(); _bccgc != nil {
					return _bccgc
				}
			}
		case _b.EndElement:
			break _adcga
		case _b.CharData:
		}
	}
	return nil
}

type CT_CustomProperties struct {

	// Custom Property
	CustomPr []*CT_CustomProperty
}

func (_cbbfc *CT_FieldsUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfbf := range start.Attr {
		if _dfbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dfbcc, _fbbfe := _g.ParseUint(_dfbf.Value, 10, 32)
			if _fbbfe != nil {
				return _fbbfe
			}
			_ceegd := uint32(_dfbcc)
			_cbbfc.CountAttr = &_ceegd
			continue
		}
	}
_bgge:
	for {
		_bebeg, _feffd := d.Token()
		if _feffd != nil {
			return _feffd
		}
		switch _ggab := _bebeg.(type) {
		case _b.StartElement:
			switch _ggab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}:
				_agggf := NewCT_FieldUsage()
				if _cbgff := d.DecodeElement(_agggf, &_ggab); _cbgff != nil {
					return _cbgff
				}
				_cbbfc.FieldUsage = append(_cbbfc.FieldUsage, _agggf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073\u0055s\u0061g\u0065\u0020\u0025\u0076", _ggab.Name)
				if _cceg := d.Skip(); _cceg != nil {
					return _cceg
				}
			}
		case _b.EndElement:
			break _bgge
		case _b.CharData:
		}
	}
	return nil
}
func (_befdd ST_Pane) Validate() error             { return _befdd.ValidateWithPath("") }
func NewCT_RevisionConflict() *CT_RevisionConflict { _eagag := &CT_RevisionConflict{}; return _eagag }

type CT_CellXfs struct {

	// Format Count
	CountAttr *uint32

	// Format
	Xf []*CT_Xf
}

// Validate validates the CT_PivotArea and its children
func (_bgdca *CT_PivotArea) Validate() error {
	return _bgdca.ValidateWithPath("\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061")
}
func (_cbdbb *CT_PivotAreaReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbdbb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbdbb.CountAttr)})
	}
	e.EncodeToken(start)
	_gadegg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065"}}
	for _, _cbggac := range _cbdbb.Reference {
		e.EncodeElement(_cbggac, _gadegg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Map() *CT_Map { _beafg := &CT_Map{}; return _beafg }

type CT_ChartFormats struct {

	// Format Count
	CountAttr *uint32

	// PivotChart Format
	ChartFormat []*CT_ChartFormat
}

func NewCT_MetadataBlock() *CT_MetadataBlock { _fbgdb := &CT_MetadataBlock{}; return _fbgdb }
func (_baefe *CT_PivotDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baefe.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baefe.MeasureAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _baefe.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _baefe.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _baefe.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataRefs() *CT_DataRefs { _efeg := &CT_DataRefs{}; return _efeg }
func NewCT_Items() *CT_Items       { _dddb := &CT_Items{}; return _dddb }

type CT_XmlPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_abbb *CT_Pages) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abbb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_abbb.CountAttr)})
	}
	e.EncodeToken(start)
	_aeggg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u0067\u0065"}}
	for _, _debfe := range _abbb.Page {
		e.EncodeElement(_debfe, _aeggg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CalculatedMembers and its children, prefixing error messages with path
func (_cdee *CT_CalculatedMembers) ValidateWithPath(path string) error {
	for _bfc, _daad := range _cdee.CalculatedMember {
		if _ddg := _daad.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fCa\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _bfc)); _ddg != nil {
			return _ddg
		}
	}
	return nil
}
func NewCT_I() *CT_I { _gfcd := &CT_I{}; return _gfcd }
func (_bbcfg *CT_ColorFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befd := range start.Attr {
		if _befd.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_gdacb, _bgea := _g.ParseUint(_befd.Value, 10, 32)
			if _bgea != nil {
				return _bgea
			}
			_dafd := uint32(_gdacb)
			_bbcfg.DxfIdAttr = &_dafd
			continue
		}
		if _befd.Name.Local == "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr" {
			_ccbc, _bebe := _g.ParseBool(_befd.Value)
			if _bebe != nil {
				return _bebe
			}
			_bbcfg.CellColorAttr = &_ccbc
			continue
		}
	}
	for {
		_bagf, _fefc := d.Token()
		if _fefc != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072:\u0020\u0025\u0073", _fefc)
		}
		if _aabg, _ffbabb := _bagf.(_b.EndElement); _ffbabb && _aabg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgfeb ST_Comments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_baafa := _b.Attr{}
	_baafa.Name = name
	switch _bgfeb {
	case ST_CommentsUnset:
		_baafa.Value = ""
	case ST_CommentsCommNone:
		_baafa.Value = "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case ST_CommentsCommIndicator:
		_baafa.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case ST_CommentsCommIndAndComment:
		_baafa.Value = "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return _baafa, nil
}

const (
	ST_ObjectsUnset        ST_Objects = 0
	ST_ObjectsAll          ST_Objects = 1
	ST_ObjectsPlaceholders ST_Objects = 2
	ST_ObjectsNone         ST_Objects = 3
)

func (_efdd *CT_SmartTagType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efdd.NamespaceUriAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006de\u0073\u0070\u0061\u0063\u0065\u0055\u0072\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_efdd.NamespaceUriAttr)})
	}
	if _efdd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_efdd.NameAttr)})
	}
	if _efdd.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_efdd.UrlAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eecce *ST_ShowDataAs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceaef, _dfbcga := d.Token()
	if _dfbcga != nil {
		return _dfbcga
	}
	if _gafbe, _ffdcf := _ceaef.(_b.EndElement); _ffdcf && _gafbe.Name == start.Name {
		*_eecce = 1
		return nil
	}
	if _afbbd, _ceeca := _ceaef.(_b.CharData); !_ceeca {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceaef)
	} else {
		switch string(_afbbd) {
		case "":
			*_eecce = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_eecce = 1
		case "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065":
			*_eecce = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_eecce = 3
		case "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066":
			*_eecce = 4
		case "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c":
			*_eecce = 5
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077":
			*_eecce = 6
		case "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c":
			*_eecce = 7
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c":
			*_eecce = 8
		case "\u0069\u006e\u0064e\u0078":
			*_eecce = 9
		}
	}
	_ceaef, _dfbcga = d.Token()
	if _dfbcga != nil {
		return _dfbcga
	}
	if _afbge, _caefe := _ceaef.(_b.EndElement); _caefe && _afbge.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceaef)
}

type CT_Break struct {

	// Id
	IdAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Manual Page Break
	ManAttr *bool

	// Pivot-Created Page Break
	PtAttr *bool
}
type PivotCacheDefinition struct{ CT_PivotCacheDefinition }

func (_aabcf ST_DvAspect) ValidateWithPath(path string) error {
	switch _aabcf {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aabcf))
	}
	return nil
}
func (_eaeb *CT_MergeCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebab := range start.Attr {
		if _bebab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_baebc, _dbccd := _g.ParseUint(_bebab.Value, 10, 32)
			if _dbccd != nil {
				return _dbccd
			}
			_dbaabg := uint32(_baebc)
			_eaeb.CountAttr = &_dbaabg
			continue
		}
	}
_fgeee:
	for {
		_gdcac, _aeeab := d.Token()
		if _aeeab != nil {
			return _aeeab
		}
		switch _ecffa := _gdcac.(type) {
		case _b.StartElement:
			switch _ecffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0072\u0067\u0065\u0043\u0065\u006cl"}:
				_aaad := NewCT_MergeCell()
				if _bbaggb := d.DecodeElement(_aaad, &_ecffa); _bbaggb != nil {
					return _bbaggb
				}
				_eaeb.MergeCell = append(_eaeb.MergeCell, _aaad)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004de\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073 \u0025\u0076", _ecffa.Name)
				if _eacec := d.Skip(); _eacec != nil {
					return _eacec
				}
			}
		case _b.EndElement:
			break _fgeee
		case _b.CharData:
		}
	}
	return nil
}

type ST_DataValidationErrorStyle byte

// Validate validates the CT_DateTime and its children
func (_fdadf *CT_DateTime) Validate() error {
	return _fdadf.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065")
}
func NewCT_CellSmartTags() *CT_CellSmartTags { _fcdd := &CT_CellSmartTags{}; return _fcdd }

// ValidateWithPath validates the CT_BooleanProperty and its children, prefixing error messages with path
func (_adca *CT_BooleanProperty) ValidateWithPath(path string) error { return nil }
func (_aabfd *CT_CellSmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afgff := range start.Attr {
		if _afgff.Name.Local == "\u006b\u0065\u0079" {
			_agcgg, _gcbf := _afgff.Value, error(nil)
			if _gcbf != nil {
				return _gcbf
			}
			_aabfd.KeyAttr = _agcgg
			continue
		}
		if _afgff.Name.Local == "\u0076\u0061\u006c" {
			_abbde, _edcc := _afgff.Value, error(nil)
			if _edcc != nil {
				return _edcc
			}
			_aabfd.ValAttr = _abbde
			continue
		}
	}
	for {
		_ggdda, _beef := d.Token()
		if _beef != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072: \u0025\u0073", _beef)
		}
		if _fdbd, _aeec := _ggdda.(_b.EndElement); _aeec && _fdbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adbgg *CT_WorkbookProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _adbgg.WorkbookPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookPasswordAttr)})
	}
	if _adbgg.WorkbookPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookPasswordCharacterSetAttr)})
	}
	if _adbgg.RevisionsPasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsPasswordAttr)})
	}
	if _adbgg.RevisionsPasswordCharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsPasswordCharacterSetAttr)})
	}
	if _adbgg.LockStructureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_adbgg.LockStructureAttr))})
	}
	if _adbgg.LockWindowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_adbgg.LockWindowsAttr))})
	}
	if _adbgg.LockRevisionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_adbgg.LockRevisionAttr))})
	}
	if _adbgg.RevisionsAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsAlgorithmNameAttr)})
	}
	if _adbgg.RevisionsHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsHashValueAttr)})
	}
	if _adbgg.RevisionsSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsSaltValueAttr)})
	}
	if _adbgg.RevisionsSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.RevisionsSpinCountAttr)})
	}
	if _adbgg.WorkbookAlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookAlgorithmNameAttr)})
	}
	if _adbgg.WorkbookHashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookHashValueAttr)})
	}
	if _adbgg.WorkbookSaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookSaltValueAttr)})
	}
	if _adbgg.WorkbookSpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_adbgg.WorkbookSpinCountAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgdfe *CT_Scenario) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdbdg := range start.Attr {
		if _bdbdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcddc, _cdcgb := _bdbdg.Value, error(nil)
			if _cdcgb != nil {
				return _cdcgb
			}
			_bgdfe.NameAttr = _dcddc
			continue
		}
		if _bdbdg.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_bccdbe, _ebedg := _g.ParseBool(_bdbdg.Value)
			if _ebedg != nil {
				return _ebedg
			}
			_bgdfe.LockedAttr = &_bccdbe
			continue
		}
		if _bdbdg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dfcdd, _gadbf := _g.ParseBool(_bdbdg.Value)
			if _gadbf != nil {
				return _gadbf
			}
			_bgdfe.HiddenAttr = &_dfcdd
			continue
		}
		if _bdbdg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbcea, _fdbe := _g.ParseUint(_bdbdg.Value, 10, 32)
			if _fdbe != nil {
				return _fdbe
			}
			_feggcd := uint32(_cbcea)
			_bgdfe.CountAttr = &_feggcd
			continue
		}
		if _bdbdg.Name.Local == "\u0075\u0073\u0065\u0072" {
			_dgddc, _fcdbdd := _bdbdg.Value, error(nil)
			if _fcdbdd != nil {
				return _fcdbdd
			}
			_bgdfe.UserAttr = &_dgddc
			continue
		}
		if _bdbdg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_efcde, _fgdcd := _bdbdg.Value, error(nil)
			if _fgdcd != nil {
				return _fgdcd
			}
			_bgdfe.CommentAttr = &_efcde
			continue
		}
	}
_edegdf:
	for {
		_afdbg, _fgbce := d.Token()
		if _fgbce != nil {
			return _fgbce
		}
		switch _dbeaa := _afdbg.(type) {
		case _b.StartElement:
			switch _dbeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}:
				_bgfgf := NewCT_InputCells()
				if _bgeba := d.DecodeElement(_bgfgf, &_dbeaa); _bgeba != nil {
					return _bgeba
				}
				_bgdfe.InputCells = append(_bgdfe.InputCells, _bgfgf)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0020\u0025\u0076", _dbeaa.Name)
				if _efbcce := d.Skip(); _efbcce != nil {
					return _efbcce
				}
			}
		case _b.EndElement:
			break _edegdf
		case _b.CharData:
		}
	}
	return nil
}
func (_dcbefgd ST_PhoneticAlignment) ValidateWithPath(path string) error {
	switch _dcbefgd {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcbefgd))
	}
	return nil
}

// Validate validates the CT_Fill and its children
func (_gbfeg *CT_Fill) Validate() error {
	return _gbfeg.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u006c")
}

type CT_DateGroupItem struct {

	// Year
	YearAttr uint16

	// Month
	MonthAttr *uint16

	// Day
	DayAttr *uint16

	// Hour
	HourAttr *uint16

	// Minute
	MinuteAttr *uint16

	// Second
	SecondAttr *uint16

	// Date Time Grouping
	DateTimeGroupingAttr ST_DateTimeGrouping
}

func (_fcabd ST_TextVAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_befca := _b.Attr{}
	_befca.Name = name
	switch _fcabd {
	case ST_TextVAlignUnset:
		_befca.Value = ""
	case ST_TextVAlignTop:
		_befca.Value = "\u0074\u006f\u0070"
	case ST_TextVAlignCenter:
		_befca.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextVAlignBottom:
		_befca.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_TextVAlignJustify:
		_befca.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextVAlignDistributed:
		_befca.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _befca, nil
}

type Connections struct{ CT_Connections }

func (_eaed *CT_GroupMember) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gadec := range start.Attr {
		if _gadec.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gffde, _bbeee := _gadec.Value, error(nil)
			if _bbeee != nil {
				return _bbeee
			}
			_eaed.UniqueNameAttr = _gffde
			continue
		}
		if _gadec.Name.Local == "\u0067\u0072\u006fu\u0070" {
			_efega, _begfc := _g.ParseBool(_gadec.Value)
			if _begfc != nil {
				return _begfc
			}
			_eaed.GroupAttr = &_efega
			continue
		}
	}
	for {
		_egced, _ebgdc := d.Token()
		if _ebgdc != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072:\u0020\u0025\u0073", _ebgdc)
		}
		if _agafg, _beegbd := _egced.(_b.EndElement); _beegbd && _agafg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RElt and its children
func (_agaec *CT_RElt) Validate() error {
	return _agaec.ValidateWithPath("\u0043T\u005f\u0052\u0045\u006c\u0074")
}
func (_ddebf *CT_QueryTableRefresh) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddebf.PreserveSortFilterLayoutAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddebf.PreserveSortFilterLayoutAttr))})
	}
	if _ddebf.FieldIdWrappedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddebf.FieldIdWrappedAttr))})
	}
	if _ddebf.HeadersInLastRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddebf.HeadersInLastRefreshAttr))})
	}
	if _ddebf.MinimumVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ddebf.MinimumVersionAttr)})
	}
	if _ddebf.NextIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0065\u0078\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ddebf.NextIdAttr)})
	}
	if _ddebf.UnboundColumnsLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ddebf.UnboundColumnsLeftAttr)})
	}
	if _ddebf.UnboundColumnsRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ddebf.UnboundColumnsRightAttr)})
	}
	e.EncodeToken(start)
	_cafe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_ddebf.QueryTableFields, _cafe)
	if _ddebf.QueryTableDeletedFields != nil {
		_cbbdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073"}}
		e.EncodeElement(_ddebf.QueryTableDeletedFields, _cbbdg)
	}
	if _ddebf.SortState != nil {
		_ccgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_ddebf.SortState, _ccgag)
	}
	if _ddebf.ExtLst != nil {
		_eeefe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ddebf.ExtLst, _eeefe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bdcfd *CT_FutureMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bdcfd.NameAttr)})
	if _bdcfd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bdcfd.CountAttr)})
	}
	e.EncodeToken(start)
	if _bdcfd.Bk != nil {
		_ddba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006b"}}
		for _, _dafde := range _bdcfd.Bk {
			e.EncodeElement(_dafde, _ddba)
		}
	}
	if _bdcfd.ExtLst != nil {
		_cdged := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdcfd.ExtLst, _cdged)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CalculatedItems and its children
func (_dfgb *CT_CalculatedItems) Validate() error {
	return _dfgb.ValidateWithPath("\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073")
}

type CT_UndoInfo struct {

	// Index
	IndexAttr uint32

	// Expression
	ExpAttr ST_FormulaExpression

	// Reference 3D
	Ref3DAttr *bool

	// Array Formula
	ArrayAttr *bool

	// Value Needed
	VAttr *bool

	// Defined Name Formula
	NfAttr *bool

	// Cross Sheet Move
	CsAttr *bool

	// Range
	DrAttr string

	// Defined Name
	DnAttr *string

	// Cell Reference
	RAttr *string

	// Sheet Id
	SIdAttr *uint32
}

func (_caacf *CT_WebPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdgbd := range start.Attr {
		if _fdgbd.Name.Local == "\u0078\u006c\u0032\u0030\u0030\u0030" {
			_fcbeb, _eegabc := _g.ParseBool(_fdgbd.Value)
			if _eegabc != nil {
				return _eegabc
			}
			_caacf.Xl2000Attr = &_fcbeb
			continue
		}
		if _fdgbd.Name.Local == "\u0078\u006d\u006c" {
			_bdcdfa, _ggbbc := _g.ParseBool(_fdgbd.Value)
			if _ggbbc != nil {
				return _ggbbc
			}
			_caacf.XmlAttr = &_bdcdfa
			continue
		}
		if _fdgbd.Name.Local == "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065" {
			_geedee, _debae := _g.ParseBool(_fdgbd.Value)
			if _debae != nil {
				return _debae
			}
			_caacf.ParsePreAttr = &_geedee
			continue
		}
		if _fdgbd.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_eefag, _aefbbb := _g.ParseBool(_fdgbd.Value)
			if _aefbbb != nil {
				return _aefbbb
			}
			_caacf.ConsecutiveAttr = &_eefag
			continue
		}
		if _fdgbd.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_adcgga, _cbdef := _g.ParseBool(_fdgbd.Value)
			if _cbdef != nil {
				return _cbdef
			}
			_caacf.FirstRowAttr = &_adcgga
			continue
		}
		if _fdgbd.Name.Local == "\u0078\u006c\u0039\u0037" {
			_acbag, _dbeddf := _g.ParseBool(_fdgbd.Value)
			if _dbeddf != nil {
				return _dbeddf
			}
			_caacf.Xl97Attr = &_acbag
			continue
		}
		if _fdgbd.Name.Local == "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s" {
			_gacbge, _dgaecg := _g.ParseBool(_fdgbd.Value)
			if _dgaecg != nil {
				return _dgaecg
			}
			_caacf.TextDatesAttr = &_gacbge
			continue
		}
		if _fdgbd.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061" {
			_adgde, _bcfgba := _g.ParseBool(_fdgbd.Value)
			if _bcfgba != nil {
				return _bcfgba
			}
			_caacf.SourceDataAttr = &_adgde
			continue
		}
		if _fdgbd.Name.Local == "\u0075\u0072\u006c" {
			_efada, _bffcg := _fdgbd.Value, error(nil)
			if _bffcg != nil {
				return _bffcg
			}
			_caacf.UrlAttr = &_efada
			continue
		}
		if _fdgbd.Name.Local == "\u0070\u006f\u0073\u0074" {
			_egcgaa, _cagbbg := _fdgbd.Value, error(nil)
			if _cagbbg != nil {
				return _cagbbg
			}
			_caacf.PostAttr = &_egcgaa
			continue
		}
		if _fdgbd.Name.Local == "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073" {
			_dedgfg, _bcegad := _g.ParseBool(_fdgbd.Value)
			if _bcegad != nil {
				return _bcegad
			}
			_caacf.HtmlTablesAttr = &_dedgfg
			continue
		}
		if _fdgbd.Name.Local == "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074" {
			_caacf.HtmlFormatAttr.UnmarshalXMLAttr(_fdgbd)
			continue
		}
		if _fdgbd.Name.Local == "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065" {
			_gbgeb, _aadef := _fdgbd.Value, error(nil)
			if _aadef != nil {
				return _aadef
			}
			_caacf.EditPageAttr = &_gbgeb
			continue
		}
	}
_fdbaa:
	for {
		_deafdc, _egcaae := d.Token()
		if _egcaae != nil {
			return _egcaae
		}
		switch _bgbbe := _deafdc.(type) {
		case _b.StartElement:
			switch _bgbbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0073"}:
				_caacf.Tables = NewCT_Tables()
				if _gdaeb := d.DecodeElement(_caacf.Tables, &_bgbbe); _gdaeb != nil {
					return _gdaeb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072\u0020\u0025\u0076", _bgbbe.Name)
				if _bbefa := d.Skip(); _bbefa != nil {
					return _bbefa
				}
			}
		case _b.EndElement:
			break _fdbaa
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_XStringElement() *CT_XStringElement { _bcfba := &CT_XStringElement{}; return _bcfba }

// ValidateWithPath validates the CT_CellAlignment and its children, prefixing error messages with path
func (_dcgef *CT_CellAlignment) ValidateWithPath(path string) error {
	if _fcd := _dcgef.HorizontalAttr.ValidateWithPath(path + "\u002fH\u006fr\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _fcd != nil {
		return _fcd
	}
	if _cbegb := _dcgef.VerticalAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u0074\u0074\u0072"); _cbegb != nil {
		return _cbegb
	}
	return nil
}

// Validate validates the CT_DrawingHF and its children
func (_gdcf *CT_DrawingHF) Validate() error {
	return _gdcf.ValidateWithPath("\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046")
}
func (_bgffe ST_Qualifier) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgffe.String(), start)
}
func NewCT_Revisions() *CT_Revisions { _fbaad := &CT_Revisions{}; return _fbaad }

// Validate validates the CT_MergeCells and its children
func (_gadeg *CT_MergeCells) Validate() error {
	return _gadeg.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073")
}
func NewCT_Cell() *CT_Cell { _fabb := &CT_Cell{}; return _fabb }
func (_eedfc *CT_MeasureGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbed := range start.Attr {
		if _cbed.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fagaa, _aeedc := _cbed.Value, error(nil)
			if _aeedc != nil {
				return _aeedc
			}
			_eedfc.NameAttr = _fagaa
			continue
		}
		if _cbed.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ddfde, _adgfd := _cbed.Value, error(nil)
			if _adgfd != nil {
				return _adgfd
			}
			_eedfc.CaptionAttr = _ddfde
			continue
		}
	}
	for {
		_fadd, _ddcd := d.Token()
		if _ddcd != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072e\u0047\u0072\u006fu\u0070:\u0020\u0025\u0073", _ddcd)
		}
		if _ebec, _bgbbg := _fadd.(_b.EndElement); _bgbbg && _ebec.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MRUColors and its children, prefixing error messages with path
func (_ggaffb *CT_MRUColors) ValidateWithPath(path string) error {
	for _efcff, _aabb := range _ggaffb.Color {
		if _daecc := _aabb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _efcff)); _daecc != nil {
			return _daecc
		}
	}
	return nil
}

// Validate validates the CT_CustomFilters and its children
func (_cgcf *CT_CustomFilters) Validate() error {
	return _cgcf.ValidateWithPath("\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func NewCT_Users() *CT_Users { _febbae := &CT_Users{}; return _febbae }

// Validate validates the CT_ExternalReference and its children
func (_edggf *CT_ExternalReference) Validate() error {
	return _edggf.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065")
}

// Validate validates the PivotCacheDefinition and its children
func (_cabce *PivotCacheDefinition) Validate() error {
	return _cabce.ValidateWithPath("P\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func (_fegc *CT_CellStyleXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcege := range start.Attr {
		if _gcege.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdbb, _cefd := _g.ParseUint(_gcege.Value, 10, 32)
			if _cefd != nil {
				return _cefd
			}
			_aacg := uint32(_fdbb)
			_fegc.CountAttr = &_aacg
			continue
		}
	}
_aeffb:
	for {
		_eccd, _dfgdc := d.Token()
		if _dfgdc != nil {
			return _dfgdc
		}
		switch _caee := _eccd.(type) {
		case _b.StartElement:
			switch _caee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_adcd := NewCT_Xf()
				if _bdgf := d.DecodeElement(_adcd, &_caee); _bdgf != nil {
					return _bdgf
				}
				_fegc.Xf = append(_fegc.Xf, _adcd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073\u0020\u0025\u0076", _caee.Name)
				if _ddac := d.Skip(); _ddac != nil {
					return _ddac
				}
			}
		case _b.EndElement:
			break _aeffb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FutureMetadataBlock() *CT_FutureMetadataBlock {
	_efcaa := &CT_FutureMetadataBlock{}
	return _efcaa
}
func (_dgdde *CT_ObjectPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgdde.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.LockedAttr))})
	}
	if _dgdde.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.DefaultSizeAttr))})
	}
	if _dgdde.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.PrintAttr))})
	}
	if _dgdde.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.DisabledAttr))})
	}
	if _dgdde.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.UiObjectAttr))})
	}
	if _dgdde.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.AutoFillAttr))})
	}
	if _dgdde.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.AutoLineAttr))})
	}
	if _dgdde.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.AutoPictAttr))})
	}
	if _dgdde.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_dgdde.MacroAttr)})
	}
	if _dgdde.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dgdde.AltTextAttr)})
	}
	if _dgdde.DdeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdde.DdeAttr))})
	}
	if _dgdde.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dgdde.IdAttr)})
	}
	e.EncodeToken(start)
	_ffaec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_dgdde.Anchor, _ffaec)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_HeaderFooter struct {

	// Different Odd Even Header Footer
	DifferentOddEvenAttr *bool

	// Different First Page
	DifferentFirstAttr *bool

	// Scale Header & Footer With Document
	ScaleWithDocAttr *bool

	// Align Margins
	AlignWithMarginsAttr *bool

	// Odd Header
	OddHeader *string

	// Odd Page Footer
	OddFooter *string

	// Even Page Header
	EvenHeader *string

	// Even Page Footer
	EvenFooter *string

	// First Page Header
	FirstHeader *string

	// First Page Footer
	FirstFooter *string
}
type ST_SortMethod byte

func (_beeea *CT_PivotFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egebf := range start.Attr {
		if _egebf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbfdc, _fbcae := _g.ParseUint(_egebf.Value, 10, 32)
			if _fbcae != nil {
				return _fbcae
			}
			_ccage := uint32(_cbfdc)
			_beeea.CountAttr = &_ccage
			continue
		}
	}
_cbaecf:
	for {
		_abcgb, _cbedb := d.Token()
		if _cbedb != nil {
			return _cbedb
		}
		switch _fbfdbd := _abcgb.(type) {
		case _b.StartElement:
			switch _fbfdbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_cedfce := NewCT_PivotFilter()
				if _cbeeb := d.DecodeElement(_cedfce, &_fbfdbd); _cbeeb != nil {
					return _cbeeb
				}
				_beeea.Filter = append(_beeea.Filter, _cedfce)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076o\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _fbfdbd.Name)
				if _ccddd := d.Skip(); _ccddd != nil {
					return _ccddd
				}
			}
		case _b.EndElement:
			break _cbaecf
		case _b.CharData:
		}
	}
	return nil
}
func (_gcfagg *ST_DynamicFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcfagg = 0
	case "\u006e\u0075\u006c\u006c":
		*_gcfagg = 1
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gcfagg = 2
	case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gcfagg = 3
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_gcfagg = 4
	case "\u0074\u006f\u0064a\u0079":
		*_gcfagg = 5
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_gcfagg = 6
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_gcfagg = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_gcfagg = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_gcfagg = 9
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_gcfagg = 10
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_gcfagg = 11
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_gcfagg = 12
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gcfagg = 13
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gcfagg = 14
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_gcfagg = 15
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_gcfagg = 16
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_gcfagg = 17
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_gcfagg = 18
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_gcfagg = 19
	case "\u0051\u0031":
		*_gcfagg = 20
	case "\u0051\u0032":
		*_gcfagg = 21
	case "\u0051\u0033":
		*_gcfagg = 22
	case "\u0051\u0034":
		*_gcfagg = 23
	case "\u004d\u0031":
		*_gcfagg = 24
	case "\u004d\u0032":
		*_gcfagg = 25
	case "\u004d\u0033":
		*_gcfagg = 26
	case "\u004d\u0034":
		*_gcfagg = 27
	case "\u004d\u0035":
		*_gcfagg = 28
	case "\u004d\u0036":
		*_gcfagg = 29
	case "\u004d\u0037":
		*_gcfagg = 30
	case "\u004d\u0038":
		*_gcfagg = 31
	case "\u004d\u0039":
		*_gcfagg = 32
	case "\u004d\u0031\u0030":
		*_gcfagg = 33
	case "\u004d\u0031\u0031":
		*_gcfagg = 34
	case "\u004d\u0031\u0032":
		*_gcfagg = 35
	}
	return nil
}
func (_gcccc ST_HorizontalAlignment) String() string {
	switch _gcccc {
	case 0:
		return ""
	case 1:
		return "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case 2:
		return "\u006c\u0065\u0066\u0074"
	case 3:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0069\u0067h\u0074"
	case 5:
		return "\u0066\u0069\u006c\u006c"
	case 6:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 7:
		return "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case 8:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}
func (_cgeadf *CT_FieldUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggdee := range start.Attr {
		if _ggdee.Name.Local == "\u0078" {
			_aagfe, _acff := _g.ParseInt(_ggdee.Value, 10, 32)
			if _acff != nil {
				return _acff
			}
			_cgeadf.XAttr = int32(_aagfe)
			continue
		}
	}
	for {
		_ggca, _fefg := d.Token()
		if _fefg != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046i\u0065l\u0064U\u0073\u0061\u0067\u0065\u003a\u0020\u0025s", _fefg)
		}
		if _deabc, _gbegc := _ggca.(_b.EndElement); _gbegc && _deabc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afccg ST_rwColActionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_afccg.String(), start)
}
func (_feecb *CT_DdeValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _feecb.RowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_feecb.RowsAttr)})
	}
	if _feecb.ColsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_feecb.ColsAttr)})
	}
	e.EncodeToken(start)
	_dgffd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c\u0075\u0065"}}
	for _, _ggfe := range _feecb.Value {
		e.EncodeElement(_ggfe, _dgffd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalDefinedNames and its children, prefixing error messages with path
func (_gbce *CT_ExternalDefinedNames) ValidateWithPath(path string) error {
	for _gaabc, _agcda := range _gbce.DefinedName {
		if _cbfg := _agcda.ValidateWithPath(_a.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _gaabc)); _cbfg != nil {
			return _cbfg
		}
	}
	return nil
}

// Validate validates the CT_DdeLink and its children
func (_bfbbf *CT_DdeLink) Validate() error {
	return _bfbbf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b")
}

// ValidateWithPath validates the CT_RowFields and its children, prefixing error messages with path
func (_eeda *CT_RowFields) ValidateWithPath(path string) error {
	for _bcecag, _dfcce := range _eeda.Field {
		if _ecggc := _dfcce.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fF\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _bcecag)); _ecggc != nil {
			return _ecggc
		}
	}
	return nil
}
func (_gcgacb *CT_RevisionAutoFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gcgacb.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _gcgacb.RefAttr)})
	if _gcgacb.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gcgacb.AutoFormatIdAttr)})
	}
	if _gcgacb.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyNumberFormatsAttr))})
	}
	if _gcgacb.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyBorderFormatsAttr))})
	}
	if _gcgacb.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyFontFormatsAttr))})
	}
	if _gcgacb.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyPatternFormatsAttr))})
	}
	if _gcgacb.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyAlignmentFormatsAttr))})
	}
	if _gcgacb.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gcgacb.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ProtectedRange and its children, prefixing error messages with path
func (_afbef *CT_ProtectedRange) ValidateWithPath(path string) error { return nil }
func (_bgedfc *CT_Workbook) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bgedfc.Sheets = NewCT_Sheets()
	for _, _fecbf := range start.Attr {
		if _fecbf.Name.Local == "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065" {
			_bgedfc.ConformanceAttr.UnmarshalXMLAttr(_fecbf)
			continue
		}
	}
_ffccg:
	for {
		_baecf, _gfefa := d.Token()
		if _gfefa != nil {
			return _gfefa
		}
		switch _adcdfa := _baecf.(type) {
		case _b.StartElement:
			switch _adcdfa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}:
				_bgedfc.FileVersion = NewCT_FileVersion()
				if _bdceg := d.DecodeElement(_bgedfc.FileVersion, &_adcdfa); _bdceg != nil {
					return _bdceg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"}:
				_bgedfc.FileSharing = NewCT_FileSharing()
				if _fbgffe := d.DecodeElement(_bgedfc.FileSharing, &_adcdfa); _fbgffe != nil {
					return _fbgffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}:
				_bgedfc.WorkbookPr = NewCT_WorkbookPr()
				if _dbgcfa := d.DecodeElement(_bgedfc.WorkbookPr, &_adcdfa); _dbgcfa != nil {
					return _dbgcfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0062\u006f\u006f\u006b\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}:
				_bgedfc.WorkbookProtection = NewCT_WorkbookProtection()
				if _ccgbcg := d.DecodeElement(_bgedfc.WorkbookProtection, &_adcdfa); _ccgbcg != nil {
					return _ccgbcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u006f\u006b\u0056\u0069\u0065\u0077s"}:
				_bgedfc.BookViews = NewCT_BookViews()
				if _egagc := d.DecodeElement(_bgedfc.BookViews, &_adcdfa); _egagc != nil {
					return _egagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0073"}:
				if _ebfgfa := d.DecodeElement(_bgedfc.Sheets, &_adcdfa); _ebfgfa != nil {
					return _ebfgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}:
				_bgedfc.FunctionGroups = NewCT_FunctionGroups()
				if _fecgf := d.DecodeElement(_bgedfc.FunctionGroups, &_adcdfa); _fecgf != nil {
					return _fecgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065x\u0074e\u0072\u006e\u0061\u006c\u0052e\u0066\u0065r\u0065\u006e\u0063\u0065\u0073"}:
				_bgedfc.ExternalReferences = NewCT_ExternalReferences()
				if _efbee := d.DecodeElement(_bgedfc.ExternalReferences, &_adcdfa); _efbee != nil {
					return _efbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}:
				_bgedfc.DefinedNames = NewCT_DefinedNames()
				if _gfcfeg := d.DecodeElement(_bgedfc.DefinedNames, &_adcdfa); _gfcfeg != nil {
					return _gfcfeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0050\u0072"}:
				_bgedfc.CalcPr = NewCT_CalcPr()
				if _dababc := d.DecodeElement(_bgedfc.CalcPr, &_adcdfa); _dababc != nil {
					return _dababc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0053\u0069\u007a\u0065"}:
				_bgedfc.OleSize = NewCT_OleSize()
				if _dbgbb := d.DecodeElement(_bgedfc.OleSize, &_adcdfa); _dbgbb != nil {
					return _dbgbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074om\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}:
				_bgedfc.CustomWorkbookViews = NewCT_CustomWorkbookViews()
				if _ffcbc := d.DecodeElement(_bgedfc.CustomWorkbookViews, &_adcdfa); _ffcbc != nil {
					return _ffcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"}:
				_bgedfc.PivotCaches = NewCT_PivotCaches()
				if _ggaef := d.DecodeElement(_bgedfc.PivotCaches, &_adcdfa); _ggaef != nil {
					return _ggaef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}:
				_bgedfc.SmartTagPr = NewCT_SmartTagPr()
				if _ecbga := d.DecodeElement(_bgedfc.SmartTagPr, &_adcdfa); _ecbga != nil {
					return _ecbga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}:
				_bgedfc.SmartTagTypes = NewCT_SmartTagTypes()
				if _agfgdb := d.DecodeElement(_bgedfc.SmartTagTypes, &_adcdfa); _agfgdb != nil {
					return _agfgdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}:
				_bgedfc.WebPublishing = NewCT_WebPublishing()
				if _bgcaag := d.DecodeElement(_bgedfc.WebPublishing, &_adcdfa); _bgcaag != nil {
					return _bgcaag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}:
				_gbafb := NewCT_FileRecoveryPr()
				if _gabbf := d.DecodeElement(_gbafb, &_adcdfa); _gabbf != nil {
					return _gabbf
				}
				_bgedfc.FileRecoveryPr = append(_bgedfc.FileRecoveryPr, _gbafb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062j\u0065\u0063\u0074\u0073"}:
				_bgedfc.WebPublishObjects = NewCT_WebPublishObjects()
				if _ffgag := d.DecodeElement(_bgedfc.WebPublishObjects, &_adcdfa); _ffgag != nil {
					return _ffgag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgedfc.ExtLst = NewCT_ExtensionList()
				if _eebdce := d.DecodeElement(_bgedfc.ExtLst, &_adcdfa); _eebdce != nil {
					return _eebdce
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0020\u0025\u0076", _adcdfa.Name)
				if _gabfg := d.Skip(); _gabfg != nil {
					return _gabfg
				}
			}
		case _b.EndElement:
			break _ffccg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_PageField() *CT_PageField   { _affe := &CT_PageField{}; return _affe }
func NewCT_OleObject() *CT_OleObject   { _ecgec := &CT_OleObject{}; return _ecgec }
func NewCT_WorkbookPr() *CT_WorkbookPr { _bacbbd := &CT_WorkbookPr{}; return _bacbbd }

// ValidateWithPath validates the CT_SheetData and its children, prefixing error messages with path
func (_faaff *CT_SheetData) ValidateWithPath(path string) error {
	for _egeeg, _bcaggc := range _faaff.Row {
		if _efcdg := _bcaggc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _egeeg)); _efcdg != nil {
			return _efcdg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ConditionalFormatting and its children, prefixing error messages with path
func (_bagee *CT_ConditionalFormatting) ValidateWithPath(path string) error {
	for _cffc, _fafc := range _bagee.CfRule {
		if _bdec := _fafc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u0066\u0052\u0075\u006c\u0065\u005b\u0025\u0064\u005d", path, _cffc)); _bdec != nil {
			return _bdec
		}
	}
	if _bagee.ExtLst != nil {
		if _ceafd := _bagee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceafd != nil {
			return _ceafd
		}
	}
	return nil
}
func (_cbbde ST_FilterOperator) String() string {
	switch _cbbde {
	case 0:
		return ""
	case 1:
		return "\u0065\u0071\u0075a\u006c"
	case 2:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 3:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return ""
}

// Validate validates the CT_MetadataType and its children
func (_dbeg *CT_MetadataType) Validate() error {
	return _dbeg.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065")
}
func (_geggc *CT_FontSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _geggc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PCDKPIs and its children
func (_ebgee *CT_PCDKPIs) Validate() error {
	return _ebgee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073")
}
func (_fcgbb ST_TotalsRowFunction) Validate() error { return _fcgbb.ValidateWithPath("") }
func (_bgccf *CT_FutureMetadataBlock) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dfedb:
	for {
		_cccc, _cgcc := d.Token()
		if _cgcc != nil {
			return _cgcc
		}
		switch _gcgac := _cccc.(type) {
		case _b.StartElement:
			switch _gcgac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgccf.ExtLst = NewCT_ExtensionList()
				if _cbgeae := d.DecodeElement(_bgccf.ExtLst, &_gcgac); _cbgeae != nil {
					return _cbgeae
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0075\u0074\u0075r\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0020\u0025\u0076", _gcgac.Name)
				if _acee := d.Skip(); _acee != nil {
					return _acee
				}
			}
		case _b.EndElement:
			break _dfedb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FileRecoveryPr() *CT_FileRecoveryPr { _fggc := &CT_FileRecoveryPr{}; return _fggc }
func (_eecdf *CT_Cell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eecdf.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_eecdf.RAttr)})
	}
	if _eecdf.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_eecdf.SAttr)})
	}
	if _eecdf.TAttr != ST_CellTypeUnset {
		_aaea, _eedbe := _eecdf.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _eedbe != nil {
			return _eedbe
		}
		start.Attr = append(start.Attr, _aaea)
	}
	if _eecdf.CmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_eecdf.CmAttr)})
	}
	if _eecdf.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_eecdf.VmAttr)})
	}
	if _eecdf.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eecdf.PhAttr))})
	}
	e.EncodeToken(start)
	if _eecdf.F != nil {
		_dgfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066"}}
		e.EncodeElement(_eecdf.F, _dgfb)
	}
	if _eecdf.V != nil {
		_bgga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_f.AddPreserveSpaceAttr(&_bgga, *_eecdf.V)
		e.EncodeElement(_eecdf.V, _bgga)
	}
	if _eecdf.Is != nil {
		_gebd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ai\u0073"}}
		e.EncodeElement(_eecdf.Is, _gebd)
	}
	if _eecdf.ExtLst != nil {
		_edda := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eecdf.ExtLst, _edda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_DataValidationImeMode byte
type CT_ExtensionList struct {

	// Extension
	Ext []*CT_Extension
}
type ST_TableType byte

func (_dbca *CT_ChartFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbca.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dbca.CountAttr)})
	}
	e.EncodeToken(start)
	_febd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074"}}
	for _, _eeeba := range _dbca.ChartFormat {
		e.EncodeElement(_eeeba, _febd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgcdda *CT_VolType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_bbebdg, _egddef := _cgcdda.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _egddef != nil {
		return _egddef
	}
	start.Attr = append(start.Attr, _bbebdg)
	e.EncodeToken(start)
	_cfcgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0069\u006e"}}
	for _, _cbbacc := range _cgcdda.Main {
		e.EncodeElement(_cbbacc, _cfcgd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Metadata and its children
func (_edbga *CT_Metadata) Validate() error {
	return _edbga.ValidateWithPath("C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061")
}
func (_egfcf ST_Scope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egfcf.String(), start)
}

type CT_MergeCell struct {

	// Reference
	RefAttr string
}
type Worksheet struct{ CT_Worksheet }

func (_gfaed *CT_UnderlineProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfdc := range start.Attr {
		if _ddfdc.Name.Local == "\u0076\u0061\u006c" {
			_gfaed.ValAttr.UnmarshalXMLAttr(_ddfdc)
			continue
		}
	}
	for {
		_fbbaeg, _aggage := d.Token()
		if _aggage != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0055\u006e\u0064\u0065r\u006ci\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _aggage)
		}
		if _agced, _fdfac := _fbbaeg.(_b.EndElement); _fdfac && _agced.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eeecdb ST_MdxKPIProperty) String() string {
	switch _eeecdb {
	case 0:
		return ""
	case 1:
		return "\u0076"
	case 2:
		return "\u0067"
	case 3:
		return "\u0073"
	case 4:
		return "\u0074"
	case 5:
		return "\u0077"
	case 6:
		return "\u006d"
	}
	return ""
}

type CT_SortCondition struct {

	// Descending
	DescendingAttr *bool

	// Sort By
	SortByAttr ST_SortBy

	// Reference
	RefAttr string

	// Custom List
	CustomListAttr *string

	// Format Id
	DxfIdAttr *uint32

	// Icon Set
	IconSetAttr ST_IconSetType

	// Icon Id
	IconIdAttr *uint32
}

// ValidateWithPath validates the CT_CellWatches and its children, prefixing error messages with path
func (_dgdgf *CT_CellWatches) ValidateWithPath(path string) error {
	for _ffbe, _bbgcd := range _dgdgf.CellWatch {
		if _gcef := _bbgcd.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0043\u0065\u006cl\u0057\u0061\u0074\u0063\u0068\u005b\u0025\u0064\u005d", path, _ffbe)); _gcef != nil {
			return _gcef
		}
	}
	return nil
}

type CT_CustomFilter struct {

	// Filter Comparison Operator
	OperatorAttr ST_FilterOperator

	// Top or Bottom Value
	ValAttr *string
}
type ST_CellComments byte

func NewCT_PivotFields() *CT_PivotFields { _ceabd := &CT_PivotFields{}; return _ceabd }

// Validate validates the CT_Table and its children
func (_egcac *CT_Table) Validate() error {
	return _egcac.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}
func (_ebcf *CT_ChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebcf.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebcf.TabSelectedAttr))})
	}
	if _ebcf.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _a.Sprintf("\u0025\u0076", *_ebcf.ZoomScaleAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ebcf.WorkbookViewIdAttr)})
	if _ebcf.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebcf.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _ebcf.ExtLst != nil {
		_bbaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ebcf.ExtLst, _bbaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_af *CT_BooleanProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _af.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_af.ValAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcbf *CT_DdeLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgad := range start.Attr {
		if _dgad.Name.Local == "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065" {
			_acfa, _agbcb := _dgad.Value, error(nil)
			if _agbcb != nil {
				return _agbcb
			}
			_fcbf.DdeServiceAttr = _acfa
			continue
		}
		if _dgad.Name.Local == "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063" {
			_bcab, _cedbf := _dgad.Value, error(nil)
			if _cedbf != nil {
				return _cedbf
			}
			_fcbf.DdeTopicAttr = _bcab
			continue
		}
	}
_gaba:
	for {
		_dfaf, _dacc := d.Token()
		if _dacc != nil {
			return _dacc
		}
		switch _egaf := _dfaf.(type) {
		case _b.StartElement:
			switch _egaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_fcbf.DdeItems = NewCT_DdeItems()
				if _adcega := d.DecodeElement(_fcbf.DdeItems, &_egaf); _adcega != nil {
					return _adcega
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _egaf.Name)
				if _gcgf := d.Skip(); _gcgf != nil {
					return _gcgf
				}
			}
		case _b.EndElement:
			break _gaba
		case _b.CharData:
		}
	}
	return nil
}
func (_cfebc ST_SheetState) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abfac := _b.Attr{}
	_abfac.Name = name
	switch _cfebc {
	case ST_SheetStateUnset:
		_abfac.Value = ""
	case ST_SheetStateVisible:
		_abfac.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_SheetStateHidden:
		_abfac.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_SheetStateVeryHidden:
		_abfac.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _abfac, nil
}
func (_effaa ST_CredMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbdbbd := _b.Attr{}
	_cbdbbd.Name = name
	switch _effaa {
	case ST_CredMethodUnset:
		_cbdbbd.Value = ""
	case ST_CredMethodIntegrated:
		_cbdbbd.Value = "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case ST_CredMethodNone:
		_cbdbbd.Value = "\u006e\u006f\u006e\u0065"
	case ST_CredMethodStored:
		_cbdbbd.Value = "\u0073\u0074\u006f\u0072\u0065\u0064"
	case ST_CredMethodPrompt:
		_cbdbbd.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return _cbdbbd, nil
}
func (_ggbbg *ST_DataValidationImeMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aebeb, _ebbec := d.Token()
	if _ebbec != nil {
		return _ebbec
	}
	if _facbda, _dfeff := _aebeb.(_b.EndElement); _dfeff && _facbda.Name == start.Name {
		*_ggbbg = 1
		return nil
	}
	if _daacd, _cfafd := _aebeb.(_b.CharData); !_cfafd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aebeb)
	} else {
		switch string(_daacd) {
		case "":
			*_ggbbg = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_ggbbg = 1
		case "\u006f\u0066\u0066":
			*_ggbbg = 2
		case "\u006f\u006e":
			*_ggbbg = 3
		case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
			*_ggbbg = 4
		case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_ggbbg = 5
		case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_ggbbg = 6
		case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
			*_ggbbg = 7
		case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
			*_ggbbg = 8
		case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
			*_ggbbg = 9
		case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
			*_ggbbg = 10
		case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
			*_ggbbg = 11
		}
	}
	_aebeb, _ebbec = d.Token()
	if _ebbec != nil {
		return _ebbec
	}
	if _abaff, _deafbe := _aebeb.(_b.EndElement); _deafbe && _abaff.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aebeb)
}
func (_gaffgg *CT_TableColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cdbaa := range start.Attr {
		if _cdbaa.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_bdbaf, _bddabf := _g.ParseUint(_cdbaa.Value, 10, 32)
			if _bddabf != nil {
				return _bddabf
			}
			_fgdgf := uint32(_bdbaf)
			_gaffgg.TotalsRowDxfIdAttr = &_fgdgf
			continue
		}
		if _cdbaa.Name.Local == "\u0069\u0064" {
			_gcabcf, _aebaaf := _g.ParseUint(_cdbaa.Value, 10, 32)
			if _aebaaf != nil {
				return _aebaaf
			}
			_gaffgg.IdAttr = uint32(_gcabcf)
			continue
		}
		if _cdbaa.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_gcfeg, _aaabc := _cdbaa.Value, error(nil)
			if _aaabc != nil {
				return _aaabc
			}
			_gaffgg.HeaderRowCellStyleAttr = &_gcfeg
			continue
		}
		if _cdbaa.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dedgb, _degda := _cdbaa.Value, error(nil)
			if _degda != nil {
				return _degda
			}
			_gaffgg.NameAttr = _dedgb
			continue
		}
		if _cdbaa.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c" {
			_bdegd, _ccdgg := _cdbaa.Value, error(nil)
			if _ccdgg != nil {
				return _ccdgg
			}
			_gaffgg.TotalsRowLabelAttr = &_bdegd
			continue
		}
		if _cdbaa.Name.Local == "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064" {
			_eadde, _egacc := _g.ParseUint(_cdbaa.Value, 10, 32)
			if _egacc != nil {
				return _egacc
			}
			_aceg := uint32(_eadde)
			_gaffgg.QueryTableFieldIdAttr = &_aceg
			continue
		}
		if _cdbaa.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_ffgef, _cdddg := _g.ParseUint(_cdbaa.Value, 10, 32)
			if _cdddg != nil {
				return _cdddg
			}
			_ffcbf := uint32(_ffgef)
			_gaffgg.HeaderRowDxfIdAttr = &_ffcbf
			continue
		}
		if _cdbaa.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_cdcgg, _gcabd := _g.ParseUint(_cdbaa.Value, 10, 32)
			if _gcabd != nil {
				return _gcabd
			}
			_cefddd := uint32(_cdcgg)
			_gaffgg.DataDxfIdAttr = &_cefddd
			continue
		}
		if _cdbaa.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_babgba, _ffabc := _cdbaa.Value, error(nil)
			if _ffabc != nil {
				return _ffabc
			}
			_gaffgg.UniqueNameAttr = &_babgba
			continue
		}
		if _cdbaa.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e" {
			_gaffgg.TotalsRowFunctionAttr.UnmarshalXMLAttr(_cdbaa)
			continue
		}
		if _cdbaa.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_acbbbb, _ddgfcb := _cdbaa.Value, error(nil)
			if _ddgfcb != nil {
				return _ddgfcb
			}
			_gaffgg.DataCellStyleAttr = &_acbbbb
			continue
		}
		if _cdbaa.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_egdgc, _bacdef := _cdbaa.Value, error(nil)
			if _bacdef != nil {
				return _bacdef
			}
			_gaffgg.TotalsRowCellStyleAttr = &_egdgc
			continue
		}
	}
_dgagcf:
	for {
		_dfceb, _efggf := d.Token()
		if _efggf != nil {
			return _efggf
		}
		switch _badbde := _dfceb.(type) {
		case _b.StartElement:
			switch _badbde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006ccu\u006c\u0061\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_gaffgg.CalculatedColumnFormula = NewCT_TableFormula()
				if _dbefe := d.DecodeElement(_gaffgg.CalculatedColumnFormula, &_badbde); _dbefe != nil {
					return _dbefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006ft\u0061\u006c\u0073R\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_gaffgg.TotalsRowFormula = NewCT_TableFormula()
				if _fcfge := d.DecodeElement(_gaffgg.TotalsRowFormula, &_badbde); _fcfge != nil {
					return _fcfge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "x\u006d\u006c\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"}:
				_gaffgg.XmlColumnPr = NewCT_XmlColumnPr()
				if _abcdg := d.DecodeElement(_gaffgg.XmlColumnPr, &_badbde); _abcdg != nil {
					return _abcdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaffgg.ExtLst = NewCT_ExtensionList()
				if _daeff := d.DecodeElement(_gaffgg.ExtLst, &_badbde); _daeff != nil {
					return _daeff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006fl\u0075m\u006e\u0020\u0025\u0076", _badbde.Name)
				if _fabcd := d.Skip(); _fabcd != nil {
					return _fabcd
				}
			}
		case _b.EndElement:
			break _dgagcf
		case _b.CharData:
		}
	}
	return nil
}
func (_dfcea *CT_MeasureDimensionMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eagbe := range start.Attr {
		if _eagbe.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_ebdbg, _fegga := _g.ParseUint(_eagbe.Value, 10, 32)
			if _fegga != nil {
				return _fegga
			}
			_adegf := uint32(_ebdbg)
			_dfcea.MeasureGroupAttr = &_adegf
			continue
		}
		if _eagbe.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_ebbdea, _edgbf := _g.ParseUint(_eagbe.Value, 10, 32)
			if _edgbf != nil {
				return _edgbf
			}
			_cfccg := uint32(_ebbdea)
			_dfcea.DimensionAttr = &_cfccg
			continue
		}
	}
	for {
		_fabgf, _dgfca := d.Token()
		if _dgfca != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0061s\u0075r\u0065D\u0069m\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u003a\u0020\u0025\u0073", _dgfca)
		}
		if _ebddc, _edgbb := _fabgf.(_b.EndElement); _edgbb && _ebddc.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CustomWorkbookView and its children
func (_edgc *CT_CustomWorkbookView) Validate() error {
	return _edgc.ValidateWithPath("C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_gccba *CT_ExternalLinkChoice) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbfef:
	for {
		_cacbf, _debaa := d.Token()
		if _debaa != nil {
			return _debaa
		}
		switch _afdaa := _cacbf.(type) {
		case _b.StartElement:
			switch _afdaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gccba.ExternalBook = NewCT_ExternalBook()
				if _febdge := d.DecodeElement(_gccba.ExternalBook, &_afdaa); _febdge != nil {
					return _febdge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gccba.DdeLink = NewCT_DdeLink()
				if _ebafb := d.DecodeElement(_gccba.DdeLink, &_afdaa); _ebafb != nil {
					return _ebafb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gccba.OleLink = NewCT_OleLink()
				if _cbgea := d.DecodeElement(_gccba.OleLink, &_afdaa); _cbgea != nil {
					return _cbgea
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _afdaa.Name)
				if _cadgc := d.Skip(); _cadgc != nil {
					return _cadgc
				}
			}
		case _b.EndElement:
			break _cbfef
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_DataValidationOperatorUnset              ST_DataValidationOperator = 0
	ST_DataValidationOperatorBetween            ST_DataValidationOperator = 1
	ST_DataValidationOperatorNotBetween         ST_DataValidationOperator = 2
	ST_DataValidationOperatorEqual              ST_DataValidationOperator = 3
	ST_DataValidationOperatorNotEqual           ST_DataValidationOperator = 4
	ST_DataValidationOperatorLessThan           ST_DataValidationOperator = 5
	ST_DataValidationOperatorLessThanOrEqual    ST_DataValidationOperator = 6
	ST_DataValidationOperatorGreaterThan        ST_DataValidationOperator = 7
	ST_DataValidationOperatorGreaterThanOrEqual ST_DataValidationOperator = 8
)

func (_cegadg ST_ExternalConnectionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dbfcfd := _b.Attr{}
	_dbfcfd.Name = name
	switch _cegadg {
	case ST_ExternalConnectionTypeUnset:
		_dbfcfd.Value = ""
	case ST_ExternalConnectionTypeGeneral:
		_dbfcfd.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_ExternalConnectionTypeText:
		_dbfcfd.Value = "\u0074\u0065\u0078\u0074"
	case ST_ExternalConnectionTypeMDY:
		_dbfcfd.Value = "\u004d\u0044\u0059"
	case ST_ExternalConnectionTypeDMY:
		_dbfcfd.Value = "\u0044\u004d\u0059"
	case ST_ExternalConnectionTypeYMD:
		_dbfcfd.Value = "\u0059\u004d\u0044"
	case ST_ExternalConnectionTypeMYD:
		_dbfcfd.Value = "\u004d\u0059\u0044"
	case ST_ExternalConnectionTypeDYM:
		_dbfcfd.Value = "\u0044\u0059\u004d"
	case ST_ExternalConnectionTypeYDM:
		_dbfcfd.Value = "\u0059\u0044\u004d"
	case ST_ExternalConnectionTypeSkip:
		_dbfcfd.Value = "\u0073\u006b\u0069\u0070"
	case ST_ExternalConnectionTypeEMD:
		_dbfcfd.Value = "\u0045\u004d\u0044"
	}
	return _dbfcfd, nil
}

type CT_FunctionGroup struct {

	// Name
	NameAttr *string
}

func NewCT_CustomFilter() *CT_CustomFilter { _dcab := &CT_CustomFilter{}; return _dcab }
func NewCT_PCDKPIs() *CT_PCDKPIs           { _bcfg := &CT_PCDKPIs{}; return _bcfg }

type CT_WorkbookProtection struct {

	// Legacy Workbook Password
	WorkbookPasswordAttr *string

	// Workbook Password Character Set
	WorkbookPasswordCharacterSetAttr *string

	// Legacy Revisions Password
	RevisionsPasswordAttr *string

	// Revisions Password Character Set
	RevisionsPasswordCharacterSetAttr *string

	// Lock Structure
	LockStructureAttr *bool

	// Lock Windows
	LockWindowsAttr *bool

	// Lock Revisions
	LockRevisionAttr *bool

	// Cryptographic Algorithm Name
	RevisionsAlgorithmNameAttr *string

	// Password Hash Value
	RevisionsHashValueAttr *string

	// Salt Value for Password Verifier
	RevisionsSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	RevisionsSpinCountAttr *uint32

	// Cryptographic Algorithm Name
	WorkbookAlgorithmNameAttr *string

	// Password Hash Value
	WorkbookHashValueAttr *string

	// Salt Value for Password Verifier
	WorkbookSaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	WorkbookSpinCountAttr *uint32
}

func NewCT_PageItem() *CT_PageItem { _gegbec := &CT_PageItem{}; return _gegbec }
func (_faaag ST_PhoneticAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fefbbf := _b.Attr{}
	_fefbbf.Name = name
	switch _faaag {
	case ST_PhoneticAlignmentUnset:
		_fefbbf.Value = ""
	case ST_PhoneticAlignmentNoControl:
		_fefbbf.Value = "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case ST_PhoneticAlignmentLeft:
		_fefbbf.Value = "\u006c\u0065\u0066\u0074"
	case ST_PhoneticAlignmentCenter:
		_fefbbf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_PhoneticAlignmentDistributed:
		_fefbbf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _fefbbf, nil
}

type CT_ObjectPr struct {

	// Locked Flag
	LockedAttr *bool

	// Default Size Flag
	DefaultSizeAttr *bool

	// Print Flag
	PrintAttr *bool

	// Disabled Flag
	DisabledAttr *bool

	// UI Object Flag
	UiObjectAttr *bool

	// Automatic Fill Flag
	AutoFillAttr *bool

	// Automatic Line Flag
	AutoLineAttr *bool

	// Automatic Size Flag
	AutoPictAttr *bool

	// Custom Function
	MacroAttr *string

	// Alternative Text
	AltTextAttr *string

	// Dynamic Data Exchange Flag
	DdeAttr *bool
	IdAttr  *string
	Anchor  *CT_ObjectAnchor
}

func (_eddgcg ST_CfvoType) Validate() error { return _eddgcg.ValidateWithPath("") }
func (_ffdbc ST_ItemType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffdbc.String(), start)
}
func NewCT_PivotAreaReference() *CT_PivotAreaReference {
	_faaef := &CT_PivotAreaReference{}
	return _faaef
}
func (_dafag *CT_WebPublishItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dafag.SourceTypeAttr = ST_WebSourceType(1)
	for _, _gfcedcc := range start.Attr {
		if _gfcedcc.Name.Local == "\u0069\u0064" {
			_adefe, _efbfa := _g.ParseUint(_gfcedcc.Value, 10, 32)
			if _efbfa != nil {
				return _efbfa
			}
			_dafag.IdAttr = uint32(_adefe)
			continue
		}
		if _gfcedcc.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_bdbgc, _gdfge := _gfcedcc.Value, error(nil)
			if _gdfge != nil {
				return _gdfge
			}
			_dafag.DivIdAttr = _bdbgc
			continue
		}
		if _gfcedcc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065" {
			_dafag.SourceTypeAttr.UnmarshalXMLAttr(_gfcedcc)
			continue
		}
		if _gfcedcc.Name.Local == "\u0073o\u0075\u0072\u0063\u0065\u0052\u0065f" {
			_ccgde, _agaba := _gfcedcc.Value, error(nil)
			if _agaba != nil {
				return _agaba
			}
			_dafag.SourceRefAttr = &_ccgde
			continue
		}
		if _gfcedcc.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_cbecaa, _affgca := _gfcedcc.Value, error(nil)
			if _affgca != nil {
				return _affgca
			}
			_dafag.SourceObjectAttr = &_cbecaa
			continue
		}
		if _gfcedcc.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_eeaca, _ebeca := _gfcedcc.Value, error(nil)
			if _ebeca != nil {
				return _ebeca
			}
			_dafag.DestinationFileAttr = _eeaca
			continue
		}
		if _gfcedcc.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_fagcea, _afabf := _gfcedcc.Value, error(nil)
			if _afabf != nil {
				return _afabf
			}
			_dafag.TitleAttr = &_fagcea
			continue
		}
		if _gfcedcc.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_edbeaa, _fcbfe := _g.ParseBool(_gfcedcc.Value)
			if _fcbfe != nil {
				return _fcbfe
			}
			_dafag.AutoRepublishAttr = &_edbeaa
			continue
		}
	}
	for {
		_eecdcd, _bcde := d.Token()
		if _bcde != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d: \u0025\u0073", _bcde)
		}
		if _adbcg, _ebcfdg := _eecdcd.(_b.EndElement); _ebcfdg && _adbcg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_afcbbe ST_Pane) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ababc := _b.Attr{}
	_ababc.Name = name
	switch _afcbbe {
	case ST_PaneUnset:
		_ababc.Value = ""
	case ST_PaneBottomRight:
		_ababc.Value = "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneTopRight:
		_ababc.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PaneBottomLeft:
		_ababc.Value = "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PaneTopLeft:
		_ababc.Value = "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return _ababc, nil
}
func (_fgf *CT_AutoFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bee := range start.Attr {
		if _bee.Name.Local == "\u0072\u0065\u0066" {
			_aag, _ea := _bee.Value, error(nil)
			if _ea != nil {
				return _ea
			}
			_fgf.RefAttr = &_aag
			continue
		}
	}
_beb:
	for {
		_bag, _eca := d.Token()
		if _eca != nil {
			return _eca
		}
		switch _fcc := _bag.(type) {
		case _b.StartElement:
			switch _fcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_gf := NewCT_FilterColumn()
				if _agf := d.DecodeElement(_gf, &_fcc); _agf != nil {
					return _agf
				}
				_fgf.FilterColumn = append(_fgf.FilterColumn, _gf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fgf.SortState = NewCT_SortState()
				if _dce := d.DecodeElement(_fgf.SortState, &_fcc); _dce != nil {
					return _dce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgf.ExtLst = NewCT_ExtensionList()
				if _gbb := d.DecodeElement(_fgf.ExtLst, &_fcc); _gbb != nil {
					return _gbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041u\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072 \u0025\u0076", _fcc.Name)
				if _faf := d.Skip(); _faf != nil {
					return _faf
				}
			}
		case _b.EndElement:
			break _beb
		case _b.CharData:
		}
	}
	return nil
}
func (_acbegc ST_DateTimeGrouping) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_acbegc.String(), start)
}

// Validate validates the CT_ExternalBook and its children
func (_eaccf *CT_ExternalBook) Validate() error {
	return _eaccf.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b")
}
func (_efcfa *CT_WorkbookPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efcfa.Date1904Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.Date1904Attr))})
	}
	if _efcfa.ShowObjectsAttr != ST_ObjectsUnset {
		_gcbdae, _ddcdg := _efcfa.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _ddcdg != nil {
			return _ddcdg
		}
		start.Attr = append(start.Attr, _gcbdae)
	}
	if _efcfa.ShowBorderUnselectedTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.ShowBorderUnselectedTablesAttr))})
	}
	if _efcfa.FilterPrivacyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.FilterPrivacyAttr))})
	}
	if _efcfa.PromptedSolutionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.PromptedSolutionsAttr))})
	}
	if _efcfa.ShowInkAnnotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.ShowInkAnnotationAttr))})
	}
	if _efcfa.BackupFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.BackupFileAttr))})
	}
	if _efcfa.SaveExternalLinkValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.SaveExternalLinkValuesAttr))})
	}
	if _efcfa.UpdateLinksAttr != ST_UpdateLinksUnset {
		_aecccb, _cbcdd := _efcfa.UpdateLinksAttr.MarshalXMLAttr(_b.Name{Local: "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073"})
		if _cbcdd != nil {
			return _cbcdd
		}
		start.Attr = append(start.Attr, _aecccb)
	}
	if _efcfa.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_efcfa.CodeNameAttr)})
	}
	if _efcfa.HidePivotFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.HidePivotFieldListAttr))})
	}
	if _efcfa.ShowPivotChartFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.ShowPivotChartFilterAttr))})
	}
	if _efcfa.AllowRefreshQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.AllowRefreshQueryAttr))})
	}
	if _efcfa.PublishItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.PublishItemsAttr))})
	}
	if _efcfa.CheckCompatibilityAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.CheckCompatibilityAttr))})
	}
	if _efcfa.AutoCompressPicturesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.AutoCompressPicturesAttr))})
	}
	if _efcfa.RefreshAllConnectionsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efcfa.RefreshAllConnectionsAttr))})
	}
	if _efcfa.DefaultThemeVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_efcfa.DefaultThemeVersionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_TableStyleType byte

func (_adfg ST_ShowDataAs) Validate() error { return _adfg.ValidateWithPath("") }

// ValidateWithPath validates the CT_Groups and its children, prefixing error messages with path
func (_dcbaac *CT_Groups) ValidateWithPath(path string) error {
	for _aaab, _fbcdb := range _dcbaac.Group {
		if _gfdge := _fbcdb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fG\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _aaab)); _gfdge != nil {
			return _gfdge
		}
	}
	return nil
}

const (
	ST_AxisUnset      ST_Axis = 0
	ST_AxisAxisRow    ST_Axis = 1
	ST_AxisAxisCol    ST_Axis = 2
	ST_AxisAxisPage   ST_Axis = 3
	ST_AxisAxisValues ST_Axis = 4
)

func (_egbfc *ST_DdeValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffccdb, _gabff := d.Token()
	if _gabff != nil {
		return _gabff
	}
	if _gdege, _ddfcd := _ffccdb.(_b.EndElement); _ddfcd && _gdege.Name == start.Name {
		*_egbfc = 1
		return nil
	}
	if _fgebg, _cbcdbg := _ffccdb.(_b.CharData); !_cbcdbg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffccdb)
	} else {
		switch string(_fgebg) {
		case "":
			*_egbfc = 0
		case "\u006e\u0069\u006c":
			*_egbfc = 1
		case "\u0062":
			*_egbfc = 2
		case "\u006e":
			*_egbfc = 3
		case "\u0065":
			*_egbfc = 4
		case "\u0073\u0074\u0072":
			*_egbfc = 5
		}
	}
	_ffccdb, _gabff = d.Token()
	if _gabff != nil {
		return _gabff
	}
	if _abead, _gfdaf := _ffccdb.(_b.EndElement); _gfdaf && _abead.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffccdb)
}

const (
	ST_VolValueTypeUnset ST_VolValueType = 0
	ST_VolValueTypeB     ST_VolValueType = 1
	ST_VolValueTypeN     ST_VolValueType = 2
	ST_VolValueTypeE     ST_VolValueType = 3
	ST_VolValueTypeS     ST_VolValueType = 4
)

type CT_SmartTags struct {

	// Cell Smart Tags
	CellSmartTags []*CT_CellSmartTags
}

// ValidateWithPath validates the CT_FunctionGroup and its children, prefixing error messages with path
func (_ccab *CT_FunctionGroup) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_DefinedName and its children, prefixing error messages with path
func (_fdaab *CT_DefinedName) ValidateWithPath(path string) error { return nil }
func (_dbdae *CT_MetadataStringIndex) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _a.Sprintf("\u0025\u0076", _dbdae.XAttr)})
	if _dbdae.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbdae.SAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbega *CT_RgbColor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggbda := range start.Attr {
		if _ggbda.Name.Local == "\u0072\u0067\u0062" {
			_afbefa, _gfagca := _ggbda.Value, error(nil)
			if _gfagca != nil {
				return _gfagca
			}
			_fbega.RgbAttr = &_afbefa
			continue
		}
	}
	for {
		_bacce, _bfgebe := d.Token()
		if _bfgebe != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u003a\u0020\u0025\u0073", _bfgebe)
		}
		if _gagcf, _gacdb := _bacce.(_b.EndElement); _gacdb && _gagcf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_RangeSet() *CT_RangeSet           { _gebag := &CT_RangeSet{}; return _gebag }
func (_bdeda ST_FontScheme) Validate() error { return _bdeda.ValidateWithPath("") }

type CT_Members struct {

	// Item Count
	CountAttr *uint32

	// Hierarchy Level
	LevelAttr *uint32

	// Member
	Member []*CT_Member
}

const (
	ST_QualifierUnset       ST_Qualifier = 0
	ST_QualifierDoubleQuote ST_Qualifier = 1
	ST_QualifierSingleQuote ST_Qualifier = 2
	ST_QualifierNone        ST_Qualifier = 3
)

// ValidateWithPath validates the CT_WebPublishObject and its children, prefixing error messages with path
func (_ffeag *CT_WebPublishObject) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ExternalSheetDataSet and its children
func (_abgd *CT_ExternalSheetDataSet) Validate() error {
	return _abgd.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074")
}
func NewCT_HierarchyUsage() *CT_HierarchyUsage { _fbaa := &CT_HierarchyUsage{}; return _fbaa }
func (_gdgfa *CT_GroupMember) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gdgfa.UniqueNameAttr)})
	if _gdgfa.GroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006fu\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdgfa.GroupAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eaefd ST_ShowDataAs) String() string {
	switch _eaefd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case 3:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 4:
		return "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case 5:
		return "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case 6:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case 7:
		return "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case 8:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case 9:
		return "\u0069\u006e\u0064e\u0078"
	}
	return ""
}

type ST_CellType byte

func (_cabbdb *Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cabbdb.CT_Metadata = *NewCT_Metadata()
_ccfb:
	for {
		_dfbbg, _cddeeb := d.Token()
		if _cddeeb != nil {
			return _cddeeb
		}
		switch _fffcbc := _dfbbg.(type) {
		case _b.StartElement:
			switch _fffcbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_cabbdb.MetadataTypes = NewCT_MetadataTypes()
				if _fccdce := d.DecodeElement(_cabbdb.MetadataTypes, &_fffcbc); _fccdce != nil {
					return _fccdce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_cabbdb.MetadataStrings = NewCT_MetadataStrings()
				if _ecdab := d.DecodeElement(_cabbdb.MetadataStrings, &_fffcbc); _ecdab != nil {
					return _ecdab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_cabbdb.MdxMetadata = NewCT_MdxMetadata()
				if _gdged := d.DecodeElement(_cabbdb.MdxMetadata, &_fffcbc); _gdged != nil {
					return _gdged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_dfdcg := NewCT_FutureMetadata()
				if _bgeead := d.DecodeElement(_dfdcg, &_fffcbc); _bgeead != nil {
					return _bgeead
				}
				_cabbdb.FutureMetadata = append(_cabbdb.FutureMetadata, _dfdcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_cabbdb.CellMetadata = NewCT_MetadataBlocks()
				if _ggacgb := d.DecodeElement(_cabbdb.CellMetadata, &_fffcbc); _ggacgb != nil {
					return _ggacgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_cabbdb.ValueMetadata = NewCT_MetadataBlocks()
				if _cgabb := d.DecodeElement(_cabbdb.ValueMetadata, &_fffcbc); _cgabb != nil {
					return _cgabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cabbdb.ExtLst = NewCT_ExtensionList()
				if _ddega := d.DecodeElement(_cabbdb.ExtLst, &_fffcbc); _ddega != nil {
					return _ddega
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _fffcbc.Name)
				if _bfdaa := d.Skip(); _bfdaa != nil {
					return _bfdaa
				}
			}
		case _b.EndElement:
			break _ccfb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_NumFmt() *CT_NumFmt { _gfabg := &CT_NumFmt{}; return _gfabg }

type CT_MetadataStringIndex struct {

	// Index Value
	XAttr uint32

	// String is a Set
	SAttr *bool
}
type CT_RevisionHeaders struct {

	// Last Revision GUID
	GuidAttr string

	// Last GUID
	LastGuidAttr *string

	// Shared Workbook
	SharedAttr *bool

	// Disk Revisions
	DiskRevisionsAttr *bool

	// History
	HistoryAttr *bool

	// Track Revisions
	TrackRevisionsAttr *bool

	// Exclusive Mode
	ExclusiveAttr *bool

	// Revision Id
	RevisionIdAttr *uint32

	// Version
	VersionAttr *int32

	// Keep Change History
	KeepChangeHistoryAttr *bool

	// Protected
	ProtectedAttr *bool

	// Preserve History
	PreserveHistoryAttr *uint32

	// Header
	Header []*CT_RevisionHeader
}

// ValidateWithPath validates the CT_Missing and its children, prefixing error messages with path
func (_bceg *CT_Missing) ValidateWithPath(path string) error {
	for _ffbbd, _feefg := range _bceg.Tpls {
		if _eddgb := _feefg.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _ffbbd)); _eddgb != nil {
			return _eddgb
		}
	}
	for _ecefa, _gffac := range _bceg.X {
		if _ddgdb := _gffac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ecefa)); _ddgdb != nil {
			return _ddgdb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WebPublishItem and its children, prefixing error messages with path
func (_ceagbb *CT_WebPublishItem) ValidateWithPath(path string) error {
	if _ceagbb.SourceTypeAttr == ST_WebSourceTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0053\u006f\u0075\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006da\u006e\u0064\u0061\u0074\u006fr\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _fafdc := _ceagbb.SourceTypeAttr.ValidateWithPath(path + "\u002fS\u006fu\u0072\u0063\u0065\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fafdc != nil {
		return _fafdc
	}
	return nil
}

// ValidateWithPath validates the CT_OleItem and its children, prefixing error messages with path
func (_adbaf *CT_OleItem) ValidateWithPath(path string) error { return nil }
func NewCT_XmlColumnPr() *CT_XmlColumnPr                      { _ecfdbc := &CT_XmlColumnPr{}; return _ecfdbc }
func NewCT_RevisionHeaders() *CT_RevisionHeaders {
	_gbbbag := &CT_RevisionHeaders{}
	_gbbbag.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _gbbbag
}
func (_cafeg *CT_TextField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cafeg.TypeAttr != ST_ExternalConnectionTypeUnset {
		_dabff, _dbdcc := _cafeg.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _dbdcc != nil {
			return _dbdcc
		}
		start.Attr = append(start.Attr, _dabff)
	}
	if _cafeg.PositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_cafeg.PositionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ccde *CT_Cell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggdgg := range start.Attr {
		if _ggdgg.Name.Local == "\u0072" {
			_ceab, _eba := _ggdgg.Value, error(nil)
			if _eba != nil {
				return _eba
			}
			_ccde.RAttr = &_ceab
			continue
		}
		if _ggdgg.Name.Local == "\u0073" {
			_egf, _dacb := _g.ParseUint(_ggdgg.Value, 10, 32)
			if _dacb != nil {
				return _dacb
			}
			_ebaa := uint32(_egf)
			_ccde.SAttr = &_ebaa
			continue
		}
		if _ggdgg.Name.Local == "\u0074" {
			_ccde.TAttr.UnmarshalXMLAttr(_ggdgg)
			continue
		}
		if _ggdgg.Name.Local == "\u0063\u006d" {
			_edc, _bfcf := _g.ParseUint(_ggdgg.Value, 10, 32)
			if _bfcf != nil {
				return _bfcf
			}
			_bacd := uint32(_edc)
			_ccde.CmAttr = &_bacd
			continue
		}
		if _ggdgg.Name.Local == "\u0076\u006d" {
			_eddg, _fdae := _g.ParseUint(_ggdgg.Value, 10, 32)
			if _fdae != nil {
				return _fdae
			}
			_dgea := uint32(_eddg)
			_ccde.VmAttr = &_dgea
			continue
		}
		if _ggdgg.Name.Local == "\u0070\u0068" {
			_afff, _bdde := _g.ParseBool(_ggdgg.Value)
			if _bdde != nil {
				return _bdde
			}
			_ccde.PhAttr = &_afff
			continue
		}
	}
_aebf:
	for {
		_ffdc, _afaf := d.Token()
		if _afaf != nil {
			return _afaf
		}
		switch _bfdg := _ffdc.(type) {
		case _b.StartElement:
			switch _bfdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066"}:
				_ccde.F = NewCT_CellFormula()
				if _afcc := d.DecodeElement(_ccde.F, &_bfdg); _afcc != nil {
					return _afcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_ccde.V = new(string)
				if _bfad := d.DecodeElement(_ccde.V, &_bfdg); _bfad != nil {
					return _bfad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0073"}:
				_ccde.Is = NewCT_Rst()
				if _agcg := d.DecodeElement(_ccde.Is, &_bfdg); _agcg != nil {
					return _agcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccde.ExtLst = NewCT_ExtensionList()
				if _abba := d.DecodeElement(_ccde.ExtLst, &_bfdg); _abba != nil {
					return _abba
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _bfdg.Name)
				if _dcee := d.Skip(); _dcee != nil {
					return _dcee
				}
			}
		case _b.EndElement:
			break _aebf
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionQueryTableField struct {

	// Sheet Id
	SheetIdAttr uint32

	// QueryTable Reference
	RefAttr string

	// Field Id
	FieldIdAttr uint32
}
type CT_PivotCaches struct {

	// PivotCache
	PivotCache []*CT_PivotCache
}

func (_gddaa ST_FilterOperator) Validate() error { return _gddaa.ValidateWithPath("") }
func NewCT_FontFamily() *CT_FontFamily           { _fabga := &CT_FontFamily{}; _fabga.ValAttr = 0; return _fabga }

// Validate validates the CT_FutureMetadataBlock and its children
func (_aabdc *CT_FutureMetadataBlock) Validate() error {
	return _aabdc.ValidateWithPath("\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b")
}

// Validate validates the CT_Dialogsheet and its children
func (_ccdgd *CT_Dialogsheet) Validate() error {
	return _ccdgd.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074")
}
func (_gecaac *CT_X) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gecaac.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", *_gecaac.VAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionInsertSheet struct {

	// Sheet Id
	SheetIdAttr uint32

	// Sheet Name
	NameAttr string

	// Sheet Position
	SheetPositionAttr uint32
	RIdAttr           *uint32
	UaAttr            *bool
	RaAttr            *bool
}

func (_dgagf *Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgagf.CT_Worksheet = *NewCT_Worksheet()
_adggge:
	for {
		_bgade, _gdgcfdb := d.Token()
		if _gdgcfdb != nil {
			return _gdgcfdb
		}
		switch _bcebb := _bgade.(type) {
		case _b.StartElement:
			switch _bcebb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_dgagf.SheetPr = NewCT_SheetPr()
				if _fbefdf := d.DecodeElement(_dgagf.SheetPr, &_bcebb); _fbefdf != nil {
					return _fbefdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_dgagf.Dimension = NewCT_SheetDimension()
				if _gcdfcd := d.DecodeElement(_dgagf.Dimension, &_bcebb); _gcdfcd != nil {
					return _gcdfcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dgagf.SheetViews = NewCT_SheetViews()
				if _dfacg := d.DecodeElement(_dgagf.SheetViews, &_bcebb); _dfacg != nil {
					return _dfacg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_dgagf.SheetFormatPr = NewCT_SheetFormatPr()
				if _dbegff := d.DecodeElement(_dgagf.SheetFormatPr, &_bcebb); _dbegff != nil {
					return _dbegff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_afdeb := NewCT_Cols()
				if _cbged := d.DecodeElement(_afdeb, &_bcebb); _cbged != nil {
					return _cbged
				}
				_dgagf.Cols = append(_dgagf.Cols, _afdeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _bafba := d.DecodeElement(_dgagf.SheetData, &_bcebb); _bafba != nil {
					return _bafba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_dgagf.SheetCalcPr = NewCT_SheetCalcPr()
				if _fdbbc := d.DecodeElement(_dgagf.SheetCalcPr, &_bcebb); _fdbbc != nil {
					return _fdbbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_dgagf.SheetProtection = NewCT_SheetProtection()
				if _cdeac := d.DecodeElement(_dgagf.SheetProtection, &_bcebb); _cdeac != nil {
					return _cdeac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_dgagf.ProtectedRanges = NewCT_ProtectedRanges()
				if _dagac := d.DecodeElement(_dgagf.ProtectedRanges, &_bcebb); _dagac != nil {
					return _dagac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_dgagf.Scenarios = NewCT_Scenarios()
				if _ffcae := d.DecodeElement(_dgagf.Scenarios, &_bcebb); _ffcae != nil {
					return _ffcae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_dgagf.AutoFilter = NewCT_AutoFilter()
				if _dacdc := d.DecodeElement(_dgagf.AutoFilter, &_bcebb); _dacdc != nil {
					return _dacdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_dgagf.SortState = NewCT_SortState()
				if _ecffac := d.DecodeElement(_dgagf.SortState, &_bcebb); _ecffac != nil {
					return _ecffac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_dgagf.DataConsolidate = NewCT_DataConsolidate()
				if _cegdb := d.DecodeElement(_dgagf.DataConsolidate, &_bcebb); _cegdb != nil {
					return _cegdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_dgagf.CustomSheetViews = NewCT_CustomSheetViews()
				if _dbacbb := d.DecodeElement(_dgagf.CustomSheetViews, &_bcebb); _dbacbb != nil {
					return _dbacbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_dgagf.MergeCells = NewCT_MergeCells()
				if _gfgecb := d.DecodeElement(_dgagf.MergeCells, &_bcebb); _gfgecb != nil {
					return _gfgecb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_dgagf.PhoneticPr = NewCT_PhoneticPr()
				if _baffd := d.DecodeElement(_dgagf.PhoneticPr, &_bcebb); _baffd != nil {
					return _baffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_bbfdeb := NewCT_ConditionalFormatting()
				if _cafdeg := d.DecodeElement(_bbfdeb, &_bcebb); _cafdeg != nil {
					return _cafdeg
				}
				_dgagf.ConditionalFormatting = append(_dgagf.ConditionalFormatting, _bbfdeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_dgagf.DataValidations = NewCT_DataValidations()
				if _gfgegf := d.DecodeElement(_dgagf.DataValidations, &_bcebb); _gfgegf != nil {
					return _gfgegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_dgagf.Hyperlinks = NewCT_Hyperlinks()
				if _cgdffc := d.DecodeElement(_dgagf.Hyperlinks, &_bcebb); _cgdffc != nil {
					return _cgdffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_dgagf.PrintOptions = NewCT_PrintOptions()
				if _cbcebc := d.DecodeElement(_dgagf.PrintOptions, &_bcebb); _cbcebc != nil {
					return _cbcebc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_dgagf.PageMargins = NewCT_PageMargins()
				if _cbdfb := d.DecodeElement(_dgagf.PageMargins, &_bcebb); _cbdfb != nil {
					return _cbdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_dgagf.PageSetup = NewCT_PageSetup()
				if _gfedff := d.DecodeElement(_dgagf.PageSetup, &_bcebb); _gfedff != nil {
					return _gfedff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dgagf.HeaderFooter = NewCT_HeaderFooter()
				if _caacegb := d.DecodeElement(_dgagf.HeaderFooter, &_bcebb); _caacegb != nil {
					return _caacegb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_dgagf.RowBreaks = NewCT_PageBreak()
				if _cegcd := d.DecodeElement(_dgagf.RowBreaks, &_bcebb); _cegcd != nil {
					return _cegcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_dgagf.ColBreaks = NewCT_PageBreak()
				if _cgcgfc := d.DecodeElement(_dgagf.ColBreaks, &_bcebb); _cgcgfc != nil {
					return _cgcgfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_dgagf.CustomProperties = NewCT_CustomProperties()
				if _fbgegd := d.DecodeElement(_dgagf.CustomProperties, &_bcebb); _fbgegd != nil {
					return _fbgegd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_dgagf.CellWatches = NewCT_CellWatches()
				if _ecbbd := d.DecodeElement(_dgagf.CellWatches, &_bcebb); _ecbbd != nil {
					return _ecbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_dgagf.IgnoredErrors = NewCT_IgnoredErrors()
				if _cfefc := d.DecodeElement(_dgagf.IgnoredErrors, &_bcebb); _cfefc != nil {
					return _cfefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_dgagf.SmartTags = NewCT_SmartTags()
				if _fbedce := d.DecodeElement(_dgagf.SmartTags, &_bcebb); _fbedce != nil {
					return _fbedce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_dgagf.Drawing = NewCT_Drawing()
				if _eecfgg := d.DecodeElement(_dgagf.Drawing, &_bcebb); _eecfgg != nil {
					return _eecfgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_dgagf.LegacyDrawing = NewCT_LegacyDrawing()
				if _ggggbc := d.DecodeElement(_dgagf.LegacyDrawing, &_bcebb); _ggggbc != nil {
					return _ggggbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_dgagf.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _dcceb := d.DecodeElement(_dgagf.LegacyDrawingHF, &_bcebb); _dcceb != nil {
					return _dcceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_dgagf.DrawingHF = NewCT_DrawingHF()
				if _dcaef := d.DecodeElement(_dgagf.DrawingHF, &_bcebb); _dcaef != nil {
					return _dcaef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_dgagf.Picture = NewCT_SheetBackgroundPicture()
				if _ddccb := d.DecodeElement(_dgagf.Picture, &_bcebb); _ddccb != nil {
					return _ddccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_dgagf.OleObjects = NewCT_OleObjects()
				if _babaa := d.DecodeElement(_dgagf.OleObjects, &_bcebb); _babaa != nil {
					return _babaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_dgagf.Controls = NewCT_Controls()
				if _cdgbc := d.DecodeElement(_dgagf.Controls, &_bcebb); _cdgbc != nil {
					return _cdgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_dgagf.WebPublishItems = NewCT_WebPublishItems()
				if _cgecaf := d.DecodeElement(_dgagf.WebPublishItems, &_bcebb); _cgecaf != nil {
					return _cgecaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_dgagf.TableParts = NewCT_TableParts()
				if _bfbdb := d.DecodeElement(_dgagf.TableParts, &_bcebb); _bfbdb != nil {
					return _bfbdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgagf.ExtLst = NewCT_ExtensionList()
				if _bgcce := d.DecodeElement(_dgagf.ExtLst, &_bcebb); _bgcce != nil {
					return _bgcce
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0057\u006f\u0072\u006b\u0073\u0068e\u0065\u0074 \u0025\u0076", _bcebb.Name)
				if _dcebg := d.Skip(); _dcebg != nil {
					return _dcebg
				}
			}
		case _b.EndElement:
			break _adggge
		case _b.CharData:
		}
	}
	return nil
}
func (_ebadc *CT_GroupLevels) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cegca := range start.Attr {
		if _cegca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ffgdf, _caecf := _g.ParseUint(_cegca.Value, 10, 32)
			if _caecf != nil {
				return _caecf
			}
			_gfcaf := uint32(_ffgdf)
			_ebadc.CountAttr = &_gfcaf
			continue
		}
	}
_fdbcb:
	for {
		_ccgcg, _bdegb := d.Token()
		if _bdegb != nil {
			return _bdegb
		}
		switch _dggeb := _ccgcg.(type) {
		case _b.StartElement:
			switch _dggeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}:
				_bedffb := NewCT_GroupLevel()
				if _gaegf := d.DecodeElement(_bedffb, &_dggeb); _gaegf != nil {
					return _gaegf
				}
				_ebadc.GroupLevel = append(_ebadc.GroupLevel, _bedffb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065v\u0065l\u0073\u0020\u0025\u0076", _dggeb.Name)
				if _egceb := d.Skip(); _egceb != nil {
					return _egceb
				}
			}
		case _b.EndElement:
			break _fdbcb
		case _b.CharData:
		}
	}
	return nil
}
func (_dgba *ST_DateTimeGrouping) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dgba = 0
	case "\u0079\u0065\u0061\u0072":
		*_dgba = 1
	case "\u006d\u006f\u006et\u0068":
		*_dgba = 2
	case "\u0064\u0061\u0079":
		*_dgba = 3
	case "\u0068\u006f\u0075\u0072":
		*_dgba = 4
	case "\u006d\u0069\u006e\u0075\u0074\u0065":
		*_dgba = 5
	case "\u0073\u0065\u0063\u006f\u006e\u0064":
		*_dgba = 6
	}
	return nil
}

// Validate validates the CT_OleSize and its children
func (_ffdcb *CT_OleSize) Validate() error {
	return _ffdcb.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065")
}

// Validate validates the CT_ChartFormat and its children
func (_gcce *CT_ChartFormat) Validate() error {
	return _gcce.ValidateWithPath("\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074")
}
func NewCT_AutoSortScope() *CT_AutoSortScope {
	_gbcd := &CT_AutoSortScope{}
	_gbcd.PivotArea = NewCT_PivotArea()
	return _gbcd
}
func (_efg *CT_BorderPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efg.StyleAttr != ST_BorderStyleUnset {
		_bbag, _agg := _efg.StyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0079l\u0065"})
		if _agg != nil {
			return _agg
		}
		start.Attr = append(start.Attr, _bbag)
	}
	e.EncodeToken(start)
	if _efg.Color != nil {
		_bcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_efg.Color, _bcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efeaa *ST_CfvoType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_efeaa = 0
	case "\u006e\u0075\u006d":
		*_efeaa = 1
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_efeaa = 2
	case "\u006d\u0061\u0078":
		*_efeaa = 3
	case "\u006d\u0069\u006e":
		*_efeaa = 4
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_efeaa = 5
	case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
		*_efeaa = 6
	}
	return nil
}
func (_gbbca *CT_DdeValue) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gbbca.TAttr != ST_DdeValueTypeUnset {
		_bfgad, _gbbfe := _gbbca.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _gbbfe != nil {
			return _gbbfe
		}
		start.Attr = append(start.Attr, _bfgad)
	}
	e.EncodeToken(start)
	_dadgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u0061\u006c"}}
	_f.AddPreserveSpaceAttr(&_dadgdg, _gbbca.Val)
	e.EncodeElement(_gbbca.Val, _dadgdg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Revisions and its children, prefixing error messages with path
func (_acdddd *Revisions) ValidateWithPath(path string) error {
	if _adedde := _acdddd.CT_Revisions.ValidateWithPath(path); _adedde != nil {
		return _adedde
	}
	return nil
}

type CT_DiscretePr struct {

	// Mapping Index Count
	CountAttr *uint32

	// Element Group
	X []*CT_Index
}

// ValidateWithPath validates the CT_CommentPr and its children, prefixing error messages with path
func (_acge *CT_CommentPr) ValidateWithPath(path string) error {
	if _cbbc := _acge.TextHAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0048\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _cbbc != nil {
		return _cbbc
	}
	if _dedcge := _acge.TextVAlignAttr.ValidateWithPath(path + "\u002fT\u0065x\u0074\u0056\u0041\u006c\u0069\u0067\u006e\u0041\u0074\u0074\u0072"); _dedcge != nil {
		return _dedcge
	}
	if _ggce := _acge.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _ggce != nil {
		return _ggce
	}
	return nil
}
func (_faffgd *CT_Selection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caecb := range start.Attr {
		if _caecb.Name.Local == "\u0070\u0061\u006e\u0065" {
			_faffgd.PaneAttr.UnmarshalXMLAttr(_caecb)
			continue
		}
		if _caecb.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0065\u006c\u006c" {
			_beggc, _eefdf := _caecb.Value, error(nil)
			if _eefdf != nil {
				return _eefdf
			}
			_faffgd.ActiveCellAttr = &_beggc
			continue
		}
		if _caecb.Name.Local == "\u0061\u0063\u0074i\u0076\u0065\u0043\u0065\u006c\u006c\u0049\u0064" {
			_bgeef, _ffffda := _g.ParseUint(_caecb.Value, 10, 32)
			if _ffffda != nil {
				return _ffffda
			}
			_dadbc := uint32(_bgeef)
			_faffgd.ActiveCellIdAttr = &_dadbc
			continue
		}
		if _caecb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_gfbef, _adcbed := ParseSliceST_Sqref(_caecb.Value)
			if _adcbed != nil {
				return _adcbed
			}
			_faffgd.SqrefAttr = &_gfbef
			continue
		}
	}
	for {
		_gacge, _fbagb := d.Token()
		if _fbagb != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _fbagb)
		}
		if _gbfacbc, _fcace := _gacge.(_b.EndElement); _fcace && _gbfacbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_feeec ST_FormulaExpression) ValidateWithPath(path string) error {
	switch _feeec {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feeec))
	}
	return nil
}
func (_afafd ST_HorizontalAlignment) Validate() error { return _afafd.ValidateWithPath("") }

// ValidateWithPath validates the CT_MemberProperty and its children, prefixing error messages with path
func (_cagdc *CT_MemberProperty) ValidateWithPath(path string) error { return nil }
func (_dadfga ST_Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dadfga.String(), start)
}
func (_acgeg ST_VolValueType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffcffa := _b.Attr{}
	_ffcffa.Name = name
	switch _acgeg {
	case ST_VolValueTypeUnset:
		_ffcffa.Value = ""
	case ST_VolValueTypeB:
		_ffcffa.Value = "\u0062"
	case ST_VolValueTypeN:
		_ffcffa.Value = "\u006e"
	case ST_VolValueTypeE:
		_ffcffa.Value = "\u0065"
	case ST_VolValueTypeS:
		_ffcffa.Value = "\u0073"
	}
	return _ffcffa, nil
}
func (_gbage *CT_SmartTags) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ebgfe:
	for {
		_bfabff, _afgfa := d.Token()
		if _afgfa != nil {
			return _afgfa
		}
		switch _dbaga := _bfabff.(type) {
		case _b.StartElement:
			switch _dbaga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}:
				_aeaaf := NewCT_CellSmartTags()
				if _gaabg := d.DecodeElement(_aeaaf, &_dbaga); _gaabg != nil {
					return _gaabg
				}
				_gbage.CellSmartTags = append(_gbage.CellSmartTags, _aeaaf)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u006d\u0061r\u0074\u0054\u0061\u0067\u0073\u0020\u0025\u0076", _dbaga.Name)
				if _bbcbc := d.Skip(); _bbcbc != nil {
					return _bbcbc
				}
			}
		case _b.EndElement:
			break _ebgfe
		case _b.CharData:
		}
	}
	return nil
}
func (_fbaf *CT_FilterColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfag := range start.Attr {
		if _cfag.Name.Local == "\u0063\u006f\u006cI\u0064" {
			_ffbeg, _caeefd := _g.ParseUint(_cfag.Value, 10, 32)
			if _caeefd != nil {
				return _caeefd
			}
			_fbaf.ColIdAttr = uint32(_ffbeg)
			continue
		}
		if _cfag.Name.Local == "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e" {
			_beeddg, _eead := _g.ParseBool(_cfag.Value)
			if _eead != nil {
				return _eead
			}
			_fbaf.HiddenButtonAttr = &_beeddg
			continue
		}
		if _cfag.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e" {
			_eagg, _fadef := _g.ParseBool(_cfag.Value)
			if _fadef != nil {
				return _fadef
			}
			_fbaf.ShowButtonAttr = &_eagg
			continue
		}
	}
_afbe:
	for {
		_gccaa, _ffgbg := d.Token()
		if _ffgbg != nil {
			return _ffgbg
		}
		switch _dbdf := _gccaa.(type) {
		case _b.StartElement:
			switch _dbdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_fbaf.Filters = NewCT_Filters()
				if _gdgcf := d.DecodeElement(_fbaf.Filters, &_dbdf); _gdgcf != nil {
					return _gdgcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u00701\u0030"}:
				_fbaf.Top10 = NewCT_Top10()
				if _adbcb := d.DecodeElement(_fbaf.Top10, &_dbdf); _adbcb != nil {
					return _adbcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}:
				_fbaf.CustomFilters = NewCT_CustomFilters()
				if _fgcfe := d.DecodeElement(_fbaf.CustomFilters, &_dbdf); _fgcfe != nil {
					return _fgcfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0079\u006e\u0061\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fbaf.DynamicFilter = NewCT_DynamicFilter()
				if _cgeed := d.DecodeElement(_fbaf.DynamicFilter, &_dbdf); _cgeed != nil {
					return _cgeed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fbaf.ColorFilter = NewCT_ColorFilter()
				if _dbcgb := d.DecodeElement(_fbaf.ColorFilter, &_dbdf); _dbcgb != nil {
					return _dbcgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fbaf.IconFilter = NewCT_IconFilter()
				if _aacbe := d.DecodeElement(_fbaf.IconFilter, &_dbdf); _aacbe != nil {
					return _aacbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbaf.ExtLst = NewCT_ExtensionList()
				if _fgcd := d.DecodeElement(_fbaf.ExtLst, &_dbdf); _fgcd != nil {
					return _fgcd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _dbdf.Name)
				if _fffdf := d.Skip(); _fffdf != nil {
					return _fffdf
				}
			}
		case _b.EndElement:
			break _afbe
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionDefinedName and its children, prefixing error messages with path
func (_cdcaa *CT_RevisionDefinedName) ValidateWithPath(path string) error {
	if _cdcaa.ExtLst != nil {
		if _edffb := _cdcaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _edffb != nil {
			return _edffb
		}
	}
	return nil
}
func NewCT_WebPublishObject() *CT_WebPublishObject { _fdcdc := &CT_WebPublishObject{}; return _fdcdc }

type CT_IgnoredError struct {

	// Sequence of References
	SqrefAttr ST_Sqref

	// Evaluation Error
	EvalErrorAttr *bool

	// Two Digit Text Year
	TwoDigitTextYearAttr *bool

	// Number Stored As Text
	NumberStoredAsTextAttr *bool

	// Formula
	FormulaAttr *bool

	// Formula Range
	FormulaRangeAttr *bool

	// Unlocked Formula
	UnlockedFormulaAttr *bool

	// Empty Cell Reference
	EmptyCellReferenceAttr *bool

	// List Data Validation
	ListDataValidationAttr *bool

	// Calculated Column
	CalculatedColumnAttr *bool
}

func (_gebdb *ST_DateTimeGrouping) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcfeb, _dffbee := d.Token()
	if _dffbee != nil {
		return _dffbee
	}
	if _dccbe, _bdefcg := _gcfeb.(_b.EndElement); _bdefcg && _dccbe.Name == start.Name {
		*_gebdb = 1
		return nil
	}
	if _bababe, _cbfeb := _gcfeb.(_b.CharData); !_cbfeb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcfeb)
	} else {
		switch string(_bababe) {
		case "":
			*_gebdb = 0
		case "\u0079\u0065\u0061\u0072":
			*_gebdb = 1
		case "\u006d\u006f\u006et\u0068":
			*_gebdb = 2
		case "\u0064\u0061\u0079":
			*_gebdb = 3
		case "\u0068\u006f\u0075\u0072":
			*_gebdb = 4
		case "\u006d\u0069\u006e\u0075\u0074\u0065":
			*_gebdb = 5
		case "\u0073\u0065\u0063\u006f\u006e\u0064":
			*_gebdb = 6
		}
	}
	_gcfeb, _dffbee = d.Token()
	if _dffbee != nil {
		return _dffbee
	}
	if _ggebe, _accbb := _gcfeb.(_b.EndElement); _accbb && _ggebe.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcfeb)
}
func (_fegeb *CT_Metadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdgde:
	for {
		_efbea, _gaagc := d.Token()
		if _gaagc != nil {
			return _gaagc
		}
		switch _ddbag := _efbea.(type) {
		case _b.StartElement:
			switch _ddbag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}:
				_fegeb.MetadataTypes = NewCT_MetadataTypes()
				if _dfgcd := d.DecodeElement(_fegeb.MetadataTypes, &_ddbag); _dfgcd != nil {
					return _dfgcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u0074a\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"}:
				_fegeb.MetadataStrings = NewCT_MetadataStrings()
				if _beagc := d.DecodeElement(_fegeb.MetadataStrings, &_ddbag); _beagc != nil {
					return _beagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "m\u0064\u0078\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fegeb.MdxMetadata = NewCT_MdxMetadata()
				if _egeaf := d.DecodeElement(_fegeb.MdxMetadata, &_ddbag); _egeaf != nil {
					return _egeaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}:
				_gaaa := NewCT_FutureMetadata()
				if _deedb := d.DecodeElement(_gaaa, &_ddbag); _deedb != nil {
					return _deedb
				}
				_fegeb.FutureMetadata = append(_fegeb.FutureMetadata, _gaaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fegeb.CellMetadata = NewCT_MetadataBlocks()
				if _agccf := d.DecodeElement(_fegeb.CellMetadata, &_ddbag); _agccf != nil {
					return _agccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}:
				_fegeb.ValueMetadata = NewCT_MetadataBlocks()
				if _gdbac := d.DecodeElement(_fegeb.ValueMetadata, &_ddbag); _gdbac != nil {
					return _gdbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fegeb.ExtLst = NewCT_ExtensionList()
				if _gbgg := d.DecodeElement(_fegeb.ExtLst, &_ddbag); _gbgg != nil {
					return _gbgg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _ddbag.Name)
				if _aedc := d.Skip(); _aedc != nil {
					return _aedc
				}
			}
		case _b.EndElement:
			break _bdgde
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SheetPr and its children
func (_aabegg *CT_SheetPr) Validate() error {
	return _aabegg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072")
}
func (_fdacf ST_Visibility) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eeadb := _b.Attr{}
	_eeadb.Name = name
	switch _fdacf {
	case ST_VisibilityUnset:
		_eeadb.Value = ""
	case ST_VisibilityVisible:
		_eeadb.Value = "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case ST_VisibilityHidden:
		_eeadb.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	case ST_VisibilityVeryHidden:
		_eeadb.Value = "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return _eeadb, nil
}
func (_cbeb *CT_MergeCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _cbeb.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcfag *CT_MetadataRecord) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074"}, Value: _a.Sprintf("\u0025\u0076", _dcfag.TAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _dcfag.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ConditionalFormattingOperatorUnset              ST_ConditionalFormattingOperator = 0
	ST_ConditionalFormattingOperatorLessThan           ST_ConditionalFormattingOperator = 1
	ST_ConditionalFormattingOperatorLessThanOrEqual    ST_ConditionalFormattingOperator = 2
	ST_ConditionalFormattingOperatorEqual              ST_ConditionalFormattingOperator = 3
	ST_ConditionalFormattingOperatorNotEqual           ST_ConditionalFormattingOperator = 4
	ST_ConditionalFormattingOperatorGreaterThanOrEqual ST_ConditionalFormattingOperator = 5
	ST_ConditionalFormattingOperatorGreaterThan        ST_ConditionalFormattingOperator = 6
	ST_ConditionalFormattingOperatorBetween            ST_ConditionalFormattingOperator = 7
	ST_ConditionalFormattingOperatorNotBetween         ST_ConditionalFormattingOperator = 8
	ST_ConditionalFormattingOperatorContainsText       ST_ConditionalFormattingOperator = 9
	ST_ConditionalFormattingOperatorNotContains        ST_ConditionalFormattingOperator = 10
	ST_ConditionalFormattingOperatorBeginsWith         ST_ConditionalFormattingOperator = 11
	ST_ConditionalFormattingOperatorEndsWith           ST_ConditionalFormattingOperator = 12
)

func (_dfabe *CT_CellSmartTag) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eccfd := range start.Attr {
		if _eccfd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_gefe, _bdaf := _g.ParseUint(_eccfd.Value, 10, 32)
			if _bdaf != nil {
				return _bdaf
			}
			_dfabe.TypeAttr = uint32(_gefe)
			continue
		}
		if _eccfd.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_bbdg, _caef := _g.ParseBool(_eccfd.Value)
			if _caef != nil {
				return _caef
			}
			_dfabe.DeletedAttr = &_bbdg
			continue
		}
		if _eccfd.Name.Local == "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064" {
			_eced, _abffb := _g.ParseBool(_eccfd.Value)
			if _abffb != nil {
				return _abffb
			}
			_dfabe.XmlBasedAttr = &_eced
			continue
		}
	}
_dggd:
	for {
		_fffabe, _eccfa := d.Token()
		if _eccfa != nil {
			return _eccfa
		}
		switch _eggeb := _fffabe.(type) {
		case _b.StartElement:
			switch _eggeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}:
				_dgbde := NewCT_CellSmartTagPr()
				if _aeff := d.DecodeElement(_dgbde, &_eggeb); _aeff != nil {
					return _aeff
				}
				_dfabe.CellSmartTagPr = append(_dfabe.CellSmartTagPr, _dgbde)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0020\u0025\u0076", _eggeb.Name)
				if _dgcc := d.Skip(); _dgcc != nil {
					return _dgcc
				}
			}
		case _b.EndElement:
			break _dggd
		case _b.CharData:
		}
	}
	return nil
}
func (_egfa *CT_DeletedField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgbcf := range start.Attr {
		if _dgbcf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efdad, _cdgg := _dgbcf.Value, error(nil)
			if _cdgg != nil {
				return _cdgg
			}
			_egfa.NameAttr = _efdad
			continue
		}
	}
	for {
		_gbbba, _fcdb := d.Token()
		if _fcdb != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0044\u0065\u006c\u0065\u0074\u0065d\u0046\u0069\u0065l\u0064:\u0020\u0025\u0073", _fcdb)
		}
		if _aecgf, _fdgbb := _gbbba.(_b.EndElement); _fdgbb && _aecgf.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_BorderPr struct {

	// Line Style
	StyleAttr ST_BorderStyle

	// Color
	Color *CT_Color
}

func (_gaeaad *ST_IconSetType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gffca, _gecaca := d.Token()
	if _gecaca != nil {
		return _gecaca
	}
	if _ccefg, _aebac := _gffca.(_b.EndElement); _aebac && _ccefg.Name == start.Name {
		*_gaeaad = 1
		return nil
	}
	if _befcde, _cbcef := _gffca.(_b.CharData); !_cbcef {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gffca)
	} else {
		switch string(_befcde) {
		case "":
			*_gaeaad = 0
		case "\u0033A\u0072\u0072\u006f\u0077\u0073":
			*_gaeaad = 1
		case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_gaeaad = 2
		case "\u0033\u0046\u006c\u0061\u0067\u0073":
			*_gaeaad = 3
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
			*_gaeaad = 4
		case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
			*_gaeaad = 5
		case "\u0033\u0053\u0069\u0067\u006e\u0073":
			*_gaeaad = 6
		case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
			*_gaeaad = 7
		case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
			*_gaeaad = 8
		case "\u0034A\u0072\u0072\u006f\u0077\u0073":
			*_gaeaad = 9
		case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_gaeaad = 10
		case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
			*_gaeaad = 11
		case "\u0034R\u0061\u0074\u0069\u006e\u0067":
			*_gaeaad = 12
		case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
			*_gaeaad = 13
		case "\u0035A\u0072\u0072\u006f\u0077\u0073":
			*_gaeaad = 14
		case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
			*_gaeaad = 15
		case "\u0035R\u0061\u0074\u0069\u006e\u0067":
			*_gaeaad = 16
		case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
			*_gaeaad = 17
		}
	}
	_gffca, _gecaca = d.Token()
	if _gecaca != nil {
		return _gecaca
	}
	if _degec, _dcffec := _gffca.(_b.EndElement); _dcffec && _degec.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gffca)
}

type CT_RevisionRowColumn struct {

	// Sheet Id
	SIdAttr uint32

	// End Of List
	EolAttr *bool

	// Reference
	RefAttr string

	// User Action
	ActionAttr ST_rwColActionType

	// Edge Deleted
	EdgeAttr *bool

	// Undo
	Undo []*CT_UndoInfo

	// Revised Row Column
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func NewCT_FilterColumn() *CT_FilterColumn { _bggef := &CT_FilterColumn{}; return _bggef }

type CT_RangeSets struct {

	// Reference and Page Item Count
	CountAttr *uint32

	// Range Set
	RangeSet []*CT_RangeSet
}

func (_gbfba *CT_colItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbebb := range start.Attr {
		if _dbebb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_edffe, _dbdddb := _g.ParseUint(_dbebb.Value, 10, 32)
			if _dbdddb != nil {
				return _dbdddb
			}
			_fbbbef := uint32(_edffe)
			_gbfba.CountAttr = &_fbbbef
			continue
		}
	}
_acdda:
	for {
		_cgdde, _cadff := d.Token()
		if _cadff != nil {
			return _cadff
		}
		switch _eccebe := _cgdde.(type) {
		case _b.StartElement:
			switch _eccebe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_acffc := NewCT_I()
				if _bddbe := d.DecodeElement(_acffc, &_eccebe); _bddbe != nil {
					return _bddbe
				}
				_gbfba.I = append(_gbfba.I, _acffc)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _eccebe.Name)
				if _ebccf := d.Skip(); _ebccf != nil {
					return _ebccf
				}
			}
		case _b.EndElement:
			break _acdda
		case _b.CharData:
		}
	}
	return nil
}
func (_fegcgd ST_SortType) String() string {
	switch _fegcgd {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	case 4:
		return "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061"
	case 5:
		return "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061"
	case 6:
		return "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c"
	case 7:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c"
	}
	return ""
}
func (_bcdab *CT_OleItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bcdab.NameAttr)})
	if _bcdab.IconAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcdab.IconAttr))})
	}
	if _bcdab.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcdab.AdviseAttr))})
	}
	if _bcdab.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcdab.PreferPicAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcdeab *CT_TableParts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcdeab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gcdeab.CountAttr)})
	}
	e.EncodeToken(start)
	if _gcdeab.TablePart != nil {
		_efdaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074"}}
		for _, _ccfadd := range _gcdeab.TablePart {
			e.EncodeElement(_ccfadd, _efdaa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SmartTagTypes and its children
func (_fcedc *CT_SmartTagTypes) Validate() error {
	return _fcedc.ValidateWithPath("\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073")
}

type CT_colItems struct {

	// Column Item Count
	CountAttr *uint32

	// Column Items
	I []*CT_I
}
type CT_SheetViews struct {

	// Worksheet View
	SheetView []*CT_SheetView

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dgcca *CT_NumFmts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccfg := range start.Attr {
		if _ccfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdacbd, _ccdga := _g.ParseUint(_ccfg.Value, 10, 32)
			if _ccdga != nil {
				return _ccdga
			}
			_acdf := uint32(_gdacbd)
			_dgcca.CountAttr = &_acdf
			continue
		}
	}
_ggdcg:
	for {
		_gcbfdf, _abdbd := d.Token()
		if _abdbd != nil {
			return _abdbd
		}
		switch _dacdf := _gcbfdf.(type) {
		case _b.StartElement:
			switch _dacdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_dfafcg := NewCT_NumFmt()
				if _eefa := d.DecodeElement(_dfafcg, &_dacdf); _eefa != nil {
					return _eefa
				}
				_dgcca.NumFmt = append(_dgcca.NumFmt, _dfafcg)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fN\u0075\u006d\u0046\u006d\u0074\u0073\u0020\u0025\u0076", _dacdf.Name)
				if _dbgga := d.Skip(); _dbgga != nil {
					return _dbgga
				}
			}
		case _b.EndElement:
			break _ggdcg
		case _b.CharData:
		}
	}
	return nil
}
func (_bfddg ST_SheetViewType) String() string {
	switch _bfddg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 2:
		return "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case 3:
		return "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return ""
}
func NewCT_PivotCacheDefinition() *CT_PivotCacheDefinition {
	_deedfc := &CT_PivotCacheDefinition{}
	_deedfc.CacheSource = NewCT_CacheSource()
	_deedfc.CacheFields = NewCT_CacheFields()
	return _deedfc
}

// ValidateWithPath validates the CT_Dxf and its children, prefixing error messages with path
func (_afgbb *CT_Dxf) ValidateWithPath(path string) error {
	if _afgbb.Font != nil {
		if _agcc := _afgbb.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _agcc != nil {
			return _agcc
		}
	}
	if _afgbb.NumFmt != nil {
		if _cagef := _afgbb.NumFmt.ValidateWithPath(path + "\u002fN\u0075\u006d\u0046\u006d\u0074"); _cagef != nil {
			return _cagef
		}
	}
	if _afgbb.Fill != nil {
		if _dbcf := _afgbb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _dbcf != nil {
			return _dbcf
		}
	}
	if _afgbb.Alignment != nil {
		if _cdcg := _afgbb.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _cdcg != nil {
			return _cdcg
		}
	}
	if _afgbb.Border != nil {
		if _cagab := _afgbb.Border.ValidateWithPath(path + "\u002fB\u006f\u0072\u0064\u0065\u0072"); _cagab != nil {
			return _cagab
		}
	}
	if _afgbb.Protection != nil {
		if _daegf := _afgbb.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _daegf != nil {
			return _daegf
		}
	}
	if _afgbb.ExtLst != nil {
		if _dcfe := _afgbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcfe != nil {
			return _dcfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetProtection and its children, prefixing error messages with path
func (_bebf *CT_ChartsheetProtection) ValidateWithPath(path string) error { return nil }
func (_dggde *CT_PivotDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eafcf := range start.Attr {
		if _eafcf.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_eeaace, _caaed := _g.ParseBool(_eafcf.Value)
			if _caaed != nil {
				return _caaed
			}
			_dggde.MeasureAttr = &_eeaace
			continue
		}
		if _eafcf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efgec, _egbggc := _eafcf.Value, error(nil)
			if _egbggc != nil {
				return _egbggc
			}
			_dggde.NameAttr = _efgec
			continue
		}
		if _eafcf.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_dadge, _cgbdd := _eafcf.Value, error(nil)
			if _cgbdd != nil {
				return _cgbdd
			}
			_dggde.UniqueNameAttr = _dadge
			continue
		}
		if _eafcf.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_bcgbfe, _fcbcf := _eafcf.Value, error(nil)
			if _fcbcf != nil {
				return _fcbcf
			}
			_dggde.CaptionAttr = _bcgbfe
			continue
		}
	}
	for {
		_dafdd, _ededc := d.Token()
		if _ededc != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _ededc)
		}
		if _adgbe, _cedcbb := _dafdd.(_b.EndElement); _cedcbb && _adgbe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupLevel and its children, prefixing error messages with path
func (_adcgf *CT_GroupLevel) ValidateWithPath(path string) error {
	if _adcgf.Groups != nil {
		if _febfc := _adcgf.Groups.ValidateWithPath(path + "\u002fG\u0072\u006f\u0075\u0070\u0073"); _febfc != nil {
			return _febfc
		}
	}
	if _adcgf.ExtLst != nil {
		if _ddbab := _adcgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddbab != nil {
			return _ddbab
		}
	}
	return nil
}

type CT_DateTime struct {

	// Value
	VAttr _d.Time

	// Unused Item
	UAttr *bool

	// Calculated Item Value
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Member Property Index
	X []*CT_X
}

// Validate validates the CT_MemberProperty and its children
func (_fbbd *CT_MemberProperty) Validate() error {
	return _fbbd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}

type CT_PageFields struct {

	// Page Item Count
	CountAttr *uint32

	// Page Field
	PageField []*CT_PageField
}

func NewCT_ExternalCell() *CT_ExternalCell { _afbca := &CT_ExternalCell{}; return _afbca }
func (_cgcdb ST_CellType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cgcdb.String(), start)
}
func (_efgc *CT_CacheHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efgc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_efgc.CountAttr)})
	}
	e.EncodeToken(start)
	if _efgc.CacheHierarchy != nil {
		_aca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
		for _, _aac := range _efgc.CacheHierarchy {
			e.EncodeElement(_aac, _aca)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_IconSet struct {

	// Icon Set
	IconSetAttr ST_IconSetType

	// Show Value
	ShowValueAttr *bool

	// Percent
	PercentAttr *bool

	// Reverse Icons
	ReverseAttr *bool

	// Conditional Formatting Object
	Cfvo []*CT_Cfvo
}

func (_fgfge *CT_SheetDimension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebee := range start.Attr {
		if _bebee.Name.Local == "\u0072\u0065\u0066" {
			_bageec, _eegdf := _bebee.Value, error(nil)
			if _eegdf != nil {
				return _eegdf
			}
			_fgfge.RefAttr = _bageec
			continue
		}
	}
	for {
		_gbecec, _abaae := d.Token()
		if _abaae != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e: \u0025\u0073", _abaae)
		}
		if _dceeaa, _eegbe := _gbecec.(_b.EndElement); _eegbe && _dceeaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_edaa *CT_QueryTableDeletedFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebaaf := range start.Attr {
		if _ebaaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbdc, _acbad := _g.ParseUint(_ebaaf.Value, 10, 32)
			if _acbad != nil {
				return _acbad
			}
			_fdgbc := uint32(_dbdc)
			_edaa.CountAttr = &_fdgbc
			continue
		}
	}
_gface:
	for {
		_dafbb, _ebfadb := d.Token()
		if _ebfadb != nil {
			return _ebfadb
		}
		switch _cbegg := _dafbb.(type) {
		case _b.StartElement:
			switch _cbegg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u006ce\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064"}:
				_dgcae := NewCT_DeletedField()
				if _eaaecc := d.DecodeElement(_dgcae, &_cbegg); _eaaecc != nil {
					return _eaaecc
				}
				_edaa.DeletedField = append(_edaa.DeletedField, _dgcae)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0051\u0075e\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _cbegg.Name)
				if _faacg := d.Skip(); _faacg != nil {
					return _faacg
				}
			}
		case _b.EndElement:
			break _gface
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Pages and its children
func (_eede *CT_Pages) Validate() error {
	return _eede.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073")
}
func (_gccda ST_CfvoType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcfeec := _b.Attr{}
	_bcfeec.Name = name
	switch _gccda {
	case ST_CfvoTypeUnset:
		_bcfeec.Value = ""
	case ST_CfvoTypeNum:
		_bcfeec.Value = "\u006e\u0075\u006d"
	case ST_CfvoTypePercent:
		_bcfeec.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_CfvoTypeMax:
		_bcfeec.Value = "\u006d\u0061\u0078"
	case ST_CfvoTypeMin:
		_bcfeec.Value = "\u006d\u0069\u006e"
	case ST_CfvoTypeFormula:
		_bcfeec.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case ST_CfvoTypePercentile:
		_bcfeec.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return _bcfeec, nil
}

type CT_XmlCellPr struct {

	// Table Field Id
	IdAttr uint32

	// Unique Table Name
	UniqueNameAttr *string

	// Column XML Properties
	XmlPr *CT_XmlPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Break and its children, prefixing error messages with path
func (_ccdg *CT_Break) ValidateWithPath(path string) error { return nil }

type CT_MdxSet struct {

	// Set Definition Index
	NsAttr uint32

	// Sort By Member Index Count
	CAttr *uint32

	// Set Sort Order
	OAttr ST_MdxSetOrder

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_cded *CT_ChartsheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cded.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cded.PasswordAttr)})
	}
	if _cded.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cded.AlgorithmNameAttr)})
	}
	if _cded.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cded.HashValueAttr)})
	}
	if _cded.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cded.SaltValueAttr)})
	}
	if _cded.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _a.Sprintf("\u0025\u0076", *_cded.SpinCountAttr)})
	}
	if _cded.ContentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006e\u0074\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cded.ContentAttr))})
	}
	if _cded.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cded.ObjectsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfcb *CT_PivotArea) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eddad := range start.Attr {
		if _eddad.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_gfebc, _dcffe := _g.ParseBool(_eddad.Value)
			if _dcffe != nil {
				return _dcffe
			}
			_cfcb.OutlineAttr = &_gfebc
			continue
		}
		if _eddad.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_fcegg, _afebg := _g.ParseInt(_eddad.Value, 10, 32)
			if _afebg != nil {
				return _afebg
			}
			_gfcafd := int32(_fcegg)
			_cfcb.FieldAttr = &_gfcafd
			continue
		}
		if _eddad.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u006c\u0079" {
			_aafc, _cfbce := _g.ParseBool(_eddad.Value)
			if _cfbce != nil {
				return _cfbce
			}
			_cfcb.DataOnlyAttr = &_aafc
			continue
		}
		if _eddad.Name.Local == "\u006ca\u0062\u0065\u006c\u004f\u006e\u006cy" {
			_bddfga, _cefab := _g.ParseBool(_eddad.Value)
			if _cefab != nil {
				return _cefab
			}
			_cfcb.LabelOnlyAttr = &_bddfga
			continue
		}
		if _eddad.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0052\u006f\u0077" {
			_bedcg, _aafab := _g.ParseBool(_eddad.Value)
			if _aafab != nil {
				return _aafab
			}
			_cfcb.GrandRowAttr = &_bedcg
			continue
		}
		if _eddad.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0043\u006f\u006c" {
			_aecfcd, _fggdb := _g.ParseBool(_eddad.Value)
			if _fggdb != nil {
				return _fggdb
			}
			_cfcb.GrandColAttr = &_aecfcd
			continue
		}
		if _eddad.Name.Local == "\u0063\u0061\u0063\u0068\u0065\u0049\u006e\u0064\u0065\u0078" {
			_fceeb, _dceed := _g.ParseBool(_eddad.Value)
			if _dceed != nil {
				return _dceed
			}
			_cfcb.CacheIndexAttr = &_fceeb
			continue
		}
		if _eddad.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cfcb.TypeAttr.UnmarshalXMLAttr(_eddad)
			continue
		}
		if _eddad.Name.Local == "\u006f\u0066\u0066\u0073\u0065\u0074" {
			_deafce, _agbf := _eddad.Value, error(nil)
			if _agbf != nil {
				return _agbf
			}
			_cfcb.OffsetAttr = &_deafce
			continue
		}
		if _eddad.Name.Local == "c\u006f\u006c\u006c\u0061\u0070\u0073e\u0064\u004c\u0065\u0076\u0065\u006c\u0073\u0041\u0072e\u0053\u0075\u0062t\u006ft\u0061\u006c\u0073" {
			_dcdff, _dbbgfc := _g.ParseBool(_eddad.Value)
			if _dbbgfc != nil {
				return _dbbgfc
			}
			_cfcb.CollapsedLevelsAreSubtotalsAttr = &_dcdff
			continue
		}
		if _eddad.Name.Local == "\u0061\u0078\u0069\u0073" {
			_cfcb.AxisAttr.UnmarshalXMLAttr(_eddad)
			continue
		}
		if _eddad.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_efaecf, _cfcbf := _g.ParseUint(_eddad.Value, 10, 32)
			if _cfcbf != nil {
				return _cfcbf
			}
			_edbaa := uint32(_efaecf)
			_cfcb.FieldPositionAttr = &_edbaa
			continue
		}
	}
_gbeag:
	for {
		_adcbe, _bfgbaa := d.Token()
		if _bfgbaa != nil {
			return _bfgbaa
		}
		switch _gbbeg := _adcbe.(type) {
		case _b.StartElement:
			switch _gbbeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"}:
				_cfcb.References = NewCT_PivotAreaReferences()
				if _cgge := d.DecodeElement(_cfcb.References, &_gbbeg); _cgge != nil {
					return _cgge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfcb.ExtLst = NewCT_ExtensionList()
				if _egefg := d.DecodeElement(_cfcb.ExtLst, &_gbbeg); _egefg != nil {
					return _egefg
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u0020\u0025\u0076", _gbbeg.Name)
				if _febgg := d.Skip(); _febgg != nil {
					return _febgg
				}
			}
		case _b.EndElement:
			break _gbeag
		case _b.CharData:
		}
	}
	return nil
}
func (_eeff *CT_CellProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeff.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeff.LockedAttr))})
	}
	if _eeff.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeff.HiddenAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Dimensions() *CT_Dimensions { _dgage := &CT_Dimensions{}; return _dgage }

// Validate validates the CT_X and its children
func (_faafff *CT_X) Validate() error { return _faafff.ValidateWithPath("\u0043\u0054\u005f\u0058") }
func (_agfad *CT_Metadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _agfad.MetadataTypes != nil {
		_cdbac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_agfad.MetadataTypes, _cdbac)
	}
	if _agfad.MetadataStrings != nil {
		_dcgeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073"}}
		e.EncodeElement(_agfad.MetadataStrings, _dcgeb)
	}
	if _agfad.MdxMetadata != nil {
		_dcgga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_agfad.MdxMetadata, _dcgga)
	}
	if _agfad.FutureMetadata != nil {
		_eaeaab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"}}
		for _, _bfbde := range _agfad.FutureMetadata {
			e.EncodeElement(_bfbde, _eaeaab)
		}
	}
	if _agfad.CellMetadata != nil {
		_ecbfe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_agfad.CellMetadata, _ecbfe)
	}
	if _agfad.ValueMetadata != nil {
		_ecggg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0076\u0061\u006cu\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"}}
		e.EncodeElement(_agfad.ValueMetadata, _ecggg)
	}
	if _agfad.ExtLst != nil {
		_fcabc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agfad.ExtLst, _fcabc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gcffd *CT_SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edfde:
	for {
		_fbfde, _dgefg := d.Token()
		if _dgefg != nil {
			return _dgefg
		}
		switch _feefaab := _fbfde.(type) {
		case _b.StartElement:
			switch _feefaab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_daced := NewCT_SingleXmlCell()
				if _cbedbc := d.DecodeElement(_daced, &_feefaab); _cbedbc != nil {
					return _cbedbc
				}
				_gcffd.SingleXmlCell = append(_gcffd.SingleXmlCell, _daced)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c\u0073\u0020\u0025\u0076", _feefaab.Name)
				if _cefga := d.Skip(); _cefga != nil {
					return _cefga
				}
			}
		case _b.EndElement:
			break _edfde
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Pane() *CT_Pane { _gbbbb := &CT_Pane{}; return _gbbbb }
func (_dbadc *CT_SheetData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dbadc.Row != nil {
		_beebfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u006f\u0077"}}
		for _, _ffade := range _dbadc.Row {
			e.EncodeElement(_ffade, _beebfa)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ExternalConnectionTypeUnset   ST_ExternalConnectionType = 0
	ST_ExternalConnectionTypeGeneral ST_ExternalConnectionType = 1
	ST_ExternalConnectionTypeText    ST_ExternalConnectionType = 2
	ST_ExternalConnectionTypeMDY     ST_ExternalConnectionType = 3
	ST_ExternalConnectionTypeDMY     ST_ExternalConnectionType = 4
	ST_ExternalConnectionTypeYMD     ST_ExternalConnectionType = 5
	ST_ExternalConnectionTypeMYD     ST_ExternalConnectionType = 6
	ST_ExternalConnectionTypeDYM     ST_ExternalConnectionType = 7
	ST_ExternalConnectionTypeYDM     ST_ExternalConnectionType = 8
	ST_ExternalConnectionTypeSkip    ST_ExternalConnectionType = 9
	ST_ExternalConnectionTypeEMD     ST_ExternalConnectionType = 10
)

type Metadata struct{ CT_Metadata }

func (_effaf *CT_MetadataTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggbd := range start.Attr {
		if _ggbd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_baecc, _fbbba := _g.ParseUint(_ggbd.Value, 10, 32)
			if _fbbba != nil {
				return _fbbba
			}
			_gebee := uint32(_baecc)
			_effaf.CountAttr = &_gebee
			continue
		}
	}
_gbcbg:
	for {
		_bdbf, _edfec := d.Token()
		if _edfec != nil {
			return _edfec
		}
		switch _gfacge := _bdbf.(type) {
		case _b.StartElement:
			switch _gfacge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}:
				_bfeba := NewCT_MetadataType()
				if _afefb := d.DecodeElement(_bfeba, &_gfacge); _afefb != nil {
					return _afefb
				}
				_effaf.MetadataType = append(_effaf.MetadataType, _bfeba)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _gfacge.Name)
				if _afadg := d.Skip(); _afadg != nil {
					return _afadg
				}
			}
		case _b.EndElement:
			break _gbcbg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PCDSCPage and its children, prefixing error messages with path
func (_befcdf *CT_PCDSCPage) ValidateWithPath(path string) error {
	for _cfabc, _fgfb := range _befcdf.PageItem {
		if _abgfg := _fgfb.ValidateWithPath(_a.Sprintf("\u0025s\u002fP\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u005b\u0025\u0064\u005d", path, _cfabc)); _abgfg != nil {
			return _abgfg
		}
	}
	return nil
}
func (_caeaa ST_Orientation) String() string {
	switch _caeaa {
	case 0:
		return ""
	case 1:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 2:
		return "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case 3:
		return "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return ""
}

// ValidateWithPath validates the CT_SharedItems and its children, prefixing error messages with path
func (_aacdb *CT_SharedItems) ValidateWithPath(path string) error {
	for _gffef, _feefaa := range _aacdb.M {
		if _ebdcg := _feefaa.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _gffef)); _ebdcg != nil {
			return _ebdcg
		}
	}
	for _aefea, _beafe := range _aacdb.N {
		if _dabgd := _beafe.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _aefea)); _dabgd != nil {
			return _dabgd
		}
	}
	for _bbafcb, _ceead := range _aacdb.B {
		if _afefg := _ceead.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _bbafcb)); _afefg != nil {
			return _afefg
		}
	}
	for _fgfdda, _defgg := range _aacdb.E {
		if _gcbgeb := _defgg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _fgfdda)); _gcbgeb != nil {
			return _gcbgeb
		}
	}
	for _feggg, _cdagc := range _aacdb.S {
		if _gfafg := _cdagc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _feggg)); _gfafg != nil {
			return _gfafg
		}
	}
	for _dbbefb, _beebe := range _aacdb.D {
		if _bacbb := _beebe.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _dbbefb)); _bacbb != nil {
			return _bacbb
		}
	}
	return nil
}

type ST_MdxSetOrder byte

func (_defbeb ST_SortType) ValidateWithPath(path string) error {
	switch _defbeb {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_defbeb))
	}
	return nil
}

type CT_CustomFilters struct {

	// And
	AndAttr *bool

	// Custom Filter Criteria
	CustomFilter []*CT_CustomFilter
}

// Validate validates the CT_ControlPr and its children
func (_fefb *CT_ControlPr) Validate() error {
	return _fefb.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072")
}
func (_ggfgf *CT_MetadataBlocks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbbgf := range start.Attr {
		if _bbbgf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecfdb, _aeedf := _g.ParseUint(_bbbgf.Value, 10, 32)
			if _aeedf != nil {
				return _aeedf
			}
			_dgbgg := uint32(_ecfdb)
			_ggfgf.CountAttr = &_dgbgg
			continue
		}
	}
_bebdf:
	for {
		_gffec, _gdagf := d.Token()
		if _gdagf != nil {
			return _gdagf
		}
		switch _fagfd := _gffec.(type) {
		case _b.StartElement:
			switch _fagfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_gdbcg := NewCT_MetadataBlock()
				if _gfagcb := d.DecodeElement(_gdbcg, &_fagfd); _gfagcb != nil {
					return _gfagcb
				}
				_ggfgf.Bk = append(_ggfgf.Bk, _gdbcg)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b\u0073\u0020\u0025\u0076", _fagfd.Name)
				if _bbfgg := d.Skip(); _bbfgg != nil {
					return _bbfgg
				}
			}
		case _b.EndElement:
			break _bebdf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CustomSheetView() *CT_CustomSheetView {
	_bfcfcf := &CT_CustomSheetView{}
	_bfcfcf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _bfcfcf
}

// ValidateWithPath validates the CT_SmartTagType and its children, prefixing error messages with path
func (_abfdg *CT_SmartTagType) ValidateWithPath(path string) error { return nil }
func (_degea ST_GradientType) ValidateWithPath(path string) error {
	switch _degea {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_degea))
	}
	return nil
}
func NewCT_RevisionHeader() *CT_RevisionHeader {
	_ecefe := &CT_RevisionHeader{}
	_ecefe.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_ecefe.SheetIdMap = NewCT_SheetIdMap()
	return _ecefe
}
func NewCT_ProtectedRanges() *CT_ProtectedRanges { _gbgfd := &CT_ProtectedRanges{}; return _gbgfd }

type CT_TableStyle struct {

	// Table Style Name
	NameAttr string

	// Pivot Style
	PivotAttr *bool

	// Table
	TableAttr *bool

	// Table Style Count
	CountAttr *uint32

	// Table Style
	TableStyleElement []*CT_TableStyleElement
}

func (_degfe *CT_PageMargins) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caeca := range start.Attr {
		if _caeca.Name.Local == "\u006c\u0065\u0066\u0074" {
			_edcaf, _bdddc := _g.ParseFloat(_caeca.Value, 64)
			if _bdddc != nil {
				return _bdddc
			}
			_degfe.LeftAttr = _edcaf
			continue
		}
		if _caeca.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_bcfbb, _efbdb := _g.ParseFloat(_caeca.Value, 64)
			if _efbdb != nil {
				return _efbdb
			}
			_degfe.RightAttr = _bcfbb
			continue
		}
		if _caeca.Name.Local == "\u0074\u006f\u0070" {
			_fbcabeb, _baada := _g.ParseFloat(_caeca.Value, 64)
			if _baada != nil {
				return _baada
			}
			_degfe.TopAttr = _fbcabeb
			continue
		}
		if _caeca.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_efggb, _bbea := _g.ParseFloat(_caeca.Value, 64)
			if _bbea != nil {
				return _bbea
			}
			_degfe.BottomAttr = _efggb
			continue
		}
		if _caeca.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072" {
			_bacdb, _dgec := _g.ParseFloat(_caeca.Value, 64)
			if _dgec != nil {
				return _dgec
			}
			_degfe.HeaderAttr = _bacdb
			continue
		}
		if _caeca.Name.Local == "\u0066\u006f\u006f\u0074\u0065\u0072" {
			_feecad, _dffc := _g.ParseFloat(_caeca.Value, 64)
			if _dffc != nil {
				return _dffc
			}
			_degfe.FooterAttr = _feecad
			continue
		}
	}
	for {
		_aaabg, _afdcf := d.Token()
		if _afdcf != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073:\u0020\u0025\u0073", _afdcf)
		}
		if _ddgfa, _ddfda := _aaabg.(_b.EndElement); _ddfda && _ddgfa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bddbbg *PivotCacheRecords) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bddbbg.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	for _, _gefcb := range start.Attr {
		if _gefcb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abdadf, _gggbfa := _g.ParseUint(_gefcb.Value, 10, 32)
			if _gggbfa != nil {
				return _gggbfa
			}
			_abeba := uint32(_abdadf)
			_bddbbg.CountAttr = &_abeba
			continue
		}
	}
_acggc:
	for {
		_fdgbbg, _fgaab := d.Token()
		if _fgaab != nil {
			return _fgaab
		}
		switch _eegccc := _fdgbbg.(type) {
		case _b.StartElement:
			switch _eegccc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_gdfaa := NewCT_Record()
				if _efgdg := d.DecodeElement(_gdfaa, &_eegccc); _efgdg != nil {
					return _efgdg
				}
				_bddbbg.R = append(_bddbbg.R, _gdfaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bddbbg.ExtLst = NewCT_ExtensionList()
				if _bfeagc := d.DecodeElement(_bddbbg.ExtLst, &_eegccc); _bfeagc != nil {
					return _bfeagc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065\u0063\u006f\u0072\u0064\u0073\u0020\u0025\u0076", _eegccc.Name)
				if _bccdea := d.Skip(); _bccdea != nil {
					return _bccdea
				}
			}
		case _b.EndElement:
			break _acggc
		case _b.CharData:
		}
	}
	return nil
}
func (_ccbec ST_ConditionalFormattingOperator) String() string {
	switch _ccbec {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 2:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case 6:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 7:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 8:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 9:
		return "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case 10:
		return "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case 11:
		return "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case 12:
		return "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return ""
}
func (_aeeff *CT_Format) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aeeff.PivotArea = NewCT_PivotArea()
	for _, _bead := range start.Attr {
		if _bead.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_aeeff.ActionAttr.UnmarshalXMLAttr(_bead)
			continue
		}
		if _bead.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_beca, _dfead := _g.ParseUint(_bead.Value, 10, 32)
			if _dfead != nil {
				return _dfead
			}
			_gfdgf := uint32(_beca)
			_aeeff.DxfIdAttr = &_gfdgf
			continue
		}
	}
_ggbce:
	for {
		_gebbd, _gfgaf := d.Token()
		if _gfgaf != nil {
			return _gfgaf
		}
		switch _fbgcg := _gebbd.(type) {
		case _b.StartElement:
			switch _fbgcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _eagbd := d.DecodeElement(_aeeff.PivotArea, &_fbgcg); _eagbd != nil {
					return _eagbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeeff.ExtLst = NewCT_ExtensionList()
				if _fgddd := d.DecodeElement(_aeeff.ExtLst, &_fbgcg); _fgddd != nil {
					return _fgddd
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0046\u006f\u0072m\u0061\u0074 \u0025\u0076", _fbgcg.Name)
				if _defc := d.Skip(); _defc != nil {
					return _defc
				}
			}
		case _b.EndElement:
			break _ggbce
		case _b.CharData:
		}
	}
	return nil
}
func (_dabdbg *CT_SmartTagTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fgece:
	for {
		_ccgfcb, _acdbaf := d.Token()
		if _acdbaf != nil {
			return _acdbaf
		}
		switch _egeaa := _ccgfcb.(type) {
		case _b.StartElement:
			switch _egeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}:
				_fgdac := NewCT_SmartTagType()
				if _eebeg := d.DecodeElement(_fgdac, &_egeaa); _eebeg != nil {
					return _eebeg
				}
				_dabdbg.SmartTagType = append(_dabdbg.SmartTagType, _fgdac)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073\u0020\u0025v", _egeaa.Name)
				if _bgfad := d.Skip(); _bgfad != nil {
					return _bgfad
				}
			}
		case _b.EndElement:
			break _fgece
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Break and its children
func (_dfg *CT_Break) Validate() error {
	return _dfg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b")
}
func NewCT_RowHierarchiesUsage() *CT_RowHierarchiesUsage {
	_bbbaa := &CT_RowHierarchiesUsage{}
	return _bbbaa
}
func (_eeegaef *ST_SourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eeegaef = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_eeegaef = 1
	case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
		*_eeegaef = 2
	case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
		*_eeegaef = 3
	case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
		*_eeegaef = 4
	}
	return nil
}
func NewCT_CsPageSetup() *CT_CsPageSetup { _bfdgg := &CT_CsPageSetup{}; return _bfdgg }
func (_dad *CT_Borders) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dad.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dad.CountAttr)})
	}
	e.EncodeToken(start)
	if _dad.Border != nil {
		_eeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		for _, _ddag := range _dad.Border {
			e.EncodeElement(_ddag, _eeg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CommentList and its children, prefixing error messages with path
func (_aaeb *CT_CommentList) ValidateWithPath(path string) error {
	for _gccac, _fbcd := range _aaeb.Comment {
		if _dcad := _fbcd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006d\u006d\u0065\u006et\u005b\u0025\u0064\u005d", path, _gccac)); _dcad != nil {
			return _dcad
		}
	}
	return nil
}
func (_cggbea ST_TimePeriod) ValidateWithPath(path string) error {
	switch _cggbea {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggbea))
	}
	return nil
}

// ValidateWithPath validates the CT_pivotTableDefinition and its children, prefixing error messages with path
func (_eaebf *CT_pivotTableDefinition) ValidateWithPath(path string) error {
	if _fedgd := _eaebf.Location.ValidateWithPath(path + "\u002fL\u006f\u0063\u0061\u0074\u0069\u006fn"); _fedgd != nil {
		return _fedgd
	}
	if _eaebf.PivotFields != nil {
		if _adfde := _eaebf.PivotFields.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"); _adfde != nil {
			return _adfde
		}
	}
	if _eaebf.RowFields != nil {
		if _gdgae := _eaebf.RowFields.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"); _gdgae != nil {
			return _gdgae
		}
	}
	if _eaebf.RowItems != nil {
		if _ggaeae := _eaebf.RowItems.ValidateWithPath(path + "\u002fR\u006f\u0077\u0049\u0074\u0065\u006ds"); _ggaeae != nil {
			return _ggaeae
		}
	}
	if _eaebf.ColFields != nil {
		if _gfeeb := _eaebf.ColFields.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"); _gfeeb != nil {
			return _gfeeb
		}
	}
	if _eaebf.ColItems != nil {
		if _abedc := _eaebf.ColItems.ValidateWithPath(path + "\u002fC\u006f\u006c\u0049\u0074\u0065\u006ds"); _abedc != nil {
			return _abedc
		}
	}
	if _eaebf.PageFields != nil {
		if _gfedf := _eaebf.PageFields.ValidateWithPath(path + "/\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _gfedf != nil {
			return _gfedf
		}
	}
	if _eaebf.DataFields != nil {
		if _cgbfd := _eaebf.DataFields.ValidateWithPath(path + "/\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"); _cgbfd != nil {
			return _cgbfd
		}
	}
	if _eaebf.Formats != nil {
		if _dcaag := _eaebf.Formats.ValidateWithPath(path + "\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _dcaag != nil {
			return _dcaag
		}
	}
	if _eaebf.ConditionalFormats != nil {
		if _gedda := _eaebf.ConditionalFormats.ValidateWithPath(path + "\u002f\u0043\u006f\u006edi\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _gedda != nil {
			return _gedda
		}
	}
	if _eaebf.ChartFormats != nil {
		if _eeafg := _eaebf.ChartFormats.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"); _eeafg != nil {
			return _eeafg
		}
	}
	if _eaebf.PivotHierarchies != nil {
		if _gadcfc := _eaebf.PivotHierarchies.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _gadcfc != nil {
			return _gadcfc
		}
	}
	if _eaebf.PivotTableStyleInfo != nil {
		if _fgdgg := _eaebf.PivotTableStyleInfo.ValidateWithPath(path + "/\u0050i\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065In\u0066\u006f"); _fgdgg != nil {
			return _fgdgg
		}
	}
	if _eaebf.Filters != nil {
		if _eagge := _eaebf.Filters.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u0073"); _eagge != nil {
			return _eagge
		}
	}
	if _eaebf.RowHierarchiesUsage != nil {
		if _ceebe := _eaebf.RowHierarchiesUsage.ValidateWithPath(path + "/\u0052o\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _ceebe != nil {
			return _ceebe
		}
	}
	if _eaebf.ColHierarchiesUsage != nil {
		if _bdccd := _eaebf.ColHierarchiesUsage.ValidateWithPath(path + "/\u0043o\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0069\u0065\u0073\u0055sa\u0067\u0065"); _bdccd != nil {
			return _bdccd
		}
	}
	if _eaebf.ExtLst != nil {
		if _gacedc := _eaebf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gacedc != nil {
			return _gacedc
		}
	}
	return nil
}
func NewCT_RangePr() *CT_RangePr { _caegb := &CT_RangePr{}; return _caegb }
func (_bbaga ST_DataValidationErrorStyle) ValidateWithPath(path string) error {
	switch _bbaga {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbaga))
	}
	return nil
}

type CT_Users struct {

	// Active User Count
	CountAttr *uint32

	// User Information
	UserInfo []*CT_SharedUser
}

// ValidateWithPath validates the CT_RevisionHeaders and its children, prefixing error messages with path
func (_gefdb *CT_RevisionHeaders) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_gefdb.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _gefdb.GuidAttr)
	}
	if _gefdb.LastGuidAttr != nil {
		if !_ff.ST_GuidPatternRe.MatchString(*_gefdb.LastGuidAttr) {
			return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u004c\u0061s\u0074\u0047\u0075i\u0064\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, *_gefdb.LastGuidAttr)
		}
	}
	for _ebegc, _fadfed := range _gefdb.Header {
		if _dceec := _fadfed.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _ebegc)); _dceec != nil {
			return _dceec
		}
	}
	return nil
}
func NewCT_MetadataRecord() *CT_MetadataRecord { _gfcca := &CT_MetadataRecord{}; return _gfcca }

type CT_String struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}
type CT_PhoneticPr struct {

	// Font Id
	FontIdAttr uint32

	// Character Type
	TypeAttr ST_PhoneticType

	// Alignment
	AlignmentAttr ST_PhoneticAlignment
}

func NewCT_ChartFormats() *CT_ChartFormats { _aabe := &CT_ChartFormats{}; return _aabe }
func NewCT_PhoneticPr() *CT_PhoneticPr     { _cdggg := &CT_PhoneticPr{}; return _cdggg }
func NewCT_OleSize() *CT_OleSize           { _bcfef := &CT_OleSize{}; return _bcfef }

// ValidateWithPath validates the CT_FileVersion and its children, prefixing error messages with path
func (_cgad *CT_FileVersion) ValidateWithPath(path string) error {
	if _cgad.CodeNameAttr != nil {
		if !_ff.ST_GuidPatternRe.MatchString(*_cgad.CodeNameAttr) {
			return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006fd\u0065\u004e\u0061m\u0065\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, *_cgad.CodeNameAttr)
		}
	}
	return nil
}
func (_fbgcc *CT_TextField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbbae := range start.Attr {
		if _gbbae.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fbgcc.TypeAttr.UnmarshalXMLAttr(_gbbae)
			continue
		}
		if _gbbae.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_gbdeg, _aefee := _g.ParseUint(_gbbae.Value, 10, 32)
			if _aefee != nil {
				return _aefee
			}
			_ffbeb := uint32(_gbdeg)
			_fbgcc.PositionAttr = &_ffbeb
			continue
		}
	}
	for {
		_fccgdc, _cbecf := d.Token()
		if _cbecf != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0073", _cbecf)
		}
		if _cdedb, _edcdf := _fccgdc.(_b.EndElement); _edcdf && _cdedb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_SheetCalcPr struct {

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool
}

func NewCT_DateGroupItem() *CT_DateGroupItem {
	_ddfe := &CT_DateGroupItem{}
	_ddfe.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	return _ddfe
}

// Validate validates the CT_Reviewed and its children
func (_badda *CT_Reviewed) Validate() error {
	return _badda.ValidateWithPath("C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064")
}

type ST_CellSpans []string

// ValidateWithPath validates the CT_RevisionCustomView and its children, prefixing error messages with path
func (_fcecf *CT_RevisionCustomView) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_fcecf.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _fcecf.GuidAttr)
	}
	if _fcecf.ActionAttr == ST_RevisionActionUnset {
		return _a.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cafed := _fcecf.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _cafed != nil {
		return _cafed
	}
	return nil
}
func (_egfaf *CT_MdxMemeberProp) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _a.Sprintf("\u0025\u0076", _egfaf.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _a.Sprintf("\u0025\u0076", _egfaf.NpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecge *CT_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ecge.Ext != nil {
		_befbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _ebbef := range _ecge.Ext {
			e.EncodeElement(_ebbef, _befbd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aeebd *ST_CellFormulaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aeebd = 0
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_aeebd = 1
	case "\u0061\u0072\u0072a\u0079":
		*_aeebd = 2
	case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
		*_aeebd = 3
	case "\u0073\u0068\u0061\u0072\u0065\u0064":
		*_aeebd = 4
	}
	return nil
}

// ValidateWithPath validates the CT_IndexedColors and its children, prefixing error messages with path
func (_egadg *CT_IndexedColors) ValidateWithPath(path string) error {
	for _ccbfe, _gfeea := range _egadg.RgbColor {
		if _gcgeb := _gfeea.ValidateWithPath(_a.Sprintf("\u0025s\u002fR\u0067\u0062\u0043\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _ccbfe)); _gcgeb != nil {
			return _gcgeb
		}
	}
	return nil
}

type CT_DataRefs struct {

	// Data Consolidation Reference Count
	CountAttr *uint32

	// Data Consolidation Reference
	DataRef []*CT_DataRef
}

// Validate validates the CT_HierarchyUsage and its children
func (_ddecf *CT_HierarchyUsage) Validate() error {
	return _ddecf.ValidateWithPath("\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065")
}

// Validate validates the CT_FileRecoveryPr and its children
func (_adffc *CT_FileRecoveryPr) Validate() error {
	return _adffc.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072")
}

type ST_FormulaExpression byte

func (_cagbbf *ST_PaneState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cagbbf = 0
	case "\u0073\u0070\u006ci\u0074":
		*_cagbbf = 1
	case "\u0066\u0072\u006f\u007a\u0065\u006e":
		*_cagbbf = 2
	case "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074":
		*_cagbbf = 3
	}
	return nil
}

// ValidateWithPath validates the CT_Sets and its children, prefixing error messages with path
func (_geebf *CT_Sets) ValidateWithPath(path string) error {
	for _dfgab, _fbfbe := range _geebf.Set {
		if _dgbdg := _fbfbe.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0065\u0074\u005b\u0025\u0064\u005d", path, _dfgab)); _dgbdg != nil {
			return _dgbdg
		}
	}
	return nil
}

// Validate validates the CT_PatternFill and its children
func (_eabgc *CT_PatternFill) Validate() error {
	return _eabgc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c")
}
func NewCT_SmartTagType() *CT_SmartTagType { _agbbc := &CT_SmartTagType{}; return _agbbc }
func NewCT_Metadata() *CT_Metadata         { _dabdb := &CT_Metadata{}; return _dabdb }

// Validate validates the CT_RevisionRowColumn and its children
func (_daada *CT_RevisionRowColumn) Validate() error {
	return _daada.ValidateWithPath("C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e")
}

type CT_PrintOptions struct {

	// Horizontal Centered
	HorizontalCenteredAttr *bool

	// Vertical Centered
	VerticalCenteredAttr *bool

	// Print Headings
	HeadingsAttr *bool

	// Print Grid Lines
	GridLinesAttr *bool

	// Grid Lines Set
	GridLinesSetAttr *bool
}

// Validate validates the CT_Member and its children
func (_bbddgb *CT_Member) Validate() error {
	return _bbddgb.ValidateWithPath("\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r")
}
func (_ccc *CT_CacheHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbcc := range start.Attr {
		if _dbcc.Name.Local == "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gafa, _cacb := _dbcc.Value, error(nil)
			if _cacb != nil {
				return _cacb
			}
			_ccc.DimensionUniqueNameAttr = &_gafa
			continue
		}
		if _dbcc.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_ccda, _edfed := _dbcc.Value, error(nil)
			if _edfed != nil {
				return _edfed
			}
			_ccc.DisplayFolderAttr = &_ccda
			continue
		}
		if _dbcc.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_gdag, _bga := _dbcc.Value, error(nil)
			if _bga != nil {
				return _bga
			}
			_ccc.CaptionAttr = &_gdag
			continue
		}
		if _dbcc.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_ddcf, _ceda := _dbcc.Value, error(nil)
			if _ceda != nil {
				return _ceda
			}
			_ccc.MeasureGroupAttr = &_ddcf
			continue
		}
		if _dbcc.Name.Local == "\u0073\u0065\u0074" {
			_cbdg, _fcfg := _g.ParseBool(_dbcc.Value)
			if _fcfg != nil {
				return _fcfg
			}
			_ccc.SetAttr = &_cbdg
			continue
		}
		if _dbcc.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073" {
			_bggc, _cbca := _g.ParseBool(_dbcc.Value)
			if _cbca != nil {
				return _cbca
			}
			_ccc.MeasuresAttr = &_bggc
			continue
		}
		if _dbcc.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_aacf, _babg := _g.ParseInt(_dbcc.Value, 10, 32)
			if _babg != nil {
				return _babg
			}
			_gfe := int32(_aacf)
			_ccc.IconSetAttr = &_gfe
			continue
		}
		if _dbcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbe, _egbd := _g.ParseUint(_dbcc.Value, 10, 32)
			if _egbd != nil {
				return _egbd
			}
			_ccc.CountAttr = uint32(_gbe)
			continue
		}
		if _dbcc.Name.Local == "\u0074\u0069\u006d\u0065" {
			_dagf, _fede := _g.ParseBool(_dbcc.Value)
			if _fede != nil {
				return _fede
			}
			_ccc.TimeAttr = &_dagf
			continue
		}
		if _dbcc.Name.Local == "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064" {
			_gga, _dbb := _g.ParseBool(_dbcc.Value)
			if _dbb != nil {
				return _dbb
			}
			_ccc.OneFieldAttr = &_gga
			continue
		}
		if _dbcc.Name.Local == "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065" {
			_beeeb, _cgbg := _g.ParseUint(_dbcc.Value, 10, 16)
			if _cgbg != nil {
				return _cgbg
			}
			_gdae := uint16(_beeeb)
			_ccc.MemberValueDatatypeAttr = &_gdae
			continue
		}
		if _dbcc.Name.Local == "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070" {
			_dcbg, _fbde := _g.ParseBool(_dbcc.Value)
			if _fbde != nil {
				return _fbde
			}
			_ccc.UnbalancedGroupAttr = &_dcbg
			continue
		}
		if _dbcc.Name.Local == "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t" {
			_gaca, _bef := _g.ParseUint(_dbcc.Value, 10, 32)
			if _bef != nil {
				return _bef
			}
			_fadb := uint32(_gaca)
			_ccc.ParentSetAttr = &_fadb
			continue
		}
		if _dbcc.Name.Local == "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_adb, _gfeb := _dbcc.Value, error(nil)
			if _gfeb != nil {
				return _gfeb
			}
			_ccc.DefaultMemberUniqueNameAttr = &_adb
			continue
		}
		if _dbcc.Name.Local == "\u006de\u0061\u0073\u0075\u0072\u0065" {
			_dgfd, _bgfg := _g.ParseBool(_dbcc.Value)
			if _bgfg != nil {
				return _bgfg
			}
			_ccc.MeasureAttr = &_dgfd
			continue
		}
		if _dbcc.Name.Local == "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064" {
			_ceaa, _bdda := _g.ParseBool(_dbcc.Value)
			if _bdda != nil {
				return _bdda
			}
			_ccc.UnbalancedAttr = &_ceaa
			continue
		}
		if _dbcc.Name.Local == "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_cadc, _gca := _dbcc.Value, error(nil)
			if _gca != nil {
				return _gca
			}
			_ccc.AllCaptionAttr = &_cadc
			continue
		}
		if _dbcc.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gba, _bfdb := _g.ParseBool(_dbcc.Value)
			if _bfdb != nil {
				return _bfdb
			}
			_ccc.HiddenAttr = &_gba
			continue
		}
		if _dbcc.Name.Local == "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e" {
			_bcc, _cgef := _g.ParseBool(_dbcc.Value)
			if _cgef != nil {
				return _cgef
			}
			_ccc.AttributeAttr = &_bcc
			continue
		}
		if _dbcc.Name.Local == "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cgd, _adbc := _dbcc.Value, error(nil)
			if _adbc != nil {
				return _adbc
			}
			_ccc.AllUniqueNameAttr = &_cgd
			continue
		}
		if _dbcc.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_fda, _dadc := _dbcc.Value, error(nil)
			if _dadc != nil {
				return _dadc
			}
			_ccc.UniqueNameAttr = _fda
			continue
		}
		if _dbcc.Name.Local == "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065" {
			_dcbd, _deed := _g.ParseBool(_dbcc.Value)
			if _deed != nil {
				return _deed
			}
			_ccc.KeyAttributeAttr = &_dcbd
			continue
		}
	}
_ffd:
	for {
		_ddef, _aaba := d.Token()
		if _aaba != nil {
			return _aaba
		}
		switch _egg := _ddef.(type) {
		case _b.StartElement:
			switch _egg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0065\u006c\u0064\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_ccc.FieldsUsage = NewCT_FieldsUsage()
				if _fcee := d.DecodeElement(_ccc.FieldsUsage, &_egg); _fcee != nil {
					return _fcee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c\u0073"}:
				_ccc.GroupLevels = NewCT_GroupLevels()
				if _feff := d.DecodeElement(_ccc.GroupLevels, &_egg); _feff != nil {
					return _feff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccc.ExtLst = NewCT_ExtensionList()
				if _ege := d.DecodeElement(_ccc.ExtLst, &_egg); _ege != nil {
					return _ege
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _egg.Name)
				if _ccgc := d.Skip(); _ccgc != nil {
					return _ccgc
				}
			}
		case _b.EndElement:
			break _ffd
		case _b.CharData:
		}
	}
	return nil
}
func (_ebbefb *ST_FontScheme) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebbefb = 0
	case "\u006e\u006f\u006e\u0065":
		*_ebbefb = 1
	case "\u006d\u0061\u006ao\u0072":
		*_ebbefb = 2
	case "\u006d\u0069\u006eo\u0072":
		*_ebbefb = 3
	}
	return nil
}
func (_acgga *ST_DataValidationOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acgga = 0
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_acgga = 1
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_acgga = 2
	case "\u0065\u0071\u0075a\u006c":
		*_acgga = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_acgga = 4
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_acgga = 5
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_acgga = 6
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_acgga = 7
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_acgga = 8
	}
	return nil
}

// Validate validates the CT_CacheSource and its children
func (_aff *CT_CacheSource) Validate() error {
	return _aff.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065")
}
func (_fgga *CT_MdxTuple) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adfd := range start.Attr {
		if _adfd.Name.Local == "\u0063" {
			_fddgb, _aggba := _g.ParseUint(_adfd.Value, 10, 32)
			if _aggba != nil {
				return _aggba
			}
			_abeb := uint32(_fddgb)
			_fgga.CAttr = &_abeb
			continue
		}
		if _adfd.Name.Local == "\u0063\u0074" {
			_gbabf, _bgagf := _adfd.Value, error(nil)
			if _bgagf != nil {
				return _bgagf
			}
			_fgga.CtAttr = &_gbabf
			continue
		}
		if _adfd.Name.Local == "\u0073\u0069" {
			_bgaef, _gabde := _g.ParseUint(_adfd.Value, 10, 32)
			if _gabde != nil {
				return _gabde
			}
			_fgbcb := uint32(_bgaef)
			_fgga.SiAttr = &_fgbcb
			continue
		}
		if _adfd.Name.Local == "\u0066\u0069" {
			_bcbec, _dceac := _g.ParseUint(_adfd.Value, 10, 32)
			if _dceac != nil {
				return _dceac
			}
			_gdcad := uint32(_bcbec)
			_fgga.FiAttr = &_gdcad
			continue
		}
		if _adfd.Name.Local == "\u0062\u0063" {
			_eeffa, _bdfgc := _adfd.Value, error(nil)
			if _bdfgc != nil {
				return _bdfgc
			}
			_fgga.BcAttr = &_eeffa
			continue
		}
		if _adfd.Name.Local == "\u0066\u0063" {
			_aeecg, _ffece := _adfd.Value, error(nil)
			if _ffece != nil {
				return _ffece
			}
			_fgga.FcAttr = &_aeecg
			continue
		}
		if _adfd.Name.Local == "\u0069" {
			_acead, _dcafg := _g.ParseBool(_adfd.Value)
			if _dcafg != nil {
				return _dcafg
			}
			_fgga.IAttr = &_acead
			continue
		}
		if _adfd.Name.Local == "\u0075" {
			_acedd, _ecbac := _g.ParseBool(_adfd.Value)
			if _ecbac != nil {
				return _ecbac
			}
			_fgga.UAttr = &_acedd
			continue
		}
		if _adfd.Name.Local == "\u0073\u0074" {
			_dfgfd, _edca := _g.ParseBool(_adfd.Value)
			if _edca != nil {
				return _edca
			}
			_fgga.StAttr = &_dfgfd
			continue
		}
		if _adfd.Name.Local == "\u0062" {
			_dbcdc, _ggega := _g.ParseBool(_adfd.Value)
			if _ggega != nil {
				return _ggega
			}
			_fgga.BAttr = &_dbcdc
			continue
		}
	}
_beacf:
	for {
		_aecc, _dbaag := d.Token()
		if _dbaag != nil {
			return _dbaag
		}
		switch _cabdc := _aecc.(type) {
		case _b.StartElement:
			switch _cabdc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_agcgf := NewCT_MetadataStringIndex()
				if _aceadg := d.DecodeElement(_agcgf, &_cabdc); _aceadg != nil {
					return _aceadg
				}
				_fgga.N = append(_fgga.N, _agcgf)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065\u0020\u0025\u0076", _cabdc.Name)
				if _beaeg := d.Skip(); _beaeg != nil {
					return _beaeg
				}
			}
		case _b.EndElement:
			break _beacf
		case _b.CharData:
		}
	}
	return nil
}
func (_ggga *CT_ExternalRow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _ggga.RAttr)})
	e.EncodeToken(start)
	if _ggga.Cell != nil {
		_cged := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0065\u006c\u006c"}}
		for _, _cbad := range _ggga.Cell {
			e.EncodeElement(_cbad, _cged)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgcff ST_FileType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbbfc := _b.Attr{}
	_fbbfc.Name = name
	switch _cgcff {
	case ST_FileTypeUnset:
		_fbbfc.Value = ""
	case ST_FileTypeMac:
		_fbbfc.Value = "\u006d\u0061\u0063"
	case ST_FileTypeWin:
		_fbbfc.Value = "\u0077\u0069\u006e"
	case ST_FileTypeDos:
		_fbbfc.Value = "\u0064\u006f\u0073"
	case ST_FileTypeLin:
		_fbbfc.Value = "\u006c\u0069\u006e"
	case ST_FileTypeOther:
		_fbbfc.Value = "\u006f\u0074\u0068e\u0072"
	}
	return _fbbfc, nil
}
func (_gceef *CT_PivotHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgdac := range start.Attr {
		if _dgdac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egeab, _ddbf := _g.ParseUint(_dgdac.Value, 10, 32)
			if _ddbf != nil {
				return _ddbf
			}
			_gecbc := uint32(_egeab)
			_gceef.CountAttr = &_gecbc
			continue
		}
	}
_bbdbf:
	for {
		_bdbfg, _ecgcc := d.Token()
		if _ecgcc != nil {
			return _ecgcc
		}
		switch _bcddf := _bdbfg.(type) {
		case _b.StartElement:
			switch _bcddf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_cecce := NewCT_PivotHierarchy()
				if _adccb := d.DecodeElement(_cecce, &_bcddf); _adccb != nil {
					return _adccb
				}
				_gceef.PivotHierarchy = append(_gceef.PivotHierarchy, _cecce)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _bcddf.Name)
				if _gfcad := d.Skip(); _gfcad != nil {
					return _gfcad
				}
			}
		case _b.EndElement:
			break _bbdbf
		case _b.CharData:
		}
	}
	return nil
}
func (_fdebe *CT_DefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_agfec:
	for {
		_egafa, _edecf := d.Token()
		if _edecf != nil {
			return _edecf
		}
		switch _edee := _egafa.(type) {
		case _b.StartElement:
			switch _edee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_dbbcd := NewCT_DefinedName()
				if _dcebe := d.DecodeElement(_dbbcd, &_edee); _dcebe != nil {
					return _dcebe
				}
				_fdebe.DefinedName = append(_fdebe.DefinedName, _dbbcd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066i\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073\u0020\u0025\u0076", _edee.Name)
				if _cabe := d.Skip(); _cabe != nil {
					return _cabe
				}
			}
		case _b.EndElement:
			break _agfec
		case _b.CharData:
		}
	}
	return nil
}
func (_eegg *CT_Pane) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddcegb := range start.Attr {
		if _ddcegb.Name.Local == "\u0078\u0053\u0070\u006c\u0069\u0074" {
			_bedbec, _bbefc := _g.ParseFloat(_ddcegb.Value, 64)
			if _bbefc != nil {
				return _bbefc
			}
			_eegg.XSplitAttr = &_bedbec
			continue
		}
		if _ddcegb.Name.Local == "\u0079\u0053\u0070\u006c\u0069\u0074" {
			_bfbbbe, _gcdbe := _g.ParseFloat(_ddcegb.Value, 64)
			if _gcdbe != nil {
				return _gcdbe
			}
			_eegg.YSplitAttr = &_bfbbbe
			continue
		}
		if _ddcegb.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_cabfd, _cacbfe := _ddcegb.Value, error(nil)
			if _cacbfe != nil {
				return _cacbfe
			}
			_eegg.TopLeftCellAttr = &_cabfd
			continue
		}
		if _ddcegb.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065" {
			_eegg.ActivePaneAttr.UnmarshalXMLAttr(_ddcegb)
			continue
		}
		if _ddcegb.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_eegg.StateAttr.UnmarshalXMLAttr(_ddcegb)
			continue
		}
	}
	for {
		_beagcf, _ccbbcg := d.Token()
		if _ccbbcg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u006e\u0065\u003a\u0020\u0025\u0073", _ccbbcg)
		}
		if _gfdea, _adag := _beagcf.(_b.EndElement); _adag && _gfdea.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_FontSize() *CT_FontSize { _befec := &CT_FontSize{}; return _befec }

// ValidateWithPath validates the CT_Consolidation and its children, prefixing error messages with path
func (_cdbd *CT_Consolidation) ValidateWithPath(path string) error {
	if _cdbd.Pages != nil {
		if _edbc := _cdbd.Pages.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0073"); _edbc != nil {
			return _edbc
		}
	}
	if _eebg := _cdbd.RangeSets.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"); _eebg != nil {
		return _eebg
	}
	return nil
}
func (_cbgfa ST_Qualifier) Validate() error      { return _cbgfa.ValidateWithPath("") }
func NewCT_DataValidations() *CT_DataValidations { _bccda := &CT_DataValidations{}; return _bccda }
func NewWorkbook() *Workbook {
	_befdac := &Workbook{}
	_befdac.CT_Workbook = *NewCT_Workbook()
	return _befdac
}
func (_fgdaa ST_ShowDataAs) ValidateWithPath(path string) error {
	switch _fgdaa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgdaa))
	}
	return nil
}

// ValidateWithPath validates the CalcChain and its children, prefixing error messages with path
func (_afacgc *CalcChain) ValidateWithPath(path string) error {
	if _cccca := _afacgc.CT_CalcChain.ValidateWithPath(path); _cccca != nil {
		return _cccca
	}
	return nil
}
func (_daba *CT_Fonts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdffd := range start.Attr {
		if _gdffd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbgfc, _faafa := _g.ParseUint(_gdffd.Value, 10, 32)
			if _faafa != nil {
				return _faafa
			}
			_gacee := uint32(_gbgfc)
			_daba.CountAttr = &_gacee
			continue
		}
	}
_ffcd:
	for {
		_bfdgc, _fccgg := d.Token()
		if _fccgg != nil {
			return _fccgg
		}
		switch _afbcf := _bfdgc.(type) {
		case _b.StartElement:
			switch _afbcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_dbbef := NewCT_Font()
				if _gddef := d.DecodeElement(_dbbef, &_afbcf); _gddef != nil {
					return _gddef
				}
				_daba.Font = append(_daba.Font, _dbbef)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073\u0020\u0025\u0076", _afbcf.Name)
				if _ddffd := d.Skip(); _ddffd != nil {
					return _ddffd
				}
			}
		case _b.EndElement:
			break _ffcd
		case _b.CharData:
		}
	}
	return nil
}
func (_dgece ST_GroupBy) String() string {
	switch _dgece {
	case 0:
		return ""
	case 1:
		return "\u0072\u0061\u006eg\u0065"
	case 2:
		return "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case 3:
		return "\u006di\u006e\u0075\u0074\u0065\u0073"
	case 4:
		return "\u0068\u006f\u0075r\u0073"
	case 5:
		return "\u0064\u0061\u0079\u0073"
	case 6:
		return "\u006d\u006f\u006e\u0074\u0068\u0073"
	case 7:
		return "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case 8:
		return "\u0079\u0065\u0061r\u0073"
	}
	return ""
}
func (_abfgbe ST_DataValidationType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abfgbe.String(), start)
}

const (
	ST_PaneStateUnset       ST_PaneState = 0
	ST_PaneStateSplit       ST_PaneState = 1
	ST_PaneStateFrozen      ST_PaneState = 2
	ST_PaneStateFrozenSplit ST_PaneState = 3
)

func (_dcgefd ST_ConditionalFormattingOperator) ValidateWithPath(path string) error {
	switch _dcgefd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dcgefd))
	}
	return nil
}

type ST_ShowDataAs byte

func (_ffdbgc *ST_DataConsolidateFunction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_debcaa, _daaff := d.Token()
	if _daaff != nil {
		return _daaff
	}
	if _cdbag, _aaceaa := _debcaa.(_b.EndElement); _aaceaa && _cdbag.Name == start.Name {
		*_ffdbgc = 1
		return nil
	}
	if _ecgdfc, _fbacd := _debcaa.(_b.CharData); !_fbacd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _debcaa)
	} else {
		switch string(_ecgdfc) {
		case "":
			*_ffdbgc = 0
		case "\u0061v\u0065\u0072\u0061\u0067\u0065":
			*_ffdbgc = 1
		case "\u0063\u006f\u0075n\u0074":
			*_ffdbgc = 2
		case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
			*_ffdbgc = 3
		case "\u006d\u0061\u0078":
			*_ffdbgc = 4
		case "\u006d\u0069\u006e":
			*_ffdbgc = 5
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_ffdbgc = 6
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_ffdbgc = 7
		case "\u0073t\u0064\u0044\u0065\u0076\u0070":
			*_ffdbgc = 8
		case "\u0073\u0075\u006d":
			*_ffdbgc = 9
		case "\u0076\u0061\u0072":
			*_ffdbgc = 10
		case "\u0076\u0061\u0072\u0070":
			*_ffdbgc = 11
		}
	}
	_debcaa, _daaff = d.Token()
	if _daaff != nil {
		return _daaff
	}
	if _bbbag, _dfggb := _debcaa.(_b.EndElement); _dfggb && _bbbag.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _debcaa)
}
func (_badedg ST_DynamicFilterType) ValidateWithPath(path string) error {
	switch _badedg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_badedg))
	}
	return nil
}

type CT_OutlinePr struct {

	// Apply Styles in Outline
	ApplyStylesAttr *bool

	// Summary Below
	SummaryBelowAttr *bool

	// Summary Right
	SummaryRightAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool
}

func (_agdd *CT_CommentPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agdd.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.LockedAttr))})
	}
	if _agdd.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.DefaultSizeAttr))})
	}
	if _agdd.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.PrintAttr))})
	}
	if _agdd.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.DisabledAttr))})
	}
	if _agdd.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.AutoFillAttr))})
	}
	if _agdd.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.AutoLineAttr))})
	}
	if _agdd.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_agdd.AltTextAttr)})
	}
	if _agdd.TextHAlignAttr != ST_TextHAlignUnset {
		_becg, _begad := _agdd.TextHAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e"})
		if _begad != nil {
			return _begad
		}
		start.Attr = append(start.Attr, _becg)
	}
	if _agdd.TextVAlignAttr != ST_TextVAlignUnset {
		_dedgd, _aadgd := _agdd.TextVAlignAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e"})
		if _aadgd != nil {
			return _aadgd
		}
		start.Attr = append(start.Attr, _dedgd)
	}
	if _agdd.LockTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.LockTextAttr))})
	}
	if _agdd.JustLastXAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.JustLastXAttr))})
	}
	if _agdd.AutoScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdd.AutoScaleAttr))})
	}
	e.EncodeToken(start)
	_cefdda := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_agdd.Anchor, _cefdda)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cdbgg ST_PivotAreaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdbgg.String(), start)
}

// ValidateWithPath validates the CT_MetadataStringIndex and its children, prefixing error messages with path
func (_dggbc *CT_MetadataStringIndex) ValidateWithPath(path string) error { return nil }
func (_dae *CT_CacheFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbda := range start.Attr {
		if _cbda.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcf, _fegf := _g.ParseUint(_cbda.Value, 10, 32)
			if _fegf != nil {
				return _fegf
			}
			_cbba := uint32(_bcf)
			_dae.CountAttr = &_cbba
			continue
		}
	}
_gcg:
	for {
		_caa, _acb := d.Token()
		if _acb != nil {
			return _acb
		}
		switch _gab := _caa.(type) {
		case _b.StartElement:
			switch _gab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}:
				_acda := NewCT_CacheField()
				if _bcg := d.DecodeElement(_acda, &_gab); _bcg != nil {
					return _bcg
				}
				_dae.CacheField = append(_dae.CacheField, _acda)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _gab.Name)
				if _bca := d.Skip(); _bca != nil {
					return _bca
				}
			}
		case _b.EndElement:
			break _gcg
		case _b.CharData:
		}
	}
	return nil
}
func (_cfcae ST_PhoneticType) ValidateWithPath(path string) error {
	switch _cfcae {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cfcae))
	}
	return nil
}
func (_gceba *CT_Stylesheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aaeeea:
	for {
		_fbaed, _edbcf := d.Token()
		if _edbcf != nil {
			return _edbcf
		}
		switch _fcfcg := _fbaed.(type) {
		case _b.StartElement:
			switch _fcfcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eu\u006d\u0046\u006d\u0074\u0073"}:
				_gceba.NumFmts = NewCT_NumFmts()
				if _facbd := d.DecodeElement(_gceba.NumFmts, &_fcfcg); _facbd != nil {
					return _facbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006et\u0073"}:
				_gceba.Fonts = NewCT_Fonts()
				if _gbfef := d.DecodeElement(_gceba.Fonts, &_fcfcg); _gbfef != nil {
					return _gbfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0073"}:
				_gceba.Fills = NewCT_Fills()
				if _cedccf := d.DecodeElement(_gceba.Fills, &_fcfcg); _cedccf != nil {
					return _cedccf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062o\u0072\u0064\u0065\u0072\u0073"}:
				_gceba.Borders = NewCT_Borders()
				if _fbbbfe := d.DecodeElement(_gceba.Borders, &_fcfcg); _fbbbfe != nil {
					return _fbbbfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"}:
				_gceba.CellStyleXfs = NewCT_CellStyleXfs()
				if _aebfa := d.DecodeElement(_gceba.CellStyleXfs, &_fcfcg); _aebfa != nil {
					return _aebfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0058\u0066\u0073"}:
				_gceba.CellXfs = NewCT_CellXfs()
				if _cbada := d.DecodeElement(_gceba.CellXfs, &_fcfcg); _cbada != nil {
					return _cbada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gceba.CellStyles = NewCT_CellStyles()
				if _cegcb := d.DecodeElement(_gceba.CellStyles, &_fcfcg); _cegcb != nil {
					return _cegcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066\u0073"}:
				_gceba.Dxfs = NewCT_Dxfs()
				if _eedbd := d.DecodeElement(_gceba.Dxfs, &_fcfcg); _eedbd != nil {
					return _eedbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"}:
				_gceba.TableStyles = NewCT_TableStyles()
				if _ccdbb := d.DecodeElement(_gceba.TableStyles, &_fcfcg); _ccdbb != nil {
					return _ccdbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0073"}:
				_gceba.Colors = NewCT_Colors()
				if _ebabe := d.DecodeElement(_gceba.Colors, &_fcfcg); _ebabe != nil {
					return _ebabe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gceba.ExtLst = NewCT_ExtensionList()
				if _dcdca := d.DecodeElement(_gceba.ExtLst, &_fcfcg); _dcdca != nil {
					return _dcdca
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053t\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _fcfcg.Name)
				if _ddece := d.Skip(); _ddece != nil {
					return _ddece
				}
			}
		case _b.EndElement:
			break _aaeeea
		case _b.CharData:
		}
	}
	return nil
}
func (_ffefc *CT_CellWatch) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _ffefc.RAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Worksheet and its children
func (_fbgccc *Worksheet) Validate() error {
	return _fbgccc.ValidateWithPath("\u0057o\u0072\u006b\u0073\u0068\u0065\u0065t")
}

// Validate validates the CT_SheetProtection and its children
func (_bbbead *CT_SheetProtection) Validate() error {
	return _bbbead.ValidateWithPath("\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e")
}
func (_ddccd ST_DynamicFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acfeea := _b.Attr{}
	_acfeea.Name = name
	switch _ddccd {
	case ST_DynamicFilterTypeUnset:
		_acfeea.Value = ""
	case ST_DynamicFilterTypeNull:
		_acfeea.Value = "\u006e\u0075\u006c\u006c"
	case ST_DynamicFilterTypeAboveAverage:
		_acfeea.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeBelowAverage:
		_acfeea.Value = "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case ST_DynamicFilterTypeTomorrow:
		_acfeea.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_DynamicFilterTypeToday:
		_acfeea.Value = "\u0074\u006f\u0064a\u0079"
	case ST_DynamicFilterTypeYesterday:
		_acfeea.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_DynamicFilterTypeNextWeek:
		_acfeea.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeThisWeek:
		_acfeea.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeLastWeek:
		_acfeea.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_DynamicFilterTypeNextMonth:
		_acfeea.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeThisMonth:
		_acfeea.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeLastMonth:
		_acfeea.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_DynamicFilterTypeNextQuarter:
		_acfeea.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeThisQuarter:
		_acfeea.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeLastQuarter:
		_acfeea.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_DynamicFilterTypeNextYear:
		_acfeea.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeThisYear:
		_acfeea.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeLastYear:
		_acfeea.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_DynamicFilterTypeYearToDate:
		_acfeea.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_DynamicFilterTypeQ1:
		_acfeea.Value = "\u0051\u0031"
	case ST_DynamicFilterTypeQ2:
		_acfeea.Value = "\u0051\u0032"
	case ST_DynamicFilterTypeQ3:
		_acfeea.Value = "\u0051\u0033"
	case ST_DynamicFilterTypeQ4:
		_acfeea.Value = "\u0051\u0034"
	case ST_DynamicFilterTypeM1:
		_acfeea.Value = "\u004d\u0031"
	case ST_DynamicFilterTypeM2:
		_acfeea.Value = "\u004d\u0032"
	case ST_DynamicFilterTypeM3:
		_acfeea.Value = "\u004d\u0033"
	case ST_DynamicFilterTypeM4:
		_acfeea.Value = "\u004d\u0034"
	case ST_DynamicFilterTypeM5:
		_acfeea.Value = "\u004d\u0035"
	case ST_DynamicFilterTypeM6:
		_acfeea.Value = "\u004d\u0036"
	case ST_DynamicFilterTypeM7:
		_acfeea.Value = "\u004d\u0037"
	case ST_DynamicFilterTypeM8:
		_acfeea.Value = "\u004d\u0038"
	case ST_DynamicFilterTypeM9:
		_acfeea.Value = "\u004d\u0039"
	case ST_DynamicFilterTypeM10:
		_acfeea.Value = "\u004d\u0031\u0030"
	case ST_DynamicFilterTypeM11:
		_acfeea.Value = "\u004d\u0031\u0031"
	case ST_DynamicFilterTypeM12:
		_acfeea.Value = "\u004d\u0031\u0032"
	}
	return _acfeea, nil
}

type CT_GroupLevels struct {

	// Grouping Level Count
	CountAttr *uint32

	// OLAP Grouping Levels
	GroupLevel []*CT_GroupLevel
}

func (_cbfbac *ST_PivotFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gbgba, _cacaag := d.Token()
	if _cacaag != nil {
		return _cacaag
	}
	if _aedgdg, _faaed := _gbgba.(_b.EndElement); _faaed && _aedgdg.Name == start.Name {
		*_cbfbac = 1
		return nil
	}
	if _acded, _fgbga := _gbgba.(_b.CharData); !_fgbga {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbgba)
	} else {
		switch string(_acded) {
		case "":
			*_cbfbac = 0
		case "\u0075n\u006b\u006e\u006f\u0077\u006e":
			*_cbfbac = 1
		case "\u0063\u006f\u0075n\u0074":
			*_cbfbac = 2
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_cbfbac = 3
		case "\u0073\u0075\u006d":
			*_cbfbac = 4
		case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 5
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 6
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
			*_cbfbac = 7
		case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
			*_cbfbac = 8
		case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_cbfbac = 9
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
			*_cbfbac = 10
		case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_cbfbac = 11
		case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
			*_cbfbac = 12
		case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
			*_cbfbac = 13
		case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
			*_cbfbac = 14
		case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_cbfbac = 15
		case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
			*_cbfbac = 16
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_cbfbac = 17
		case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_cbfbac = 18
		case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 19
		case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 20
		case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_cbfbac = 21
		case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 22
		case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_cbfbac = 23
		case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_cbfbac = 24
		case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_cbfbac = 25
		case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_cbfbac = 26
		case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
			*_cbfbac = 27
		case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_cbfbac = 28
		case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
			*_cbfbac = 29
		case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_cbfbac = 30
		case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
			*_cbfbac = 31
		case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
			*_cbfbac = 32
		case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_cbfbac = 33
		case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
			*_cbfbac = 34
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_cbfbac = 35
		case "\u0074\u006f\u0064a\u0079":
			*_cbfbac = 36
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_cbfbac = 37
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_cbfbac = 38
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_cbfbac = 39
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_cbfbac = 40
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_cbfbac = 41
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_cbfbac = 42
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_cbfbac = 43
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_cbfbac = 44
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_cbfbac = 45
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_cbfbac = 46
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_cbfbac = 47
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_cbfbac = 48
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_cbfbac = 49
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_cbfbac = 50
		case "\u0051\u0031":
			*_cbfbac = 51
		case "\u0051\u0032":
			*_cbfbac = 52
		case "\u0051\u0033":
			*_cbfbac = 53
		case "\u0051\u0034":
			*_cbfbac = 54
		case "\u004d\u0031":
			*_cbfbac = 55
		case "\u004d\u0032":
			*_cbfbac = 56
		case "\u004d\u0033":
			*_cbfbac = 57
		case "\u004d\u0034":
			*_cbfbac = 58
		case "\u004d\u0035":
			*_cbfbac = 59
		case "\u004d\u0036":
			*_cbfbac = 60
		case "\u004d\u0037":
			*_cbfbac = 61
		case "\u004d\u0038":
			*_cbfbac = 62
		case "\u004d\u0039":
			*_cbfbac = 63
		case "\u004d\u0031\u0030":
			*_cbfbac = 64
		case "\u004d\u0031\u0031":
			*_cbfbac = 65
		case "\u004d\u0031\u0032":
			*_cbfbac = 66
		}
	}
	_gbgba, _cacaag = d.Token()
	if _cacaag != nil {
		return _cacaag
	}
	if _fgebfg, _cgadd := _gbgba.(_b.EndElement); _cgadd && _fgebfg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbgba)
}
func (_cagc *CT_CellXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cagc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cagc.CountAttr)})
	}
	e.EncodeToken(start)
	_bfbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _cacf := range _cagc.Xf {
		e.EncodeElement(_cacf, _bfbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotFilter and its children
func (_cbdag *CT_PivotFilter) Validate() error {
	return _cbdag.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072")
}
func (_ccce *CT_DataRefs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ccce.CountAttr)})
	}
	e.EncodeToken(start)
	if _ccce.DataRef != nil {
		_dafgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066"}}
		for _, _ebab := range _ccce.DataRef {
			e.EncodeElement(_ebab, _dafgb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupItems() *CT_GroupItems { _dbdd := &CT_GroupItems{}; return _dbdd }
func (_ebgaec *CT_QueryTable) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgdb := range start.Attr {
		if _cgdb.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068" {
			_aaeea, _cfecg := _g.ParseBool(_cgdb.Value)
			if _cfecg != nil {
				return _cfecg
			}
			_ebgaec.AdjustColumnWidthAttr = &_aaeea
			continue
		}
		if _cgdb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_facd, _ffeec := _cgdb.Value, error(nil)
			if _ffeec != nil {
				return _ffeec
			}
			_ebgaec.NameAttr = _facd
			continue
		}
		if _cgdb.Name.Local == "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065" {
			_gccdgb, _gdggdf := _g.ParseBool(_cgdb.Value)
			if _gdggdf != nil {
				return _gdggdf
			}
			_ebgaec.IntermediateAttr = &_gccdgb
			continue
		}
		if _cgdb.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_gfaba, _befea := _g.ParseBool(_cgdb.Value)
			if _befea != nil {
				return _befea
			}
			_ebgaec.RowNumbersAttr = &_gfaba
			continue
		}
		if _cgdb.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_ccfcb, _gecf := _g.ParseUint(_cgdb.Value, 10, 32)
			if _gecf != nil {
				return _gecf
			}
			_ebgaec.ConnectionIdAttr = uint32(_ccfcb)
			continue
		}
		if _cgdb.Name.Local == "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_cacfd, _ecdcd := _g.ParseBool(_cgdb.Value)
			if _ecdcd != nil {
				return _ecdcd
			}
			_ebgaec.BackgroundRefreshAttr = &_cacfd
			continue
		}
		if _cgdb.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_acdge, _ceaab := _g.ParseBool(_cgdb.Value)
			if _ceaab != nil {
				return _ceaab
			}
			_ebgaec.RefreshOnLoadAttr = &_acdge
			continue
		}
		if _cgdb.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_cdbcg, _cadgcb := _g.ParseBool(_cgdb.Value)
			if _cadgcb != nil {
				return _cadgcb
			}
			_ebgaec.FillFormulasAttr = &_cdbcg
			continue
		}
		if _cgdb.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_dbbgba, _fbafde := _g.ParseBool(_cgdb.Value)
			if _fbafde != nil {
				return _fbafde
			}
			_ebgaec.ApplyNumberFormatsAttr = &_dbbgba
			continue
		}
		if _cgdb.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_efbbc, _bdbbg := _g.ParseBool(_cgdb.Value)
			if _bdbbg != nil {
				return _bdbbg
			}
			_ebgaec.ApplyFontFormatsAttr = &_efbbc
			continue
		}
		if _cgdb.Name.Local == "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068" {
			_fgbb, _bcbab := _g.ParseBool(_cgdb.Value)
			if _bcbab != nil {
				return _bcbab
			}
			_ebgaec.FirstBackgroundRefreshAttr = &_fgbb
			continue
		}
		if _cgdb.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_gdebfa, _bagde := _g.ParseUint(_cgdb.Value, 10, 32)
			if _bagde != nil {
				return _bagde
			}
			_ecgde := uint32(_gdebfa)
			_ebgaec.AutoFormatIdAttr = &_ecgde
			continue
		}
		if _cgdb.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_deacg, _caaece := _g.ParseBool(_cgdb.Value)
			if _caaece != nil {
				return _caaece
			}
			_ebgaec.ApplyAlignmentFormatsAttr = &_deacg
			continue
		}
		if _cgdb.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068" {
			_gfgag, _edbab := _g.ParseBool(_cgdb.Value)
			if _edbab != nil {
				return _edbab
			}
			_ebgaec.DisableRefreshAttr = &_gfgag
			continue
		}
		if _cgdb.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_aedcf, _gddga := _g.ParseBool(_cgdb.Value)
			if _gddga != nil {
				return _gddga
			}
			_ebgaec.ApplyBorderFormatsAttr = &_aedcf
			continue
		}
		if _cgdb.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_dbbcgg, _eeeef := _g.ParseBool(_cgdb.Value)
			if _eeeef != nil {
				return _eeeef
			}
			_ebgaec.PreserveFormattingAttr = &_dbbcgg
			continue
		}
		if _cgdb.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cbcdbf, _cccga := _g.ParseBool(_cgdb.Value)
			if _cccga != nil {
				return _cccga
			}
			_ebgaec.ApplyPatternFormatsAttr = &_cbcdbf
			continue
		}
		if _cgdb.Name.Local == "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065" {
			_ebgaec.GrowShrinkTypeAttr.UnmarshalXMLAttr(_cgdb)
			continue
		}
		if _cgdb.Name.Local == "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074" {
			_dgcce, _cfaff := _g.ParseBool(_cgdb.Value)
			if _cfaff != nil {
				return _cfaff
			}
			_ebgaec.DisableEditAttr = &_dgcce
			continue
		}
		if _cgdb.Name.Local == "\u0068e\u0061\u0064\u0065\u0072\u0073" {
			_ecgbgb, _febag := _g.ParseBool(_cgdb.Value)
			if _febag != nil {
				return _febag
			}
			_ebgaec.HeadersAttr = &_ecgbgb
			continue
		}
		if _cgdb.Name.Local == "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065" {
			_cefbb, _fdccd := _g.ParseBool(_cgdb.Value)
			if _fdccd != nil {
				return _fdccd
			}
			_ebgaec.RemoveDataOnSaveAttr = &_cefbb
			continue
		}
		if _cgdb.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_ebfgfd, _bbefcd := _g.ParseBool(_cgdb.Value)
			if _bbefcd != nil {
				return _bbefcd
			}
			_ebgaec.ApplyWidthHeightFormatsAttr = &_ebfgfd
			continue
		}
	}
_baefa:
	for {
		_beecd, _bfaaf := d.Token()
		if _bfaaf != nil {
			return _bfaaf
		}
		switch _gebed := _beecd.(type) {
		case _b.StartElement:
			switch _gebed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}:
				_ebgaec.QueryTableRefresh = NewCT_QueryTableRefresh()
				if _bcbf := d.DecodeElement(_ebgaec.QueryTableRefresh, &_gebed); _bcbf != nil {
					return _bcbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebgaec.ExtLst = NewCT_ExtensionList()
				if _cdfcbb := d.DecodeElement(_ebgaec.ExtLst, &_gebed); _cdfcbb != nil {
					return _cdfcbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051u\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065 \u0025\u0076", _gebed.Name)
				if _efcfcd := d.Skip(); _efcfcd != nil {
					return _efcfcd
				}
			}
		case _b.EndElement:
			break _baefa
		case _b.CharData:
		}
	}
	return nil
}
func (_efeba *CT_QueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _efeba.IdAttr)})
	if _efeba.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_efeba.NameAttr)})
	}
	if _efeba.DataBoundAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efeba.DataBoundAttr))})
	}
	if _efeba.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efeba.RowNumbersAttr))})
	}
	if _efeba.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efeba.FillFormulasAttr))})
	}
	if _efeba.ClippedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063l\u0069\u0070\u0070\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efeba.ClippedAttr))})
	}
	if _efeba.TableColumnIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_efeba.TableColumnIdAttr)})
	}
	e.EncodeToken(start)
	if _efeba.ExtLst != nil {
		_fdbgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efeba.ExtLst, _fdbgg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_Objects byte

// Validate validates the CT_ColorScale and its children
func (_gddcb *CT_ColorScale) Validate() error {
	return _gddcb.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065")
}

type CT_MdxTuple struct {

	// Member Index Count
	CAttr *uint32

	// Server Formatting Culture Currency
	CtAttr *string

	// Server Formatting String Index
	SiAttr *uint32

	// Server Formatting Built-In Number Format Index
	FiAttr *uint32

	// Server Formatting Background Color
	BcAttr *string

	// Server Formatting Foreground Color
	FcAttr *string

	// Server Formatting Italic Font
	IAttr *bool

	// Server Formatting Underline Font
	UAttr *bool

	// Server Formatting Strikethrough Font
	StAttr *bool

	// Server Formatting Bold Font
	BAttr *bool

	// Member Unique Name Index
	N []*CT_MetadataStringIndex
}

func (_cdbgf ST_TableType) ValidateWithPath(path string) error {
	switch _cdbgf {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdbgf))
	}
	return nil
}
func (_bedbe *CT_Pages) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bddeb := range start.Attr {
		if _bddeb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_egaeb, _aaddg := _g.ParseUint(_bddeb.Value, 10, 32)
			if _aaddg != nil {
				return _aaddg
			}
			_badf := uint32(_egaeb)
			_bedbe.CountAttr = &_badf
			continue
		}
	}
_cfdgcd:
	for {
		_dcgcfd, _ffdga := d.Token()
		if _ffdga != nil {
			return _ffdga
		}
		switch _afffe := _dcgcfd.(type) {
		case _b.StartElement:
			switch _afffe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065"}:
				_bbgfda := NewCT_PCDSCPage()
				if _dged := d.DecodeElement(_bbgfda, &_afffe); _dged != nil {
					return _dged
				}
				_bedbe.Page = append(_bedbe.Page, _bbgfda)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073\u0020\u0025\u0076", _afffe.Name)
				if _aagdc := d.Skip(); _aagdc != nil {
					return _aagdc
				}
			}
		case _b.EndElement:
			break _cfdgcd
		case _b.CharData:
		}
	}
	return nil
}
func (_cabd *CT_ColHierarchiesUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cabd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cabd.CountAttr)})
	}
	e.EncodeToken(start)
	_aaggbd := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061r\u0063\u0068\u0079\u0055sa\u0067\u0065"}}
	for _, _dbaf := range _cabd.ColHierarchyUsage {
		e.EncodeElement(_dbaf, _aaggbd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetDataSet and its children, prefixing error messages with path
func (_ceee *CT_ExternalSheetDataSet) ValidateWithPath(path string) error {
	for _dgbcb, _eeaff := range _ceee.SheetData {
		if _bgbf := _eeaff.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0044\u0061\u0074\u0061\u005b\u0025\u0064\u005d", path, _dgbcb)); _bgbf != nil {
			return _bgbf
		}
	}
	return nil
}

type CT_ExternalLink struct {
	Choice *CT_ExternalLinkChoice
	ExtLst *CT_ExtensionList
}

func NewCT_QueryTableDeletedFields() *CT_QueryTableDeletedFields {
	_abega := &CT_QueryTableDeletedFields{}
	return _abega
}
func (_agdcg *Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agdcg.CT_Dialogsheet = *NewCT_Dialogsheet()
_ddfdcb:
	for {
		_bfaae, _ffgaa := d.Token()
		if _ffgaa != nil {
			return _ffgaa
		}
		switch _fecdf := _bfaae.(type) {
		case _b.StartElement:
			switch _fecdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_agdcg.SheetPr = NewCT_SheetPr()
				if _dffaa := d.DecodeElement(_agdcg.SheetPr, &_fecdf); _dffaa != nil {
					return _dffaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_agdcg.SheetViews = NewCT_SheetViews()
				if _bdffc := d.DecodeElement(_agdcg.SheetViews, &_fecdf); _bdffc != nil {
					return _bdffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_agdcg.SheetFormatPr = NewCT_SheetFormatPr()
				if _cfdfb := d.DecodeElement(_agdcg.SheetFormatPr, &_fecdf); _cfdfb != nil {
					return _cfdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_agdcg.SheetProtection = NewCT_SheetProtection()
				if _bbdfb := d.DecodeElement(_agdcg.SheetProtection, &_fecdf); _bbdfb != nil {
					return _bbdfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_agdcg.CustomSheetViews = NewCT_CustomSheetViews()
				if _bebbc := d.DecodeElement(_agdcg.CustomSheetViews, &_fecdf); _bebbc != nil {
					return _bebbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_agdcg.PrintOptions = NewCT_PrintOptions()
				if _ggdeec := d.DecodeElement(_agdcg.PrintOptions, &_fecdf); _ggdeec != nil {
					return _ggdeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_agdcg.PageMargins = NewCT_PageMargins()
				if _gabcga := d.DecodeElement(_agdcg.PageMargins, &_fecdf); _gabcga != nil {
					return _gabcga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_agdcg.PageSetup = NewCT_PageSetup()
				if _efcdc := d.DecodeElement(_agdcg.PageSetup, &_fecdf); _efcdc != nil {
					return _efcdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_agdcg.HeaderFooter = NewCT_HeaderFooter()
				if _edaeb := d.DecodeElement(_agdcg.HeaderFooter, &_fecdf); _edaeb != nil {
					return _edaeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_agdcg.Drawing = NewCT_Drawing()
				if _fdaag := d.DecodeElement(_agdcg.Drawing, &_fecdf); _fdaag != nil {
					return _fdaag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_agdcg.LegacyDrawing = NewCT_LegacyDrawing()
				if _bfaga := d.DecodeElement(_agdcg.LegacyDrawing, &_fecdf); _bfaga != nil {
					return _bfaga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_agdcg.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _cbbbd := d.DecodeElement(_agdcg.LegacyDrawingHF, &_fecdf); _cbbbd != nil {
					return _cbbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_agdcg.DrawingHF = NewCT_DrawingHF()
				if _ebbefd := d.DecodeElement(_agdcg.DrawingHF, &_fecdf); _ebbefd != nil {
					return _ebbefd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_agdcg.OleObjects = NewCT_OleObjects()
				if _efgde := d.DecodeElement(_agdcg.OleObjects, &_fecdf); _efgde != nil {
					return _efgde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_agdcg.Controls = NewCT_Controls()
				if _ecebbf := d.DecodeElement(_agdcg.Controls, &_fecdf); _ecebbf != nil {
					return _ecebbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agdcg.ExtLst = NewCT_ExtensionList()
				if _ddgad := d.DecodeElement(_agdcg.ExtLst, &_fecdf); _ddgad != nil {
					return _ddgad
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0044\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _fecdf.Name)
				if _dbgef := d.Skip(); _dbgef != nil {
					return _dbgef
				}
			}
		case _b.EndElement:
			break _ddfdcb
		case _b.CharData:
		}
	}
	return nil
}
func (_ffaeag *VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073"
	return _ffaeag.CT_VolTypes.MarshalXML(e, start)
}
func (_dggbce ST_TextHAlign) ValidateWithPath(path string) error {
	switch _dggbce {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dggbce))
	}
	return nil
}
func (_aabag ST_DataValidationImeMode) Validate() error { return _aabag.ValidateWithPath("") }

type CT_Scenario struct {

	// Scenario Name
	NameAttr string

	// Scenario Locked
	LockedAttr *bool

	// Hidden Scenario
	HiddenAttr *bool

	// Changing Cell Count
	CountAttr *uint32

	// User Name
	UserAttr *string

	// Scenario Comment
	CommentAttr *string

	// Input Cells
	InputCells []*CT_InputCells
}

func (_edfgf *CT_OutlinePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfffcf := range start.Attr {
		if _dfffcf.Name.Local == "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073" {
			_bgcba, _dbead := _g.ParseBool(_dfffcf.Value)
			if _dbead != nil {
				return _dbead
			}
			_edfgf.ApplyStylesAttr = &_bgcba
			continue
		}
		if _dfffcf.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077" {
			_aedd, _bccdb := _g.ParseBool(_dfffcf.Value)
			if _bccdb != nil {
				return _bccdb
			}
			_edfgf.SummaryBelowAttr = &_aedd
			continue
		}
		if _dfffcf.Name.Local == "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074" {
			_acfee, _gbcac := _g.ParseBool(_dfffcf.Value)
			if _gbcac != nil {
				return _gbcac
			}
			_edfgf.SummaryRightAttr = &_acfee
			continue
		}
		if _dfffcf.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_abag, _cgebg := _g.ParseBool(_dfffcf.Value)
			if _cgebg != nil {
				return _cgebg
			}
			_edfgf.ShowOutlineSymbolsAttr = &_abag
			continue
		}
	}
	for {
		_ceddcd, _bacea := d.Token()
		if _bacea != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004f\u0075t\u006c\u0069\u006e\u0065\u0050\u0072\u003a\u0020\u0025\u0073", _bacea)
		}
		if _ddgaf, _cfgge := _ceddcd.(_b.EndElement); _cfgge && _ddgaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gfgbfb *ST_SortMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfgbfb = 0
	case "\u0073\u0074\u0072\u006f\u006b\u0065":
		*_gfgbfb = 1
	case "\u0070\u0069\u006e\u0059\u0069\u006e":
		*_gfgbfb = 2
	case "\u006e\u006f\u006e\u0065":
		*_gfgbfb = 3
	}
	return nil
}
func (_eged *CT_Dxf) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _eged.Font != nil {
		_dfcb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_eged.Font, _dfcb)
	}
	if _eged.NumFmt != nil {
		_dbcdd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		e.EncodeElement(_eged.NumFmt, _dbcdd)
	}
	if _eged.Fill != nil {
		_gggbb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_eged.Fill, _gggbb)
	}
	if _eged.Alignment != nil {
		_eedff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003aa\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"}}
		e.EncodeElement(_eged.Alignment, _eedff)
	}
	if _eged.Border != nil {
		_gdff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0072\u0064\u0065r"}}
		e.EncodeElement(_eged.Border, _gdff)
	}
	if _eged.Protection != nil {
		_gega := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_eged.Protection, _gega)
	}
	if _eged.ExtLst != nil {
		_fcegd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_eged.ExtLst, _fcegd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewTable() *Table { _cbfa := &Table{}; _cbfa.CT_Table = *NewCT_Table(); return _cbfa }

// ValidateWithPath validates the CT_TableColumn and its children, prefixing error messages with path
func (_dbddda *CT_TableColumn) ValidateWithPath(path string) error {
	if _eafgfd := _dbddda.TotalsRowFunctionAttr.ValidateWithPath(path + "\u002f\u0054\u006f\u0074al\u0073\u0052\u006f\u0077\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0041\u0074t\u0072"); _eafgfd != nil {
		return _eafgfd
	}
	if _dbddda.CalculatedColumnFormula != nil {
		if _eeddd := _dbddda.CalculatedColumnFormula.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0043\u006fl\u0075\u006d\u006e\u0046\u006f\u0072\u006d\u0075\u006c\u0061"); _eeddd != nil {
			return _eeddd
		}
	}
	if _dbddda.TotalsRowFormula != nil {
		if _ecegf := _dbddda.TotalsRowFormula.ValidateWithPath(path + "\u002f\u0054\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006fr\u006d\u0075\u006c\u0061"); _ecegf != nil {
			return _ecegf
		}
	}
	if _dbddda.XmlColumnPr != nil {
		if _baggg := _dbddda.XmlColumnPr.ValidateWithPath(path + "\u002f\u0058\u006dl\u0043\u006f\u006c\u0075\u006d\u006e\u0050\u0072"); _baggg != nil {
			return _baggg
		}
	}
	if _dbddda.ExtLst != nil {
		if _ceggd := _dbddda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ceggd != nil {
			return _ceggd
		}
	}
	return nil
}

const (
	ST_CalcModeUnset       ST_CalcMode = 0
	ST_CalcModeManual      ST_CalcMode = 1
	ST_CalcModeAuto        ST_CalcMode = 2
	ST_CalcModeAutoNoTable ST_CalcMode = 3
)

func (_eadagcc *QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	return _eadagcc.CT_QueryTable.MarshalXML(e, start)
}

// Validate validates the CT_OleLink and its children
func (_bgcd *CT_OleLink) Validate() error {
	return _bgcd.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b")
}

const (
	ST_FontSchemeUnset ST_FontScheme = 0
	ST_FontSchemeNone  ST_FontScheme = 1
	ST_FontSchemeMajor ST_FontScheme = 2
	ST_FontSchemeMinor ST_FontScheme = 3
)

func NewCT_PivotHierarchy() *CT_PivotHierarchy { _gebcag := &CT_PivotHierarchy{}; return _gebcag }
func NewCT_SheetId() *CT_SheetId               { _bccdbeg := &CT_SheetId{}; return _bccdbeg }
func NewCT_PageSetUpPr() *CT_PageSetUpPr       { _fafcf := &CT_PageSetUpPr{}; return _fafcf }
func (_agbgd ST_DataValidationImeMode) ValidateWithPath(path string) error {
	switch _agbgd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agbgd))
	}
	return nil
}
func (_ecbec *CT_ReviewedRevisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agecc := range start.Attr {
		if _agecc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bagff, _dfedc := _g.ParseUint(_agecc.Value, 10, 32)
			if _dfedc != nil {
				return _dfedc
			}
			_abcag := uint32(_bagff)
			_ecbec.CountAttr = &_abcag
			continue
		}
	}
_gfegg:
	for {
		_efeacg, _eaaaa := d.Token()
		if _eaaaa != nil {
			return _eaaaa
		}
		switch _cfaafe := _efeacg.(type) {
		case _b.StartElement:
			switch _cfaafe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}:
				_fdbfc := NewCT_Reviewed()
				if _aefd := d.DecodeElement(_fdbfc, &_cfaafe); _aefd != nil {
					return _aefd
				}
				_ecbec.Reviewed = append(_ecbec.Reviewed, _fdbfc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _cfaafe.Name)
				if _fgegf := d.Skip(); _fgegf != nil {
					return _fgegf
				}
			}
		case _b.EndElement:
			break _gfegg
		case _b.CharData:
		}
	}
	return nil
}
func (_fdgbdf ST_FontScheme) ValidateWithPath(path string) error {
	switch _fdgbdf {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdgbdf))
	}
	return nil
}
func (_defbe *CT_GroupMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfecc := range start.Attr {
		if _dfecc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcefd, _agdebc := _g.ParseUint(_dfecc.Value, 10, 32)
			if _agdebc != nil {
				return _agdebc
			}
			_ecdgf := uint32(_dcefd)
			_defbe.CountAttr = &_ecdgf
			continue
		}
	}
_fdbfd:
	for {
		_babdd, _eacdc := d.Token()
		if _eacdc != nil {
			return _eacdc
		}
		switch _fbcbe := _babdd.(type) {
		case _b.StartElement:
			switch _fbcbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_bdecf := NewCT_GroupMember()
				if _dcgf := d.DecodeElement(_bdecf, &_fbcbe); _dcgf != nil {
					return _dcgf
				}
				_defbe.GroupMember = append(_defbe.GroupMember, _bdecf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _fbcbe.Name)
				if _ccfce := d.Skip(); _ccfce != nil {
					return _ccfce
				}
			}
		case _b.EndElement:
			break _fdbfd
		case _b.CharData:
		}
	}
	return nil
}
func (_bfefaa *CT_PivotField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfefaa.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.NameAttr)})
	}
	if _bfefaa.AxisAttr != ST_AxisUnset {
		_acecd, _bfaa := _bfefaa.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _bfaa != nil {
			return _bfaa
		}
		start.Attr = append(start.Attr, _acecd)
	}
	if _bfefaa.DataFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DataFieldAttr))})
	}
	if _bfefaa.SubtotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.SubtotalCaptionAttr)})
	}
	if _bfefaa.ShowDropDownsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ShowDropDownsAttr))})
	}
	if _bfefaa.HiddenLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.HiddenLevelAttr))})
	}
	if _bfefaa.UniqueMemberPropertyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.UniqueMemberPropertyAttr)})
	}
	if _bfefaa.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.CompactAttr))})
	}
	if _bfefaa.AllDrilledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.AllDrilledAttr))})
	}
	if _bfefaa.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.NumFmtIdAttr)})
	}
	if _bfefaa.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.OutlineAttr))})
	}
	if _bfefaa.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.SubtotalTopAttr))})
	}
	if _bfefaa.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DragToRowAttr))})
	}
	if _bfefaa.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DragToColAttr))})
	}
	if _bfefaa.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.MultipleItemSelectionAllowedAttr))})
	}
	if _bfefaa.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DragToPageAttr))})
	}
	if _bfefaa.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DragToDataAttr))})
	}
	if _bfefaa.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DragOffAttr))})
	}
	if _bfefaa.ShowAllAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0041\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ShowAllAttr))})
	}
	if _bfefaa.InsertBlankRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.InsertBlankRowAttr))})
	}
	if _bfefaa.ServerFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ServerFieldAttr))})
	}
	if _bfefaa.InsertPageBreakAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.InsertPageBreakAttr))})
	}
	if _bfefaa.AutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.AutoShowAttr))})
	}
	if _bfefaa.TopAutoShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.TopAutoShowAttr))})
	}
	if _bfefaa.HideNewItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.HideNewItemsAttr))})
	}
	if _bfefaa.MeasureFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.MeasureFilterAttr))})
	}
	if _bfefaa.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.IncludeNewItemsInFilterAttr))})
	}
	if _bfefaa.ItemPageCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.ItemPageCountAttr)})
	}
	if _bfefaa.SortTypeAttr != ST_FieldSortTypeUnset {
		_adfda, _accebb := _bfefaa.SortTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065"})
		if _accebb != nil {
			return _accebb
		}
		start.Attr = append(start.Attr, _adfda)
	}
	if _bfefaa.DataSourceSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DataSourceSortAttr))})
	}
	if _bfefaa.NonAutoSortDefaultAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.NonAutoSortDefaultAttr))})
	}
	if _bfefaa.RankByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b\u0042\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_bfefaa.RankByAttr)})
	}
	if _bfefaa.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DefaultSubtotalAttr))})
	}
	if _bfefaa.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.SumSubtotalAttr))})
	}
	if _bfefaa.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.CountASubtotalAttr))})
	}
	if _bfefaa.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.AvgSubtotalAttr))})
	}
	if _bfefaa.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.MaxSubtotalAttr))})
	}
	if _bfefaa.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.MinSubtotalAttr))})
	}
	if _bfefaa.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ProductSubtotalAttr))})
	}
	if _bfefaa.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.CountSubtotalAttr))})
	}
	if _bfefaa.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.StdDevSubtotalAttr))})
	}
	if _bfefaa.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.StdDevPSubtotalAttr))})
	}
	if _bfefaa.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.VarSubtotalAttr))})
	}
	if _bfefaa.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.VarPSubtotalAttr))})
	}
	if _bfefaa.ShowPropCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ShowPropCellAttr))})
	}
	if _bfefaa.ShowPropTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ShowPropTipAttr))})
	}
	if _bfefaa.ShowPropAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.ShowPropAsCaptionAttr))})
	}
	if _bfefaa.DefaultAttributeDrillStateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bfefaa.DefaultAttributeDrillStateAttr))})
	}
	e.EncodeToken(start)
	if _bfefaa.Items != nil {
		_fffgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_bfefaa.Items, _fffgd)
	}
	if _bfefaa.AutoSortScope != nil {
		_ddae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0061\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}}
		e.EncodeElement(_bfefaa.AutoSortScope, _ddae)
	}
	if _bfefaa.ExtLst != nil {
		_gggac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bfefaa.ExtLst, _gggac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_SortState() *CT_SortState { _dcbdc := &CT_SortState{}; return _dcbdc }
func (_abeea *CT_IgnoredError) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eggcb := range start.Attr {
		if _eggcb.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_ffgfa, _ggfcd := ParseSliceST_Sqref(_eggcb.Value)
			if _ggfcd != nil {
				return _ggfcd
			}
			_abeea.SqrefAttr = _ffgfa
			continue
		}
		if _eggcb.Name.Local == "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr" {
			_eabcc, _dgdea := _g.ParseBool(_eggcb.Value)
			if _dgdea != nil {
				return _dgdea
			}
			_abeea.EvalErrorAttr = &_eabcc
			continue
		}
		if _eggcb.Name.Local == "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072" {
			_dbge, _agcga := _g.ParseBool(_eggcb.Value)
			if _agcga != nil {
				return _agcga
			}
			_abeea.TwoDigitTextYearAttr = &_dbge
			continue
		}
		if _eggcb.Name.Local == "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074" {
			_dgdfg, _dffg := _g.ParseBool(_eggcb.Value)
			if _dffg != nil {
				return _dffg
			}
			_abeea.NumberStoredAsTextAttr = &_dgdfg
			continue
		}
		if _eggcb.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_eeega, _fffc := _g.ParseBool(_eggcb.Value)
			if _fffc != nil {
				return _fffc
			}
			_abeea.FormulaAttr = &_eeega
			continue
		}
		if _eggcb.Name.Local == "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065" {
			_bcbge, _bcgfb := _g.ParseBool(_eggcb.Value)
			if _bcgfb != nil {
				return _bcgfb
			}
			_abeea.FormulaRangeAttr = &_bcbge
			continue
		}
		if _eggcb.Name.Local == "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061" {
			_bcdfb, _bfbaa := _g.ParseBool(_eggcb.Value)
			if _bfbaa != nil {
				return _bfbaa
			}
			_abeea.UnlockedFormulaAttr = &_bcdfb
			continue
		}
		if _eggcb.Name.Local == "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065" {
			_bcbac, _bbdfa := _g.ParseBool(_eggcb.Value)
			if _bbdfa != nil {
				return _bbdfa
			}
			_abeea.EmptyCellReferenceAttr = &_bcbac
			continue
		}
		if _eggcb.Name.Local == "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e" {
			_gcgd, _cedcc := _g.ParseBool(_eggcb.Value)
			if _cedcc != nil {
				return _cedcc
			}
			_abeea.ListDataValidationAttr = &_gcgd
			continue
		}
		if _eggcb.Name.Local == "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e" {
			_gcgaba, _dgac := _g.ParseBool(_eggcb.Value)
			if _dgac != nil {
				return _dgac
			}
			_abeea.CalculatedColumnAttr = &_gcgaba
			continue
		}
	}
	for {
		_gcgbc, _fcga := d.Token()
		if _fcga != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065d\u0045\u0072\u0072o\u0072:\u0020\u0025\u0073", _fcga)
		}
		if _agdef, _acaf := _gcgbc.(_b.EndElement); _acaf && _agdef.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_WorksheetSource struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_fdee *CT_Chartsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fdee.SheetPr != nil {
		_afdgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fdee.SheetPr, _afdgg)
	}
	_afab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
	e.EncodeElement(_fdee.SheetViews, _afab)
	if _fdee.SheetProtection != nil {
		_gfcba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fdee.SheetProtection, _gfcba)
	}
	if _fdee.CustomSheetViews != nil {
		_dcde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fdee.CustomSheetViews, _dcde)
	}
	if _fdee.PageMargins != nil {
		_feebc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fdee.PageMargins, _feebc)
	}
	if _fdee.PageSetup != nil {
		_afbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fdee.PageSetup, _afbc)
	}
	if _fdee.HeaderFooter != nil {
		_ffgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fdee.HeaderFooter, _ffgf)
	}
	_ffbab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
	e.EncodeElement(_fdee.Drawing, _ffbab)
	if _fdee.LegacyDrawing != nil {
		_fcfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fdee.LegacyDrawing, _fcfa)
	}
	if _fdee.LegacyDrawingHF != nil {
		_eaae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fdee.LegacyDrawingHF, _eaae)
	}
	if _fdee.DrawingHF != nil {
		_ggbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fdee.DrawingHF, _ggbc)
	}
	if _fdee.Picture != nil {
		_eeaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fdee.Picture, _eeaf)
	}
	if _fdee.WebPublishItems != nil {
		_ecdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fdee.WebPublishItems, _ecdf)
	}
	if _fdee.ExtLst != nil {
		_fgeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fdee.ExtLst, _fgeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggdbb ST_SheetState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ggdbb.String(), start)
}

// ValidateWithPath validates the CT_AutoFilter and its children, prefixing error messages with path
func (_eeeb *CT_AutoFilter) ValidateWithPath(path string) error {
	for _ged, _ffc := range _eeeb.FilterColumn {
		if _age := _ffc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046il\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e\u005b\u0025\u0064\u005d", path, _ged)); _age != nil {
			return _age
		}
	}
	if _eeeb.SortState != nil {
		if _ad := _eeeb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _ad != nil {
			return _ad
		}
	}
	if _eeeb.ExtLst != nil {
		if _eab := _eeeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eab != nil {
			return _eab
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Error and its children, prefixing error messages with path
func (_aaaef *CT_Error) ValidateWithPath(path string) error {
	if _aaaef.Tpls != nil {
		if _agcea := _aaaef.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _agcea != nil {
			return _agcea
		}
	}
	for _fbbf, _gddab := range _aaaef.X {
		if _ebdff := _gddab.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _fbbf)); _ebdff != nil {
			return _ebdff
		}
	}
	return nil
}

// Validate validates the VolTypes and its children
func (_dfdfgc *VolTypes) Validate() error {
	return _dfdfgc.ValidateWithPath("\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}

type CT_Formats struct {

	// Formats Count
	CountAttr *uint32

	// PivotTable Format
	Format []*CT_Format
}

// Validate validates the CT_PivotHierarchies and its children
func (_ffaega *CT_PivotHierarchies) Validate() error {
	return _ffaega.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}

// ValidateWithPath validates the CT_PCDKPI and its children, prefixing error messages with path
func (_cegcff *CT_PCDKPI) ValidateWithPath(path string) error { return nil }
func NewCT_MeasureGroups() *CT_MeasureGroups                  { _bbbfa := &CT_MeasureGroups{}; return _bbbfa }

type CT_MetadataBlock struct {

	// Metadata Record
	Rc []*CT_MetadataRecord
}

// ValidateWithPath validates the CT_SmartTagPr and its children, prefixing error messages with path
func (_cgbec *CT_SmartTagPr) ValidateWithPath(path string) error {
	if _dcbdbb := _cgbec.ShowAttr.ValidateWithPath(path + "\u002fS\u0068\u006f\u0077\u0041\u0074\u0074r"); _dcbdbb != nil {
		return _dcbdbb
	}
	return nil
}
func (_gbebfe *CT_RevisionInsertSheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgffe := range start.Attr {
		if _fgffe.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_efdfa, _dede := _g.ParseUint(_fgffe.Value, 10, 32)
			if _dede != nil {
				return _dede
			}
			_gbebfe.SheetIdAttr = uint32(_efdfa)
			continue
		}
		if _fgffe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fabbd, _afacb := _fgffe.Value, error(nil)
			if _afacb != nil {
				return _afacb
			}
			_gbebfe.NameAttr = _fabbd
			continue
		}
		if _fgffe.Name.Local == "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_efaea, _dbcba := _g.ParseUint(_fgffe.Value, 10, 32)
			if _dbcba != nil {
				return _dbcba
			}
			_gbebfe.SheetPositionAttr = uint32(_efaea)
			continue
		}
		if _fgffe.Name.Local == "\u0072\u0049\u0064" {
			_fbgcf, _fabcc := _g.ParseUint(_fgffe.Value, 10, 32)
			if _fabcc != nil {
				return _fabcc
			}
			_bgegg := uint32(_fbgcf)
			_gbebfe.RIdAttr = &_bgegg
			continue
		}
		if _fgffe.Name.Local == "\u0075\u0061" {
			_feaba, _eegcg := _g.ParseBool(_fgffe.Value)
			if _eegcg != nil {
				return _eegcg
			}
			_gbebfe.UaAttr = &_feaba
			continue
		}
		if _fgffe.Name.Local == "\u0072\u0061" {
			_geegcd, _feged := _g.ParseBool(_fgffe.Value)
			if _feged != nil {
				return _feged
			}
			_gbebfe.RaAttr = &_geegcd
			continue
		}
	}
	for {
		_bggcdd, _ecbfg := d.Token()
		if _ecbfg != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073i\u006fn\u0049n\u0073\u0065\u0072\u0074\u0053\u0068\u0065\u0065\u0074\u003a\u0020\u0025\u0073", _ecbfg)
		}
		if _cccaf, _efbgd := _bggcdd.(_b.EndElement); _efbgd && _cccaf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellFormula and its children, prefixing error messages with path
func (_dcae *CT_CellFormula) ValidateWithPath(path string) error {
	if _bcdd := _dcae.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bcdd != nil {
		return _bcdd
	}
	return nil
}
func (_acffg *CT_Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acffg.Rrc != nil {
		_edfage := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0072\u0063"}}
		for _, _aggdca := range _acffg.Rrc {
			e.EncodeElement(_aggdca, _edfage)
		}
	}
	if _acffg.Rm != nil {
		_gacaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006d"}}
		for _, _bebag := range _acffg.Rm {
			e.EncodeElement(_bebag, _gacaa)
		}
	}
	if _acffg.Rcv != nil {
		_badbda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0076"}}
		for _, _bdbbc := range _acffg.Rcv {
			e.EncodeElement(_bdbbc, _badbda)
		}
	}
	if _acffg.Rsnm != nil {
		_bcffaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0073\u006e\u006d"}}
		for _, _dfebg := range _acffg.Rsnm {
			e.EncodeElement(_dfebg, _bcffaf)
		}
	}
	if _acffg.Ris != nil {
		_bdgge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0073"}}
		for _, _dfddc := range _acffg.Ris {
			e.EncodeElement(_dfddc, _bdgge)
		}
	}
	if _acffg.Rcc != nil {
		_gdbcgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _babgad := range _acffg.Rcc {
			e.EncodeElement(_babgad, _gdbcgf)
		}
	}
	if _acffg.Rfmt != nil {
		_cdbca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _cedff := range _acffg.Rfmt {
			e.EncodeElement(_cedff, _cdbca)
		}
	}
	if _acffg.Raf != nil {
		_ggcfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u0066"}}
		for _, _fffdcb := range _acffg.Raf {
			e.EncodeElement(_fffdcb, _ggcfe)
		}
	}
	if _acffg.Rdn != nil {
		_badbdd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0064\u006e"}}
		for _, _ddacd := range _acffg.Rdn {
			e.EncodeElement(_ddacd, _badbdd)
		}
	}
	if _acffg.Rcmt != nil {
		_fdgbbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u006d\u0074"}}
		for _, _fbdcf := range _acffg.Rcmt {
			e.EncodeElement(_fbdcf, _fdgbbf)
		}
	}
	if _acffg.Rqt != nil {
		_dabeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0071\u0074"}}
		for _, _abcddg := range _acffg.Rqt {
			e.EncodeElement(_abcddg, _dabeb)
		}
	}
	if _acffg.Rcft != nil {
		_bdfee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0063\u0066\u0074"}}
		for _, _fggdc := range _acffg.Rcft {
			e.EncodeElement(_fggdc, _bdfee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Dxfs and its children
func (_gfggf *CT_Dxfs) Validate() error {
	return _gfggf.ValidateWithPath("\u0043T\u005f\u0044\u0078\u0066\u0073")
}

type ST_TextHAlign byte

func NewQueryTable() *QueryTable {
	_deadd := &QueryTable{}
	_deadd.CT_QueryTable = *NewCT_QueryTable()
	return _deadd
}

type ST_DateTimeGrouping byte

// Validate validates the CT_PivotHierarchy and its children
func (_edfeg *CT_PivotHierarchy) Validate() error {
	return _edfeg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}
func (_fegg *CT_CacheHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _fegg.UniqueNameAttr)})
	if _fegg.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.CaptionAttr)})
	}
	if _fegg.MeasureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0061\u0073\u0075\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.MeasureAttr))})
	}
	if _fegg.SetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.SetAttr))})
	}
	if _fegg.ParentSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0072\u0065\u006e\u0074\u0053\u0065t"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.ParentSetAttr)})
	}
	if _fegg.IconSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.IconSetAttr)})
	}
	if _fegg.AttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061t\u0074\u0072\u0069\u0062\u0075\u0074e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.AttributeAttr))})
	}
	if _fegg.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.TimeAttr))})
	}
	if _fegg.KeyAttributeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079A\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.KeyAttributeAttr))})
	}
	if _fegg.DefaultMemberUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066au\u006c\u0074\u004d\u0065\u006d\u0062\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.DefaultMemberUniqueNameAttr)})
	}
	if _fegg.AllUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.AllUniqueNameAttr)})
	}
	if _fegg.AllCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.AllCaptionAttr)})
	}
	if _fegg.DimensionUniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u006d\u0065ns\u0069\u006f\u006e\u0055\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.DimensionUniqueNameAttr)})
	}
	if _fegg.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.DisplayFolderAttr)})
	}
	if _fegg.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.MeasureGroupAttr)})
	}
	if _fegg.MeasuresAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.MeasuresAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", _fegg.CountAttr)})
	if _fegg.OneFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u0065\u0046\u0069\u0065\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.OneFieldAttr))})
	}
	if _fegg.MemberValueDatatypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u006d\u0062er\u0056\u0061\u006c\u0075\u0065\u0044\u0061\u0074\u0061\u0074\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fegg.MemberValueDatatypeAttr)})
	}
	if _fegg.UnbalancedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.UnbalancedAttr))})
	}
	if _fegg.UnbalancedGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u0062a\u006c\u0061\u006e\u0063\u0065\u0064\u0047\u0072\u006f\u0075\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.UnbalancedGroupAttr))})
	}
	if _fegg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fegg.HiddenAttr))})
	}
	e.EncodeToken(start)
	if _fegg.FieldsUsage != nil {
		_abc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065"}}
		e.EncodeElement(_fegg.FieldsUsage, _abc)
	}
	if _fegg.GroupLevels != nil {
		_gcbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073"}}
		e.EncodeElement(_fegg.GroupLevels, _gcbd)
	}
	if _fegg.ExtLst != nil {
		_bdg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fegg.ExtLst, _bdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cabcg ST_Type) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gecc := _b.Attr{}
	_gecc.Name = name
	switch _cabcg {
	case ST_TypeUnset:
		_gecc.Value = ""
	case ST_TypeNone:
		_gecc.Value = "\u006e\u006f\u006e\u0065"
	case ST_TypeAll:
		_gecc.Value = "\u0061\u006c\u006c"
	case ST_TypeRow:
		_gecc.Value = "\u0072\u006f\u0077"
	case ST_TypeColumn:
		_gecc.Value = "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return _gecc, nil
}
func NewCT_GroupLevel() *CT_GroupLevel         { _cbcac := &CT_GroupLevel{}; return _cbcac }
func NewCT_TableStyleInfo() *CT_TableStyleInfo { _cdeebf := &CT_TableStyleInfo{}; return _cdeebf }
func (_dgaec *CT_VerticalAlignFontProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_ffcgea, _bgcbe := _dgaec.ValAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0061\u006c"})
	if _bgcbe != nil {
		return _bgcbe
	}
	start.Attr = append(start.Attr, _ffcgea)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CustomFilter and its children
func (_fgcf *CT_CustomFilter) Validate() error {
	return _fgcf.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_agfdb ST_FieldSortType) ValidateWithPath(path string) error {
	switch _agfdb {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agfdb))
	}
	return nil
}
func NewCT_CellSmartTagPr() *CT_CellSmartTagPr { _feeb := &CT_CellSmartTagPr{}; return _feeb }
func (_baae *CT_CellStyleXfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baae.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_baae.CountAttr)})
	}
	e.EncodeToken(start)
	_cbde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u0066"}}
	for _, _fecf := range _baae.Xf {
		e.EncodeElement(_fecf, _cbde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eggef *CT_PageBreak) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cccce := range start.Attr {
		if _cccce.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ddbba, _feadc := _g.ParseUint(_cccce.Value, 10, 32)
			if _feadc != nil {
				return _feadc
			}
			_ccgdf := uint32(_ddbba)
			_eggef.CountAttr = &_ccgdf
			continue
		}
		if _cccce.Name.Local == "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074" {
			_bcffa, _ebdfea := _g.ParseUint(_cccce.Value, 10, 32)
			if _ebdfea != nil {
				return _ebdfea
			}
			_dfgdag := uint32(_bcffa)
			_eggef.ManualBreakCountAttr = &_dfgdag
			continue
		}
	}
_fbegg:
	for {
		_bdbeg, _gdcbad := d.Token()
		if _gdcbad != nil {
			return _gdcbad
		}
		switch _geefcg := _bdbeg.(type) {
		case _b.StartElement:
			switch _geefcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072\u006b"}:
				_bdfdf := NewCT_Break()
				if _cfeee := d.DecodeElement(_bdfdf, &_geefcg); _cfeee != nil {
					return _cfeee
				}
				_eggef.Brk = append(_eggef.Brk, _bdfdf)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0042\u0072\u0065\u0061\u006b\u0020\u0025\u0076", _geefcg.Name)
				if _acccf := d.Skip(); _acccf != nil {
					return _acccf
				}
			}
		case _b.EndElement:
			break _fbegg
		case _b.CharData:
		}
	}
	return nil
}

type CT_SingleXmlCell struct {

	// Table Id
	IdAttr uint32

	// Reference
	RAttr string

	// Connection ID
	ConnectionIdAttr uint32

	// Cell Properties
	XmlCellPr *CT_XmlCellPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_VolType and its children
func (_fgdacd *CT_VolType) Validate() error {
	return _fgdacd.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065")
}

type CT_CellSmartTagPr struct {

	// Key Name
	KeyAttr string

	// Value
	ValAttr string
}
type CT_SheetView struct {

	// Window Protection
	WindowProtectionAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColHeadersAttr *bool

	// Show Zero Values
	ShowZerosAttr *bool

	// Right To Left
	RightToLeftAttr *bool

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Show Ruler
	ShowRulerAttr *bool

	// Show Outline Symbols
	ShowOutlineSymbolsAttr *bool

	// Default Grid Color
	DefaultGridColorAttr *bool

	// Show White Space
	ShowWhiteSpaceAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Color Id
	ColorIdAttr *uint32

	// Zoom Scale
	ZoomScaleAttr *uint32

	// Zoom Scale Normal View
	ZoomScaleNormalAttr *uint32

	// Zoom Scale Page Break Preview
	ZoomScaleSheetLayoutViewAttr *uint32

	// Zoom Scale Page Layout View
	ZoomScalePageLayoutViewAttr *uint32

	// Workbook View Index
	WorkbookViewIdAttr uint32

	// View Pane
	Pane *CT_Pane

	// Selection
	Selection []*CT_Selection

	// PivotTable Selection
	PivotSelection []*CT_PivotSelection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ggffe *CT_Location) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gecd := range start.Attr {
		if _gecd.Name.Local == "\u0072\u0065\u0066" {
			_aeeag, _ecbfd := _gecd.Value, error(nil)
			if _ecbfd != nil {
				return _ecbfd
			}
			_ggffe.RefAttr = _aeeag
			continue
		}
		if _gecd.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064e\u0072\u0052\u006f\u0077" {
			_gcaba, _agebc := _g.ParseUint(_gecd.Value, 10, 32)
			if _agebc != nil {
				return _agebc
			}
			_ggffe.FirstHeaderRowAttr = uint32(_gcaba)
			continue
		}
		if _gecd.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0052\u006f\u0077" {
			_gcff, _aebca := _g.ParseUint(_gecd.Value, 10, 32)
			if _aebca != nil {
				return _aebca
			}
			_ggffe.FirstDataRowAttr = uint32(_gcff)
			continue
		}
		if _gecd.Name.Local == "\u0066\u0069\u0072s\u0074\u0044\u0061\u0074\u0061\u0043\u006f\u006c" {
			_gbeae, _bbbga := _g.ParseUint(_gecd.Value, 10, 32)
			if _bbbga != nil {
				return _bbbga
			}
			_ggffe.FirstDataColAttr = uint32(_gbeae)
			continue
		}
		if _gecd.Name.Local == "\u0072\u006f\u0077P\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_bdgba, _cagcc := _g.ParseUint(_gecd.Value, 10, 32)
			if _cagcc != nil {
				return _cagcc
			}
			_efdeb := uint32(_bdgba)
			_ggffe.RowPageCountAttr = &_efdeb
			continue
		}
		if _gecd.Name.Local == "\u0063\u006f\u006cP\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_gbcadf, _dbaeba := _g.ParseUint(_gecd.Value, 10, 32)
			if _dbaeba != nil {
				return _dbaeba
			}
			_dcfdc := uint32(_gbcadf)
			_ggffe.ColPageCountAttr = &_dcfdc
			continue
		}
	}
	for {
		_gcffa, _agcce := d.Token()
		if _agcce != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _agcce)
		}
		if _abfgb, _dadcf := _gcffa.(_b.EndElement); _dadcf && _abfgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgcega ST_HtmlFmt) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdddda := _b.Attr{}
	_fdddda.Name = name
	switch _cgcega {
	case ST_HtmlFmtUnset:
		_fdddda.Value = ""
	case ST_HtmlFmtNone:
		_fdddda.Value = "\u006e\u006f\u006e\u0065"
	case ST_HtmlFmtRtf:
		_fdddda.Value = "\u0072\u0074\u0066"
	case ST_HtmlFmtAll:
		_fdddda.Value = "\u0061\u006c\u006c"
	}
	return _fdddda, nil
}
func NewCT_Tables() *CT_Tables { _dabaded := &CT_Tables{}; return _dabaded }
func (_geffc *CT_RevisionFormatting) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbcgg := range start.Attr {
		if _cbcgg.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_cagcd, _eabfg := _g.ParseUint(_cbcgg.Value, 10, 32)
			if _eabfg != nil {
				return _eabfg
			}
			_geffc.SheetIdAttr = uint32(_cagcd)
			continue
		}
		if _cbcgg.Name.Local == "\u0078\u0066\u0044x\u0066" {
			_dfbbf, _bcafg := _g.ParseBool(_cbcgg.Value)
			if _bcafg != nil {
				return _bcafg
			}
			_geffc.XfDxfAttr = &_dfbbf
			continue
		}
		if _cbcgg.Name.Local == "\u0073" {
			_ecfcc, _fgcedb := _g.ParseBool(_cbcgg.Value)
			if _fgcedb != nil {
				return _fgcedb
			}
			_geffc.SAttr = &_ecfcc
			continue
		}
		if _cbcgg.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_cccggg, _fcefff := ParseSliceST_Sqref(_cbcgg.Value)
			if _fcefff != nil {
				return _fcefff
			}
			_geffc.SqrefAttr = _cccggg
			continue
		}
		if _cbcgg.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_ceaag, _ffcce := _g.ParseUint(_cbcgg.Value, 10, 32)
			if _ffcce != nil {
				return _ffcce
			}
			_aecbae := uint32(_ceaag)
			_geffc.StartAttr = &_aecbae
			continue
		}
		if _cbcgg.Name.Local == "\u006c\u0065\u006e\u0067\u0074\u0068" {
			_edbged, _gfccbe := _g.ParseUint(_cbcgg.Value, 10, 32)
			if _gfccbe != nil {
				return _gfccbe
			}
			_gddeb := uint32(_edbged)
			_geffc.LengthAttr = &_gddeb
			continue
		}
	}
_fbebg:
	for {
		_fdcfb, _agdcae := d.Token()
		if _agdcae != nil {
			return _agdcae
		}
		switch _adeag := _fdcfb.(type) {
		case _b.StartElement:
			switch _adeag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_geffc.Dxf = NewCT_Dxf()
				if _gfad := d.DecodeElement(_geffc.Dxf, &_adeag); _gfad != nil {
					return _gfad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_geffc.ExtLst = NewCT_ExtensionList()
				if _cffff := d.DecodeElement(_geffc.ExtLst, &_adeag); _cffff != nil {
					return _cffff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _adeag.Name)
				if _bbfeeb := d.Skip(); _bbfeeb != nil {
					return _bbfeeb
				}
			}
		case _b.EndElement:
			break _fbebg
		case _b.CharData:
		}
	}
	return nil
}

type CT_TablePart struct{ IdAttr string }

// Validate validates the CT_Parameter and its children
func (_dbfgf *CT_Parameter) Validate() error {
	return _dbfgf.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072")
}

type CT_QueryTableField struct {

	// Field Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Data Bound Column
	DataBoundAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Fill This Formula On Refresh
	FillFormulasAttr *bool

	// Clipped Column
	ClippedAttr *bool

	// Table Column Id
	TableColumnIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dbddae *ST_DataValidationType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbddae = 0
	case "\u006e\u006f\u006e\u0065":
		*_dbddae = 1
	case "\u0077\u0068\u006fl\u0065":
		*_dbddae = 2
	case "\u0064e\u0063\u0069\u006d\u0061\u006c":
		*_dbddae = 3
	case "\u006c\u0069\u0073\u0074":
		*_dbddae = 4
	case "\u0064\u0061\u0074\u0065":
		*_dbddae = 5
	case "\u0074\u0069\u006d\u0065":
		*_dbddae = 6
	case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
		*_dbddae = 7
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_dbddae = 8
	}
	return nil
}
func NewCT_FieldsUsage() *CT_FieldsUsage { _cgfgg := &CT_FieldsUsage{}; return _cgfgg }

const (
	ST_MdxSetOrderUnset ST_MdxSetOrder = 0
	ST_MdxSetOrderU     ST_MdxSetOrder = 1
	ST_MdxSetOrderA     ST_MdxSetOrder = 2
	ST_MdxSetOrderD     ST_MdxSetOrder = 3
	ST_MdxSetOrderAa    ST_MdxSetOrder = 4
	ST_MdxSetOrderAd    ST_MdxSetOrder = 5
	ST_MdxSetOrderNa    ST_MdxSetOrder = 6
	ST_MdxSetOrderNd    ST_MdxSetOrder = 7
)

// Validate validates the CT_PivotField and its children
func (_deefbc *CT_PivotField) Validate() error {
	return _deefbc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064")
}
func (_fggfca *ST_SheetState) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcedf, _aedec := d.Token()
	if _aedec != nil {
		return _aedec
	}
	if _cbadd, _gbfed := _dcedf.(_b.EndElement); _gbfed && _cbadd.Name == start.Name {
		*_fggfca = 1
		return nil
	}
	if _ggggc, _bacfd := _dcedf.(_b.CharData); !_bacfd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcedf)
	} else {
		switch string(_ggggc) {
		case "":
			*_fggfca = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_fggfca = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_fggfca = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_fggfca = 3
		}
	}
	_dcedf, _aedec = d.Token()
	if _aedec != nil {
		return _aedec
	}
	if _dbafg, _eeed := _dcedf.(_b.EndElement); _eeed && _dbafg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcedf)
}

// Validate validates the CT_CellStyle and its children
func (_bgfc *CT_CellStyle) Validate() error {
	return _bgfc.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_pivotTableDefinition and its children
func (_gbcgd *CT_pivotTableDefinition) Validate() error {
	return _gbcgd.ValidateWithPath("\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e")
}

type CT_Scenarios struct {

	// Current Scenario
	CurrentAttr *uint32

	// Last Shown Scenario
	ShowAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Scenario
	Scenario []*CT_Scenario
}

// Validate validates the CT_Item and its children
func (_bagcf *CT_Item) Validate() error {
	return _bagcf.ValidateWithPath("\u0043T\u005f\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_PivotCache and its children
func (_dddfc *CT_PivotCache) Validate() error {
	return _dddfc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065")
}
func (_bcebc *CT_MdxTuple) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bcebc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.CAttr)})
	}
	if _bcebc.CtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.CtAttr)})
	}
	if _bcebc.SiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.SiAttr)})
	}
	if _bcebc.FiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.FiAttr)})
	}
	if _bcebc.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.BcAttr)})
	}
	if _bcebc.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bcebc.FcAttr)})
	}
	if _bcebc.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcebc.IAttr))})
	}
	if _bcebc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcebc.UAttr))})
	}
	if _bcebc.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcebc.StAttr))})
	}
	if _bcebc.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bcebc.BAttr))})
	}
	e.EncodeToken(start)
	if _bcebc.N != nil {
		_dgadac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _afcbg := range _bcebc.N {
			e.EncodeElement(_afcbg, _dgadac)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MemberProperty() *CT_MemberProperty { _fgdcg := &CT_MemberProperty{}; return _fgdcg }

type PivotTableDefinition struct{ CT_pivotTableDefinition }

func (_gggbd *CT_Fill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fcff:
	for {
		_bdbe, _ceffa := d.Token()
		if _ceffa != nil {
			return _ceffa
		}
		switch _adcag := _bdbe.(type) {
		case _b.StartElement:
			switch _adcag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c"}:
				_gggbd.PatternFill = NewCT_PatternFill()
				if _bfddb := d.DecodeElement(_gggbd.PatternFill, &_adcag); _bfddb != nil {
					return _bfddb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c"}:
				_gggbd.GradientFill = NewCT_GradientFill()
				if _edab := d.DecodeElement(_gggbd.GradientFill, &_adcag); _edab != nil {
					return _edab
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _adcag.Name)
				if _afgd := d.Skip(); _afgd != nil {
					return _afgd
				}
			}
		case _b.EndElement:
			break _fcff
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FunctionGroup() *CT_FunctionGroup { _ccacdf := &CT_FunctionGroup{}; return _ccacdf }
func (_cbbac *CT_FieldsUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbbac.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbbac.CountAttr)})
	}
	e.EncodeToken(start)
	if _cbbac.FieldUsage != nil {
		_ecbgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065"}}
		for _, _fbgge := range _cbbac.FieldUsage {
			e.EncodeElement(_fbgge, _ecbgd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataRef and its children
func (_ggfaa *CT_DataRef) Validate() error {
	return _ggfaa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066")
}
func (_eedfcd *CT_SmartTagPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfcdd := range start.Attr {
		if _cfcdd.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ecbcc, _aacea := _g.ParseBool(_cfcdd.Value)
			if _aacea != nil {
				return _aacea
			}
			_eedfcd.EmbedAttr = &_ecbcc
			continue
		}
		if _cfcdd.Name.Local == "\u0073\u0068\u006f\u0077" {
			_eedfcd.ShowAttr.UnmarshalXMLAttr(_cfcdd)
			continue
		}
	}
	for {
		_efed, _afdec := d.Token()
		if _afdec != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0053m\u0061r\u0074T\u0061\u0067\u0050\u0072\u003a\u0020\u0025s", _afdec)
		}
		if _caefbd, _gdabd := _efed.(_b.EndElement); _gdabd && _caefbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbgg *CT_CustomSheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bbgg.GuidAttr)})
	if _bbgg.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bbgg.ScaleAttr)})
	}
	if _bbgg.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_bbgg.ColorIdAttr)})
	}
	if _bbgg.ShowPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowPageBreaksAttr))})
	}
	if _bbgg.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowFormulasAttr))})
	}
	if _bbgg.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowGridLinesAttr))})
	}
	if _bbgg.ShowRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowRowColAttr))})
	}
	if _bbgg.OutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.OutlineSymbolsAttr))})
	}
	if _bbgg.ZeroValuesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ZeroValuesAttr))})
	}
	if _bbgg.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.FitToPageAttr))})
	}
	if _bbgg.PrintAreaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.PrintAreaAttr))})
	}
	if _bbgg.FilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.FilterAttr))})
	}
	if _bbgg.ShowAutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowAutoFilterAttr))})
	}
	if _bbgg.HiddenRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.HiddenRowsAttr))})
	}
	if _bbgg.HiddenColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.HiddenColumnsAttr))})
	}
	if _bbgg.StateAttr != ST_SheetStateUnset {
		_bfbg, _cgfee := _bbgg.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _cgfee != nil {
			return _cgfee
		}
		start.Attr = append(start.Attr, _bfbg)
	}
	if _bbgg.FilterUniqueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.FilterUniqueAttr))})
	}
	if _bbgg.ViewAttr != ST_SheetViewTypeUnset {
		_dacec, _bdfbg := _bbgg.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _bdfbg != nil {
			return _bdfbg
		}
		start.Attr = append(start.Attr, _dacec)
	}
	if _bbgg.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgg.ShowRulerAttr))})
	}
	if _bbgg.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_bbgg.TopLeftCellAttr)})
	}
	e.EncodeToken(start)
	if _bbgg.Pane != nil {
		_fced := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_bbgg.Pane, _fced)
	}
	if _bbgg.Selection != nil {
		_efdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_bbgg.Selection, _efdf)
	}
	if _bbgg.RowBreaks != nil {
		_agbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_bbgg.RowBreaks, _agbd)
	}
	if _bbgg.ColBreaks != nil {
		_ecfgab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_bbgg.ColBreaks, _ecfgab)
	}
	if _bbgg.PageMargins != nil {
		_dgdef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_bbgg.PageMargins, _dgdef)
	}
	if _bbgg.PrintOptions != nil {
		_dbdb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_bbgg.PrintOptions, _dbdb)
	}
	if _bbgg.PageSetup != nil {
		_eacba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_bbgg.PageSetup, _eacba)
	}
	if _bbgg.HeaderFooter != nil {
		_cceabc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_bbgg.HeaderFooter, _cceabc)
	}
	if _bbgg.AutoFilter != nil {
		_egab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_bbgg.AutoFilter, _egab)
	}
	if _bbgg.ExtLst != nil {
		_cgcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbgg.ExtLst, _cgcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExternalDefinedNames() *CT_ExternalDefinedNames {
	_bddgg := &CT_ExternalDefinedNames{}
	return _bddgg
}

// ValidateWithPath validates the Table and its children, prefixing error messages with path
func (_dfeca *Table) ValidateWithPath(path string) error {
	if _ddeaae := _dfeca.CT_Table.ValidateWithPath(path); _ddeaae != nil {
		return _ddeaae
	}
	return nil
}

// Validate validates the CT_Schema and its children
func (_eeggb *CT_Schema) Validate() error {
	return _eeggb.ValidateWithPath("\u0043T\u005f\u0053\u0063\u0068\u0065\u006da")
}

// Validate validates the CT_VerticalAlignFontProperty and its children
func (_befcdde *CT_VerticalAlignFontProperty) Validate() error {
	return _befcdde.ValidateWithPath("\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079")
}
func (_abccge ST_DataValidationOperator) String() string {
	switch _abccge {
	case 0:
		return ""
	case 1:
		return "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case 2:
		return "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case 3:
		return "\u0065\u0071\u0075a\u006c"
	case 4:
		return "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 5:
		return "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case 6:
		return "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case 7:
		return "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case 8:
		return "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return ""
}
func (_abbaa *ST_PivotFilterType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abbaa = 0
	case "\u0075n\u006b\u006e\u006f\u0077\u006e":
		*_abbaa = 1
	case "\u0063\u006f\u0075n\u0074":
		*_abbaa = 2
	case "\u0070e\u0072\u0063\u0065\u006e\u0074":
		*_abbaa = 3
	case "\u0073\u0075\u006d":
		*_abbaa = 4
	case "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 5
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 6
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068":
		*_abbaa = 7
	case "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068":
		*_abbaa = 8
	case "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_abbaa = 9
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068":
		*_abbaa = 10
	case "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_abbaa = 11
	case "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073":
		*_abbaa = 12
	case "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e":
		*_abbaa = 13
	case "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l":
		*_abbaa = 14
	case "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_abbaa = 15
	case "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c":
		*_abbaa = 16
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_abbaa = 17
	case "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_abbaa = 18
	case "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 19
	case "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 20
	case "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_abbaa = 21
	case "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 22
	case "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_abbaa = 23
	case "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_abbaa = 24
	case "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_abbaa = 25
	case "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_abbaa = 26
	case "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l":
		*_abbaa = 27
	case "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_abbaa = 28
	case "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e":
		*_abbaa = 29
	case "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_abbaa = 30
	case "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e":
		*_abbaa = 31
	case "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c":
		*_abbaa = 32
	case "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_abbaa = 33
	case "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e":
		*_abbaa = 34
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_abbaa = 35
	case "\u0074\u006f\u0064a\u0079":
		*_abbaa = 36
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_abbaa = 37
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_abbaa = 38
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_abbaa = 39
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_abbaa = 40
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_abbaa = 41
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_abbaa = 42
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_abbaa = 43
	case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_abbaa = 44
	case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_abbaa = 45
	case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
		*_abbaa = 46
	case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
		*_abbaa = 47
	case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
		*_abbaa = 48
	case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
		*_abbaa = 49
	case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
		*_abbaa = 50
	case "\u0051\u0031":
		*_abbaa = 51
	case "\u0051\u0032":
		*_abbaa = 52
	case "\u0051\u0033":
		*_abbaa = 53
	case "\u0051\u0034":
		*_abbaa = 54
	case "\u004d\u0031":
		*_abbaa = 55
	case "\u004d\u0032":
		*_abbaa = 56
	case "\u004d\u0033":
		*_abbaa = 57
	case "\u004d\u0034":
		*_abbaa = 58
	case "\u004d\u0035":
		*_abbaa = 59
	case "\u004d\u0036":
		*_abbaa = 60
	case "\u004d\u0037":
		*_abbaa = 61
	case "\u004d\u0038":
		*_abbaa = 62
	case "\u004d\u0039":
		*_abbaa = 63
	case "\u004d\u0031\u0030":
		*_abbaa = 64
	case "\u004d\u0031\u0031":
		*_abbaa = 65
	case "\u004d\u0031\u0032":
		*_abbaa = 66
	}
	return nil
}

// Validate validates the CT_DynamicFilter and its children
func (_gbcad *CT_DynamicFilter) Validate() error {
	return _gbcad.ValidateWithPath("\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_cecdaa *CT_PCDKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfedb := range start.Attr {
		if _cfedb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cbbad, _eddge := _cfedb.Value, error(nil)
			if _eddge != nil {
				return _eddge
			}
			_cecdaa.UniqueNameAttr = _cbbad
			continue
		}
		if _cfedb.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_fefdc, _ceca := _cfedb.Value, error(nil)
			if _ceca != nil {
				return _ceca
			}
			_cecdaa.CaptionAttr = &_fefdc
			continue
		}
		if _cfedb.Name.Local == "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072" {
			_ffcc, _feabd := _cfedb.Value, error(nil)
			if _feabd != nil {
				return _feabd
			}
			_cecdaa.DisplayFolderAttr = &_ffcc
			continue
		}
		if _cfedb.Name.Local == "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070" {
			_baefd, _fbafd := _cfedb.Value, error(nil)
			if _fbafd != nil {
				return _fbafd
			}
			_cecdaa.MeasureGroupAttr = &_baefd
			continue
		}
		if _cfedb.Name.Local == "\u0070\u0061\u0072\u0065\u006e\u0074" {
			_becdgdb, _gbfag := _cfedb.Value, error(nil)
			if _gbfag != nil {
				return _gbfag
			}
			_cecdaa.ParentAttr = &_becdgdb
			continue
		}
		if _cfedb.Name.Local == "\u0076\u0061\u006cu\u0065" {
			_begca, _adddc := _cfedb.Value, error(nil)
			if _adddc != nil {
				return _adddc
			}
			_cecdaa.ValueAttr = _begca
			continue
		}
		if _cfedb.Name.Local == "\u0067\u006f\u0061\u006c" {
			_dabae, _afcdd := _cfedb.Value, error(nil)
			if _afcdd != nil {
				return _afcdd
			}
			_cecdaa.GoalAttr = &_dabae
			continue
		}
		if _cfedb.Name.Local == "\u0073\u0074\u0061\u0074\u0075\u0073" {
			_eadb, _abafb := _cfedb.Value, error(nil)
			if _abafb != nil {
				return _abafb
			}
			_cecdaa.StatusAttr = &_eadb
			continue
		}
		if _cfedb.Name.Local == "\u0074\u0072\u0065n\u0064" {
			_ddfgg, _cgfbc := _cfedb.Value, error(nil)
			if _cgfbc != nil {
				return _cgfbc
			}
			_cecdaa.TrendAttr = &_ddfgg
			continue
		}
		if _cfedb.Name.Local == "\u0077\u0065\u0069\u0067\u0068\u0074" {
			_gdecd, _gedba := _cfedb.Value, error(nil)
			if _gedba != nil {
				return _gedba
			}
			_cecdaa.WeightAttr = &_gdecd
			continue
		}
		if _cfedb.Name.Local == "\u0074\u0069\u006d\u0065" {
			_fefbfd, _gdgbd := _cfedb.Value, error(nil)
			if _gdgbd != nil {
				return _gdgbd
			}
			_cecdaa.TimeAttr = &_fefbfd
			continue
		}
	}
	for {
		_babga, _gbcgf := d.Token()
		if _gbcgf != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0050\u0043\u0044K\u0050\u0049\u003a\u0020\u0025\u0073", _gbcgf)
		}
		if _gaaag, _bffgf := _babga.(_b.EndElement); _bffgf && _gaaag.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_TableParts and its children
func (_dggdb *CT_TableParts) Validate() error {
	return _dggdb.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073")
}
func (_dgdbc *CT_OleItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbaebg := range start.Attr {
		if _dbaebg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abgef, _fdfbe := _dbaebg.Value, error(nil)
			if _fdfbe != nil {
				return _fdfbe
			}
			_dgdbc.NameAttr = _abgef
			continue
		}
		if _dbaebg.Name.Local == "\u0069\u0063\u006f\u006e" {
			_eddaa, _fgfdc := _g.ParseBool(_dbaebg.Value)
			if _fgfdc != nil {
				return _fgfdc
			}
			_dgdbc.IconAttr = &_eddaa
			continue
		}
		if _dbaebg.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_edbdd, _gbcbgb := _g.ParseBool(_dbaebg.Value)
			if _gbcbgb != nil {
				return _gbcbgb
			}
			_dgdbc.AdviseAttr = &_edbdd
			continue
		}
		if _dbaebg.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_egcdf, _ffbda := _g.ParseBool(_dbaebg.Value)
			if _ffbda != nil {
				return _ffbda
			}
			_dgdbc.PreferPicAttr = &_egcdf
			continue
		}
	}
	for {
		_daaab, _dfgfe := d.Token()
		if _dfgfe != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u003a\u0020%\u0073", _dfgfe)
		}
		if _gecec, _dfddb := _daaab.(_b.EndElement); _dfddb && _gecec.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_CellWatches and its children
func (_gbec *CT_CellWatches) Validate() error {
	return _gbec.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073")
}
func (_bcgge *ST_CfvoType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbdac, _fadgc := d.Token()
	if _fadgc != nil {
		return _fadgc
	}
	if _ggfaeg, _ecgfd := _bbdac.(_b.EndElement); _ecgfd && _ggfaeg.Name == start.Name {
		*_bcgge = 1
		return nil
	}
	if _cfecee, _cbfab := _bbdac.(_b.CharData); !_cbfab {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbdac)
	} else {
		switch string(_cfecee) {
		case "":
			*_bcgge = 0
		case "\u006e\u0075\u006d":
			*_bcgge = 1
		case "\u0070e\u0072\u0063\u0065\u006e\u0074":
			*_bcgge = 2
		case "\u006d\u0061\u0078":
			*_bcgge = 3
		case "\u006d\u0069\u006e":
			*_bcgge = 4
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_bcgge = 5
		case "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065":
			*_bcgge = 6
		}
	}
	_bbdac, _fadgc = d.Token()
	if _fadgc != nil {
		return _fadgc
	}
	if _accdfe, _gefaeg := _bbdac.(_b.EndElement); _gefaeg && _accdfe.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbdac)
}

// Validate validates the CT_TablePart and its children
func (_cfffed *CT_TablePart) Validate() error {
	return _cfffed.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074")
}
func (_fefcd *CT_ProtectedRange) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edefe := range start.Attr {
		if _edefe.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_cbdgba, _dcgbg := _edefe.Value, error(nil)
			if _dcgbg != nil {
				return _dcgbg
			}
			_fefcd.PasswordAttr = &_cbdgba
			continue
		}
		if _edefe.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_bebfa, _egeaee := ParseSliceST_Sqref(_edefe.Value)
			if _egeaee != nil {
				return _egeaee
			}
			_fefcd.SqrefAttr = _bebfa
			continue
		}
		if _edefe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcaca, _gcdbec := _edefe.Value, error(nil)
			if _gcdbec != nil {
				return _gcdbec
			}
			_fefcd.NameAttr = _dcaca
			continue
		}
		if _edefe.Name.Local == "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072" {
			_cacdd, _gfgbe := _edefe.Value, error(nil)
			if _gfgbe != nil {
				return _gfgbe
			}
			_fefcd.SecurityDescriptorAttr = &_cacdd
			continue
		}
		if _edefe.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_gdbfbg, _bgad := _edefe.Value, error(nil)
			if _bgad != nil {
				return _bgad
			}
			_fefcd.AlgorithmNameAttr = &_gdbfbg
			continue
		}
		if _edefe.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_fefeb, _faded := _edefe.Value, error(nil)
			if _faded != nil {
				return _faded
			}
			_fefcd.HashValueAttr = &_fefeb
			continue
		}
		if _edefe.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_cagbb, _eaaec := _edefe.Value, error(nil)
			if _eaaec != nil {
				return _eaaec
			}
			_fefcd.SaltValueAttr = &_cagbb
			continue
		}
		if _edefe.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_bfedg, _egecg := _g.ParseUint(_edefe.Value, 10, 32)
			if _egecg != nil {
				return _egecg
			}
			_ffga := uint32(_bfedg)
			_fefcd.SpinCountAttr = &_ffga
			continue
		}
	}
_eadfed:
	for {
		_caagd, _ccccg := d.Token()
		if _ccccg != nil {
			return _ccccg
		}
		switch _dfbab := _caagd.(type) {
		case _b.StartElement:
			switch _dfbab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}:
				var _feadff string
				if _bgadg := d.DecodeElement(&_feadff, &_dfbab); _bgadg != nil {
					return _bgadg
				}
				_fefcd.SecurityDescriptor = append(_fefcd.SecurityDescriptor, _feadff)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0020\u0025\u0076", _dfbab.Name)
				if _ffedb := d.Skip(); _ffedb != nil {
					return _ffedb
				}
			}
		case _b.EndElement:
			break _eadfed
		case _b.CharData:
		}
	}
	return nil
}
func (_eccba *ST_RefMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agdgdf, _ggeadc := d.Token()
	if _ggeadc != nil {
		return _ggeadc
	}
	if _efedd, _dccdcf := _agdgdf.(_b.EndElement); _dccdcf && _efedd.Name == start.Name {
		*_eccba = 1
		return nil
	}
	if _accea, _bbddd := _agdgdf.(_b.CharData); !_bbddd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdgdf)
	} else {
		switch string(_accea) {
		case "":
			*_eccba = 0
		case "\u0041\u0031":
			*_eccba = 1
		case "\u0052\u0031\u0043\u0031":
			*_eccba = 2
		}
	}
	_agdgdf, _ggeadc = d.Token()
	if _ggeadc != nil {
		return _ggeadc
	}
	if _fdfad, _eegaa := _agdgdf.(_b.EndElement); _eegaa && _fdfad.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdgdf)
}
func (_befdad *CT_ExternalReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fafgb := range start.Attr {
		if _fafgb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fafgb.Name.Local == "\u0069\u0064" || _fafgb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fafgb.Name.Local == "\u0069\u0064" {
			_gcbec, _fbdcd := _fafgb.Value, error(nil)
			if _fbdcd != nil {
				return _fbdcd
			}
			_befdad.IdAttr = _gcbec
			continue
		}
	}
	for {
		_cefbf, _eaeaa := d.Token()
		if _eaeaa != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _eaeaa)
		}
		if _dadgb, _cgeaa := _cefbf.(_b.EndElement); _cgeaa && _dadgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_caec *CT_FunctionGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _caec.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_caec.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ProtectedRanges and its children, prefixing error messages with path
func (_gggee *CT_ProtectedRanges) ValidateWithPath(path string) error {
	for _dagef, _faada := range _gggee.ProtectedRange {
		if _egbdg := _faada.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0050\u0072ot\u0065c\u0074\u0065\u0064\u0052\u0061n\u0067\u0065\u005b\u0025\u0064\u005d", path, _dagef)); _egbdg != nil {
			return _egbdg
		}
	}
	return nil
}
func NewCT_DataField() *CT_DataField { _ggde := &CT_DataField{}; return _ggde }
func (_ddceg *CT_Fills) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddceg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ddceg.CountAttr)})
	}
	e.EncodeToken(start)
	if _ddceg.Fill != nil {
		_baebb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u006c"}}
		for _, _ffgga := range _ddceg.Fill {
			e.EncodeElement(_ffgga, _baebb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FileVersion struct {

	// Application Name
	AppNameAttr *string

	// Last Edited Version
	LastEditedAttr *string

	// Lowest Edited Version
	LowestEditedAttr *string

	// Build Version
	RupBuildAttr *string

	// Code Name
	CodeNameAttr *string
}
type ST_TargetScreenSize byte

func (_febfd *CT_DataValidations) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebca := range start.Attr {
		if _bebca.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073" {
			_fbfg, _gbga := _g.ParseBool(_bebca.Value)
			if _gbga != nil {
				return _gbga
			}
			_febfd.DisablePromptsAttr = &_fbfg
			continue
		}
		if _bebca.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_ebadg, _eddb := _g.ParseUint(_bebca.Value, 10, 32)
			if _eddb != nil {
				return _eddb
			}
			_baebf := uint32(_ebadg)
			_febfd.XWindowAttr = &_baebf
			continue
		}
		if _bebca.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_agdee, _fbcc := _g.ParseUint(_bebca.Value, 10, 32)
			if _fbcc != nil {
				return _fbcc
			}
			_gfgd := uint32(_agdee)
			_febfd.YWindowAttr = &_gfgd
			continue
		}
		if _bebca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcaae, _eeaa := _g.ParseUint(_bebca.Value, 10, 32)
			if _eeaa != nil {
				return _eeaa
			}
			_afga := uint32(_bcaae)
			_febfd.CountAttr = &_afga
			continue
		}
	}
_bcgee:
	for {
		_cbbbe, _cccad := d.Token()
		if _cccad != nil {
			return _cccad
		}
		switch _cceed := _cbbbe.(type) {
		case _b.StartElement:
			switch _cceed.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}:
				_ecfc := NewCT_DataValidation()
				if _adga := d.DecodeElement(_ecfc, &_cceed); _adga != nil {
					return _adga
				}
				_febfd.DataValidation = append(_febfd.DataValidation, _ecfc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061l\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _cceed.Name)
				if _gebeb := d.Skip(); _gebeb != nil {
					return _gebeb
				}
			}
		case _b.EndElement:
			break _bcgee
		case _b.CharData:
		}
	}
	return nil
}

type CT_BookViews struct {

	// Workbook View
	WorkbookView []*CT_BookView
}

func (_abeecf ST_FormatAction) String() string {
	switch _abeecf {
	case 0:
		return ""
	case 1:
		return "\u0062\u006c\u0061n\u006b"
	case 2:
		return "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case 3:
		return "\u0064\u0072\u0069l\u006c"
	case 4:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return ""
}
func (_agdf *CT_DataValidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agdf.TypeAttr != ST_DataValidationTypeUnset {
		_fgadg, _cfdcb := _agdf.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _cfdcb != nil {
			return _cfdcb
		}
		start.Attr = append(start.Attr, _fgadg)
	}
	if _agdf.ErrorStyleAttr != ST_DataValidationErrorStyleUnset {
		_fgbe, _bbbgd := _agdf.ErrorStyleAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0053\u0074\u0079\u006c\u0065"})
		if _bbbgd != nil {
			return _bbbgd
		}
		start.Attr = append(start.Attr, _fgbe)
	}
	if _agdf.ImeModeAttr != ST_DataValidationImeModeUnset {
		_fgfdb, _gcfe := _agdf.ImeModeAttr.MarshalXMLAttr(_b.Name{Local: "\u0069m\u0065\u004d\u006f\u0064\u0065"})
		if _gcfe != nil {
			return _gcfe
		}
		start.Attr = append(start.Attr, _fgfdb)
	}
	if _agdf.OperatorAttr != ST_DataValidationOperatorUnset {
		_efgbb, _gagg := _agdf.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _gagg != nil {
			return _gagg
		}
		start.Attr = append(start.Attr, _efgbb)
	}
	if _agdf.AllowBlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0042\u006c\u0061\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdf.AllowBlankAttr))})
	}
	if _agdf.ShowDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdf.ShowDropDownAttr))})
	}
	if _agdf.ShowInputMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0049\u006ep\u0075\u0074\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdf.ShowInputMessageAttr))})
	}
	if _agdf.ShowErrorMessageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0045\u0072r\u006f\u0072\u004d\u0065\u0073\u0073\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdf.ShowErrorMessageAttr))})
	}
	if _agdf.ErrorTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072\u006f\u0072\u0054\u0069\u0074\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_agdf.ErrorTitleAttr)})
	}
	if _agdf.ErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_agdf.ErrorAttr)})
	}
	if _agdf.PromptTitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u006f\u006d\u0070\u0074\u0054\u0069\u0074\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_agdf.PromptTitleAttr)})
	}
	if _agdf.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_agdf.PromptAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", _agdf.SqrefAttr)})
	e.EncodeToken(start)
	if _agdf.Formula1 != nil {
		_bbcde := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0031"}}
		_f.AddPreserveSpaceAttr(&_bbcde, *_agdf.Formula1)
		e.EncodeElement(_agdf.Formula1, _bbcde)
	}
	if _agdf.Formula2 != nil {
		_fgdde := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061\u0032"}}
		_f.AddPreserveSpaceAttr(&_fgdde, *_agdf.Formula2)
		e.EncodeElement(_agdf.Formula2, _fgdde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abae *CT_Filters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abae.BlankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061n\u006b"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abae.BlankAttr))})
	}
	if _abae.CalendarTypeAttr != _ff.ST_CalendarTypeUnset {
		_acae, _abfgc := _abae.CalendarTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065"})
		if _abfgc != nil {
			return _abfgc
		}
		start.Attr = append(start.Attr, _acae)
	}
	e.EncodeToken(start)
	if _abae.Filter != nil {
		_fcceb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0069\u006c\u0074\u0065r"}}
		for _, _eeecf := range _abae.Filter {
			e.EncodeElement(_eeecf, _fcceb)
		}
	}
	if _abae.DateGroupItem != nil {
		_cgegc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}}
		for _, _cfdca := range _abae.DateGroupItem {
			e.EncodeElement(_cfdca, _cgegc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ddaaga ST_PaneState) ValidateWithPath(path string) error {
	switch _ddaaga {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddaaga))
	}
	return nil
}
func NewMetadata() *Metadata {
	_bbcedg := &Metadata{}
	_bbcedg.CT_Metadata = *NewCT_Metadata()
	return _bbcedg
}

// Validate validates the CT_SheetIdMap and its children
func (_cdgedg *CT_SheetIdMap) Validate() error {
	return _cdgedg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070")
}

type AG_AutoFormat struct {
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

// ValidateWithPath validates the CT_Stylesheet and its children, prefixing error messages with path
func (_fagbc *CT_Stylesheet) ValidateWithPath(path string) error {
	if _fagbc.NumFmts != nil {
		if _afagb := _fagbc.NumFmts.ValidateWithPath(path + "\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u0073"); _afagb != nil {
			return _afagb
		}
	}
	if _fagbc.Fonts != nil {
		if _fcacff := _fagbc.Fonts.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0073"); _fcacff != nil {
			return _fcacff
		}
	}
	if _fagbc.Fills != nil {
		if _gbeed := _fagbc.Fills.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0073"); _gbeed != nil {
			return _gbeed
		}
	}
	if _fagbc.Borders != nil {
		if _ebdcf := _fagbc.Borders.ValidateWithPath(path + "\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u0073"); _ebdcf != nil {
			return _ebdcf
		}
	}
	if _fagbc.CellStyleXfs != nil {
		if _bfbfb := _fagbc.CellStyleXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073"); _bfbfb != nil {
			return _bfbfb
		}
	}
	if _fagbc.CellXfs != nil {
		if _fbgdc := _fagbc.CellXfs.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0058\u0066\u0073"); _fbgdc != nil {
			return _fbgdc
		}
	}
	if _fagbc.CellStyles != nil {
		if _aedgfc := _fagbc.CellStyles.ValidateWithPath(path + "/\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073"); _aedgfc != nil {
			return _aedgfc
		}
	}
	if _fagbc.Dxfs != nil {
		if _efegc := _fagbc.Dxfs.ValidateWithPath(path + "\u002f\u0044\u0078f\u0073"); _efegc != nil {
			return _efegc
		}
	}
	if _fagbc.TableStyles != nil {
		if _daabc := _fagbc.TableStyles.ValidateWithPath(path + "\u002f\u0054\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0073"); _daabc != nil {
			return _daabc
		}
	}
	if _fagbc.Colors != nil {
		if _eadagc := _fagbc.Colors.ValidateWithPath(path + "\u002fC\u006f\u006c\u006f\u0072\u0073"); _eadagc != nil {
			return _eadagc
		}
	}
	if _fagbc.ExtLst != nil {
		if _deafd := _fagbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _deafd != nil {
			return _deafd
		}
	}
	return nil
}

// Validate validates the CT_RevisionFormatting and its children
func (_abecf *CT_RevisionFormatting) Validate() error {
	return _abecf.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

// Validate validates the CT_RevisionInsertSheet and its children
func (_begaa *CT_RevisionInsertSheet) Validate() error {
	return _begaa.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074")
}
func (_dffab *CT_Consolidation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dffab.AutoPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dffab.AutoPageAttr))})
	}
	e.EncodeToken(start)
	if _dffab.Pages != nil {
		_dfgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0073"}}
		e.EncodeElement(_dffab.Pages, _dfgf)
	}
	_ffce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073"}}
	e.EncodeElement(_dffab.RangeSets, _ffce)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RangeSets and its children
func (_edegd *CT_RangeSets) Validate() error {
	return _edegd.ValidateWithPath("\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073")
}

type CT_WebPr struct {

	// XML Source
	XmlAttr *bool

	// Import XML Source Data
	SourceDataAttr *bool

	// Parse PRE
	ParsePreAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Use First Row
	FirstRowAttr *bool

	// Created in Excel 97
	Xl97Attr *bool

	// Dates as Text
	TextDatesAttr *bool

	// Refreshed in Excel 2000
	Xl2000Attr *bool

	// URL
	UrlAttr *string

	// Web Post
	PostAttr *string

	// HTML Tables Only
	HtmlTablesAttr *bool

	// HTML Formatting Handling
	HtmlFormatAttr ST_HtmlFmt

	// Edit Query URL
	EditPageAttr *string

	// Tables
	Tables *CT_Tables
}

func (_aeagb ST_SortType) Validate() error { return _aeagb.ValidateWithPath("") }
func (_ccaab *CT_RowHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebafa := range start.Attr {
		if _ebafa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbfage, _fedfa := _g.ParseUint(_ebafa.Value, 10, 32)
			if _fedfa != nil {
				return _fedfa
			}
			_aeacaa := uint32(_gbfage)
			_ccaab.CountAttr = &_aeacaa
			continue
		}
	}
_bbdfd:
	for {
		_gecgb, _ebefdb := d.Token()
		if _ebefdb != nil {
			return _ebefdb
		}
		switch _effeda := _gecgb.(type) {
		case _b.StartElement:
			switch _effeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_befgc := NewCT_HierarchyUsage()
				if _eecda := d.DecodeElement(_befgc, &_effeda); _eecda != nil {
					return _eecda
				}
				_ccaab.RowHierarchyUsage = append(_ccaab.RowHierarchyUsage, _befgc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u006f\u0077\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _effeda.Name)
				if _adega := d.Skip(); _adega != nil {
					return _adega
				}
			}
		case _b.EndElement:
			break _bbdfd
		case _b.CharData:
		}
	}
	return nil
}
func (_agbda *CT_PivotHierarchy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eeegda := range start.Attr {
		if _eeegda.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_beeebf, _gafee := _g.ParseBool(_eeegda.Value)
			if _gafee != nil {
				return _gafee
			}
			_agbda.DragToDataAttr = &_beeebf
			continue
		}
		if _eeegda.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_affgf, _adfdg := _g.ParseBool(_eeegda.Value)
			if _adfdg != nil {
				return _adfdg
			}
			_agbda.OutlineAttr = &_affgf
			continue
		}
		if _eeegda.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_gacfc, _bgfdgc := _g.ParseBool(_eeegda.Value)
			if _bgfdgc != nil {
				return _bgfdgc
			}
			_agbda.SubtotalTopAttr = &_gacfc
			continue
		}
		if _eeegda.Name.Local == "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_bbbda, _cgcbd := _g.ParseBool(_eeegda.Value)
			if _cgcbd != nil {
				return _cgcbd
			}
			_agbda.ShowInFieldListAttr = &_bbbda
			continue
		}
		if _eeegda.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_afgcg, _aaeg := _g.ParseBool(_eeegda.Value)
			if _aaeg != nil {
				return _aaeg
			}
			_agbda.DragToRowAttr = &_afgcg
			continue
		}
		if _eeegda.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_bfbbfb, _efadd := _g.ParseBool(_eeegda.Value)
			if _efadd != nil {
				return _efadd
			}
			_agbda.DragToColAttr = &_bfbbfb
			continue
		}
		if _eeegda.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_fffea, _edbbd := _g.ParseBool(_eeegda.Value)
			if _edbbd != nil {
				return _edbbd
			}
			_agbda.DragToPageAttr = &_fffea
			continue
		}
		if _eeegda.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_edeega, _gdcef := _g.ParseBool(_eeegda.Value)
			if _gdcef != nil {
				return _gdcef
			}
			_agbda.MultipleItemSelectionAllowedAttr = &_edeega
			continue
		}
		if _eeegda.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_ecedae, _ceddce := _g.ParseBool(_eeegda.Value)
			if _ceddce != nil {
				return _ceddce
			}
			_agbda.DragOffAttr = &_ecedae
			continue
		}
		if _eeegda.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dafgcc, _adbdc := _g.ParseBool(_eeegda.Value)
			if _adbdc != nil {
				return _adbdc
			}
			_agbda.IncludeNewItemsInFilterAttr = &_dafgcc
			continue
		}
		if _eeegda.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_afddf, _fgaed := _eeegda.Value, error(nil)
			if _fgaed != nil {
				return _fgaed
			}
			_agbda.CaptionAttr = &_afddf
			continue
		}
	}
_adbefg:
	for {
		_gbdbea, _ccdeg := d.Token()
		if _ccdeg != nil {
			return _ccdeg
		}
		switch _ggfegc := _gbdbea.(type) {
		case _b.StartElement:
			switch _ggfegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070\u0073"}:
				_agbda.Mps = NewCT_MemberProperties()
				if _bcgag := d.DecodeElement(_agbda.Mps, &_ggfegc); _bcgag != nil {
					return _bcgag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006de\u006d\u0062\u0065\u0072\u0073"}:
				_gcgg := NewCT_Members()
				if _geeee := d.DecodeElement(_gcgg, &_ggfegc); _geeee != nil {
					return _geeee
				}
				_agbda.Members = append(_agbda.Members, _gcgg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agbda.ExtLst = NewCT_ExtensionList()
				if _dgcee := d.DecodeElement(_agbda.ExtLst, &_ggfegc); _dgcee != nil {
					return _dgcee
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079\u0020\u0025\u0076", _ggfegc.Name)
				if _ggadd := d.Skip(); _ggadd != nil {
					return _ggadd
				}
			}
		case _b.EndElement:
			break _adbefg
		case _b.CharData:
		}
	}
	return nil
}
func (_bcgda *CT_IgnoredErrors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gcaf:
	for {
		_cgbga, _cgbae := d.Token()
		if _cgbae != nil {
			return _cgbae
		}
		switch _ddcb := _cgbga.(type) {
		case _b.StartElement:
			switch _ddcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}:
				_feefc := NewCT_IgnoredError()
				if _adcea := d.DecodeElement(_feefc, &_ddcb); _adcea != nil {
					return _adcea
				}
				_bcgda.IgnoredError = append(_bcgda.IgnoredError, _feefc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcgda.ExtLst = NewCT_ExtensionList()
				if _eaaee := d.DecodeElement(_bcgda.ExtLst, &_ddcb); _eaaee != nil {
					return _eaaee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073\u0020\u0025v", _ddcb.Name)
				if _agddg := d.Skip(); _agddg != nil {
					return _agddg
				}
			}
		case _b.EndElement:
			break _gcaf
		case _b.CharData:
		}
	}
	return nil
}
func (_aefg *CT_Filter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _befcd := range start.Attr {
		if _befcd.Name.Local == "\u0076\u0061\u006c" {
			_ecae, _efggd := _befcd.Value, error(nil)
			if _efggd != nil {
				return _efggd
			}
			_aefg.ValAttr = &_ecae
			continue
		}
	}
	for {
		_gcdfg, _gdfd := d.Token()
		if _gdfd != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0046\u0069\u006ct\u0065\u0072\u003a\u0020\u0025\u0073", _gdfd)
		}
		if _bfefa, _bgbc := _gcdfg.(_b.EndElement); _bgbc && _bfefa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fagfe *CT_Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _fagfe.SheetPr != nil {
		_afbaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_fagfe.SheetPr, _afbaff)
	}
	if _fagfe.Dimension != nil {
		_beafgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_fagfe.Dimension, _beafgb)
	}
	if _fagfe.SheetViews != nil {
		_dgecf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fagfe.SheetViews, _dgecf)
	}
	if _fagfe.SheetFormatPr != nil {
		_gedec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_fagfe.SheetFormatPr, _gedec)
	}
	if _fagfe.Cols != nil {
		_eaabc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _gbaeb := range _fagfe.Cols {
			e.EncodeElement(_gbaeb, _eaabc)
		}
	}
	_aebaea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_fagfe.SheetData, _aebaea)
	if _fagfe.SheetCalcPr != nil {
		_bfgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072"}}
		e.EncodeElement(_fagfe.SheetCalcPr, _bfgdg)
	}
	if _fagfe.SheetProtection != nil {
		_fccbee := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_fagfe.SheetProtection, _fccbee)
	}
	if _fagfe.ProtectedRanges != nil {
		_babdca := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073"}}
		e.EncodeElement(_fagfe.ProtectedRanges, _babdca)
	}
	if _fagfe.Scenarios != nil {
		_aecdbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"}}
		e.EncodeElement(_fagfe.Scenarios, _aecdbc)
	}
	if _fagfe.AutoFilter != nil {
		_cdbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_fagfe.AutoFilter, _cdbcc)
	}
	if _fagfe.SortState != nil {
		_aggagf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_fagfe.SortState, _aggagf)
	}
	if _fagfe.DataConsolidate != nil {
		_bdcbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_fagfe.DataConsolidate, _bdcbc)
	}
	if _fagfe.CustomSheetViews != nil {
		_bfbed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_fagfe.CustomSheetViews, _bfbed)
	}
	if _fagfe.MergeCells != nil {
		_afafb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}}
		e.EncodeElement(_fagfe.MergeCells, _afafb)
	}
	if _fagfe.PhoneticPr != nil {
		_cfade := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_fagfe.PhoneticPr, _cfade)
	}
	if _fagfe.ConditionalFormatting != nil {
		_geadb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _cdcebg := range _fagfe.ConditionalFormatting {
			e.EncodeElement(_cdcebg, _geadb)
		}
	}
	if _fagfe.DataValidations != nil {
		_fbgagc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fagfe.DataValidations, _fbgagc)
	}
	if _fagfe.Hyperlinks != nil {
		_bdbgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}}
		e.EncodeElement(_fagfe.Hyperlinks, _bdbgb)
	}
	if _fagfe.PrintOptions != nil {
		_gababa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_fagfe.PrintOptions, _gababa)
	}
	if _fagfe.PageMargins != nil {
		_dfafa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_fagfe.PageMargins, _dfafa)
	}
	if _fagfe.PageSetup != nil {
		_ebbge := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_fagfe.PageSetup, _ebbge)
	}
	if _fagfe.HeaderFooter != nil {
		_cdefc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_fagfe.HeaderFooter, _cdefc)
	}
	if _fagfe.RowBreaks != nil {
		_aebec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fagfe.RowBreaks, _aebec)
	}
	if _fagfe.ColBreaks != nil {
		_bebbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_fagfe.ColBreaks, _bebbe)
	}
	if _fagfe.CustomProperties != nil {
		_afgec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_fagfe.CustomProperties, _afgec)
	}
	if _fagfe.CellWatches != nil {
		_fecgdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_fagfe.CellWatches, _fecgdf)
	}
	if _fagfe.IgnoredErrors != nil {
		_bcdce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}}
		e.EncodeElement(_fagfe.IgnoredErrors, _bcdce)
	}
	if _fagfe.SmartTags != nil {
		_ddcde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
		e.EncodeElement(_fagfe.SmartTags, _ddcde)
	}
	if _fagfe.Drawing != nil {
		_cbege := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fagfe.Drawing, _cbege)
	}
	if _fagfe.LegacyDrawing != nil {
		_ecdfea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_fagfe.LegacyDrawing, _ecdfea)
	}
	if _fagfe.LegacyDrawingHF != nil {
		_bgbedf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fagfe.LegacyDrawingHF, _bgbedf)
	}
	if _fagfe.DrawingHF != nil {
		_bfdcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_fagfe.DrawingHF, _bfdcb)
	}
	if _fagfe.Picture != nil {
		_ffafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_fagfe.Picture, _ffafc)
	}
	if _fagfe.OleObjects != nil {
		_cbabe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_fagfe.OleObjects, _cbabe)
	}
	if _fagfe.Controls != nil {
		_eggcff := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}}
		e.EncodeElement(_fagfe.Controls, _eggcff)
	}
	if _fagfe.WebPublishItems != nil {
		_geffa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_fagfe.WebPublishItems, _geffa)
	}
	if _fagfe.TableParts != nil {
		_gccaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}}
		e.EncodeElement(_fagfe.TableParts, _gccaf)
	}
	if _fagfe.ExtLst != nil {
		_deafg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fagfe.ExtLst, _deafg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ebcee ST_MdxFunctionType) String() string {
	switch _ebcee {
	case 0:
		return ""
	case 1:
		return "\u006d"
	case 2:
		return "\u0076"
	case 3:
		return "\u0073"
	case 4:
		return "\u0063"
	case 5:
		return "\u0072"
	case 6:
		return "\u0070"
	case 7:
		return "\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_RevisionRowColumn and its children, prefixing error messages with path
func (_febfa *CT_RevisionRowColumn) ValidateWithPath(path string) error {
	if _febfa.ActionAttr == ST_rwColActionTypeUnset {
		return _a.Errorf("\u0025\u0073\u002fAc\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072\u0020i\u0073 \u0061 \u006da\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdadfaf := _febfa.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fdadfaf != nil {
		return _fdadfaf
	}
	for _bdaab, _dcagf := range _febfa.Undo {
		if _ecbef := _dcagf.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0055\u006e\u0064\u006f\u005b\u0025\u0064\u005d", path, _bdaab)); _ecbef != nil {
			return _ecbef
		}
	}
	for _cbgac, _eeadeb := range _febfa.Rcc {
		if _cbgdgg := _eeadeb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u0063\u0063\u005b\u0025\u0064\u005d", path, _cbgac)); _cbgdgg != nil {
			return _cbgdgg
		}
	}
	for _ccfgb, _cgaed := range _febfa.Rfmt {
		if _defdg := _cgaed.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0052\u0066\u006d\u0074\u005b\u0025\u0064\u005d", path, _ccfgb)); _defdg != nil {
			return _defdg
		}
	}
	return nil
}

type CT_RElt struct {

	// Run Properties
	RPr *CT_RPrElt

	// Text
	T string
}
type CT_LegacyDrawing struct{ IdAttr string }

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_ebfee *CT_GradientStop) ValidateWithPath(path string) error {
	if _gaece := _ebfee.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _gaece != nil {
		return _gaece
	}
	return nil
}

// ValidateWithPath validates the CT_FieldGroup and its children, prefixing error messages with path
func (_cffge *CT_FieldGroup) ValidateWithPath(path string) error {
	if _cffge.RangePr != nil {
		if _gecea := _cffge.RangePr.ValidateWithPath(path + "\u002f\u0052\u0061\u006e\u0067\u0065\u0050\u0072"); _gecea != nil {
			return _gecea
		}
	}
	if _cffge.DiscretePr != nil {
		if _afac := _cffge.DiscretePr.ValidateWithPath(path + "/\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"); _afac != nil {
			return _afac
		}
	}
	if _cffge.GroupItems != nil {
		if _bdfbf := _cffge.GroupItems.ValidateWithPath(path + "/\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"); _bdfbf != nil {
			return _bdfbf
		}
	}
	return nil
}
func NewCT_TableStyles() *CT_TableStyles { _ddbbb := &CT_TableStyles{}; return _ddbbb }
func (_bebfcb *Revisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003ar\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073"
	return _bebfcb.CT_Revisions.MarshalXML(e, start)
}
func (_ggebf *CT_RevisionMove) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acccc := range start.Attr {
		if _acccc.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_bbfedd, _dcdga := _g.ParseUint(_acccc.Value, 10, 32)
			if _dcdga != nil {
				return _dcdga
			}
			_ggebf.SheetIdAttr = uint32(_bbfedd)
			continue
		}
		if _acccc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065" {
			_cbefg, _bcgbea := _acccc.Value, error(nil)
			if _bcgbea != nil {
				return _bcgbea
			}
			_ggebf.SourceAttr = _cbefg
			continue
		}
		if _acccc.Name.Local == "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e" {
			_aadcb, _ggfdc := _acccc.Value, error(nil)
			if _ggfdc != nil {
				return _ggfdc
			}
			_ggebf.DestinationAttr = _aadcb
			continue
		}
		if _acccc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_gcefc, _gfggfe := _g.ParseUint(_acccc.Value, 10, 32)
			if _gfggfe != nil {
				return _gfggfe
			}
			_aafgc := uint32(_gcefc)
			_ggebf.SourceSheetIdAttr = &_aafgc
			continue
		}
		if _acccc.Name.Local == "\u0072\u0049\u0064" {
			_aeabab, _gaecdd := _g.ParseUint(_acccc.Value, 10, 32)
			if _gaecdd != nil {
				return _gaecdd
			}
			_begdb := uint32(_aeabab)
			_ggebf.RIdAttr = &_begdb
			continue
		}
		if _acccc.Name.Local == "\u0075\u0061" {
			_cecga, _ceggcc := _g.ParseBool(_acccc.Value)
			if _ceggcc != nil {
				return _ceggcc
			}
			_ggebf.UaAttr = &_cecga
			continue
		}
		if _acccc.Name.Local == "\u0072\u0061" {
			_gbfec, _ebbeg := _g.ParseBool(_acccc.Value)
			if _ebbeg != nil {
				return _ebbeg
			}
			_ggebf.RaAttr = &_gbfec
			continue
		}
	}
_gagged:
	for {
		_febbcg, _bcgede := d.Token()
		if _bcgede != nil {
			return _bcgede
		}
		switch _feebg := _febbcg.(type) {
		case _b.StartElement:
			switch _feebg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_gbfae := NewCT_UndoInfo()
				if _cegad := d.DecodeElement(_gbfae, &_feebg); _cegad != nil {
					return _cegad
				}
				_ggebf.Undo = append(_ggebf.Undo, _gbfae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_fbacf := NewCT_RevisionCellChange()
				if _ecbdf := d.DecodeElement(_fbacf, &_feebg); _ecbdf != nil {
					return _ecbdf
				}
				_ggebf.Rcc = append(_ggebf.Rcc, _fbacf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_degeb := NewCT_RevisionFormatting()
				if _fgaba := d.DecodeElement(_degeb, &_feebg); _fgaba != nil {
					return _fgaba
				}
				_ggebf.Rfmt = append(_ggebf.Rfmt, _degeb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065\u0020\u0025\u0076", _feebg.Name)
				if _cceacc := d.Skip(); _cceacc != nil {
					return _cceacc
				}
			}
		case _b.EndElement:
			break _gagged
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OleObjects and its children
func (_gdfbfb *CT_OleObjects) Validate() error {
	return _gdfbfb.ValidateWithPath("\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073")
}

type ST_Type byte

// ValidateWithPath validates the CT_TableStyleElement and its children, prefixing error messages with path
func (_aeaafc *CT_TableStyleElement) ValidateWithPath(path string) error {
	if _aeaafc.TypeAttr == ST_TableStyleTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bcgdada := _aeaafc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bcgdada != nil {
		return _bcgdada
	}
	return nil
}

// Validate validates the CT_RowFields and its children
func (_fdbfe *CT_RowFields) Validate() error {
	return _fdbfe.ValidateWithPath("\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073")
}

// ValidateWithPath validates the CT_PageItem and its children, prefixing error messages with path
func (_fedgf *CT_PageItem) ValidateWithPath(path string) error { return nil }
func (_efdaad *CT_Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efdaad.ConformanceAttr != _ff.ST_ConformanceClassUnset {
		_dedgeb, _efegee := _efdaad.ConformanceAttr.MarshalXMLAttr(_b.Name{Local: "c\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0063\u0065"})
		if _efegee != nil {
			return _efegee
		}
		start.Attr = append(start.Attr, _dedgeb)
	}
	e.EncodeToken(start)
	if _efdaad.FileVersion != nil {
		_gbdafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_efdaad.FileVersion, _gbdafc)
	}
	if _efdaad.FileSharing != nil {
		_ccced := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067"}}
		e.EncodeElement(_efdaad.FileSharing, _ccced)
	}
	if _efdaad.WorkbookPr != nil {
		_beecec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"}}
		e.EncodeElement(_efdaad.WorkbookPr, _beecec)
	}
	if _efdaad.WorkbookProtection != nil {
		_bagef := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0077\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_efdaad.WorkbookProtection, _bagef)
	}
	if _efdaad.BookViews != nil {
		_debdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ab\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_efdaad.BookViews, _debdg)
	}
	_baeaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0065\u0065\u0074s"}}
	e.EncodeElement(_efdaad.Sheets, _baeaa)
	if _efdaad.FunctionGroups != nil {
		_bebfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_efdaad.FunctionGroups, _bebfc)
	}
	if _efdaad.ExternalReferences != nil {
		_fdegf := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0065\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073"}}
		e.EncodeElement(_efdaad.ExternalReferences, _fdegf)
	}
	if _efdaad.DefinedNames != nil {
		_eedge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_efdaad.DefinedNames, _eedge)
	}
	if _efdaad.CalcPr != nil {
		_eeagb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0061\u006c\u0063\u0050r"}}
		e.EncodeElement(_efdaad.CalcPr, _eeagb)
	}
	if _efdaad.OleSize != nil {
		_dbaea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u0053\u0069\u007a\u0065"}}
		e.EncodeElement(_efdaad.OleSize, _dbaea)
	}
	if _efdaad.CustomWorkbookViews != nil {
		_cbgdac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073"}}
		e.EncodeElement(_efdaad.CustomWorkbookViews, _cbgdac)
	}
	if _efdaad.PivotCaches != nil {
		_dggeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073"}}
		e.EncodeElement(_efdaad.PivotCaches, _dggeg)
	}
	if _efdaad.SmartTagPr != nil {
		_ffaed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"}}
		e.EncodeElement(_efdaad.SmartTagPr, _ffaed)
	}
	if _efdaad.SmartTagTypes != nil {
		_cfeef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073"}}
		e.EncodeElement(_efdaad.SmartTagTypes, _cfeef)
	}
	if _efdaad.WebPublishing != nil {
		_bafabf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0077\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067"}}
		e.EncodeElement(_efdaad.WebPublishing, _bafabf)
	}
	if _efdaad.FileRecoveryPr != nil {
		_dcddf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072"}}
		for _, _aacbeb := range _efdaad.FileRecoveryPr {
			e.EncodeElement(_aacbeb, _dcddf)
		}
	}
	if _efdaad.WebPublishObjects != nil {
		_dgecd := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073"}}
		e.EncodeElement(_efdaad.WebPublishObjects, _dgecd)
	}
	if _efdaad.ExtLst != nil {
		_agabaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_efdaad.ExtLst, _agabaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_pivotTableDefinition() *CT_pivotTableDefinition {
	_dbcaf := &CT_pivotTableDefinition{}
	_dbcaf.Location = NewCT_Location()
	return _dbcaf
}
func (_efdag *CT_FieldGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efdag.ParAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_efdag.ParAttr)})
	}
	if _efdag.BaseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_efdag.BaseAttr)})
	}
	e.EncodeToken(start)
	if _efdag.RangePr != nil {
		_babee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0050\u0072"}}
		e.EncodeElement(_efdag.RangePr, _babee)
	}
	if _efdag.DiscretePr != nil {
		_daag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}}
		e.EncodeElement(_efdag.DiscretePr, _daag)
	}
	if _efdag.GroupItems != nil {
		_aegd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_efdag.GroupItems, _aegd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Sst and its children, prefixing error messages with path
func (_aaaecd *Sst) ValidateWithPath(path string) error {
	if _ffgeef := _aaaecd.CT_Sst.ValidateWithPath(path); _ffgeef != nil {
		return _ffgeef
	}
	return nil
}

type ST_HtmlFmt byte

func NewCT_Authors() *CT_Authors { _dd := &CT_Authors{}; return _dd }
func (_fbggfbe ST_Comments) ValidateWithPath(path string) error {
	switch _fbggfbe {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fbggfbe))
	}
	return nil
}
func NewCT_DataConsolidate() *CT_DataConsolidate { _dgdee := &CT_DataConsolidate{}; return _dgdee }
func (_gcaff ST_MdxSetOrder) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gcaff.String(), start)
}

// ValidateWithPath validates the CT_SheetBackgroundPicture and its children, prefixing error messages with path
func (_agefc *CT_SheetBackgroundPicture) ValidateWithPath(path string) error { return nil }
func (_egebaf *VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egebaf.CT_VolTypes = *NewCT_VolTypes()
_gceac:
	for {
		_dccef, _ebebf := d.Token()
		if _ebebf != nil {
			return _ebebf
		}
		switch _fabef := _dccef.(type) {
		case _b.StartElement:
			switch _fabef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_bdege := NewCT_VolType()
				if _eaaac := d.DecodeElement(_bdege, &_fabef); _eaaac != nil {
					return _eaaac
				}
				_egebaf.VolType = append(_egebaf.VolType, _bdege)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_egebaf.ExtLst = NewCT_ExtensionList()
				if _faggeb := d.DecodeElement(_egebaf.ExtLst, &_fabef); _faggeb != nil {
					return _faggeb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _fabef.Name)
				if _gfbfec := d.Skip(); _gfbfec != nil {
					return _gfbfec
				}
			}
		case _b.EndElement:
			break _gceac
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_IconSet() *CT_IconSet { _cgcdd := &CT_IconSet{}; return _cgcdd }
func (_cccffa ST_SourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ebgfee := _b.Attr{}
	_ebgfee.Name = name
	switch _cccffa {
	case ST_SourceTypeUnset:
		_ebgfee.Value = ""
	case ST_SourceTypeWorksheet:
		_ebgfee.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_SourceTypeExternal:
		_ebgfee.Value = "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case ST_SourceTypeConsolidation:
		_ebgfee.Value = "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case ST_SourceTypeScenario:
		_ebgfee.Value = "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return _ebgfee, nil
}
func NewCT_Set() *CT_Set { _adeef := &CT_Set{}; return _adeef }

// Validate validates the CT_OlapPr and its children
func (_dedaf *CT_OlapPr) Validate() error {
	return _dedaf.ValidateWithPath("\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r")
}
func (_gcgbd ST_WebSourceType) String() string {
	switch _gcgbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0065e\u0074"
	case 2:
		return "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case 3:
		return "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case 4:
		return "\u0072\u0061\u006eg\u0065"
	case 5:
		return "\u0063\u0068\u0061r\u0074"
	case 6:
		return "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case 7:
		return "\u0071\u0075\u0065r\u0079"
	case 8:
		return "\u006c\u0061\u0062e\u006c"
	}
	return ""
}
func NewCT_FontName() *CT_FontName { _dfdce := &CT_FontName{}; return _dfdce }
func (_ffeg *ST_MdxKPIProperty) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ffeg = 0
	case "\u0076":
		*_ffeg = 1
	case "\u0067":
		*_ffeg = 2
	case "\u0073":
		*_ffeg = 3
	case "\u0074":
		*_ffeg = 4
	case "\u0077":
		*_ffeg = 5
	case "\u006d":
		*_ffeg = 6
	}
	return nil
}

type CT_RevisionAutoFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Reference
	RefAttr                     string
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

// Validate validates the CT_CellAlignment and its children
func (_eddab *CT_CellAlignment) Validate() error {
	return _eddab.ValidateWithPath("\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074")
}

type CT_DdeItem struct {

	// DDE Name
	NameAttr *string

	// Object Linking TechnologyE
	OleAttr *bool

	// Advise
	AdviseAttr *bool

	// Data is an Image
	PreferPicAttr *bool

	// DDE Name Values
	Values *CT_DdeValues
}

func (_cab *CT_CacheHierarchies) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _babaf := range start.Attr {
		if _babaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_defe, _dbfg := _g.ParseUint(_babaf.Value, 10, 32)
			if _dbfg != nil {
				return _dbfg
			}
			_afe := uint32(_defe)
			_cab.CountAttr = &_afe
			continue
		}
	}
_fcea:
	for {
		_eaec, _cbge := d.Token()
		if _cbge != nil {
			return _cbge
		}
		switch _gebf := _eaec.(type) {
		case _b.StartElement:
			switch _gebf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}:
				_fbe := NewCT_CacheHierarchy()
				if _abbe := d.DecodeElement(_fbe, &_gebf); _abbe != nil {
					return _abbe
				}
				_cab.CacheHierarchy = append(_cab.CacheHierarchy, _fbe)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069er\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0020\u0025\u0076", _gebf.Name)
				if _cedf := d.Skip(); _cedf != nil {
					return _cedf
				}
			}
		case _b.EndElement:
			break _fcea
		case _b.CharData:
		}
	}
	return nil
}
func (_gcbg *CT_Drawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gcbg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gebac ST_UpdateLinks) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cagbe := _b.Attr{}
	_cagbe.Name = name
	switch _gebac {
	case ST_UpdateLinksUnset:
		_cagbe.Value = ""
	case ST_UpdateLinksUserSet:
		_cagbe.Value = "\u0075s\u0065\u0072\u0053\u0065\u0074"
	case ST_UpdateLinksNever:
		_cagbe.Value = "\u006e\u0065\u0076e\u0072"
	case ST_UpdateLinksAlways:
		_cagbe.Value = "\u0061\u006c\u0077\u0061\u0079\u0073"
	}
	return _cagbe, nil
}
func (_bcega *CT_Top10) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdagc := range start.Attr {
		if _fdagc.Name.Local == "\u0074\u006f\u0070" {
			_fdgedc, _deggcf := _g.ParseBool(_fdagc.Value)
			if _deggcf != nil {
				return _deggcf
			}
			_bcega.TopAttr = &_fdgedc
			continue
		}
		if _fdagc.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_dbcge, _fcacd := _g.ParseBool(_fdagc.Value)
			if _fcacd != nil {
				return _fcacd
			}
			_bcega.PercentAttr = &_dbcge
			continue
		}
		if _fdagc.Name.Local == "\u0076\u0061\u006c" {
			_fcegf, _fbfdee := _g.ParseFloat(_fdagc.Value, 64)
			if _fbfdee != nil {
				return _fbfdee
			}
			_bcega.ValAttr = _fcegf
			continue
		}
		if _fdagc.Name.Local == "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l" {
			_dcdfeb, _fafef := _g.ParseFloat(_fdagc.Value, 64)
			if _fafef != nil {
				return _fafef
			}
			_bcega.FilterValAttr = &_dcdfeb
			continue
		}
	}
	for {
		_eaggd, _gabbg := d.Token()
		if _gabbg != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u006f\u0070\u0031\u0030: \u0025\u0073", _gabbg)
		}
		if _caeefc, _bffadg := _eaggd.(_b.EndElement); _bffadg && _caeefc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbccb ST_VerticalAlignment) String() string {
	switch _cbccb {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

type CT_ChartsheetPr struct {

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string
	TabColor     *CT_Color
}

func (_feaab *CT_SheetFormatPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _feaab.BaseColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073e\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_feaab.BaseColWidthAttr)})
	}
	if _feaab.DefaultColWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0043\u006f\u006c\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_feaab.DefaultColWidthAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0052\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", _feaab.DefaultRowHeightAttr)})
	if _feaab.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_feaab.CustomHeightAttr))})
	}
	if _feaab.ZeroHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u0065\u0072\u006f\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_feaab.ZeroHeightAttr))})
	}
	if _feaab.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_feaab.ThickTopAttr))})
	}
	if _feaab.ThickBottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0068\u0069\u0063\u006b\u0042\u006f\u0074\u0074\u006f\u006d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_feaab.ThickBottomAttr))})
	}
	if _feaab.OutlineLevelRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_feaab.OutlineLevelRowAttr)})
	}
	if _feaab.OutlineLevelColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_feaab.OutlineLevelColAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Color struct {

	// Automatic
	AutoAttr *bool

	// Index
	IndexedAttr *uint32

	// Alpha Red Green Blue Color Value
	RgbAttr *string

	// Theme Color
	ThemeAttr *uint32

	// Tint
	TintAttr *float64
}

func NewCT_RevisionInsertSheet() *CT_RevisionInsertSheet {
	_fbeda := &CT_RevisionInsertSheet{}
	return _fbeda
}
func (_cbeec *CT_Parameter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbeec.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.NameAttr)})
	}
	if _cbeec.SqlTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073q\u006c\u0054\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.SqlTypeAttr)})
	}
	if _cbeec.ParameterTypeAttr != ST_ParameterTypeUnset {
		_ggaag, _cdaa := _cbeec.ParameterTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065"})
		if _cdaa != nil {
			return _cdaa
		}
		start.Attr = append(start.Attr, _ggaag)
	}
	if _cbeec.RefreshOnChangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbeec.RefreshOnChangeAttr))})
	}
	if _cbeec.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.PromptAttr)})
	}
	if _cbeec.BooleanAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062o\u006f\u006c\u0065\u0061\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbeec.BooleanAttr))})
	}
	if _cbeec.DoubleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006f\u0075\u0062\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.DoubleAttr)})
	}
	if _cbeec.IntegerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0074\u0065\u0067\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.IntegerAttr)})
	}
	if _cbeec.StringAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.StringAttr)})
	}
	if _cbeec.CellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cbeec.CellAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Colors struct {

	// Color Indexes
	IndexedColors *CT_IndexedColors

	// MRU Colors
	MruColors *CT_MRUColors
}

func (_fcfcd *ST_ParameterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_accbd, _abfefd := d.Token()
	if _abfefd != nil {
		return _abfefd
	}
	if _bfbageb, _gdfee := _accbd.(_b.EndElement); _gdfee && _bfbageb.Name == start.Name {
		*_fcfcd = 1
		return nil
	}
	if _gegbgd, _cefgcd := _accbd.(_b.CharData); !_cefgcd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _accbd)
	} else {
		switch string(_gegbgd) {
		case "":
			*_fcfcd = 0
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_fcfcd = 1
		case "\u0076\u0061\u006cu\u0065":
			*_fcfcd = 2
		case "\u0063\u0065\u006c\u006c":
			*_fcfcd = 3
		}
	}
	_accbd, _abfefd = d.Token()
	if _abfefd != nil {
		return _abfefd
	}
	if _ccfgee, _dfcaf := _accbd.(_b.EndElement); _dfcaf && _ccfgee.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _accbd)
}

type CT_ColorScale struct {

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Color Gradiant Interpolation
	Color []*CT_Color
}
type ST_CfvoType byte

// ValidateWithPath validates the CT_OlapPr and its children, prefixing error messages with path
func (_eaabb *CT_OlapPr) ValidateWithPath(path string) error { return nil }
func (_dcgg *CT_DdeLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0053\u0065\u0072\u0076\u0069\u0063\u0065"}, Value: _a.Sprintf("\u0025\u0076", _dcgg.DdeServiceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0064\u0065\u0054\u006f\u0070\u0069\u0063"}, Value: _a.Sprintf("\u0025\u0076", _dcgg.DdeTopicAttr)})
	e.EncodeToken(start)
	if _dcgg.DdeItems != nil {
		_bffag := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_dcgg.DdeItems, _bffag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abaa *CT_MdxKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _a.Sprintf("\u0025\u0076", _abaa.NAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0070"}, Value: _a.Sprintf("\u0025\u0076", _abaa.NpAttr)})
	_ddde, _dbgg := _abaa.PAttr.MarshalXMLAttr(_b.Name{Local: "\u0070"})
	if _dbgg != nil {
		return _dbgg
	}
	start.Attr = append(start.Attr, _ddde)
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CfRule struct {

	// Type
	TypeAttr ST_CfType

	// Differential Formatting Id
	DxfIdAttr *uint32

	// Priority
	PriorityAttr int32

	// Stop If True
	StopIfTrueAttr *bool

	// Above Or Below Average
	AboveAverageAttr *bool

	// Top 10 Percent
	PercentAttr *bool

	// Bottom N
	BottomAttr *bool

	// Operator
	OperatorAttr ST_ConditionalFormattingOperator

	// Text
	TextAttr *string

	// Time Period
	TimePeriodAttr ST_TimePeriod

	// Rank
	RankAttr *uint32

	// StdDev
	StdDevAttr *int32

	// Equal Average
	EqualAverageAttr *bool

	// Formula
	Formula []string

	// Color Scale
	ColorScale *CT_ColorScale

	// Data Bar
	DataBar *CT_DataBar

	// Icon Set
	IconSet *CT_IconSet
	ExtLst  *CT_ExtensionList
}

// ValidateWithPath validates the CT_Controls and its children, prefixing error messages with path
func (_edffa *CT_Controls) ValidateWithPath(path string) error {
	for _agdbd, _gdggd := range _edffa.Control {
		if _dbcgd := _gdggd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u0074\u0072\u006fl\u005b\u0025\u0064\u005d", path, _agdbd)); _dbcgd != nil {
			return _dbcgd
		}
	}
	return nil
}
func NewCT_CellStyle() *CT_CellStyle { _daef := &CT_CellStyle{}; return _daef }
func NewCT_XmlCellPr() *CT_XmlCellPr {
	_bbece := &CT_XmlCellPr{}
	_bbece.XmlPr = NewCT_XmlPr()
	return _bbece
}

type CT_GroupMembers struct {

	// Group Member Count
	CountAttr *uint32

	// OLAP Group Member
	GroupMember []*CT_GroupMember
}

func (_ccdab ST_VolValueType) ValidateWithPath(path string) error {
	switch _ccdab {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccdab))
	}
	return nil
}
func NewCT_Pages() *CT_Pages { _eadgc := &CT_Pages{}; return _eadgc }
func (_faa *CT_AutoSortScope) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_baf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_faa.PivotArea, _baf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_MergeCells struct {

	// Count
	CountAttr *uint32

	// Merged Cell
	MergeCell []*CT_MergeCell
}

// Validate validates the CT_TableFormula and its children
func (_gfeggg *CT_TableFormula) Validate() error {
	return _gfeggg.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061")
}

// Validate validates the CT_Connections and its children
func (_ecdc *CT_Connections) Validate() error {
	return _ecdc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073")
}
func (_bdgbcf *CT_VolMain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfdddb := range start.Attr {
		if _gfdddb.Name.Local == "\u0066\u0069\u0072s\u0074" {
			_adfec, _dbff := _gfdddb.Value, error(nil)
			if _dbff != nil {
				return _dbff
			}
			_bdgbcf.FirstAttr = _adfec
			continue
		}
	}
_edbfb:
	for {
		_bcaeb, _deggga := d.Token()
		if _deggga != nil {
			return _deggga
		}
		switch _afagg := _bcaeb.(type) {
		case _b.StartElement:
			switch _afagg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070"}:
				_addcg := NewCT_VolTopic()
				if _fcge := d.DecodeElement(_addcg, &_afagg); _fcge != nil {
					return _fcge
				}
				_bdgbcf.Tp = append(_bdgbcf.Tp, _addcg)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u004d\u0061\u0069\u006e\u0020\u0025\u0076", _afagg.Name)
				if _deadb := d.Skip(); _deadb != nil {
					return _deadb
				}
			}
		case _b.EndElement:
			break _edbfb
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalReferences struct {

	// External Reference
	ExternalReference []*CT_ExternalReference
}

// ValidateWithPath validates the CT_ChartFormats and its children, prefixing error messages with path
func (_cffg *CT_ChartFormats) ValidateWithPath(path string) error {
	for _bccd, _feefb := range _cffg.ChartFormat {
		if _fddgd := _feefb.ValidateWithPath(_a.Sprintf("\u0025s\u002fC\u0068\u0061\u0072\u0074\u0046o\u0072\u006da\u0074\u005b\u0025\u0064\u005d", path, _bccd)); _fddgd != nil {
			return _fddgd
		}
	}
	return nil
}

// Validate validates the CT_SingleXmlCell and its children
func (_afcfe *CT_SingleXmlCell) Validate() error {
	return _afcfe.ValidateWithPath("\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c")
}
func (_cegggc *ST_CredMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_beccd, _cfbbe := d.Token()
	if _cfbbe != nil {
		return _cfbbe
	}
	if _cefcd, _ebgadbe := _beccd.(_b.EndElement); _ebgadbe && _cefcd.Name == start.Name {
		*_cegggc = 1
		return nil
	}
	if _efbfdd, _bebagf := _beccd.(_b.CharData); !_bebagf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _beccd)
	} else {
		switch string(_efbfdd) {
		case "":
			*_cegggc = 0
		case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
			*_cegggc = 1
		case "\u006e\u006f\u006e\u0065":
			*_cegggc = 2
		case "\u0073\u0074\u006f\u0072\u0065\u0064":
			*_cegggc = 3
		case "\u0070\u0072\u006f\u006d\u0070\u0074":
			*_cegggc = 4
		}
	}
	_beccd, _cfbbe = d.Token()
	if _cfbbe != nil {
		return _cfbbe
	}
	if _bbagbg, _bfgac := _beccd.(_b.EndElement); _bfgac && _bbagbg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _beccd)
}
func (_fafag *ST_SortMethod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_badbe, _gcada := d.Token()
	if _gcada != nil {
		return _gcada
	}
	if _aefbcc, _bcgcb := _badbe.(_b.EndElement); _bcgcb && _aefbcc.Name == start.Name {
		*_fafag = 1
		return nil
	}
	if _eefff, _cbdae := _badbe.(_b.CharData); !_cbdae {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _badbe)
	} else {
		switch string(_eefff) {
		case "":
			*_fafag = 0
		case "\u0073\u0074\u0072\u006f\u006b\u0065":
			*_fafag = 1
		case "\u0070\u0069\u006e\u0059\u0069\u006e":
			*_fafag = 2
		case "\u006e\u006f\u006e\u0065":
			*_fafag = 3
		}
	}
	_badbe, _gcada = d.Token()
	if _gcada != nil {
		return _gcada
	}
	if _gbcdg, _gbeac := _badbe.(_b.EndElement); _gbeac && _gbcdg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _badbe)
}
func NewCT_Missing() *CT_Missing           { _ebfgf := &CT_Missing{}; return _ebfgf }
func NewCT_TableColumns() *CT_TableColumns { _dfggf := &CT_TableColumns{}; return _dfggf }
func (_dgdag *CT_RevisionFormatting) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dgdag.SheetIdAttr)})
	if _dgdag.XfDxfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0044x\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdag.XfDxfAttr))})
	}
	if _dgdag.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dgdag.SAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", _dgdag.SqrefAttr)})
	if _dgdag.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dgdag.StartAttr)})
	}
	if _dgdag.LengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u006e\u0067\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_dgdag.LengthAttr)})
	}
	e.EncodeToken(start)
	if _dgdag.Dxf != nil {
		_cbeeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		e.EncodeElement(_dgdag.Dxf, _cbeeg)
	}
	if _dgdag.ExtLst != nil {
		_ggbeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgdag.ExtLst, _ggbeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCalcChain() *CalcChain {
	_cefee := &CalcChain{}
	_cefee.CT_CalcChain = *NewCT_CalcChain()
	return _cefee
}

type CT_CacheHierarchy struct {

	// Hierarchy Unique Name
	UniqueNameAttr string

	// Hierarchy Display Name
	CaptionAttr *string

	// Measure Hierarchy
	MeasureAttr *bool

	// Set
	SetAttr *bool

	// Parent Set
	ParentSetAttr *uint32

	// KPI Icon Set
	IconSetAttr *int32

	// Attribute Hierarchy
	AttributeAttr *bool

	// Time
	TimeAttr *bool

	// Key Attribute Hierarchy
	KeyAttributeAttr *bool

	// Default Member Unique Name
	DefaultMemberUniqueNameAttr *string

	// Unique Name of 'All'
	AllUniqueNameAttr *string

	// Display Name of 'All'
	AllCaptionAttr *string

	// Dimension Unique Name
	DimensionUniqueNameAttr *string

	// Display Folder
	DisplayFolderAttr *string

	// Measure Group Name
	MeasureGroupAttr *string

	// Measures
	MeasuresAttr *bool

	// Levels Count
	CountAttr uint32

	// One Field
	OneFieldAttr *bool

	// Member Value Data Type
	MemberValueDatatypeAttr *uint16

	// Unbalanced
	UnbalancedAttr *bool

	// Unbalanced Group
	UnbalancedGroupAttr *bool

	// Hidden
	HiddenAttr *bool

	// Fields Usage
	FieldsUsage *CT_FieldsUsage

	// OLAP Grouping Levels
	GroupLevels *CT_GroupLevels

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dbdgg *CT_PatternFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbdgg.PatternTypeAttr != ST_PatternTypeUnset {
		_cegbb, _ccfdc := _dbdgg.PatternTypeAttr.MarshalXMLAttr(_b.Name{Local: "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065"})
		if _ccfdc != nil {
			return _ccfdc
		}
		start.Attr = append(start.Attr, _cegbb)
	}
	e.EncodeToken(start)
	if _dbdgg.FgColor != nil {
		_gecafe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_dbdgg.FgColor, _gecafe)
	}
	if _dbdgg.BgColor != nil {
		_bddac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0067\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_dbdgg.BgColor, _bddac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Hyperlinks and its children
func (_dfbad *CT_Hyperlinks) Validate() error {
	return _dfbad.ValidateWithPath("\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073")
}
func (_efdagf *CT_OleObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gbdaag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _gaac := range _efdagf.OleObject {
		e.EncodeElement(_gaac, _gbdaag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionMove struct {

	// Sheet Id
	SheetIdAttr uint32

	// Source
	SourceAttr string

	// Destination
	DestinationAttr string

	// Source Sheet Id
	SourceSheetIdAttr *uint32

	// Undo
	Undo []*CT_UndoInfo

	// Revision Cell Change
	Rcc []*CT_RevisionCellChange

	// Revision Format
	Rfmt    []*CT_RevisionFormatting
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

// ValidateWithPath validates the Users and its children, prefixing error messages with path
func (_aebfcg *Users) ValidateWithPath(path string) error {
	if _bfcd := _aebfcg.CT_Users.ValidateWithPath(path); _bfcd != nil {
		return _bfcd
	}
	return nil
}
func NewCT_Parameter() *CT_Parameter { _fbaff := &CT_Parameter{}; return _fbaff }

const (
	ST_CfvoTypeUnset      ST_CfvoType = 0
	ST_CfvoTypeNum        ST_CfvoType = 1
	ST_CfvoTypePercent    ST_CfvoType = 2
	ST_CfvoTypeMax        ST_CfvoType = 3
	ST_CfvoTypeMin        ST_CfvoType = 4
	ST_CfvoTypeFormula    ST_CfvoType = 5
	ST_CfvoTypePercentile ST_CfvoType = 6
)

func (_befcb *ST_PhoneticType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bcgba, _bacdeag := d.Token()
	if _bacdeag != nil {
		return _bacdeag
	}
	if _acccd, _dbde := _bcgba.(_b.EndElement); _dbde && _acccd.Name == start.Name {
		*_befcb = 1
		return nil
	}
	if _fecbag, _affag := _bcgba.(_b.CharData); !_affag {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcgba)
	} else {
		switch string(_fecbag) {
		case "":
			*_befcb = 0
		case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_befcb = 1
		case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
			*_befcb = 2
		case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
			*_befcb = 3
		case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
			*_befcb = 4
		}
	}
	_bcgba, _bacdeag = d.Token()
	if _bacdeag != nil {
		return _bacdeag
	}
	if _efgfc, _gafcb := _bcgba.(_b.EndElement); _gafcb && _efgfc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcgba)
}
func (_gegbc *CT_SheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbfddf := range start.Attr {
		if _dbfddf.Name.Local == "\u0076\u0069\u0065\u0077" {
			_gegbc.ViewAttr.UnmarshalXMLAttr(_dbfddf)
			continue
		}
		if _dbfddf.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_efdagc, _gagbb := _dbfddf.Value, error(nil)
			if _gagbb != nil {
				return _gagbb
			}
			_gegbc.TopLeftCellAttr = &_efdagc
			continue
		}
		if _dbfddf.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_dgccff, _fgdaf := _g.ParseBool(_dbfddf.Value)
			if _fgdaf != nil {
				return _fgdaf
			}
			_gegbc.ShowFormulasAttr = &_dgccff
			continue
		}
		if _dbfddf.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_fdeab, _ebade := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _ebade != nil {
				return _ebade
			}
			_fgcage := uint32(_fdeab)
			_gegbc.ColorIdAttr = &_fgcage
			continue
		}
		if _dbfddf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073" {
			_ggeadd, _abbdec := _g.ParseBool(_dbfddf.Value)
			if _abbdec != nil {
				return _abbdec
			}
			_gegbc.ShowRowColHeadersAttr = &_ggeadd
			continue
		}
		if _dbfddf.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_gbdabf, _fbbda := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _fbbda != nil {
				return _fbbda
			}
			_adcdg := uint32(_gbdabf)
			_gegbc.ZoomScaleAttr = &_adcdg
			continue
		}
		if _dbfddf.Name.Local == "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074" {
			_ggbgd, _beebff := _g.ParseBool(_dbfddf.Value)
			if _beebff != nil {
				return _beebff
			}
			_gegbc.RightToLeftAttr = &_ggbgd
			continue
		}
		if _dbfddf.Name.Local == "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c" {
			_cedfd, _aegaa := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _aegaa != nil {
				return _aegaa
			}
			_dgcdf := uint32(_cedfd)
			_gegbc.ZoomScaleNormalAttr = &_dgcdf
			continue
		}
		if _dbfddf.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_ageeee, _abffe := _g.ParseBool(_dbfddf.Value)
			if _abffe != nil {
				return _abffe
			}
			_gegbc.ShowRulerAttr = &_ageeee
			continue
		}
		if _dbfddf.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_cbcbc, _bdbdd := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _bdbdd != nil {
				return _bdbdd
			}
			_egfce := uint32(_cbcbc)
			_gegbc.ZoomScaleSheetLayoutViewAttr = &_egfce
			continue
		}
		if _dbfddf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_bbfeg, _afegg := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _afegg != nil {
				return _afegg
			}
			_gegbc.WorkbookViewIdAttr = uint32(_bbfeg)
			continue
		}
		if _dbfddf.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_dbdfe, _accbea := _g.ParseBool(_dbfddf.Value)
			if _accbea != nil {
				return _accbea
			}
			_gegbc.TabSelectedAttr = &_dbdfe
			continue
		}
		if _dbfddf.Name.Local == "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077" {
			_gcggf, _badgc := _g.ParseUint(_dbfddf.Value, 10, 32)
			if _badgc != nil {
				return _badgc
			}
			_eeba := uint32(_gcggf)
			_gegbc.ZoomScalePageLayoutViewAttr = &_eeba
			continue
		}
		if _dbfddf.Name.Local == "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs" {
			_gecef, _bfabfec := _g.ParseBool(_dbfddf.Value)
			if _bfabfec != nil {
				return _bfabfec
			}
			_gegbc.ShowZerosAttr = &_gecef
			continue
		}
		if _dbfddf.Name.Local == "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e" {
			_egfcec, _fbdae := _g.ParseBool(_dbfddf.Value)
			if _fbdae != nil {
				return _fbdae
			}
			_gegbc.WindowProtectionAttr = &_egfcec
			continue
		}
		if _dbfddf.Name.Local == "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073" {
			_ccddb, _dbgfe := _g.ParseBool(_dbfddf.Value)
			if _dbgfe != nil {
				return _dbgfe
			}
			_gegbc.ShowOutlineSymbolsAttr = &_ccddb
			continue
		}
		if _dbfddf.Name.Local == "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065" {
			_bddfeec, _fedaf := _g.ParseBool(_dbfddf.Value)
			if _fedaf != nil {
				return _fedaf
			}
			_gegbc.ShowWhiteSpaceAttr = &_bddfeec
			continue
		}
		if _dbfddf.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_daccf, _eeeee := _g.ParseBool(_dbfddf.Value)
			if _eeeee != nil {
				return _eeeee
			}
			_gegbc.ShowGridLinesAttr = &_daccf
			continue
		}
		if _dbfddf.Name.Local == "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072" {
			_adgbb, _ggfbf := _g.ParseBool(_dbfddf.Value)
			if _ggfbf != nil {
				return _ggfbf
			}
			_gegbc.DefaultGridColorAttr = &_adgbb
			continue
		}
	}
_ggdddf:
	for {
		_faddd, _edddgb := d.Token()
		if _edddgb != nil {
			return _edddgb
		}
		switch _dfcaa := _faddd.(type) {
		case _b.StartElement:
			switch _dfcaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_gegbc.Pane = NewCT_Pane()
				if _adaff := d.DecodeElement(_gegbc.Pane, &_dfcaa); _adaff != nil {
					return _adaff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_dbggf := NewCT_Selection()
				if _fbfcdd := d.DecodeElement(_dbggf, &_dfcaa); _fbfcdd != nil {
					return _fbfcdd
				}
				_gegbc.Selection = append(_gegbc.Selection, _dbggf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}:
				_gffeb := NewCT_PivotSelection()
				if _bggfc := d.DecodeElement(_gffeb, &_dfcaa); _bggfc != nil {
					return _bggfc
				}
				_gegbc.PivotSelection = append(_gegbc.PivotSelection, _gffeb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gegbc.ExtLst = NewCT_ExtensionList()
				if _aacdc := d.DecodeElement(_gegbc.ExtLst, &_dfcaa); _aacdc != nil {
					return _aacdc
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _dfcaa.Name)
				if _fdfbb := d.Skip(); _fdfbb != nil {
					return _fdfbb
				}
			}
		case _b.EndElement:
			break _ggdddf
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Comments() *CT_Comments {
	_egga := &CT_Comments{}
	_egga.Authors = NewCT_Authors()
	_egga.CommentList = NewCT_CommentList()
	return _egga
}
func (_ggfff *CT_WorkbookProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _acbdf := range start.Attr {
		if _acbdf.Name.Local == "\u0072\u0065\u0076\u0069si\u006f\u006e\u0073\u0041\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061m\u0065" {
			_ffcfe, _ccbgfb := _acbdf.Value, error(nil)
			if _ccbgfb != nil {
				return _ccbgfb
			}
			_ggfff.RevisionsAlgorithmNameAttr = &_ffcfe
			continue
		}
		if _acbdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073H\u0061\u0073h\u0056\u0061\u006c\u0075\u0065" {
			_ecebc, _bgfbec := _acbdf.Value, error(nil)
			if _bgfbec != nil {
				return _bgfbec
			}
			_ggfff.RevisionsHashValueAttr = &_ecebc
			continue
		}
		if _acbdf.Name.Local == "\u0077\u006f\u0072\u006bb\u006f\u006f\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072d\u0043h\u0061\u0072\u0061\u0063\u0074\u0065\u0072S\u0065\u0074" {
			_gbdcb, _bgbac := _acbdf.Value, error(nil)
			if _bgbac != nil {
				return _bgbac
			}
			_ggfff.WorkbookPasswordCharacterSetAttr = &_gbdcb
			continue
		}
		if _acbdf.Name.Local == "\u0072\u0065v\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065rS\u0065\u0074" {
			_badff, _faeed := _acbdf.Value, error(nil)
			if _faeed != nil {
				return _faeed
			}
			_ggfff.RevisionsPasswordCharacterSetAttr = &_badff
			continue
		}
		if _acbdf.Name.Local == "\u006c\u006f\u0063\u006b\u0053\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065" {
			_cbcbbe, _dfgac := _g.ParseBool(_acbdf.Value)
			if _dfgac != nil {
				return _dfgac
			}
			_ggfff.LockStructureAttr = &_cbcbbe
			continue
		}
		if _acbdf.Name.Local == "l\u006f\u0063\u006b\u0057\u0069\u006e\u0064\u006f\u0077\u0073" {
			_bgfbc, _egdff := _g.ParseBool(_acbdf.Value)
			if _egdff != nil {
				return _egdff
			}
			_ggfff.LockWindowsAttr = &_bgfbc
			continue
		}
		if _acbdf.Name.Local == "\u006c\u006f\u0063k\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e" {
			_ddefbb, _bcbgcg := _g.ParseBool(_acbdf.Value)
			if _bcbgcg != nil {
				return _bcbgcg
			}
			_ggfff.LockRevisionAttr = &_ddefbb
			continue
		}
		if _acbdf.Name.Local == "\u0077\u006fr\u006b\u0062\u006fo\u006b\u0050\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_eccca, _edgee := _acbdf.Value, error(nil)
			if _edgee != nil {
				return _edgee
			}
			_ggfff.WorkbookPasswordAttr = &_eccca
			continue
		}
		if _acbdf.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0050\u0061\u0073s\u0077\u006f\u0072\u0064" {
			_egfgg, _efacb := _acbdf.Value, error(nil)
			if _efacb != nil {
				return _efacb
			}
			_ggfff.RevisionsPasswordAttr = &_egfgg
			continue
		}
		if _acbdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0061\u006ct\u0056\u0061\u006c\u0075\u0065" {
			_dccdd, _ccdff := _acbdf.Value, error(nil)
			if _ccdff != nil {
				return _ccdff
			}
			_ggfff.RevisionsSaltValueAttr = &_dccdd
			continue
		}
		if _acbdf.Name.Local == "\u0072e\u0076i\u0073\u0069\u006f\u006e\u0073S\u0070\u0069n\u0043\u006f\u0075\u006e\u0074" {
			_aebaac, _aadaeb := _g.ParseUint(_acbdf.Value, 10, 32)
			if _aadaeb != nil {
				return _aadaeb
			}
			_ccfgc := uint32(_aebaac)
			_ggfff.RevisionsSpinCountAttr = &_ccfgc
			continue
		}
		if _acbdf.Name.Local == "w\u006f\u0072\u006b\u0062oo\u006bA\u006c\u0067\u006f\u0072\u0069t\u0068\u006d\u004e\u0061\u006d\u0065" {
			_acfbe, _ddfffe := _acbdf.Value, error(nil)
			if _ddfffe != nil {
				return _ddfffe
			}
			_ggfff.WorkbookAlgorithmNameAttr = &_acfbe
			continue
		}
		if _acbdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0048\u0061\u0073\u0068V\u0061\u006c\u0075\u0065" {
			_cdaec, _cfddc := _acbdf.Value, error(nil)
			if _cfddc != nil {
				return _cfddc
			}
			_ggfff.WorkbookHashValueAttr = &_cdaec
			continue
		}
		if _acbdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0061\u006c\u0074V\u0061\u006c\u0075\u0065" {
			_cbcgdg, _ggceb := _acbdf.Value, error(nil)
			if _ggceb != nil {
				return _ggceb
			}
			_ggfff.WorkbookSaltValueAttr = &_cbcgdg
			continue
		}
		if _acbdf.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0053\u0070\u0069\u006eC\u006f\u0075\u006e\u0074" {
			_ggcad, _bagbe := _g.ParseUint(_acbdf.Value, 10, 32)
			if _bagbe != nil {
				return _bagbe
			}
			_bddce := uint32(_ggcad)
			_ggfff.WorkbookSpinCountAttr = &_bddce
			continue
		}
	}
	for {
		_ceeedd, _aebee := d.Token()
		if _aebee != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006fn\u003a\u0020\u0025\u0073", _aebee)
		}
		if _aadce, _gcfcd := _ceeedd.(_b.EndElement); _gcfcd && _aadce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfcfd *CT_MdxKPI) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cfcfd.PAttr = ST_MdxKPIProperty(1)
	for _, _dafeb := range start.Attr {
		if _dafeb.Name.Local == "\u006e" {
			_bggae, _ddcba := _g.ParseUint(_dafeb.Value, 10, 32)
			if _ddcba != nil {
				return _ddcba
			}
			_cfcfd.NAttr = uint32(_bggae)
			continue
		}
		if _dafeb.Name.Local == "\u006e\u0070" {
			_fcggec, _gbadd := _g.ParseUint(_dafeb.Value, 10, 32)
			if _gbadd != nil {
				return _gbadd
			}
			_cfcfd.NpAttr = uint32(_fcggec)
			continue
		}
		if _dafeb.Name.Local == "\u0070" {
			_cfcfd.PAttr.UnmarshalXMLAttr(_dafeb)
			continue
		}
	}
	for {
		_ecdbe, _cdgc := d.Token()
		if _cdgc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004d\u0064\u0078K\u0050\u0049\u003a\u0020\u0025\u0073", _cdgc)
		}
		if _fgbcg, _aabeg := _ecdbe.(_b.EndElement); _aabeg && _fgbcg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetIdMap and its children, prefixing error messages with path
func (_bfdbe *CT_SheetIdMap) ValidateWithPath(path string) error {
	for _ffaab, _fggbg := range _bfdbe.SheetId {
		if _ddcag := _fggbg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0065\u0065\u0074\u0049d\u005b\u0025\u0064\u005d", path, _ffaab)); _ddcag != nil {
			return _ddcag
		}
	}
	return nil
}
func (_cafdf *CT_Sets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ggbacb := range start.Attr {
		if _ggbacb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_edgbe, _fggda := _g.ParseUint(_ggbacb.Value, 10, 32)
			if _fggda != nil {
				return _fggda
			}
			_ceggg := uint32(_edgbe)
			_cafdf.CountAttr = &_ceggg
			continue
		}
	}
_eafdf:
	for {
		_bgbdd, _ggbca := d.Token()
		if _ggbca != nil {
			return _ggbca
		}
		switch _adcbeec := _bgbdd.(type) {
		case _b.StartElement:
			switch _adcbeec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074"}:
				_bcaea := NewCT_Set()
				if _aagec := d.DecodeElement(_bcaea, &_adcbeec); _aagec != nil {
					return _aagec
				}
				_cafdf.Set = append(_cafdf.Set, _bcaea)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _adcbeec.Name)
				if _daecf := d.Skip(); _daecf != nil {
					return _daecf
				}
			}
		case _b.EndElement:
			break _eafdf
		case _b.CharData:
		}
	}
	return nil
}
func (_cbafg ST_DataConsolidateFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cbafg.String(), start)
}

// Validate validates the CT_PCDSCPage and its children
func (_gbbfad *CT_PCDSCPage) Validate() error {
	return _gbbfad.ValidateWithPath("\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065")
}
func NewCT_TextField() *CT_TextField { _fggga := &CT_TextField{}; return _fggga }
func NewCT_DdeLink() *CT_DdeLink     { _adeb := &CT_DdeLink{}; return _adeb }
func (_dbbfeb ST_Comments) String() string {
	switch _dbbfeb {
	case 0:
		return ""
	case 1:
		return "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065"
	case 2:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	case 3:
		return "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074"
	}
	return ""
}
func NewCT_Borders() *CT_Borders { _gbca := &CT_Borders{}; return _gbca }

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_fedea *CT_TextField) ValidateWithPath(path string) error {
	if _daege := _fedea.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _daege != nil {
		return _daege
	}
	return nil
}
func (_afcce *CT_VolMain) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072s\u0074"}, Value: _a.Sprintf("\u0025\u0076", _afcce.FirstAttr)})
	e.EncodeToken(start)
	_agfgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0070"}}
	for _, _gcbeb := range _afcce.Tp {
		e.EncodeElement(_gcbeb, _agfgdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edcgdda *ST_Comments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edcgdda = 0
	case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
		*_edcgdda = 1
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_edcgdda = 2
	case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
		*_edcgdda = 3
	}
	return nil
}

// Validate validates the CT_IgnoredErrors and its children
func (_dabd *CT_IgnoredErrors) Validate() error {
	return _dabd.ValidateWithPath("\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073")
}

const (
	ST_DataValidationErrorStyleUnset       ST_DataValidationErrorStyle = 0
	ST_DataValidationErrorStyleStop        ST_DataValidationErrorStyle = 1
	ST_DataValidationErrorStyleWarning     ST_DataValidationErrorStyle = 2
	ST_DataValidationErrorStyleInformation ST_DataValidationErrorStyle = 3
)

func (_cgegb *CT_RgbColor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgegb.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _a.Sprintf("\u0025\u0076", *_cgegb.RgbAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_RevisionSheetRename() *CT_RevisionSheetRename {
	_fgebc := &CT_RevisionSheetRename{}
	return _fgebc
}

type CT_Rst struct {

	// Text
	T *string

	// Rich Text Run
	R []*CT_RElt

	// Phonetic Run
	RPh []*CT_PhoneticRun

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr
}

func NewCT_XmlPr() *CT_XmlPr { _fgcabd := &CT_XmlPr{}; return _fgcabd }
func (_eeagd *ST_Type) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eeagd = 0
	case "\u006e\u006f\u006e\u0065":
		*_eeagd = 1
	case "\u0061\u006c\u006c":
		*_eeagd = 2
	case "\u0072\u006f\u0077":
		*_eeagd = 3
	case "\u0063\u006f\u006c\u0075\u006d\u006e":
		*_eeagd = 4
	}
	return nil
}

type CT_Connections struct {

	// Connection
	Connection []*CT_Connection
}

// ValidateWithPath validates the CT_Selection and its children, prefixing error messages with path
func (_feeab *CT_Selection) ValidateWithPath(path string) error {
	if _bdefcc := _feeab.PaneAttr.ValidateWithPath(path + "\u002fP\u0061\u006e\u0065\u0041\u0074\u0074r"); _bdefcc != nil {
		return _bdefcc
	}
	return nil
}
func (_agdcd *CT_pivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _agdcd.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0063\u0068\u0065\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _agdcd.CacheIdAttr)})
	if _agdcd.DataOnRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.DataOnRowsAttr))})
	}
	if _agdcd.DataPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.DataPositionAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _agdcd.DataCaptionAttr)})
	if _agdcd.GrandTotalCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.GrandTotalCaptionAttr)})
	}
	if _agdcd.ErrorCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.ErrorCaptionAttr)})
	}
	if _agdcd.ShowErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowErrorAttr))})
	}
	if _agdcd.MissingCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.MissingCaptionAttr)})
	}
	if _agdcd.ShowMissingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowMissingAttr))})
	}
	if _agdcd.PageStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.PageStyleAttr)})
	}
	if _agdcd.PivotTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.PivotTableStyleAttr)})
	}
	if _agdcd.VacatedStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.VacatedStyleAttr)})
	}
	if _agdcd.TagAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0067"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.TagAttr)})
	}
	if _agdcd.UpdatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.UpdatedVersionAttr)})
	}
	if _agdcd.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.MinRefreshableVersionAttr)})
	}
	if _agdcd.AsteriskTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.AsteriskTotalsAttr))})
	}
	if _agdcd.ShowItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowItemsAttr))})
	}
	if _agdcd.EditDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.EditDataAttr))})
	}
	if _agdcd.DisableFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.DisableFieldListAttr))})
	}
	if _agdcd.ShowCalcMbrsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowCalcMbrsAttr))})
	}
	if _agdcd.VisualTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.VisualTotalsAttr))})
	}
	if _agdcd.ShowMultipleLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowMultipleLabelAttr))})
	}
	if _agdcd.ShowDataDropDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowDataDropDownAttr))})
	}
	if _agdcd.ShowDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowDrillAttr))})
	}
	if _agdcd.PrintDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.PrintDrillAttr))})
	}
	if _agdcd.ShowMemberPropertyTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowMemberPropertyTipsAttr))})
	}
	if _agdcd.ShowDataTipsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowDataTipsAttr))})
	}
	if _agdcd.EnableWizardAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.EnableWizardAttr))})
	}
	if _agdcd.EnableDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.EnableDrillAttr))})
	}
	if _agdcd.EnableFieldPropertiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.EnableFieldPropertiesAttr))})
	}
	if _agdcd.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.PreserveFormattingAttr))})
	}
	if _agdcd.UseAutoFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.UseAutoFormattingAttr))})
	}
	if _agdcd.PageWrapAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.PageWrapAttr)})
	}
	if _agdcd.PageOverThenDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.PageOverThenDownAttr))})
	}
	if _agdcd.SubtotalHiddenItemsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.SubtotalHiddenItemsAttr))})
	}
	if _agdcd.RowGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.RowGrandTotalsAttr))})
	}
	if _agdcd.ColGrandTotalsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ColGrandTotalsAttr))})
	}
	if _agdcd.FieldPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.FieldPrintTitlesAttr))})
	}
	if _agdcd.ItemPrintTitlesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ItemPrintTitlesAttr))})
	}
	if _agdcd.MergeItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.MergeItemAttr))})
	}
	if _agdcd.ShowDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowDropZonesAttr))})
	}
	if _agdcd.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.CreatedVersionAttr)})
	}
	if _agdcd.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.IndentAttr)})
	}
	if _agdcd.ShowEmptyRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowEmptyRowAttr))})
	}
	if _agdcd.ShowEmptyColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowEmptyColAttr))})
	}
	if _agdcd.ShowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ShowHeadersAttr))})
	}
	if _agdcd.CompactAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u0070\u0061\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.CompactAttr))})
	}
	if _agdcd.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.OutlineAttr))})
	}
	if _agdcd.OutlineDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.OutlineDataAttr))})
	}
	if _agdcd.CompactDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.CompactDataAttr))})
	}
	if _agdcd.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.PublishedAttr))})
	}
	if _agdcd.GridDropZonesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.GridDropZonesAttr))})
	}
	if _agdcd.ImmersiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ImmersiveAttr))})
	}
	if _agdcd.MultipleFieldFiltersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.MultipleFieldFiltersAttr))})
	}
	if _agdcd.ChartFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.ChartFormatAttr)})
	}
	if _agdcd.RowHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.RowHeaderCaptionAttr)})
	}
	if _agdcd.ColHeaderCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.ColHeaderCaptionAttr)})
	}
	if _agdcd.FieldListSortAscendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.FieldListSortAscendingAttr))})
	}
	if _agdcd.MdxSubqueriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.MdxSubqueriesAttr))})
	}
	if _agdcd.CustomListSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.CustomListSortAttr))})
	}
	if _agdcd.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_agdcd.AutoFormatIdAttr)})
	}
	if _agdcd.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyNumberFormatsAttr))})
	}
	if _agdcd.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyBorderFormatsAttr))})
	}
	if _agdcd.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyFontFormatsAttr))})
	}
	if _agdcd.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyPatternFormatsAttr))})
	}
	if _agdcd.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyAlignmentFormatsAttr))})
	}
	if _agdcd.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agdcd.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	_aedgg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}}
	e.EncodeElement(_agdcd.Location, _aedgg)
	if _agdcd.PivotFields != nil {
		_bebfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agdcd.PivotFields, _bebfd)
	}
	if _agdcd.RowFields != nil {
		_beacga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agdcd.RowFields, _beacga)
	}
	if _agdcd.RowItems != nil {
		_cdedbb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_agdcd.RowItems, _cdedbb)
	}
	if _agdcd.ColFields != nil {
		_efebaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agdcd.ColFields, _efebaf)
	}
	if _agdcd.ColItems != nil {
		_gfcgb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_agdcd.ColItems, _gfcgb)
	}
	if _agdcd.PageFields != nil {
		_ebceb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agdcd.PageFields, _ebceb)
	}
	if _agdcd.DataFields != nil {
		_fgcgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_agdcd.DataFields, _fgcgd)
	}
	if _agdcd.Formats != nil {
		_dgfeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agdcd.Formats, _dgfeae)
	}
	if _agdcd.ConditionalFormats != nil {
		_aeddd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agdcd.ConditionalFormats, _aeddd)
	}
	if _agdcd.ChartFormats != nil {
		_cgacfce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}}
		e.EncodeElement(_agdcd.ChartFormats, _cgacfce)
	}
	if _agdcd.PivotHierarchies != nil {
		_abcdbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_agdcd.PivotHierarchies, _abcdbe)
	}
	if _agdcd.PivotTableStyleInfo != nil {
		_eeegf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070iv\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006ef\u006f"}}
		e.EncodeElement(_agdcd.PivotTableStyleInfo, _eeegf)
	}
	if _agdcd.Filters != nil {
		_baacb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_agdcd.Filters, _baacb)
	}
	if _agdcd.RowHierarchiesUsage != nil {
		_dgacdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_agdcd.RowHierarchiesUsage, _dgacdg)
	}
	if _agdcd.ColHierarchiesUsage != nil {
		_efdcec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065"}}
		e.EncodeElement(_agdcd.ColHierarchiesUsage, _efdcec)
	}
	if _agdcd.ExtLst != nil {
		_bbcae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agdcd.ExtLst, _bbcae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_agabce *CT_PivotCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aeeae := range start.Attr {
		if _aeeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _aeeae.Name.Local == "\u0069\u0064" || _aeeae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _aeeae.Name.Local == "\u0069\u0064" {
			_dadcfg, _eeffg := _aeeae.Value, error(nil)
			if _eeffg != nil {
				return _eeffg
			}
			_agabce.IdAttr = _dadcfg
			continue
		}
		if _aeeae.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_afcab, _bcgbe := _g.ParseUint(_aeeae.Value, 10, 32)
			if _bcgbe != nil {
				return _bcgbe
			}
			_agabce.CacheIdAttr = uint32(_afcab)
			continue
		}
	}
	for {
		_bgeee, _fbcdbc := d.Token()
		if _fbcdbc != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050i\u0076o\u0074C\u0061\u0063\u0068\u0065\u003a\u0020\u0025s", _fbcdbc)
		}
		if _cdfad, _dgedb := _bgeee.(_b.EndElement); _dgedb && _cdfad.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ExternalBook() *CT_ExternalBook { _dfgeb := &CT_ExternalBook{}; return _dfgeb }
func (_cddad *ST_PivotAreaType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cddad = 0
	case "\u006e\u006f\u006e\u0065":
		*_cddad = 1
	case "\u006e\u006f\u0072\u006d\u0061\u006c":
		*_cddad = 2
	case "\u0064\u0061\u0074\u0061":
		*_cddad = 3
	case "\u0061\u006c\u006c":
		*_cddad = 4
	case "\u006f\u0072\u0069\u0067\u0069\u006e":
		*_cddad = 5
	case "\u0062\u0075\u0074\u0074\u006f\u006e":
		*_cddad = 6
	case "\u0074\u006f\u0070\u0045\u006e\u0064":
		*_cddad = 7
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_cddad = 8
	}
	return nil
}
func NewCT_TableParts() *CT_TableParts { _gadef := &CT_TableParts{}; return _gadef }

// ValidateWithPath validates the ExternalLink and its children, prefixing error messages with path
func (_ebdgd *ExternalLink) ValidateWithPath(path string) error {
	if _fbfff := _ebdgd.CT_ExternalLink.ValidateWithPath(path); _fbfff != nil {
		return _fbfff
	}
	return nil
}

// ValidateWithPath validates the CT_Connections and its children, prefixing error messages with path
func (_dbfgce *CT_Connections) ValidateWithPath(path string) error {
	for _gedaa, _cgbcc := range _dbfgce.Connection {
		if _abfg := _cgbcc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u005b\u0025\u0064\u005d", path, _gedaa)); _abfg != nil {
			return _abfg
		}
	}
	return nil
}

// Validate validates the CT_MeasureDimensionMap and its children
func (_cgffa *CT_MeasureDimensionMap) Validate() error {
	return _cgffa.ValidateWithPath("\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070")
}

// ValidateWithPath validates the CT_MeasureGroup and its children, prefixing error messages with path
func (_cgbbb *CT_MeasureGroup) ValidateWithPath(path string) error { return nil }
func (_dcfcc *CT_Query) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0064\u0078"}, Value: _a.Sprintf("\u0025\u0076", _dcfcc.MdxAttr)})
	e.EncodeToken(start)
	if _dcfcc.Tpls != nil {
		_gdbbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_dcfcc.Tpls, _gdbbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ExternalLink and its children, prefixing error messages with path
func (_fdede *CT_ExternalLink) ValidateWithPath(path string) error {
	if _fdede.Choice != nil {
		if _edcg := _fdede.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _edcg != nil {
			return _edcg
		}
	}
	if _fdede.ExtLst != nil {
		if _acad := _fdede.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acad != nil {
			return _acad
		}
	}
	return nil
}

// Validate validates the CT_MetadataStrings and its children
func (_adfed *CT_MetadataStrings) Validate() error {
	return _adfed.ValidateWithPath("\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073")
}
func NewCT_Sheets() *CT_Sheets { _dbfbc := &CT_Sheets{}; return _dbfbc }
func (_ceed *CT_MeasureDimensionMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceed.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_ceed.MeasureGroupAttr)})
	}
	if _ceed.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _a.Sprintf("\u0025\u0076", *_ceed.DimensionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryTable and its children
func (_debda *CT_QueryTable) Validate() error {
	return _debda.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065")
}
func (_edad *CT_ChartsheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_feded := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _fbdc := range _edad.SheetView {
		e.EncodeElement(_fbdc, _feded)
	}
	if _edad.ExtLst != nil {
		_cbdcea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edad.ExtLst, _cbdcea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_PivotDimension and its children
func (_degd *CT_PivotDimension) Validate() error {
	return _degd.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_QueryTableFields and its children, prefixing error messages with path
func (_bddde *CT_QueryTableFields) ValidateWithPath(path string) error {
	for _aeged, _ddcc := range _bddde.QueryTableField {
		if _dfaed := _ddcc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u005b\u0025d\u005d", path, _aeged)); _dfaed != nil {
			return _dfaed
		}
	}
	return nil
}

type CT_Worksheet struct {

	// Worksheet Properties
	SheetPr *CT_SheetPr

	// Worksheet Dimensions
	Dimension *CT_SheetDimension

	// Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Calculation Properties
	SheetCalcPr *CT_SheetCalcPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Protected Ranges
	ProtectedRanges *CT_ProtectedRanges

	// Scenarios
	Scenarios *CT_Scenarios

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidate
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Merge Cells
	MergeCells *CT_MergeCells

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Data Validations
	DataValidations *CT_DataValidations

	// Hyperlinks
	Hyperlinks *CT_Hyperlinks

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header and Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Cell Watch Items
	CellWatches *CT_CellWatches

	// Ignored Errors
	IgnoredErrors *CT_IgnoredErrors

	// Smart Tags
	SmartTags *CT_SmartTags

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture    *CT_SheetBackgroundPicture
	OleObjects *CT_OleObjects

	// Embedded Controls
	Controls *CT_Controls

	// Web Publishing Items
	WebPublishItems *CT_WebPublishItems

	// Table Parts
	TableParts *CT_TableParts

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_RevisionCellChange() *CT_RevisionCellChange {
	_fgbcgc := &CT_RevisionCellChange{}
	_fgbcgc.Nc = NewCT_Cell()
	return _fgbcgc
}
func (_cacee *CT_ProtectedRange) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cacee.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.PasswordAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", _cacee.SqrefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _cacee.NameAttr)})
	if _cacee.SecurityDescriptorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0063u\u0072\u0069\u0074\u0079\u0044e\u0073\u0063r\u0069\u0070\u0074\u006f\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.SecurityDescriptorAttr)})
	}
	if _cacee.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.AlgorithmNameAttr)})
	}
	if _cacee.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.HashValueAttr)})
	}
	if _cacee.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.SaltValueAttr)})
	}
	if _cacee.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _a.Sprintf("\u0025\u0076", *_cacee.SpinCountAttr)})
	}
	e.EncodeToken(start)
	if _cacee.SecurityDescriptor != nil {
		_dfdcc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0065cu\u0072i\u0074\u0079\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072"}}
		for _, _faebf := range _cacee.SecurityDescriptor {
			e.EncodeElement(_faebf, _dfdcc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_TableFormula struct {
	ArrayAttr bool
	Content   string
}

// ValidateWithPath validates the CT_Filters and its children, prefixing error messages with path
func (_ddcfa *CT_Filters) ValidateWithPath(path string) error {
	if _adebf := _ddcfa.CalendarTypeAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u006c\u0065\u006e\u0064\u0061\u0072\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _adebf != nil {
		return _adebf
	}
	for _bgfcg, _dafdg := range _ddcfa.Filter {
		if _bdce := _dafdg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _bgfcg)); _bdce != nil {
			return _bdce
		}
	}
	for _cdced, _aagde := range _ddcfa.DateGroupItem {
		if _egff := _aagde.ValidateWithPath(_a.Sprintf("%\u0073/\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075p\u0049\u0074\u0065\u006d[%\u0064\u005d", path, _cdced)); _egff != nil {
			return _egff
		}
	}
	return nil
}
func (_gcdaca ST_GradientType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gcdaca.String(), start)
}
func (_eabeg *CT_WebPublishItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eabeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eabeg.CountAttr)})
	}
	e.EncodeToken(start)
	_adccd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}}
	for _, _deccbf := range _eabeg.WebPublishItem {
		e.EncodeElement(_deccbf, _adccd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaeed *CT_MetadataStrings) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gaeed.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gaeed.CountAttr)})
	}
	e.EncodeToken(start)
	_efdea := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
	for _, _cdaed := range _gaeed.S {
		e.EncodeElement(_cdaed, _efdea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DrawingHF and its children, prefixing error messages with path
func (_ecefgb *CT_DrawingHF) ValidateWithPath(path string) error { return nil }
func NewCT_WebPublishItem() *CT_WebPublishItem {
	_bedgc := &CT_WebPublishItem{}
	_bedgc.SourceTypeAttr = ST_WebSourceType(1)
	return _bedgc
}
func NewCT_Parameters() *CT_Parameters   { _fgcad := &CT_Parameters{}; return _fgcad }
func NewCT_ExternalRow() *CT_ExternalRow { _acbfa := &CT_ExternalRow{}; return _acbfa }
func (_acgdaa *ST_rwColActionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acgdaa = 0
	case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
		*_acgdaa = 1
	case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
		*_acgdaa = 2
	case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
		*_acgdaa = 3
	case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
		*_acgdaa = 4
	}
	return nil
}
func NewCT_MdxTuple() *CT_MdxTuple { _deabb := &CT_MdxTuple{}; return _deabb }
func (_bafca *Dialogsheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0064\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074"
	return _bafca.CT_Dialogsheet.MarshalXML(e, start)
}

// Validate validates the Sst and its children
func (_faaafc *Sst) Validate() error { return _faaafc.ValidateWithPath("\u0053\u0073\u0074") }

// Validate validates the CT_CalculatedMember and its children
func (_ddca *CT_CalculatedMember) Validate() error {
	return _ddca.ValidateWithPath("\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072")
}

// ValidateWithPath validates the CT_GroupMember and its children, prefixing error messages with path
func (_eaegb *CT_GroupMember) ValidateWithPath(path string) error { return nil }
func (_gdece *CT_ChartsheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbef := range start.Attr {
		if _cbef.Name.Local == "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_gdaa, _dcag := _g.ParseBool(_cbef.Value)
			if _dcag != nil {
				return _dcag
			}
			_gdece.TabSelectedAttr = &_gdaa
			continue
		}
		if _cbef.Name.Local == "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce" {
			_ecfga, _aecb := _g.ParseUint(_cbef.Value, 10, 32)
			if _aecb != nil {
				return _aecb
			}
			_dbaeb := uint32(_ecfga)
			_gdece.ZoomScaleAttr = &_dbaeb
			continue
		}
		if _cbef.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064" {
			_aced, _cced := _g.ParseUint(_cbef.Value, 10, 32)
			if _cced != nil {
				return _cced
			}
			_gdece.WorkbookViewIdAttr = uint32(_aced)
			continue
		}
		if _cbef.Name.Local == "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t" {
			_dbcg, _edcca := _g.ParseBool(_cbef.Value)
			if _edcca != nil {
				return _edcca
			}
			_gdece.ZoomToFitAttr = &_dbcg
			continue
		}
	}
_fagb:
	for {
		_aaggb, _cbfb := d.Token()
		if _cbfb != nil {
			return _cbfb
		}
		switch _ebcfd := _aaggb.(type) {
		case _b.StartElement:
			switch _ebcfd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdece.ExtLst = NewCT_ExtensionList()
				if _cffgg := d.DecodeElement(_gdece.ExtLst, &_ebcfd); _cffgg != nil {
					return _cffgg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _ebcfd.Name)
				if _aggg := d.Skip(); _aggg != nil {
					return _aggg
				}
			}
		case _b.EndElement:
			break _fagb
		case _b.CharData:
		}
	}
	return nil
}
func (_bdfdbd *CT_TableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bdfdbd.NameAttr)})
	if _bdfdbd.PivotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0069\u0076o\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bdfdbd.PivotAttr))})
	}
	if _bdfdbd.TableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062l\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bdfdbd.TableAttr))})
	}
	if _bdfdbd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bdfdbd.CountAttr)})
	}
	e.EncodeToken(start)
	if _bdfdbd.TableStyleElement != nil {
		_ffdgd := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074"}}
		for _, _ceeb := range _bdfdbd.TableStyleElement {
			e.EncodeElement(_ceeb, _ffdgd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gadfge *ST_TotalsRowFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gadfge = 0
	case "\u006e\u006f\u006e\u0065":
		*_gadfge = 1
	case "\u0073\u0075\u006d":
		*_gadfge = 2
	case "\u006d\u0069\u006e":
		*_gadfge = 3
	case "\u006d\u0061\u0078":
		*_gadfge = 4
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_gadfge = 5
	case "\u0063\u006f\u0075n\u0074":
		*_gadfge = 6
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_gadfge = 7
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_gadfge = 8
	case "\u0076\u0061\u0072":
		*_gadfge = 9
	case "\u0063\u0075\u0073\u0074\u006f\u006d":
		*_gadfge = 10
	}
	return nil
}

// Validate validates the CT_Record and its children
func (_fffca *CT_Record) Validate() error {
	return _fffca.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d")
}

type ST_FieldSortType byte

// ValidateWithPath validates the CT_SheetDimension and its children, prefixing error messages with path
func (_gfged *CT_SheetDimension) ValidateWithPath(path string) error { return nil }
func (_cdggcdc ST_DataValidationType) String() string {
	switch _cdggcdc {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u0068\u006fl\u0065"
	case 3:
		return "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case 4:
		return "\u006c\u0069\u0073\u0074"
	case 5:
		return "\u0064\u0061\u0074\u0065"
	case 6:
		return "\u0074\u0069\u006d\u0065"
	case 7:
		return "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case 8:
		return "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return ""
}

type CT_Filter struct {

	// Filter Value
	ValAttr *string
}

func (_defba *CT_MemberProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _defba.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_defba.NameAttr)})
	}
	if _defba.ShowCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defba.ShowCellAttr))})
	}
	if _defba.ShowTipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0054\u0069\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defba.ShowTipAttr))})
	}
	if _defba.ShowAsCaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0041\u0073\u0043\u0061\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defba.ShowAsCaptionAttr))})
	}
	if _defba.NameLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ea\u006d\u0065\u004c\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_defba.NameLenAttr)})
	}
	if _defba.PPosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0050\u006f\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_defba.PPosAttr)})
	}
	if _defba.PLenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u004c\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_defba.PLenAttr)})
	}
	if _defba.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_defba.LevelAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _a.Sprintf("\u0025\u0076", _defba.FieldAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aecba *CT_QueryTableFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aecba.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aecba.CountAttr)})
	}
	e.EncodeToken(start)
	if _aecba.QueryTableField != nil {
		_cfbfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aq\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064"}}
		for _, _ggegae := range _aecba.QueryTableField {
			e.EncodeElement(_ggegae, _cfbfg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalCell and its children
func (_babcc *CT_ExternalCell) Validate() error {
	return _babcc.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c")
}

// ValidateWithPath validates the CT_Index and its children, prefixing error messages with path
func (_efdb *CT_Index) ValidateWithPath(path string) error { return nil }

type ST_VolValueType byte
type CT_Sets struct {

	// Tuple Set Count
	CountAttr *uint32

	// OLAP Set
	Set []*CT_Set
}

func (_ebdcc *CT_TextFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _adgag := range start.Attr {
		if _adgag.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cfafbb, _edceb := _g.ParseUint(_adgag.Value, 10, 32)
			if _edceb != nil {
				return _edceb
			}
			_agfea := uint32(_cfafbb)
			_ebdcc.CountAttr = &_agfea
			continue
		}
	}
_eggff:
	for {
		_cdabcb, _fggca := d.Token()
		if _fggca != nil {
			return _fggca
		}
		switch _dgcefg := _cdabcb.(type) {
		case _b.StartElement:
			switch _dgcefg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074e\u0078\u0074\u0046\u0069\u0065\u006cd"}:
				_gcafb := NewCT_TextField()
				if _caege := d.DecodeElement(_gcafb, &_dgcefg); _caege != nil {
					return _caege
				}
				_ebdcc.TextField = append(_ebdcc.TextField, _gcafb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054e\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _dgcefg.Name)
				if _gedgc := d.Skip(); _gedgc != nil {
					return _gedgc
				}
			}
		case _b.EndElement:
			break _eggff
		case _b.CharData:
		}
	}
	return nil
}
func (_fafefg ST_MdxSetOrder) ValidateWithPath(path string) error {
	switch _fafefg {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fafefg))
	}
	return nil
}

type CT_PivotAreaReference struct {

	// Field Index
	FieldAttr *uint32

	// Item Index Count
	CountAttr *uint32

	// Selected
	SelectedAttr *bool

	// Positional Reference
	ByPositionAttr *bool

	// Relative Reference
	RelativeAttr *bool

	// Include Default Filter
	DefaultSubtotalAttr *bool

	// Include Sum Filter
	SumSubtotalAttr *bool

	// Include CountA Filter
	CountASubtotalAttr *bool

	// Include Average Filter
	AvgSubtotalAttr *bool

	// Include Maximum Filter
	MaxSubtotalAttr *bool

	// Include Minimum Filter
	MinSubtotalAttr *bool

	// Include Product Filter
	ProductSubtotalAttr *bool

	// Include Count Subtotal
	CountSubtotalAttr *bool

	// Include StdDev Filter
	StdDevSubtotalAttr *bool

	// Include StdDevP Filter
	StdDevPSubtotalAttr *bool

	// Include Var Filter
	VarSubtotalAttr *bool

	// Include VarP Filter
	VarPSubtotalAttr *bool

	// Field Item
	X      []*CT_Index
	ExtLst *CT_ExtensionList
}
type CT_PivotCacheDefinition struct {
	IdAttr *string

	// Invalid Cache
	InvalidAttr *bool

	// Save Pivot Records
	SaveDataAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Optimize Cache for Memory
	OptimizeMemoryAttr *bool

	// Enable PivotCache Refresh
	EnableRefreshAttr *bool

	// Last Refreshed By
	RefreshedByAttr *string

	// PivotCache Last Refreshed Date
	RefreshedDateAttr *float64

	// PivotCache Last Refreshed Date ISO
	RefreshedDateIsoAttr *_d.Time

	// Background Query
	BackgroundQueryAttr *bool

	// Missing Items Limit
	MissingItemsLimitAttr *uint32

	// PivotCache Created Version
	CreatedVersionAttr *uint8

	// PivotCache Last Refreshed Version
	RefreshedVersionAttr *uint8

	// Minimum Version Required for Refresh
	MinRefreshableVersionAttr *uint8

	// PivotCache Record Count
	RecordCountAttr *uint32

	// Upgrade PivotCache on Refresh
	UpgradeOnRefreshAttr *bool

	// Tuple Cache
	TupleCacheAttr *bool

	// Supports Subqueries
	SupportSubqueryAttr *bool

	// Supports Attribute Drilldown
	SupportAdvancedDrillAttr *bool

	// PivotCache Source Description
	CacheSource *CT_CacheSource

	// PivotCache Fields
	CacheFields *CT_CacheFields

	// PivotCache Hierarchies
	CacheHierarchies *CT_CacheHierarchies

	// OLAP KPIs
	Kpis *CT_PCDKPIs

	// Tuple Cache
	TupleCache *CT_TupleCache

	// Calculated Items
	CalculatedItems *CT_CalculatedItems

	// Calculated Members
	CalculatedMembers *CT_CalculatedMembers

	// OLAP Dimensions
	Dimensions *CT_Dimensions

	// OLAP Measure Groups
	MeasureGroups *CT_MeasureGroups

	// OLAP Measure Group
	Maps *CT_MeasureDimensionMaps

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_dgabg *ST_TableStyleType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bccbg, _eeefed := d.Token()
	if _eeefed != nil {
		return _eeefed
	}
	if _fecdfd, _cegcda := _bccbg.(_b.EndElement); _cegcda && _fecdfd.Name == start.Name {
		*_dgabg = 1
		return nil
	}
	if _edbag, _gbafe := _bccbg.(_b.CharData); !_gbafe {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bccbg)
	} else {
		switch string(_edbag) {
		case "":
			*_dgabg = 0
		case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
			*_dgabg = 1
		case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
			*_dgabg = 2
		case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_dgabg = 3
		case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_dgabg = 4
		case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
			*_dgabg = 5
		case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
			*_dgabg = 6
		case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
			*_dgabg = 7
		case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
			*_dgabg = 8
		case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
			*_dgabg = 9
		case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
			*_dgabg = 10
		case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
			*_dgabg = 11
		case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
			*_dgabg = 12
		case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
			*_dgabg = 13
		case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_dgabg = 14
		case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
			*_dgabg = 15
		case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
			*_dgabg = 16
		case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_dgabg = 17
		case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
			*_dgabg = 18
		case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
			*_dgabg = 19
		case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
			*_dgabg = 20
		case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_dgabg = 21
		case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
			*_dgabg = 22
		case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
			*_dgabg = 23
		case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_dgabg = 24
		case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
			*_dgabg = 25
		case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
			*_dgabg = 26
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
			*_dgabg = 27
		case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
			*_dgabg = 28
		}
	}
	_bccbg, _eeefed = d.Token()
	if _eeefed != nil {
		return _eeefed
	}
	if _bdaafa, _ebdgdf := _bccbg.(_b.EndElement); _ebdgdf && _bdaafa.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bccbg)
}
func NewCT_Dialogsheet() *CT_Dialogsheet { _ebbe := &CT_Dialogsheet{}; return _ebbe }
func NewCT_CellWatch() *CT_CellWatch     { _bfafa := &CT_CellWatch{}; return _bfafa }
func (_dgcaa ST_PrintError) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adgff := _b.Attr{}
	_adgff.Name = name
	switch _dgcaa {
	case ST_PrintErrorUnset:
		_adgff.Value = ""
	case ST_PrintErrorDisplayed:
		_adgff.Value = "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case ST_PrintErrorBlank:
		_adgff.Value = "\u0062\u006c\u0061n\u006b"
	case ST_PrintErrorDash:
		_adgff.Value = "\u0064\u0061\u0073\u0068"
	case ST_PrintErrorNA:
		_adgff.Value = "\u004e\u0041"
	}
	return _adgff, nil
}
func NewCT_TextFields() *CT_TextFields { _aafcg := &CT_TextFields{}; return _aafcg }

// ValidateWithPath validates the CT_Dxfs and its children, prefixing error messages with path
func (_dfge *CT_Dxfs) ValidateWithPath(path string) error {
	for _ggaa, _agba := range _dfge.Dxf {
		if _cfdabb := _agba.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u0078\u0066\u005b\u0025\u0064\u005d", path, _ggaa)); _cfdabb != nil {
			return _cfdabb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FieldUsage and its children, prefixing error messages with path
func (_fefbb *CT_FieldUsage) ValidateWithPath(path string) error { return nil }
func NewCT_ConditionalFormat() *CT_ConditionalFormat {
	_feeba := &CT_ConditionalFormat{}
	_feeba.PivotAreas = NewCT_PivotAreas()
	return _feeba
}
func (_gdefe *CT_OlapPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdefe.LocalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.LocalAttr))})
	}
	if _gdefe.LocalConnectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_gdefe.LocalConnectionAttr)})
	}
	if _gdefe.LocalRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.LocalRefreshAttr))})
	}
	if _gdefe.SendLocaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.SendLocaleAttr))})
	}
	if _gdefe.RowDrillCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gdefe.RowDrillCountAttr)})
	}
	if _gdefe.ServerFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.ServerFillAttr))})
	}
	if _gdefe.ServerNumberFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.ServerNumberFormatAttr))})
	}
	if _gdefe.ServerFontAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.ServerFontAttr))})
	}
	if _gdefe.ServerFontColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdefe.ServerFontColorAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_PivotFields struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field
	PivotField []*CT_PivotField
}

// ValidateWithPath validates the CT_CellStyleXfs and its children, prefixing error messages with path
func (_dddd *CT_CellStyleXfs) ValidateWithPath(path string) error {
	for _fgea, _bbad := range _dddd.Xf {
		if _beeff := _bbad.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0058\u0066\u005b\u0025\u0064]", path, _fgea)); _beeff != nil {
			return _beeff
		}
	}
	return nil
}
func (_cbgdef *CT_RevisionQueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdega := range start.Attr {
		if _gdega.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_cefgcc, _cadec := _g.ParseUint(_gdega.Value, 10, 32)
			if _cadec != nil {
				return _cadec
			}
			_cbgdef.SheetIdAttr = uint32(_cefgcc)
			continue
		}
		if _gdega.Name.Local == "\u0072\u0065\u0066" {
			_ffebc, _ebgdac := _gdega.Value, error(nil)
			if _ebgdac != nil {
				return _ebgdac
			}
			_cbgdef.RefAttr = _ffebc
			continue
		}
		if _gdega.Name.Local == "\u0066i\u0065\u006c\u0064\u0049\u0064" {
			_bcdc, _bdbgf := _g.ParseUint(_gdega.Value, 10, 32)
			if _bdbgf != nil {
				return _bdbgf
			}
			_cbgdef.FieldIdAttr = uint32(_bcdc)
			continue
		}
	}
	for {
		_fcbggg, _eegf := d.Token()
		if _eegf != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0051\u0075\u0065\u0072\u0079T\u0061\u0062\u006c\u0065\u0046i\u0065\u006cd\u003a\u0020\u0025\u0073", _eegf)
		}
		if _aafcd, _cfecd := _fcbggg.(_b.EndElement); _cfecd && _aafcd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the PivotTableDefinition and its children
func (_ggcbd *PivotTableDefinition) Validate() error {
	return _ggcbd.ValidateWithPath("P\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e")
}
func (_bgfdg *CT_OleSize) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbebd := range start.Attr {
		if _bbebd.Name.Local == "\u0072\u0065\u0066" {
			_bbdgb, _becb := _bbebd.Value, error(nil)
			if _becb != nil {
				return _becb
			}
			_bgfdg.RefAttr = _bbdgb
			continue
		}
	}
	for {
		_dbea, _fgbgb := d.Token()
		if _fgbgb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065\u003a\u0020%\u0073", _fgbgb)
		}
		if _dbfeba, _gfdfb := _dbea.(_b.EndElement); _gfdfb && _dbfeba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fee *CT_BooleanProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbcb := range start.Attr {
		if _gbcb.Name.Local == "\u0076\u0061\u006c" {
			_cdfg, _aef := _g.ParseBool(_gbcb.Value)
			if _aef != nil {
				return _aef
			}
			_fee.ValAttr = &_cdfg
			continue
		}
	}
	for {
		_def, _edb := d.Token()
		if _edb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0042\u006f\u006f\u006c\u0065\u0061\u006eP\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u003a\u0020\u0025\u0073", _edb)
		}
		if _fdb, _gdbf := _def.(_b.EndElement); _gdbf && _fdb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Mdx struct {

	// Connection Name Index
	NAttr uint32

	// Cube Function Tag
	FAttr ST_MdxFunctionType

	// Tuple MDX Metadata
	T *CT_MdxTuple

	// Set MDX Metadata
	Ms *CT_MdxSet

	// Member Property MDX Metadata
	P *CT_MdxMemeberProp

	// KPI MDX Metadata
	K *CT_MdxKPI
}
type CT_CalculatedItems struct {

	// Calculated Item Formula Count
	CountAttr *uint32

	// Calculated Item
	CalculatedItem []*CT_CalculatedItem
}
type CT_Number struct {

	// Value
	VAttr float64

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// Background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// OLAP Members
	Tpls []*CT_Tuples

	// Member Property Index
	X []*CT_X
}

func (_bfecag *CT_IconFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfecag.IconSetAttr = ST_IconSetType(1)
	for _, _edbge := range start.Attr {
		if _edbge.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_bfecag.IconSetAttr.UnmarshalXMLAttr(_edbge)
			continue
		}
		if _edbge.Name.Local == "\u0069\u0063\u006f\u006e\u0049\u0064" {
			_afdba, _ddgd := _g.ParseUint(_edbge.Value, 10, 32)
			if _ddgd != nil {
				return _ddgd
			}
			_fgcbd := uint32(_afdba)
			_bfecag.IconIdAttr = &_fgcbd
			continue
		}
	}
	for {
		_gdaff, _fdde := d.Token()
		if _fdde != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049c\u006fn\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s", _fdde)
		}
		if _deadab, _adddd := _gdaff.(_b.EndElement); _adddd && _deadab.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aggcg *CT_LevelGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aggcg.GroupMembers = NewCT_GroupMembers()
	for _, _gefea := range start.Attr {
		if _gefea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gcabc, _gdgb := _gefea.Value, error(nil)
			if _gdgb != nil {
				return _gdgb
			}
			_aggcg.NameAttr = _gcabc
			continue
		}
		if _gefea.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gdfffa, _ffcge := _gefea.Value, error(nil)
			if _ffcge != nil {
				return _ffcge
			}
			_aggcg.UniqueNameAttr = _gdfffa
			continue
		}
		if _gefea.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_cfcfg, _gafac := _gefea.Value, error(nil)
			if _gafac != nil {
				return _gafac
			}
			_aggcg.CaptionAttr = _cfcfg
			continue
		}
		if _gefea.Name.Local == "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074" {
			_bdbb, _cacfgg := _gefea.Value, error(nil)
			if _cacfgg != nil {
				return _cacfgg
			}
			_aggcg.UniqueParentAttr = &_bdbb
			continue
		}
		if _gefea.Name.Local == "\u0069\u0064" {
			_dcgea, _bcgegg := _g.ParseInt(_gefea.Value, 10, 32)
			if _bcgegg != nil {
				return _bcgegg
			}
			_fbbgf := int32(_dcgea)
			_aggcg.IdAttr = &_fbbgf
			continue
		}
	}
_fdddef:
	for {
		_aggag, _eacfb := d.Token()
		if _eacfb != nil {
			return _eacfb
		}
		switch _cbeab := _aggag.(type) {
		case _b.StartElement:
			switch _cbeab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006fu\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}:
				if _agadgb := d.DecodeElement(_aggcg.GroupMembers, &_cbeab); _agadgb != nil {
					return _agadgb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004ce\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _cbeab.Name)
				if _bbagd := d.Skip(); _bbagd != nil {
					return _bbagd
				}
			}
		case _b.EndElement:
			break _fdddef
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalCell struct {

	// Reference
	RAttr *string

	// Type
	TAttr ST_CellType

	// Value Metadata
	VmAttr *uint32

	// Value
	V *string
}

func (_bcfdg ST_GroupBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dbbba := _b.Attr{}
	_dbbba.Name = name
	switch _bcfdg {
	case ST_GroupByUnset:
		_dbbba.Value = ""
	case ST_GroupByRange:
		_dbbba.Value = "\u0072\u0061\u006eg\u0065"
	case ST_GroupBySeconds:
		_dbbba.Value = "\u0073e\u0063\u006f\u006e\u0064\u0073"
	case ST_GroupByMinutes:
		_dbbba.Value = "\u006di\u006e\u0075\u0074\u0065\u0073"
	case ST_GroupByHours:
		_dbbba.Value = "\u0068\u006f\u0075r\u0073"
	case ST_GroupByDays:
		_dbbba.Value = "\u0064\u0061\u0079\u0073"
	case ST_GroupByMonths:
		_dbbba.Value = "\u006d\u006f\u006e\u0074\u0068\u0073"
	case ST_GroupByQuarters:
		_dbbba.Value = "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073"
	case ST_GroupByYears:
		_dbbba.Value = "\u0079\u0065\u0061r\u0073"
	}
	return _dbbba, nil
}

type ST_DdeValueType byte

func (_cdec *CT_CalculatedMembers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cdec.CountAttr)})
	}
	e.EncodeToken(start)
	_ecaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}}
	for _, _defa := range _cdec.CalculatedMember {
		e.EncodeElement(_defa, _ecaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deccg ST_TimePeriod) String() string {
	switch _deccg {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0064a\u0079"
	case 2:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 3:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 4:
		return "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case 5:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 6:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 7:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return ""
}

type CT_PivotHierarchy struct {

	// Outline New Levels
	OutlineAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// New Levels Subtotals At Top
	SubtotalTopAttr *bool

	// Show In Field List
	ShowInFieldListAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Drag to Page
	DragToPageAttr *bool

	// Drag To Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Hierarchy Caption
	CaptionAttr *string

	// OLAP Member Properties
	Mps *CT_MemberProperties

	// Members
	Members []*CT_Members

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_FutureMetadata() *CT_FutureMetadata { _aaccab := &CT_FutureMetadata{}; return _aaccab }
func (_fbeca ST_PatternType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dgfgec := _b.Attr{}
	_dgfgec.Name = name
	switch _fbeca {
	case ST_PatternTypeUnset:
		_dgfgec.Value = ""
	case ST_PatternTypeNone:
		_dgfgec.Value = "\u006e\u006f\u006e\u0065"
	case ST_PatternTypeSolid:
		_dgfgec.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PatternTypeMediumGray:
		_dgfgec.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079"
	case ST_PatternTypeDarkGray:
		_dgfgec.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PatternTypeLightGray:
		_dgfgec.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PatternTypeDarkHorizontal:
		_dgfgec.Value = "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"
	case ST_PatternTypeDarkVertical:
		_dgfgec.Value = "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeDarkDown:
		_dgfgec.Value = "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e"
	case ST_PatternTypeDarkUp:
		_dgfgec.Value = "\u0064\u0061\u0072\u006b\u0055\u0070"
	case ST_PatternTypeDarkGrid:
		_dgfgec.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064"
	case ST_PatternTypeDarkTrellis:
		_dgfgec.Value = "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeLightHorizontal:
		_dgfgec.Value = "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"
	case ST_PatternTypeLightVertical:
		_dgfgec.Value = "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"
	case ST_PatternTypeLightDown:
		_dgfgec.Value = "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n"
	case ST_PatternTypeLightUp:
		_dgfgec.Value = "\u006ci\u0067\u0068\u0074\u0055\u0070"
	case ST_PatternTypeLightGrid:
		_dgfgec.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d"
	case ST_PatternTypeLightTrellis:
		_dgfgec.Value = "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073"
	case ST_PatternTypeGray125:
		_dgfgec.Value = "\u0067r\u0061\u0079\u0031\u0032\u0035"
	case ST_PatternTypeGray0625:
		_dgfgec.Value = "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035"
	}
	return _dgfgec, nil
}
func (_dcafc ST_Axis) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dcafc.String(), start)
}
func NewCT_RevisionQueryTableField() *CT_RevisionQueryTableField {
	_cbdfg := &CT_RevisionQueryTableField{}
	return _cbdfg
}
func NewCT_Comment() *CT_Comment { _cbdgd := &CT_Comment{}; _cbdgd.Text = NewCT_Rst(); return _cbdgd }

type CT_SheetId struct {

	// Sheet Id
	ValAttr uint32
}
type CT_Set struct {

	// Number of Tuples
	CountAttr *uint32

	// Maximum Rank Requested
	MaxRankAttr int32

	// MDX Set Definition
	SetDefinitionAttr string

	// Set Sort Order
	SortTypeAttr ST_SortType

	// Query Failed
	QueryFailedAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Sort By Tuple
	SortByTuple *CT_Tuples
}

func NewCT_ColorScale() *CT_ColorScale { _fcbd := &CT_ColorScale{}; return _fcbd }
func (_eadcd *CT_PhoneticRun) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0062"}, Value: _a.Sprintf("\u0025\u0076", _eadcd.SbAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0062"}, Value: _a.Sprintf("\u0025\u0076", _eadcd.EbAttr)})
	e.EncodeToken(start)
	_eacee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_f.AddPreserveSpaceAttr(&_eacee, _eadcd.T)
	e.EncodeElement(_eadcd.T, _eacee)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_DateTimeGroupingUnset  ST_DateTimeGrouping = 0
	ST_DateTimeGroupingYear   ST_DateTimeGrouping = 1
	ST_DateTimeGroupingMonth  ST_DateTimeGrouping = 2
	ST_DateTimeGroupingDay    ST_DateTimeGrouping = 3
	ST_DateTimeGroupingHour   ST_DateTimeGrouping = 4
	ST_DateTimeGroupingMinute ST_DateTimeGrouping = 5
	ST_DateTimeGroupingSecond ST_DateTimeGrouping = 6
)

func (_dbgabf *ST_GroupBy) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ffbca, _cdgfd := d.Token()
	if _cdgfd != nil {
		return _cdgfd
	}
	if _gbbddc, _bfdbg := _ffbca.(_b.EndElement); _bfdbg && _gbbddc.Name == start.Name {
		*_dbgabf = 1
		return nil
	}
	if _bdbbcg, _cggeb := _ffbca.(_b.CharData); !_cggeb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffbca)
	} else {
		switch string(_bdbbcg) {
		case "":
			*_dbgabf = 0
		case "\u0072\u0061\u006eg\u0065":
			*_dbgabf = 1
		case "\u0073e\u0063\u006f\u006e\u0064\u0073":
			*_dbgabf = 2
		case "\u006di\u006e\u0075\u0074\u0065\u0073":
			*_dbgabf = 3
		case "\u0068\u006f\u0075r\u0073":
			*_dbgabf = 4
		case "\u0064\u0061\u0079\u0073":
			*_dbgabf = 5
		case "\u006d\u006f\u006e\u0074\u0068\u0073":
			*_dbgabf = 6
		case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
			*_dbgabf = 7
		case "\u0079\u0065\u0061r\u0073":
			*_dbgabf = 8
		}
	}
	_ffbca, _cdgfd = d.Token()
	if _cdgfd != nil {
		return _cdgfd
	}
	if _bdbbb, _aecebb := _ffbca.(_b.EndElement); _aecebb && _bdbbb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffbca)
}
func (_bbcc *CT_Map) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aebd := range start.Attr {
		if _aebd.Name.Local == "\u0049\u0044" {
			_bbfbd, _ddfcb := _g.ParseUint(_aebd.Value, 10, 32)
			if _ddfcb != nil {
				return _ddfcb
			}
			_bbcc.IDAttr = uint32(_bbfbd)
			continue
		}
		if _aebd.Name.Local == "\u004e\u0061\u006d\u0065" {
			_aefcg, _fbage := _aebd.Value, error(nil)
			if _fbage != nil {
				return _fbage
			}
			_bbcc.NameAttr = _aefcg
			continue
		}
		if _aebd.Name.Local == "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074" {
			_gedbe, _dacfae := _aebd.Value, error(nil)
			if _dacfae != nil {
				return _dacfae
			}
			_bbcc.RootElementAttr = _gedbe
			continue
		}
		if _aebd.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044" {
			_debg, _gdeccfb := _aebd.Value, error(nil)
			if _gdeccfb != nil {
				return _gdeccfb
			}
			_bbcc.SchemaIDAttr = _debg
			continue
		}
		if _aebd.Name.Local == "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073" {
			_dcaad, _eecdfgf := _g.ParseBool(_aebd.Value)
			if _eecdfgf != nil {
				return _eecdfgf
			}
			_bbcc.ShowImportExportValidationErrorsAttr = _dcaad
			continue
		}
		if _aebd.Name.Local == "\u0041u\u0074\u006f\u0046\u0069\u0074" {
			_ffabd, _ggbb := _g.ParseBool(_aebd.Value)
			if _ggbb != nil {
				return _ggbb
			}
			_bbcc.AutoFitAttr = _ffabd
			continue
		}
		if _aebd.Name.Local == "\u0041\u0070\u0070\u0065\u006e\u0064" {
			_fcfb, _fgdbb := _g.ParseBool(_aebd.Value)
			if _fgdbb != nil {
				return _fgdbb
			}
			_bbcc.AppendAttr = _fcfb
			continue
		}
		if _aebd.Name.Local == "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074" {
			_gacgg, _gdgcg := _g.ParseBool(_aebd.Value)
			if _gdgcg != nil {
				return _gdgcg
			}
			_bbcc.PreserveSortAFLayoutAttr = _gacgg
			continue
		}
		if _aebd.Name.Local == "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074" {
			_eegbd, _dgabf := _g.ParseBool(_aebd.Value)
			if _dgabf != nil {
				return _dgabf
			}
			_bbcc.PreserveFormatAttr = _eegbd
			continue
		}
	}
_dcfdf:
	for {
		_cgccg, _efegg := d.Token()
		if _efegg != nil {
			return _efegg
		}
		switch _gbabb := _cgccg.(type) {
		case _b.StartElement:
			switch _gbabb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "D\u0061\u0074\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}:
				_bbcc.DataBinding = NewCT_DataBinding()
				if _gccga := d.DecodeElement(_bbcc.DataBinding, &_gbabb); _gccga != nil {
					return _gccga
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0061\u0070\u0020\u0025\u0076", _gbabb.Name)
				if _acdac := d.Skip(); _acdac != nil {
					return _acdac
				}
			}
		case _b.EndElement:
			break _dcfdf
		case _b.CharData:
		}
	}
	return nil
}

type CT_FilterColumn struct {

	// Filter Column Data
	ColIdAttr uint32

	// Hidden AutoFilter Button
	HiddenButtonAttr *bool

	// Show Filter Button
	ShowButtonAttr *bool

	// Filter Criteria
	Filters *CT_Filters

	// Top 10
	Top10 *CT_Top10

	// Custom Filters
	CustomFilters *CT_CustomFilters

	// Dynamic Filter
	DynamicFilter *CT_DynamicFilter

	// Color Filter Criteria
	ColorFilter *CT_ColorFilter

	// Icon Filter
	IconFilter *CT_IconFilter
	ExtLst     *CT_ExtensionList
}

func (_dggaf *CT_Record) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dggaf.M != nil {
		_gdcdc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _dcaba := range _dggaf.M {
			e.EncodeElement(_dcaba, _gdcdc)
		}
	}
	if _dggaf.N != nil {
		_gfedg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _dbgba := range _dggaf.N {
			e.EncodeElement(_dbgba, _gfedg)
		}
	}
	if _dggaf.B != nil {
		_cfad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _gdccg := range _dggaf.B {
			e.EncodeElement(_gdccg, _cfad)
		}
	}
	if _dggaf.E != nil {
		_feffdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _gdeea := range _dggaf.E {
			e.EncodeElement(_gdeea, _feffdg)
		}
	}
	if _dggaf.S != nil {
		_ccdb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _feafc := range _dggaf.S {
			e.EncodeElement(_feafc, _ccdb)
		}
	}
	if _dggaf.D != nil {
		_dfgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _aecdg := range _dggaf.D {
			e.EncodeElement(_aecdg, _dfgag)
		}
	}
	if _dggaf.X != nil {
		_febbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _afcgc := range _dggaf.X {
			e.EncodeElement(_afcgc, _febbc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bbaeaa ST_DataValidationOperator) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbaeaa.String(), start)
}

// ValidateWithPath validates the CT_XmlColumnPr and its children, prefixing error messages with path
func (_ggadg *CT_XmlColumnPr) ValidateWithPath(path string) error {
	if _ggadg.ExtLst != nil {
		if _cadfg := _ggadg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cadfg != nil {
			return _cadfg
		}
	}
	return nil
}
func (_gbgff *ST_ConditionalFormattingOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gagbd, _fggea := d.Token()
	if _fggea != nil {
		return _fggea
	}
	if _geagbg, _ccagac := _gagbd.(_b.EndElement); _ccagac && _geagbg.Name == start.Name {
		*_gbgff = 1
		return nil
	}
	if _ccgceb, _cfcabc := _gagbd.(_b.CharData); !_cfcabc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gagbd)
	} else {
		switch string(_ccgceb) {
		case "":
			*_gbgff = 0
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_gbgff = 1
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_gbgff = 2
		case "\u0065\u0071\u0075a\u006c":
			*_gbgff = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_gbgff = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_gbgff = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_gbgff = 6
		case "\u0062e\u0074\u0077\u0065\u0065\u006e":
			*_gbgff = 7
		case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
			*_gbgff = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_gbgff = 9
		case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
			*_gbgff = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_gbgff = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_gbgff = 12
		}
	}
	_gagbd, _fggea = d.Token()
	if _fggea != nil {
		return _fggea
	}
	if _bceefa, _dbcfc := _gagbd.(_b.EndElement); _dbcfc && _bceefa.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gagbd)
}

// Validate validates the CT_rowItems and its children
func (_aaabcf *CT_rowItems) Validate() error {
	return _aaabcf.ValidateWithPath("C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073")
}
func (_cgccgg *CT_PCDSCPage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgccgg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cgccgg.CountAttr)})
	}
	e.EncodeToken(start)
	if _cgccgg.PageItem != nil {
		_abcab := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}}
		for _, _febdd := range _cgccgg.PageItem {
			e.EncodeElement(_febdd, _abcab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbgcg *CT_Sheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _cbgcg.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cbgcg.SheetIdAttr)})
	if _cbgcg.StateAttr != ST_SheetStateUnset {
		_gcebg, _gffecd := _cbgcg.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _gffecd != nil {
			return _gffecd
		}
		start.Attr = append(start.Attr, _gcebg)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cbgcg.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_MdxSet() *CT_MdxSet { _aade := &CT_MdxSet{}; return _aade }
func NewCT_PivotSelection() *CT_PivotSelection {
	_bdecfb := &CT_PivotSelection{}
	_bdecfb.PivotArea = NewCT_PivotArea()
	return _bdecfb
}

// ValidateWithPath validates the CT_Set and its children, prefixing error messages with path
func (_gccbc *CT_Set) ValidateWithPath(path string) error {
	if _fabbed := _gccbc.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _fabbed != nil {
		return _fabbed
	}
	for _bfcec, _ffcea := range _gccbc.Tpls {
		if _dgbca := _ffcea.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _bfcec)); _dgbca != nil {
			return _dgbca
		}
	}
	if _gccbc.SortByTuple != nil {
		if _bfebac := _gccbc.SortByTuple.ValidateWithPath(path + "\u002f\u0053\u006fr\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"); _bfebac != nil {
			return _bfebac
		}
	}
	return nil
}
func (_dbbbc ST_OleUpdate) Validate() error { return _dbbbc.ValidateWithPath("") }

type CT_FutureMetadata struct {

	// Metadata Type Name
	NameAttr string

	// Future Metadata Block Count
	CountAttr *uint32

	// Future Metadata Block
	Bk []*CT_FutureMetadataBlock

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_SortBy byte

func (_cgbbc ST_CellFormulaType) Validate() error { return _cgbbc.ValidateWithPath("") }
func NewStyleSheet() *StyleSheet {
	_debdf := &StyleSheet{}
	_debdf.CT_Stylesheet = *NewCT_Stylesheet()
	return _debdf
}
func (_aaecf ST_SmartTagShow) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aaecf.String(), start)
}
func (_ccgee ST_PivotAreaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_abbaec := _b.Attr{}
	_abbaec.Name = name
	switch _ccgee {
	case ST_PivotAreaTypeUnset:
		_abbaec.Value = ""
	case ST_PivotAreaTypeNone:
		_abbaec.Value = "\u006e\u006f\u006e\u0065"
	case ST_PivotAreaTypeNormal:
		_abbaec.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_PivotAreaTypeData:
		_abbaec.Value = "\u0064\u0061\u0074\u0061"
	case ST_PivotAreaTypeAll:
		_abbaec.Value = "\u0061\u006c\u006c"
	case ST_PivotAreaTypeOrigin:
		_abbaec.Value = "\u006f\u0072\u0069\u0067\u0069\u006e"
	case ST_PivotAreaTypeButton:
		_abbaec.Value = "\u0062\u0075\u0074\u0074\u006f\u006e"
	case ST_PivotAreaTypeTopEnd:
		_abbaec.Value = "\u0074\u006f\u0070\u0045\u006e\u0064"
	case ST_PivotAreaTypeTopRight:
		_abbaec.Value = "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return _abbaec, nil
}
func (_cbgffg ST_TargetScreenSize) String() string {
	switch _cbgffg {
	case 0:
		return ""
	case 1:
		return "\u00354\u0034\u0078\u0033\u0037\u0036"
	case 2:
		return "\u00364\u0030\u0078\u0034\u0038\u0030"
	case 3:
		return "\u00372\u0030\u0078\u0035\u0031\u0032"
	case 4:
		return "\u00380\u0030\u0078\u0036\u0030\u0030"
	case 5:
		return "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case 6:
		return "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case 7:
		return "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case 8:
		return "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case 9:
		return "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case 10:
		return "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case 11:
		return "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return ""
}
func (_aaafe ST_DataValidationImeMode) String() string {
	switch _aaafe {
	case 0:
		return ""
	case 1:
		return "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u006f\u006e"
	case 4:
		return "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"
	case 5:
		return "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 6:
		return "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 7:
		return "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061"
	case 8:
		return "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a"
	case 9:
		return "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a"
	case 10:
		return "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c"
	case 11:
		return "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c"
	}
	return ""
}
func (_fcgaag *ST_MdxSetOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gaccab, _aebgfb := d.Token()
	if _aebgfb != nil {
		return _aebgfb
	}
	if _eecafg, _fcgafe := _gaccab.(_b.EndElement); _fcgafe && _eecafg.Name == start.Name {
		*_fcgaag = 1
		return nil
	}
	if _fbdcg, _dfedce := _gaccab.(_b.CharData); !_dfedce {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaccab)
	} else {
		switch string(_fbdcg) {
		case "":
			*_fcgaag = 0
		case "\u0075":
			*_fcgaag = 1
		case "\u0061":
			*_fcgaag = 2
		case "\u0064":
			*_fcgaag = 3
		case "\u0061\u0061":
			*_fcgaag = 4
		case "\u0061\u0064":
			*_fcgaag = 5
		case "\u006e\u0061":
			*_fcgaag = 6
		case "\u006e\u0064":
			*_fcgaag = 7
		}
	}
	_gaccab, _aebgfb = d.Token()
	if _aebgfb != nil {
		return _aebgfb
	}
	if _cddef, _afabfd := _gaccab.(_b.EndElement); _afabfd && _cddef.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaccab)
}
func (_abcdf *CT_CsPageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _debf := range start.Attr {
		if _debf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _debf.Name.Local == "\u0069\u0064" || _debf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _debf.Name.Local == "\u0069\u0064" {
			_bddg, _eeeg := _debf.Value, error(nil)
			if _eeeg != nil {
				return _eeeg
			}
			_abcdf.IdAttr = &_bddg
			continue
		}
		if _debf.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_cffa, _gcbea := _g.ParseUint(_debf.Value, 10, 32)
			if _gcbea != nil {
				return _gcbea
			}
			_eaece := uint32(_cffa)
			_abcdf.PaperSizeAttr = &_eaece
			continue
		}
		if _debf.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_babd, _cdge := _debf.Value, error(nil)
			if _cdge != nil {
				return _cdge
			}
			_abcdf.PaperWidthAttr = &_babd
			continue
		}
		if _debf.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_cggf, _abffa := _g.ParseUint(_debf.Value, 10, 32)
			if _abffa != nil {
				return _abffa
			}
			_egcc := uint32(_cggf)
			_abcdf.FirstPageNumberAttr = &_egcc
			continue
		}
		if _debf.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_abcdf.OrientationAttr.UnmarshalXMLAttr(_debf)
			continue
		}
		if _debf.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_egdb, _eedd := _g.ParseBool(_debf.Value)
			if _eedd != nil {
				return _eedd
			}
			_abcdf.UsePrinterDefaultsAttr = &_egdb
			continue
		}
		if _debf.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_feebcf, _dgfa := _debf.Value, error(nil)
			if _dgfa != nil {
				return _dgfa
			}
			_abcdf.PaperHeightAttr = &_feebcf
			continue
		}
		if _debf.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_fbca, _bfbee := _g.ParseBool(_debf.Value)
			if _bfbee != nil {
				return _bfbee
			}
			_abcdf.DraftAttr = &_fbca
			continue
		}
		if _debf.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_gedc, _cdfd := _g.ParseBool(_debf.Value)
			if _cdfd != nil {
				return _cdfd
			}
			_abcdf.UseFirstPageNumberAttr = &_gedc
			continue
		}
		if _debf.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_baec, _geca := _g.ParseUint(_debf.Value, 10, 32)
			if _geca != nil {
				return _geca
			}
			_acdeg := uint32(_baec)
			_abcdf.HorizontalDpiAttr = &_acdeg
			continue
		}
		if _debf.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_cfeb, _deca := _g.ParseUint(_debf.Value, 10, 32)
			if _deca != nil {
				return _deca
			}
			_gdccd := uint32(_cfeb)
			_abcdf.VerticalDpiAttr = &_gdccd
			continue
		}
		if _debf.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_eface, _cacd := _g.ParseUint(_debf.Value, 10, 32)
			if _cacd != nil {
				return _cacd
			}
			_bfafb := uint32(_eface)
			_abcdf.CopiesAttr = &_bfafb
			continue
		}
		if _debf.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_bgba, _fbbb := _g.ParseBool(_debf.Value)
			if _fbbb != nil {
				return _fbbb
			}
			_abcdf.BlackAndWhiteAttr = &_bgba
			continue
		}
	}
	for {
		_ddff, _fcabe := d.Token()
		if _fcabe != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u0073\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070:\u0020\u0025\u0073", _fcabe)
		}
		if _dcdb, _agge := _ddff.(_b.EndElement); _agge && _dcdb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewSingleXmlCells() *SingleXmlCells {
	_dfgba := &SingleXmlCells{}
	_dfgba.CT_SingleXmlCells = *NewCT_SingleXmlCells()
	return _dfgba
}

// ValidateWithPath validates the CT_CustomProperty and its children, prefixing error messages with path
func (_bbgb *CT_CustomProperty) ValidateWithPath(path string) error { return nil }
func (_baedef *CT_WebPublishItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbadd := range start.Attr {
		if _bbadd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aabbb, _adfdge := _g.ParseUint(_bbadd.Value, 10, 32)
			if _adfdge != nil {
				return _adfdge
			}
			_cbafd := uint32(_aabbb)
			_baedef.CountAttr = &_cbafd
			continue
		}
	}
_ggadbf:
	for {
		_daabcb, _cdace := d.Token()
		if _cdace != nil {
			return _cdace
		}
		switch _geeaa := _daabcb.(type) {
		case _b.StartElement:
			switch _geeaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d"}:
				_caebf := NewCT_WebPublishItem()
				if _bfdbea := d.DecodeElement(_caebf, &_geeaa); _bfdbea != nil {
					return _bfdbea
				}
				_baedef.WebPublishItem = append(_baedef.WebPublishItem, _caebf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _geeaa.Name)
				if _gcfgf := d.Skip(); _gcfgf != nil {
					return _gcfgf
				}
			}
		case _b.EndElement:
			break _ggadbf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the StyleSheet and its children, prefixing error messages with path
func (_defged *StyleSheet) ValidateWithPath(path string) error {
	if _acfcg := _defged.CT_Stylesheet.ValidateWithPath(path); _acfcg != nil {
		return _acfcg
	}
	return nil
}

// ValidateWithPath validates the CT_BookView and its children, prefixing error messages with path
func (_dde *CT_BookView) ValidateWithPath(path string) error {
	if _gbg := _dde.VisibilityAttr.ValidateWithPath(path + "\u002fV\u0069s\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0041\u0074\u0074\u0072"); _gbg != nil {
		return _gbg
	}
	if _dde.ExtLst != nil {
		if _cdf := _dde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cdf != nil {
			return _cdf
		}
	}
	return nil
}
func NewCT_GroupMembers() *CT_GroupMembers { _gcgb := &CT_GroupMembers{}; return _gcgb }

type CT_Parameters struct {

	// Parameter Count
	CountAttr *uint32

	// Parameter Properties
	Parameter []*CT_Parameter
}

func (_cbdaf *CT_TextPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cbdaf.PromptAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u006f\u006d\u0070\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.PromptAttr))})
	}
	if _cbdaf.FileTypeAttr != ST_FileTypeUnset {
		_dgebbc, _cadge := _cbdaf.FileTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065"})
		if _cadge != nil {
			return _cadge
		}
		start.Attr = append(start.Attr, _dgebbc)
	}
	if _cbdaf.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.CodePageAttr)})
	}
	if _cbdaf.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.CharacterSetAttr)})
	}
	if _cbdaf.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.FirstRowAttr)})
	}
	if _cbdaf.SourceFileAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.SourceFileAttr)})
	}
	if _cbdaf.DelimitedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.DelimitedAttr))})
	}
	if _cbdaf.DecimalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0063\u0069\u006d\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.DecimalAttr)})
	}
	if _cbdaf.ThousandsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.ThousandsAttr)})
	}
	if _cbdaf.TabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.TabAttr))})
	}
	if _cbdaf.SpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.SpaceAttr))})
	}
	if _cbdaf.CommaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006dm\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.CommaAttr))})
	}
	if _cbdaf.SemicolonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.SemicolonAttr))})
	}
	if _cbdaf.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cbdaf.ConsecutiveAttr))})
	}
	if _cbdaf.QualifierAttr != ST_QualifierUnset {
		_ffgea, _dbefd := _cbdaf.QualifierAttr.MarshalXMLAttr(_b.Name{Local: "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r"})
		if _dbefd != nil {
			return _dbefd
		}
		start.Attr = append(start.Attr, _ffgea)
	}
	if _cbdaf.DelimiterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r"}, Value: _a.Sprintf("\u0025\u0076", *_cbdaf.DelimiterAttr)})
	}
	e.EncodeToken(start)
	if _cbdaf.TextFields != nil {
		_cgfbcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}}
		e.EncodeElement(_cbdaf.TextFields, _cgfbcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_Axis byte

func (_dadb *CT_DataFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cfef := range start.Attr {
		if _cfef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcfbb, _egcae := _g.ParseUint(_cfef.Value, 10, 32)
			if _egcae != nil {
				return _egcae
			}
			_adgc := uint32(_dcfbb)
			_dadb.CountAttr = &_adgc
			continue
		}
	}
_ffgc:
	for {
		_bgca, _dcbdg := d.Token()
		if _dcbdg != nil {
			return _dcbdg
		}
		switch _gebg := _bgca.(type) {
		case _b.StartElement:
			switch _gebg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd"}:
				_bfbcb := NewCT_DataField()
				if _efcag := d.DecodeElement(_bfbcb, &_gebg); _efcag != nil {
					return _efcag
				}
				_dadb.DataField = append(_dadb.DataField, _bfbcb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044a\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _gebg.Name)
				if _babb := d.Skip(); _babb != nil {
					return _babb
				}
			}
		case _b.EndElement:
			break _ffgc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CalculatedItem and its children, prefixing error messages with path
func (_fccea *CT_CalculatedItem) ValidateWithPath(path string) error {
	if _bbgc := _fccea.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _bbgc != nil {
		return _bbgc
	}
	if _fccea.ExtLst != nil {
		if _aeeb := _fccea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeeb != nil {
			return _aeeb
		}
	}
	return nil
}
func NewCT_DdeItems() *CT_DdeItems           { _cabbd := &CT_DdeItems{}; return _cabbd }
func (_ddffb ST_TimePeriod) Validate() error { return _ddffb.ValidateWithPath("") }

const (
	ST_GroupByUnset    ST_GroupBy = 0
	ST_GroupByRange    ST_GroupBy = 1
	ST_GroupBySeconds  ST_GroupBy = 2
	ST_GroupByMinutes  ST_GroupBy = 3
	ST_GroupByHours    ST_GroupBy = 4
	ST_GroupByDays     ST_GroupBy = 5
	ST_GroupByMonths   ST_GroupBy = 6
	ST_GroupByQuarters ST_GroupBy = 7
	ST_GroupByYears    ST_GroupBy = 8
)

type CT_PivotTableStyle struct {

	// Table Style Name
	NameAttr *string

	// Show Row Header Formatting
	ShowRowHeadersAttr *bool

	// Show Table Style Column Header Formatting
	ShowColHeadersAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColStripesAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool
}

func (_eebdc *CT_MetadataStrings) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feca := range start.Attr {
		if _feca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbbda, _adegd := _g.ParseUint(_feca.Value, 10, 32)
			if _adegd != nil {
				return _adegd
			}
			_agfecf := uint32(_dbbda)
			_eebdc.CountAttr = &_agfecf
			continue
		}
	}
_ddaa:
	for {
		_dgafa, _bffcc := d.Token()
		if _bffcc != nil {
			return _bffcc
		}
		switch _edfff := _dgafa.(type) {
		case _b.StartElement:
			switch _edfff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_fgafg := NewCT_XStringElement()
				if _eedg := d.DecodeElement(_fgafg, &_edfff); _eedg != nil {
					return _eedg
				}
				_eebdc.S = append(_eebdc.S, _fgafg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073\u0020\u0025\u0076", _edfff.Name)
				if _eeea := d.Skip(); _eeea != nil {
					return _eeea
				}
			}
		case _b.EndElement:
			break _ddaa
		case _b.CharData:
		}
	}
	return nil
}

type CT_TableParts struct {

	// Count
	CountAttr *uint32

	// Table Part
	TablePart []*CT_TablePart
}

func (_caagc *CT_TableColumns) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfdab := range start.Attr {
		if _bfdab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fegcg, _fccbf := _g.ParseUint(_bfdab.Value, 10, 32)
			if _fccbf != nil {
				return _fccbf
			}
			_dbacd := uint32(_fegcg)
			_caagc.CountAttr = &_dbacd
			continue
		}
	}
_adafa:
	for {
		_dcgfd, _bdaca := d.Token()
		if _bdaca != nil {
			return _bdaca
		}
		switch _dfabc := _dcgfd.(type) {
		case _b.StartElement:
			switch _dfabc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "t\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e"}:
				_beega := NewCT_TableColumn()
				if _ecbgfe := d.DecodeElement(_beega, &_dfabc); _ecbgfe != nil {
					return _ecbgfe
				}
				_caagc.TableColumn = append(_caagc.TableColumn, _beega)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0020\u0025\u0076", _dfabc.Name)
				if _baega := d.Skip(); _baega != nil {
					return _baega
				}
			}
		case _b.EndElement:
			break _adafa
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_Rst() *CT_Rst { _defga := &CT_Rst{}; return _defga }
func NewCT_Sst() *CT_Sst { _aagece := &CT_Sst{}; return _aagece }

// Validate validates the CT_DateGroupItem and its children
func (_acdce *CT_DateGroupItem) Validate() error {
	return _acdce.ValidateWithPath("\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d")
}
func NewCT_MetadataStrings() *CT_MetadataStrings { _gabfa := &CT_MetadataStrings{}; return _gabfa }
func (_baadd *CT_UndoInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064e\u0078"}, Value: _a.Sprintf("\u0025\u0076", _baadd.IndexAttr)})
	_gfgbdf, _fbfcdb := _baadd.ExpAttr.MarshalXMLAttr(_b.Name{Local: "\u0065\u0078\u0070"})
	if _fbfcdb != nil {
		return _fbfcdb
	}
	start.Attr = append(start.Attr, _gfgbdf)
	if _baadd.Ref3DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u00663\u0044"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baadd.Ref3DAttr))})
	}
	if _baadd.ArrayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baadd.ArrayAttr))})
	}
	if _baadd.VAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baadd.VAttr))})
	}
	if _baadd.NfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baadd.NfAttr))})
	}
	if _baadd.CsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_baadd.CsAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072"}, Value: _a.Sprintf("\u0025\u0076", _baadd.DrAttr)})
	if _baadd.DnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_baadd.DnAttr)})
	}
	if _baadd.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_baadd.RAttr)})
	}
	if _baadd.SIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_baadd.SIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_febbb *CT_TableParts) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abfef := range start.Attr {
		if _abfef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cbacc, _fdedd := _g.ParseUint(_abfef.Value, 10, 32)
			if _fdedd != nil {
				return _fdedd
			}
			_dcgbbf := uint32(_cbacc)
			_febbb.CountAttr = &_dcgbbf
			continue
		}
	}
_efcdga:
	for {
		_gaeag, _daadd := d.Token()
		if _daadd != nil {
			return _daadd
		}
		switch _acbda := _gaeag.(type) {
		case _b.StartElement:
			switch _acbda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0062\u006c\u0065\u0050\u0061\u0072t"}:
				_cbcgca := NewCT_TablePart()
				if _ecebg := d.DecodeElement(_cbcgca, &_acbda); _ecebg != nil {
					return _ecebg
				}
				_febbb.TablePart = append(_febbb.TablePart, _cbcgca)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073 \u0025\u0076", _acbda.Name)
				if _gbbaga := d.Skip(); _gbbaga != nil {
					return _gbbaga
				}
			}
		case _b.EndElement:
			break _efcdga
		case _b.CharData:
		}
	}
	return nil
}
func (_dcegee ST_Qualifier) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_debeae := _b.Attr{}
	_debeae.Name = name
	switch _dcegee {
	case ST_QualifierUnset:
		_debeae.Value = ""
	case ST_QualifierDoubleQuote:
		_debeae.Value = "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierSingleQuote:
		_debeae.Value = "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case ST_QualifierNone:
		_debeae.Value = "\u006e\u006f\u006e\u0065"
	}
	return _debeae, nil
}

// Validate validates the CT_SheetBackgroundPicture and its children
func (_fdfgc *CT_SheetBackgroundPicture) Validate() error {
	return _fdfgc.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e")
}
func (_cfdce ST_SortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfdce.String(), start)
}
func (_gdecfc *CT_X) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bacg := range start.Attr {
		if _bacg.Name.Local == "\u0076" {
			_dfebb, _dddcdf := _g.ParseInt(_bacg.Value, 10, 32)
			if _dddcdf != nil {
				return _dddcdf
			}
			_efcae := int32(_dfebb)
			_gdecfc.VAttr = &_efcae
			continue
		}
	}
	for {
		_badbdf, _eedgf := d.Token()
		if _eedgf != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0058\u003a\u0020\u0025\u0073", _eedgf)
		}
		if _bbgdf, _dffaf := _badbdf.(_b.EndElement); _dffaf && _bbgdf.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_DynamicFilter() *CT_DynamicFilter {
	_aadd := &CT_DynamicFilter{}
	_aadd.TypeAttr = ST_DynamicFilterType(1)
	return _aadd
}
func NewCT_MeasureDimensionMap() *CT_MeasureDimensionMap {
	_bbbfb := &CT_MeasureDimensionMap{}
	return _bbbfb
}
func (_fcfed *ST_Qualifier) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fcfed = 0
	case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_fcfed = 1
	case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
		*_fcfed = 2
	case "\u006e\u006f\u006e\u0065":
		*_fcfed = 3
	}
	return nil
}
func NewCT_RevisionDefinedName() *CT_RevisionDefinedName {
	_fccfc := &CT_RevisionDefinedName{}
	return _fccfc
}
func (_cda *CT_Border) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdfb := range start.Attr {
		if _gdfb.Name.Local == "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070" {
			_eabg, _cde := _g.ParseBool(_gdfb.Value)
			if _cde != nil {
				return _cde
			}
			_cda.DiagonalUpAttr = &_eabg
			continue
		}
		if _gdfb.Name.Local == "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e" {
			_dcc, _cge := _g.ParseBool(_gdfb.Value)
			if _cge != nil {
				return _cge
			}
			_cda.DiagonalDownAttr = &_dcc
			continue
		}
		if _gdfb.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_cfec, _fag := _g.ParseBool(_gdfb.Value)
			if _fag != nil {
				return _fag
			}
			_cda.OutlineAttr = &_cfec
			continue
		}
	}
_ef:
	for {
		_ccd, _cbgb := d.Token()
		if _cbgb != nil {
			return _cbgb
		}
		switch _cffe := _ccd.(type) {
		case _b.StartElement:
			switch _cffe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0061r\u0074"}:
				_cda.Start = NewCT_BorderPr()
				if _bae := d.DecodeElement(_cda.Start, &_cffe); _bae != nil {
					return _bae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				_cda.End = NewCT_BorderPr()
				if _bfa := d.DecodeElement(_cda.End, &_cffe); _bfa != nil {
					return _bfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_cda.Left = NewCT_BorderPr()
				if _gdfa := d.DecodeElement(_cda.Left, &_cffe); _gdfa != nil {
					return _gdfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_cda.Right = NewCT_BorderPr()
				if _ebc := d.DecodeElement(_cda.Right, &_cffe); _ebc != nil {
					return _ebc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_cda.Top = NewCT_BorderPr()
				if _ggd := d.DecodeElement(_cda.Top, &_cffe); _ggd != nil {
					return _ggd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_cda.Bottom = NewCT_BorderPr()
				if _fab := d.DecodeElement(_cda.Bottom, &_cffe); _fab != nil {
					return _fab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}:
				_cda.Diagonal = NewCT_BorderPr()
				if _fabf := d.DecodeElement(_cda.Diagonal, &_cffe); _fabf != nil {
					return _fabf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}:
				_cda.Vertical = NewCT_BorderPr()
				if _agab := d.DecodeElement(_cda.Vertical, &_cffe); _agab != nil {
					return _agab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}:
				_cda.Horizontal = NewCT_BorderPr()
				if _bagbc := d.DecodeElement(_cda.Horizontal, &_cffe); _bagbc != nil {
					return _bagbc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0042\u006f\u0072d\u0065\u0072 \u0025\u0076", _cffe.Name)
				if _gfgc := d.Skip(); _gfgc != nil {
					return _gfgc
				}
			}
		case _b.EndElement:
			break _ef
		case _b.CharData:
		}
	}
	return nil
}
func (_dgeca *ST_Axis) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcede, _fdgfa := d.Token()
	if _fdgfa != nil {
		return _fdgfa
	}
	if _degfef, _ebecfc := _dcede.(_b.EndElement); _ebecfc && _degfef.Name == start.Name {
		*_dgeca = 1
		return nil
	}
	if _baedeb, _gdbdcf := _dcede.(_b.CharData); !_gdbdcf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcede)
	} else {
		switch string(_baedeb) {
		case "":
			*_dgeca = 0
		case "\u0061x\u0069\u0073\u0052\u006f\u0077":
			*_dgeca = 1
		case "\u0061x\u0069\u0073\u0043\u006f\u006c":
			*_dgeca = 2
		case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
			*_dgeca = 3
		case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
			*_dgeca = 4
		}
	}
	_dcede, _fdgfa = d.Token()
	if _fdgfa != nil {
		return _fdgfa
	}
	if _gdfgeg, _ebfgfe := _dcede.(_b.EndElement); _ebfgfe && _gdfgeg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcede)
}
func (_fcbac *CT_GroupLevels) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcbac.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fcbac.CountAttr)})
	}
	e.EncodeToken(start)
	_ecffd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c"}}
	for _, _beebg := range _fcbac.GroupLevel {
		e.EncodeElement(_beebg, _ecffd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgggbgc ST_VerticalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgggbgc.String(), start)
}

type CT_WebPublishObjects struct {

	// Count
	CountAttr *uint32

	// Web Publishing Object
	WebPublishObject []*CT_WebPublishObject
}
type CT_CellStyles struct {

	// Style Count
	CountAttr *uint32

	// Cell Style
	CellStyle []*CT_CellStyle
}

// ValidateWithPath validates the CT_ExternalRow and its children, prefixing error messages with path
func (_cbaf *CT_ExternalRow) ValidateWithPath(path string) error {
	for _affg, _dagdb := range _cbaf.Cell {
		if _ebbf := _dagdb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _affg)); _ebbf != nil {
			return _ebbf
		}
	}
	return nil
}

const (
	ST_RevisionActionUnset  ST_RevisionAction = 0
	ST_RevisionActionAdd    ST_RevisionAction = 1
	ST_RevisionActionDelete ST_RevisionAction = 2
)

func (_bgcaaf *CT_Fonts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgcaaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bgcaaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _bgcaaf.Font != nil {
		_cebgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u006e\u0074"}}
		for _, _deggg := range _bgcaaf.Font {
			e.EncodeElement(_deggg, _cebgc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gge *CT_BookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gge.VisibilityAttr != ST_VisibilityUnset {
		_cgb, _gda := _gge.VisibilityAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079"})
		if _gda != nil {
			return _gda
		}
		start.Attr = append(start.Attr, _cgb)
	}
	if _gge.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gge.MinimizedAttr))})
	}
	if _gge.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gge.ShowHorizontalScrollAttr))})
	}
	if _gge.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gge.ShowVerticalScrollAttr))})
	}
	if _gge.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gge.ShowSheetTabsAttr))})
	}
	if _gge.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_gge.XWindowAttr)})
	}
	if _gge.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_gge.YWindowAttr)})
	}
	if _gge.WindowWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_gge.WindowWidthAttr)})
	}
	if _gge.WindowHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gge.WindowHeightAttr)})
	}
	if _gge.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_gge.TabRatioAttr)})
	}
	if _gge.FirstSheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gge.FirstSheetAttr)})
	}
	if _gge.ActiveTabAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b"}, Value: _a.Sprintf("\u0025\u0076", *_gge.ActiveTabAttr)})
	}
	if _gge.AutoFilterDateGroupingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gge.AutoFilterDateGroupingAttr))})
	}
	e.EncodeToken(start)
	if _gge.ExtLst != nil {
		_bc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gge.ExtLst, _bc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acece *CT_ExternalBook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _acece.IdAttr)})
	e.EncodeToken(start)
	if _acece.SheetNames != nil {
		_abfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_acece.SheetNames, _abfb)
	}
	if _acece.DefinedNames != nil {
		_dggec := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"}}
		e.EncodeElement(_acece.DefinedNames, _dggec)
	}
	if _acece.SheetDataSet != nil {
		_dfdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074"}}
		e.EncodeElement(_acece.SheetDataSet, _dfdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcdge ST_ParameterType) String() string {
	switch _bcdge {
	case 0:
		return ""
	case 1:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	case 2:
		return "\u0076\u0061\u006cu\u0065"
	case 3:
		return "\u0063\u0065\u006c\u006c"
	}
	return ""
}

type CT_ReviewedRevisions struct {

	// Reviewed Revisions Count
	CountAttr *uint32

	// Reviewed
	Reviewed []*CT_Reviewed
}

// Validate validates the CT_TextPr and its children
func (_eebfg *CT_TextPr) Validate() error {
	return _eebfg.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r")
}
func NewCT_MdxMetadata() *CT_MdxMetadata { _dgfdd := &CT_MdxMetadata{}; return _dgfdd }
func (_bgdaf *CT_WebPublishObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agdegb := range start.Attr {
		if _agdegb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dafba, _ccfaee := _g.ParseUint(_agdegb.Value, 10, 32)
			if _ccfaee != nil {
				return _ccfaee
			}
			_gcfbc := uint32(_dafba)
			_bgdaf.CountAttr = &_gcfbc
			continue
		}
	}
_fccbd:
	for {
		_egdfd, _bcbbb := d.Token()
		if _bcbbb != nil {
			return _bcbbb
		}
		switch _afcae := _egdfd.(type) {
		case _b.StartElement:
			switch _afcae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0065b\u0050\u0075\u0062l\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}:
				_bffded := NewCT_WebPublishObject()
				if _gcgabd := d.DecodeElement(_bffded, &_afcae); _gcgabd != nil {
					return _gcgabd
				}
				_bgdaf.WebPublishObject = append(_bgdaf.WebPublishObject, _bffded)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u0073\u0020\u0025\u0076", _afcae.Name)
				if _fefdb := d.Skip(); _fefdb != nil {
					return _fefdb
				}
			}
		case _b.EndElement:
			break _fccbd
		case _b.CharData:
		}
	}
	return nil
}
func (_acgce *Worksheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003aw\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074"
	return _acgce.CT_Worksheet.MarshalXML(e, start)
}
func (_gbdag *CT_InputCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _gbdag.RAttr)})
	if _gbdag.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gbdag.DeletedAttr))})
	}
	if _gbdag.UndoneAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0064\u006f\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gbdag.UndoneAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _gbdag.ValAttr)})
	if _gbdag.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gbdag.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcffd *ST_TableType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccafeg, _dgabdf := d.Token()
	if _dgabdf != nil {
		return _dgabdf
	}
	if _bcbeg, _gdbbee := _ccafeg.(_b.EndElement); _gdbbee && _bcbeg.Name == start.Name {
		*_bcffd = 1
		return nil
	}
	if _eegeee, _efbdcg := _ccafeg.(_b.CharData); !_efbdcg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccafeg)
	} else {
		switch string(_eegeee) {
		case "":
			*_bcffd = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_bcffd = 1
		case "\u0078\u006d\u006c":
			*_bcffd = 2
		case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
			*_bcffd = 3
		}
	}
	_ccafeg, _dgabdf = d.Token()
	if _dgabdf != nil {
		return _dgabdf
	}
	if _ddabfa, _bbbbe := _ccafeg.(_b.EndElement); _bbbbe && _ddabfa.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccafeg)
}

// ValidateWithPath validates the CT_PivotHierarchy and its children, prefixing error messages with path
func (_cbdceaf *CT_PivotHierarchy) ValidateWithPath(path string) error {
	if _cbdceaf.Mps != nil {
		if _dcdac := _cbdceaf.Mps.ValidateWithPath(path + "\u002f\u004d\u0070\u0073"); _dcdac != nil {
			return _dcdac
		}
	}
	for _gcfag, _feefa := range _cbdceaf.Members {
		if _gcddc := _feefa.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072s\u005b\u0025\u0064\u005d", path, _gcfag)); _gcddc != nil {
			return _gcddc
		}
	}
	if _cbdceaf.ExtLst != nil {
		if _eeecfc := _cbdceaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eeecfc != nil {
			return _eeecfc
		}
	}
	return nil
}
func (_decfbb *CT_SmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_debcef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"}}
	for _, _afgfdc := range _decfbb.CellSmartTags {
		e.EncodeElement(_afgfdc, _debcef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Stylesheet struct {

	// Number Formats
	NumFmts *CT_NumFmts

	// Fonts
	Fonts *CT_Fonts

	// Fills
	Fills *CT_Fills

	// Borders
	Borders *CT_Borders

	// Formatting Records
	CellStyleXfs *CT_CellStyleXfs

	// Cell Formats
	CellXfs *CT_CellXfs

	// Cell Styles
	CellStyles *CT_CellStyles

	// Formats
	Dxfs *CT_Dxfs

	// Table Styles
	TableStyles *CT_TableStyles

	// Colors
	Colors *CT_Colors

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_DataValidations struct {

	// Disable Prompts
	DisablePromptsAttr *bool

	// Top Left Corner (X Coodrinate)
	XWindowAttr *uint32

	// Top Left Corner (Y Coordinate)
	YWindowAttr *uint32

	// Data Validation Item Count
	CountAttr *uint32

	// Data Validation
	DataValidation []*CT_DataValidation
}

const (
	ST_SmartTagShowUnset       ST_SmartTagShow = 0
	ST_SmartTagShowAll         ST_SmartTagShow = 1
	ST_SmartTagShowNone        ST_SmartTagShow = 2
	ST_SmartTagShowNoIndicator ST_SmartTagShow = 3
)

func (_dfeada ST_PaneState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfeada.String(), start)
}
func NewCT_CustomSheetViews() *CT_CustomSheetViews { _eafg := &CT_CustomSheetViews{}; return _eafg }
func (_dfcbb *CT_RPrElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _dfcbb.RFont != nil {
		_cgfbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_dfcbb.RFont, _cgfbf)
	}
	if _dfcbb.Charset != nil {
		_ebfgdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0068\u0061\u0072\u0073\u0065\u0074"}}
		e.EncodeElement(_dfcbb.Charset, _ebfgdg)
	}
	if _dfcbb.Family != nil {
		_eeecgf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u0061\u006d\u0069\u006cy"}}
		e.EncodeElement(_dfcbb.Family, _eeecgf)
	}
	if _dfcbb.B != nil {
		_fbeff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		e.EncodeElement(_dfcbb.B, _fbeff)
	}
	if _dfcbb.I != nil {
		_cgfeec := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
		e.EncodeElement(_dfcbb.I, _cgfeec)
	}
	if _dfcbb.Strike != nil {
		_gdceg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u0072\u0069\u006be"}}
		e.EncodeElement(_dfcbb.Strike, _gdceg)
	}
	if _dfcbb.Outline != nil {
		_edgba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u0075\u0074\u006c\u0069\u006e\u0065"}}
		e.EncodeElement(_dfcbb.Outline, _edgba)
	}
	if _dfcbb.Shadow != nil {
		_ebacc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0068\u0061\u0064\u006fw"}}
		e.EncodeElement(_dfcbb.Shadow, _ebacc)
	}
	if _dfcbb.Condense != nil {
		_bcbcd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}}
		e.EncodeElement(_dfcbb.Condense, _bcbcd)
	}
	if _dfcbb.Extend != nil {
		_bacffc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u0065\u006ed"}}
		e.EncodeElement(_dfcbb.Extend, _bacffc)
	}
	if _dfcbb.Color != nil {
		_bdcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_dfcbb.Color, _bdcb)
	}
	if _dfcbb.Sz != nil {
		_agebfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u007a"}}
		e.EncodeElement(_dfcbb.Sz, _agebfa)
	}
	if _dfcbb.U != nil {
		_fbcfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0075"}}
		e.EncodeElement(_dfcbb.U, _fbcfb)
	}
	if _dfcbb.VertAlign != nil {
		_cfeae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003av\u0065\u0072\u0074\u0041\u006c\u0069\u0067\u006e"}}
		e.EncodeElement(_dfcbb.VertAlign, _cfeae)
	}
	if _dfcbb.Scheme != nil {
		_bgegc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0063\u0068\u0065\u006de"}}
		e.EncodeElement(_dfcbb.Scheme, _bgegc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_agggga *ST_ItemType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_deabba, _ecace := d.Token()
	if _ecace != nil {
		return _ecace
	}
	if _acfgf, _gceceg := _deabba.(_b.EndElement); _gceceg && _acfgf.Name == start.Name {
		*_agggga = 1
		return nil
	}
	if _bafgb, _aedfcd := _deabba.(_b.CharData); !_aedfcd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deabba)
	} else {
		switch string(_bafgb) {
		case "":
			*_agggga = 0
		case "\u0064\u0061\u0074\u0061":
			*_agggga = 1
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_agggga = 2
		case "\u0073\u0075\u006d":
			*_agggga = 3
		case "\u0063\u006f\u0075\u006e\u0074\u0041":
			*_agggga = 4
		case "\u0061\u0076\u0067":
			*_agggga = 5
		case "\u006d\u0061\u0078":
			*_agggga = 6
		case "\u006d\u0069\u006e":
			*_agggga = 7
		case "\u0070r\u006f\u0064\u0075\u0063\u0074":
			*_agggga = 8
		case "\u0063\u006f\u0075n\u0074":
			*_agggga = 9
		case "\u0073\u0074\u0064\u0044\u0065\u0076":
			*_agggga = 10
		case "\u0073t\u0064\u0044\u0065\u0076\u0050":
			*_agggga = 11
		case "\u0076\u0061\u0072":
			*_agggga = 12
		case "\u0076\u0061\u0072\u0050":
			*_agggga = 13
		case "\u0067\u0072\u0061n\u0064":
			*_agggga = 14
		case "\u0062\u006c\u0061n\u006b":
			*_agggga = 15
		}
	}
	_deabba, _ecace = d.Token()
	if _ecace != nil {
		return _ecace
	}
	if _bdfccg, _ffeecb := _deabba.(_b.EndElement); _ffeecb && _bdfccg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deabba)
}
func (_ddebac ST_UnderlineValues) ValidateWithPath(path string) error {
	switch _ddebac {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddebac))
	}
	return nil
}
func NewCT_ExternalLink() *CT_ExternalLink { _cddge := &CT_ExternalLink{}; return _cddge }

type CT_Filters struct {

	// Filter by Blank
	BlankAttr *bool

	// Calendar Type
	CalendarTypeAttr _ff.ST_CalendarType

	// Filter
	Filter []*CT_Filter

	// Date Grouping
	DateGroupItem []*CT_DateGroupItem
}

// ValidateWithPath validates the CT_MdxMetadata and its children, prefixing error messages with path
func (_cddce *CT_MdxMetadata) ValidateWithPath(path string) error {
	for _dbbg, _cgdge := range _cddce.Mdx {
		if _aegage := _cgdge.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u0064\u0078\u005b\u0025\u0064\u005d", path, _dbbg)); _aegage != nil {
			return _aegage
		}
	}
	return nil
}
func (_cfbdc *CT_ExternalDefinedNames) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bebcb:
	for {
		_cgaf, _addb := d.Token()
		if _addb != nil {
			return _addb
		}
		switch _faca := _cgaf.(type) {
		case _b.StartElement:
			switch _faca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "d\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065"}:
				_caffa := NewCT_ExternalDefinedName()
				if _gabc := d.DecodeElement(_caffa, &_faca); _gabc != nil {
					return _gabc
				}
				_cfbdc.DefinedName = append(_cfbdc.DefinedName, _caffa)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0044e\u0066\u0069\u006e\u0065\u0064\u004ea\u006d\u0065\u0073 \u0025\u0076", _faca.Name)
				if _bedfa := d.Skip(); _bedfa != nil {
					return _bedfa
				}
			}
		case _b.EndElement:
			break _bebcb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SheetIdMap() *CT_SheetIdMap { _baffa := &CT_SheetIdMap{}; return _baffa }
func (_ccgdc *CT_RevisionHeader) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ccgdc.GuidAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _ccgdc.DateTimeAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ccgdc.MaxSheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _ccgdc.UserNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ccgdc.IdAttr)})
	if _ccgdc.MinRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e\u0052\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ccgdc.MinRIdAttr)})
	}
	if _ccgdc.MaxRIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0052\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ccgdc.MaxRIdAttr)})
	}
	e.EncodeToken(start)
	_fabde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}}
	e.EncodeElement(_ccgdc.SheetIdMap, _fabde)
	if _ccgdc.ReviewedList != nil {
		_adcbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ar\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}}
		e.EncodeElement(_ccgdc.ReviewedList, _adcbf)
	}
	if _ccgdc.ExtLst != nil {
		_becaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ccgdc.ExtLst, _becaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ChartsheetProtection struct {

	// Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Contents
	ContentAttr *bool

	// Objects Locked
	ObjectsAttr *bool
}
type CT_PivotFilters struct {

	// Pivot Filter Count
	CountAttr *uint32

	// PivotTable Advanced Filter
	Filter []*CT_PivotFilter
}

func NewHeaders() *Headers {
	_deeff := &Headers{}
	_deeff.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	return _deeff
}
func (_gedbf ST_TimePeriod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeagf := _b.Attr{}
	_aeagf.Name = name
	switch _gedbf {
	case ST_TimePeriodUnset:
		_aeagf.Value = ""
	case ST_TimePeriodToday:
		_aeagf.Value = "\u0074\u006f\u0064a\u0079"
	case ST_TimePeriodYesterday:
		_aeagf.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_TimePeriodTomorrow:
		_aeagf.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_TimePeriodLast7Days:
		_aeagf.Value = "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s"
	case ST_TimePeriodThisMonth:
		_aeagf.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodLastMonth:
		_aeagf.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodNextMonth:
		_aeagf.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_TimePeriodThisWeek:
		_aeagf.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_TimePeriodLastWeek:
		_aeagf.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_TimePeriodNextWeek:
		_aeagf.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	}
	return _aeagf, nil
}
func NewCT_MergeCell() *CT_MergeCell { _gabcg := &CT_MergeCell{}; return _gabcg }
func NewCT_RevisionRowColumn() *CT_RevisionRowColumn {
	_ffdbg := &CT_RevisionRowColumn{}
	_ffdbg.ActionAttr = ST_rwColActionType(1)
	return _ffdbg
}

// ValidateWithPath validates the CT_Cfvo and its children, prefixing error messages with path
func (_bffb *CT_Cfvo) ValidateWithPath(path string) error {
	if _bffb.TypeAttr == ST_CfvoTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ffa := _bffb.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ffa != nil {
		return _ffa
	}
	if _bffb.ExtLst != nil {
		if _ebag := _bffb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ebag != nil {
			return _ebag
		}
	}
	return nil
}

type CT_QueryTableRefresh struct {

	// Preserve Sort & Filter Layout
	PreserveSortFilterLayoutAttr *bool

	// Next Field Id Wrapped
	FieldIdWrappedAttr *bool

	// Headers In Last Refresh
	HeadersInLastRefreshAttr *bool

	// Minimum Refresh Version
	MinimumVersionAttr *uint8

	// Next field id
	NextIdAttr *uint32

	// Columns Left
	UnboundColumnsLeftAttr *uint32

	// Columns Right
	UnboundColumnsRightAttr *uint32

	// Query table fields
	QueryTableFields *CT_QueryTableFields

	// Deleted Fields
	QueryTableDeletedFields *CT_QueryTableDeletedFields

	// Sort State
	SortState *CT_SortState

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func NewCT_ChartsheetProtection() *CT_ChartsheetProtection {
	_cbecd := &CT_ChartsheetProtection{}
	return _cbecd
}
func NewCT_Chartsheet() *CT_Chartsheet {
	_bacb := &CT_Chartsheet{}
	_bacb.SheetViews = NewCT_ChartsheetViews()
	_bacb.Drawing = NewCT_Drawing()
	return _bacb
}

// ValidateWithPath validates the CT_DataField and its children, prefixing error messages with path
func (_defff *CT_DataField) ValidateWithPath(path string) error {
	if _dgdf := _defff.SubtotalAttr.ValidateWithPath(path + "\u002f\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0041\u0074\u0074\u0072"); _dgdf != nil {
		return _dgdf
	}
	if _bfde := _defff.ShowDataAsAttr.ValidateWithPath(path + "\u002fS\u0068o\u0077\u0044\u0061\u0074\u0061\u0041\u0073\u0041\u0074\u0074\u0072"); _bfde != nil {
		return _bfde
	}
	if _defff.ExtLst != nil {
		if _dddc := _defff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dddc != nil {
			return _dddc
		}
	}
	return nil
}
func (_befeab *ST_CellComments) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_befeab = 0
	case "\u006e\u006f\u006e\u0065":
		*_befeab = 1
	case "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064":
		*_befeab = 2
	case "\u0061\u0074\u0045n\u0064":
		*_befeab = 3
	}
	return nil
}

// Validate validates the CT_Font and its children
func (_ddge *CT_Font) Validate() error {
	return _ddge.ValidateWithPath("\u0043T\u005f\u0046\u006f\u006e\u0074")
}

// ValidateWithPath validates the CT_Reviewed and its children, prefixing error messages with path
func (_dfefe *CT_Reviewed) ValidateWithPath(path string) error { return nil }
func NewCT_Sheet() *CT_Sheet                                   { _dgeff := &CT_Sheet{}; return _dgeff }

// Validate validates the CT_XStringElement and its children
func (_dbdfef *CT_XStringElement) Validate() error {
	return _dbdfef.ValidateWithPath("\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074")
}
func (_cfgfe *CT_FileVersion) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcbeg := range start.Attr {
		if _gcbeg.Name.Local == "\u0061p\u0070\u004e\u0061\u006d\u0065" {
			_bgef, _cgedd := _gcbeg.Value, error(nil)
			if _cgedd != nil {
				return _cgedd
			}
			_cfgfe.AppNameAttr = &_bgef
			continue
		}
		if _gcbeg.Name.Local == "\u006c\u0061\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_dgada, _cdbfa := _gcbeg.Value, error(nil)
			if _cdbfa != nil {
				return _cdbfa
			}
			_cfgfe.LastEditedAttr = &_dgada
			continue
		}
		if _gcbeg.Name.Local == "\u006c\u006f\u0077e\u0073\u0074\u0045\u0064\u0069\u0074\u0065\u0064" {
			_eecf, _gdbdf := _gcbeg.Value, error(nil)
			if _gdbdf != nil {
				return _gdbdf
			}
			_cfgfe.LowestEditedAttr = &_eecf
			continue
		}
		if _gcbeg.Name.Local == "\u0072\u0075\u0070\u0042\u0075\u0069\u006c\u0064" {
			_gfgdd, _gacc := _gcbeg.Value, error(nil)
			if _gacc != nil {
				return _gacc
			}
			_cfgfe.RupBuildAttr = &_gfgdd
			continue
		}
		if _gcbeg.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_cfgg, _bacec := _gcbeg.Value, error(nil)
			if _bacec != nil {
				return _bacec
			}
			_cfgfe.CodeNameAttr = &_cfgg
			continue
		}
	}
	for {
		_fdaaf, _accdg := d.Token()
		if _accdg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u006c\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e:\u0020\u0025\u0073", _accdg)
		}
		if _bcbgc, _fbbbf := _fdaaf.(_b.EndElement); _fbbbf && _bcbgc.Name == start.Name {
			break
		}
	}
	return nil
}

type Sst struct{ CT_Sst }
type CT_CellSmartTag struct {

	// Smart Tag Type Index
	TypeAttr uint32

	// Deleted
	DeletedAttr *bool

	// XML Based
	XmlBasedAttr *bool

	// Smart Tag Properties
	CellSmartTagPr []*CT_CellSmartTagPr
}

func (_edegc ST_TextVAlign) String() string {
	switch _edegc {
	case 0:
		return ""
	case 1:
		return "\u0074\u006f\u0070"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

const (
	ST_SourceTypeUnset         ST_SourceType = 0
	ST_SourceTypeWorksheet     ST_SourceType = 1
	ST_SourceTypeExternal      ST_SourceType = 2
	ST_SourceTypeConsolidation ST_SourceType = 3
	ST_SourceTypeScenario      ST_SourceType = 4
)

type CT_Index struct {

	// Shared Items Index
	VAttr uint32
}

func (_aadae *CT_SheetProtection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aadae.PasswordAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aadae.PasswordAttr)})
	}
	if _aadae.AlgorithmNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aadae.AlgorithmNameAttr)})
	}
	if _aadae.HashValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_aadae.HashValueAttr)})
	}
	if _aadae.SaltValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0076", *_aadae.SaltValueAttr)})
	}
	if _aadae.SpinCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et"}, Value: _a.Sprintf("\u0025\u0076", *_aadae.SpinCountAttr)})
	}
	if _aadae.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.SheetAttr))})
	}
	if _aadae.ObjectsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fb\u006a\u0065\u0063\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.ObjectsAttr))})
	}
	if _aadae.ScenariosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.ScenariosAttr))})
	}
	if _aadae.FormatCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.FormatCellsAttr))})
	}
	if _aadae.FormatColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.FormatColumnsAttr))})
	}
	if _aadae.FormatRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.FormatRowsAttr))})
	}
	if _aadae.InsertColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.InsertColumnsAttr))})
	}
	if _aadae.InsertRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.InsertRowsAttr))})
	}
	if _aadae.InsertHyperlinksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.InsertHyperlinksAttr))})
	}
	if _aadae.DeleteColumnsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.DeleteColumnsAttr))})
	}
	if _aadae.DeleteRowsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.DeleteRowsAttr))})
	}
	if _aadae.SelectLockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.SelectLockedCellsAttr))})
	}
	if _aadae.SortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0072\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.SortAttr))})
	}
	if _aadae.AutoFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.AutoFilterAttr))})
	}
	if _aadae.PivotTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.PivotTablesAttr))})
	}
	if _aadae.SelectUnlockedCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aadae.SelectUnlockedCellsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgdbda *ST_CalcMode) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbecff, _adgbc := d.Token()
	if _adgbc != nil {
		return _adgbc
	}
	if _dgcgg, _bbaag := _fbecff.(_b.EndElement); _bbaag && _dgcgg.Name == start.Name {
		*_cgdbda = 1
		return nil
	}
	if _dbegc, _eaecb := _fbecff.(_b.CharData); !_eaecb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbecff)
	} else {
		switch string(_dbegc) {
		case "":
			*_cgdbda = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_cgdbda = 1
		case "\u0061\u0075\u0074\u006f":
			*_cgdbda = 2
		case "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065":
			*_cgdbda = 3
		}
	}
	_fbecff, _adgbc = d.Token()
	if _adgbc != nil {
		return _adgbc
	}
	if _dcace, _dbdgda := _fbecff.(_b.EndElement); _dbdgda && _dcace.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbecff)
}

type CT_ProtectedRange struct {

	// Legacy Password
	PasswordAttr *string

	// Sequence of References
	SqrefAttr ST_Sqref

	// Name
	NameAttr string

	// Security Descriptor
	SecurityDescriptorAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Security Descriptor
	SecurityDescriptor []string
}

func (_fdafa *CT_WebPublishObject) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _fdafa.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0076I\u0064"}, Value: _a.Sprintf("\u0025\u0076", _fdafa.DivIdAttr)})
	if _fdafa.SourceObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fdafa.SourceObjectAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", _fdafa.DestinationFileAttr)})
	if _fdafa.TitleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fdafa.TitleAttr)})
	}
	if _fdafa.AutoRepublishAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fdafa.AutoRepublishAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ExternalDefinedNames and its children
func (_ecgbg *CT_ExternalDefinedNames) Validate() error {
	return _ecgbg.ValidateWithPath("\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073")
}
func (_gadfg ST_DataValidationErrorStyle) Validate() error { return _gadfg.ValidateWithPath("") }
func (_eefad ST_MdxFunctionType) ValidateWithPath(path string) error {
	switch _eefad {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eefad))
	}
	return nil
}
func NewCT_RPrElt() *CT_RPrElt { _beaeb := &CT_RPrElt{}; return _beaeb }
func (_bfed *CT_CellStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfcfb := range start.Attr {
		if _gfcfb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gedf, _befb := _g.ParseUint(_gfcfb.Value, 10, 32)
			if _befb != nil {
				return _befb
			}
			_dafa := uint32(_gedf)
			_bfed.CountAttr = &_dafa
			continue
		}
	}
_begf:
	for {
		_cgbc, _bbfac := d.Token()
		if _bbfac != nil {
			return _bbfac
		}
		switch _effd := _cgbc.(type) {
		case _b.StartElement:
			switch _effd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0053\u0074\u0079\u006ce"}:
				_ccff := NewCT_CellStyle()
				if _gacb := d.DecodeElement(_ccff, &_effd); _gacb != nil {
					return _gacb
				}
				_bfed.CellStyle = append(_bfed.CellStyle, _ccff)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043e\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _effd.Name)
				if _gbebd := d.Skip(); _gbebd != nil {
					return _gbebd
				}
			}
		case _b.EndElement:
			break _begf
		case _b.CharData:
		}
	}
	return nil
}
func (_eggebb ST_VolDepType) ValidateWithPath(path string) error {
	switch _eggebb {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eggebb))
	}
	return nil
}

// ValidateWithPath validates the CT_Sst and its children, prefixing error messages with path
func (_eacbc *CT_Sst) ValidateWithPath(path string) error {
	for _fedeg, _cadfbb := range _eacbc.Si {
		if _badge := _cadfbb.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0053\u0069\u005b\u0025\u0064]", path, _fedeg)); _badge != nil {
			return _badge
		}
	}
	if _eacbc.ExtLst != nil {
		if _bgaba := _eacbc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bgaba != nil {
			return _bgaba
		}
	}
	return nil
}
func (_gdefc ST_UpdateLinks) ValidateWithPath(path string) error {
	switch _gdefc {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gdefc))
	}
	return nil
}

// Validate validates the CT_SheetDimension and its children
func (_deabbg *CT_SheetDimension) Validate() error {
	return _deabbg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_RevisionHeaders and its children
func (_gacab *CT_RevisionHeaders) Validate() error {
	return _gacab.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073")
}

const (
	ST_SheetViewTypeUnset            ST_SheetViewType = 0
	ST_SheetViewTypeNormal           ST_SheetViewType = 1
	ST_SheetViewTypePageBreakPreview ST_SheetViewType = 2
	ST_SheetViewTypePageLayout       ST_SheetViewType = 3
)

func (_bbafg ST_HtmlFmt) ValidateWithPath(path string) error {
	switch _bbafg {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbafg))
	}
	return nil
}

// ValidateWithPath validates the CT_Query and its children, prefixing error messages with path
func (_ggbcb *CT_Query) ValidateWithPath(path string) error {
	if _ggbcb.Tpls != nil {
		if _facaa := _ggbcb.Tpls.ValidateWithPath(path + "\u002f\u0054\u0070l\u0073"); _facaa != nil {
			return _facaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Dialogsheet and its children, prefixing error messages with path
func (_dfec *CT_Dialogsheet) ValidateWithPath(path string) error {
	if _dfec.SheetPr != nil {
		if _adabd := _dfec.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _adabd != nil {
			return _adabd
		}
	}
	if _dfec.SheetViews != nil {
		if _cceac := _dfec.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cceac != nil {
			return _cceac
		}
	}
	if _dfec.SheetFormatPr != nil {
		if _fdcge := _dfec.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _fdcge != nil {
			return _fdcge
		}
	}
	if _dfec.SheetProtection != nil {
		if _adgbg := _dfec.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _adgbg != nil {
			return _adgbg
		}
	}
	if _dfec.CustomSheetViews != nil {
		if _cagg := _dfec.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _cagg != nil {
			return _cagg
		}
	}
	if _dfec.PrintOptions != nil {
		if _bdadb := _dfec.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _bdadb != nil {
			return _bdadb
		}
	}
	if _dfec.PageMargins != nil {
		if _cfbfd := _dfec.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _cfbfd != nil {
			return _cfbfd
		}
	}
	if _dfec.PageSetup != nil {
		if _feebce := _dfec.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _feebce != nil {
			return _feebce
		}
	}
	if _dfec.HeaderFooter != nil {
		if _cddcf := _dfec.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _cddcf != nil {
			return _cddcf
		}
	}
	if _dfec.Drawing != nil {
		if _edbdb := _dfec.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _edbdb != nil {
			return _edbdb
		}
	}
	if _dfec.LegacyDrawing != nil {
		if _gagd := _dfec.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _gagd != nil {
			return _gagd
		}
	}
	if _dfec.LegacyDrawingHF != nil {
		if _eaag := _dfec.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _eaag != nil {
			return _eaag
		}
	}
	if _dfec.DrawingHF != nil {
		if _ddegc := _dfec.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ddegc != nil {
			return _ddegc
		}
	}
	if _dfec.OleObjects != nil {
		if _fbebc := _dfec.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _fbebc != nil {
			return _fbebc
		}
	}
	if _dfec.Controls != nil {
		if _gggg := _dfec.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _gggg != nil {
			return _gggg
		}
	}
	if _dfec.ExtLst != nil {
		if _gfdda := _dfec.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfdda != nil {
			return _gfdda
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LegacyDrawing and its children, prefixing error messages with path
func (_gfcab *CT_LegacyDrawing) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_GroupItems and its children
func (_gfeff *CT_GroupItems) Validate() error {
	return _gfeff.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073")
}
func (_cfbda *CT_SheetBackgroundPicture) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cfbda.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CalcChain and its children
func (_gbbbbb *CalcChain) Validate() error {
	return _gbbbbb.ValidateWithPath("\u0043a\u006c\u0063\u0043\u0068\u0061\u0069n")
}

type CT_MeasureDimensionMap struct {

	// Measure Group Id
	MeasureGroupAttr *uint32

	// Dimension Id
	DimensionAttr *uint32
}

func (_cfcedf *CT_SortState) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfcedf.ColumnSortAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006c\u0075\u006d\u006e\u0053\u006f\u0072\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfcedf.ColumnSortAttr))})
	}
	if _cfcedf.CaseSensitiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061\u0073\u0065\u0053\u0065\u006e\u0073\u0069\u0074\u0069\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfcedf.CaseSensitiveAttr))})
	}
	if _cfcedf.SortMethodAttr != ST_SortMethodUnset {
		_abfe, _abebd := _cfcedf.SortMethodAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u004d\u0065\u0074\u0068\u006f\u0064"})
		if _abebd != nil {
			return _abebd
		}
		start.Attr = append(start.Attr, _abfe)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _cfcedf.RefAttr)})
	e.EncodeToken(start)
	if _cfcedf.SortCondition != nil {
		_gdcgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e"}}
		for _, _ebada := range _cfcedf.SortCondition {
			e.EncodeElement(_ebada, _gdcgc)
		}
	}
	if _cfcedf.ExtLst != nil {
		_afgga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cfcedf.ExtLst, _afgga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TableTypeUnset      ST_TableType = 0
	ST_TableTypeWorksheet  ST_TableType = 1
	ST_TableTypeXml        ST_TableType = 2
	ST_TableTypeQueryTable ST_TableType = 3
)

func (_ababdf ST_ConditionalFormattingOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fdeabe := _b.Attr{}
	_fdeabe.Name = name
	switch _ababdf {
	case ST_ConditionalFormattingOperatorUnset:
		_fdeabe.Value = ""
	case ST_ConditionalFormattingOperatorLessThan:
		_fdeabe.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorLessThanOrEqual:
		_fdeabe.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorEqual:
		_fdeabe.Value = "\u0065\u0071\u0075a\u006c"
	case ST_ConditionalFormattingOperatorNotEqual:
		_fdeabe.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThanOrEqual:
		_fdeabe.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_ConditionalFormattingOperatorGreaterThan:
		_fdeabe.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_ConditionalFormattingOperatorBetween:
		_fdeabe.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorNotBetween:
		_fdeabe.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_ConditionalFormattingOperatorContainsText:
		_fdeabe.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_ConditionalFormattingOperatorNotContains:
		_fdeabe.Value = "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_ConditionalFormattingOperatorBeginsWith:
		_fdeabe.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_ConditionalFormattingOperatorEndsWith:
		_fdeabe.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	}
	return _fdeabe, nil
}

type CT_PivotArea struct {

	// Field Index
	FieldAttr *int32

	// Rule Type
	TypeAttr ST_PivotAreaType

	// Data Only
	DataOnlyAttr *bool

	// Labels Only
	LabelOnlyAttr *bool

	// Include Row Grand Total
	GrandRowAttr *bool

	// Include Column Grand Total
	GrandColAttr *bool

	// Cache Index
	CacheIndexAttr *bool

	// Outline
	OutlineAttr *bool

	// Offset Reference
	OffsetAttr *string

	// Collapsed Levels Are Subtotals
	CollapsedLevelsAreSubtotalsAttr *bool

	// Axis
	AxisAttr ST_Axis

	// Field Position
	FieldPositionAttr *uint32

	// References
	References *CT_PivotAreaReferences

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_HeaderFooter and its children, prefixing error messages with path
func (_decfc *CT_HeaderFooter) ValidateWithPath(path string) error { return nil }
func NewCT_Field() *CT_Field                                       { _bcgbb := &CT_Field{}; return _bcgbb }
func (_agfgd *CT_DataField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agfgd.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_agfgd.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", _agfgd.FldAttr)})
	if _agfgd.SubtotalAttr != ST_DataConsolidateFunctionUnset {
		_fadbb, _bagfe := _agfgd.SubtotalAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0075\u0062\u0074\u006f\u0074\u0061\u006c"})
		if _bagfe != nil {
			return _bagfe
		}
		start.Attr = append(start.Attr, _fadbb)
	}
	if _agfgd.ShowDataAsAttr != ST_ShowDataAsUnset {
		_cbbf, _gebe := _agfgd.ShowDataAsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006f\u0077\u0044\u0061\u0074\u0061\u0041\u0073"})
		if _gebe != nil {
			return _gebe
		}
		start.Attr = append(start.Attr, _cbbf)
	}
	if _agfgd.BaseFieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0073\u0065\u0046\u0069\u0065\u006cd"}, Value: _a.Sprintf("\u0025\u0076", *_agfgd.BaseFieldAttr)})
	}
	if _agfgd.BaseItemAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0073\u0065\u0049\u0074\u0065\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_agfgd.BaseItemAttr)})
	}
	if _agfgd.NumFmtIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_agfgd.NumFmtIdAttr)})
	}
	e.EncodeToken(start)
	if _agfgd.ExtLst != nil {
		_caaaf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_agfgd.ExtLst, _caaaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Members() *CT_Members     { _gbdgc := &CT_Members{}; return _gbdgc }
func NewCT_PCDSCPage() *CT_PCDSCPage { _bacdg := &CT_PCDSCPage{}; return _bacdg }
func (_cgga *CT_OleItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fccce:
	for {
		_bfac, _dcgcagg := d.Token()
		if _dcgcagg != nil {
			return _dcgcagg
		}
		switch _edbdf := _bfac.(type) {
		case _b.StartElement:
			switch _edbdf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u0049\u0074\u0065\u006d"}:
				_deaffa := NewCT_OleItem()
				if _beegg := d.DecodeElement(_deaffa, &_edbdf); _beegg != nil {
					return _beegg
				}
				_cgga.OleItem = append(_cgga.OleItem, _deaffa)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _edbdf.Name)
				if _caea := d.Skip(); _caea != nil {
					return _caea
				}
			}
		case _b.EndElement:
			break _fccce
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SmartTagTypes and its children, prefixing error messages with path
func (_bgbgee *CT_SmartTagTypes) ValidateWithPath(path string) error {
	for _ecdbd, _gbdfg := range _bgbgee.SmartTagType {
		if _cgaaa := _gbdfg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053ma\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _ecdbd)); _cgaaa != nil {
			return _cgaaa
		}
	}
	return nil
}

// ValidateWithPath validates the PivotTableDefinition and its children, prefixing error messages with path
func (_dffbd *PivotTableDefinition) ValidateWithPath(path string) error {
	if _fagcb := _dffbd.CT_pivotTableDefinition.ValidateWithPath(path); _fagcb != nil {
		return _fagcb
	}
	return nil
}
func (_afgabb *PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061:\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073"
	return _afgabb.CT_PivotCacheRecords.MarshalXML(e, start)
}

// Validate validates the CT_MergeCell and its children
func (_aedg *CT_MergeCell) Validate() error {
	return _aedg.ValidateWithPath("\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c")
}
func (_aggeb *CT_GradientFill) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aggeb.TypeAttr != ST_GradientTypeUnset {
		_cfged, _afbac := _aggeb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _afbac != nil {
			return _afbac
		}
		start.Attr = append(start.Attr, _cfged)
	}
	if _aggeb.DegreeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0067\u0072\u0065\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aggeb.DegreeAttr)})
	}
	if _aggeb.LeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aggeb.LeftAttr)})
	}
	if _aggeb.RightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0069\u0067h\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aggeb.RightAttr)})
	}
	if _aggeb.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_aggeb.TopAttr)})
	}
	if _aggeb.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_aggeb.BottomAttr)})
	}
	e.EncodeToken(start)
	if _aggeb.Stop != nil {
		_gcdfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0073\u0074\u006f\u0070"}}
		for _, _bdcde := range _aggeb.Stop {
			e.EncodeElement(_bdcde, _gcdfc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Worksheet and its children, prefixing error messages with path
func (_cgcebb *CT_Worksheet) ValidateWithPath(path string) error {
	if _cgcebb.SheetPr != nil {
		if _cfgbe := _cgcebb.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _cfgbe != nil {
			return _cfgbe
		}
	}
	if _cgcebb.Dimension != nil {
		if _cafcb := _cgcebb.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _cafcb != nil {
			return _cafcb
		}
	}
	if _cgcebb.SheetViews != nil {
		if _aegca := _cgcebb.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _aegca != nil {
			return _aegca
		}
	}
	if _cgcebb.SheetFormatPr != nil {
		if _fdcgfa := _cgcebb.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _fdcgfa != nil {
			return _fdcgfa
		}
	}
	for _cbacbf, _eaaef := range _cgcebb.Cols {
		if _ebbad := _eaaef.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _cbacbf)); _ebbad != nil {
			return _ebbad
		}
	}
	if _cdaac := _cgcebb.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _cdaac != nil {
		return _cdaac
	}
	if _cgcebb.SheetCalcPr != nil {
		if _dacgda := _cgcebb.SheetCalcPr.ValidateWithPath(path + "\u002f\u0053\u0068e\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"); _dacgda != nil {
			return _dacgda
		}
	}
	if _cgcebb.SheetProtection != nil {
		if _fdcgea := _cgcebb.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _fdcgea != nil {
			return _fdcgea
		}
	}
	if _cgcebb.ProtectedRanges != nil {
		if _gfabfg := _cgcebb.ProtectedRanges.ValidateWithPath(path + "\u002f\u0050r\u006f\u0074\u0065c\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"); _gfabfg != nil {
			return _gfabfg
		}
	}
	if _cgcebb.Scenarios != nil {
		if _efgee := _cgcebb.Scenarios.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073"); _efgee != nil {
			return _efgee
		}
	}
	if _cgcebb.AutoFilter != nil {
		if _febff := _cgcebb.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _febff != nil {
			return _febff
		}
	}
	if _cgcebb.SortState != nil {
		if _effacc := _cgcebb.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _effacc != nil {
			return _effacc
		}
	}
	if _cgcebb.DataConsolidate != nil {
		if _begafa := _cgcebb.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _begafa != nil {
			return _begafa
		}
	}
	if _cgcebb.CustomSheetViews != nil {
		if _dbbfac := _cgcebb.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _dbbfac != nil {
			return _dbbfac
		}
	}
	if _cgcebb.MergeCells != nil {
		if _dfdgb := _cgcebb.MergeCells.ValidateWithPath(path + "/\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"); _dfdgb != nil {
			return _dfdgb
		}
	}
	if _cgcebb.PhoneticPr != nil {
		if _beefd := _cgcebb.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _beefd != nil {
			return _beefd
		}
	}
	for _ccgff, _edfdc := range _cgcebb.ConditionalFormatting {
		if _cfgac := _edfdc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _ccgff)); _cfgac != nil {
			return _cfgac
		}
	}
	if _cgcebb.DataValidations != nil {
		if _bggbg := _cgcebb.DataValidations.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"); _bggbg != nil {
			return _bggbg
		}
	}
	if _cgcebb.Hyperlinks != nil {
		if _ebgbf := _cgcebb.Hyperlinks.ValidateWithPath(path + "/\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"); _ebgbf != nil {
			return _ebgbf
		}
	}
	if _cgcebb.PrintOptions != nil {
		if _fbaee := _cgcebb.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _fbaee != nil {
			return _fbaee
		}
	}
	if _cgcebb.PageMargins != nil {
		if _dfaedc := _cgcebb.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dfaedc != nil {
			return _dfaedc
		}
	}
	if _cgcebb.PageSetup != nil {
		if _feagfb := _cgcebb.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _feagfb != nil {
			return _feagfb
		}
	}
	if _cgcebb.HeaderFooter != nil {
		if _dgbcc := _cgcebb.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _dgbcc != nil {
			return _dgbcc
		}
	}
	if _cgcebb.RowBreaks != nil {
		if _efagd := _cgcebb.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _efagd != nil {
			return _efagd
		}
	}
	if _cgcebb.ColBreaks != nil {
		if _aacgf := _cgcebb.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _aacgf != nil {
			return _aacgf
		}
	}
	if _cgcebb.CustomProperties != nil {
		if _debbc := _cgcebb.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _debbc != nil {
			return _debbc
		}
	}
	if _cgcebb.CellWatches != nil {
		if _fgdefa := _cgcebb.CellWatches.ValidateWithPath(path + "\u002f\u0043\u0065l\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"); _fgdefa != nil {
			return _fgdefa
		}
	}
	if _cgcebb.IgnoredErrors != nil {
		if _dbcgg := _cgcebb.IgnoredErrors.ValidateWithPath(path + "\u002f\u0049\u0067\u006e\u006f\u0072\u0065\u0064\u0045r\u0072\u006f\u0072\u0073"); _dbcgg != nil {
			return _dbcgg
		}
	}
	if _cgcebb.SmartTags != nil {
		if _aecec := _cgcebb.SmartTags.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073"); _aecec != nil {
			return _aecec
		}
	}
	if _cgcebb.Drawing != nil {
		if _cfgee := _cgcebb.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _cfgee != nil {
			return _cfgee
		}
	}
	if _cgcebb.LegacyDrawing != nil {
		if _ccfge := _cgcebb.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _ccfge != nil {
			return _ccfge
		}
	}
	if _cgcebb.LegacyDrawingHF != nil {
		if _acbeg := _cgcebb.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _acbeg != nil {
			return _acbeg
		}
	}
	if _cgcebb.DrawingHF != nil {
		if _bgbded := _cgcebb.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _bgbded != nil {
			return _bgbded
		}
	}
	if _cgcebb.Picture != nil {
		if _gdafdd := _cgcebb.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _gdafdd != nil {
			return _gdafdd
		}
	}
	if _cgcebb.OleObjects != nil {
		if _eafccf := _cgcebb.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _eafccf != nil {
			return _eafccf
		}
	}
	if _cgcebb.Controls != nil {
		if _cfaee := _cgcebb.Controls.ValidateWithPath(path + "\u002fC\u006f\u006e\u0074\u0072\u006f\u006cs"); _cfaee != nil {
			return _cfaee
		}
	}
	if _cgcebb.WebPublishItems != nil {
		if _bbcbdc := _cgcebb.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _bbcbdc != nil {
			return _bbcbdc
		}
	}
	if _cgcebb.TableParts != nil {
		if _cdfga := _cgcebb.TableParts.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"); _cdfga != nil {
			return _cdfga
		}
	}
	if _cgcebb.ExtLst != nil {
		if _eecfg := _cgcebb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eecfg != nil {
			return _eecfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Member and its children, prefixing error messages with path
func (_degf *CT_Member) ValidateWithPath(path string) error { return nil }
func (_ffdge *CT_MdxSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbcab := range start.Attr {
		if _bbcab.Name.Local == "\u006e\u0073" {
			_aaecg, _fgeaf := _g.ParseUint(_bbcab.Value, 10, 32)
			if _fgeaf != nil {
				return _fgeaf
			}
			_ffdge.NsAttr = uint32(_aaecg)
			continue
		}
		if _bbcab.Name.Local == "\u0063" {
			_agdeac, _ggedb := _g.ParseUint(_bbcab.Value, 10, 32)
			if _ggedb != nil {
				return _ggedb
			}
			_aeaa := uint32(_agdeac)
			_ffdge.CAttr = &_aeaa
			continue
		}
		if _bbcab.Name.Local == "\u006f" {
			_ffdge.OAttr.UnmarshalXMLAttr(_bbcab)
			continue
		}
	}
_eagad:
	for {
		_eabbd, _dbbcg := d.Token()
		if _dbbcg != nil {
			return _dbbcg
		}
		switch _cagabe := _eabbd.(type) {
		case _b.StartElement:
			switch _cagabe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_gebad := NewCT_MetadataStringIndex()
				if _cagd := d.DecodeElement(_gebad, &_cagabe); _cagd != nil {
					return _cagd
				}
				_ffdge.N = append(_ffdge.N, _gebad)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u004d\u0064\u0078S\u0065\u0074 \u0025\u0076", _cagabe.Name)
				if _dadaa := d.Skip(); _dadaa != nil {
					return _dadaa
				}
			}
		case _b.EndElement:
			break _eagad
		case _b.CharData:
		}
	}
	return nil
}
func (_abdeaa ST_RefMode) ValidateWithPath(path string) error {
	switch _abdeaa {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abdeaa))
	}
	return nil
}

// Validate validates the CT_CacheFields and its children
func (_eccc *CT_CacheFields) Validate() error {
	return _eccc.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073")
}

type CT_CommentList struct {

	// Comment
	Comment []*CT_Comment
}

func (_dbdfc ST_CfvoType) ValidateWithPath(path string) error {
	switch _dbdfc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dbdfc))
	}
	return nil
}

// ValidateWithPath validates the CT_Borders and its children, prefixing error messages with path
func (_beed *CT_Borders) ValidateWithPath(path string) error {
	for _adf, _abb := range _beed.Border {
		if _gbd := _abb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u006f\u0072\u0064\u0065\u0072\u005b\u0025\u0064\u005d", path, _adf)); _gbd != nil {
			return _gbd
		}
	}
	return nil
}

// Validate validates the CT_Macrosheet and its children
func (_cefc *CT_Macrosheet) Validate() error {
	return _cefc.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074")
}

// Validate validates the CT_TableColumns and its children
func (_aaafg *CT_TableColumns) Validate() error {
	return _aaafg.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073")
}

type CT_ExternalRow struct {

	// Row
	RAttr uint32

	// External Cell Data
	Cell []*CT_ExternalCell
}

func (_dbcec *ST_TimePeriod) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dafcb, _egggc := d.Token()
	if _egggc != nil {
		return _egggc
	}
	if _cfegdb, _fdeae := _dafcb.(_b.EndElement); _fdeae && _cfegdb.Name == start.Name {
		*_dbcec = 1
		return nil
	}
	if _cagdga, _dgeed := _dafcb.(_b.CharData); !_dgeed {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dafcb)
	} else {
		switch string(_cagdga) {
		case "":
			*_dbcec = 0
		case "\u0074\u006f\u0064a\u0079":
			*_dbcec = 1
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_dbcec = 2
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_dbcec = 3
		case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
			*_dbcec = 4
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_dbcec = 5
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_dbcec = 6
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_dbcec = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_dbcec = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_dbcec = 9
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_dbcec = 10
		}
	}
	_dafcb, _egggc = d.Token()
	if _egggc != nil {
		return _egggc
	}
	if _efccf, _eegdaa := _dafcb.(_b.EndElement); _eegdaa && _efccf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dafcb)
}
func NewCT_RevisionAutoFormatting() *CT_RevisionAutoFormatting {
	_dccad := &CT_RevisionAutoFormatting{}
	return _dccad
}

// Validate validates the CT_Boolean and its children
func (_bgf *CT_Boolean) Validate() error {
	return _bgf.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}
func (_acccb *ST_PatternType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acccb = 0
	case "\u006e\u006f\u006e\u0065":
		*_acccb = 1
	case "\u0073\u006f\u006ci\u0064":
		*_acccb = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
		*_acccb = 3
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_acccb = 4
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_acccb = 5
	case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
		*_acccb = 6
	case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_acccb = 7
	case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
		*_acccb = 8
	case "\u0064\u0061\u0072\u006b\u0055\u0070":
		*_acccb = 9
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
		*_acccb = 10
	case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_acccb = 11
	case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
		*_acccb = 12
	case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
		*_acccb = 13
	case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
		*_acccb = 14
	case "\u006ci\u0067\u0068\u0074\u0055\u0070":
		*_acccb = 15
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
		*_acccb = 16
	case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
		*_acccb = 17
	case "\u0067r\u0061\u0079\u0031\u0032\u0035":
		*_acccb = 18
	case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
		*_acccb = 19
	}
	return nil
}
func (_egaed *CT_Tables) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbeab := range start.Attr {
		if _fbeab.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ccbgd, _caedd := _g.ParseUint(_fbeab.Value, 10, 32)
			if _caedd != nil {
				return _caedd
			}
			_dbgfb := uint32(_ccbgd)
			_egaed.CountAttr = &_dbgfb
			continue
		}
	}
_gdegcc:
	for {
		_efbce, _bcgae := d.Token()
		if _bcgae != nil {
			return _bcgae
		}
		switch _ggeae := _efbce.(type) {
		case _b.StartElement:
			switch _ggeae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_dcbfe := NewCT_TableMissing()
				if _bcccc := d.DecodeElement(_dcbfe, &_ggeae); _bcccc != nil {
					return _bcccc
				}
				_egaed.M = append(_egaed.M, _dcbfe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bdbec := NewCT_XStringElement()
				if _fdfdb := d.DecodeElement(_bdbec, &_ggeae); _fdfdb != nil {
					return _fdfdb
				}
				_egaed.S = append(_egaed.S, _bdbec)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_bfcedf := NewCT_Index()
				if _adcbg := d.DecodeElement(_bfcedf, &_ggeae); _adcbg != nil {
					return _adcbg
				}
				_egaed.X = append(_egaed.X, _bfcedf)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0061\u0062l\u0065\u0073 \u0025\u0076", _ggeae.Name)
				if _ageba := d.Skip(); _ageba != nil {
					return _ageba
				}
			}
		case _b.EndElement:
			break _gdegcc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_MemberProperties() *CT_MemberProperties { _bfdfc := &CT_MemberProperties{}; return _bfdfc }
func (_gcfdd *Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gcfdd.CT_Table = *NewCT_Table()
	for _, _fadefe := range start.Attr {
		if _fadefe.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_gffbe, _gfdbc := _g.ParseUint(_fadefe.Value, 10, 32)
			if _gfdbc != nil {
				return _gfdbc
			}
			_cgbca := uint32(_gffbe)
			_gcfdd.DataDxfIdAttr = &_cgbca
			continue
		}
		if _fadefe.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_faggf, _eeefg := _g.ParseUint(_fadefe.Value, 10, 32)
			if _eeefg != nil {
				return _eeefg
			}
			_fdeee := uint32(_faggf)
			_gcfdd.TotalsRowDxfIdAttr = &_fdeee
			continue
		}
		if _fadefe.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cagdg, _eggcg := _fadefe.Value, error(nil)
			if _eggcg != nil {
				return _eggcg
			}
			_gcfdd.NameAttr = &_cagdg
			continue
		}
		if _fadefe.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_bgcbac, _acfdd := _g.ParseUint(_fadefe.Value, 10, 32)
			if _acfdd != nil {
				return _acfdd
			}
			_beaca := uint32(_bgcbac)
			_gcfdd.HeaderRowBorderDxfIdAttr = &_beaca
			continue
		}
		if _fadefe.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_ffecf, _fceef := _fadefe.Value, error(nil)
			if _fceef != nil {
				return _fceef
			}
			_gcfdd.CommentAttr = &_ffecf
			continue
		}
		if _fadefe.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_ffgbda, _efbfd := _g.ParseUint(_fadefe.Value, 10, 32)
			if _efbfd != nil {
				return _efbfd
			}
			_agbdafg := uint32(_ffgbda)
			_gcfdd.TableBorderDxfIdAttr = &_agbdafg
			continue
		}
		if _fadefe.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_gcfdd.TableTypeAttr.UnmarshalXMLAttr(_fadefe)
			continue
		}
		if _fadefe.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_aebcaa, _eeafbcb := _g.ParseUint(_fadefe.Value, 10, 32)
			if _eeafbcb != nil {
				return _eeafbcb
			}
			_babbfa := uint32(_aebcaa)
			_gcfdd.TotalsRowBorderDxfIdAttr = &_babbfa
			continue
		}
		if _fadefe.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_cfcag, _gacce := _g.ParseBool(_fadefe.Value)
			if _gacce != nil {
				return _gacce
			}
			_gcfdd.InsertRowAttr = &_cfcag
			continue
		}
		if _fadefe.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_dbfee, _fddbe := _fadefe.Value, error(nil)
			if _fddbe != nil {
				return _fddbe
			}
			_gcfdd.HeaderRowCellStyleAttr = &_dbfee
			continue
		}
		if _fadefe.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_dcdbf, _fedfg := _g.ParseUint(_fadefe.Value, 10, 32)
			if _fedfg != nil {
				return _fedfg
			}
			_eagfg := uint32(_dcdbf)
			_gcfdd.TotalsRowCountAttr = &_eagfg
			continue
		}
		if _fadefe.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_eedeg, _ecffb := _fadefe.Value, error(nil)
			if _ecffb != nil {
				return _ecffb
			}
			_gcfdd.TotalsRowCellStyleAttr = &_eedeg
			continue
		}
		if _fadefe.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_cggga, _fcdec := _fadefe.Value, error(nil)
			if _fcdec != nil {
				return _fcdec
			}
			_gcfdd.DisplayNameAttr = _cggga
			continue
		}
		if _fadefe.Name.Local == "\u0069\u0064" {
			_edeba, _egeegc := _g.ParseUint(_fadefe.Value, 10, 32)
			if _egeegc != nil {
				return _egeegc
			}
			_gcfdd.IdAttr = uint32(_edeba)
			continue
		}
		if _fadefe.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_cgaae, _cgegf := _fadefe.Value, error(nil)
			if _cgegf != nil {
				return _cgegf
			}
			_gcfdd.DataCellStyleAttr = &_cgaae
			continue
		}
		if _fadefe.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_gdgfec, _dafeea := _g.ParseBool(_fadefe.Value)
			if _dafeea != nil {
				return _dafeea
			}
			_gcfdd.PublishedAttr = &_gdgfec
			continue
		}
		if _fadefe.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_edefc, _becef := _g.ParseUint(_fadefe.Value, 10, 32)
			if _becef != nil {
				return _becef
			}
			_cbeece := uint32(_edefc)
			_gcfdd.ConnectionIdAttr = &_cbeece
			continue
		}
		if _fadefe.Name.Local == "\u0072\u0065\u0066" {
			_bgeec, _daageg := _fadefe.Value, error(nil)
			if _daageg != nil {
				return _daageg
			}
			_gcfdd.RefAttr = _bgeec
			continue
		}
		if _fadefe.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_aggcaa, _dadeg := _g.ParseBool(_fadefe.Value)
			if _dadeg != nil {
				return _dadeg
			}
			_gcfdd.InsertRowShiftAttr = &_aggcaa
			continue
		}
		if _fadefe.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_acdbea, _eagce := _g.ParseBool(_fadefe.Value)
			if _eagce != nil {
				return _eagce
			}
			_gcfdd.TotalsRowShownAttr = &_acdbea
			continue
		}
		if _fadefe.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_dcbga, _cadde := _g.ParseUint(_fadefe.Value, 10, 32)
			if _cadde != nil {
				return _cadde
			}
			_dgafgc := uint32(_dcbga)
			_gcfdd.HeaderRowDxfIdAttr = &_dgafgc
			continue
		}
		if _fadefe.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_fcafa, _fgdfc := _g.ParseUint(_fadefe.Value, 10, 32)
			if _fgdfc != nil {
				return _fgdfc
			}
			_dbece := uint32(_fcafa)
			_gcfdd.HeaderRowCountAttr = &_dbece
			continue
		}
	}
_fdbfec:
	for {
		_ceffc, _ababe := d.Token()
		if _ababe != nil {
			return _ababe
		}
		switch _acgfeb := _ceffc.(type) {
		case _b.StartElement:
			switch _acgfeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_gcfdd.AutoFilter = NewCT_AutoFilter()
				if _aaebaf := d.DecodeElement(_gcfdd.AutoFilter, &_acgfeb); _aaebaf != nil {
					return _aaebaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_gcfdd.SortState = NewCT_SortState()
				if _edggc := d.DecodeElement(_gcfdd.SortState, &_acgfeb); _edggc != nil {
					return _edggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _afec := d.DecodeElement(_gcfdd.TableColumns, &_acgfeb); _afec != nil {
					return _afec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_gcfdd.TableStyleInfo = NewCT_TableStyleInfo()
				if _ggagd := d.DecodeElement(_gcfdd.TableStyleInfo, &_acgfeb); _ggagd != nil {
					return _ggagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcfdd.ExtLst = NewCT_ExtensionList()
				if _fgbef := d.DecodeElement(_gcfdd.ExtLst, &_acgfeb); _fgbef != nil {
					return _fgbef
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0061\u0062l\u0065 \u0025\u0076", _acgfeb.Name)
				if _dbaed := d.Skip(); _dbaed != nil {
					return _dbaed
				}
			}
		case _b.EndElement:
			break _fdbfec
		case _b.CharData:
		}
	}
	return nil
}
func (_abegd *CT_PivotSelection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abegd.PivotArea = NewCT_PivotArea()
	for _, _geea := range start.Attr {
		if _geea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _geea.Name.Local == "\u0069\u0064" || _geea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _geea.Name.Local == "\u0069\u0064" {
			_bfefe, _bcbaf := _geea.Value, error(nil)
			if _bcbaf != nil {
				return _bcbaf
			}
			_abegd.IdAttr = &_bfefe
			continue
		}
		if _geea.Name.Local == "\u006d\u0069\u006e" {
			_edaea, _eegba := _g.ParseUint(_geea.Value, 10, 32)
			if _eegba != nil {
				return _eegba
			}
			_ccfeb := uint32(_edaea)
			_abegd.MinAttr = &_ccfeb
			continue
		}
		if _geea.Name.Local == "\u006d\u0061\u0078" {
			_cfgfec, _adcacd := _g.ParseUint(_geea.Value, 10, 32)
			if _adcacd != nil {
				return _adcacd
			}
			_eaeaac := uint32(_cfgfec)
			_abegd.MaxAttr = &_eaeaac
			continue
		}
		if _geea.Name.Local == "\u006c\u0061\u0062e\u006c" {
			_dfcca, _bcffb := _g.ParseBool(_geea.Value)
			if _bcffb != nil {
				return _bcffb
			}
			_abegd.LabelAttr = &_dfcca
			continue
		}
		if _geea.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw" {
			_aaccb, _cbdd := _g.ParseUint(_geea.Value, 10, 32)
			if _cbdd != nil {
				return _cbdd
			}
			_fgcc := uint32(_aaccb)
			_abegd.ActiveRowAttr = &_fgcc
			continue
		}
		if _geea.Name.Local == "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065" {
			_fabcgd, _befgg := _g.ParseBool(_geea.Value)
			if _befgg != nil {
				return _befgg
			}
			_abegd.ExtendableAttr = &_fabcgd
			continue
		}
		if _geea.Name.Local == "\u0061\u0078\u0069\u0073" {
			_abegd.AxisAttr.UnmarshalXMLAttr(_geea)
			continue
		}
		if _geea.Name.Local == "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn" {
			_dbgdg, _dadbd := _g.ParseUint(_geea.Value, 10, 32)
			if _dadbd != nil {
				return _dadbd
			}
			_aeedb := uint32(_dbgdg)
			_abegd.DimensionAttr = &_aeedb
			continue
		}
		if _geea.Name.Local == "\u0073\u0074\u0061r\u0074" {
			_cafaf, _fcbae := _g.ParseUint(_geea.Value, 10, 32)
			if _fcbae != nil {
				return _fcbae
			}
			_aege := uint32(_cafaf)
			_abegd.StartAttr = &_aege
			continue
		}
		if _geea.Name.Local == "\u0070\u0061\u006e\u0065" {
			_abegd.PaneAttr.UnmarshalXMLAttr(_geea)
			continue
		}
		if _geea.Name.Local == "\u0064\u0061\u0074\u0061" {
			_cdgf, _bdfcc := _g.ParseBool(_geea.Value)
			if _bdfcc != nil {
				return _bdfcc
			}
			_abegd.DataAttr = &_cdgf
			continue
		}
		if _geea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gcgde, _ccbfg := _g.ParseUint(_geea.Value, 10, 32)
			if _ccbfg != nil {
				return _ccbfg
			}
			_gaagag := uint32(_gcgde)
			_abegd.CountAttr = &_gaagag
			continue
		}
		if _geea.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl" {
			_aadbdd, _dabfb := _g.ParseUint(_geea.Value, 10, 32)
			if _dabfb != nil {
				return _dabfb
			}
			_aefag := uint32(_aadbdd)
			_abegd.ActiveColAttr = &_aefag
			continue
		}
		if _geea.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077" {
			_dccab, _ggggfd := _g.ParseUint(_geea.Value, 10, 32)
			if _ggggfd != nil {
				return _ggggfd
			}
			_edbde := uint32(_dccab)
			_abegd.PreviousRowAttr = &_edbde
			continue
		}
		if _geea.Name.Local == "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c" {
			_dadfd, _dbedd := _g.ParseUint(_geea.Value, 10, 32)
			if _dbedd != nil {
				return _dbedd
			}
			_ffgbb := uint32(_dadfd)
			_abegd.PreviousColAttr = &_ffgbb
			continue
		}
		if _geea.Name.Local == "\u0063\u006c\u0069c\u006b" {
			_feegge, _bggac := _g.ParseUint(_geea.Value, 10, 32)
			if _bggac != nil {
				return _bggac
			}
			_ggcgc := uint32(_feegge)
			_abegd.ClickAttr = &_ggcgc
			continue
		}
		if _geea.Name.Local == "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072" {
			_dcaec, _efff := _g.ParseBool(_geea.Value)
			if _efff != nil {
				return _efff
			}
			_abegd.ShowHeaderAttr = &_dcaec
			continue
		}
	}
_gdfaf:
	for {
		_debef, _aceed := d.Token()
		if _aceed != nil {
			return _aceed
		}
		switch _fggdbg := _debef.(type) {
		case _b.StartElement:
			switch _fggdbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _fdece := d.DecodeElement(_abegd.PivotArea, &_fggdbg); _fdece != nil {
					return _fdece
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _fggdbg.Name)
				if _efcgf := d.Skip(); _efcgf != nil {
					return _efcgf
				}
			}
		case _b.EndElement:
			break _gdfaf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Sheet and its children
func (_fdgdc *CT_Sheet) Validate() error {
	return _fdgdc.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074")
}
func (_bgcf *CT_HeaderFooter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgcf.DifferentOddEvenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bgcf.DifferentOddEvenAttr))})
	}
	if _bgcf.DifferentFirstAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bgcf.DifferentFirstAttr))})
	}
	if _bgcf.ScaleWithDocAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bgcf.ScaleWithDocAttr))})
	}
	if _bgcf.AlignWithMarginsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bgcf.AlignWithMarginsAttr))})
	}
	e.EncodeToken(start)
	if _bgcf.OddHeader != nil {
		_dgfgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_dgfgf, *_bgcf.OddHeader)
		e.EncodeElement(_bgcf.OddHeader, _dgfgf)
	}
	if _bgcf.OddFooter != nil {
		_dagba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0064\u0064\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_dagba, *_bgcf.OddFooter)
		e.EncodeElement(_bgcf.OddFooter, _dagba)
	}
	if _bgcf.EvenHeader != nil {
		_fggeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_fggeg, *_bgcf.EvenHeader)
		e.EncodeElement(_bgcf.EvenHeader, _fggeg)
	}
	if _bgcf.EvenFooter != nil {
		_febfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_febfb, *_bgcf.EvenFooter)
		e.EncodeElement(_bgcf.EvenFooter, _febfb)
	}
	if _bgcf.FirstHeader != nil {
		_gdebe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0048e\u0061\u0064\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_gdebe, *_bgcf.FirstHeader)
		e.EncodeElement(_bgcf.FirstHeader, _gdebe)
	}
	if _bgcf.FirstFooter != nil {
		_badbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0046o\u006f\u0074\u0065\u0072"}}
		_f.AddPreserveSpaceAttr(&_badbc, *_bgcf.FirstFooter)
		e.EncodeElement(_bgcf.FirstFooter, _badbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbgfg *CT_QueryTableRefresh) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbgfg.QueryTableFields = NewCT_QueryTableFields()
	for _, _fgcbb := range start.Attr {
		if _fgcbb.Name.Local == "\u0070r\u0065\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072\u0074\u0046i\u006c\u0074\u0065\u0072\u004c\u0061\u0079\u006f\u0075\u0074" {
			_ebfgc, _fcfef := _g.ParseBool(_fgcbb.Value)
			if _fcfef != nil {
				return _fcfef
			}
			_fbgfg.PreserveSortFilterLayoutAttr = &_ebfgc
			continue
		}
		if _fgcbb.Name.Local == "\u0066\u0069\u0065\u006c\u0064\u0049\u0064\u0057\u0072a\u0070\u0070\u0065\u0064" {
			_bbfacc, _fdbdb := _g.ParseBool(_fgcbb.Value)
			if _fdbdb != nil {
				return _fdbdb
			}
			_fbgfg.FieldIdWrappedAttr = &_bbfacc
			continue
		}
		if _fgcbb.Name.Local == "h\u0065a\u0064\u0065\u0072\u0073\u0049\u006e\u004c\u0061s\u0074\u0052\u0065\u0066re\u0073\u0068" {
			_accef, _gcceac := _g.ParseBool(_fgcbb.Value)
			if _gcceac != nil {
				return _gcceac
			}
			_fbgfg.HeadersInLastRefreshAttr = &_accef
			continue
		}
		if _fgcbb.Name.Local == "\u006d\u0069\u006e\u0069\u006d\u0075\u006d\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_ddeae, _fdebc := _g.ParseUint(_fgcbb.Value, 10, 8)
			if _fdebc != nil {
				return _fdebc
			}
			_ceegb := uint8(_ddeae)
			_fbgfg.MinimumVersionAttr = &_ceegb
			continue
		}
		if _fgcbb.Name.Local == "\u006e\u0065\u0078\u0074\u0049\u0064" {
			_bbaed, _cecdd := _g.ParseUint(_fgcbb.Value, 10, 32)
			if _cecdd != nil {
				return _cecdd
			}
			_gbgdd := uint32(_bbaed)
			_fbgfg.NextIdAttr = &_gbgdd
			continue
		}
		if _fgcbb.Name.Local == "\u0075n\u0062o\u0075\u006e\u0064\u0043\u006fl\u0075\u006dn\u0073\u004c\u0065\u0066\u0074" {
			_afgcb, _cdbdb := _g.ParseUint(_fgcbb.Value, 10, 32)
			if _cdbdb != nil {
				return _cdbdb
			}
			_bfce := uint32(_afgcb)
			_fbgfg.UnboundColumnsLeftAttr = &_bfce
			continue
		}
		if _fgcbb.Name.Local == "\u0075\u006e\u0062\u006fun\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0073\u0052\u0069\u0067\u0068\u0074" {
			_ffdd, _ceacef := _g.ParseUint(_fgcbb.Value, 10, 32)
			if _ceacef != nil {
				return _ceacef
			}
			_fafbd := uint32(_ffdd)
			_fbgfg.UnboundColumnsRightAttr = &_fafbd
			continue
		}
	}
_dggdc:
	for {
		_gfabc, _geaab := d.Token()
		if _geaab != nil {
			return _geaab
		}
		switch _bafeab := _gfabc.(type) {
		case _b.StartElement:
			switch _bafeab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075e\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _cfcbe := d.DecodeElement(_fbgfg.QueryTableFields, &_bafeab); _cfcbe != nil {
					return _cfcbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065ry\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_fbgfg.QueryTableDeletedFields = NewCT_QueryTableDeletedFields()
				if _ccgdd := d.DecodeElement(_fbgfg.QueryTableDeletedFields, &_bafeab); _ccgdd != nil {
					return _ccgdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_fbgfg.SortState = NewCT_SortState()
				if _ccdec := d.DecodeElement(_fbgfg.SortState, &_bafeab); _ccdec != nil {
					return _ccdec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbgfg.ExtLst = NewCT_ExtensionList()
				if _fafgba := d.DecodeElement(_fbgfg.ExtLst, &_bafeab); _fafgba != nil {
					return _fafgba
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068\u0020\u0025\u0076", _bafeab.Name)
				if _gcgcb := d.Skip(); _gcgcb != nil {
					return _gcgcb
				}
			}
		case _b.EndElement:
			break _dggdc
		case _b.CharData:
		}
	}
	return nil
}
func (_ddfdb *CT_MemberProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egfac := range start.Attr {
		if _egfac.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bcaac, _fbef := _g.ParseUint(_egfac.Value, 10, 32)
			if _fbef != nil {
				return _fbef
			}
			_agebg := uint32(_bcaac)
			_ddfdb.CountAttr = &_agebg
			continue
		}
	}
_bgagg:
	for {
		_ffdgeg, _fffgc := d.Token()
		if _fffgc != nil {
			return _fffgc
		}
		switch _deefb := _ffdgeg.(type) {
		case _b.StartElement:
			switch _deefb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0070"}:
				_fedgg := NewCT_MemberProperty()
				if _efeggf := d.DecodeElement(_fedgg, &_deefb); _efeggf != nil {
					return _efeggf
				}
				_ddfdb.Mp = append(_ddfdb.Mp, _fedgg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _deefb.Name)
				if _adada := d.Skip(); _adada != nil {
					return _adada
				}
			}
		case _b.EndElement:
			break _bgagg
		case _b.CharData:
		}
	}
	return nil
}

type CT_PhoneticRun struct {

	// Base Text Start Index
	SbAttr uint32

	// Base Text End Index
	EbAttr uint32

	// Text
	T string
}

const (
	ST_TimePeriodUnset     ST_TimePeriod = 0
	ST_TimePeriodToday     ST_TimePeriod = 1
	ST_TimePeriodYesterday ST_TimePeriod = 2
	ST_TimePeriodTomorrow  ST_TimePeriod = 3
	ST_TimePeriodLast7Days ST_TimePeriod = 4
	ST_TimePeriodThisMonth ST_TimePeriod = 5
	ST_TimePeriodLastMonth ST_TimePeriod = 6
	ST_TimePeriodNextMonth ST_TimePeriod = 7
	ST_TimePeriodThisWeek  ST_TimePeriod = 8
	ST_TimePeriodLastWeek  ST_TimePeriod = 9
	ST_TimePeriodNextWeek  ST_TimePeriod = 10
)

func (_dcece *CT_VolTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ccegc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076\u006f\u006c\u0054\u0079\u0070\u0065"}}
	for _, _acegf := range _dcece.VolType {
		e.EncodeElement(_acegf, _ccegc)
	}
	if _dcece.ExtLst != nil {
		_dgfgae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dcece.ExtLst, _dgfgae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryCache and its children
func (_bfdgdg *CT_QueryCache) Validate() error {
	return _bfdgdg.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065")
}

type ST_Orientation byte

func (_gfddg *CT_ExternalCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bedffc := range start.Attr {
		if _bedffc.Name.Local == "\u0072" {
			_cgead, _ffgg := _bedffc.Value, error(nil)
			if _ffgg != nil {
				return _ffgg
			}
			_gfddg.RAttr = &_cgead
			continue
		}
		if _bedffc.Name.Local == "\u0074" {
			_gfddg.TAttr.UnmarshalXMLAttr(_bedffc)
			continue
		}
		if _bedffc.Name.Local == "\u0076\u006d" {
			_dgdbd, _fgffc := _g.ParseUint(_bedffc.Value, 10, 32)
			if _fgffc != nil {
				return _fgffc
			}
			_fdbba := uint32(_dgdbd)
			_gfddg.VmAttr = &_fdbba
			continue
		}
	}
_beaff:
	for {
		_gbabe, _adba := d.Token()
		if _adba != nil {
			return _adba
		}
		switch _cadg := _gbabe.(type) {
		case _b.StartElement:
			switch _cadg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				_gfddg.V = new(string)
				if _ffff := d.DecodeElement(_gfddg.V, &_cadg); _ffff != nil {
					return _ffff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _cadg.Name)
				if _gbba := d.Skip(); _gbba != nil {
					return _gbba
				}
			}
		case _b.EndElement:
			break _beaff
		case _b.CharData:
		}
	}
	return nil
}
func (_eeeae *CT_RevisionQueryTableField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _eeeae.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _eeeae.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0065\u006c\u0064\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _eeeae.FieldIdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfdee ST_OleUpdate) String() string {
	switch _bfdee {
	case 0:
		return ""
	case 1:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case 2:
		return "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return ""
}
func (_cafaae ST_SheetViewType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdgfb := _b.Attr{}
	_bdgfb.Name = name
	switch _cafaae {
	case ST_SheetViewTypeUnset:
		_bdgfb.Value = ""
	case ST_SheetViewTypeNormal:
		_bdgfb.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_SheetViewTypePageBreakPreview:
		_bdgfb.Value = "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077"
	case ST_SheetViewTypePageLayout:
		_bdgfb.Value = "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074"
	}
	return _bdgfb, nil
}
func (_edcgd *CT_PivotHierarchy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edcgd.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.OutlineAttr))})
	}
	if _edcgd.MultipleItemSelectionAllowedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.MultipleItemSelectionAllowedAttr))})
	}
	if _edcgd.SubtotalTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.SubtotalTopAttr))})
	}
	if _edcgd.ShowInFieldListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0049\u006e\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.ShowInFieldListAttr))})
	}
	if _edcgd.DragToRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.DragToRowAttr))})
	}
	if _edcgd.DragToColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.DragToColAttr))})
	}
	if _edcgd.DragToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.DragToPageAttr))})
	}
	if _edcgd.DragToDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.DragToDataAttr))})
	}
	if _edcgd.DragOffAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064r\u0061\u0067\u004f\u0066\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.DragOffAttr))})
	}
	if _edcgd.IncludeNewItemsInFilterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edcgd.IncludeNewItemsInFilterAttr))})
	}
	if _edcgd.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_edcgd.CaptionAttr)})
	}
	e.EncodeToken(start)
	if _edcgd.Mps != nil {
		_gcba := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0070\u0073"}}
		e.EncodeElement(_edcgd.Mps, _gcba)
	}
	if _edcgd.Members != nil {
		_cgggg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0065\u006d\u0062\u0065\u0072\u0073"}}
		for _, _deebb := range _edcgd.Members {
			e.EncodeElement(_deebb, _cgggg)
		}
	}
	if _edcgd.ExtLst != nil {
		_gffdbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_edcgd.ExtLst, _gffdbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_RevisionCellChange struct {

	// Sheet Id
	SIdAttr uint32

	// Old Formatting Information
	OdxfAttr *bool

	// Row Column Formatting Change
	XfDxfAttr *bool

	// Style Revision
	SAttr *bool

	// Formatting
	DxfAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Old Quote Prefix
	OldQuotePrefixAttr *bool

	// Phonetic Text
	PhAttr *bool

	// Old Phonetic Text
	OldPhAttr *bool

	// End of List Formula Update
	EndOfListFormulaUpdateAttr *bool

	// Old Cell Data
	Oc *CT_Cell

	// New Cell Data
	Nc *CT_Cell

	// Old Formatting Information
	Odxf *CT_Dxf

	// New Formatting Information
	Ndxf    *CT_Dxf
	ExtLst  *CT_ExtensionList
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func (_cegdbb *ST_PrintError) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cegdbb = 0
	case "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d":
		*_cegdbb = 1
	case "\u0062\u006c\u0061n\u006b":
		*_cegdbb = 2
	case "\u0064\u0061\u0073\u0068":
		*_cegdbb = 3
	case "\u004e\u0041":
		*_cegdbb = 4
	}
	return nil
}
func (_ebcbge ST_SheetState) Validate() error { return _ebcbge.ValidateWithPath("") }
func (_begff *CT_ExternalRow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efgcf := range start.Attr {
		if _efgcf.Name.Local == "\u0072" {
			_dfceg, _fdcee := _g.ParseUint(_efgcf.Value, 10, 32)
			if _fdcee != nil {
				return _fdcee
			}
			_begff.RAttr = uint32(_dfceg)
			continue
		}
	}
_cebgd:
	for {
		_aabdbf, _ffac := d.Token()
		if _ffac != nil {
			return _ffac
		}
		switch _deea := _aabdbf.(type) {
		case _b.StartElement:
			switch _deea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c"}:
				_edgcc := NewCT_ExternalCell()
				if _gdaeg := d.DecodeElement(_edgcc, &_deea); _gdaeg != nil {
					return _gdaeg
				}
				_begff.Cell = append(_begff.Cell, _edgcc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006e\u0061l\u0052o\u0077\u0020\u0025\u0076", _deea.Name)
				if _cbbabc := d.Skip(); _cbbabc != nil {
					return _cbbabc
				}
			}
		case _b.EndElement:
			break _cebgd
		case _b.CharData:
		}
	}
	return nil
}
func (_ddf *CT_CalcPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feb := range start.Attr {
		if _feb.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0044\u0065\u006c\u0074\u0061" {
			_edd, _gebc := _g.ParseFloat(_feb.Value, 64)
			if _gebc != nil {
				return _gebc
			}
			_ddf.IterateDeltaAttr = &_edd
			continue
		}
		if _feb.Name.Local == "\u0063\u0061\u006c\u0063\u004d\u006f\u0064\u0065" {
			_ddf.CalcModeAttr.UnmarshalXMLAttr(_feb)
			continue
		}
		if _feb.Name.Local == "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064" {
			_bbca, _gdea := _g.ParseBool(_feb.Value)
			if _gdea != nil {
				return _gdea
			}
			_ddf.FullCalcOnLoadAttr = &_bbca
			continue
		}
		if _feb.Name.Local == "\u0072e\u0066\u004d\u006f\u0064\u0065" {
			_ddf.RefModeAttr.UnmarshalXMLAttr(_feb)
			continue
		}
		if _feb.Name.Local == "\u0069t\u0065\u0072\u0061\u0074\u0065" {
			_bgfb, _beeb := _g.ParseBool(_feb.Value)
			if _beeb != nil {
				return _beeb
			}
			_ddf.IterateAttr = &_bgfb
			continue
		}
		if _feb.Name.Local == "\u0069\u0074\u0065r\u0061\u0074\u0065\u0043\u006f\u0075\u006e\u0074" {
			_bacc, _aeaf := _g.ParseUint(_feb.Value, 10, 32)
			if _aeaf != nil {
				return _aeaf
			}
			_efa := uint32(_bacc)
			_ddf.IterateCountAttr = &_efa
			continue
		}
		if _feb.Name.Local == "\u0063\u0061\u006c\u0063\u0049\u0064" {
			_feab, _fgca := _g.ParseUint(_feb.Value, 10, 32)
			if _fgca != nil {
				return _fgca
			}
			_cgeg := uint32(_feab)
			_ddf.CalcIdAttr = &_cgeg
			continue
		}
		if _feb.Name.Local == "\u0066\u0075\u006c\u006c\u0050\u0072\u0065\u0063\u0069\u0073\u0069\u006f\u006e" {
			_bge, _gcdd := _g.ParseBool(_feb.Value)
			if _gcdd != nil {
				return _gcdd
			}
			_ddf.FullPrecisionAttr = &_bge
			continue
		}
		if _feb.Name.Local == "\u0063\u0061\u006c\u0063\u0043\u006f\u006d\u0070\u006c\u0065\u0074\u0065\u0064" {
			_acgd, _cga := _g.ParseBool(_feb.Value)
			if _cga != nil {
				return _cga
			}
			_ddf.CalcCompletedAttr = &_acgd
			continue
		}
		if _feb.Name.Local == "\u0063\u0061\u006c\u0063\u004f\u006e\u0053\u0061\u0076\u0065" {
			_eegc, _bbfg := _g.ParseBool(_feb.Value)
			if _bbfg != nil {
				return _bbfg
			}
			_ddf.CalcOnSaveAttr = &_eegc
			continue
		}
		if _feb.Name.Local == "\u0063\u006f\u006e\u0063\u0075\u0072\u0072\u0065\u006et\u0043\u0061\u006c\u0063" {
			_ebfa, _abbfe := _g.ParseBool(_feb.Value)
			if _abbfe != nil {
				return _abbfe
			}
			_ddf.ConcurrentCalcAttr = &_ebfa
			continue
		}
		if _feb.Name.Local == "c\u006f\u006e\u0063\u0075rr\u0065n\u0074\u004d\u0061\u006e\u0075a\u006c\u0043\u006f\u0075\u006e\u0074" {
			_dcge, _dfdd := _g.ParseUint(_feb.Value, 10, 32)
			if _dfdd != nil {
				return _dfdd
			}
			_acc := uint32(_dcge)
			_ddf.ConcurrentManualCountAttr = &_acc
			continue
		}
		if _feb.Name.Local == "\u0066\u006f\u0072\u0063\u0065\u0046\u0075\u006c\u006c\u0043\u0061\u006c\u0063" {
			_cgec, _fedeb := _g.ParseBool(_feb.Value)
			if _fedeb != nil {
				return _fedeb
			}
			_ddf.ForceFullCalcAttr = &_cgec
			continue
		}
	}
	for {
		_bdff, _aadg := d.Token()
		if _aadg != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u0043\u0061\u006cc\u0050\u0072\u003a\u0020\u0025\u0073", _aadg)
		}
		if _dcac, _cfee := _bdff.(_b.EndElement); _cfee && _dcac.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fdbad ST_Type) String() string {
	switch _fdbad {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0061\u006c\u006c"
	case 3:
		return "\u0072\u006f\u0077"
	case 4:
		return "\u0063\u006f\u006c\u0075\u006d\u006e"
	}
	return ""
}
func (_dedc *CT_CalcChain) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bddb:
	for {
		_cedaa, _gdg := d.Token()
		if _gdg != nil {
			return _gdg
		}
		switch _gccf := _cedaa.(type) {
		case _b.StartElement:
			switch _gccf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_gceg := NewCT_CalcCell()
				if _gacg := d.DecodeElement(_gceg, &_gccf); _gacg != nil {
					return _gacg
				}
				_dedc.C = append(_dedc.C, _gceg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dedc.ExtLst = NewCT_ExtensionList()
				if _eaef := d.DecodeElement(_dedc.ExtLst, &_gccf); _eaef != nil {
					return _eaef
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0061\u006cc\u0043\u0068\u0061\u0069\u006e\u0020\u0025\u0076", _gccf.Name)
				if _effb := d.Skip(); _effb != nil {
					return _effb
				}
			}
		case _b.EndElement:
			break _bddb
		case _b.CharData:
		}
	}
	return nil
}
func (_gbebf *CT_Cols) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cdcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c"}}
	for _, _dgde := range _gbebf.Col {
		e.EncodeElement(_dgde, _cdcb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_WebPublishItems() *CT_WebPublishItems { _fbegec := &CT_WebPublishItems{}; return _fbegec }
func (_gedgb *ST_CellType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gedgb = 0
	case "\u0062":
		*_gedgb = 1
	case "\u006e":
		*_gedgb = 2
	case "\u0065":
		*_gedgb = 3
	case "\u0073":
		*_gedgb = 4
	case "\u0073\u0074\u0072":
		*_gedgb = 5
	case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
		*_gedgb = 6
	}
	return nil
}
func (_gcbcag *ST_DdeValueType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcbcag = 0
	case "\u006e\u0069\u006c":
		*_gcbcag = 1
	case "\u0062":
		*_gcbcag = 2
	case "\u006e":
		*_gcbcag = 3
	case "\u0065":
		*_gcbcag = 4
	case "\u0073\u0074\u0072":
		*_gcbcag = 5
	}
	return nil
}

// ValidateWithPath validates the CT_Members and its children, prefixing error messages with path
func (_afeae *CT_Members) ValidateWithPath(path string) error {
	for _dbddc, _efggcd := range _afeae.Member {
		if _eeegd := _efggcd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u0065\u006d\u0062\u0065\u0072\u005b\u0025\u0064\u005d", path, _dbddc)); _eeegd != nil {
			return _eeegd
		}
	}
	return nil
}

const (
	ST_PivotAreaTypeUnset    ST_PivotAreaType = 0
	ST_PivotAreaTypeNone     ST_PivotAreaType = 1
	ST_PivotAreaTypeNormal   ST_PivotAreaType = 2
	ST_PivotAreaTypeData     ST_PivotAreaType = 3
	ST_PivotAreaTypeAll      ST_PivotAreaType = 4
	ST_PivotAreaTypeOrigin   ST_PivotAreaType = 5
	ST_PivotAreaTypeButton   ST_PivotAreaType = 6
	ST_PivotAreaTypeTopEnd   ST_PivotAreaType = 7
	ST_PivotAreaTypeTopRight ST_PivotAreaType = 8
)

type MapInfo struct{ CT_MapInfo }

func (_cbbgb *CT_RevisionCustomView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbbgb.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_cbbgb.ActionAttr = ST_RevisionAction(1)
	for _, _dedcb := range start.Attr {
		if _dedcb.Name.Local == "\u0067\u0075\u0069\u0064" {
			_adebff, _cabgfd := _dedcb.Value, error(nil)
			if _cabgfd != nil {
				return _cabgfd
			}
			_cbbgb.GuidAttr = _adebff
			continue
		}
		if _dedcb.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_cbbgb.ActionAttr.UnmarshalXMLAttr(_dedcb)
			continue
		}
	}
	for {
		_deabe, _cfbfdb := d.Token()
		if _cfbfdb != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0043u\u0073\u0074\u006f\u006d\u0056\u0069\u0065w\u003a\u0020\u0025\u0073", _cfbfdb)
		}
		if _bgagfg, _cfffe := _deabe.(_b.EndElement); _cfffe && _bgagfg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CustomChartsheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Visible State
	StateAttr ST_SheetState

	// Zoom To Fit
	ZoomToFitAttr *bool
	PageMargins   *CT_PageMargins

	// Chart Sheet Page Setup
	PageSetup    *CT_CsPageSetup
	HeaderFooter *CT_HeaderFooter
}
type CT_MdxMemeberProp struct {

	// Member Unique Name Index
	NAttr uint32

	// Property Name Index
	NpAttr uint32
}

// ValidateWithPath validates the CT_ChartsheetPr and its children, prefixing error messages with path
func (_acgfca *CT_ChartsheetPr) ValidateWithPath(path string) error {
	if _acgfca.TabColor != nil {
		if _afdge := _acgfca.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _afdge != nil {
			return _afdge
		}
	}
	return nil
}
func (_gddabf ST_CellComments) String() string {
	switch _gddabf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case 3:
		return "\u0061\u0074\u0045n\u0064"
	}
	return ""
}

// Validate validates the CT_PivotCacheRecords and its children
func (_abefdg *CT_PivotCacheRecords) Validate() error {
	return _abefdg.ValidateWithPath("C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073")
}

// ValidateWithPath validates the CT_X and its children, prefixing error messages with path
func (_gafca *CT_X) ValidateWithPath(path string) error { return nil }

// Validate validates the Workbook and its children
func (_gbaebd *Workbook) Validate() error {
	return _gbaebd.ValidateWithPath("\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}

// ValidateWithPath validates the CT_Record and its children, prefixing error messages with path
func (_efcdb *CT_Record) ValidateWithPath(path string) error {
	for _baedc, _aabbag := range _efcdb.M {
		if _dagfc := _aabbag.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _baedc)); _dagfc != nil {
			return _dagfc
		}
	}
	for _adbae, _aeacd := range _efcdb.N {
		if _fcfea := _aeacd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _adbae)); _fcfea != nil {
			return _fcfea
		}
	}
	for _ccbga, _badaef := range _efcdb.B {
		if _dfbcd := _badaef.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _ccbga)); _dfbcd != nil {
			return _dfbcd
		}
	}
	for _gcfec, _cgbgd := range _efcdb.E {
		if _gegeg := _cgbgd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _gcfec)); _gegeg != nil {
			return _gegeg
		}
	}
	for _ggefa, _ebabc := range _efcdb.S {
		if _ecgfb := _ebabc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _ggefa)); _ecgfb != nil {
			return _ecgfb
		}
	}
	for _cgdd, _eddga := range _efcdb.D {
		if _gfede := _eddga.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _cgdd)); _gfede != nil {
			return _gfede
		}
	}
	for _adaae, _abcce := range _efcdb.X {
		if _abcfc := _abcce.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _adaae)); _abcfc != nil {
			return _abcfc
		}
	}
	return nil
}
func (_eaddb ST_CellComments) ValidateWithPath(path string) error {
	switch _eaddb {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaddb))
	}
	return nil
}

type PivotCacheRecords struct{ CT_PivotCacheRecords }

func (_cedffa ST_RefMode) Validate() error { return _cedffa.ValidateWithPath("") }

type CT_CustomChartsheetViews struct {

	// Custom Chart Sheet View
	CustomSheetView []*CT_CustomChartsheetView
}

// ValidateWithPath validates the CT_Tables and its children, prefixing error messages with path
func (_adacec *CT_Tables) ValidateWithPath(path string) error {
	for _bcbacb, _faegg := range _adacec.M {
		if _effdd := _faegg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _bcbacb)); _effdd != nil {
			return _effdd
		}
	}
	for _cccbd, _dfeccc := range _adacec.S {
		if _dddfd := _dfeccc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _cccbd)); _dddfd != nil {
			return _dddfd
		}
	}
	for _cbedc, _ceecbg := range _adacec.X {
		if _bfae := _ceecbg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _cbedc)); _bfae != nil {
			return _bfae
		}
	}
	return nil
}
func NewCT_DeletedField() *CT_DeletedField { _dggb := &CT_DeletedField{}; return _dggb }
func (_cfdbg ST_HtmlFmt) String() string {
	switch _cfdbg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0072\u0074\u0066"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}

type CT_ExternalDefinedName struct {

	// Defined Name
	NameAttr string

	// Refers To
	RefersToAttr *string

	// Sheet Id
	SheetIdAttr *uint32
}

// Validate validates the CT_WorkbookPr and its children
func (_baggf *CT_WorkbookPr) Validate() error {
	return _baggf.ValidateWithPath("\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072")
}
func (_gcbca ST_SourceType) ValidateWithPath(path string) error {
	switch _gcbca {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gcbca))
	}
	return nil
}
func (_dggebg ST_DateTimeGrouping) Validate() error { return _dggebg.ValidateWithPath("") }

type CT_Missing struct {

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls []*CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func (_fccgf ST_TableStyleType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cfbac := _b.Attr{}
	_cfbac.Name = name
	switch _fccgf {
	case ST_TableStyleTypeUnset:
		_cfbac.Value = ""
	case ST_TableStyleTypeWholeTable:
		_cfbac.Value = "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case ST_TableStyleTypeHeaderRow:
		_cfbac.Value = "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case ST_TableStyleTypeTotalRow:
		_cfbac.Value = "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumn:
		_cfbac.Value = "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeLastColumn:
		_cfbac.Value = "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstRowStripe:
		_cfbac.Value = "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondRowStripe:
		_cfbac.Value = "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstColumnStripe:
		_cfbac.Value = "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeSecondColumnStripe:
		_cfbac.Value = "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case ST_TableStyleTypeFirstHeaderCell:
		_cfbac.Value = "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastHeaderCell:
		_cfbac.Value = "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstTotalCell:
		_cfbac.Value = "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeLastTotalCell:
		_cfbac.Value = "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case ST_TableStyleTypeFirstSubtotalColumn:
		_cfbac.Value = "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeSecondSubtotalColumn:
		_cfbac.Value = "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case ST_TableStyleTypeThirdSubtotalColumn:
		_cfbac.Value = "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case ST_TableStyleTypeFirstSubtotalRow:
		_cfbac.Value = "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeSecondSubtotalRow:
		_cfbac.Value = "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeThirdSubtotalRow:
		_cfbac.Value = "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case ST_TableStyleTypeBlankRow:
		_cfbac.Value = "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case ST_TableStyleTypeFirstColumnSubheading:
		_cfbac.Value = "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondColumnSubheading:
		_cfbac.Value = "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case ST_TableStyleTypeThirdColumnSubheading:
		_cfbac.Value = "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeFirstRowSubheading:
		_cfbac.Value = "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeSecondRowSubheading:
		_cfbac.Value = "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypeThirdRowSubheading:
		_cfbac.Value = "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case ST_TableStyleTypePageFieldLabels:
		_cfbac.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case ST_TableStyleTypePageFieldValues:
		_cfbac.Value = "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _cfbac, nil
}
func NewCT_PivotAreas() *CT_PivotAreas { _bacae := &CT_PivotAreas{}; return _bacae }

type CT_IndexedColors struct {

	// RGB Color
	RgbColor []*CT_RgbColor
}

func (_beddfg *CT_SheetPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agbfg := range start.Attr {
		if _agbfg.Name.Local == "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c" {
			_geeffe, _cddgcf := _g.ParseBool(_agbfg.Value)
			if _cddgcf != nil {
				return _cddgcf
			}
			_beddfg.SyncHorizontalAttr = &_geeffe
			continue
		}
		if _agbfg.Name.Local == "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c" {
			_agfba, _edbea := _g.ParseBool(_agbfg.Value)
			if _edbea != nil {
				return _edbea
			}
			_beddfg.SyncVerticalAttr = &_agfba
			continue
		}
		if _agbfg.Name.Local == "\u0073y\u006e\u0063\u0052\u0065\u0066" {
			_cdaffg, _dcabg := _agbfg.Value, error(nil)
			if _dcabg != nil {
				return _dcabg
			}
			_beddfg.SyncRefAttr = &_cdaffg
			continue
		}
		if _agbfg.Name.Local == "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e" {
			_cdedf, _cgbba := _g.ParseBool(_agbfg.Value)
			if _cgbba != nil {
				return _cgbba
			}
			_beddfg.TransitionEvaluationAttr = &_cdedf
			continue
		}
		if _agbfg.Name.Local == "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079" {
			_ccfgf, _eadce := _g.ParseBool(_agbfg.Value)
			if _eadce != nil {
				return _eadce
			}
			_beddfg.TransitionEntryAttr = &_ccfgf
			continue
		}
		if _agbfg.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_bgbfda, _ebebd := _g.ParseBool(_agbfg.Value)
			if _ebebd != nil {
				return _ebebd
			}
			_beddfg.PublishedAttr = &_bgbfda
			continue
		}
		if _agbfg.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_feagg, _ccgbc := _agbfg.Value, error(nil)
			if _ccgbc != nil {
				return _ccgbc
			}
			_beddfg.CodeNameAttr = &_feagg
			continue
		}
		if _agbfg.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065" {
			_egdgd, _dgfaa := _g.ParseBool(_agbfg.Value)
			if _dgfaa != nil {
				return _dgfaa
			}
			_beddfg.FilterModeAttr = &_egdgd
			continue
		}
		if _agbfg.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e" {
			_ffdad, _cedagc := _g.ParseBool(_agbfg.Value)
			if _cedagc != nil {
				return _cedagc
			}
			_beddfg.EnableFormatConditionsCalculationAttr = &_ffdad
			continue
		}
	}
_bbdff:
	for {
		_fgdbf, _afbafc := d.Token()
		if _afbafc != nil {
			return _afbafc
		}
		switch _egcca := _fgdbf.(type) {
		case _b.StartElement:
			switch _egcca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}:
				_beddfg.TabColor = NewCT_Color()
				if _eebcbf := d.DecodeElement(_beddfg.TabColor, &_egcca); _eebcbf != nil {
					return _eebcbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065\u0050r"}:
				_beddfg.OutlinePr = NewCT_OutlinePr()
				if _gebefc := d.DecodeElement(_beddfg.OutlinePr, &_egcca); _gebefc != nil {
					return _gebefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"}:
				_beddfg.PageSetUpPr = NewCT_PageSetUpPr()
				if _cgbgff := d.DecodeElement(_beddfg.PageSetUpPr, &_egcca); _cgbgff != nil {
					return _cgbgff
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0050\u0072\u0020\u0025\u0076", _egcca.Name)
				if _cfafb := d.Skip(); _cfafb != nil {
					return _cfafb
				}
			}
		case _b.EndElement:
			break _bbdff
		case _b.CharData:
		}
	}
	return nil
}
func (_fgbbg *CT_SortCondition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fgbbg.DescendingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fgbbg.DescendingAttr))})
	}
	if _fgbbg.SortByAttr != ST_SortByUnset {
		_aebeg, _dafce := _fgbbg.SortByAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u006f\u0072\u0074\u0042\u0079"})
		if _dafce != nil {
			return _dafce
		}
		start.Attr = append(start.Attr, _aebeg)
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _fgbbg.RefAttr)})
	if _fgbbg.CustomListAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fgbbg.CustomListAttr)})
	}
	if _fgbbg.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_fgbbg.DxfIdAttr)})
	}
	if _fgbbg.IconSetAttr != ST_IconSetTypeUnset {
		_dabdf, _bedac := _fgbbg.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _bedac != nil {
			return _bedac
		}
		start.Attr = append(start.Attr, _dabdf)
	}
	if _fgbbg.IconIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0063\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_fgbbg.IconIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MdxTuple and its children
func (_gcbbca *CT_MdxTuple) Validate() error {
	return _gcbbca.ValidateWithPath("C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065")
}
func NewCT_ReviewedRevisions() *CT_ReviewedRevisions { _adbg := &CT_ReviewedRevisions{}; return _adbg }
func (_cefcc *CT_RevisionHeaders) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cefcc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gceaa := range start.Attr {
		if _gceaa.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_cfcgb, _dabfa := _g.ParseBool(_gceaa.Value)
			if _dabfa != nil {
				return _dabfa
			}
			_cefcc.ExclusiveAttr = &_cfcgb
			continue
		}
		if _gceaa.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_edcb, _bcbff := _gceaa.Value, error(nil)
			if _bcbff != nil {
				return _bcbff
			}
			_cefcc.LastGuidAttr = &_edcb
			continue
		}
		if _gceaa.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_dgbga, _fbgcgb := _g.ParseBool(_gceaa.Value)
			if _fbgcgb != nil {
				return _fbgcgb
			}
			_cefcc.SharedAttr = &_dgbga
			continue
		}
		if _gceaa.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_cgdbd, _bfdebe := _g.ParseBool(_gceaa.Value)
			if _bfdebe != nil {
				return _bfdebe
			}
			_cefcc.DiskRevisionsAttr = &_cgdbd
			continue
		}
		if _gceaa.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_fedca, _ebgga := _g.ParseBool(_gceaa.Value)
			if _ebgga != nil {
				return _ebgga
			}
			_cefcc.HistoryAttr = &_fedca
			continue
		}
		if _gceaa.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_ebbae, _cbcgga := _g.ParseBool(_gceaa.Value)
			if _cbcgga != nil {
				return _cbcgga
			}
			_cefcc.TrackRevisionsAttr = &_ebbae
			continue
		}
		if _gceaa.Name.Local == "\u0067\u0075\u0069\u0064" {
			_daccg, _caabb := _gceaa.Value, error(nil)
			if _caabb != nil {
				return _caabb
			}
			_cefcc.GuidAttr = _daccg
			continue
		}
		if _gceaa.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_abcgbe, _agccb := _g.ParseUint(_gceaa.Value, 10, 32)
			if _agccb != nil {
				return _agccb
			}
			_dfbae := uint32(_abcgbe)
			_cefcc.RevisionIdAttr = &_dfbae
			continue
		}
		if _gceaa.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_dgggcd, _dcecde := _g.ParseInt(_gceaa.Value, 10, 32)
			if _dcecde != nil {
				return _dcecde
			}
			_edbdgg := int32(_dgggcd)
			_cefcc.VersionAttr = &_edbdgg
			continue
		}
		if _gceaa.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_cgefa, _edeag := _g.ParseBool(_gceaa.Value)
			if _edeag != nil {
				return _edeag
			}
			_cefcc.KeepChangeHistoryAttr = &_cgefa
			continue
		}
		if _gceaa.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_bcbef, _gdbdg := _g.ParseBool(_gceaa.Value)
			if _gdbdg != nil {
				return _gdbdg
			}
			_cefcc.ProtectedAttr = &_bcbef
			continue
		}
		if _gceaa.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_bffbb, _fbdac := _g.ParseUint(_gceaa.Value, 10, 32)
			if _fbdac != nil {
				return _fbdac
			}
			_abgca := uint32(_bffbb)
			_cefcc.PreserveHistoryAttr = &_abgca
			continue
		}
	}
_efdce:
	for {
		_afggg, _cbgfb := d.Token()
		if _cbgfb != nil {
			return _cbgfb
		}
		switch _gefag := _afggg.(type) {
		case _b.StartElement:
			switch _gefag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_debbbg := NewCT_RevisionHeader()
				if _adfagf := d.DecodeElement(_debbbg, &_gefag); _adfagf != nil {
					return _adfagf
				}
				_cefcc.Header = append(_cefcc.Header, _debbbg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069o\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _gefag.Name)
				if _cdcga := d.Skip(); _cdcga != nil {
					return _cdcga
				}
			}
		case _b.EndElement:
			break _efdce
		case _b.CharData:
		}
	}
	return nil
}

type CT_Tuples struct {

	// Member Name Count
	CAttr *uint32

	// Tuple
	Tpl []*CT_Tuple
}

func (_cfdba ST_WebSourceType) Validate() error { return _cfdba.ValidateWithPath("") }
func (_daebd *ST_UpdateLinks) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_daebd = 0
	case "\u0075s\u0065\u0072\u0053\u0065\u0074":
		*_daebd = 1
	case "\u006e\u0065\u0076e\u0072":
		*_daebd = 2
	case "\u0061\u006c\u0077\u0061\u0079\u0073":
		*_daebd = 3
	}
	return nil
}
func (_ggfcb *CT_RevisionComment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ggfcb.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", _ggfcb.CellAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ggfcb.GuidAttr)})
	if _ggfcb.ActionAttr != ST_RevisionActionUnset {
		_eadba, _egaff := _ggfcb.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _egaff != nil {
			return _egaff
		}
		start.Attr = append(start.Attr, _eadba)
	}
	if _ggfcb.AlwaysShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u0077\u0061\u0079\u0073\u0053\u0068\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggfcb.AlwaysShowAttr))})
	}
	if _ggfcb.OldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggfcb.OldAttr))})
	}
	if _ggfcb.HiddenRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068i\u0064\u0064\u0065\u006e\u0052\u006fw"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggfcb.HiddenRowAttr))})
	}
	if _ggfcb.HiddenColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggfcb.HiddenColumnAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, Value: _a.Sprintf("\u0025\u0076", _ggfcb.AuthorAttr)})
	if _ggfcb.OldLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004c\u0065\u006e\u0067\u0074h"}, Value: _a.Sprintf("\u0025\u0076", *_ggfcb.OldLengthAttr)})
	}
	if _ggfcb.NewLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004c\u0065\u006e\u0067\u0074h"}, Value: _a.Sprintf("\u0025\u0076", *_ggfcb.NewLengthAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type SingleXmlCells struct{ CT_SingleXmlCells }

func (_abga *CT_RevisionConflict) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abga.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_abga.SheetIdAttr)})
	}
	if _abga.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_abga.RIdAttr)})
	}
	if _abga.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abga.UaAttr))})
	}
	if _abga.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_abga.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_DdeValue and its children, prefixing error messages with path
func (_cgfcg *CT_DdeValue) ValidateWithPath(path string) error {
	if _ageee := _cgfcg.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ageee != nil {
		return _ageee
	}
	return nil
}
func (_efdfg ST_DateTimeGrouping) String() string {
	switch _efdfg {
	case 0:
		return ""
	case 1:
		return "\u0079\u0065\u0061\u0072"
	case 2:
		return "\u006d\u006f\u006et\u0068"
	case 3:
		return "\u0064\u0061\u0079"
	case 4:
		return "\u0068\u006f\u0075\u0072"
	case 5:
		return "\u006d\u0069\u006e\u0075\u0074\u0065"
	case 6:
		return "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return ""
}
func (_defge *CT_String) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebagd := range start.Attr {
		if _ebagd.Name.Local == "\u0066\u0063" {
			_eedcb, _fbgfdg := _ebagd.Value, error(nil)
			if _fbgfdg != nil {
				return _fbgfdg
			}
			_defge.FcAttr = &_eedcb
			continue
		}
		if _ebagd.Name.Local == "\u0076" {
			_acggd, _ebfbd := _ebagd.Value, error(nil)
			if _ebfbd != nil {
				return _ebfbd
			}
			_defge.VAttr = _acggd
			continue
		}
		if _ebagd.Name.Local == "\u0066" {
			_cddee, _abceg := _g.ParseBool(_ebagd.Value)
			if _abceg != nil {
				return _abceg
			}
			_defge.FAttr = &_cddee
			continue
		}
		if _ebagd.Name.Local == "\u0063" {
			_cdaga, _bcfadg := _ebagd.Value, error(nil)
			if _bcfadg != nil {
				return _bcfadg
			}
			_defge.CAttr = &_cdaga
			continue
		}
		if _ebagd.Name.Local == "\u0063\u0070" {
			_cccge, _efcfg := _g.ParseUint(_ebagd.Value, 10, 32)
			if _efcfg != nil {
				return _efcfg
			}
			_ggeef := uint32(_cccge)
			_defge.CpAttr = &_ggeef
			continue
		}
		if _ebagd.Name.Local == "\u0069\u006e" {
			_gagfa, _ffgcc := _g.ParseUint(_ebagd.Value, 10, 32)
			if _ffgcc != nil {
				return _ffgcc
			}
			_adbeca := uint32(_gagfa)
			_defge.InAttr = &_adbeca
			continue
		}
		if _ebagd.Name.Local == "\u0062\u0063" {
			_eccbf, _bfaff := _ebagd.Value, error(nil)
			if _bfaff != nil {
				return _bfaff
			}
			_defge.BcAttr = &_eccbf
			continue
		}
		if _ebagd.Name.Local == "\u0075" {
			_egdaa, _faeab := _g.ParseBool(_ebagd.Value)
			if _faeab != nil {
				return _faeab
			}
			_defge.UAttr = &_egdaa
			continue
		}
		if _ebagd.Name.Local == "\u0069" {
			_deddd, _cacge := _g.ParseBool(_ebagd.Value)
			if _cacge != nil {
				return _cacge
			}
			_defge.IAttr = &_deddd
			continue
		}
		if _ebagd.Name.Local == "\u0075\u006e" {
			_bfgec, _bcagf := _g.ParseBool(_ebagd.Value)
			if _bcagf != nil {
				return _bcagf
			}
			_defge.UnAttr = &_bfgec
			continue
		}
		if _ebagd.Name.Local == "\u0073\u0074" {
			_aabga, _fgbgf := _g.ParseBool(_ebagd.Value)
			if _fgbgf != nil {
				return _fgbgf
			}
			_defge.StAttr = &_aabga
			continue
		}
		if _ebagd.Name.Local == "\u0062" {
			_fgbf, _cgffd := _g.ParseBool(_ebagd.Value)
			if _cgffd != nil {
				return _cgffd
			}
			_defge.BAttr = &_fgbf
			continue
		}
	}
_affaa:
	for {
		_bgdcb, _cfaed := d.Token()
		if _cfaed != nil {
			return _cfaed
		}
		switch _dbcgc := _bgdcb.(type) {
		case _b.StartElement:
			switch _dbcgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_eecdb := NewCT_Tuples()
				if _fbaaf := d.DecodeElement(_eecdb, &_dbcgc); _fbaaf != nil {
					return _fbaaf
				}
				_defge.Tpls = append(_defge.Tpls, _eecdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ccega := NewCT_X()
				if _gfggc := d.DecodeElement(_ccega, &_dbcgc); _gfggc != nil {
					return _gfggc
				}
				_defge.X = append(_defge.X, _ccega)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0074\u0072i\u006e\u0067 \u0025\u0076", _dbcgc.Name)
				if _bbdaec := d.Skip(); _bbdaec != nil {
					return _bbdaec
				}
			}
		case _b.EndElement:
			break _affaa
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_RevisionSheetRename and its children
func (_ecccg *CT_RevisionSheetRename) Validate() error {
	return _ecccg.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065")
}
func (_edgd *CT_Dialogsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_adbef:
	for {
		_ecbg, _cccfc := d.Token()
		if _cccfc != nil {
			return _cccfc
		}
		switch _begcc := _ecbg.(type) {
		case _b.StartElement:
			switch _begcc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_edgd.SheetPr = NewCT_SheetPr()
				if _agabc := d.DecodeElement(_edgd.SheetPr, &_begcc); _agabc != nil {
					return _agabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_edgd.SheetViews = NewCT_SheetViews()
				if _fgfef := d.DecodeElement(_edgd.SheetViews, &_begcc); _fgfef != nil {
					return _fgfef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_edgd.SheetFormatPr = NewCT_SheetFormatPr()
				if _dfadb := d.DecodeElement(_edgd.SheetFormatPr, &_begcc); _dfadb != nil {
					return _dfadb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_edgd.SheetProtection = NewCT_SheetProtection()
				if _eddae := d.DecodeElement(_edgd.SheetProtection, &_begcc); _eddae != nil {
					return _eddae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_edgd.CustomSheetViews = NewCT_CustomSheetViews()
				if _fgcge := d.DecodeElement(_edgd.CustomSheetViews, &_begcc); _fgcge != nil {
					return _fgcge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_edgd.PrintOptions = NewCT_PrintOptions()
				if _dccdg := d.DecodeElement(_edgd.PrintOptions, &_begcc); _dccdg != nil {
					return _dccdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_edgd.PageMargins = NewCT_PageMargins()
				if _fege := d.DecodeElement(_edgd.PageMargins, &_begcc); _fege != nil {
					return _fege
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_edgd.PageSetup = NewCT_PageSetup()
				if _fgdeg := d.DecodeElement(_edgd.PageSetup, &_begcc); _fgdeg != nil {
					return _fgdeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_edgd.HeaderFooter = NewCT_HeaderFooter()
				if _bdfaf := d.DecodeElement(_edgd.HeaderFooter, &_begcc); _bdfaf != nil {
					return _bdfaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_edgd.Drawing = NewCT_Drawing()
				if _ffeee := d.DecodeElement(_edgd.Drawing, &_begcc); _ffeee != nil {
					return _ffeee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_edgd.LegacyDrawing = NewCT_LegacyDrawing()
				if _cfaa := d.DecodeElement(_edgd.LegacyDrawing, &_begcc); _cfaa != nil {
					return _cfaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_edgd.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _gbaac := d.DecodeElement(_edgd.LegacyDrawingHF, &_begcc); _gbaac != nil {
					return _gbaac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_edgd.DrawingHF = NewCT_DrawingHF()
				if _dgfge := d.DecodeElement(_edgd.DrawingHF, &_begcc); _dgfge != nil {
					return _dgfge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_edgd.OleObjects = NewCT_OleObjects()
				if _dafef := d.DecodeElement(_edgd.OleObjects, &_begcc); _dafef != nil {
					return _dafef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_edgd.Controls = NewCT_Controls()
				if _bddcb := d.DecodeElement(_edgd.Controls, &_begcc); _bddcb != nil {
					return _bddcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_edgd.ExtLst = NewCT_ExtensionList()
				if _daaaa := d.DecodeElement(_edgd.ExtLst, &_begcc); _daaaa != nil {
					return _daaaa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067\u0073h\u0065e\u0074\u0020\u0025\u0076", _begcc.Name)
				if _gbgfa := d.Skip(); _gbgfa != nil {
					return _gbgfa
				}
			}
		case _b.EndElement:
			break _adbef
		case _b.CharData:
		}
	}
	return nil
}
func (_gdcabe ST_ShowDataAs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gdcabe.String(), start)
}
func (_dcded ST_TotalsRowFunction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_beabbe := _b.Attr{}
	_beabbe.Name = name
	switch _dcded {
	case ST_TotalsRowFunctionUnset:
		_beabbe.Value = ""
	case ST_TotalsRowFunctionNone:
		_beabbe.Value = "\u006e\u006f\u006e\u0065"
	case ST_TotalsRowFunctionSum:
		_beabbe.Value = "\u0073\u0075\u006d"
	case ST_TotalsRowFunctionMin:
		_beabbe.Value = "\u006d\u0069\u006e"
	case ST_TotalsRowFunctionMax:
		_beabbe.Value = "\u006d\u0061\u0078"
	case ST_TotalsRowFunctionAverage:
		_beabbe.Value = "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case ST_TotalsRowFunctionCount:
		_beabbe.Value = "\u0063\u006f\u0075n\u0074"
	case ST_TotalsRowFunctionCountNums:
		_beabbe.Value = "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case ST_TotalsRowFunctionStdDev:
		_beabbe.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_TotalsRowFunctionVar:
		_beabbe.Value = "\u0076\u0061\u0072"
	case ST_TotalsRowFunctionCustom:
		_beabbe.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _beabbe, nil
}
func (_eaadg *CT_FileRecoveryPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaadg.AutoRecoverAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eaadg.AutoRecoverAttr))})
	}
	if _eaadg.CrashSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eaadg.CrashSaveAttr))})
	}
	if _eaadg.DataExtractLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eaadg.DataExtractLoadAttr))})
	}
	if _eaadg.RepairLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eaadg.RepairLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcgdbf ST_MdxKPIProperty) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgdacb := _b.Attr{}
	_cgdacb.Name = name
	switch _bcgdbf {
	case ST_MdxKPIPropertyUnset:
		_cgdacb.Value = ""
	case ST_MdxKPIPropertyV:
		_cgdacb.Value = "\u0076"
	case ST_MdxKPIPropertyG:
		_cgdacb.Value = "\u0067"
	case ST_MdxKPIPropertyS:
		_cgdacb.Value = "\u0073"
	case ST_MdxKPIPropertyT:
		_cgdacb.Value = "\u0074"
	case ST_MdxKPIPropertyW:
		_cgdacb.Value = "\u0077"
	case ST_MdxKPIPropertyM:
		_cgdacb.Value = "\u006d"
	}
	return _cgdacb, nil
}
func (_afgeg *ST_TableStyleType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afgeg = 0
	case "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065":
		*_afgeg = 1
	case "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw":
		*_afgeg = 2
	case "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_afgeg = 3
	case "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_afgeg = 4
	case "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e":
		*_afgeg = 5
	case "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065":
		*_afgeg = 6
	case "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065":
		*_afgeg = 7
	case "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065":
		*_afgeg = 8
	case "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065":
		*_afgeg = 9
	case "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c":
		*_afgeg = 10
	case "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c":
		*_afgeg = 11
	case "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c":
		*_afgeg = 12
	case "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c":
		*_afgeg = 13
	case "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_afgeg = 14
	case "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e":
		*_afgeg = 15
	case "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e":
		*_afgeg = 16
	case "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_afgeg = 17
	case "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077":
		*_afgeg = 18
	case "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077":
		*_afgeg = 19
	case "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077":
		*_afgeg = 20
	case "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_afgeg = 21
	case "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067":
		*_afgeg = 22
	case "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067":
		*_afgeg = 23
	case "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_afgeg = 24
	case "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067":
		*_afgeg = 25
	case "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067":
		*_afgeg = 26
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073":
		*_afgeg = 27
	case "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073":
		*_afgeg = 28
	}
	return nil
}
func (_debea ST_CellSpans) String() string { return _c.Join(_debea, "\u0020") }

type CT_TableStyleElement struct {

	// Table Style Type
	TypeAttr ST_TableStyleType

	// Band Size
	SizeAttr *uint32

	// Formatting Id
	DxfIdAttr *uint32
}

// Validate validates the CT_Error and its children
func (_edgdb *CT_Error) Validate() error {
	return _edgdb.ValidateWithPath("\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072")
}
func (_adaaa ST_IconSetType) Validate() error { return _adaaa.ValidateWithPath("") }
func (_dabade *CT_SheetId) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efdee := range start.Attr {
		if _efdee.Name.Local == "\u0076\u0061\u006c" {
			_dffbe, _ebdeed := _g.ParseUint(_efdee.Value, 10, 32)
			if _ebdeed != nil {
				return _ebdeed
			}
			_dabade.ValAttr = uint32(_dffbe)
			continue
		}
	}
	for {
		_ffcb, _dgaed := d.Token()
		if _dgaed != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u003a\u0020%\u0073", _dgaed)
		}
		if _ebgff, _gdcecc := _ffcb.(_b.EndElement); _gdcecc && _ebgff.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DataRefs and its children, prefixing error messages with path
func (_afce *CT_DataRefs) ValidateWithPath(path string) error {
	for _ccfad, _bddgc := range _afce.DataRef {
		if _adceg := _bddgc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u0061\u0074\u0061\u0052\u0065f\u005b\u0025\u0064\u005d", path, _ccfad)); _adceg != nil {
			return _adceg
		}
	}
	return nil
}
func (_dfcgg *ST_PageOrder) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aafea, _aaaea := d.Token()
	if _aaaea != nil {
		return _aaaea
	}
	if _dcdeec, _gcffac := _aafea.(_b.EndElement); _gcffac && _dcdeec.Name == start.Name {
		*_dfcgg = 1
		return nil
	}
	if _eadfb, _deagc := _aafea.(_b.CharData); !_deagc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aafea)
	} else {
		switch string(_eadfb) {
		case "":
			*_dfcgg = 0
		case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
			*_dfcgg = 1
		case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
			*_dfcgg = 2
		}
	}
	_aafea, _aaaea = d.Token()
	if _aaaea != nil {
		return _aaaea
	}
	if _acfdf, _eafgbe := _aafea.(_b.EndElement); _eafgbe && _acfdf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aafea)
}
func (_gcfbb *CT_SheetBackgroundPicture) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dababd := range start.Attr {
		if _dababd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dababd.Name.Local == "\u0069\u0064" || _dababd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dababd.Name.Local == "\u0069\u0064" {
			_ffag, _ccgca := _dababd.Value, error(nil)
			if _ccgca != nil {
				return _ccgca
			}
			_gcfbb.IdAttr = _ffag
			continue
		}
	}
	for {
		_gdede, _defdd := d.Token()
		if _defdd != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067 \u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0042\u0061\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0050\u0069\u0063\u0074\u0075\u0072e\u003a\u0020\u0025\u0073", _defdd)
		}
		if _edcabf, _cbbfcf := _gdede.(_b.EndElement); _cbbfcf && _edcabf.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_DvAspect byte

// ValidateWithPath validates the CT_DataFields and its children, prefixing error messages with path
func (_ggee *CT_DataFields) ValidateWithPath(path string) error {
	for _feabb, _cbeaf := range _ggee.DataField {
		if _acbg := _cbeaf.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0044\u0061\u0074a\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _feabb)); _acbg != nil {
			return _acbg
		}
	}
	return nil
}
func (_eccccg ST_FormatAction) ValidateWithPath(path string) error {
	switch _eccccg {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eccccg))
	}
	return nil
}
func (_gegbed *CT_ExternalCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gegbed.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_gegbed.RAttr)})
	}
	if _gegbed.TAttr != ST_CellTypeUnset {
		_fgfda, _adgad := _gegbed.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _adgad != nil {
			return _adgad
		}
		start.Attr = append(start.Attr, _fgfda)
	}
	if _gegbed.VmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_gegbed.VmAttr)})
	}
	e.EncodeToken(start)
	if _gegbed.V != nil {
		_ccaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0076"}}
		_f.AddPreserveSpaceAttr(&_ccaff, *_gegbed.V)
		e.EncodeElement(_gegbed.V, _ccaff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cfdbd *ST_TextHAlign) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gfffa, _gaceg := d.Token()
	if _gaceg != nil {
		return _gaceg
	}
	if _egffb, _bacgg := _gfffa.(_b.EndElement); _bacgg && _egffb.Name == start.Name {
		*_cfdbd = 1
		return nil
	}
	if _cdaag, _fggfc := _gfffa.(_b.CharData); !_fggfc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfffa)
	} else {
		switch string(_cdaag) {
		case "":
			*_cfdbd = 0
		case "\u006c\u0065\u0066\u0074":
			*_cfdbd = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_cfdbd = 2
		case "\u0072\u0069\u0067h\u0074":
			*_cfdbd = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_cfdbd = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_cfdbd = 5
		}
	}
	_gfffa, _gaceg = d.Token()
	if _gaceg != nil {
		return _gaceg
	}
	if _cdfdc, _bcfac := _gfffa.(_b.EndElement); _bcfac && _cdfdc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfffa)
}

type ST_TextVAlign byte

func NewCT_DdeValues() *CT_DdeValues { _ccggb := &CT_DdeValues{}; return _ccggb }
func NewCT_RevisionFormatting() *CT_RevisionFormatting {
	_daafb := &CT_RevisionFormatting{}
	return _daafb
}

type ST_ParameterType byte

func (_ebge *CT_Item) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ebge.NAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ebge.NAttr)})
	}
	if _ebge.TAttr != ST_ItemTypeUnset {
		_bcadg, _gcafe := _ebge.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _gcafe != nil {
			return _gcafe
		}
		start.Attr = append(start.Attr, _bcadg)
	}
	if _ebge.HAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.HAttr))})
	}
	if _ebge.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.SAttr))})
	}
	if _ebge.SdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.SdAttr))})
	}
	if _ebge.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.FAttr))})
	}
	if _ebge.MAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.MAttr))})
	}
	if _ebge.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.CAttr))})
	}
	if _ebge.XAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _a.Sprintf("\u0025\u0076", *_ebge.XAttr)})
	}
	if _ebge.DAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.DAttr))})
	}
	if _ebge.EAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ebge.EAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcbeec *CT_FutureMetadataBlock) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _bcbeec.ExtLst != nil {
		_ababa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bcbeec.ExtLst, _ababa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bffebd *ST_PivotAreaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cecaadf, _dcebec := d.Token()
	if _dcebec != nil {
		return _dcebec
	}
	if _bfcedd, _ffaff := _cecaadf.(_b.EndElement); _ffaff && _bfcedd.Name == start.Name {
		*_bffebd = 1
		return nil
	}
	if _fdcfc, _bcagbc := _cecaadf.(_b.CharData); !_bcagbc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cecaadf)
	} else {
		switch string(_fdcfc) {
		case "":
			*_bffebd = 0
		case "\u006e\u006f\u006e\u0065":
			*_bffebd = 1
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_bffebd = 2
		case "\u0064\u0061\u0074\u0061":
			*_bffebd = 3
		case "\u0061\u006c\u006c":
			*_bffebd = 4
		case "\u006f\u0072\u0069\u0067\u0069\u006e":
			*_bffebd = 5
		case "\u0062\u0075\u0074\u0074\u006f\u006e":
			*_bffebd = 6
		case "\u0074\u006f\u0070\u0045\u006e\u0064":
			*_bffebd = 7
		case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_bffebd = 8
		}
	}
	_cecaadf, _dcebec = d.Token()
	if _dcebec != nil {
		return _dcebec
	}
	if _cfgdd, _fbcca := _cecaadf.(_b.EndElement); _fbcca && _cfgdd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cecaadf)
}
func NewCT_SmartTagTypes() *CT_SmartTagTypes { _adccf := &CT_SmartTagTypes{}; return _adccf }

// ValidateWithPath validates the CT_OleSize and its children, prefixing error messages with path
func (_eegdd *CT_OleSize) ValidateWithPath(path string) error { return nil }
func (_dafc *CT_DataConsolidate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdf := range start.Attr {
		if _cbdf.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_dafc.FunctionAttr.UnmarshalXMLAttr(_cbdf)
			continue
		}
		if _cbdf.Name.Local == "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_bbeef, _fegbc := _g.ParseBool(_cbdf.Value)
			if _fegbc != nil {
				return _fegbc
			}
			_dafc.StartLabelsAttr = &_bbeef
			continue
		}
		if _cbdf.Name.Local == "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073" {
			_gbbbe, _gaab := _g.ParseBool(_cbdf.Value)
			if _gaab != nil {
				return _gaab
			}
			_dafc.LeftLabelsAttr = &_gbbbe
			continue
		}
		if _cbdf.Name.Local == "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs" {
			_afbb, _ggbcg := _g.ParseBool(_cbdf.Value)
			if _ggbcg != nil {
				return _ggbcg
			}
			_dafc.TopLabelsAttr = &_afbb
			continue
		}
		if _cbdf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_bdadc, _bffa := _g.ParseBool(_cbdf.Value)
			if _bffa != nil {
				return _bffa
			}
			_dafc.LinkAttr = &_bdadc
			continue
		}
	}
_eeddc:
	for {
		_edeg, _bffgc := d.Token()
		if _bffgc != nil {
			return _bffgc
		}
		switch _dgcb := _edeg.(type) {
		case _b.StartElement:
			switch _dgcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}:
				_dafc.DataRefs = NewCT_DataRefs()
				if _eaccgg := d.DecodeElement(_dafc.DataRefs, &_dgcb); _eaccgg != nil {
					return _eaccgg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0043\u006fn\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065\u0020\u0025\u0076", _dgcb.Name)
				if _ccead := d.Skip(); _ccead != nil {
					return _ccead
				}
			}
		case _b.EndElement:
			break _eeddc
		case _b.CharData:
		}
	}
	return nil
}
func NewUsers() *Users { _efcacf := &Users{}; _efcacf.CT_Users = *NewCT_Users(); return _efcacf }
func (_ebagf *ST_Axis) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebagf = 0
	case "\u0061x\u0069\u0073\u0052\u006f\u0077":
		*_ebagf = 1
	case "\u0061x\u0069\u0073\u0043\u006f\u006c":
		*_ebagf = 2
	case "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065":
		*_ebagf = 3
	case "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073":
		*_ebagf = 4
	}
	return nil
}

// Validate validates the CT_ExternalSheetName and its children
func (_faagb *CT_ExternalSheetName) Validate() error {
	return _faagb.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065")
}
func NewCT_DataRef() *CT_DataRef { _bdacd := &CT_DataRef{}; return _bdacd }

type CT_SmartTagPr struct {

	// Embed SmartTags
	EmbedAttr *bool

	// Show Smart Tags
	ShowAttr ST_SmartTagShow
}

func (_aaaaeb *CT_TableFormula) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebbbc := range start.Attr {
		if _ebbbc.Name.Local == "\u0061\u0072\u0072a\u0079" {
			_adagc, _cdaca := _g.ParseBool(_ebbbc.Value)
			if _cdaca != nil {
				return _cdaca
			}
			_aaaaeb.ArrayAttr = _adagc
			continue
		}
	}
	for {
		_afcdcd, _aacfe := d.Token()
		if _aacfe != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0046o\u0072\u006d\u0075l\u0061:\u0020\u0025\u0073", _aacfe)
		}
		if _degbf, _dfbdbb := _afcdcd.(_b.CharData); _dfbdbb {
			_aaaaeb.Content = string(_degbf)
		}
		if _eegab, _dcbfc := _afcdcd.(_b.EndElement); _dcbfc && _eegab.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfge *CT_MeasureGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bfge.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _bfge.CaptionAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ConditionalFormats struct {

	// Conditional Format Count
	CountAttr *uint32

	// Conditional Formatting
	ConditionalFormat []*CT_ConditionalFormat
}
type CT_DataConsolidate struct {

	// Function Index
	FunctionAttr ST_DataConsolidateFunction

	// Use Starting Column Labels
	StartLabelsAttr *bool

	// Starting Column Labels
	LeftLabelsAttr *bool

	// Labels In Top Row
	TopLabelsAttr *bool

	// Link
	LinkAttr *bool

	// Data Consolidation References
	DataRefs *CT_DataRefs
}
type ST_FormatAction byte

func NewCT_PivotAreaReferences() *CT_PivotAreaReferences {
	_bbebc := &CT_PivotAreaReferences{}
	return _bbebc
}

// Validate validates the CT_RevisionMove and its children
func (_dbbede *CT_RevisionMove) Validate() error {
	return _dbbede.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065")
}
func (_ceebb ST_rwColActionType) ValidateWithPath(path string) error {
	switch _ceebb {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ceebb))
	}
	return nil
}
func (_eefda *CT_Error) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _eefda.VAttr)})
	if _eefda.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.UAttr))})
	}
	if _eefda.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.FAttr))})
	}
	if _eefda.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eefda.CAttr)})
	}
	if _eefda.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_eefda.CpAttr)})
	}
	if _eefda.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_eefda.InAttr)})
	}
	if _eefda.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eefda.BcAttr)})
	}
	if _eefda.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eefda.FcAttr)})
	}
	if _eefda.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.IAttr))})
	}
	if _eefda.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.UnAttr))})
	}
	if _eefda.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.StAttr))})
	}
	if _eefda.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eefda.BAttr))})
	}
	e.EncodeToken(start)
	if _eefda.Tpls != nil {
		_fegbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		e.EncodeElement(_eefda.Tpls, _fegbg)
	}
	if _eefda.X != nil {
		_egace := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _gdaec := range _eefda.X {
			e.EncodeElement(_gdaec, _egace)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Sst struct {

	// String Count
	CountAttr *uint32

	// Unique String Count
	UniqueCountAttr *uint32

	// String Item
	Si     []*CT_Rst
	ExtLst *CT_ExtensionList
}

func (_adebc *CT_Error) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caadf := range start.Attr {
		if _caadf.Name.Local == "\u0066\u0063" {
			_gcdcf, _geafg := _caadf.Value, error(nil)
			if _geafg != nil {
				return _geafg
			}
			_adebc.FcAttr = &_gcdcf
			continue
		}
		if _caadf.Name.Local == "\u0076" {
			_febc, _babe := _caadf.Value, error(nil)
			if _babe != nil {
				return _babe
			}
			_adebc.VAttr = _febc
			continue
		}
		if _caadf.Name.Local == "\u0066" {
			_cecda, _cgfeg := _g.ParseBool(_caadf.Value)
			if _cgfeg != nil {
				return _cgfeg
			}
			_adebc.FAttr = &_cecda
			continue
		}
		if _caadf.Name.Local == "\u0063" {
			_deada, _bgcaa := _caadf.Value, error(nil)
			if _bgcaa != nil {
				return _bgcaa
			}
			_adebc.CAttr = &_deada
			continue
		}
		if _caadf.Name.Local == "\u0063\u0070" {
			_fedb, _abfag := _g.ParseUint(_caadf.Value, 10, 32)
			if _abfag != nil {
				return _abfag
			}
			_acaga := uint32(_fedb)
			_adebc.CpAttr = &_acaga
			continue
		}
		if _caadf.Name.Local == "\u0069\u006e" {
			_fcaa, _cbbfb := _g.ParseUint(_caadf.Value, 10, 32)
			if _cbbfb != nil {
				return _cbbfb
			}
			_deaef := uint32(_fcaa)
			_adebc.InAttr = &_deaef
			continue
		}
		if _caadf.Name.Local == "\u0062\u0063" {
			_agece, _bfdeb := _caadf.Value, error(nil)
			if _bfdeb != nil {
				return _bfdeb
			}
			_adebc.BcAttr = &_agece
			continue
		}
		if _caadf.Name.Local == "\u0075" {
			_ecfca, _dfeac := _g.ParseBool(_caadf.Value)
			if _dfeac != nil {
				return _dfeac
			}
			_adebc.UAttr = &_ecfca
			continue
		}
		if _caadf.Name.Local == "\u0069" {
			_febac, _becgb := _g.ParseBool(_caadf.Value)
			if _becgb != nil {
				return _becgb
			}
			_adebc.IAttr = &_febac
			continue
		}
		if _caadf.Name.Local == "\u0075\u006e" {
			_dcgc, _gcdf := _g.ParseBool(_caadf.Value)
			if _gcdf != nil {
				return _gcdf
			}
			_adebc.UnAttr = &_dcgc
			continue
		}
		if _caadf.Name.Local == "\u0073\u0074" {
			_dcdf, _cdeff := _g.ParseBool(_caadf.Value)
			if _cdeff != nil {
				return _cdeff
			}
			_adebc.StAttr = &_dcdf
			continue
		}
		if _caadf.Name.Local == "\u0062" {
			_ffeef, _adfcf := _g.ParseBool(_caadf.Value)
			if _adfcf != nil {
				return _adfcf
			}
			_adebc.BAttr = &_ffeef
			continue
		}
	}
_bfgda:
	for {
		_ggdge, _dggf := d.Token()
		if _dggf != nil {
			return _dggf
		}
		switch _ddfc := _ggdge.(type) {
		case _b.StartElement:
			switch _ddfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_adebc.Tpls = NewCT_Tuples()
				if _ecff := d.DecodeElement(_adebc.Tpls, &_ddfc); _ecff != nil {
					return _ecff
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_gceag := NewCT_X()
				if _ggba := d.DecodeElement(_gceag, &_ddfc); _ggba != nil {
					return _ggba
				}
				_adebc.X = append(_adebc.X, _gceag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0076", _ddfc.Name)
				if _cdgdd := d.Skip(); _cdgdd != nil {
					return _cdgdd
				}
			}
		case _b.EndElement:
			break _bfgda
		case _b.CharData:
		}
	}
	return nil
}
func (_dgbfge *CT_PivotFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dgbfge.FldAttr)})
	if _dgbfge.MpFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0070\u0046l\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.MpFldAttr)})
	}
	_dfbafa, _dggdg := _dgbfge.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _dggdg != nil {
		return _dggdg
	}
	start.Attr = append(start.Attr, _dfbafa)
	if _dgbfge.EvalOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u004f\u0072\u0064\u0065r"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.EvalOrderAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _dgbfge.IdAttr)})
	if _dgbfge.IMeasureHierAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004d\u0065a\u0073\u0075\u0072\u0065\u0048\u0069\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.IMeasureHierAttr)})
	}
	if _dgbfge.IMeasureFldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u006c\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.IMeasureFldAttr)})
	}
	if _dgbfge.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.NameAttr)})
	}
	if _dgbfge.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.DescriptionAttr)})
	}
	if _dgbfge.StringValue1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0031"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.StringValue1Attr)})
	}
	if _dgbfge.StringValue2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0072i\u006e\u0067\u0056\u0061\u006c\u0075\u0065\u0032"}, Value: _a.Sprintf("\u0025\u0076", *_dgbfge.StringValue2Attr)})
	}
	e.EncodeToken(start)
	_cfaaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
	e.EncodeElement(_dgbfge.AutoFilter, _cfaaf)
	if _dgbfge.ExtLst != nil {
		_gecaa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dgbfge.ExtLst, _gecaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efege *CT_ExternalReferences) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cdedg := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065"}}
	for _, _cdeec := range _efege.ExternalReference {
		e.EncodeElement(_cdeec, _cdedg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Border and its children, prefixing error messages with path
func (_fcf *CT_Border) ValidateWithPath(path string) error {
	if _fcf.Start != nil {
		if _gged := _fcf.Start.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0072\u0074"); _gged != nil {
			return _gged
		}
	}
	if _fcf.End != nil {
		if _gde := _fcf.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _gde != nil {
			return _gde
		}
	}
	if _fcf.Left != nil {
		if _gfca := _fcf.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _gfca != nil {
			return _gfca
		}
	}
	if _fcf.Right != nil {
		if _ecec := _fcf.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _ecec != nil {
			return _ecec
		}
	}
	if _fcf.Top != nil {
		if _dffa := _fcf.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _dffa != nil {
			return _dffa
		}
	}
	if _fcf.Bottom != nil {
		if _gdc := _fcf.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _gdc != nil {
			return _gdc
		}
	}
	if _fcf.Diagonal != nil {
		if _cgba := _fcf.Diagonal.ValidateWithPath(path + "\u002fD\u0069\u0061\u0067\u006f\u006e\u0061l"); _cgba != nil {
			return _cgba
		}
	}
	if _fcf.Vertical != nil {
		if _ebe := _fcf.Vertical.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0069\u0063\u0061l"); _ebe != nil {
			return _ebe
		}
	}
	if _fcf.Horizontal != nil {
		if _fec := _fcf.Horizontal.ValidateWithPath(path + "/\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"); _fec != nil {
			return _fec
		}
	}
	return nil
}
func NewCT_BookView() *CT_BookView                   { _cfd := &CT_BookView{}; return _cfd }
func (_dfabfb ST_DynamicFilterType) Validate() error { return _dfabfb.ValidateWithPath("") }

type CT_DeletedField struct {

	// Deleted Fields Name
	NameAttr string
}

// ValidateWithPath validates the CT_ColorScale and its children, prefixing error messages with path
func (_dggcc *CT_ColorScale) ValidateWithPath(path string) error {
	for _cgcd, _eabee := range _dggcc.Cfvo {
		if _dffac := _eabee.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _cgcd)); _dffac != nil {
			return _dffac
		}
	}
	for _ddgbe, _cbdea := range _dggcc.Color {
		if _cdea := _cbdea.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _ddgbe)); _cdea != nil {
			return _cdea
		}
	}
	return nil
}

type CT_SheetData struct {

	// Row
	Row []*CT_Row
}

// ValidateWithPath validates the CT_XmlCellPr and its children, prefixing error messages with path
func (_fefad *CT_XmlCellPr) ValidateWithPath(path string) error {
	if _bdada := _fefad.XmlPr.ValidateWithPath(path + "\u002f\u0058\u006d\u006c\u0050\u0072"); _bdada != nil {
		return _bdada
	}
	if _fefad.ExtLst != nil {
		if _ddbgc := _fefad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddbgc != nil {
			return _ddbgc
		}
	}
	return nil
}

type CT_FontSize struct {

	// Value
	ValAttr float64
}

func (_cgdec *CT_FieldGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgbge := range start.Attr {
		if _fgbge.Name.Local == "\u0070\u0061\u0072" {
			_eeebc, _cedbe := _g.ParseUint(_fgbge.Value, 10, 32)
			if _cedbe != nil {
				return _cedbe
			}
			_afcca := uint32(_eeebc)
			_cgdec.ParAttr = &_afcca
			continue
		}
		if _fgbge.Name.Local == "\u0062\u0061\u0073\u0065" {
			_ggcd, _cdda := _g.ParseUint(_fgbge.Value, 10, 32)
			if _cdda != nil {
				return _cdda
			}
			_cgdgc := uint32(_ggcd)
			_cgdec.BaseAttr = &_cgdgc
			continue
		}
	}
_ebgade:
	for {
		_caffbg, _bddca := d.Token()
		if _bddca != nil {
			return _bddca
		}
		switch _ccbcd := _caffbg.(type) {
		case _b.StartElement:
			switch _ccbcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072a\u006e\u0067\u0065\u0050\u0072"}:
				_cgdec.RangePr = NewCT_RangePr()
				if _ecgad := d.DecodeElement(_cgdec.RangePr, &_ccbcd); _ecgad != nil {
					return _ecgad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072"}:
				_cgdec.DiscretePr = NewCT_DiscretePr()
				if _gbbee := d.DecodeElement(_cgdec.DiscretePr, &_ccbcd); _gbbee != nil {
					return _gbbee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073"}:
				_cgdec.GroupItems = NewCT_GroupItems()
				if _cbaff := d.DecodeElement(_cgdec.GroupItems, &_ccbcd); _cbaff != nil {
					return _cbaff
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070 \u0025\u0076", _ccbcd.Name)
				if _bdef := d.Skip(); _bdef != nil {
					return _bdef
				}
			}
		case _b.EndElement:
			break _ebgade
		case _b.CharData:
		}
	}
	return nil
}

type CT_MetadataRecord struct {

	// Metadata Record Type Index
	TAttr uint32

	// Metadata Record Value Index
	VAttr uint32
}

func (_defbec *CT_OutlinePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _defbec.ApplyStylesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079\u0053\u0074\u0079\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defbec.ApplyStylesAttr))})
	}
	if _defbec.SummaryBelowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0042\u0065\u006c\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defbec.SummaryBelowAttr))})
	}
	if _defbec.SummaryRightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0075\u006dm\u0061\u0072\u0079\u0052\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defbec.SummaryRightAttr))})
	}
	if _defbec.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_defbec.ShowOutlineSymbolsAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_DataValidations and its children
func (_eagc *CT_DataValidations) Validate() error {
	return _eagc.ValidateWithPath("\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073")
}

// ValidateWithPath validates the CT_Number and its children, prefixing error messages with path
func (_dfgbg *CT_Number) ValidateWithPath(path string) error {
	for _dgdcd, _agbac := range _dfgbg.Tpls {
		if _gdabf := _agbac.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0054\u0070\u006c\u0073\u005b\u0025\u0064\u005d", path, _dgdcd)); _gdabf != nil {
			return _gdabf
		}
	}
	for _bgbec, _ddcaf := range _dfgbg.X {
		if _affab := _ddcaf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bgbec)); _affab != nil {
			return _affab
		}
	}
	return nil
}

// Validate validates the CT_DdeValues and its children
func (_dfbb *CT_DdeValues) Validate() error {
	return _dfbb.ValidateWithPath("\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073")
}
func (_cefef ST_CredMethod) ValidateWithPath(path string) error {
	switch _cefef {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cefef))
	}
	return nil
}
func (_dfdeca *CT_ObjectAnchor) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfdeca.From = _bb.NewFrom()
	_dfdeca.To = _bb.NewTo()
	for _, _bbbde := range start.Attr {
		if _bbbde.Name.Local == "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_deeef, _efbcd := _g.ParseBool(_bbbde.Value)
			if _efbcd != nil {
				return _efbcd
			}
			_dfdeca.MoveWithCellsAttr = &_deeef
			continue
		}
		if _bbbde.Name.Local == "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073" {
			_cceeb, _gcaga := _g.ParseBool(_bbbde.Value)
			if _gcaga != nil {
				return _gcaga
			}
			_dfdeca.SizeWithCellsAttr = &_cceeb
			continue
		}
	}
_gbbfc:
	for {
		_edcdb, _gdeafc := d.Token()
		if _gdeafc != nil {
			return _gdeafc
		}
		switch _gedga := _edcdb.(type) {
		case _b.StartElement:
			switch _gedga.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0066\u0072\u006f\u006d"}:
				if _befcc := d.DecodeElement(_dfdeca.From, &_gedga); _befcc != nil {
					return _befcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067", Local: "\u0074\u006f"}, _b.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fdr\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061\u0077\u0069\u006e\u0067", Local: "\u0074\u006f"}:
				if _aaaeb := d.DecodeElement(_dfdeca.To, &_gedga); _aaaeb != nil {
					return _aaaeb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006ae\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072\u0020\u0025\u0076", _gedga.Name)
				if _ceacfa := d.Skip(); _ceacfa != nil {
					return _ceacfa
				}
			}
		case _b.EndElement:
			break _gbbfc
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_FieldGroup() *CT_FieldGroup { _fdgg := &CT_FieldGroup{}; return _fdgg }
func (_ccgec *CT_WebPublishObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbgdbd := range start.Attr {
		if _fbgdbd.Name.Local == "\u0069\u0064" {
			_beeab, _egaga := _g.ParseUint(_fbgdbd.Value, 10, 32)
			if _egaga != nil {
				return _egaga
			}
			_ccgec.IdAttr = uint32(_beeab)
			continue
		}
		if _fbgdbd.Name.Local == "\u0064\u0069\u0076I\u0064" {
			_fafdd, _cacca := _fbgdbd.Value, error(nil)
			if _cacca != nil {
				return _cacca
			}
			_ccgec.DivIdAttr = _fafdd
			continue
		}
		if _fbgdbd.Name.Local == "\u0073\u006f\u0075r\u0063\u0065\u004f\u0062\u006a\u0065\u0063\u0074" {
			_gdafg, _fefae := _fbgdbd.Value, error(nil)
			if _fefae != nil {
				return _fefae
			}
			_ccgec.SourceObjectAttr = &_gdafg
			continue
		}
		if _fbgdbd.Name.Local == "\u0064e\u0073t\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u0046\u0069\u006c\u0065" {
			_bfcbf, _gcbcd := _fbgdbd.Value, error(nil)
			if _gcbcd != nil {
				return _gcbcd
			}
			_ccgec.DestinationFileAttr = _bfcbf
			continue
		}
		if _fbgdbd.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_dbfdc, _dedea := _fbgdbd.Value, error(nil)
			if _dedea != nil {
				return _dedea
			}
			_ccgec.TitleAttr = &_dbfdc
			continue
		}
		if _fbgdbd.Name.Local == "\u0061\u0075\u0074\u006f\u0052\u0065\u0070\u0075\u0062\u006c\u0069\u0073\u0068" {
			_daddf, _gfdbga := _g.ParseBool(_fbgdbd.Value)
			if _gfdbga != nil {
				return _gfdbga
			}
			_ccgec.AutoRepublishAttr = &_daddf
			continue
		}
	}
	for {
		_addeb, _gcfba := d.Token()
		if _gcfba != nil {
			return _a.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0057\u0065\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gcfba)
		}
		if _dadbgg, _bdbae := _addeb.(_b.EndElement); _bdbae && _dadbgg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_LegacyDrawing() *CT_LegacyDrawing { _dgacd := &CT_LegacyDrawing{}; return _dgacd }

// Validate validates the CT_FontName and its children
func (_cgfb *CT_FontName) Validate() error {
	return _cgfb.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065")
}
func (_eeacc *ST_DynamicFilterType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagcdb, _bebdfa := d.Token()
	if _bebdfa != nil {
		return _bebdfa
	}
	if _beagf, _cfcge := _cagcdb.(_b.EndElement); _cfcge && _beagf.Name == start.Name {
		*_eeacc = 1
		return nil
	}
	if _dgeag, _bcfcg := _cagcdb.(_b.CharData); !_bcfcg {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cagcdb)
	} else {
		switch string(_dgeag) {
		case "":
			*_eeacc = 0
		case "\u006e\u0075\u006c\u006c":
			*_eeacc = 1
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_eeacc = 2
		case "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_eeacc = 3
		case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
			*_eeacc = 4
		case "\u0074\u006f\u0064a\u0079":
			*_eeacc = 5
		case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
			*_eeacc = 6
		case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
			*_eeacc = 7
		case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
			*_eeacc = 8
		case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
			*_eeacc = 9
		case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
			*_eeacc = 10
		case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
			*_eeacc = 11
		case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
			*_eeacc = 12
		case "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeacc = 13
		case "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeacc = 14
		case "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072":
			*_eeacc = 15
		case "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072":
			*_eeacc = 16
		case "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072":
			*_eeacc = 17
		case "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072":
			*_eeacc = 18
		case "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065":
			*_eeacc = 19
		case "\u0051\u0031":
			*_eeacc = 20
		case "\u0051\u0032":
			*_eeacc = 21
		case "\u0051\u0033":
			*_eeacc = 22
		case "\u0051\u0034":
			*_eeacc = 23
		case "\u004d\u0031":
			*_eeacc = 24
		case "\u004d\u0032":
			*_eeacc = 25
		case "\u004d\u0033":
			*_eeacc = 26
		case "\u004d\u0034":
			*_eeacc = 27
		case "\u004d\u0035":
			*_eeacc = 28
		case "\u004d\u0036":
			*_eeacc = 29
		case "\u004d\u0037":
			*_eeacc = 30
		case "\u004d\u0038":
			*_eeacc = 31
		case "\u004d\u0039":
			*_eeacc = 32
		case "\u004d\u0031\u0030":
			*_eeacc = 33
		case "\u004d\u0031\u0031":
			*_eeacc = 34
		case "\u004d\u0031\u0032":
			*_eeacc = 35
		}
	}
	_cagcdb, _bebdfa = d.Token()
	if _bebdfa != nil {
		return _bebdfa
	}
	if _gacced, _faafb := _cagcdb.(_b.EndElement); _faafb && _gacced.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cagcdb)
}
func (_bcbgd *ST_MdxFunctionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ceadg, _beaec := d.Token()
	if _beaec != nil {
		return _beaec
	}
	if _cfcgg, _gaffaf := _ceadg.(_b.EndElement); _gaffaf && _cfcgg.Name == start.Name {
		*_bcbgd = 1
		return nil
	}
	if _ffcbae, _gcecaf := _ceadg.(_b.CharData); !_gcecaf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceadg)
	} else {
		switch string(_ffcbae) {
		case "":
			*_bcbgd = 0
		case "\u006d":
			*_bcbgd = 1
		case "\u0076":
			*_bcbgd = 2
		case "\u0073":
			*_bcbgd = 3
		case "\u0063":
			*_bcbgd = 4
		case "\u0072":
			*_bcbgd = 5
		case "\u0070":
			*_bcbgd = 6
		case "\u006b":
			*_bcbgd = 7
		}
	}
	_ceadg, _beaec = d.Token()
	if _beaec != nil {
		return _beaec
	}
	if _badea, _gfbac := _ceadg.(_b.EndElement); _gfbac && _badea.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceadg)
}

type CT_PivotField struct {

	// Field Name
	NameAttr *string

	// Axis
	AxisAttr ST_Axis

	// Data Field
	DataFieldAttr *bool

	// Custom Subtotal Caption
	SubtotalCaptionAttr *string

	// Show PivotField Header Drop Downs
	ShowDropDownsAttr *bool

	// Hidden Level
	HiddenLevelAttr *bool

	// Unique Member Property
	UniqueMemberPropertyAttr *string

	// Compact
	CompactAttr *bool

	// All Items Expanded
	AllDrilledAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Outline Items
	OutlineAttr *bool

	// Subtotals At Top
	SubtotalTopAttr *bool

	// Drag To Row
	DragToRowAttr *bool

	// Drag To Column
	DragToColAttr *bool

	// Multiple Field Filters
	MultipleItemSelectionAllowedAttr *bool

	// Drag Field to Page
	DragToPageAttr *bool

	// Field Can Drag to Data
	DragToDataAttr *bool

	// Drag Off
	DragOffAttr *bool

	// Show All Items
	ShowAllAttr *bool

	// Insert Blank Row
	InsertBlankRowAttr *bool

	// Server-based Page Field
	ServerFieldAttr *bool

	// Insert Item Page Break
	InsertPageBreakAttr *bool

	// Auto Show
	AutoShowAttr *bool

	// Top Auto Show
	TopAutoShowAttr *bool

	// Hide New Items
	HideNewItemsAttr *bool

	// Measure Filter
	MeasureFilterAttr *bool

	// Inclusive Manual Filter
	IncludeNewItemsInFilterAttr *bool

	// Items Per Page Count
	ItemPageCountAttr *uint32

	// Auto Sort Type
	SortTypeAttr ST_FieldSortType

	// Data Source Sort
	DataSourceSortAttr *bool

	// Auto Sort
	NonAutoSortDefaultAttr *bool

	// Auto Show Rank By
	RankByAttr *uint32

	// Show Default Subtotal
	DefaultSubtotalAttr *bool

	// Sum Subtotal
	SumSubtotalAttr *bool

	// CountA
	CountASubtotalAttr *bool

	// Average
	AvgSubtotalAttr *bool

	// Max Subtotal
	MaxSubtotalAttr *bool

	// Min Subtotal
	MinSubtotalAttr *bool

	// Product Subtotal
	ProductSubtotalAttr *bool

	// Count
	CountSubtotalAttr *bool

	// StdDev Subtotal
	StdDevSubtotalAttr *bool

	// StdDevP Subtotal
	StdDevPSubtotalAttr *bool

	// Variance Subtotal
	VarSubtotalAttr *bool

	// VarP Subtotal
	VarPSubtotalAttr *bool

	// Show Member Property in Cell
	ShowPropCellAttr *bool

	// Show Member Property ToolTip
	ShowPropTipAttr *bool

	// Show As Caption
	ShowPropAsCaptionAttr *bool

	// Drill State
	DefaultAttributeDrillStateAttr *bool

	// Field Items
	Items *CT_Items

	// AutoSort Scope
	AutoSortScope *CT_AutoSortScope

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_abeag ST_IconSetType) ValidateWithPath(path string) error {
	switch _abeag {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abeag))
	}
	return nil
}
func NewCT_FunctionGroups() *CT_FunctionGroups       { _fabcg := &CT_FunctionGroups{}; return _fabcg }
func (_cecfd ST_DataValidationType) Validate() error { return _cecfd.ValidateWithPath("") }

// ValidateWithPath validates the CT_UndoInfo and its children, prefixing error messages with path
func (_edeef *CT_UndoInfo) ValidateWithPath(path string) error {
	if _edeef.ExpAttr == ST_FormulaExpressionUnset {
		return _a.Errorf("\u0025\u0073\u002fE\u0078\u0070\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _degeff := _edeef.ExpAttr.ValidateWithPath(path + "\u002f\u0045\u0078\u0070\u0041\u0074\u0074\u0072"); _degeff != nil {
		return _degeff
	}
	return nil
}

type CT_SmartTagTypes struct {

	// Smart Tag Type
	SmartTagType []*CT_SmartTagType
}
type CT_PCDSCPage struct {

	// Page Item String Count
	CountAttr *uint32

	// Page Item
	PageItem []*CT_PageItem
}

func NewCT_VolTypes() *CT_VolTypes         { _bedbd := &CT_VolTypes{}; return _bedbd }
func NewCT_PrintOptions() *CT_PrintOptions { _dbedg := &CT_PrintOptions{}; return _dbedg }

// Validate validates the CT_MetadataStringIndex and its children
func (_fegge *CT_MetadataStringIndex) Validate() error {
	return _fegge.ValidateWithPath("\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078")
}

// Validate validates the CT_VolTypes and its children
func (_ebfbc *CT_VolTypes) Validate() error {
	return _ebfbc.ValidateWithPath("C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073")
}
func (_egeda *CT_ExternalSheetName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egeda.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_egeda.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffbgcg *CT_WebPublishObjects) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbgcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgcg.CountAttr)})
	}
	e.EncodeToken(start)
	_ceecbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0077eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074"}}
	for _, _eaeff := range _ffbgcg.WebPublishObject {
		e.EncodeElement(_eaeff, _ceecbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OleItems struct {

	// Object Link Item
	OleItem []*CT_OleItem
}
type CT_HierarchyUsage struct {

	// Hierarchy Usage
	HierarchyUsageAttr int32
}

// Validate validates the CT_Scenario and its children
func (_ebddd *CT_Scenario) Validate() error {
	return _ebddd.ValidateWithPath("C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f")
}

// ValidateWithPath validates the CT_QueryTable and its children, prefixing error messages with path
func (_edgdbd *CT_QueryTable) ValidateWithPath(path string) error {
	if _gdeed := _edgdbd.GrowShrinkTypeAttr.ValidateWithPath(path + "\u002f\u0047\u0072\u006fwS\u0068\u0072\u0069\u006e\u006b\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _gdeed != nil {
		return _gdeed
	}
	if _edgdbd.QueryTableRefresh != nil {
		if _ddgeb := _edgdbd.QueryTableRefresh.ValidateWithPath(path + "\u002fQ\u0075e\u0072\u0079\u0054\u0061\u0062l\u0065\u0052e\u0066\u0072\u0065\u0073\u0068"); _ddgeb != nil {
			return _ddgeb
		}
	}
	if _edgdbd.ExtLst != nil {
		if _bfcca := _edgdbd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfcca != nil {
			return _bfcca
		}
	}
	return nil
}
func NewCT_CalculatedItem() *CT_CalculatedItem {
	_fgb := &CT_CalculatedItem{}
	_fgb.PivotArea = NewCT_PivotArea()
	return _fgb
}

// ValidateWithPath validates the CT_PivotTableStyle and its children, prefixing error messages with path
func (_ecdcf *CT_PivotTableStyle) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PageSetUpPr and its children
func (_aecfa *CT_PageSetUpPr) Validate() error {
	return _aecfa.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072")
}

// Validate validates the CT_ChartsheetProtection and its children
func (_aeeg *CT_ChartsheetProtection) Validate() error {
	return _aeeg.ValidateWithPath("\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_MdxTuple and its children, prefixing error messages with path
func (_gdbfa *CT_MdxTuple) ValidateWithPath(path string) error {
	for _aaed, _agdc := range _gdbfa.N {
		if _dbfag := _agdc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _aaed)); _dbfag != nil {
			return _dbfag
		}
	}
	return nil
}
func (_deebea *ST_FormulaExpression) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fecbd, _cedfcf := d.Token()
	if _cedfcf != nil {
		return _cedfcf
	}
	if _efaad, _bcaaf := _fecbd.(_b.EndElement); _bcaaf && _efaad.Name == start.Name {
		*_deebea = 1
		return nil
	}
	if _fgaac, _defgd := _fecbd.(_b.CharData); !_defgd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fecbd)
	} else {
		switch string(_fgaac) {
		case "":
			*_deebea = 0
		case "\u0072\u0065\u0066":
			*_deebea = 1
		case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
			*_deebea = 2
		case "\u0061\u0072\u0065\u0061":
			*_deebea = 3
		case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
			*_deebea = 4
		case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
			*_deebea = 5
		}
	}
	_fecbd, _cedfcf = d.Token()
	if _cedfcf != nil {
		return _cedfcf
	}
	if _dgdcb, _faaefc := _fecbd.(_b.EndElement); _faaefc && _dgdcb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fecbd)
}

// Validate validates the CT_Members and its children
func (_ababd *CT_Members) Validate() error {
	return _ababd.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073")
}
func (_badbb *CT_DbPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdcd := range start.Attr {
		if _gdcd.Name.Local == "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_geaf, _agec := _gdcd.Value, error(nil)
			if _agec != nil {
				return _agec
			}
			_badbb.ConnectionAttr = _geaf
			continue
		}
		if _gdcd.Name.Local == "\u0063o\u006d\u006d\u0061\u006e\u0064" {
			_gedadc, _decag := _gdcd.Value, error(nil)
			if _decag != nil {
				return _decag
			}
			_badbb.CommandAttr = &_gedadc
			continue
		}
		if _gdcd.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064" {
			_gfac, _aede := _gdcd.Value, error(nil)
			if _aede != nil {
				return _aede
			}
			_badbb.ServerCommandAttr = &_gfac
			continue
		}
		if _gdcd.Name.Local == "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065" {
			_fbgb, _fbac := _g.ParseUint(_gdcd.Value, 10, 32)
			if _fbac != nil {
				return _fbac
			}
			_bcgbf := uint32(_fbgb)
			_badbb.CommandTypeAttr = &_bcgbf
			continue
		}
	}
	for {
		_dcacg, _fbgg := d.Token()
		if _fbgg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0062\u0050\u0072\u003a\u0020\u0025\u0073", _fbgg)
		}
		if _gffdg, _ddgcb := _dcacg.(_b.EndElement); _ddgcb && _gffdg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abafg *ST_WebSourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_agfgg, _ceecdb := d.Token()
	if _ceecdb != nil {
		return _ceecdb
	}
	if _fedcge, _dbdbg := _agfgg.(_b.EndElement); _dbdbg && _fedcge.Name == start.Name {
		*_abafg = 1
		return nil
	}
	if _fafab, _bgefa := _agfgg.(_b.CharData); !_bgefa {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agfgg)
	} else {
		switch string(_fafab) {
		case "":
			*_abafg = 0
		case "\u0073\u0068\u0065e\u0074":
			*_abafg = 1
		case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
			*_abafg = 2
		case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
			*_abafg = 3
		case "\u0072\u0061\u006eg\u0065":
			*_abafg = 4
		case "\u0063\u0068\u0061r\u0074":
			*_abafg = 5
		case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
			*_abafg = 6
		case "\u0071\u0075\u0065r\u0079":
			*_abafg = 7
		case "\u006c\u0061\u0062e\u006c":
			*_abafg = 8
		}
	}
	_agfgg, _ceecdb = d.Token()
	if _ceecdb != nil {
		return _ceecdb
	}
	if _cceabe, _fgdbfb := _agfgg.(_b.EndElement); _fgdbfb && _cceabe.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agfgg)
}
func (_dgddba ST_VolDepType) Validate() error { return _dgddba.ValidateWithPath("") }
func (_acga *CT_CustomProperties) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gbeg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}}
	for _, _dgfab := range _acga.CustomPr {
		e.EncodeElement(_dgfab, _gbeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ObjectAnchor() *CT_ObjectAnchor {
	_aeccc := &CT_ObjectAnchor{}
	_aeccc.From = _bb.NewFrom()
	_aeccc.To = _bb.NewTo()
	return _aeccc
}

// ValidateWithPath validates the CT_DdeItem and its children, prefixing error messages with path
func (_gbebc *CT_DdeItem) ValidateWithPath(path string) error {
	if _gbebc.Values != nil {
		if _bcged := _gbebc.Values.ValidateWithPath(path + "\u002fV\u0061\u006c\u0075\u0065\u0073"); _bcged != nil {
			return _bcged
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetViews and its children, prefixing error messages with path
func (_gfbfdeb *CT_SheetViews) ValidateWithPath(path string) error {
	for _acdefd, _beefbf := range _gfbfdeb.SheetView {
		if _dfgea := _beefbf.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _acdefd)); _dfgea != nil {
			return _dfgea
		}
	}
	if _gfbfdeb.ExtLst != nil {
		if _eaeae := _gfbfdeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eaeae != nil {
			return _eaeae
		}
	}
	return nil
}

// Validate validates the CT_CustomProperties and its children
func (_efdge *CT_CustomProperties) Validate() error {
	return _efdge.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gbdfb *CT_MetadataStringIndex) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddace := range start.Attr {
		if _ddace.Name.Local == "\u0078" {
			_cafgd, _aeceb := _g.ParseUint(_ddace.Value, 10, 32)
			if _aeceb != nil {
				return _aeceb
			}
			_gbdfb.XAttr = uint32(_cafgd)
			continue
		}
		if _ddace.Name.Local == "\u0073" {
			_gfaca, _cbdba := _g.ParseBool(_ddace.Value)
			if _cbdba != nil {
				return _cbdba
			}
			_gbdfb.SAttr = &_gfaca
			continue
		}
	}
	for {
		_eeaac, _dffbb := d.Token()
		if _dffbb != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065\u0074a\u0064a\u0074a\u0053t\u0072\u0069\u006e\u0067\u0049\u006e\u0064\u0065\u0078\u003a\u0020\u0025\u0073", _dffbb)
		}
		if _aggfa, _fcebe := _eeaac.(_b.EndElement); _fcebe && _aggfa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SortState and its children, prefixing error messages with path
func (_fdbfdg *CT_SortState) ValidateWithPath(path string) error {
	if _bdecg := _fdbfdg.SortMethodAttr.ValidateWithPath(path + "\u002fS\u006fr\u0074\u004d\u0065\u0074\u0068\u006f\u0064\u0041\u0074\u0074\u0072"); _bdecg != nil {
		return _bdecg
	}
	for _bbccga, _abaeg := range _fdbfdg.SortCondition {
		if _abgcba := _abaeg.ValidateWithPath(_a.Sprintf("%\u0073/\u0053\u006f\u0072\u0074\u0043\u006f\u006e\u0064i\u0074\u0069\u006f\u006e[%\u0064\u005d", path, _bbccga)); _abgcba != nil {
			return _abgcba
		}
	}
	if _fdbfdg.ExtLst != nil {
		if _cagdb := _fdbfdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _cagdb != nil {
			return _cagdb
		}
	}
	return nil
}
func NewCT_TableStyle() *CT_TableStyle { _babgd := &CT_TableStyle{}; return _babgd }

// Validate validates the ExternalLink and its children
func (_bdeea *ExternalLink) Validate() error {
	return _bdeea.ValidateWithPath("\u0045\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}
func (_fdadfafc ST_BorderStyle) Validate() error { return _fdadfafc.ValidateWithPath("") }

// Validate validates the CT_IconSet and its children
func (_ecaac *CT_IconSet) Validate() error {
	return _ecaac.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074")
}
func (_dfggec ST_PivotFilterType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfggec.String(), start)
}
func (_ffcbg *ST_DataValidationType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abgdg, _bbeceb := d.Token()
	if _bbeceb != nil {
		return _bbeceb
	}
	if _eagada, _baecfc := _abgdg.(_b.EndElement); _baecfc && _eagada.Name == start.Name {
		*_ffcbg = 1
		return nil
	}
	if _gcfagb, _dbabb := _abgdg.(_b.CharData); !_dbabb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abgdg)
	} else {
		switch string(_gcfagb) {
		case "":
			*_ffcbg = 0
		case "\u006e\u006f\u006e\u0065":
			*_ffcbg = 1
		case "\u0077\u0068\u006fl\u0065":
			*_ffcbg = 2
		case "\u0064e\u0063\u0069\u006d\u0061\u006c":
			*_ffcbg = 3
		case "\u006c\u0069\u0073\u0074":
			*_ffcbg = 4
		case "\u0064\u0061\u0074\u0065":
			*_ffcbg = 5
		case "\u0074\u0069\u006d\u0065":
			*_ffcbg = 6
		case "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068":
			*_ffcbg = 7
		case "\u0063\u0075\u0073\u0074\u006f\u006d":
			*_ffcbg = 8
		}
	}
	_abgdg, _bbeceb = d.Token()
	if _bbeceb != nil {
		return _bbeceb
	}
	if _ddgbg, _egefe := _abgdg.(_b.EndElement); _egefe && _ddgbg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abgdg)
}
func (_aaegg *ST_SmartTagShow) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aaegg = 0
	case "\u0061\u006c\u006c":
		*_aaegg = 1
	case "\u006e\u006f\u006e\u0065":
		*_aaegg = 2
	case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
		*_aaegg = 3
	}
	return nil
}
func (_cdfed ST_TableType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eedbg := _b.Attr{}
	_eedbg.Name = name
	switch _cdfed {
	case ST_TableTypeUnset:
		_eedbg.Value = ""
	case ST_TableTypeWorksheet:
		_eedbg.Value = "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case ST_TableTypeXml:
		_eedbg.Value = "\u0078\u006d\u006c"
	case ST_TableTypeQueryTable:
		_eedbg.Value = "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return _eedbg, nil
}
func (_afffd *CT_MdxMetadata) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afffd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_afffd.CountAttr)})
	}
	e.EncodeToken(start)
	_gcdeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0064\u0078"}}
	for _, _aage := range _afffd.Mdx {
		e.EncodeElement(_aage, _gcdeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotFilter and its children, prefixing error messages with path
func (_dcfg *CT_PivotFilter) ValidateWithPath(path string) error {
	if _dcfg.TypeAttr == ST_PivotFilterTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fcgaa := _dcfg.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fcgaa != nil {
		return _fcgaa
	}
	if _gegcf := _dcfg.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _gegcf != nil {
		return _gegcf
	}
	if _dcfg.ExtLst != nil {
		if _eaaa := _dcfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eaaa != nil {
			return _eaaa
		}
	}
	return nil
}
func (_ddcfb *CT_XStringElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _ddcfb.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Hyperlink struct {

	// Reference
	RefAttr string
	IdAttr  *string

	// Location
	LocationAttr *string

	// Tool Tip
	TooltipAttr *string

	// Display String
	DisplayAttr *string
}
type ST_Scope byte

func (_fagda *ST_VolValueType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cgged, _bbfgb := d.Token()
	if _bbfgb != nil {
		return _bbfgb
	}
	if _baebgf, _abcebb := _cgged.(_b.EndElement); _abcebb && _baebgf.Name == start.Name {
		*_fagda = 1
		return nil
	}
	if _ffbacgc, _cgbcac := _cgged.(_b.CharData); !_cgbcac {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cgged)
	} else {
		switch string(_ffbacgc) {
		case "":
			*_fagda = 0
		case "\u0062":
			*_fagda = 1
		case "\u006e":
			*_fagda = 2
		case "\u0065":
			*_fagda = 3
		case "\u0073":
			*_fagda = 4
		}
	}
	_cgged, _bbfgb = d.Token()
	if _bbfgb != nil {
		return _bbfgb
	}
	if _afacfg, _gddfe := _cgged.(_b.EndElement); _gddfe && _afacfg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cgged)
}
func (_gegfb ST_VolValueType) Validate() error { return _gegfb.ValidateWithPath("") }

// ValidateWithPath validates the CT_WorkbookPr and its children, prefixing error messages with path
func (_aaaaa *CT_WorkbookPr) ValidateWithPath(path string) error {
	if _bbced := _aaaaa.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _bbced != nil {
		return _bbced
	}
	if _addebe := _aaaaa.UpdateLinksAttr.ValidateWithPath(path + "\u002f\u0055p\u0064\u0061\u0074e\u004c\u0069\u006e\u006b\u0073\u0041\u0074\u0074\u0072"); _addebe != nil {
		return _addebe
	}
	return nil
}
func (_cbce *CT_ChartFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eea := range start.Attr {
		if _eea.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fdcc, _cbec := _g.ParseUint(_eea.Value, 10, 32)
			if _cbec != nil {
				return _cbec
			}
			_ddad := uint32(_fdcc)
			_cbce.CountAttr = &_ddad
			continue
		}
	}
_caae:
	for {
		_aaca, _fbdd := d.Token()
		if _fbdd != nil {
			return _fbdd
		}
		switch _fgce := _aaca.(type) {
		case _b.StartElement:
			switch _fgce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_abeaf := NewCT_ChartFormat()
				if _ffcf := d.DecodeElement(_abeaf, &_fgce); _ffcf != nil {
					return _ffcf
				}
				_cbce.ChartFormat = append(_cbce.ChartFormat, _abeaf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _fgce.Name)
				if _ddbe := d.Skip(); _ddbe != nil {
					return _ddbe
				}
			}
		case _b.EndElement:
			break _caae
		case _b.CharData:
		}
	}
	return nil
}
func (_fcgdb *PivotTableDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _fcgdb.CT_pivotTableDefinition.MarshalXML(e, start)
}
func (_fcddf *CT_RevisionDefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgeec := range start.Attr {
		if _fgeec.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_ccfgd, _bbecc := _fgeec.Value, error(nil)
			if _bbecc != nil {
				return _bbecc
			}
			_fcddf.DescriptionAttr = &_ccfgd
			continue
		}
		if _fgeec.Name.Local == "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e" {
			_bgfbd, _bfeff := _fgeec.Value, error(nil)
			if _bfeff != nil {
				return _bfeff
			}
			_fcddf.OldDescriptionAttr = &_bgfbd
			continue
		}
		if _fgeec.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077" {
			_bdee, _fdddd := _g.ParseBool(_fgeec.Value)
			if _fdddd != nil {
				return _fdddd
			}
			_fcddf.CustomViewAttr = &_bdee
			continue
		}
		if _fgeec.Name.Local == "\u0068\u0065\u006c\u0070" {
			_caeec, _fadfb := _fgeec.Value, error(nil)
			if _fadfb != nil {
				return _fadfb
			}
			_fcddf.HelpAttr = &_caeec
			continue
		}
		if _fgeec.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_bfced, _cccgd := _g.ParseBool(_fgeec.Value)
			if _cccgd != nil {
				return _cccgd
			}
			_fcddf.FunctionAttr = &_bfced
			continue
		}
		if _fgeec.Name.Local == "\u006fl\u0064\u0048\u0065\u006c\u0070" {
			_cbdedc, _gfbc := _fgeec.Value, error(nil)
			if _gfbc != nil {
				return _gfbc
			}
			_fcddf.OldHelpAttr = &_cbdedc
			continue
		}
		if _fgeec.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_gagge, _egbad := _g.ParseUint(_fgeec.Value, 10, 8)
			if _egbad != nil {
				return _egbad
			}
			_efdfd := uint8(_gagge)
			_fcddf.FunctionGroupIdAttr = &_efdfd
			continue
		}
		if _fgeec.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_fbcgd, _cagec := _fgeec.Value, error(nil)
			if _cagec != nil {
				return _cagec
			}
			_fcddf.StatusBarAttr = &_fbcgd
			continue
		}
		if _fgeec.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_fgafdg, _bgbde := _g.ParseUint(_fgeec.Value, 10, 8)
			if _bgbde != nil {
				return _bgbde
			}
			_gbced := uint8(_fgafdg)
			_fcddf.ShortcutKeyAttr = &_gbced
			continue
		}
		if _fgeec.Name.Local == "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072" {
			_eagagb, _fbgag := _fgeec.Value, error(nil)
			if _fbgag != nil {
				return _fbgag
			}
			_fcddf.OldStatusBarAttr = &_eagagb
			continue
		}
		if _fgeec.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_faadd, _cagfbb := _g.ParseBool(_fgeec.Value)
			if _cagfbb != nil {
				return _cagfbb
			}
			_fcddf.HiddenAttr = &_faadd
			continue
		}
		if _fgeec.Name.Local == "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074" {
			_ffdca, _fegfe := _fgeec.Value, error(nil)
			if _fegfe != nil {
				return _fegfe
			}
			_fcddf.OldCommentAttr = &_ffdca
			continue
		}
		if _fgeec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdceg, _gaecd := _fgeec.Value, error(nil)
			if _gaecd != nil {
				return _gaecd
			}
			_fcddf.NameAttr = _fdceg
			continue
		}
		if _fgeec.Name.Local == "\u0072\u0061" {
			_bfea, _fcffb := _g.ParseBool(_fgeec.Value)
			if _fcffb != nil {
				return _fcffb
			}
			_fcddf.RaAttr = &_bfea
			continue
		}
		if _fgeec.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_fagdb, _fddaaf := _g.ParseUint(_fgeec.Value, 10, 32)
			if _fddaaf != nil {
				return _fddaaf
			}
			_fddc := uint32(_fagdb)
			_fcddf.LocalSheetIdAttr = &_fddc
			continue
		}
		if _fgeec.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_fccb, _dcccg := _fgeec.Value, error(nil)
			if _dcccg != nil {
				return _dcccg
			}
			_fcddf.CommentAttr = &_fccb
			continue
		}
		if _fgeec.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_cagde, _dddcc := _fgeec.Value, error(nil)
			if _dddcc != nil {
				return _dddcc
			}
			_fcddf.CustomMenuAttr = &_cagde
			continue
		}
		if _fgeec.Name.Local == "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_dedgea, _fcgd := _g.ParseBool(_fgeec.Value)
			if _fcgd != nil {
				return _fcgd
			}
			_fcddf.OldFunctionAttr = &_dedgea
			continue
		}
		if _fgeec.Name.Local == "\u0075\u0061" {
			_baeea, _bfeaa := _g.ParseBool(_fgeec.Value)
			if _bfeaa != nil {
				return _bfeaa
			}
			_fcddf.UaAttr = &_baeea
			continue
		}
		if _fgeec.Name.Local == "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079" {
			_cfdef, _eabgdb := _g.ParseUint(_fgeec.Value, 10, 8)
			if _eabgdb != nil {
				return _eabgdb
			}
			_fabdg := uint8(_cfdef)
			_fcddf.OldShortcutKeyAttr = &_fabdg
			continue
		}
		if _fgeec.Name.Local == "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n" {
			_bfbcg, _fgbd := _g.ParseBool(_fgeec.Value)
			if _fgbd != nil {
				return _fgbd
			}
			_fcddf.OldHiddenAttr = &_bfbcg
			continue
		}
		if _fgeec.Name.Local == "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_ccagce, _ggagc := _fgeec.Value, error(nil)
			if _ggagc != nil {
				return _ggagc
			}
			_fcddf.OldCustomMenuAttr = &_ccagce
			continue
		}
		if _fgeec.Name.Local == "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064" {
			_febad, _gbff := _g.ParseUint(_fgeec.Value, 10, 8)
			if _gbff != nil {
				return _gbff
			}
			_cgeda := uint8(_febad)
			_fcddf.OldFunctionGroupIdAttr = &_cgeda
			continue
		}
		if _fgeec.Name.Local == "\u0072\u0049\u0064" {
			_debff, _dcdfe := _g.ParseUint(_fgeec.Value, 10, 32)
			if _dcdfe != nil {
				return _dcdfe
			}
			_aedac := uint32(_debff)
			_fcddf.RIdAttr = &_aedac
			continue
		}
	}
_gdecf:
	for {
		_dgfea, _ebbfbc := d.Token()
		if _ebbfbc != nil {
			return _ebbfbc
		}
		switch _bcfcb := _dgfea.(type) {
		case _b.StartElement:
			switch _bcfcb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				_fcddf.Formula = new(string)
				if _edcdd := d.DecodeElement(_fcddf.Formula, &_bcfcb); _edcdd != nil {
					return _edcdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}:
				_fcddf.OldFormula = new(string)
				if _ffdbd := d.DecodeElement(_fcddf.OldFormula, &_bcfcb); _ffdbd != nil {
					return _ffdbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcddf.ExtLst = NewCT_ExtensionList()
				if _cgcfbd := d.DecodeElement(_fcddf.ExtLst, &_bcfcb); _cgcfbd != nil {
					return _cgcfbd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0020\u0025\u0076", _bcfcb.Name)
				if _bcbcf := d.Skip(); _bcbcf != nil {
					return _bcbcf
				}
			}
		case _b.EndElement:
			break _gdecf
		case _b.CharData:
		}
	}
	return nil
}
func (_abfga *CT_RElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edfad:
	for {
		_bdcdd, _cafd := d.Token()
		if _cafd != nil {
			return _cafd
		}
		switch _aaedfc := _bdcdd.(type) {
		case _b.StartElement:
			switch _aaedfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_abfga.RPr = NewCT_RPrElt()
				if _beeec := d.DecodeElement(_abfga.RPr, &_aaedfc); _beeec != nil {
					return _beeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _dcegff := d.DecodeElement(&_abfga.T, &_aaedfc); _dcegff != nil {
					return _dcegff
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0045\u006c\u0074\u0020\u0025\u0076", _aaedfc.Name)
				if _bgcca := d.Skip(); _bgcca != nil {
					return _bgcca
				}
			}
		case _b.EndElement:
			break _edfad
		case _b.CharData:
		}
	}
	return nil
}
func (_gdabff *CT_SheetCalcPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdabff.FullCalcOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006c\u006c\u0043\u0061\u006c\u0063\u004fn\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdabff.FullCalcOnLoadAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abfgg ST_PivotAreaType) String() string {
	switch _abfgg {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d\u0061\u006c"
	case 3:
		return "\u0064\u0061\u0074\u0061"
	case 4:
		return "\u0061\u006c\u006c"
	case 5:
		return "\u006f\u0072\u0069\u0067\u0069\u006e"
	case 6:
		return "\u0062\u0075\u0074\u0074\u006f\u006e"
	case 7:
		return "\u0074\u006f\u0070\u0045\u006e\u0064"
	case 8:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	}
	return ""
}
func (_bddbb *CT_Comment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _bddbb.RefAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u0068\u006f\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bddbb.AuthorIdAttr)})
	if _bddbb.GuidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_bddbb.GuidAttr)})
	}
	if _bddbb.ShapeIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_bddbb.ShapeIdAttr)})
	}
	e.EncodeToken(start)
	_cbccc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0065\u0078\u0074"}}
	e.EncodeElement(_bddbb.Text, _cbccc)
	if _bddbb.CommentPr != nil {
		_bage := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072"}}
		e.EncodeElement(_bddbb.CommentPr, _bage)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggdae *CT_Parameter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _accg := range start.Attr {
		if _accg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bcgfbb, _gddba := _accg.Value, error(nil)
			if _gddba != nil {
				return _gddba
			}
			_ggdae.NameAttr = &_bcgfbb
			continue
		}
		if _accg.Name.Local == "\u0073q\u006c\u0054\u0079\u0070\u0065" {
			_cdeeb, _dafee := _g.ParseInt(_accg.Value, 10, 32)
			if _dafee != nil {
				return _dafee
			}
			_ffacg := int32(_cdeeb)
			_ggdae.SqlTypeAttr = &_ffacg
			continue
		}
		if _accg.Name.Local == "\u0070\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0054\u0079\u0070\u0065" {
			_ggdae.ParameterTypeAttr.UnmarshalXMLAttr(_accg)
			continue
		}
		if _accg.Name.Local == "\u0072e\u0066r\u0065\u0073\u0068\u004f\u006e\u0043\u0068\u0061\u006e\u0067\u0065" {
			_ffdfd, _gdeg := _g.ParseBool(_accg.Value)
			if _gdeg != nil {
				return _gdeg
			}
			_ggdae.RefreshOnChangeAttr = &_ffdfd
			continue
		}
		if _accg.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_aeaac, _abaab := _accg.Value, error(nil)
			if _abaab != nil {
				return _abaab
			}
			_ggdae.PromptAttr = &_aeaac
			continue
		}
		if _accg.Name.Local == "\u0062o\u006f\u006c\u0065\u0061\u006e" {
			_bdedc, _gabe := _g.ParseBool(_accg.Value)
			if _gabe != nil {
				return _gabe
			}
			_ggdae.BooleanAttr = &_bdedc
			continue
		}
		if _accg.Name.Local == "\u0064\u006f\u0075\u0062\u006c\u0065" {
			_dgcdg, _eagfef := _g.ParseFloat(_accg.Value, 64)
			if _eagfef != nil {
				return _eagfef
			}
			_ggdae.DoubleAttr = &_dgcdg
			continue
		}
		if _accg.Name.Local == "\u0069n\u0074\u0065\u0067\u0065\u0072" {
			_ebaecg, _ffcac := _g.ParseInt(_accg.Value, 10, 32)
			if _ffcac != nil {
				return _ffcac
			}
			_abfgd := int32(_ebaecg)
			_ggdae.IntegerAttr = &_abfgd
			continue
		}
		if _accg.Name.Local == "\u0073\u0074\u0072\u0069\u006e\u0067" {
			_cecaa, _gbbdd := _accg.Value, error(nil)
			if _gbbdd != nil {
				return _gbbdd
			}
			_ggdae.StringAttr = &_cecaa
			continue
		}
		if _accg.Name.Local == "\u0063\u0065\u006c\u006c" {
			_fbdbe, _fbcec := _accg.Value, error(nil)
			if _fbcec != nil {
				return _fbcec
			}
			_ggdae.CellAttr = &_fbdbe
			continue
		}
	}
	for {
		_dbbde, _gafbc := d.Token()
		if _gafbc != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061r\u0061\u006d\u0065\u0074\u0065\u0072\u003a\u0020\u0025\u0073", _gafbc)
		}
		if _dedfd, _agea := _dbbde.(_b.EndElement); _agea && _dedfd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abdd *CT_PageField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgada := range start.Attr {
		if _cgada.Name.Local == "\u0066\u006c\u0064" {
			_faeg, _accfa := _g.ParseInt(_cgada.Value, 10, 32)
			if _accfa != nil {
				return _accfa
			}
			_abdd.FldAttr = int32(_faeg)
			continue
		}
		if _cgada.Name.Local == "\u0069\u0074\u0065\u006d" {
			_abfbc, _cfcee := _g.ParseUint(_cgada.Value, 10, 32)
			if _cfcee != nil {
				return _cfcee
			}
			_eegddc := uint32(_abfbc)
			_abdd.ItemAttr = &_eegddc
			continue
		}
		if _cgada.Name.Local == "\u0068\u0069\u0065\u0072" {
			_dcfc, _cccfe := _g.ParseInt(_cgada.Value, 10, 32)
			if _cccfe != nil {
				return _cccfe
			}
			_dffacg := int32(_dcfc)
			_abdd.HierAttr = &_dffacg
			continue
		}
		if _cgada.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fdadfa, _dfeadd := _cgada.Value, error(nil)
			if _dfeadd != nil {
				return _dfeadd
			}
			_abdd.NameAttr = &_fdadfa
			continue
		}
		if _cgada.Name.Local == "\u0063\u0061\u0070" {
			_dffgf, _cfbeb := _cgada.Value, error(nil)
			if _cfbeb != nil {
				return _cfbeb
			}
			_abdd.CapAttr = &_dffgf
			continue
		}
	}
_ffeba:
	for {
		_abgcd, _dffagc := d.Token()
		if _dffagc != nil {
			return _dffagc
		}
		switch _fedbe := _abgcd.(type) {
		case _b.StartElement:
			switch _fedbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abdd.ExtLst = NewCT_ExtensionList()
				if _bacbc := d.DecodeElement(_abdd.ExtLst, &_fedbe); _bacbc != nil {
					return _bacbc
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0061\u0067e\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _fedbe.Name)
				if _bagfa := d.Skip(); _bagfa != nil {
					return _bagfa
				}
			}
		case _b.EndElement:
			break _ffeba
		case _b.CharData:
		}
	}
	return nil
}
func (_cacaa *CT_Macrosheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Name.Local = "\u006d\u0061:\u0043\u0054\u005fM\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	if _cacaa.SheetPr != nil {
		_eabbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0050\u0072"}}
		e.EncodeElement(_cacaa.SheetPr, _eabbc)
	}
	if _cacaa.Dimension != nil {
		_ddcad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"}}
		e.EncodeElement(_cacaa.Dimension, _ddcad)
	}
	if _cacaa.SheetViews != nil {
		_bfeeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cacaa.SheetViews, _bfeeb)
	}
	if _cacaa.SheetFormatPr != nil {
		_ededa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}}
		e.EncodeElement(_cacaa.SheetFormatPr, _ededa)
	}
	if _cacaa.Cols != nil {
		_fbace := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006c\u0073"}}
		for _, _egbea := range _cacaa.Cols {
			e.EncodeElement(_egbea, _fbace)
		}
	}
	_cagb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_cacaa.SheetData, _cagb)
	if _cacaa.SheetProtection != nil {
		_fbbae := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cacaa.SheetProtection, _fbbae)
	}
	if _cacaa.AutoFilter != nil {
		_ebgda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cacaa.AutoFilter, _ebgda)
	}
	if _cacaa.SortState != nil {
		_gdebf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cacaa.SortState, _gdebf)
	}
	if _cacaa.DataConsolidate != nil {
		_gfecgg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ad\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065"}}
		e.EncodeElement(_cacaa.DataConsolidate, _gfecgg)
	}
	if _cacaa.CustomSheetViews != nil {
		_efbdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}}
		e.EncodeElement(_cacaa.CustomSheetViews, _efbdf)
	}
	if _cacaa.PhoneticPr != nil {
		_efgag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}}
		e.EncodeElement(_cacaa.PhoneticPr, _efgag)
	}
	if _cacaa.ConditionalFormatting != nil {
		_ddbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"}}
		for _, _gdgged := range _cacaa.ConditionalFormatting {
			e.EncodeElement(_gdgged, _ddbg)
		}
	}
	if _cacaa.PrintOptions != nil {
		_egbeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ap\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_cacaa.PrintOptions, _egbeg)
	}
	if _cacaa.PageMargins != nil {
		_cadcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_cacaa.PageMargins, _cadcc)
	}
	if _cacaa.PageSetup != nil {
		_bcgdaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_cacaa.PageSetup, _bcgdaf)
	}
	if _cacaa.HeaderFooter != nil {
		_efece := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_cacaa.HeaderFooter, _efece)
	}
	if _cacaa.RowBreaks != nil {
		_agccee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ar\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cacaa.RowBreaks, _agccee)
	}
	if _cacaa.ColBreaks != nil {
		_baag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"}}
		e.EncodeElement(_cacaa.ColBreaks, _baag)
	}
	if _cacaa.CustomProperties != nil {
		_defbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}}
		e.EncodeElement(_cacaa.CustomProperties, _defbf)
	}
	if _cacaa.Drawing != nil {
		_gbaed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cacaa.Drawing, _gbaed)
	}
	if _cacaa.LegacyDrawing != nil {
		_ebaggb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}}
		e.EncodeElement(_cacaa.LegacyDrawing, _ebaggb)
	}
	if _cacaa.LegacyDrawingHF != nil {
		_cfdgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003al\u0065\u0067\u0061\u0063\u0079D\u0072\u0061w\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cacaa.LegacyDrawingHF, _cfdgc)
	}
	if _cacaa.DrawingHF != nil {
		_ebbde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}}
		e.EncodeElement(_cacaa.DrawingHF, _ebbde)
	}
	if _cacaa.Picture != nil {
		_aaaff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0063\u0074\u0075\u0072\u0065"}}
		e.EncodeElement(_cacaa.Picture, _aaaff)
	}
	if _cacaa.OleObjects != nil {
		_cgefb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}}
		e.EncodeElement(_cacaa.OleObjects, _cgefb)
	}
	if _cacaa.ExtLst != nil {
		_dgccb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cacaa.ExtLst, _dgccb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CalculatedMember and its children, prefixing error messages with path
func (_aabf *CT_CalculatedMember) ValidateWithPath(path string) error {
	if _aabf.ExtLst != nil {
		if _ddee := _aabf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ddee != nil {
			return _ddee
		}
	}
	return nil
}
func (_dbfcf *CT_Parameters) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbfcf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dbfcf.CountAttr)})
	}
	e.EncodeToken(start)
	_efcfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072"}}
	for _, _feage := range _dbfcf.Parameter {
		e.EncodeElement(_feage, _efcfd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_decfd *CT_TextPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efdcc := range start.Attr {
		if _efdcc.Name.Local == "\u0074h\u006f\u0075\u0073\u0061\u006e\u0064s" {
			_bfaafe, _efebb := _efdcc.Value, error(nil)
			if _efebb != nil {
				return _efebb
			}
			_decfd.ThousandsAttr = &_bfaafe
			continue
		}
		if _efdcc.Name.Local == "\u0074\u0061\u0062" {
			_cgaafg, _bebec := _g.ParseBool(_efdcc.Value)
			if _bebec != nil {
				return _bebec
			}
			_decfd.TabAttr = &_cgaafg
			continue
		}
		if _efdcc.Name.Local == "\u0066\u0069\u006c\u0065\u0054\u0079\u0070\u0065" {
			_decfd.FileTypeAttr.UnmarshalXMLAttr(_efdcc)
			continue
		}
		if _efdcc.Name.Local == "\u0073\u0070\u0061c\u0065" {
			_agccg, _cfggc := _g.ParseBool(_efdcc.Value)
			if _cfggc != nil {
				return _cfggc
			}
			_decfd.SpaceAttr = &_agccg
			continue
		}
		if _efdcc.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_ccdbbf, _gbcga := _efdcc.Value, error(nil)
			if _gbcga != nil {
				return _gbcga
			}
			_decfd.CharacterSetAttr = &_ccdbbf
			continue
		}
		if _efdcc.Name.Local == "\u0073\u006f\u0075\u0072\u0063\u0065\u0046\u0069\u006c\u0065" {
			_eeaaa, _gbadb := _efdcc.Value, error(nil)
			if _gbadb != nil {
				return _gbadb
			}
			_decfd.SourceFileAttr = &_eeaaa
			continue
		}
		if _efdcc.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065d" {
			_feaeb, _dafced := _g.ParseBool(_efdcc.Value)
			if _dafced != nil {
				return _dafced
			}
			_decfd.DelimitedAttr = &_feaeb
			continue
		}
		if _efdcc.Name.Local == "\u0064e\u0063\u0069\u006d\u0061\u006c" {
			_dfgcgb, _cffgd := _efdcc.Value, error(nil)
			if _cffgd != nil {
				return _cffgd
			}
			_decfd.DecimalAttr = &_dfgcgb
			continue
		}
		if _efdcc.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074" {
			_cbcbaf, _bcfea := _g.ParseBool(_efdcc.Value)
			if _bcfea != nil {
				return _bcfea
			}
			_decfd.PromptAttr = &_cbcbaf
			continue
		}
		if _efdcc.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_babda, _gbbfb := _g.ParseUint(_efdcc.Value, 10, 32)
			if _gbbfb != nil {
				return _gbbfb
			}
			_cfaga := uint32(_babda)
			_decfd.CodePageAttr = &_cfaga
			continue
		}
		if _efdcc.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_fgcfgb, _aagddd := _g.ParseUint(_efdcc.Value, 10, 32)
			if _aagddd != nil {
				return _aagddd
			}
			_egde := uint32(_fgcfgb)
			_decfd.FirstRowAttr = &_egde
			continue
		}
		if _efdcc.Name.Local == "\u0063\u006f\u006dm\u0061" {
			_edagc, _caeded := _g.ParseBool(_efdcc.Value)
			if _caeded != nil {
				return _caeded
			}
			_decfd.CommaAttr = &_edagc
			continue
		}
		if _efdcc.Name.Local == "\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn" {
			_cdcaae, _bfbfc := _g.ParseBool(_efdcc.Value)
			if _bfbfc != nil {
				return _bfbfc
			}
			_decfd.SemicolonAttr = &_cdcaae
			continue
		}
		if _efdcc.Name.Local == "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065" {
			_bdfeda, _cdaba := _g.ParseBool(_efdcc.Value)
			if _cdaba != nil {
				return _cdaba
			}
			_decfd.ConsecutiveAttr = &_bdfeda
			continue
		}
		if _efdcc.Name.Local == "\u0071u\u0061\u006c\u0069\u0066\u0069\u0065r" {
			_decfd.QualifierAttr.UnmarshalXMLAttr(_efdcc)
			continue
		}
		if _efdcc.Name.Local == "\u0064e\u006c\u0069\u006d\u0069\u0074\u0065r" {
			_ggddabf, _gcddde := _efdcc.Value, error(nil)
			if _gcddde != nil {
				return _gcddde
			}
			_decfd.DelimiterAttr = &_ggddabf
			continue
		}
	}
_deffef:
	for {
		_gabdb, _bccbed := d.Token()
		if _bccbed != nil {
			return _bccbed
		}
		switch _gcgada := _gabdb.(type) {
		case _b.StartElement:
			switch _gcgada.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_decfd.TextFields = NewCT_TextFields()
				if _fbege := d.DecodeElement(_decfd.TextFields, &_gcgada); _fbege != nil {
					return _fbege
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0065\u0078t\u0050\u0072 \u0025\u0076", _gcgada.Name)
				if _bacbgf := d.Skip(); _bacbgf != nil {
					return _bacbgf
				}
			}
		case _b.EndElement:
			break _deffef
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CacheField() *CT_CacheField { _cbdc := &CT_CacheField{}; return _cbdc }
func NewCT_CalcChain() *CT_CalcChain   { _bfaf := &CT_CalcChain{}; return _bfaf }
func (_cdbad *CT_FilterColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006cI\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cdbad.ColIdAttr)})
	if _cdbad.HiddenButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064d\u0065\u006e\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cdbad.HiddenButtonAttr))})
	}
	if _cdbad.ShowButtonAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0042\u0075\u0074\u0074\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cdbad.ShowButtonAttr))})
	}
	e.EncodeToken(start)
	if _cdbad.Filters != nil {
		_eedfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_cdbad.Filters, _eedfa)
	}
	if _cdbad.Top10 != nil {
		_ebdfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070\u0031\u0030"}}
		e.EncodeElement(_cdbad.Top10, _ebdfd)
	}
	if _cdbad.CustomFilters != nil {
		_fbdag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073"}}
		e.EncodeElement(_cdbad.CustomFilters, _fbdag)
	}
	if _cdbad.DynamicFilter != nil {
		_fdfdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0064\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cdbad.DynamicFilter, _fdfdf)
	}
	if _cdbad.ColorFilter != nil {
		_bcaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cdbad.ColorFilter, _bcaf)
	}
	if _cdbad.IconFilter != nil {
		_fdfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_cdbad.IconFilter, _fdfe)
	}
	if _cdbad.ExtLst != nil {
		_fdgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cdbad.ExtLst, _fdgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Items struct {

	// Field Count
	CountAttr *uint32

	// PivotTable Field Item
	Item []*CT_Item
}

func ParseSliceST_Sqref(s string) (ST_Sqref, error) { return ST_Sqref(_c.Fields(s)), nil }

// Validate validates the CT_TableStyles and its children
func (_gbbfef *CT_TableStyles) Validate() error {
	return _gbbfef.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073")
}
func (_bcccbd ST_CredMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcccbd.String(), start)
}
func (_bcedcc ST_ItemType) ValidateWithPath(path string) error {
	switch _bcedcc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcedcc))
	}
	return nil
}
func (_bdgfe *MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdgfe.CT_MapInfo = *NewCT_MapInfo()
	for _, _cdgdf := range start.Attr {
		if _cdgdf.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_fabfb, _dfdae := _cdgdf.Value, error(nil)
			if _dfdae != nil {
				return _dfdae
			}
			_bdgfe.SelectionNamespacesAttr = _fabfb
			continue
		}
	}
_bbfdec:
	for {
		_cgadb, _gadae := d.Token()
		if _gadae != nil {
			return _gadae
		}
		switch _eddbc := _cgadb.(type) {
		case _b.StartElement:
			switch _eddbc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_dbfed := NewCT_Schema()
				if _efcfb := d.DecodeElement(_dbfed, &_eddbc); _efcfb != nil {
					return _efcfb
				}
				_bdgfe.Schema = append(_bdgfe.Schema, _dbfed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_gfbab := NewCT_Map()
				if _dfdccd := d.DecodeElement(_gfbab, &_eddbc); _dfdccd != nil {
					return _dfdccd
				}
				_bdgfe.Map = append(_bdgfe.Map, _gfbab)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u004da\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _eddbc.Name)
				if _dfddba := d.Skip(); _dfddba != nil {
					return _dfddba
				}
			}
		case _b.EndElement:
			break _bbfdec
		case _b.CharData:
		}
	}
	return nil
}

type ST_ItemType byte

// ValidateWithPath validates the CT_SheetCalcPr and its children, prefixing error messages with path
func (_aeadg *CT_SheetCalcPr) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_RevisionComment and its children
func (_adcbc *CT_RevisionComment) Validate() error {
	return _adcbc.ValidateWithPath("\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074")
}

type CT_TableMissing struct{}

func NewCT_FileVersion() *CT_FileVersion { _ffabf := &CT_FileVersion{}; return _ffabf }
func (_gcgfc *CT_FileRecoveryPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bacef := range start.Attr {
		if _bacef.Name.Local == "a\u0075\u0074\u006f\u0052\u0065\u0063\u006f\u0076\u0065\u0072" {
			_caaec, _cbdge := _g.ParseBool(_bacef.Value)
			if _cbdge != nil {
				return _cbdge
			}
			_gcgfc.AutoRecoverAttr = &_caaec
			continue
		}
		if _bacef.Name.Local == "\u0063r\u0061\u0073\u0068\u0053\u0061\u0076e" {
			_ceafga, _gbbgc := _g.ParseBool(_bacef.Value)
			if _gbbgc != nil {
				return _gbbgc
			}
			_gcgfc.CrashSaveAttr = &_ceafga
			continue
		}
		if _bacef.Name.Local == "\u0064a\u0074a\u0045\u0078\u0074\u0072\u0061\u0063\u0074\u004c\u006f\u0061\u0064" {
			_ceddg, _bgedc := _g.ParseBool(_bacef.Value)
			if _bgedc != nil {
				return _bgedc
			}
			_gcgfc.DataExtractLoadAttr = &_ceddg
			continue
		}
		if _bacef.Name.Local == "\u0072\u0065\u0070\u0061\u0069\u0072\u004c\u006f\u0061\u0064" {
			_gfcfbc, _cfba := _g.ParseBool(_bacef.Value)
			if _cfba != nil {
				return _cfba
			}
			_gcgfc.RepairLoadAttr = &_gfcfbc
			continue
		}
	}
	for {
		_fbgbf, _baede := d.Token()
		if _baede != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0050\u0072: \u0025\u0073", _baede)
		}
		if _gbae, _feadf := _fbgbf.(_b.EndElement); _feadf && _gbae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eegeg *CT_Field) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _a.Sprintf("\u0025\u0076", _eegeg.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BookView and its children
func (_bgd *CT_BookView) Validate() error {
	return _bgd.ValidateWithPath("C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077")
}
func (_ffffbe *Comments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073"
	return _ffffbe.CT_Comments.MarshalXML(e, start)
}
func (_gbfbf ST_TableType) String() string {
	switch _gbfbf {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0078\u006d\u006c"
	case 3:
		return "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}

type CT_Dialogsheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Dialog Sheet Views
	SheetViews *CT_SheetViews

	// Dialog Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Sheet Protection
	SheetProtection *CT_SheetProtection

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header & Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF
	OleObjects      *CT_OleObjects
	Controls        *CT_Controls

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_CustomChartsheetView and its children
func (_gedad *CT_CustomChartsheetView) Validate() error {
	return _gedad.ValidateWithPath("\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

// ValidateWithPath validates the CT_PrintOptions and its children, prefixing error messages with path
func (_gbaff *CT_PrintOptions) ValidateWithPath(path string) error { return nil }
func (_cegcag *ST_FieldSortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cegcag = 0
	case "\u006d\u0061\u006e\u0075\u0061\u006c":
		*_cegcag = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_cegcag = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_cegcag = 3
	}
	return nil
}
func (_aadgf *CT_XmlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0070I\u0064"}, Value: _a.Sprintf("\u0025\u0076", _aadgf.MapIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0070\u0061t\u0068"}, Value: _a.Sprintf("\u0025\u0076", _aadgf.XpathAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", _aadgf.XmlDataTypeAttr)})
	e.EncodeToken(start)
	if _aadgf.ExtLst != nil {
		_bfeage := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aadgf.ExtLst, _bfeage)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Headers and its children
func (_dfcec *Headers) Validate() error {
	return _dfcec.ValidateWithPath("\u0048e\u0061\u0064\u0065\u0072\u0073")
}
func (_dgbd *CT_CalculatedMembers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gege := range start.Attr {
		if _gege.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_febg, _deede := _g.ParseUint(_gege.Value, 10, 32)
			if _deede != nil {
				return _deede
			}
			_bbbc := uint32(_febg)
			_dgbd.CountAttr = &_bbbc
			continue
		}
	}
_aagg:
	for {
		_faaa, _dfdc := d.Token()
		if _dfdc != nil {
			return _dfdc
		}
		switch _fbba := _faaa.(type) {
		case _b.StartElement:
			switch _fbba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072"}:
				_aaga := NewCT_CalculatedMember()
				if _egge := d.DecodeElement(_aaga, &_fbba); _egge != nil {
					return _egge
				}
				_dgbd.CalculatedMember = append(_dgbd.CalculatedMember, _aaga)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _fbba.Name)
				if _ddefc := d.Skip(); _ddefc != nil {
					return _ddefc
				}
			}
		case _b.EndElement:
			break _aagg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureDimensionMap and its children, prefixing error messages with path
func (_acadd *CT_MeasureDimensionMap) ValidateWithPath(path string) error { return nil }
func NewCT_UnderlineProperty() *CT_UnderlineProperty {
	_aagfa := &CT_UnderlineProperty{}
	return _aagfa
}
func (_eddafb *CT_MetadataTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eddafb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eddafb.CountAttr)})
	}
	e.EncodeToken(start)
	_dabce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003am\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065"}}
	for _, _gadc := range _eddafb.MetadataType {
		e.EncodeElement(_gadc, _dabce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Xf struct {

	// Number Format Id
	NumFmtIdAttr *uint32

	// Font Id
	FontIdAttr *uint32

	// Fill Id
	FillIdAttr *uint32

	// Border Id
	BorderIdAttr *uint32

	// Format Id
	XfIdAttr *uint32

	// Quote Prefix
	QuotePrefixAttr *bool

	// Pivot Button
	PivotButtonAttr *bool

	// Apply Number Format
	ApplyNumberFormatAttr *bool

	// Apply Font
	ApplyFontAttr *bool

	// Apply Fill
	ApplyFillAttr *bool

	// Apply Border
	ApplyBorderAttr *bool

	// Apply Alignment
	ApplyAlignmentAttr *bool

	// Apply Protection
	ApplyProtectionAttr *bool

	// Alignment
	Alignment *CT_CellAlignment

	// Protection
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_Font and its children, prefixing error messages with path
func (_fbfa *CT_Font) ValidateWithPath(path string) error {
	for _aecef, _ecab := range _fbfa.Name {
		if _gbfbg := _ecab.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _aecef)); _gbfbg != nil {
			return _gbfbg
		}
	}
	for _dcgbf, _cbac := range _fbfa.Charset {
		if _bddfe := _cbac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u0068\u0061\u0072\u0073\u0065t\u005b\u0025\u0064\u005d", path, _dcgbf)); _bddfe != nil {
			return _bddfe
		}
	}
	for _cade, _ddga := range _fbfa.Family {
		if _edafe := _ddga.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046\u0061\u006d\u0069\u006c\u0079\u005b\u0025\u0064\u005d", path, _cade)); _edafe != nil {
			return _edafe
		}
	}
	for _dafgf, _aacca := range _fbfa.B {
		if _gffdb := _aacca.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _dafgf)); _gffdb != nil {
			return _gffdb
		}
	}
	for _dcbgf, _deace := range _fbfa.I {
		if _bfbad := _deace.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _dcbgf)); _bfbad != nil {
			return _bfbad
		}
	}
	for _bagd, _badcd := range _fbfa.Strike {
		if _agafd := _badcd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0074\u0072\u0069\u006b\u0065\u005b\u0025\u0064\u005d", path, _bagd)); _agafd != nil {
			return _agafd
		}
	}
	for _cacfa, _dbdg := range _fbfa.Outline {
		if _gfef := _dbdg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004f\u0075\u0074\u006c\u0069\u006ee\u005b\u0025\u0064\u005d", path, _cacfa)); _gfef != nil {
			return _gfef
		}
	}
	for _aaeba, _dbaca := range _fbfa.Shadow {
		if _dceff := _dbaca.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0068\u0061\u0064\u006f\u0077\u005b\u0025\u0064\u005d", path, _aaeba)); _dceff != nil {
			return _dceff
		}
	}
	for _ggda, _fgfae := range _fbfa.Condense {
		if _agada := _fgfae.ValidateWithPath(_a.Sprintf("\u0025s\u002fC\u006f\u006e\u0064\u0065\u006e\u0073\u0065\u005b\u0025\u0064\u005d", path, _ggda)); _agada != nil {
			return _agada
		}
	}
	for _bbed, _dcedg := range _fbfa.Extend {
		if _edag := _dcedg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u0065\u006e\u0064\u005b\u0025\u0064\u005d", path, _bbed)); _edag != nil {
			return _edag
		}
	}
	for _gdbcc, _egfga := range _fbfa.Color {
		if _ecbf := _egfga.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fC\u006f\u006c\u006f\u0072\u005b\u0025\u0064\u005d", path, _gdbcc)); _ecbf != nil {
			return _ecbf
		}
	}
	for _bcgbfd, _cedcef := range _fbfa.Sz {
		if _gdbfcg := _cedcef.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0053\u007a\u005b\u0025\u0064]", path, _bcgbfd)); _gdbfcg != nil {
			return _gdbfcg
		}
	}
	for _accec, _daebf := range _fbfa.U {
		if _gcga := _daebf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0055\u005b\u0025\u0064\u005d", path, _accec)); _gcga != nil {
			return _gcga
		}
	}
	for _bdebd, _adbeg := range _fbfa.VertAlign {
		if _bedfea := _adbeg.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0056\u0065\u0072t\u0041\u006c\u0069\u0067\u006e\u005b\u0025\u0064\u005d", path, _bdebd)); _bedfea != nil {
			return _bedfea
		}
	}
	for _fceag, _ccacc := range _fbfa.Scheme {
		if _bcefe := _ccacc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u005b\u0025\u0064\u005d", path, _fceag)); _bcefe != nil {
			return _bcefe
		}
	}
	return nil
}
func (_baedaa *CT_Set) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cabc := range start.Attr {
		if _cabc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfeag, _egfea := _g.ParseUint(_cabc.Value, 10, 32)
			if _egfea != nil {
				return _egfea
			}
			_acfbd := uint32(_bfeag)
			_baedaa.CountAttr = &_acfbd
			continue
		}
		if _cabc.Name.Local == "\u006da\u0078\u0052\u0061\u006e\u006b" {
			_edfbc, _dcggg := _g.ParseInt(_cabc.Value, 10, 32)
			if _dcggg != nil {
				return _dcggg
			}
			_baedaa.MaxRankAttr = int32(_edfbc)
			continue
		}
		if _cabc.Name.Local == "\u0073\u0065\u0074\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e" {
			_bfcgb, _ccdeag := _cabc.Value, error(nil)
			if _ccdeag != nil {
				return _ccdeag
			}
			_baedaa.SetDefinitionAttr = _bfcgb
			continue
		}
		if _cabc.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_baedaa.SortTypeAttr.UnmarshalXMLAttr(_cabc)
			continue
		}
		if _cabc.Name.Local == "q\u0075\u0065\u0072\u0079\u0046\u0061\u0069\u006c\u0065\u0064" {
			_faafc, _agggfa := _g.ParseBool(_cabc.Value)
			if _agggfa != nil {
				return _agggfa
			}
			_baedaa.QueryFailedAttr = &_faafc
			continue
		}
	}
_gbdad:
	for {
		_ebebca, _agdcaa := d.Token()
		if _agdcaa != nil {
			return _agdcaa
		}
		switch _gbbce := _ebebca.(type) {
		case _b.StartElement:
			switch _gbbce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_bcdfa := NewCT_Tuples()
				if _faegd := d.DecodeElement(_bcdfa, &_gbbce); _faegd != nil {
					return _faegd
				}
				_baedaa.Tpls = append(_baedaa.Tpls, _bcdfa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u006f\u0072\u0074\u0042\u0079\u0054\u0075\u0070\u006c\u0065"}:
				_baedaa.SortByTuple = NewCT_Tuples()
				if _egdgf := d.DecodeElement(_baedaa.SortByTuple, &_gbbce); _egdgf != nil {
					return _egdgf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0074\u0020\u0025\u0076", _gbbce.Name)
				if _afgda := d.Skip(); _afgda != nil {
					return _afgda
				}
			}
		case _b.EndElement:
			break _gbdad
		case _b.CharData:
		}
	}
	return nil
}
func (_fcbeba *ST_DvAspect) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aebegg, _fggfcc := d.Token()
	if _fggfcc != nil {
		return _fggfcc
	}
	if _daffga, _bfbfab := _aebegg.(_b.EndElement); _bfbfab && _daffga.Name == start.Name {
		*_fcbeba = 1
		return nil
	}
	if _ccafd, _cfcec := _aebegg.(_b.CharData); !_cfcec {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aebegg)
	} else {
		switch string(_ccafd) {
		case "":
			*_fcbeba = 0
		case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
			*_fcbeba = 1
		case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
			*_fcbeba = 2
		}
	}
	_aebegg, _fggfcc = d.Token()
	if _fggfcc != nil {
		return _fggfcc
	}
	if _bacbd, _bdeed := _aebegg.(_b.EndElement); _bdeed && _bacbd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aebegg)
}

// Validate validates the CT_PageMargins and its children
func (_caced *CT_PageMargins) Validate() error {
	return _caced.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073")
}

type CT_Control struct {

	// Shape Id
	ShapeIdAttr uint32
	IdAttr      string

	// Control Name
	NameAttr *string

	// Embedded Control Properties
	ControlPr *CT_ControlPr
}

func (_dbdada *ST_Scope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abefgf, _ebfcc := d.Token()
	if _ebfcc != nil {
		return _ebfcc
	}
	if _ffgbdg, _dfgbc := _abefgf.(_b.EndElement); _dfgbc && _ffgbdg.Name == start.Name {
		*_dbdada = 1
		return nil
	}
	if _ebdfee, _bfccd := _abefgf.(_b.CharData); !_bfccd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abefgf)
	} else {
		switch string(_ebdfee) {
		case "":
			*_dbdada = 0
		case "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn":
			*_dbdada = 1
		case "\u0064\u0061\u0074\u0061":
			*_dbdada = 2
		case "\u0066\u0069\u0065l\u0064":
			*_dbdada = 3
		}
	}
	_abefgf, _ebfcc = d.Token()
	if _ebfcc != nil {
		return _ebfcc
	}
	if _cadead, _gagee := _abefgf.(_b.EndElement); _gagee && _cadead.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abefgf)
}

type CT_RPrElt struct {

	// Font
	RFont *CT_FontName

	// Character Set
	Charset *CT_IntProperty

	// Font Family
	Family *CT_IntProperty

	// Bold
	B *CT_BooleanProperty

	// Italic
	I *CT_BooleanProperty

	// Strike Through
	Strike *CT_BooleanProperty

	// Outline
	Outline *CT_BooleanProperty

	// Shadow
	Shadow *CT_BooleanProperty

	// Condense
	Condense *CT_BooleanProperty

	// Extend
	Extend *CT_BooleanProperty

	// Text Color
	Color *CT_Color

	// Font Size
	Sz *CT_FontSize

	// Underline
	U *CT_UnderlineProperty

	// Vertical Alignment
	VertAlign *CT_VerticalAlignFontProperty

	// Font Scheme
	Scheme *CT_FontScheme
}

// Validate validates the CT_LevelGroup and its children
func (_cbecdg *CT_LevelGroup) Validate() error {
	return _cbecdg.ValidateWithPath("\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070")
}
func NewCT_TableFormula() *CT_TableFormula { _agbbb := &CT_TableFormula{}; return _agbbb }
func (_acacc ST_BorderStyle) ValidateWithPath(path string) error {
	switch _acacc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_acacc))
	}
	return nil
}

type CT_Reviewed struct {

	// revision Id
	RIdAttr uint32
}

func (_egfca *ST_VolDepType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbafb, _gbddf := d.Token()
	if _gbddf != nil {
		return _gbddf
	}
	if _gacbea, _dcdadg := _dbafb.(_b.EndElement); _dcdadg && _gacbea.Name == start.Name {
		*_egfca = 1
		return nil
	}
	if _afaaad, _bcdcf := _dbafb.(_b.CharData); !_bcdcf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbafb)
	} else {
		switch string(_afaaad) {
		case "":
			*_egfca = 0
		case "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061":
			*_egfca = 1
		case "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073":
			*_egfca = 2
		}
	}
	_dbafb, _gbddf = d.Token()
	if _gbddf != nil {
		return _gbddf
	}
	if _cbdeb, _dcgbdb := _dbafb.(_b.EndElement); _dcgbdb && _cbdeb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbafb)
}

// ValidateWithPath validates the CT_DeletedField and its children, prefixing error messages with path
func (_ebebc *CT_DeletedField) ValidateWithPath(path string) error { return nil }
func (_bcgb *CT_CellStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caac := range start.Attr {
		if _caac.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bgac, _bcaa := _caac.Value, error(nil)
			if _bcaa != nil {
				return _bcaa
			}
			_bcgb.NameAttr = &_bgac
			continue
		}
		if _caac.Name.Local == "\u0078\u0066\u0049\u0064" {
			_fgfd, _bffde := _g.ParseUint(_caac.Value, 10, 32)
			if _bffde != nil {
				return _bffde
			}
			_bcgb.XfIdAttr = uint32(_fgfd)
			continue
		}
		if _caac.Name.Local == "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d" {
			_cgecd, _ebeg := _g.ParseUint(_caac.Value, 10, 32)
			if _ebeg != nil {
				return _ebeg
			}
			_gfcf := uint32(_cgecd)
			_bcgb.BuiltinIdAttr = &_gfcf
			continue
		}
		if _caac.Name.Local == "\u0069\u004c\u0065\u0076\u0065\u006c" {
			_beac, _aadb := _g.ParseUint(_caac.Value, 10, 32)
			if _aadb != nil {
				return _aadb
			}
			_gdgea := uint32(_beac)
			_bcgb.ILevelAttr = &_gdgea
			continue
		}
		if _caac.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_ggb, _aebc := _g.ParseBool(_caac.Value)
			if _aebc != nil {
				return _aebc
			}
			_bcgb.HiddenAttr = &_ggb
			continue
		}
		if _caac.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e" {
			_fagc, _dacd := _g.ParseBool(_caac.Value)
			if _dacd != nil {
				return _dacd
			}
			_bcgb.CustomBuiltinAttr = &_fagc
			continue
		}
	}
_ccae:
	for {
		_egc, _ebfg := d.Token()
		if _ebfg != nil {
			return _ebfg
		}
		switch _dgdb := _egc.(type) {
		case _b.StartElement:
			switch _dgdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bcgb.ExtLst = NewCT_ExtensionList()
				if _facb := d.DecodeElement(_bcgb.ExtLst, &_dgdb); _facb != nil {
					return _facb
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _dgdb.Name)
				if _cgea := d.Skip(); _cgea != nil {
					return _cgea
				}
			}
		case _b.EndElement:
			break _ccae
		case _b.CharData:
		}
	}
	return nil
}
func (_eedcge *CT_MetadataType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feegbg := range start.Attr {
		if _feegbg.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006c\u0057i\u0064\u0074\u0068\u0073" {
			_ccgce, _gbeaec := _g.ParseBool(_feegbg.Value)
			if _gbeaec != nil {
				return _gbeaec
			}
			_eedcge.PasteColWidthsAttr = &_ccgce
			continue
		}
		if _feegbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_afaeb, _accbg := _feegbg.Value, error(nil)
			if _accbg != nil {
				return _accbg
			}
			_eedcge.NameAttr = _afaeb
			continue
		}
		if _feegbg.Name.Local == "\u0070a\u0073t\u0065\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bggdag, _fegce := _g.ParseBool(_feegbg.Value)
			if _fegce != nil {
				return _fegce
			}
			_eedcge.PasteNumberFormatsAttr = &_bggdag
			continue
		}
		if _feegbg.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0052\u006f\u0077" {
			_feedc, _gccbe := _g.ParseBool(_feegbg.Value)
			if _gccbe != nil {
				return _gccbe
			}
			_eedcge.GhostRowAttr = &_feedc
			continue
		}
		if _feegbg.Name.Local == "\u006d\u0065\u0072g\u0065" {
			_bbfdbg, _dagga := _g.ParseBool(_feegbg.Value)
			if _dagga != nil {
				return _dagga
			}
			_eedcge.MergeAttr = &_bbfdbg
			continue
		}
		if _feegbg.Name.Local == "\u0065\u0064\u0069\u0074" {
			_cbgde, _caddf := _g.ParseBool(_feegbg.Value)
			if _caddf != nil {
				return _caddf
			}
			_eedcge.EditAttr = &_cbgde
			continue
		}
		if _feegbg.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0046\u0069\u0072\u0073\u0074" {
			_cgbdf, _beccb := _g.ParseBool(_feegbg.Value)
			if _beccb != nil {
				return _beccb
			}
			_eedcge.SplitFirstAttr = &_cgbdf
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006f\u0070\u0079" {
			_gaccg, _bdged := _g.ParseBool(_feegbg.Value)
			if _bdged != nil {
				return _bdged
			}
			_eedcge.CopyAttr = &_gaccg
			continue
		}
		if _feegbg.Name.Local == "\u0073\u0070\u006c\u0069\u0074\u0041\u006c\u006c" {
			_cadbg, _ecgea := _g.ParseBool(_feegbg.Value)
			if _ecgea != nil {
				return _ecgea
			}
			_eedcge.SplitAllAttr = &_cadbg
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_geee, _ggcdc := _g.ParseBool(_feegbg.Value)
			if _ggcdc != nil {
				return _ggcdc
			}
			_eedcge.PasteFormulasAttr = &_geee
			continue
		}
		if _feegbg.Name.Local == "\u0063\u0065\u006c\u006c\u004d\u0065\u0074\u0061" {
			_ecbc, _baadba := _g.ParseBool(_feegbg.Value)
			if _baadba != nil {
				return _baadba
			}
			_eedcge.CellMetaAttr = &_ecbc
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0041\u006c\u006c" {
			_fgafd, _gacec := _g.ParseBool(_feegbg.Value)
			if _gacec != nil {
				return _gacec
			}
			_eedcge.ClearAllAttr = &_fgafd
			continue
		}
		if _feegbg.Name.Local == "\u006d\u0069\u006e\u0053up\u0070\u006f\u0072\u0074\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_afbbg, _faagf := _g.ParseUint(_feegbg.Value, 10, 32)
			if _faagf != nil {
				return _faagf
			}
			_eedcge.MinSupportedVersionAttr = uint32(_afbbg)
			continue
		}
		if _feegbg.Name.Local == "\u0061\u0064\u006a\u0075\u0073\u0074" {
			_bcbca, _gafe := _g.ParseBool(_feegbg.Value)
			if _gafe != nil {
				return _gafe
			}
			_eedcge.AdjustAttr = &_bcbca
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073" {
			_fffed, _fdbda := _g.ParseBool(_feegbg.Value)
			if _fdbda != nil {
				return _fdbda
			}
			_eedcge.ClearContentsAttr = &_fffed
			continue
		}
		if _feegbg.Name.Local == "p\u0061\u0073\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073" {
			_fgcfc, _dbgdf := _g.ParseBool(_feegbg.Value)
			if _dbgdf != nil {
				return _dbgdf
			}
			_eedcge.PasteValuesAttr = &_fgcfc
			continue
		}
		if _feegbg.Name.Local == "r\u006f\u0077\u0043\u006f\u006c\u0053\u0068\u0069\u0066\u0074" {
			_bfdgf, _fffba := _g.ParseBool(_feegbg.Value)
			if _fffba != nil {
				return _fffba
			}
			_eedcge.RowColShiftAttr = &_bfdgf
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_cdbec, _fefe := _g.ParseBool(_feegbg.Value)
			if _fefe != nil {
				return _fefe
			}
			_eedcge.PasteCommentsAttr = &_cdbec
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006c\u0065a\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bdgec, _daddag := _g.ParseBool(_feegbg.Value)
			if _daddag != nil {
				return _daddag
			}
			_eedcge.ClearFormatsAttr = &_bdgec
			continue
		}
		if _feegbg.Name.Local == "\u0067\u0068\u006f\u0073\u0074\u0043\u006f\u006c" {
			_aeaag, _afefe := _g.ParseBool(_feegbg.Value)
			if _afefe != nil {
				return _afefe
			}
			_eedcge.GhostColAttr = &_aeaag
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006f\u0065\u0072\u0063\u0065" {
			_efbgb, _ggdcd := _g.ParseBool(_feegbg.Value)
			if _ggdcd != nil {
				return _ggdcd
			}
			_eedcge.CoerceAttr = &_efbgb
			continue
		}
		if _feegbg.Name.Local == "\u0063\u006c\u0065\u0061\u0072\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_bebb, _effeb := _g.ParseBool(_feegbg.Value)
			if _effeb != nil {
				return _effeb
			}
			_eedcge.ClearCommentsAttr = &_bebb
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073\u0074\u0065\u0041\u006c\u006c" {
			_ecfec, _bcac := _g.ParseBool(_feegbg.Value)
			if _bcac != nil {
				return _bcac
			}
			_eedcge.PasteAllAttr = &_ecfec
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073t\u0065\u0042\u006f\u0072\u0064\u0065\u0072\u0073" {
			_ccgfca, _gagbf := _g.ParseBool(_feegbg.Value)
			if _gagbf != nil {
				return _gagbf
			}
			_eedcge.PasteBordersAttr = &_ccgfca
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073t\u0065\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cbgc, _cdbc := _g.ParseBool(_feegbg.Value)
			if _cdbc != nil {
				return _cdbc
			}
			_eedcge.PasteFormatsAttr = &_cbgc
			continue
		}
		if _feegbg.Name.Local == "\u0070\u0061\u0073\u0074eD\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e" {
			_cebc, _fgbed := _g.ParseBool(_feegbg.Value)
			if _fgbed != nil {
				return _fgbed
			}
			_eedcge.PasteDataValidationAttr = &_cebc
			continue
		}
		if _feegbg.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065" {
			_gedfb, _egcef := _g.ParseBool(_feegbg.Value)
			if _egcef != nil {
				return _egcef
			}
			_eedcge.DeleteAttr = &_gedfb
			continue
		}
		if _feegbg.Name.Local == "\u0061\u0073\u0073\u0069\u0067\u006e" {
			_gddcgg, _bbdc := _g.ParseBool(_feegbg.Value)
			if _bbdc != nil {
				return _bbdc
			}
			_eedcge.AssignAttr = &_gddcgg
			continue
		}
	}
	for {
		_baedg, _bdefc := d.Token()
		if _bdefc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0054\u0079p\u0065:\u0020\u0025\u0073", _bdefc)
		}
		if _fcfab, _bcgbd := _baedg.(_b.EndElement); _bcgbd && _fcfab.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_GroupBy byte

func (_eggbd *CT_Number) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _eggbd.VAttr)})
	if _eggbd.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.UAttr))})
	}
	if _eggbd.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.FAttr))})
	}
	if _eggbd.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eggbd.CAttr)})
	}
	if _eggbd.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_eggbd.CpAttr)})
	}
	if _eggbd.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_eggbd.InAttr)})
	}
	if _eggbd.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eggbd.BcAttr)})
	}
	if _eggbd.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eggbd.FcAttr)})
	}
	if _eggbd.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.IAttr))})
	}
	if _eggbd.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.UnAttr))})
	}
	if _eggbd.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.StAttr))})
	}
	if _eggbd.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eggbd.BAttr))})
	}
	e.EncodeToken(start)
	if _eggbd.Tpls != nil {
		_bffge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _dgccf := range _eggbd.Tpls {
			e.EncodeElement(_dgccf, _bffge)
		}
	}
	if _eggbd.X != nil {
		_fcfdgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _fgacf := range _eggbd.X {
			e.EncodeElement(_fgacf, _fcfdgd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_CellWatches struct {

	// Cell Watch Item
	CellWatch []*CT_CellWatch
}

// ValidateWithPath validates the CT_RevisionConflict and its children, prefixing error messages with path
func (_cbggg *CT_RevisionConflict) ValidateWithPath(path string) error { return nil }

// Validate validates the StyleSheet and its children
func (_cggbf *StyleSheet) Validate() error {
	return _cggbf.ValidateWithPath("\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_ExternalSheetData and its children, prefixing error messages with path
func (_ecgbe *CT_ExternalSheetData) ValidateWithPath(path string) error {
	for _adgfa, _adac := range _ecgbe.Row {
		if _bbaea := _adac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0052\u006f\u0077\u005b\u0025\u0064\u005d", path, _adgfa)); _bbaea != nil {
			return _bbaea
		}
	}
	return nil
}
func (_eegcd *ST_ConditionalFormattingOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eegcd = 0
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_eegcd = 1
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_eegcd = 2
	case "\u0065\u0071\u0075a\u006c":
		*_eegcd = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_eegcd = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_eegcd = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_eegcd = 6
	case "\u0062e\u0074\u0077\u0065\u0065\u006e":
		*_eegcd = 7
	case "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e":
		*_eegcd = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_eegcd = 9
	case "n\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073":
		*_eegcd = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_eegcd = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_eegcd = 12
	}
	return nil
}

type ST_PatternType byte

func (_bade *CT_Parameters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eefe := range start.Attr {
		if _eefe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfabfe, _adcdf := _g.ParseUint(_eefe.Value, 10, 32)
			if _adcdf != nil {
				return _adcdf
			}
			_gacgge := uint32(_bfabfe)
			_bade.CountAttr = &_gacgge
			continue
		}
	}
_daeeg:
	for {
		_gacad, _bgfcge := d.Token()
		if _bgfcge != nil {
			return _bgfcge
		}
		switch _eeeac := _gacad.(type) {
		case _b.StartElement:
			switch _eeeac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0072\u0061\u006d\u0065\u0074\u0065r"}:
				_fcabca := NewCT_Parameter()
				if _gbcfa := d.DecodeElement(_fcabca, &_eeeac); _gbcfa != nil {
					return _gbcfa
				}
				_bade.Parameter = append(_bade.Parameter, _fcabca)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 \u0025\u0076", _eeeac.Name)
				if _dddba := d.Skip(); _dddba != nil {
					return _dddba
				}
			}
		case _b.EndElement:
			break _daeeg
		case _b.CharData:
		}
	}
	return nil
}
func (_daeed *CT_PCDSDTCEntries) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _daeed.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_daeed.CountAttr)})
	}
	e.EncodeToken(start)
	if _daeed.M != nil {
		_caage := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _dfbce := range _daeed.M {
			e.EncodeElement(_dfbce, _caage)
		}
	}
	if _daeed.N != nil {
		_ffgee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _gefcc := range _daeed.N {
			e.EncodeElement(_gefcc, _ffgee)
		}
	}
	if _daeed.E != nil {
		_adef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _fafgf := range _daeed.E {
			e.EncodeElement(_fafgf, _adef)
		}
	}
	if _daeed.S != nil {
		_caab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _fccdc := range _daeed.S {
			e.EncodeElement(_fccdc, _caab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ColorFilter struct {

	// Differential Format Record Id
	DxfIdAttr *uint32

	// Filter By Cell Color
	CellColorAttr *bool
}

func NewCT_DrawingHF() *CT_DrawingHF { _ebbed := &CT_DrawingHF{}; return _ebbed }
func (_eccac *ST_Qualifier) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbccb, _gefgbc := d.Token()
	if _gefgbc != nil {
		return _gefgbc
	}
	if _ggfgef, _ceecd := _bbccb.(_b.EndElement); _ceecd && _ggfgef.Name == start.Name {
		*_eccac = 1
		return nil
	}
	if _edgab, _gebaff := _bbccb.(_b.CharData); !_gebaff {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bbccb)
	} else {
		switch string(_edgab) {
		case "":
			*_eccac = 0
		case "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_eccac = 1
		case "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065":
			*_eccac = 2
		case "\u006e\u006f\u006e\u0065":
			*_eccac = 3
		}
	}
	_bbccb, _gefgbc = d.Token()
	if _gefgbc != nil {
		return _gefgbc
	}
	if _agdfa, _gbbagd := _bbccb.(_b.EndElement); _gbbagd && _agdfa.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bbccb)
}
func (_aebg *CT_Color) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _agfg := range start.Attr {
		if _agfg.Name.Local == "\u0061\u0075\u0074\u006f" {
			_dffad, _ebad := _g.ParseBool(_agfg.Value)
			if _ebad != nil {
				return _ebad
			}
			_aebg.AutoAttr = &_dffad
			continue
		}
		if _agfg.Name.Local == "\u0069n\u0064\u0065\u0078\u0065\u0064" {
			_agfca, _eabd := _g.ParseUint(_agfg.Value, 10, 32)
			if _eabd != nil {
				return _eabd
			}
			_gcca := uint32(_agfca)
			_aebg.IndexedAttr = &_gcca
			continue
		}
		if _agfg.Name.Local == "\u0072\u0067\u0062" {
			_ggdfb, _aeafb := _agfg.Value, error(nil)
			if _aeafb != nil {
				return _aeafb
			}
			_aebg.RgbAttr = &_ggdfb
			continue
		}
		if _agfg.Name.Local == "\u0074\u0068\u0065m\u0065" {
			_cefb, _defg := _g.ParseUint(_agfg.Value, 10, 32)
			if _defg != nil {
				return _defg
			}
			_fabg := uint32(_cefb)
			_aebg.ThemeAttr = &_fabg
			continue
		}
		if _agfg.Name.Local == "\u0074\u0069\u006e\u0074" {
			_deff, _bdfce := _g.ParseFloat(_agfg.Value, 64)
			if _bdfce != nil {
				return _bdfce
			}
			_aebg.TintAttr = &_deff
			continue
		}
	}
	for {
		_ebga, _defd := d.Token()
		if _defd != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fC\u006f\u006c\u006f\u0072: \u0025\u0073", _defd)
		}
		if _cdecg, _bede := _ebga.(_b.EndElement); _bede && _cdecg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_FunctionGroups struct {

	// Built-in Function Group Count
	BuiltInGroupCountAttr *uint32

	// Function Group
	FunctionGroup []*CT_FunctionGroup
}

func (_cabae ST_Visibility) ValidateWithPath(path string) error {
	switch _cabae {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cabae))
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalSheetNames and its children, prefixing error messages with path
func (_beda *CT_ExternalSheetNames) ValidateWithPath(path string) error {
	for _bedcb, _gbegd := range _beda.SheetName {
		if _gdbbe := _gbegd.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _bedcb)); _gdbbe != nil {
			return _gdbbe
		}
	}
	return nil
}
func (_bbaee *CT_MapInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffbd := range start.Attr {
		if _ffbd.Name.Local == "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073" {
			_gfeec, _dbdbc := _ffbd.Value, error(nil)
			if _dbdbc != nil {
				return _dbdbc
			}
			_bbaee.SelectionNamespacesAttr = _gfeec
			continue
		}
	}
_cfdf:
	for {
		_ececef, _ebcbg := d.Token()
		if _ebcbg != nil {
			return _ebcbg
		}
		switch _beabd := _ececef.(type) {
		case _b.StartElement:
			switch _beabd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0053\u0063\u0068\u0065\u006d\u0061"}:
				_cgabf := NewCT_Schema()
				if _geefc := d.DecodeElement(_cgabf, &_beabd); _geefc != nil {
					return _geefc
				}
				_bbaee.Schema = append(_bbaee.Schema, _cgabf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u004d\u0061\u0070"}:
				_eggbb := NewCT_Map()
				if _dcdgg := d.DecodeElement(_eggbb, &_beabd); _dcdgg != nil {
					return _dcdgg
				}
				_bbaee.Map = append(_bbaee.Map, _eggbb)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0061\u0070\u0049\u006e\u0066\u006f\u0020\u0025\u0076", _beabd.Name)
				if _dcfdg := d.Skip(); _dcfdg != nil {
					return _dcfdg
				}
			}
		case _b.EndElement:
			break _cfdf
		case _b.CharData:
		}
	}
	return nil
}
func (_fbeaee *CT_rowItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fbeaee.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fbeaee.CountAttr)})
	}
	e.EncodeToken(start)
	_bffaa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _abdcd := range _fbeaee.I {
		e.EncodeElement(_abdcd, _bffaa)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetId and its children
func (_bebae *CT_SheetId) Validate() error {
	return _bebae.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064")
}

// ValidateWithPath validates the CT_FileSharing and its children, prefixing error messages with path
func (_gfdec *CT_FileSharing) ValidateWithPath(path string) error { return nil }
func NewCT_Top10() *CT_Top10                                      { _degfc := &CT_Top10{}; return _degfc }
func (_aaccf *CT_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aaccf.ValAttr = ST_FontScheme(1)
	for _, _dada := range start.Attr {
		if _dada.Name.Local == "\u0076\u0061\u006c" {
			_aaccf.ValAttr.UnmarshalXMLAttr(_dada)
			continue
		}
	}
	for {
		_eadag, _acfcf := d.Token()
		if _acfcf != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0053c\u0068\u0065\u006d\u0065\u003a\u0020\u0025s", _acfcf)
		}
		if _feagc, _ddeeg := _eadag.(_b.EndElement); _ddeeg && _feagc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cagdceb *ST_TableType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cagdceb = 0
	case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
		*_cagdceb = 1
	case "\u0078\u006d\u006c":
		*_cagdceb = 2
	case "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065":
		*_cagdceb = 3
	}
	return nil
}
func (_aeac *CT_Colors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _aeac.IndexedColors != nil {
		_eagb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0069\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_aeac.IndexedColors, _eagb)
	}
	if _aeac.MruColors != nil {
		_fceg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0072\u0075\u0043\u006f\u006c\u006f\u0072\u0073"}}
		e.EncodeElement(_aeac.MruColors, _fceg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbedc ST_PageOrder) String() string {
	switch _dbedc {
	case 0:
		return ""
	case 1:
		return "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case 2:
		return "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_InputCells and its children, prefixing error messages with path
func (_edcgc *CT_InputCells) ValidateWithPath(path string) error { return nil }
func NewCT_Cfvo() *CT_Cfvo                                       { _aeecb := &CT_Cfvo{}; _aeecb.TypeAttr = ST_CfvoType(1); return _aeecb }

// Validate validates the CT_Missing and its children
func (_dagdba *CT_Missing) Validate() error {
	return _dagdba.ValidateWithPath("\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func NewCT_Connection() *CT_Connection { _feeeb := &CT_Connection{}; return _feeeb }

// Validate validates the Dialogsheet and its children
func (_gcabb *Dialogsheet) Validate() error {
	return _gcabb.ValidateWithPath("D\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074")
}
func (_gbgd *CT_Index) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _gbgd.VAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OleObject and its children, prefixing error messages with path
func (_dfgcfb *CT_OleObject) ValidateWithPath(path string) error {
	if _bcabb := _dfgcfb.DvAspectAttr.ValidateWithPath(path + "\u002f\u0044\u0076\u0041\u0073\u0070\u0065\u0063\u0074\u0041\u0074\u0074\u0072"); _bcabb != nil {
		return _bcabb
	}
	if _ebgg := _dfgcfb.OleUpdateAttr.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0055\u0070\u0064\u0061\u0074e\u0041\u0074\u0074\u0072"); _ebgg != nil {
		return _ebgg
	}
	if _dfgcfb.ObjectPr != nil {
		if _bcfaa := _dfgcfb.ObjectPr.ValidateWithPath(path + "\u002fO\u0062\u006a\u0065\u0063\u0074\u0050r"); _bcfaa != nil {
			return _bcfaa
		}
	}
	return nil
}

type ST_Sqref []string

func (_cfbcbg ST_FileType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cfbcbg.String(), start)
}
func (_aaefa *CT_VolTypes) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gbfce:
	for {
		_fffcb, _gfaefd := d.Token()
		if _gfaefd != nil {
			return _gfaefd
		}
		switch _cbdgbd := _fffcb.(type) {
		case _b.StartElement:
			switch _cbdgbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076o\u006c\u0054\u0079\u0070\u0065"}:
				_aegbc := NewCT_VolType()
				if _gabea := d.DecodeElement(_aegbc, &_cbdgbd); _gabea != nil {
					return _gabea
				}
				_aaefa.VolType = append(_aaefa.VolType, _aegbc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aaefa.ExtLst = NewCT_ExtensionList()
				if _adfeb := d.DecodeElement(_aaefa.ExtLst, &_cbdgbd); _adfeb != nil {
					return _adfeb
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073\u0020\u0025\u0076", _cbdgbd.Name)
				if _ddgdgf := d.Skip(); _ddgdgf != nil {
					return _ddgdgf
				}
			}
		case _b.EndElement:
			break _gbfce
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Field and its children
func (_ccfeg *CT_Field) Validate() error {
	return _ccfeg.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064")
}

// ValidateWithPath validates the CT_TupleCache and its children, prefixing error messages with path
func (_ggfab *CT_TupleCache) ValidateWithPath(path string) error {
	if _ggfab.Entries != nil {
		if _agdeg := _ggfab.Entries.ValidateWithPath(path + "\u002f\u0045\u006e\u0074\u0072\u0069\u0065\u0073"); _agdeg != nil {
			return _agdeg
		}
	}
	if _ggfab.Sets != nil {
		if _deacef := _ggfab.Sets.ValidateWithPath(path + "\u002f\u0053\u0065t\u0073"); _deacef != nil {
			return _deacef
		}
	}
	if _ggfab.QueryCache != nil {
		if _fbadc := _ggfab.QueryCache.ValidateWithPath(path + "/\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"); _fbadc != nil {
			return _fbadc
		}
	}
	if _ggfab.ServerFormats != nil {
		if _dfbgg := _ggfab.ServerFormats.ValidateWithPath(path + "\u002f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006fr\u006d\u0061\u0074\u0073"); _dfbgg != nil {
			return _dfbgg
		}
	}
	if _ggfab.ExtLst != nil {
		if _fagbda := _ggfab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fagbda != nil {
			return _fagbda
		}
	}
	return nil
}
func (_fgdcbc ST_DvAspect) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egacff := _b.Attr{}
	_egacff.Name = name
	switch _fgdcbc {
	case ST_DvAspectUnset:
		_egacff.Value = ""
	case ST_DvAspectDVASPECT_CONTENT:
		_egacff.Value = "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case ST_DvAspectDVASPECT_ICON:
		_egacff.Value = "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return _egacff, nil
}
func NewCT_Error() *CT_Error { _cdeaf := &CT_Error{}; return _cdeaf }
func (_aagaae ST_Qualifier) String() string {
	switch _aagaae {
	case 0:
		return ""
	case 1:
		return "d\u006f\u0075\u0062\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 2:
		return "s\u0069\u006e\u0067\u006c\u0065\u0051\u0075\u006f\u0074\u0065"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_SmartTags and its children
func (_badfg *CT_SmartTags) Validate() error {
	return _badfg.ValidateWithPath("\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073")
}
func (_ggddc ST_TargetScreenSize) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fefbbfe := _b.Attr{}
	_fefbbfe.Name = name
	switch _ggddc {
	case ST_TargetScreenSizeUnset:
		_fefbbfe.Value = ""
	case ST_TargetScreenSize544x376:
		_fefbbfe.Value = "\u00354\u0034\u0078\u0033\u0037\u0036"
	case ST_TargetScreenSize640x480:
		_fefbbfe.Value = "\u00364\u0030\u0078\u0034\u0038\u0030"
	case ST_TargetScreenSize720x512:
		_fefbbfe.Value = "\u00372\u0030\u0078\u0035\u0031\u0032"
	case ST_TargetScreenSize800x600:
		_fefbbfe.Value = "\u00380\u0030\u0078\u0036\u0030\u0030"
	case ST_TargetScreenSize1024x768:
		_fefbbfe.Value = "\u0031\u0030\u0032\u0034\u0078\u0037\u0036\u0038"
	case ST_TargetScreenSize1152x882:
		_fefbbfe.Value = "\u0031\u0031\u0035\u0032\u0078\u0038\u0038\u0032"
	case ST_TargetScreenSize1152x900:
		_fefbbfe.Value = "\u0031\u0031\u0035\u0032\u0078\u0039\u0030\u0030"
	case ST_TargetScreenSize1280x1024:
		_fefbbfe.Value = "\u00312\u0038\u0030\u0078\u0031\u0030\u00324"
	case ST_TargetScreenSize1600x1200:
		_fefbbfe.Value = "\u00316\u0030\u0030\u0078\u0031\u0032\u00300"
	case ST_TargetScreenSize1800x1440:
		_fefbbfe.Value = "\u00318\u0030\u0030\u0078\u0031\u0034\u00340"
	case ST_TargetScreenSize1920x1200:
		_fefbbfe.Value = "\u00319\u0032\u0030\u0078\u0031\u0032\u00300"
	}
	return _fefbbfe, nil
}

const (
	ST_WebSourceTypeUnset      ST_WebSourceType = 0
	ST_WebSourceTypeSheet      ST_WebSourceType = 1
	ST_WebSourceTypePrintArea  ST_WebSourceType = 2
	ST_WebSourceTypeAutoFilter ST_WebSourceType = 3
	ST_WebSourceTypeRange      ST_WebSourceType = 4
	ST_WebSourceTypeChart      ST_WebSourceType = 5
	ST_WebSourceTypePivotTable ST_WebSourceType = 6
	ST_WebSourceTypeQuery      ST_WebSourceType = 7
	ST_WebSourceTypeLabel      ST_WebSourceType = 8
)

// Validate validates the CT_WorkbookProtection and its children
func (_cffgb *CT_WorkbookProtection) Validate() error {
	return _cffgb.ValidateWithPath("C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e")
}
func (_fdccdg ST_Qualifier) ValidateWithPath(path string) error {
	switch _fdccdg {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fdccdg))
	}
	return nil
}

type ST_PrintError byte

func (_eabdc ST_FormatAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eabdc.String(), start)
}
func (_eadec ST_HorizontalAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eadec.String(), start)
}
func (_fgagd *CT_PivotFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcae := range start.Attr {
		if _gcae.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgdbg, _fbebfe := _g.ParseUint(_gcae.Value, 10, 32)
			if _fbebfe != nil {
				return _fbebfe
			}
			_dfdcag := uint32(_dgdbg)
			_fgagd.CountAttr = &_dfdcag
			continue
		}
	}
_cdegb:
	for {
		_geeca, _edcab := d.Token()
		if _edcab != nil {
			return _edcab
		}
		switch _ggdffa := _geeca.(type) {
		case _b.StartElement:
			switch _ggdffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}:
				_dgbbb := NewCT_PivotField()
				if _abbc := d.DecodeElement(_dgbbb, &_ggdffa); _abbc != nil {
					return _abbc
				}
				_fgagd.PivotField = append(_fgagd.PivotField, _dgbbb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069e\u006cd\u0073\u0020\u0025\u0076", _ggdffa.Name)
				if _cccgb := d.Skip(); _cccgb != nil {
					return _cccgb
				}
			}
		case _b.EndElement:
			break _cdegb
		case _b.CharData:
		}
	}
	return nil
}
func (_geaa *CT_CellStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _geaa.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_geaa.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _geaa.XfIdAttr)})
	if _geaa.BuiltinIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062u\u0069\u006c\u0074\u0069\u006e\u0049d"}, Value: _a.Sprintf("\u0025\u0076", *_geaa.BuiltinIdAttr)})
	}
	if _geaa.ILevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u004c\u0065\u0076\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_geaa.ILevelAttr)})
	}
	if _geaa.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_geaa.HiddenAttr))})
	}
	if _geaa.CustomBuiltinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0042\u0075\u0069\u006c\u0074\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_geaa.CustomBuiltinAttr))})
	}
	e.EncodeToken(start)
	if _geaa.ExtLst != nil {
		_cbdb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_geaa.ExtLst, _cbdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientStop and its children
func (_bdabc *CT_GradientStop) Validate() error {
	return _bdabc.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}
func (_ebce *CT_Sheets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgcdec:
	for {
		_ccacdd, _ffbcc := d.Token()
		if _ffbcc != nil {
			return _ffbcc
		}
		switch _cgdaa := _ccacdd.(type) {
		case _b.StartElement:
			switch _cgdaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065e\u0074"}:
				_agead := NewCT_Sheet()
				if _cffaec := d.DecodeElement(_agead, &_cgdaa); _cffaec != nil {
					return _cffaec
				}
				_ebce.Sheet = append(_ebce.Sheet, _agead)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0053\u0068\u0065e\u0074\u0073 \u0025\u0076", _cgdaa.Name)
				if _egdfe := d.Skip(); _egdfe != nil {
					return _egdfe
				}
			}
		case _b.EndElement:
			break _cgcdec
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Formats and its children
func (_bbada *CT_Formats) Validate() error {
	return _bbada.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

// ValidateWithPath validates the CT_PivotField and its children, prefixing error messages with path
func (_bdcda *CT_PivotField) ValidateWithPath(path string) error {
	if _gabge := _bdcda.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _gabge != nil {
		return _gabge
	}
	if _dgbbg := _bdcda.SortTypeAttr.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _dgbbg != nil {
		return _dgbbg
	}
	if _bdcda.Items != nil {
		if _bfacd := _bdcda.Items.ValidateWithPath(path + "\u002f\u0049\u0074\u0065\u006d\u0073"); _bfacd != nil {
			return _bfacd
		}
	}
	if _bdcda.AutoSortScope != nil {
		if _acddd := _bdcda.AutoSortScope.ValidateWithPath(path + "\u002f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074S\u0063\u006f\u0070\u0065"); _acddd != nil {
			return _acddd
		}
	}
	if _bdcda.ExtLst != nil {
		if _aegff := _bdcda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aegff != nil {
			return _aegff
		}
	}
	return nil
}

const (
	ST_TableStyleTypeUnset                  ST_TableStyleType = 0
	ST_TableStyleTypeWholeTable             ST_TableStyleType = 1
	ST_TableStyleTypeHeaderRow              ST_TableStyleType = 2
	ST_TableStyleTypeTotalRow               ST_TableStyleType = 3
	ST_TableStyleTypeFirstColumn            ST_TableStyleType = 4
	ST_TableStyleTypeLastColumn             ST_TableStyleType = 5
	ST_TableStyleTypeFirstRowStripe         ST_TableStyleType = 6
	ST_TableStyleTypeSecondRowStripe        ST_TableStyleType = 7
	ST_TableStyleTypeFirstColumnStripe      ST_TableStyleType = 8
	ST_TableStyleTypeSecondColumnStripe     ST_TableStyleType = 9
	ST_TableStyleTypeFirstHeaderCell        ST_TableStyleType = 10
	ST_TableStyleTypeLastHeaderCell         ST_TableStyleType = 11
	ST_TableStyleTypeFirstTotalCell         ST_TableStyleType = 12
	ST_TableStyleTypeLastTotalCell          ST_TableStyleType = 13
	ST_TableStyleTypeFirstSubtotalColumn    ST_TableStyleType = 14
	ST_TableStyleTypeSecondSubtotalColumn   ST_TableStyleType = 15
	ST_TableStyleTypeThirdSubtotalColumn    ST_TableStyleType = 16
	ST_TableStyleTypeFirstSubtotalRow       ST_TableStyleType = 17
	ST_TableStyleTypeSecondSubtotalRow      ST_TableStyleType = 18
	ST_TableStyleTypeThirdSubtotalRow       ST_TableStyleType = 19
	ST_TableStyleTypeBlankRow               ST_TableStyleType = 20
	ST_TableStyleTypeFirstColumnSubheading  ST_TableStyleType = 21
	ST_TableStyleTypeSecondColumnSubheading ST_TableStyleType = 22
	ST_TableStyleTypeThirdColumnSubheading  ST_TableStyleType = 23
	ST_TableStyleTypeFirstRowSubheading     ST_TableStyleType = 24
	ST_TableStyleTypeSecondRowSubheading    ST_TableStyleType = 25
	ST_TableStyleTypeThirdRowSubheading     ST_TableStyleType = 26
	ST_TableStyleTypePageFieldLabels        ST_TableStyleType = 27
	ST_TableStyleTypePageFieldValues        ST_TableStyleType = 28
)

func (_cdgga *CT_MergeCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdgga.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cdgga.CountAttr)})
	}
	e.EncodeToken(start)
	_cbagfb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c"}}
	for _, _ddeac := range _cdgga.MergeCell {
		e.EncodeElement(_ddeac, _cbagfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextFields and its children
func (_ccbead *CT_TextFields) Validate() error {
	return _ccbead.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_gaggf ST_GradientType) String() string {
	switch _gaggf {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065\u0061\u0072"
	case 2:
		return "\u0070\u0061\u0074\u0068"
	}
	return ""
}

// Validate validates the CT_FieldUsage and its children
func (_cacbb *CT_FieldUsage) Validate() error {
	return _cacbb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065")
}
func (_cgddf *CT_TableColumn) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cgddf.IdAttr)})
	if _cgddf.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.UniqueNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _cgddf.NameAttr)})
	if _cgddf.TotalsRowFunctionAttr != ST_TotalsRowFunctionUnset {
		_bgabac, _ggbf := _cgddf.TotalsRowFunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u0075\u006ec\u0074\u0069\u006f\u006e"})
		if _ggbf != nil {
			return _ggbf
		}
		start.Attr = append(start.Attr, _bgabac)
	}
	if _cgddf.TotalsRowLabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077L\u0061\u0062\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.TotalsRowLabelAttr)})
	}
	if _cgddf.QueryTableFieldIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069e\u006c\u0064\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.QueryTableFieldIdAttr)})
	}
	if _cgddf.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.HeaderRowDxfIdAttr)})
	}
	if _cgddf.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.DataDxfIdAttr)})
	}
	if _cgddf.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.TotalsRowDxfIdAttr)})
	}
	if _cgddf.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.HeaderRowCellStyleAttr)})
	}
	if _cgddf.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.DataCellStyleAttr)})
	}
	if _cgddf.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cgddf.TotalsRowCellStyleAttr)})
	}
	e.EncodeToken(start)
	if _cgddf.CalculatedColumnFormula != nil {
		_ebedgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u0043\u006f\u006c\u0075\u006d\u006e\u0046\u006f\u0072m\u0075\u006c\u0061"}}
		e.EncodeElement(_cgddf.CalculatedColumnFormula, _ebedgf)
	}
	if _cgddf.TotalsRowFormula != nil {
		_ggfdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074ot\u0061\u006c\u0073\u0052\u006f\u0077\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		e.EncodeElement(_cgddf.TotalsRowFormula, _ggfdg)
	}
	if _cgddf.XmlColumnPr != nil {
		_cdefg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072"}}
		e.EncodeElement(_cgddf.XmlColumnPr, _cdefg)
	}
	if _cgddf.ExtLst != nil {
		_ebgadb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cgddf.ExtLst, _ebgadb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataBar() *CT_DataBar {
	_cgcfa := &CT_DataBar{}
	_cgcfa.Color = NewCT_Color()
	return _cgcfa
}
func (_edde *CT_DataFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _edde.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_edde.CountAttr)})
	}
	e.EncodeToken(start)
	_gafab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ad\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064"}}
	for _, _fegbb := range _edde.DataField {
		e.EncodeElement(_fegbb, _gafab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbfbc *CT_PivotField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcdde := range start.Attr {
		if _gcdde.Name.Local == "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0046\u0069\u006c\u0074\u0065\u0072" {
			_ffedcf, _cfcab := _g.ParseBool(_gcdde.Value)
			if _cfcab != nil {
				return _cfcab
			}
			_cbfbc.MeasureFilterAttr = &_ffedcf
			continue
		}
		if _gcdde.Name.Local == "\u0069\u006e\u0063lu\u0064\u0065\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073\u0049\u006e\u0046\u0069\u006c\u0074\u0065\u0072" {
			_ffacc, _ggdec := _g.ParseBool(_gcdde.Value)
			if _ggdec != nil {
				return _ggdec
			}
			_cbfbc.IncludeNewItemsInFilterAttr = &_ffacc
			continue
		}
		if _gcdde.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_egfaea, _fbbefa := _g.ParseBool(_gcdde.Value)
			if _fbbefa != nil {
				return _fbbefa
			}
			_cbfbc.CompactAttr = &_egfaea
			continue
		}
		if _gcdde.Name.Local == "\u0069\u0074\u0065\u006d\u0050\u0061\u0067\u0065\u0043\u006f\u0075\u006e\u0074" {
			_bdgda, _gbdfe := _g.ParseUint(_gcdde.Value, 10, 32)
			if _gbdfe != nil {
				return _gbdfe
			}
			_bcggc := uint32(_bdgda)
			_cbfbc.ItemPageCountAttr = &_bcggc
			continue
		}
		if _gcdde.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_bfbbfa, _abgde := _g.ParseUint(_gcdde.Value, 10, 32)
			if _abgde != nil {
				return _abgde
			}
			_begadc := uint32(_bfbbfa)
			_cbfbc.NumFmtIdAttr = &_begadc
			continue
		}
		if _gcdde.Name.Local == "\u0073\u006f\u0072\u0074\u0054\u0079\u0070\u0065" {
			_cbfbc.SortTypeAttr.UnmarshalXMLAttr(_gcdde)
			continue
		}
		if _gcdde.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_efgd, _gfaec := _g.ParseBool(_gcdde.Value)
			if _gfaec != nil {
				return _gfaec
			}
			_cbfbc.OutlineAttr = &_efgd
			continue
		}
		if _gcdde.Name.Local == "\u0064\u0061\u0074\u0061\u0053\u006f\u0075\u0072\u0063e\u0053\u006f\u0072\u0074" {
			_eeebcc, _geeff := _g.ParseBool(_gcdde.Value)
			if _geeff != nil {
				return _geeff
			}
			_cbfbc.DataSourceSortAttr = &_eeebcc
			continue
		}
		if _gcdde.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0052\u006fw" {
			_gcccg, _aadfd := _g.ParseBool(_gcdde.Value)
			if _aadfd != nil {
				return _aadfd
			}
			_cbfbc.DragToRowAttr = &_gcccg
			continue
		}
		if _gcdde.Name.Local == "\u006eo\u006eA\u0075\u0074\u006f\u0053\u006fr\u0074\u0044e\u0066\u0061\u0075\u006c\u0074" {
			_ggcge, _bggcb := _g.ParseBool(_gcdde.Value)
			if _bggcb != nil {
				return _bggcb
			}
			_cbfbc.NonAutoSortDefaultAttr = &_ggcge
			continue
		}
		if _gcdde.Name.Local == "\u006d\u0075\u006c\u0074i\u0070\u006c\u0065\u0049\u0074\u0065\u006d\u0053\u0065\u006ce\u0063t\u0069\u006f\u006e\u0041\u006c\u006c\u006fw\u0065\u0064" {
			_afaed, _fgeff := _g.ParseBool(_gcdde.Value)
			if _fgeff != nil {
				return _fgeff
			}
			_cbfbc.MultipleItemSelectionAllowedAttr = &_afaed
			continue
		}
		if _gcdde.Name.Local == "\u0072\u0061\u006e\u006b\u0042\u0079" {
			_cacc, _fbdef := _g.ParseUint(_gcdde.Value, 10, 32)
			if _fbdef != nil {
				return _fbdef
			}
			_fgafee := uint32(_cacc)
			_cbfbc.RankByAttr = &_fgafee
			continue
		}
		if _gcdde.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_bgefb, _cedgd := _g.ParseBool(_gcdde.Value)
			if _cedgd != nil {
				return _cedgd
			}
			_cbfbc.StdDevSubtotalAttr = &_bgefb
			continue
		}
		if _gcdde.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_agcde, _feffa := _g.ParseBool(_gcdde.Value)
			if _feffa != nil {
				return _feffa
			}
			_cbfbc.CountASubtotalAttr = &_agcde
			continue
		}
		if _gcdde.Name.Local == "\u0061\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_aadbb, _cfcfb := _g.ParseBool(_gcdde.Value)
			if _cfcfb != nil {
				return _cfcfb
			}
			_cbfbc.AutoShowAttr = &_aadbb
			continue
		}
		if _gcdde.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0041\u0073\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_edaca, _aedff := _g.ParseBool(_gcdde.Value)
			if _aedff != nil {
				return _aedff
			}
			_cbfbc.ShowPropAsCaptionAttr = &_edaca
			continue
		}
		if _gcdde.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fffbe, _ffdcbc := _g.ParseBool(_gcdde.Value)
			if _ffdcbc != nil {
				return _ffdcbc
			}
			_cbfbc.ProductSubtotalAttr = &_fffbe
			continue
		}
		if _gcdde.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0050\u0061\u0067\u0065" {
			_gdfag, _fdcdbe := _g.ParseBool(_gcdde.Value)
			if _fdcdbe != nil {
				return _fdcdbe
			}
			_cbfbc.DragToPageAttr = &_gdfag
			continue
		}
		if _gcdde.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_efdbf, _eaffac := _g.ParseBool(_gcdde.Value)
			if _eaffac != nil {
				return _eaffac
			}
			_cbfbc.DefaultSubtotalAttr = &_efdbf
			continue
		}
		if _gcdde.Name.Local == "\u0064\u0072\u0061\u0067\u0054\u006f\u0044\u0061\u0074\u0061" {
			_ecafe, _edgfc := _g.ParseBool(_gcdde.Value)
			if _edgfc != nil {
				return _edgfc
			}
			_cbfbc.DragToDataAttr = &_ecafe
			continue
		}
		if _gcdde.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_aefgc, _eaegc := _g.ParseBool(_gcdde.Value)
			if _eaegc != nil {
				return _eaegc
			}
			_cbfbc.MaxSubtotalAttr = &_aefgc
			continue
		}
		if _gcdde.Name.Local == "\u0068\u0069\u0064e\u004e\u0065\u0077\u0049\u0074\u0065\u006d\u0073" {
			_fgcff, _ecgc := _g.ParseBool(_gcdde.Value)
			if _ecgc != nil {
				return _ecgc
			}
			_cbfbc.HideNewItemsAttr = &_fgcff
			continue
		}
		if _gcdde.Name.Local == "\u0073\u0068\u006fw\u0050\u0072\u006f\u0070\u0043\u0065\u006c\u006c" {
			_fadea, _dddge := _g.ParseBool(_gcdde.Value)
			if _dddge != nil {
				return _dddge
			}
			_cbfbc.ShowPropCellAttr = &_fadea
			continue
		}
		if _gcdde.Name.Local == "s\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0054\u006f\u0070" {
			_aggee, _bdecfc := _g.ParseBool(_gcdde.Value)
			if _bdecfc != nil {
				return _bdecfc
			}
			_cbfbc.SubtotalTopAttr = &_aggee
			continue
		}
		if _gcdde.Name.Local == "s\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u0065\u006c\u0064" {
			_acfdc, _eacdfc := _g.ParseBool(_gcdde.Value)
			if _eacdfc != nil {
				return _eacdfc
			}
			_cbfbc.ServerFieldAttr = &_acfdc
			continue
		}
		if _gcdde.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cagda, _ggbef := _gcdde.Value, error(nil)
			if _ggbef != nil {
				return _ggbef
			}
			_cbfbc.NameAttr = &_cagda
			continue
		}
		if _gcdde.Name.Local == "\u0069n\u0073e\u0072\u0074\u0050\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b" {
			_daeec, _fbgfd := _g.ParseBool(_gcdde.Value)
			if _fbgfd != nil {
				return _fbgfd
			}
			_cbfbc.InsertPageBreakAttr = &_daeec
			continue
		}
		if _gcdde.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fgeab, _cfdage := _g.ParseBool(_gcdde.Value)
			if _cfdage != nil {
				return _cfdage
			}
			_cbfbc.SumSubtotalAttr = &_fgeab
			continue
		}
		if _gcdde.Name.Local == "\u0064a\u0074\u0061\u0046\u0069\u0065\u006cd" {
			_baege, _dacbd := _g.ParseBool(_gcdde.Value)
			if _dacbd != nil {
				return _dacbd
			}
			_cbfbc.DataFieldAttr = &_baege
			continue
		}
		if _gcdde.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bacff, _beedea := _g.ParseBool(_gcdde.Value)
			if _beedea != nil {
				return _beedea
			}
			_cbfbc.AvgSubtotalAttr = &_bacff
			continue
		}
		if _gcdde.Name.Local == "t\u006f\u0070\u0041\u0075\u0074\u006f\u0053\u0068\u006f\u0077" {
			_dgade, _badbg := _g.ParseBool(_gcdde.Value)
			if _badbg != nil {
				return _badbg
			}
			_cbfbc.TopAutoShowAttr = &_dgade
			continue
		}
		if _gcdde.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fgeabe, _dbcfg := _g.ParseBool(_gcdde.Value)
			if _dbcfg != nil {
				return _dbcfg
			}
			_cbfbc.MinSubtotalAttr = &_fgeabe
			continue
		}
		if _gcdde.Name.Local == "\u0064r\u0061\u0067\u004f\u0066\u0066" {
			_effdf, _deebe := _g.ParseBool(_gcdde.Value)
			if _deebe != nil {
				return _deebe
			}
			_cbfbc.DragOffAttr = &_effdf
			continue
		}
		if _gcdde.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bagcd, _ddacf := _g.ParseBool(_gcdde.Value)
			if _ddacf != nil {
				return _ddacf
			}
			_cbfbc.CountSubtotalAttr = &_bagcd
			continue
		}
		if _gcdde.Name.Local == "u\u006ei\u0071\u0075\u0065\u004d\u0065\u006d\u0062\u0065r\u0050\u0072\u006f\u0070er\u0074\u0079" {
			_feeefd, _aebgb := _gcdde.Value, error(nil)
			if _aebgb != nil {
				return _aebgb
			}
			_cbfbc.UniqueMemberPropertyAttr = &_feeefd
			continue
		}
		if _gcdde.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dfdca, _afdfg := _g.ParseBool(_gcdde.Value)
			if _afdfg != nil {
				return _afdfg
			}
			_cbfbc.VarPSubtotalAttr = &_dfdca
			continue
		}
		if _gcdde.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fccaa, _acdad := _g.ParseBool(_gcdde.Value)
			if _acdad != nil {
				return _acdad
			}
			_cbfbc.StdDevPSubtotalAttr = &_fccaa
			continue
		}
		if _gcdde.Name.Local == "\u0073u\u0062t\u006f\u0074\u0061\u006c\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_gefdf, _cafae := _gcdde.Value, error(nil)
			if _cafae != nil {
				return _cafae
			}
			_cbfbc.SubtotalCaptionAttr = &_gefdf
			continue
		}
		if _gcdde.Name.Local == "s\u0068\u006f\u0077\u0050\u0072\u006f\u0070\u0054\u0069\u0070" {
			_bdecb, _cgfaf := _g.ParseBool(_gcdde.Value)
			if _cgfaf != nil {
				return _cgfaf
			}
			_cbfbc.ShowPropTipAttr = &_bdecb
			continue
		}
		if _gcdde.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0042\u006c\u0061n\u006b\u0052\u006f\u0077" {
			_fbacc, _ccbcc := _g.ParseBool(_gcdde.Value)
			if _ccbcc != nil {
				return _ccbcc
			}
			_cbfbc.InsertBlankRowAttr = &_fbacc
			continue
		}
		if _gcdde.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0041\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0044\u0072\u0069\u006c\u006c\u0053t\u0061\u0074\u0065" {
			_cceade, _geegcc := _g.ParseBool(_gcdde.Value)
			if _geegcc != nil {
				return _geegcc
			}
			_cbfbc.DefaultAttributeDrillStateAttr = &_cceade
			continue
		}
		if _gcdde.Name.Local == "\u0064r\u0061\u0067\u0054\u006f\u0043\u006fl" {
			_fefaba, _bece := _g.ParseBool(_gcdde.Value)
			if _bece != nil {
				return _bece
			}
			_cbfbc.DragToColAttr = &_fefaba
			continue
		}
		if _gcdde.Name.Local == "h\u0069\u0064\u0064\u0065\u006e\u004c\u0065\u0076\u0065\u006c" {
			_dbgbce, _fgdeb := _g.ParseBool(_gcdde.Value)
			if _fgdeb != nil {
				return _fgdeb
			}
			_cbfbc.HiddenLevelAttr = &_dbgbce
			continue
		}
		if _gcdde.Name.Local == "\u0061\u0078\u0069\u0073" {
			_cbfbc.AxisAttr.UnmarshalXMLAttr(_gcdde)
			continue
		}
		if _gcdde.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e\u0073" {
			_afabb, _debca := _g.ParseBool(_gcdde.Value)
			if _debca != nil {
				return _debca
			}
			_cbfbc.ShowDropDownsAttr = &_afabb
			continue
		}
		if _gcdde.Name.Local == "\u0073h\u006f\u0077\u0041\u006c\u006c" {
			_bfffb, _dgccd := _g.ParseBool(_gcdde.Value)
			if _dgccd != nil {
				return _dgccd
			}
			_cbfbc.ShowAllAttr = &_bfffb
			continue
		}
		if _gcdde.Name.Local == "\u0061\u006c\u006c\u0044\u0072\u0069\u006c\u006c\u0065\u0064" {
			_gbcef, _cbacg := _g.ParseBool(_gcdde.Value)
			if _cbacg != nil {
				return _cbacg
			}
			_cbfbc.AllDrilledAttr = &_gbcef
			continue
		}
		if _gcdde.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fcdgg, _eddaae := _g.ParseBool(_gcdde.Value)
			if _eddaae != nil {
				return _eddaae
			}
			_cbfbc.VarSubtotalAttr = &_fcdgg
			continue
		}
	}
_ccecc:
	for {
		_ggfde, _abdgc := d.Token()
		if _abdgc != nil {
			return _abdgc
		}
		switch _febba := _ggfde.(type) {
		case _b.StartElement:
			switch _febba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065m\u0073"}:
				_cbfbc.Items = NewCT_Items()
				if _bcfbc := d.DecodeElement(_cbfbc.Items, &_febba); _bcfbc != nil {
					return _bcfbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065"}:
				_cbfbc.AutoSortScope = NewCT_AutoSortScope()
				if _dfbef := d.DecodeElement(_cbfbc.AutoSortScope, &_febba); _dfbef != nil {
					return _dfbef
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbfbc.ExtLst = NewCT_ExtensionList()
				if _bgbed := d.DecodeElement(_cbfbc.ExtLst, &_febba); _bgbed != nil {
					return _bgbed
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064 \u0025\u0076", _febba.Name)
				if _bbdcg := d.Skip(); _bbdcg != nil {
					return _bbdcg
				}
			}
		case _b.EndElement:
			break _ccecc
		case _b.CharData:
		}
	}
	return nil
}

type CT_DataField struct {

	// Data Field Name
	NameAttr *string

	// Field
	FldAttr uint32

	// Subtotal
	SubtotalAttr ST_DataConsolidateFunction

	// Show Data As Display Format
	ShowDataAsAttr ST_ShowDataAs

	// 'Show Data As' Base Field
	BaseFieldAttr *int32

	// 'Show Data As' Base Setting
	BaseItemAttr *uint32

	// Number Format Id
	NumFmtIdAttr *uint32

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_ccbf *CT_ExternalLinkChoice) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ccbf.ExternalBook != nil {
		_adbbd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ae\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}}
		e.EncodeElement(_ccbf.ExternalBook, _adbbd)
	}
	if _ccbf.DdeLink != nil {
		_cadd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_ccbf.DdeLink, _cadd)
	}
	if _ccbf.OleLink != nil {
		_ccacd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0065\u004c\u0069\u006e\u006b"}}
		e.EncodeElement(_ccbf.OleLink, _ccacd)
	}
	return nil
}
func NewCT_Fills() *CT_Fills { _dggbf := &CT_Fills{}; return _dggbf }
func (_aaaec *CT_ServerFormats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aaaec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aaaec.CountAttr)})
	}
	e.EncodeToken(start)
	if _aaaec.ServerFormat != nil {
		_cebba := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}}
		for _, _bgeega := range _aaaec.ServerFormat {
			e.EncodeElement(_bgeega, _cebba)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbfbc *CT_TablePart) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gbfbc.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_feadg *ST_GrowShrinkType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gegcfd, _gaceag := d.Token()
	if _gaceag != nil {
		return _gaceag
	}
	if _bcddb, _egcfgd := _gegcfd.(_b.EndElement); _egcfgd && _bcddb.Name == start.Name {
		*_feadg = 1
		return nil
	}
	if _efcfcb, _cfcbb := _gegcfd.(_b.CharData); !_cfcbb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gegcfd)
	} else {
		switch string(_efcfcb) {
		case "":
			*_feadg = 0
		case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
			*_feadg = 1
		case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
			*_feadg = 2
		case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
			*_feadg = 3
		}
	}
	_gegcfd, _gaceag = d.Token()
	if _gaceag != nil {
		return _gaceag
	}
	if _bfabc, _cgdfcc := _gegcfd.(_b.EndElement); _cgdfcc && _bfabc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gegcfd)
}

// ValidateWithPath validates the CT_PatternFill and its children, prefixing error messages with path
func (_dcbefg *CT_PatternFill) ValidateWithPath(path string) error {
	if _ccfcg := _dcbefg.PatternTypeAttr.ValidateWithPath(path + "\u002f\u0050a\u0074\u0074\u0065r\u006e\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072"); _ccfcg != nil {
		return _ccfcg
	}
	if _dcbefg.FgColor != nil {
		if _bdca := _dcbefg.FgColor.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006f\u006c\u006f\u0072"); _bdca != nil {
			return _bdca
		}
	}
	if _dcbefg.BgColor != nil {
		if _gcdfgf := _dcbefg.BgColor.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006f\u006c\u006f\u0072"); _gcdfgf != nil {
			return _gcdfgf
		}
	}
	return nil
}
func (_fbafb ST_DateTimeGrouping) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbccc := _b.Attr{}
	_fbccc.Name = name
	switch _fbafb {
	case ST_DateTimeGroupingUnset:
		_fbccc.Value = ""
	case ST_DateTimeGroupingYear:
		_fbccc.Value = "\u0079\u0065\u0061\u0072"
	case ST_DateTimeGroupingMonth:
		_fbccc.Value = "\u006d\u006f\u006et\u0068"
	case ST_DateTimeGroupingDay:
		_fbccc.Value = "\u0064\u0061\u0079"
	case ST_DateTimeGroupingHour:
		_fbccc.Value = "\u0068\u006f\u0075\u0072"
	case ST_DateTimeGroupingMinute:
		_fbccc.Value = "\u006d\u0069\u006e\u0075\u0074\u0065"
	case ST_DateTimeGroupingSecond:
		_fbccc.Value = "\u0073\u0065\u0063\u006f\u006e\u0064"
	}
	return _fbccc, nil
}

// Validate validates the CT_CellWatch and its children
func (_debbg *CT_CellWatch) Validate() error {
	return _debbg.ValidateWithPath("\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068")
}
func (_efdebc *CT_PivotSelection) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efdebc.PaneAttr != ST_PaneUnset {
		_bbfea, _acgad := _efdebc.PaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0070\u0061\u006e\u0065"})
		if _acgad != nil {
			return _acgad
		}
		start.Attr = append(start.Attr, _bbfea)
	}
	if _efdebc.ShowHeaderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efdebc.ShowHeaderAttr))})
	}
	if _efdebc.LabelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0061\u0062e\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efdebc.LabelAttr))})
	}
	if _efdebc.DataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efdebc.DataAttr))})
	}
	if _efdebc.ExtendableAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0078\u0074\u0065\u006e\u0064\u0061\u0062\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efdebc.ExtendableAttr))})
	}
	if _efdebc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.CountAttr)})
	}
	if _efdebc.AxisAttr != ST_AxisUnset {
		_dacbda, _acefe := _efdebc.AxisAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0078\u0069\u0073"})
		if _acefe != nil {
			return _acefe
		}
		start.Attr = append(start.Attr, _dacbda)
	}
	if _efdebc.DimensionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.DimensionAttr)})
	}
	if _efdebc.StartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061r\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.StartAttr)})
	}
	if _efdebc.MinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.MinAttr)})
	}
	if _efdebc.MaxAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.MaxAttr)})
	}
	if _efdebc.ActiveRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0052\u006fw"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.ActiveRowAttr)})
	}
	if _efdebc.ActiveColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061c\u0074\u0069\u0076\u0065\u0043\u006fl"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.ActiveColAttr)})
	}
	if _efdebc.PreviousRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.PreviousRowAttr)})
	}
	if _efdebc.PreviousColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0072\u0065\u0076\u0069\u006f\u0075\u0073\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.PreviousColAttr)})
	}
	if _efdebc.ClickAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006c\u0069c\u006b"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.ClickAttr)})
	}
	if _efdebc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_efdebc.IdAttr)})
	}
	e.EncodeToken(start)
	_cafc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_efdebc.PivotArea, _cafc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ObjectAnchor and its children, prefixing error messages with path
func (_dbgea *CT_ObjectAnchor) ValidateWithPath(path string) error {
	if _abdea := _dbgea.From.ValidateWithPath(path + "\u002f\u0046\u0072o\u006d"); _abdea != nil {
		return _abdea
	}
	if _gcbfa := _dbgea.To.ValidateWithPath(path + "\u002f\u0054\u006f"); _gcbfa != nil {
		return _gcbfa
	}
	return nil
}

// Validate validates the CT_BookViews and its children
func (_cae *CT_BookViews) Validate() error {
	return _cae.ValidateWithPath("\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073")
}
func (_cacbcac *CT_Scenarios) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _becce := range start.Attr {
		if _becce.Name.Local == "\u0063u\u0072\u0072\u0065\u006e\u0074" {
			_acfef, _aceca := _g.ParseUint(_becce.Value, 10, 32)
			if _aceca != nil {
				return _aceca
			}
			_efcac := uint32(_acfef)
			_cacbcac.CurrentAttr = &_efcac
			continue
		}
		if _becce.Name.Local == "\u0073\u0068\u006f\u0077" {
			_ecgcd, _bffgce := _g.ParseUint(_becce.Value, 10, 32)
			if _bffgce != nil {
				return _bffgce
			}
			_bedbb := uint32(_ecgcd)
			_cacbcac.ShowAttr = &_bedbb
			continue
		}
		if _becce.Name.Local == "\u0073\u0071\u0072e\u0066" {
			_cdggcd, _caaba := ParseSliceST_Sqref(_becce.Value)
			if _caaba != nil {
				return _caaba
			}
			_cacbcac.SqrefAttr = &_cdggcd
			continue
		}
	}
_ccbaa:
	for {
		_dcdfgc, _accdgc := d.Token()
		if _accdgc != nil {
			return _accdgc
		}
		switch _ddgdg := _dcdfgc.(type) {
		case _b.StartElement:
			switch _ddgdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}:
				_gdbggb := NewCT_Scenario()
				if _ecgdec := d.DecodeElement(_gdbggb, &_ddgdg); _ecgdec != nil {
					return _ecgdec
				}
				_cacbcac.Scenario = append(_cacbcac.Scenario, _gdbggb)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0063\u0065n\u0061\u0072\u0069\u006f\u0073\u0020\u0025\u0076", _ddgdg.Name)
				if _abbba := d.Skip(); _abbba != nil {
					return _abbba
				}
			}
		case _b.EndElement:
			break _ccbaa
		case _b.CharData:
		}
	}
	return nil
}
func (_gdgfd *CT_Dxf) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bedff:
	for {
		_cegee, _cfdag := d.Token()
		if _cfdag != nil {
			return _cfdag
		}
		switch _eecc := _cegee.(type) {
		case _b.StartElement:
			switch _eecc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_gdgfd.Font = NewCT_Font()
				if _bddga := d.DecodeElement(_gdgfd.Font, &_eecc); _bddga != nil {
					return _bddga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0075\u006d\u0046\u006d\u0074"}:
				_gdgfd.NumFmt = NewCT_NumFmt()
				if _ebgf := d.DecodeElement(_gdgfd.NumFmt, &_eecc); _ebgf != nil {
					return _ebgf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_gdgfd.Fill = NewCT_Fill()
				if _cdbdc := d.DecodeElement(_gdgfd.Fill, &_eecc); _cdbdc != nil {
					return _cdbdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et"}:
				_gdgfd.Alignment = NewCT_CellAlignment()
				if _ccfd := d.DecodeElement(_gdgfd.Alignment, &_eecc); _ccfd != nil {
					return _ccfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0072\u0064\u0065\u0072"}:
				_gdgfd.Border = NewCT_Border()
				if _fdgbbc := d.DecodeElement(_gdgfd.Border, &_eecc); _fdgbbc != nil {
					return _fdgbbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_gdgfd.Protection = NewCT_CellProtection()
				if _cgfdd := d.DecodeElement(_gdgfd.Protection, &_eecc); _cgfdd != nil {
					return _cgfdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdgfd.ExtLst = NewCT_ExtensionList()
				if _dgdgg := d.DecodeElement(_gdgfd.ExtLst, &_eecc); _dgdgg != nil {
					return _dgdgg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0078\u0066\u0020\u0025\u0076", _eecc.Name)
				if _afcfba := d.Skip(); _afcfba != nil {
					return _afcfba
				}
			}
		case _b.EndElement:
			break _bedff
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionCellChange and its children, prefixing error messages with path
func (_bfgaf *CT_RevisionCellChange) ValidateWithPath(path string) error {
	if _bfgaf.Oc != nil {
		if _cbgbf := _bfgaf.Oc.ValidateWithPath(path + "\u002f\u004f\u0063"); _cbgbf != nil {
			return _cbgbf
		}
	}
	if _cbfca := _bfgaf.Nc.ValidateWithPath(path + "\u002f\u004e\u0063"); _cbfca != nil {
		return _cbfca
	}
	if _bfgaf.Odxf != nil {
		if _baeac := _bfgaf.Odxf.ValidateWithPath(path + "\u002f\u004f\u0064x\u0066"); _baeac != nil {
			return _baeac
		}
	}
	if _bfgaf.Ndxf != nil {
		if _dgdbcg := _bfgaf.Ndxf.ValidateWithPath(path + "\u002f\u004e\u0064x\u0066"); _dgdbcg != nil {
			return _dgdbcg
		}
	}
	if _bfgaf.ExtLst != nil {
		if _abeeaa := _bfgaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abeeaa != nil {
			return _abeeaa
		}
	}
	return nil
}
func (_fgcbg ST_CellFormulaType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgcbg.String(), start)
}
func (_abeae *CT_CustomSheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cbcf:
	for {
		_decf, _begc := d.Token()
		if _begc != nil {
			return _begc
		}
		switch _afcf := _decf.(type) {
		case _b.StartElement:
			switch _afcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_caaee := NewCT_CustomSheetView()
				if _fgaf := d.DecodeElement(_caaee, &_afcf); _fgaf != nil {
					return _fgaf
				}
				_abeae.CustomSheetView = append(_abeae.CustomSheetView, _caaee)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0053he\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _afcf.Name)
				if _ggaff := d.Skip(); _ggaff != nil {
					return _ggaff
				}
			}
		case _b.EndElement:
			break _cbcf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleObjects and its children, prefixing error messages with path
func (_cffae *CT_OleObjects) ValidateWithPath(path string) error {
	for _fdedef, _eddfec := range _cffae.OleObject {
		if _ebdfeb := _eddfec.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u004f\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _fdedef)); _ebdfeb != nil {
			return _ebdfeb
		}
	}
	return nil
}

type CT_SharedUser struct {

	// User Revisions GUID
	GuidAttr string

	// User Name
	NameAttr string

	// User Id
	IdAttr int32

	// Date Time
	DateTimeAttr _d.Time
	ExtLst       *CT_ExtensionList
}

func (_ceecb *CT_CustomProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egea := range start.Attr {
		if _egea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _egea.Name.Local == "\u0069\u0064" || _egea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _egea.Name.Local == "\u0069\u0064" {
			_caaga, _defef := _egea.Value, error(nil)
			if _defef != nil {
				return _defef
			}
			_ceecb.IdAttr = _caaga
			continue
		}
		if _egea.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cdde, _bbfdb := _egea.Value, error(nil)
			if _bbfdb != nil {
				return _bbfdb
			}
			_ceecb.NameAttr = _cdde
			continue
		}
	}
	for {
		_dagb, _cbfbb := d.Token()
		if _cbfbb != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079: \u0025\u0073", _cbfbb)
		}
		if _eaecg, _cdcfc := _dagb.(_b.EndElement); _cdcfc && _eaecg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffaead ST_Objects) String() string {
	switch _ffaead {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_MetadataBlocks and its children, prefixing error messages with path
func (_gdfdf *CT_MetadataBlocks) ValidateWithPath(path string) error {
	for _dfcfa, _fbeee := range _gdfdf.Bk {
		if _becgg := _fbeee.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0042\u006b\u005b\u0025\u0064]", path, _dfcfa)); _becgg != nil {
			return _becgg
		}
	}
	return nil
}
func (_afeb *CT_ExternalReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _afeb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GroupLevels and its children
func (_aace *CT_GroupLevels) Validate() error {
	return _aace.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073")
}

// Validate validates the CT_PhoneticPr and its children
func (_aaedf *CT_PhoneticPr) Validate() error {
	return _aaedf.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072")
}
func (_cabgb *CT_Macrosheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cabgb.SheetData = NewCT_SheetData()
_fdccgb:
	for {
		_gggf, _dfbadg := d.Token()
		if _dfbadg != nil {
			return _dfbadg
		}
		switch _aeda := _gggf.(type) {
		case _b.StartElement:
			switch _aeda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_cabgb.SheetPr = NewCT_SheetPr()
				if _fdacb := d.DecodeElement(_cabgb.SheetPr, &_aeda); _fdacb != nil {
					return _fdacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_cabgb.Dimension = NewCT_SheetDimension()
				if _cffbe := d.DecodeElement(_cabgb.Dimension, &_aeda); _cffbe != nil {
					return _cffbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cabgb.SheetViews = NewCT_SheetViews()
				if _fgefc := d.DecodeElement(_cabgb.SheetViews, &_aeda); _fgefc != nil {
					return _fgefc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_cabgb.SheetFormatPr = NewCT_SheetFormatPr()
				if _gfcbc := d.DecodeElement(_cabgb.SheetFormatPr, &_aeda); _gfcbc != nil {
					return _gfcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dafcc := NewCT_Cols()
				if _ababad := d.DecodeElement(_dafcc, &_aeda); _ababad != nil {
					return _ababad
				}
				_cabgb.Cols = append(_cabgb.Cols, _dafcc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _gbcdd := d.DecodeElement(_cabgb.SheetData, &_aeda); _gbcdd != nil {
					return _gbcdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_cabgb.SheetProtection = NewCT_SheetProtection()
				if _cgafc := d.DecodeElement(_cabgb.SheetProtection, &_aeda); _cgafc != nil {
					return _cgafc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cabgb.AutoFilter = NewCT_AutoFilter()
				if _debeb := d.DecodeElement(_cabgb.AutoFilter, &_aeda); _debeb != nil {
					return _debeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_cabgb.SortState = NewCT_SortState()
				if _dggae := d.DecodeElement(_cabgb.SortState, &_aeda); _dggae != nil {
					return _dggae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_cabgb.DataConsolidate = NewCT_DataConsolidate()
				if _ebeec := d.DecodeElement(_cabgb.DataConsolidate, &_aeda); _ebeec != nil {
					return _ebeec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_cabgb.CustomSheetViews = NewCT_CustomSheetViews()
				if _fgbae := d.DecodeElement(_cabgb.CustomSheetViews, &_aeda); _fgbae != nil {
					return _fgbae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_cabgb.PhoneticPr = NewCT_PhoneticPr()
				if _edbdg := d.DecodeElement(_cabgb.PhoneticPr, &_aeda); _edbdg != nil {
					return _edbdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_dgddf := NewCT_ConditionalFormatting()
				if _ccfae := d.DecodeElement(_dgddf, &_aeda); _ccfae != nil {
					return _ccfae
				}
				_cabgb.ConditionalFormatting = append(_cabgb.ConditionalFormatting, _dgddf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_cabgb.PrintOptions = NewCT_PrintOptions()
				if _bedda := d.DecodeElement(_cabgb.PrintOptions, &_aeda); _bedda != nil {
					return _bedda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_cabgb.PageMargins = NewCT_PageMargins()
				if _dadcc := d.DecodeElement(_cabgb.PageMargins, &_aeda); _dadcc != nil {
					return _dadcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_cabgb.PageSetup = NewCT_PageSetup()
				if _bfgg := d.DecodeElement(_cabgb.PageSetup, &_aeda); _bfgg != nil {
					return _bfgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_cabgb.HeaderFooter = NewCT_HeaderFooter()
				if _ggfeg := d.DecodeElement(_cabgb.HeaderFooter, &_aeda); _ggfeg != nil {
					return _ggfeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_cabgb.RowBreaks = NewCT_PageBreak()
				if _bfbbbc := d.DecodeElement(_cabgb.RowBreaks, &_aeda); _bfbbbc != nil {
					return _bfbbbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_cabgb.ColBreaks = NewCT_PageBreak()
				if _ccfcc := d.DecodeElement(_cabgb.ColBreaks, &_aeda); _ccfcc != nil {
					return _ccfcc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_cabgb.CustomProperties = NewCT_CustomProperties()
				if _bgdc := d.DecodeElement(_cabgb.CustomProperties, &_aeda); _bgdc != nil {
					return _bgdc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_cabgb.Drawing = NewCT_Drawing()
				if _fcbgg := d.DecodeElement(_cabgb.Drawing, &_aeda); _fcbgg != nil {
					return _fcbgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_cabgb.LegacyDrawing = NewCT_LegacyDrawing()
				if _acaca := d.DecodeElement(_cabgb.LegacyDrawing, &_aeda); _acaca != nil {
					return _acaca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_cabgb.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _adcagc := d.DecodeElement(_cabgb.LegacyDrawingHF, &_aeda); _adcagc != nil {
					return _adcagc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_cabgb.DrawingHF = NewCT_DrawingHF()
				if _dabdg := d.DecodeElement(_cabgb.DrawingHF, &_aeda); _dabdg != nil {
					return _dabdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_cabgb.Picture = NewCT_SheetBackgroundPicture()
				if _cfgdg := d.DecodeElement(_cabgb.Picture, &_aeda); _cfgdg != nil {
					return _cfgdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_cabgb.OleObjects = NewCT_OleObjects()
				if _cdfbb := d.DecodeElement(_cabgb.OleObjects, &_aeda); _cdfbb != nil {
					return _cdfbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cabgb.ExtLst = NewCT_ExtensionList()
				if _gdgfed := d.DecodeElement(_cabgb.ExtLst, &_aeda); _gdgfed != nil {
					return _gdgfed
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004da\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _aeda.Name)
				if _dcgdb := d.Skip(); _dcgdb != nil {
					return _dcgdb
				}
			}
		case _b.EndElement:
			break _fdccgb
		case _b.CharData:
		}
	}
	return nil
}
func NewExternalLink() *ExternalLink {
	_affcf := &ExternalLink{}
	_affcf.CT_ExternalLink = *NewCT_ExternalLink()
	return _affcf
}
func (_cgbea ST_Orientation) Validate() error { return _cgbea.ValidateWithPath("") }

type CT_PCDSDTCEntries struct {

	// Tuple Count
	CountAttr *uint32

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String
}

func (_dcgcc ST_ConditionalFormattingOperator) Validate() error { return _dcgcc.ValidateWithPath("") }

// ValidateWithPath validates the CT_RowHierarchiesUsage and its children, prefixing error messages with path
func (_cdceef *CT_RowHierarchiesUsage) ValidateWithPath(path string) error {
	for _ggbg, _dddfe := range _cdceef.RowHierarchyUsage {
		if _ggaaac := _dddfe.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0052\u006f\u0077\u0048\u0069\u0065\u0072\u0061\u0072\u0063h\u0079\u0055\u0073\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _ggbg)); _ggaaac != nil {
			return _ggaaac
		}
	}
	return nil
}
func (_fcbba *SingleXmlCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcbba.CT_SingleXmlCells = *NewCT_SingleXmlCells()
_bcgca:
	for {
		_gffece, _ccfcbc := d.Token()
		if _ccfcbc != nil {
			return _ccfcbc
		}
		switch _bbdca := _gffece.(type) {
		case _b.StartElement:
			switch _bbdca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}:
				_fadebc := NewCT_SingleXmlCell()
				if _fddb := d.DecodeElement(_fadebc, &_bbdca); _fddb != nil {
					return _fddb
				}
				_fcbba.SingleXmlCell = append(_fcbba.SingleXmlCell, _fadebc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006c\u0043e\u006cl\u0073\u0020\u0025\u0076", _bbdca.Name)
				if _fdgab := d.Skip(); _fdgab != nil {
					return _fdgab
				}
			}
		case _b.EndElement:
			break _bcgca
		case _b.CharData:
		}
	}
	return nil
}

type CT_AutoFilter struct {

	// Cell or Range Reference
	RefAttr *string

	// AutoFilter Column
	FilterColumn []*CT_FilterColumn

	// Sort State for Auto Filter
	SortState *CT_SortState
	ExtLst    *CT_ExtensionList
}

// Validate validates the CT_Consolidation and its children
func (_ebda *CT_Consolidation) Validate() error {
	return _ebda.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e")
}
func (_bfbga *ST_CfType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ededcb, _dfeaa := d.Token()
	if _dfeaa != nil {
		return _dfeaa
	}
	if _febbg, _ddbfd := _ededcb.(_b.EndElement); _ddbfd && _febbg.Name == start.Name {
		*_bfbga = 1
		return nil
	}
	if _fefca, _cdgea := _ededcb.(_b.CharData); !_cdgea {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ededcb)
	} else {
		switch string(_fefca) {
		case "":
			*_bfbga = 0
		case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
			*_bfbga = 1
		case "\u0063\u0065\u006c\u006c\u0049\u0073":
			*_bfbga = 2
		case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
			*_bfbga = 3
		case "\u0064a\u0074\u0061\u0042\u0061\u0072":
			*_bfbga = 4
		case "\u0069c\u006f\u006e\u0053\u0065\u0074":
			*_bfbga = 5
		case "\u0074\u006f\u00701\u0030":
			*_bfbga = 6
		case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_bfbga = 7
		case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
			*_bfbga = 8
		case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_bfbga = 9
		case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
			*_bfbga = 10
		case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
			*_bfbga = 11
		case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
			*_bfbga = 12
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_bfbga = 13
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
			*_bfbga = 14
		case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_bfbga = 15
		case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
			*_bfbga = 16
		case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
			*_bfbga = 17
		case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
			*_bfbga = 18
		}
	}
	_ededcb, _dfeaa = d.Token()
	if _dfeaa != nil {
		return _dfeaa
	}
	if _gbfdc, _dbbac := _ededcb.(_b.EndElement); _dbbac && _gbfdc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ededcb)
}
func (_ddb *CT_CfRule) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ddb.TypeAttr != ST_CfTypeUnset {
		_fgeb, _aed := _ddb.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _aed != nil {
			return _aed
		}
		start.Attr = append(start.Attr, _fgeb)
	}
	if _ddb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ddb.DxfIdAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079"}, Value: _a.Sprintf("\u0025\u0076", _ddb.PriorityAttr)})
	if _ddb.StopIfTrueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddb.StopIfTrueAttr))})
	}
	if _ddb.AboveAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddb.AboveAverageAttr))})
	}
	if _ddb.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddb.PercentAttr))})
	}
	if _ddb.BottomAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddb.BottomAttr))})
	}
	if _ddb.OperatorAttr != ST_ConditionalFormattingOperatorUnset {
		_bfbcc, _beag := _ddb.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _beag != nil {
			return _beag
		}
		start.Attr = append(start.Attr, _bfbcc)
	}
	if _ddb.TextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ddb.TextAttr)})
	}
	if _ddb.TimePeriodAttr != ST_TimePeriodUnset {
		_defb, _eacc := _ddb.TimePeriodAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"})
		if _eacc != nil {
			return _eacc
		}
		start.Attr = append(start.Attr, _defb)
	}
	if _ddb.RankAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0076", *_ddb.RankAttr)})
	}
	if _ddb.StdDevAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076"}, Value: _a.Sprintf("\u0025\u0076", *_ddb.StdDevAttr)})
	}
	if _ddb.EqualAverageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ddb.EqualAverageAttr))})
	}
	e.EncodeToken(start)
	if _ddb.Formula != nil {
		_ffg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		for _, _bfbf := range _ddb.Formula {
			e.EncodeElement(_bfbf, _ffg)
		}
	}
	if _ddb.ColorScale != nil {
		_ebg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}}
		e.EncodeElement(_ddb.ColorScale, _ebg)
	}
	if _ddb.DataBar != nil {
		_dgbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0042\u0061\u0072"}}
		e.EncodeElement(_ddb.DataBar, _dgbf)
	}
	if _ddb.IconSet != nil {
		_bedd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u0063\u006f\u006e\u0053\u0065\u0074"}}
		e.EncodeElement(_ddb.IconSet, _bedd)
	}
	if _ddb.ExtLst != nil {
		_dggg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ddb.ExtLst, _dggg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExternalSheetNames() *CT_ExternalSheetNames {
	_ccdef := &CT_ExternalSheetNames{}
	return _ccdef
}

// Validate validates the CT_CacheHierarchies and its children
func (_acdd *CT_CacheHierarchies) Validate() error {
	return _acdd.ValidateWithPath("\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073")
}
func (_bbgdc *CT_DdeItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbgdc.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bbgdc.NameAttr)})
	}
	if _bbgdc.OleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgdc.OleAttr))})
	}
	if _bbgdc.AdviseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u0076\u0069\u0073\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgdc.AdviseAttr))})
	}
	if _bbgdc.PreferPicAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bbgdc.PreferPicAttr))})
	}
	e.EncodeToken(start)
	if _bbgdc.Values != nil {
		_gccadf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0076\u0061\u006c\u0075\u0065s"}}
		e.EncodeElement(_bbgdc.Values, _gccadf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the Headers and its children, prefixing error messages with path
func (_fafga *Headers) ValidateWithPath(path string) error {
	if _bgfge := _fafga.CT_RevisionHeaders.ValidateWithPath(path); _bgfge != nil {
		return _bgfge
	}
	return nil
}
func NewConnections() *Connections {
	_ccacf := &Connections{}
	_ccacf.CT_Connections = *NewCT_Connections()
	return _ccacf
}
func NewCT_VerticalAlignFontProperty() *CT_VerticalAlignFontProperty {
	_defcd := &CT_VerticalAlignFontProperty{}
	_defcd.ValAttr = _ff.ST_VerticalAlignRun(1)
	return _defcd
}
func (_aeacbe *CT_RangeSets) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edbabf := range start.Attr {
		if _edbabf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_fabaf, _eefee := _g.ParseUint(_edbabf.Value, 10, 32)
			if _eefee != nil {
				return _eefee
			}
			_fdabe := uint32(_fabaf)
			_aeacbe.CountAttr = &_fdabe
			continue
		}
	}
_abbaeb:
	for {
		_gfcge, _efage := d.Token()
		if _efage != nil {
			return _efage
		}
		switch _bfgeb := _gfcge.(type) {
		case _b.StartElement:
			switch _bfgeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}:
				_fafe := NewCT_RangeSet()
				if _fbebfb := d.DecodeElement(_fafe, &_bfgeb); _fbebfb != nil {
					return _fbebfb
				}
				_aeacbe.RangeSet = append(_aeacbe.RangeSet, _fafe)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0061\u006eg\u0065\u0053\u0065\u0074\u0073\u0020\u0025\u0076", _bfgeb.Name)
				if _fcgga := d.Skip(); _fcgga != nil {
					return _fcgga
				}
			}
		case _b.EndElement:
			break _abbaeb
		case _b.CharData:
		}
	}
	return nil
}
func (_bafce ST_DataValidationErrorStyle) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_acgbg := _b.Attr{}
	_acgbg.Name = name
	switch _bafce {
	case ST_DataValidationErrorStyleUnset:
		_acgbg.Value = ""
	case ST_DataValidationErrorStyleStop:
		_acgbg.Value = "\u0073\u0074\u006f\u0070"
	case ST_DataValidationErrorStyleWarning:
		_acgbg.Value = "\u0077a\u0072\u006e\u0069\u006e\u0067"
	case ST_DataValidationErrorStyleInformation:
		_acgbg.Value = "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	}
	return _acgbg, nil
}

// Validate validates the CT_CellSmartTagPr and its children
func (_gffb *CT_CellSmartTagPr) Validate() error {
	return _gffb.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072")
}
func (_babdf *CT_IconSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _babdf.IconSetAttr != ST_IconSetTypeUnset {
		_dcgfb, _dceeg := _babdf.IconSetAttr.MarshalXMLAttr(_b.Name{Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"})
		if _dceeg != nil {
			return _dceeg
		}
		start.Attr = append(start.Attr, _dcgfb)
	}
	if _babdf.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_babdf.ShowValueAttr))})
	}
	if _babdf.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_babdf.PercentAttr))})
	}
	if _babdf.ReverseAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072e\u0076\u0065\u0072\u0073\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_babdf.ReverseAttr))})
	}
	e.EncodeToken(start)
	_dfgeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _feeef := range _babdf.Cfvo {
		e.EncodeElement(_feeef, _dfgeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CsPageSetup and its children, prefixing error messages with path
func (_bbcfa *CT_CsPageSetup) ValidateWithPath(path string) error {
	if _bbcfa.PaperHeightAttr != nil {
		if !_ff.ST_PositiveUniversalMeasurePatternRe.MatchString(*_bbcfa.PaperHeightAttr) {
			return _a.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_PositiveUniversalMeasurePatternRe, *_bbcfa.PaperHeightAttr)
		}
	}
	if _bbcfa.PaperHeightAttr != nil {
		if !_ff.ST_UniversalMeasurePatternRe.MatchString(*_bbcfa.PaperHeightAttr) {
			return _a.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_UniversalMeasurePatternRe, *_bbcfa.PaperHeightAttr)
		}
	}
	if _bbcfa.PaperWidthAttr != nil {
		if !_ff.ST_PositiveUniversalMeasurePatternRe.MatchString(*_bbcfa.PaperWidthAttr) {
			return _a.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_PositiveUniversalMeasurePatternRe, *_bbcfa.PaperWidthAttr)
		}
	}
	if _bbcfa.PaperWidthAttr != nil {
		if !_ff.ST_UniversalMeasurePatternRe.MatchString(*_bbcfa.PaperWidthAttr) {
			return _a.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_UniversalMeasurePatternRe, *_bbcfa.PaperWidthAttr)
		}
	}
	if _dceb := _bbcfa.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _dceb != nil {
		return _dceb
	}
	return nil
}
func (_abcgc *CT_Worksheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abcgc.SheetData = NewCT_SheetData()
_bbacf:
	for {
		_gabfd, _afgba := d.Token()
		if _afgba != nil {
			return _afgba
		}
		switch _gaaff := _gabfd.(type) {
		case _b.StartElement:
			switch _gaaff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_abcgc.SheetPr = NewCT_SheetPr()
				if _gfdgeb := d.DecodeElement(_abcgc.SheetPr, &_gaaff); _gfdgeb != nil {
					return _gfdgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_abcgc.Dimension = NewCT_SheetDimension()
				if _gabbb := d.DecodeElement(_abcgc.Dimension, &_gaaff); _gabbb != nil {
					return _gabbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_abcgc.SheetViews = NewCT_SheetViews()
				if _cdfca := d.DecodeElement(_abcgc.SheetViews, &_gaaff); _cdfca != nil {
					return _cdfca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072"}:
				_abcgc.SheetFormatPr = NewCT_SheetFormatPr()
				if _bffgfc := d.DecodeElement(_abcgc.SheetFormatPr, &_gaaff); _bffgfc != nil {
					return _bffgfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0073"}:
				_dggad := NewCT_Cols()
				if _daage := d.DecodeElement(_dggad, &_gaaff); _daage != nil {
					return _daage
				}
				_abcgc.Cols = append(_abcgc.Cols, _dggad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0044\u0061\u0074a"}:
				if _aaabcd := d.DecodeElement(_abcgc.SheetData, &_gaaff); _aaabcd != nil {
					return _aaabcd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "s\u0068\u0065\u0065\u0074\u0043\u0061\u006c\u0063\u0050\u0072"}:
				_abcgc.SheetCalcPr = NewCT_SheetCalcPr()
				if _aagbf := d.DecodeElement(_abcgc.SheetCalcPr, &_gaaff); _aagbf != nil {
					return _aagbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_abcgc.SheetProtection = NewCT_SheetProtection()
				if _geddf := d.DecodeElement(_abcgc.SheetProtection, &_gaaff); _geddf != nil {
					return _geddf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u006ft\u0065\u0063\u0074\u0065\u0064\u0052\u0061\u006e\u0067\u0065\u0073"}:
				_abcgc.ProtectedRanges = NewCT_ProtectedRanges()
				if _fadddd := d.DecodeElement(_abcgc.ProtectedRanges, &_gaaff); _fadddd != nil {
					return _fadddd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs"}:
				_abcgc.Scenarios = NewCT_Scenarios()
				if _cbggf := d.DecodeElement(_abcgc.Scenarios, &_gaaff); _cbggf != nil {
					return _cbggf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_abcgc.AutoFilter = NewCT_AutoFilter()
				if _edebg := d.DecodeElement(_abcgc.AutoFilter, &_gaaff); _edebg != nil {
					return _edebg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_abcgc.SortState = NewCT_SortState()
				if _fbaab := d.DecodeElement(_abcgc.SortState, &_gaaff); _fbaab != nil {
					return _fbaab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"}:
				_abcgc.DataConsolidate = NewCT_DataConsolidate()
				if _aggca := d.DecodeElement(_abcgc.DataConsolidate, &_gaaff); _aggca != nil {
					return _aggca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_abcgc.CustomSheetViews = NewCT_CustomSheetViews()
				if _gfaefe := d.DecodeElement(_abcgc.CustomSheetViews, &_gaaff); _gfaefe != nil {
					return _gfaefe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073"}:
				_abcgc.MergeCells = NewCT_MergeCells()
				if _dgdbe := d.DecodeElement(_abcgc.MergeCells, &_gaaff); _dgdbe != nil {
					return _dgdbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_abcgc.PhoneticPr = NewCT_PhoneticPr()
				if _bfaeb := d.DecodeElement(_abcgc.PhoneticPr, &_gaaff); _bfaeb != nil {
					return _bfaeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006e\u0064\u0069ti\u006fn\u0061\u006c\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067"}:
				_adbab := NewCT_ConditionalFormatting()
				if _ebaggc := d.DecodeElement(_adbab, &_gaaff); _ebaggc != nil {
					return _ebaggc
				}
				_abcgc.ConditionalFormatting = append(_abcgc.ConditionalFormatting, _adbab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074a\u0056\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0073"}:
				_abcgc.DataValidations = NewCT_DataValidations()
				if _aecfd := d.DecodeElement(_abcgc.DataValidations, &_gaaff); _aecfd != nil {
					return _aecfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073"}:
				_abcgc.Hyperlinks = NewCT_Hyperlinks()
				if _afdag := d.DecodeElement(_abcgc.Hyperlinks, &_gaaff); _afdag != nil {
					return _afdag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_abcgc.PrintOptions = NewCT_PrintOptions()
				if _eaeca := d.DecodeElement(_abcgc.PrintOptions, &_gaaff); _eaeca != nil {
					return _eaeca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_abcgc.PageMargins = NewCT_PageMargins()
				if _gbfdf := d.DecodeElement(_abcgc.PageMargins, &_gaaff); _gbfdf != nil {
					return _gbfdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_abcgc.PageSetup = NewCT_PageSetup()
				if _geeeeg := d.DecodeElement(_abcgc.PageSetup, &_gaaff); _geeeeg != nil {
					return _geeeeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_abcgc.HeaderFooter = NewCT_HeaderFooter()
				if _dbegf := d.DecodeElement(_abcgc.HeaderFooter, &_gaaff); _dbegf != nil {
					return _dbegf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_abcgc.RowBreaks = NewCT_PageBreak()
				if _eadeg := d.DecodeElement(_abcgc.RowBreaks, &_gaaff); _eadeg != nil {
					return _eadeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_abcgc.ColBreaks = NewCT_PageBreak()
				if _cbdcg := d.DecodeElement(_abcgc.ColBreaks, &_gaaff); _cbdcg != nil {
					return _cbdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073"}:
				_abcgc.CustomProperties = NewCT_CustomProperties()
				if _ecdfc := d.DecodeElement(_abcgc.CustomProperties, &_gaaff); _ecdfc != nil {
					return _ecdfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068\u0065\u0073"}:
				_abcgc.CellWatches = NewCT_CellWatches()
				if _aegabc := d.DecodeElement(_abcgc.CellWatches, &_gaaff); _aegabc != nil {
					return _aegabc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073"}:
				_abcgc.IgnoredErrors = NewCT_IgnoredErrors()
				if _fdgde := d.DecodeElement(_abcgc.IgnoredErrors, &_gaaff); _fdgde != nil {
					return _fdgde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073m\u0061\u0072\u0074\u0054\u0061\u0067s"}:
				_abcgc.SmartTags = NewCT_SmartTags()
				if _edcbc := d.DecodeElement(_abcgc.SmartTags, &_gaaff); _edcbc != nil {
					return _edcbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				_abcgc.Drawing = NewCT_Drawing()
				if _deeag := d.DecodeElement(_abcgc.Drawing, &_gaaff); _deeag != nil {
					return _deeag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_abcgc.LegacyDrawing = NewCT_LegacyDrawing()
				if _geedb := d.DecodeElement(_abcgc.LegacyDrawing, &_gaaff); _geedb != nil {
					return _geedb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_abcgc.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _fbbgdg := d.DecodeElement(_abcgc.LegacyDrawingHF, &_gaaff); _fbbgdg != nil {
					return _fbbgdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_abcgc.DrawingHF = NewCT_DrawingHF()
				if _ccgfa := d.DecodeElement(_abcgc.DrawingHF, &_gaaff); _ccgfa != nil {
					return _ccgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_abcgc.Picture = NewCT_SheetBackgroundPicture()
				if _aeefd := d.DecodeElement(_abcgc.Picture, &_gaaff); _aeefd != nil {
					return _aeefd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"}:
				_abcgc.OleObjects = NewCT_OleObjects()
				if _gebgb := d.DecodeElement(_abcgc.OleObjects, &_gaaff); _gebgb != nil {
					return _gebgb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u0072\u006f\u006c\u0073"}:
				_abcgc.Controls = NewCT_Controls()
				if _ecbge := d.DecodeElement(_abcgc.Controls, &_gaaff); _ecbge != nil {
					return _ecbge
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_abcgc.WebPublishItems = NewCT_WebPublishItems()
				if _bgdbf := d.DecodeElement(_abcgc.WebPublishItems, &_gaaff); _bgdbf != nil {
					return _bgdbf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073"}:
				_abcgc.TableParts = NewCT_TableParts()
				if _fegceb := d.DecodeElement(_abcgc.TableParts, &_gaaff); _fegceb != nil {
					return _fegceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abcgc.ExtLst = NewCT_ExtensionList()
				if _geaeg := d.DecodeElement(_abcgc.ExtLst, &_gaaff); _geaeg != nil {
					return _geaeg
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_W\u006f\u0072k\u0073\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _gaaff.Name)
				if _cffdc := d.Skip(); _cffdc != nil {
					return _cffdc
				}
			}
		case _b.EndElement:
			break _bbacf
		case _b.CharData:
		}
	}
	return nil
}
func (_cdgd *CT_DynamicFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_feda, _efecb := _cdgd.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _efecb != nil {
		return _efecb
	}
	start.Attr = append(start.Attr, _feda)
	if _cdgd.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cdgd.ValAttr)})
	}
	if _cdgd.ValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c\u0049\u0073\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cdgd.ValIsoAttr)})
	}
	if _cdgd.MaxValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0078\u0056\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cdgd.MaxValAttr)})
	}
	if _cdgd.MaxValIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0056\u0061\u006c\u0049\u0073o"}, Value: _a.Sprintf("\u0025\u0076", *_cdgd.MaxValIsoAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Colors and its children
func (_gebfg *CT_Colors) Validate() error {
	return _gebfg.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s")
}
func (_accdff *ST_SheetViewType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bddgf, _gbcgfd := d.Token()
	if _gbcgfd != nil {
		return _gbcgfd
	}
	if _ccaae, _adgbf := _bddgf.(_b.EndElement); _adgbf && _ccaae.Name == start.Name {
		*_accdff = 1
		return nil
	}
	if _ggabe, _ddfdcd := _bddgf.(_b.CharData); !_ddfdcd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bddgf)
	} else {
		switch string(_ggabe) {
		case "":
			*_accdff = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_accdff = 1
		case "\u0070\u0061g\u0065\u0042\u0072e\u0061\u006b\u0050\u0072\u0065\u0076\u0069\u0065\u0077":
			*_accdff = 2
		case "\u0070\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074":
			*_accdff = 3
		}
	}
	_bddgf, _gbcgfd = d.Token()
	if _gbcgfd != nil {
		return _gbcgfd
	}
	if _badbdc, _fdbbb := _bddgf.(_b.EndElement); _fdbbb && _badbdc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bddgf)
}

// ValidateWithPath validates the CT_FontName and its children, prefixing error messages with path
func (_cegeg *CT_FontName) ValidateWithPath(path string) error { return nil }
func (_cegcba ST_VolDepType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cgfeb := _b.Attr{}
	_cgfeb.Name = name
	switch _cegcba {
	case ST_VolDepTypeUnset:
		_cgfeb.Value = ""
	case ST_VolDepTypeRealTimeData:
		_cgfeb.Value = "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case ST_VolDepTypeOlapFunctions:
		_cgfeb.Value = "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return _cgfeb, nil
}
func (_gabce *ExternalLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gabce.CT_ExternalLink = *NewCT_ExternalLink()
_ffgdfa:
	for {
		_adbdg, _gfecf := d.Token()
		if _gfecf != nil {
			return _gfecf
		}
		switch _dcfecc := _adbdg.(type) {
		case _b.StartElement:
			switch _dcfecc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"}:
				_gabce.Choice = NewCT_ExternalLinkChoice()
				if _agcab := d.DecodeElement(&_gabce.Choice.ExternalBook, &_dcfecc); _agcab != nil {
					return _agcab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u004c\u0069\u006e\u006b"}:
				_gabce.Choice = NewCT_ExternalLinkChoice()
				if _cgegcae := d.DecodeElement(&_gabce.Choice.DdeLink, &_dcfecc); _cgegcae != nil {
					return _cgegcae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004c\u0069\u006e\u006b"}:
				_gabce.Choice = NewCT_ExternalLinkChoice()
				if _becgd := d.DecodeElement(&_gabce.Choice.OleLink, &_dcfecc); _becgd != nil {
					return _becgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gabce.ExtLst = NewCT_ExtensionList()
				if _ggcdde := d.DecodeElement(_gabce.ExtLst, &_dcfecc); _ggcdde != nil {
					return _ggcdde
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0078te\u0072\u006ea\u006c\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _dcfecc.Name)
				if _bcfdf := d.Skip(); _bcfdf != nil {
					return _bcfdf
				}
			}
		case _b.EndElement:
			break _ffgdfa
		case _b.CharData:
		}
	}
	return nil
}
func (_gfccg *ST_CfType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gfccg = 0
	case "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e":
		*_gfccg = 1
	case "\u0063\u0065\u006c\u006c\u0049\u0073":
		*_gfccg = 2
	case "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065":
		*_gfccg = 3
	case "\u0064a\u0074\u0061\u0042\u0061\u0072":
		*_gfccg = 4
	case "\u0069c\u006f\u006e\u0053\u0065\u0074":
		*_gfccg = 5
	case "\u0074\u006f\u00701\u0030":
		*_gfccg = 6
	case "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gfccg = 7
	case "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073":
		*_gfccg = 8
	case "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gfccg = 9
	case "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074":
		*_gfccg = 10
	case "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068":
		*_gfccg = 11
	case "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068":
		*_gfccg = 12
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gfccg = 13
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073":
		*_gfccg = 14
	case "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gfccg = 15
	case "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073":
		*_gfccg = 16
	case "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064":
		*_gfccg = 17
	case "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065":
		*_gfccg = 18
	}
	return nil
}
func (_babeg ST_TextHAlign) String() string {
	switch _babeg {
	case 0:
		return ""
	case 1:
		return "\u006c\u0065\u0066\u0074"
	case 2:
		return "\u0063\u0065\u006e\u0074\u0065\u0072"
	case 3:
		return "\u0072\u0069\u0067h\u0074"
	case 4:
		return "\u006au\u0073\u0074\u0069\u0066\u0079"
	case 5:
		return "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return ""
}

// ValidateWithPath validates the CT_TablePart and its children, prefixing error messages with path
func (_bcfff *CT_TablePart) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_PivotCaches and its children
func (_fafac *CT_PivotCaches) Validate() error {
	return _fafac.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073")
}
func (_caffd *CT_Cfvo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_cgee, _fbecf := _caffd.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _fbecf != nil {
		return _fbecf
	}
	start.Attr = append(start.Attr, _cgee)
	if _caffd.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_caffd.ValAttr)})
	}
	if _caffd.GteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caffd.GteAttr))})
	}
	e.EncodeToken(start)
	if _caffd.ExtLst != nil {
		_ggdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_caffd.ExtLst, _ggdf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_DataBinding() *CT_DataBinding { _bcfe := &CT_DataBinding{}; return _bcfe }

// ValidateWithPath validates the CT_ConditionalFormats and its children, prefixing error messages with path
func (_ccfe *CT_ConditionalFormats) ValidateWithPath(path string) error {
	for _dccd, _feec := range _ccfe.ConditionalFormat {
		if _degag := _feec.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _dccd)); _degag != nil {
			return _degag
		}
	}
	return nil
}

// Validate validates the CT_IntProperty and its children
func (_bcadc *CT_IntProperty) Validate() error {
	return _bcadc.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func (_cadeg *CT_XmlColumnPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fddad := range start.Attr {
		if _fddad.Name.Local == "\u006d\u0061\u0070I\u0064" {
			_addff, _cfefa := _g.ParseUint(_fddad.Value, 10, 32)
			if _cfefa != nil {
				return _cfefa
			}
			_cadeg.MapIdAttr = uint32(_addff)
			continue
		}
		if _fddad.Name.Local == "\u0078\u0070\u0061t\u0068" {
			_ecfff, _aaeeeg := _fddad.Value, error(nil)
			if _aaeeeg != nil {
				return _aaeeeg
			}
			_cadeg.XpathAttr = _ecfff
			continue
		}
		if _fddad.Name.Local == "\u0064\u0065\u006eo\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0064" {
			_cfddba, _bfbfga := _g.ParseBool(_fddad.Value)
			if _bfbfga != nil {
				return _bfbfga
			}
			_cadeg.DenormalizedAttr = &_cfddba
			continue
		}
		if _fddad.Name.Local == "x\u006d\u006c\u0044\u0061\u0074\u0061\u0054\u0079\u0070\u0065" {
			_fefce, _feedd := _fddad.Value, error(nil)
			if _feedd != nil {
				return _feedd
			}
			_cadeg.XmlDataTypeAttr = _fefce
			continue
		}
	}
_bcbbg:
	for {
		_efggbc, _eabbf := d.Token()
		if _eabbf != nil {
			return _eabbf
		}
		switch _fabdef := _efggbc.(type) {
		case _b.StartElement:
			switch _fabdef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cadeg.ExtLst = NewCT_ExtensionList()
				if _fgecd := d.DecodeElement(_cadeg.ExtLst, &_fabdef); _fgecd != nil {
					return _fgecd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006c\u0075m\u006eP\u0072\u0020\u0025\u0076", _fabdef.Name)
				if _daafa := d.Skip(); _daafa != nil {
					return _daafa
				}
			}
		case _b.EndElement:
			break _bcbbg
		case _b.CharData:
		}
	}
	return nil
}
func (_egcad *Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egcad.CT_Connections = *NewCT_Connections()
_fefaa:
	for {
		_faccg, _agcbf := d.Token()
		if _agcbf != nil {
			return _agcbf
		}
		switch _efbge := _faccg.(type) {
		case _b.StartElement:
			switch _efbge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_agcdag := NewCT_Connection()
				if _baegaf := d.DecodeElement(_agcdag, &_efbge); _baegaf != nil {
					return _baegaf
				}
				_egcad.Connection = append(_egcad.Connection, _agcdag)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _efbge.Name)
				if _bfggf := d.Skip(); _bfggf != nil {
					return _bfggf
				}
			}
		case _b.EndElement:
			break _fefaa
		case _b.CharData:
		}
	}
	return nil
}

type CT_QueryTableDeletedFields struct {

	// Deleted Fields Count
	CountAttr *uint32

	// Deleted Field
	DeletedField []*CT_DeletedField
}

func NewCT_Workbook() *CT_Workbook {
	_cebga := &CT_Workbook{}
	_cebga.Sheets = NewCT_Sheets()
	return _cebga
}

type CT_PageItem struct {

	// Page Item Name
	NameAttr string
}

func (_gdgdbd ST_PaneState) String() string {
	switch _gdgdbd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070\u006ci\u0074"
	case 2:
		return "\u0066\u0072\u006f\u007a\u0065\u006e"
	case 3:
		return "f\u0072\u006f\u007a\u0065\u006e\u0053\u0070\u006c\u0069\u0074"
	}
	return ""
}

// Validate validates the CT_Map and its children
func (_ecbgf *CT_Map) Validate() error {
	return _ecbgf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0061\u0070")
}

// ValidateWithPath validates the CT_CacheHierarchies and its children, prefixing error messages with path
func (_bcdf *CT_CacheHierarchies) ValidateWithPath(path string) error {
	for _gag, _dfga := range _bcdf.CacheHierarchy {
		if _afa := _dfga.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0061ch\u0065H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _gag)); _afa != nil {
			return _afa
		}
	}
	return nil
}
func (_egbbb ST_ParameterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aaecb := _b.Attr{}
	_aaecb.Name = name
	switch _egbbb {
	case ST_ParameterTypeUnset:
		_aaecb.Value = ""
	case ST_ParameterTypePrompt:
		_aaecb.Value = "\u0070\u0072\u006f\u006d\u0070\u0074"
	case ST_ParameterTypeValue:
		_aaecb.Value = "\u0076\u0061\u006cu\u0065"
	case ST_ParameterTypeCell:
		_aaecb.Value = "\u0063\u0065\u006c\u006c"
	}
	return _aaecb, nil
}
func (_ddbeb *CT_Map) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0049\u0044"}, Value: _a.Sprintf("\u0025\u0076", _ddbeb.IDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _ddbeb.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "R\u006f\u006f\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", _ddbeb.RootElementAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0063\u0068\u0065\u006d\u0061\u0049\u0044"}, Value: _a.Sprintf("\u0025\u0076", _ddbeb.SchemaIDAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0068\u006f\u0077\u0049\u006d\u0070\u006f\u0072\u0074\u0045\u0078\u0070\u006f\u0072t\u0056a\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e\u0045\u0072\u0072\u006f\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_ddbeb.ShowImportExportValidationErrorsAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041u\u0074\u006f\u0046\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_ddbeb.AutoFitAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0041\u0070\u0070\u0065\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_ddbeb.AppendAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "P\u0072e\u0073\u0065\u0072\u0076\u0065\u0053\u006f\u0072t\u0041\u0046\u004c\u0061yo\u0075\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_ddbeb.PreserveSortAFLayoutAttr))})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0046o\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_ddbeb.PreserveFormatAttr))})
	e.EncodeToken(start)
	if _ddbeb.DataBinding != nil {
		_fbbef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067"}}
		e.EncodeElement(_ddbeb.DataBinding, _fbbef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_CellSmartTagPr and its children, prefixing error messages with path
func (_ggef *CT_CellSmartTagPr) ValidateWithPath(path string) error { return nil }
func (_afafe *CT_Filter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _afafe.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_afafe.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gaeaa *CT_Members) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affbe := range start.Attr {
		if _affbe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gbaedg, _gafde := _g.ParseUint(_affbe.Value, 10, 32)
			if _gafde != nil {
				return _gafde
			}
			_gebef := uint32(_gbaedg)
			_gaeaa.CountAttr = &_gebef
			continue
		}
		if _affbe.Name.Local == "\u006c\u0065\u0076e\u006c" {
			_beeda, _gecaf := _g.ParseUint(_affbe.Value, 10, 32)
			if _gecaf != nil {
				return _gecaf
			}
			_edcdc := uint32(_beeda)
			_gaeaa.LevelAttr = &_edcdc
			continue
		}
	}
_cagac:
	for {
		_egcfb, _cedbg := d.Token()
		if _cedbg != nil {
			return _cedbg
		}
		switch _acfdb := _egcfb.(type) {
		case _b.StartElement:
			switch _acfdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u006d\u0062\u0065\u0072"}:
				_gacfag := NewCT_Member()
				if _beafd := d.DecodeElement(_gacfag, &_acfdb); _beafd != nil {
					return _beafd
				}
				_gaeaa.Member = append(_gaeaa.Member, _gacfag)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fM\u0065\u006d\u0062\u0065\u0072\u0073\u0020\u0025\u0076", _acfdb.Name)
				if _dgffb := d.Skip(); _dgffb != nil {
					return _dgffb
				}
			}
		case _b.EndElement:
			break _cagac
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SheetFormatPr and its children, prefixing error messages with path
func (_eafed *CT_SheetFormatPr) ValidateWithPath(path string) error { return nil }
func NewCT_FontScheme() *CT_FontScheme {
	_fdbbd := &CT_FontScheme{}
	_fdbbd.ValAttr = ST_FontScheme(1)
	return _fdbbd
}

// ValidateWithPath validates the CT_Scenarios and its children, prefixing error messages with path
func (_dcbcb *CT_Scenarios) ValidateWithPath(path string) error {
	for _adbefe, _gcgce := range _dcbcb.Scenario {
		if _dfafga := _gcgce.ValidateWithPath(_a.Sprintf("\u0025s\u002fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u005b\u0025\u0064\u005d", path, _adbefe)); _dfafga != nil {
			return _dfafga
		}
	}
	return nil
}
func (_aefba ST_CalcMode) ValidateWithPath(path string) error {
	switch _aefba {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aefba))
	}
	return nil
}
func (_abfdc *CT_GroupItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efbgc := range start.Attr {
		if _efbgc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dcegda, _fdagd := _g.ParseUint(_efbgc.Value, 10, 32)
			if _fdagd != nil {
				return _fdagd
			}
			_bfgde := uint32(_dcegda)
			_abfdc.CountAttr = &_bfgde
			continue
		}
	}
_eacdg:
	for {
		_efeb, _dggfb := d.Token()
		if _dggfb != nil {
			return _dggfb
		}
		switch _fgaaf := _efeb.(type) {
		case _b.StartElement:
			switch _fgaaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_deaed := NewCT_Missing()
				if _gdfdd := d.DecodeElement(_deaed, &_fgaaf); _gdfdd != nil {
					return _gdfdd
				}
				_abfdc.M = append(_abfdc.M, _deaed)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_eafdb := NewCT_Number()
				if _edgdf := d.DecodeElement(_eafdb, &_fgaaf); _edgdf != nil {
					return _edgdf
				}
				_abfdc.N = append(_abfdc.N, _eafdb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_gagdf := NewCT_Boolean()
				if _cabbgb := d.DecodeElement(_gagdf, &_fgaaf); _cabbgb != nil {
					return _cabbgb
				}
				_abfdc.B = append(_abfdc.B, _gagdf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_ffdgb := NewCT_Error()
				if _eebe := d.DecodeElement(_ffdgb, &_fgaaf); _eebe != nil {
					return _eebe
				}
				_abfdc.E = append(_abfdc.E, _ffdgb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_bddfg := NewCT_String()
				if _acceb := d.DecodeElement(_bddfg, &_fgaaf); _acceb != nil {
					return _acceb
				}
				_abfdc.S = append(_abfdc.S, _bddfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_aggdc := NewCT_DateTime()
				if _agfbb := d.DecodeElement(_aggdc, &_fgaaf); _agfbb != nil {
					return _agfbb
				}
				_abfdc.D = append(_abfdc.D, _aggdc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073 \u0025\u0076", _fgaaf.Name)
				if _cfbe := d.Skip(); _cfbe != nil {
					return _cfbe
				}
			}
		case _b.EndElement:
			break _eacdg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Location and its children, prefixing error messages with path
func (_bbecg *CT_Location) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_RevisionAutoFormatting and its children, prefixing error messages with path
func (_gdcbca *CT_RevisionAutoFormatting) ValidateWithPath(path string) error { return nil }
func (_cbfae *ST_Objects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_babfda, _cdadg := d.Token()
	if _cdadg != nil {
		return _cdadg
	}
	if _adabbb, _ebgfc := _babfda.(_b.EndElement); _ebgfc && _adabbb.Name == start.Name {
		*_cbfae = 1
		return nil
	}
	if _gedgce, _ccfaf := _babfda.(_b.CharData); !_ccfaf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _babfda)
	} else {
		switch string(_gedgce) {
		case "":
			*_cbfae = 0
		case "\u0061\u006c\u006c":
			*_cbfae = 1
		case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
			*_cbfae = 2
		case "\u006e\u006f\u006e\u0065":
			*_cbfae = 3
		}
	}
	_babfda, _cdadg = d.Token()
	if _cdadg != nil {
		return _cdadg
	}
	if _ecabfg, _cabac := _babfda.(_b.EndElement); _cabac && _ecabfg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _babfda)
}

// ValidateWithPath validates the CT_DiscretePr and its children, prefixing error messages with path
func (_fbag *CT_DiscretePr) ValidateWithPath(path string) error {
	for _dfce, _dacbg := range _fbag.X {
		if _bggcd := _dacbg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _dfce)); _bggcd != nil {
			return _bggcd
		}
	}
	return nil
}
func (_dddeb *ST_VerticalAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dddeb = 0
	case "\u0074\u006f\u0070":
		*_dddeb = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_dddeb = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_dddeb = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_dddeb = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_dddeb = 5
	}
	return nil
}

// ValidateWithPath validates the CT_IgnoredErrors and its children, prefixing error messages with path
func (_gdfff *CT_IgnoredErrors) ValidateWithPath(path string) error {
	for _cffef, _egcee := range _gdfff.IgnoredError {
		if _dfgdf := _egcee.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0049gn\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u005b\u0025\u0064\u005d", path, _cffef)); _dfgdf != nil {
			return _dfgdf
		}
	}
	if _gdfff.ExtLst != nil {
		if _ecgg := _gdfff.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecgg != nil {
			return _ecgg
		}
	}
	return nil
}
func (_cfg *CT_Border) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cfg.DiagonalUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c\u0055\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfg.DiagonalUpAttr))})
	}
	if _cfg.DiagonalDownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0061g\u006f\u006e\u0061\u006c\u0044\u006f\u0077\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfg.DiagonalDownAttr))})
	}
	if _cfg.OutlineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cfg.OutlineAttr))})
	}
	e.EncodeToken(start)
	if _cfg.Start != nil {
		_bgg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0074\u0061\u0072\u0074"}}
		e.EncodeElement(_cfg.Start, _bgg)
	}
	if _cfg.End != nil {
		_dfa := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u006e\u0064"}}
		e.EncodeElement(_cfg.End, _dfa)
	}
	if _cfg.Left != nil {
		_eabe := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_cfg.Left, _eabe)
	}
	if _cfg.Right != nil {
		_aee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_cfg.Right, _aee)
	}
	if _cfg.Top != nil {
		_cegbd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u006f\u0070"}}
		e.EncodeElement(_cfg.Top, _cegbd)
	}
	if _cfg.Bottom != nil {
		_fedg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0062\u006f\u0074\u0074\u006fm"}}
		e.EncodeElement(_cfg.Bottom, _fedg)
	}
	if _cfg.Diagonal != nil {
		_bcbc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0069\u0061\u0067\u006f\u006e\u0061\u006c"}}
		e.EncodeElement(_cfg.Diagonal, _bcbc)
	}
	if _cfg.Vertical != nil {
		_cbgg := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}}
		e.EncodeElement(_cfg.Vertical, _cbgg)
	}
	if _cfg.Horizontal != nil {
		_gac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"}}
		e.EncodeElement(_cfg.Horizontal, _gac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cbcff ST_PhoneticAlignment) Validate() error { return _cbcff.ValidateWithPath("") }

type CT_CellProtection struct {

	// Cell Locked
	LockedAttr *bool

	// Hidden Cell
	HiddenAttr *bool
}

func (_dcbbc *ST_CredMethod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dcbbc = 0
	case "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064":
		*_dcbbc = 1
	case "\u006e\u006f\u006e\u0065":
		*_dcbbc = 2
	case "\u0073\u0074\u006f\u0072\u0065\u0064":
		*_dcbbc = 3
	case "\u0070\u0072\u006f\u006d\u0070\u0074":
		*_dcbbc = 4
	}
	return nil
}

// ValidateWithPath validates the CT_DataValidations and its children, prefixing error messages with path
func (_fgfga *CT_DataValidations) ValidateWithPath(path string) error {
	for _gadd, _aabdb := range _fgfga.DataValidation {
		if _bbega := _aabdb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0044\u0061ta\u0056a\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _gadd)); _bbega != nil {
			return _bbega
		}
	}
	return nil
}
func NewCT_MetadataType() *CT_MetadataType { _gecead := &CT_MetadataType{}; return _gecead }
func NewCT_Stylesheet() *CT_Stylesheet     { _dgebb := &CT_Stylesheet{}; return _dgebb }
func NewCT_SheetBackgroundPicture() *CT_SheetBackgroundPicture {
	_egccgf := &CT_SheetBackgroundPicture{}
	return _egccgf
}
func (_cdgce *Users) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdgce.CT_Users = *NewCT_Users()
	for _, _ffada := range start.Attr {
		if _ffada.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdedd, _baaeb := _g.ParseUint(_ffada.Value, 10, 32)
			if _baaeb != nil {
				return _baaeb
			}
			_ffecbf := uint32(_gdedd)
			_cdgce.CountAttr = &_ffecbf
			continue
		}
	}
_ecadbb:
	for {
		_aecabb, _ecgbgd := d.Token()
		if _ecgbgd != nil {
			return _ecgbgd
		}
		switch _cedcce := _aecabb.(type) {
		case _b.StartElement:
			switch _cedcce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}:
				_fgecf := NewCT_SharedUser()
				if _aafag := d.DecodeElement(_fgecf, &_cedcce); _aafag != nil {
					return _aafag
				}
				_cdgce.UserInfo = append(_cdgce.UserInfo, _fgecf)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0055\u0073\u0065r\u0073 \u0025\u0076", _cedcce.Name)
				if _badcdf := d.Skip(); _badcdf != nil {
					return _badcdf
				}
			}
		case _b.EndElement:
			break _ecadbb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MetadataBlocks and its children
func (_bdfcg *CT_MetadataBlocks) Validate() error {
	return _bdfcg.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073")
}

type CT_TextField struct {

	// Field Type
	TypeAttr ST_ExternalConnectionType

	// Position
	PositionAttr *uint32
}

// ValidateWithPath validates the CT_ControlPr and its children, prefixing error messages with path
func (_dfaae *CT_ControlPr) ValidateWithPath(path string) error {
	if _efadge := _dfaae.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _efadge != nil {
		return _efadge
	}
	return nil
}
func (_eeadd *CT_WebPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeadd.XmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.XmlAttr))})
	}
	if _eeadd.SourceDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.SourceDataAttr))})
	}
	if _eeadd.ParsePreAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0073\u0065\u0050\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.ParsePreAttr))})
	}
	if _eeadd.ConsecutiveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006e\u0073\u0065\u0063\u0075\u0074\u0069\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.ConsecutiveAttr))})
	}
	if _eeadd.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.FirstRowAttr))})
	}
	if _eeadd.Xl97Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0039\u0037"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.Xl97Attr))})
	}
	if _eeadd.TextDatesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074e\u0078\u0074\u0044\u0061\u0074\u0065s"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.TextDatesAttr))})
	}
	if _eeadd.Xl2000Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u0032\u0030\u0030\u0030"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.Xl2000Attr))})
	}
	if _eeadd.UrlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0072\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_eeadd.UrlAttr)})
	}
	if _eeadd.PostAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u006f\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eeadd.PostAttr)})
	}
	if _eeadd.HtmlTablesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074\u006d\u006c\u0054\u0061\u0062\u006c\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eeadd.HtmlTablesAttr))})
	}
	if _eeadd.HtmlFormatAttr != ST_HtmlFmtUnset {
		_cgadaa, _gfcegc := _eeadd.HtmlFormatAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u0074\u006d\u006c\u0046\u006f\u0072\u006d\u0061\u0074"})
		if _gfcegc != nil {
			return _gfcegc
		}
		start.Attr = append(start.Attr, _cgadaa)
	}
	if _eeadd.EditPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u0064\u0069\u0074\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_eeadd.EditPageAttr)})
	}
	e.EncodeToken(start)
	if _eeadd.Tables != nil {
		_aggff := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0061\u0062\u006c\u0065s"}}
		e.EncodeElement(_eeadd.Tables, _aggff)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellXfs and its children
func (_abca *CT_CellXfs) Validate() error {
	return _abca.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073")
}
func (_gcbac *ST_PhoneticType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gcbac = 0
	case "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_gcbac = 1
	case "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061":
		*_gcbac = 2
	case "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_gcbac = 3
	case "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e":
		*_gcbac = 4
	}
	return nil
}

const (
	ST_OrientationUnset     ST_Orientation = 0
	ST_OrientationDefault   ST_Orientation = 1
	ST_OrientationPortrait  ST_Orientation = 2
	ST_OrientationLandscape ST_Orientation = 3
)

// ValidateWithPath validates the CT_Extension and its children, prefixing error messages with path
func (_bddda *CT_Extension) ValidateWithPath(path string) error { return nil }
func (_ccegdd *ST_Type) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcfcf, _eedcc := d.Token()
	if _eedcc != nil {
		return _eedcc
	}
	if _beacb, _aebgbb := _dcfcf.(_b.EndElement); _aebgbb && _beacb.Name == start.Name {
		*_ccegdd = 1
		return nil
	}
	if _gedfac, _ccgdga := _dcfcf.(_b.CharData); !_ccgdga {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dcfcf)
	} else {
		switch string(_gedfac) {
		case "":
			*_ccegdd = 0
		case "\u006e\u006f\u006e\u0065":
			*_ccegdd = 1
		case "\u0061\u006c\u006c":
			*_ccegdd = 2
		case "\u0072\u006f\u0077":
			*_ccegdd = 3
		case "\u0063\u006f\u006c\u0075\u006d\u006e":
			*_ccegdd = 4
		}
	}
	_dcfcf, _eedcc = d.Token()
	if _eedcc != nil {
		return _eedcc
	}
	if _eafcb, _agffc := _dcfcf.(_b.EndElement); _agffc && _eafcb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dcfcf)
}
func (_gbbde ST_SheetState) String() string {
	switch _gbbde {
	case 0:
		return ""
	case 1:
		return "\u0076i\u0073\u0069\u0062\u006c\u0065"
	case 2:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	case 3:
		return "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_GradientFill and its children, prefixing error messages with path
func (_gbfca *CT_GradientFill) ValidateWithPath(path string) error {
	if _afag := _gbfca.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _afag != nil {
		return _afag
	}
	for _ggag, _cdedge := range _gbfca.Stop {
		if _aggga := _cdedge.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0053\u0074\u006f\u0070\u005b\u0025\u0064\u005d", path, _ggag)); _aggga != nil {
			return _aggga
		}
	}
	return nil
}

type CT_OlapPr struct {

	// Local Cube
	LocalAttr *bool

	// Local Cube Connection
	LocalConnectionAttr *string

	// Local Refresh
	LocalRefreshAttr *bool

	// Send Locale to OLAP
	SendLocaleAttr *bool

	// Drill Through Count
	RowDrillCountAttr *uint32

	// OLAP Fill Formatting
	ServerFillAttr *bool

	// OLAP Number Format
	ServerNumberFormatAttr *bool

	// OLAP Server Font
	ServerFontAttr *bool

	// OLAP Font Formatting
	ServerFontColorAttr *bool
}

// ValidateWithPath validates the CT_Formats and its children, prefixing error messages with path
func (_agfae *CT_Formats) ValidateWithPath(path string) error {
	for _aadgda, _dgfef := range _agfae.Format {
		if _edgbg := _dgfef.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046\u006f\u0072\u006d\u0061\u0074\u005b\u0025\u0064\u005d", path, _aadgda)); _edgbg != nil {
			return _edgbg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Users and its children, prefixing error messages with path
func (_cadeab *CT_Users) ValidateWithPath(path string) error {
	for _aceef, _adbgc := range _cadeab.UserInfo {
		if _bddcd := _adbgc.ValidateWithPath(_a.Sprintf("\u0025s\u002fU\u0073\u0065\u0072\u0049\u006e\u0066\u006f\u005b\u0025\u0064\u005d", path, _aceef)); _bddcd != nil {
			return _bddcd
		}
	}
	return nil
}
func NewCT_ControlPr() *CT_ControlPr {
	_ddgbbf := &CT_ControlPr{}
	_ddgbbf.Anchor = NewCT_ObjectAnchor()
	return _ddgbbf
}

// ValidateWithPath validates the CT_ExternalReferences and its children, prefixing error messages with path
func (_dfcf *CT_ExternalReferences) ValidateWithPath(path string) error {
	for _abgcb, _bcceb := range _dfcf.ExternalReference {
		if _decef := _bcceb.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u005b\u0025\u0064\u005d", path, _abgcb)); _decef != nil {
			return _decef
		}
	}
	return nil
}

// Validate validates the CT_Workbook and its children
func (_cffdfa *CT_Workbook) Validate() error {
	return _cffdfa.ValidateWithPath("C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b")
}
func NewAG_AutoFormat() *AG_AutoFormat { _dg := &AG_AutoFormat{}; return _dg }
func (_ecafecf ST_WebSourceType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecafecf.String(), start)
}
func (_ggfag *CT_GradientStop) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ggfag.Color = NewCT_Color()
	for _, _beffa := range start.Attr {
		if _beffa.Name.Local == "\u0070\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_egeff, _beaef := _g.ParseFloat(_beffa.Value, 64)
			if _beaef != nil {
				return _beaef
			}
			_ggfag.PositionAttr = _egeff
			continue
		}
	}
_cadee:
	for {
		_egae, _aaafc := d.Token()
		if _aaafc != nil {
			return _aaafc
		}
		switch _ffbge := _egae.(type) {
		case _b.StartElement:
			switch _ffbge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _geec := d.DecodeElement(_ggfag.Color, &_ffbge); _geec != nil {
					return _geec
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _ffbge.Name)
				if _fbad := d.Skip(); _fbad != nil {
					return _fbad
				}
			}
		case _b.EndElement:
			break _cadee
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExtensionList and its children, prefixing error messages with path
func (_aaggd *CT_ExtensionList) ValidateWithPath(path string) error {
	for _adbf, _cedced := range _aaggd.Ext {
		if _cecfa := _cedced.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _adbf)); _cecfa != nil {
			return _cecfa
		}
	}
	return nil
}
func (_ffead *CT_Members) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffead.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffead.CountAttr)})
	}
	if _ffead.LevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0076e\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_ffead.LevelAttr)})
	}
	e.EncodeToken(start)
	_fgdea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0065\u006d\u0062\u0065r"}}
	for _, _ceabbf := range _ffead.Member {
		e.EncodeElement(_ceabbf, _fgdea)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfggbf ST_DdeValueType) Validate() error { return _bfggbf.ValidateWithPath("") }

// Validate validates the CT_CustomSheetViews and its children
func (_eggb *CT_CustomSheetViews) Validate() error {
	return _eggb.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

// Validate validates the CT_TupleCache and its children
func (_afacfe *CT_TupleCache) Validate() error {
	return _afacfe.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065")
}
func (_cdegg ST_FieldSortType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdegg.String(), start)
}
func NewCT_ProtectedRange() *CT_ProtectedRange { _bbdbfe := &CT_ProtectedRange{}; return _bbdbfe }

// ValidateWithPath validates the CT_DefinedNames and its children, prefixing error messages with path
func (_gegf *CT_DefinedNames) ValidateWithPath(path string) error {
	for _gecgc, _dccb := range _gegf.DefinedName {
		if _dccga := _dccb.ValidateWithPath(_a.Sprintf("\u0025s\u002fD\u0065\u0066\u0069\u006e\u0065d\u004e\u0061m\u0065\u005b\u0025\u0064\u005d", path, _gecgc)); _dccga != nil {
			return _dccga
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomWorkbookView and its children, prefixing error messages with path
func (_eddf *CT_CustomWorkbookView) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_eddf.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _eddf.GuidAttr)
	}
	if _ebef := _eddf.ShowCommentsAttr.ValidateWithPath(path + "\u002f\u0053\u0068\u006f\u0077\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _ebef != nil {
		return _ebef
	}
	if _fgge := _eddf.ShowObjectsAttr.ValidateWithPath(path + "\u002f\u0053h\u006f\u0077\u004fb\u006a\u0065\u0063\u0074\u0073\u0041\u0074\u0074\u0072"); _fgge != nil {
		return _fgge
	}
	if _eddf.ExtLst != nil {
		if _dgeg := _eddf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dgeg != nil {
			return _dgeg
		}
	}
	return nil
}
func (_bcgbda *ST_SheetState) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcgbda = 0
	case "\u0076i\u0073\u0069\u0062\u006c\u0065":
		*_bcgbda = 1
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_bcgbda = 2
	case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
		*_bcgbda = 3
	}
	return nil
}
func NewCT_UndoInfo() *CT_UndoInfo {
	_ceae := &CT_UndoInfo{}
	_ceae.ExpAttr = ST_FormulaExpression(1)
	return _ceae
}

const (
	ST_DataConsolidateFunctionUnset     ST_DataConsolidateFunction = 0
	ST_DataConsolidateFunctionAverage   ST_DataConsolidateFunction = 1
	ST_DataConsolidateFunctionCount     ST_DataConsolidateFunction = 2
	ST_DataConsolidateFunctionCountNums ST_DataConsolidateFunction = 3
	ST_DataConsolidateFunctionMax       ST_DataConsolidateFunction = 4
	ST_DataConsolidateFunctionMin       ST_DataConsolidateFunction = 5
	ST_DataConsolidateFunctionProduct   ST_DataConsolidateFunction = 6
	ST_DataConsolidateFunctionStdDev    ST_DataConsolidateFunction = 7
	ST_DataConsolidateFunctionStdDevp   ST_DataConsolidateFunction = 8
	ST_DataConsolidateFunctionSum       ST_DataConsolidateFunction = 9
	ST_DataConsolidateFunctionVar       ST_DataConsolidateFunction = 10
	ST_DataConsolidateFunctionVarp      ST_DataConsolidateFunction = 11
)

// ValidateWithPath validates the CT_WorksheetSource and its children, prefixing error messages with path
func (_dbfgad *CT_WorksheetSource) ValidateWithPath(path string) error { return nil }

const (
	ST_CredMethodUnset      ST_CredMethod = 0
	ST_CredMethodIntegrated ST_CredMethod = 1
	ST_CredMethodNone       ST_CredMethod = 2
	ST_CredMethodStored     ST_CredMethod = 3
	ST_CredMethodPrompt     ST_CredMethod = 4
)

func NewCT_rowItems() *CT_rowItems { _fdeaac := &CT_rowItems{}; return _fdeaac }

type AG_RevData struct {
	RIdAttr *uint32
	UaAttr  *bool
	RaAttr  *bool
}

func NewCT_RevisionMove() *CT_RevisionMove { _fededd := &CT_RevisionMove{}; return _fededd }

// Validate validates the CT_RevisionAutoFormatting and its children
func (_aecadc *CT_RevisionAutoFormatting) Validate() error {
	return _aecadc.ValidateWithPath("\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg")
}

type CT_MeasureDimensionMaps struct {

	// Measure Group Count
	CountAttr *uint32

	// OLAP Measure Group
	Map []*CT_MeasureDimensionMap
}
type CT_CellAlignment struct {

	// Horizontal Alignment
	HorizontalAttr ST_HorizontalAlignment

	// Vertical Alignment
	VerticalAttr ST_VerticalAlignment

	// Text Rotation
	TextRotationAttr *uint8

	// Wrap Text
	WrapTextAttr *bool

	// Indent
	IndentAttr *uint32

	// Relative Indent
	RelativeIndentAttr *int32

	// Justify Last Line
	JustifyLastLineAttr *bool

	// Shrink To Fit
	ShrinkToFitAttr *bool

	// Reading Order
	ReadingOrderAttr *uint32
}

func NewCT_OleItems() *CT_OleItems { _cfebe := &CT_OleItems{}; return _cfebe }
func (_gacf *CT_IntProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daagf := range start.Attr {
		if _daagf.Name.Local == "\u0076\u0061\u006c" {
			_ggge, _aaec := _g.ParseInt(_daagf.Value, 10, 32)
			if _aaec != nil {
				return _aaec
			}
			_gacf.ValAttr = int32(_ggge)
			continue
		}
	}
	for {
		_gfacg, _gebbe := d.Token()
		if _gebbe != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079:\u0020\u0025\u0073", _gebbe)
		}
		if _babbg, _dabea := _gfacg.(_b.EndElement); _dabea && _babbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgbdbb *CT_LegacyDrawing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bgbdbb.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ggbcef *CT_ObjectAnchor) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggbcef.MoveWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u006f\u0076\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggbcef.MoveWithCellsAttr))})
	}
	if _ggbcef.SizeWithCellsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065\u0057\u0069\u0074\u0068\u0043\u0065\u006c\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ggbcef.SizeWithCellsAttr))})
	}
	e.EncodeToken(start)
	_efafe := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0066\u0072\u006f\u006d"}}
	e.EncodeElement(_ggbcef.From, _efafe)
	_cfgff := _b.StartElement{Name: _b.Name{Local: "\u0078\u0064\u0072\u003a\u0074\u006f"}}
	e.EncodeElement(_ggbcef.To, _cfgff)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_egecb *ST_Visibility) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efgeg, _cfbgbc := d.Token()
	if _cfbgbc != nil {
		return _cfbgbc
	}
	if _ddcbec, _bbcac := _efgeg.(_b.EndElement); _bbcac && _ddcbec.Name == start.Name {
		*_egecb = 1
		return nil
	}
	if _dbdgb, _eacbgf := _efgeg.(_b.CharData); !_eacbgf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efgeg)
	} else {
		switch string(_dbdgb) {
		case "":
			*_egecb = 0
		case "\u0076i\u0073\u0069\u0062\u006c\u0065":
			*_egecb = 1
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_egecb = 2
		case "\u0076\u0065\u0072\u0079\u0048\u0069\u0064\u0064\u0065\u006e":
			*_egecb = 3
		}
	}
	_efgeg, _cfbgbc = d.Token()
	if _cfbgbc != nil {
		return _cfbgbc
	}
	if _bcccd, _bbfedb := _efgeg.(_b.EndElement); _bbfedb && _bcccd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efgeg)
}

// ValidateWithPath validates the CT_VerticalAlignFontProperty and its children, prefixing error messages with path
func (_aebaafg *CT_VerticalAlignFontProperty) ValidateWithPath(path string) error {
	if _aebaafg.ValAttr == _ff.ST_VerticalAlignRunUnset {
		return _a.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fdfdfe := _aebaafg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fdfdfe != nil {
		return _fdfdfe
	}
	return nil
}
func (_dfaca *ST_MdxFunctionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dfaca = 0
	case "\u006d":
		*_dfaca = 1
	case "\u0076":
		*_dfaca = 2
	case "\u0073":
		*_dfaca = 3
	case "\u0063":
		*_dfaca = 4
	case "\u0072":
		*_dfaca = 5
	case "\u0070":
		*_dfaca = 6
	case "\u006b":
		*_dfaca = 7
	}
	return nil
}
func (_aeeeg ST_RefMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_aeeeg.String(), start)
}
func (_bdcce *CT_MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0053\u0065\u006c\u0065ct\u0069\u006f\u006e\u004e\u0061\u006d\u0065\u0073\u0070\u0061\u0063\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0076", _bdcce.SelectionNamespacesAttr)})
	e.EncodeToken(start)
	_ddcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0053\u0063\u0068\u0065\u006da"}}
	for _, _gdgdg := range _bdcce.Schema {
		e.EncodeElement(_gdgdg, _ddcg)
	}
	_efbb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u004d\u0061\u0070"}}
	for _, _efbbb := range _bdcce.Map {
		e.EncodeElement(_efbbb, _efbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffgeee *CT_SheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffgeee.WindowProtectionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069n\u0064\u006f\u0077P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.WindowProtectionAttr))})
	}
	if _ffgeee.ShowFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowFormulasAttr))})
	}
	if _ffgeee.ShowGridLinesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowGridLinesAttr))})
	}
	if _ffgeee.ShowRowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowRowColHeadersAttr))})
	}
	if _ffgeee.ShowZerosAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u005a\u0065\u0072\u006fs"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowZerosAttr))})
	}
	if _ffgeee.RightToLeftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0069\u0067\u0068\u0074\u0054\u006f\u004c\u0065\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.RightToLeftAttr))})
	}
	if _ffgeee.TabSelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0061\u0062\u0053\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.TabSelectedAttr))})
	}
	if _ffgeee.ShowRulerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowRulerAttr))})
	}
	if _ffgeee.ShowOutlineSymbolsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u004f\u0075\u0074\u006c\u0069n\u0065\u0053y\u006d\u0062\u006f\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowOutlineSymbolsAttr))})
	}
	if _ffgeee.DefaultGridColorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065f\u0061\u0075\u006ct\u0047\u0072\u0069\u0064\u0043\u006f\u006c\u006f\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.DefaultGridColorAttr))})
	}
	if _ffgeee.ShowWhiteSpaceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0057\u0068\u0069\u0074\u0065S\u0070\u0061\u0063\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffgeee.ShowWhiteSpaceAttr))})
	}
	if _ffgeee.ViewAttr != ST_SheetViewTypeUnset {
		_fgebaa, _ecag := _ffgeee.ViewAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0069\u0065\u0077"})
		if _ecag != nil {
			return _ecag
		}
		start.Attr = append(start.Attr, _fgebaa)
	}
	if _ffgeee.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.TopLeftCellAttr)})
	}
	if _ffgeee.ColorIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006f\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.ColorIdAttr)})
	}
	if _ffgeee.ZoomScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006ce"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.ZoomScaleAttr)})
	}
	if _ffgeee.ZoomScaleNormalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006fm\u0053\u0063\u0061\u006c\u0065\u004e\u006f\u0072\u006d\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.ZoomScaleNormalAttr)})
	}
	if _ffgeee.ZoomScaleSheetLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0053\u0063\u0061\u006c\u0065\u0053\u0068\u0065\u0065t\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.ZoomScaleSheetLayoutViewAttr)})
	}
	if _ffgeee.ZoomScalePageLayoutViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007a\u006f\u006fmS\u0063\u0061\u006c\u0065\u0050\u0061\u0067\u0065\u004c\u0061\u0079\u006f\u0075\u0074\u0056\u0069\u0065\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_ffgeee.ZoomScalePageLayoutViewAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056i\u0065\u0077\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _ffgeee.WorkbookViewIdAttr)})
	e.EncodeToken(start)
	if _ffgeee.Pane != nil {
		_ebcddc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0070\u0061\u006e\u0065"}}
		e.EncodeElement(_ffgeee.Pane, _ebcddc)
	}
	if _ffgeee.Selection != nil {
		_fdcaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		for _, _adcade := range _ffgeee.Selection {
			e.EncodeElement(_adcade, _fdcaf)
		}
	}
	if _ffgeee.PivotSelection != nil {
		_dgcced := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e"}}
		for _, _dacdb := range _ffgeee.PivotSelection {
			e.EncodeElement(_dacdb, _dgcced)
		}
	}
	if _ffgeee.ExtLst != nil {
		_afbfg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffgeee.ExtLst, _afbfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_OleLink struct {
	IdAttr string

	// Object Link Identifier
	ProgIdAttr string

	// Object Link Items
	OleItems *CT_OleItems
}

// ValidateWithPath validates the CT_TableParts and its children, prefixing error messages with path
func (_cabag *CT_TableParts) ValidateWithPath(path string) error {
	for _edaad, _eeeeg := range _cabag.TablePart {
		if _aaade := _eeeeg.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0074\u005b\u0025\u0064\u005d", path, _edaad)); _aaade != nil {
			return _aaade
		}
	}
	return nil
}
func (_bcgea ST_PhoneticType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bcgea.String(), start)
}
func (_bfbfbg ST_SourceType) String() string {
	switch _bfbfbg {
	case 0:
		return ""
	case 1:
		return "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t"
	case 2:
		return "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c"
	case 3:
		return "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"
	}
	return ""
}

type CT_CellWatch struct {

	// Reference
	RAttr string
}

func (_agfb *CT_CfRule) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgfga := range start.Attr {
		if _bgfga.Name.Local == "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064" {
			_agfb.TimePeriodAttr.UnmarshalXMLAttr(_bgfga)
			continue
		}
		if _bgfga.Name.Local == "\u0074\u0079\u0070\u0065" {
			_agfb.TypeAttr.UnmarshalXMLAttr(_bgfga)
			continue
		}
		if _bgfga.Name.Local == "\u0072\u0061\u006e\u006b" {
			_bdab, _fddg := _g.ParseUint(_bgfga.Value, 10, 32)
			if _fddg != nil {
				return _fddg
			}
			_cecfe := uint32(_bdab)
			_agfb.RankAttr = &_cecfe
			continue
		}
		if _bgfga.Name.Local == "\u0070\u0072\u0069\u006f\u0072\u0069\u0074\u0079" {
			_geab, _beefb := _g.ParseInt(_bgfga.Value, 10, 32)
			if _beefb != nil {
				return _beefb
			}
			_agfb.PriorityAttr = int32(_geab)
			continue
		}
		if _bgfga.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076" {
			_aafb, _dbe := _g.ParseInt(_bgfga.Value, 10, 32)
			if _dbe != nil {
				return _dbe
			}
			_gbfc := int32(_aafb)
			_agfb.StdDevAttr = &_gbfc
			continue
		}
		if _bgfga.Name.Local == "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_feaf, _bddcg := _g.ParseBool(_bgfga.Value)
			if _bddcg != nil {
				return _bddcg
			}
			_agfb.AboveAverageAttr = &_feaf
			continue
		}
		if _bgfga.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_cfgf, _fdefe := _g.ParseBool(_bgfga.Value)
			if _fdefe != nil {
				return _fdefe
			}
			_agfb.BottomAttr = &_cfgf
			continue
		}
		if _bgfga.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_agfb.OperatorAttr.UnmarshalXMLAttr(_bgfga)
			continue
		}
		if _bgfga.Name.Local == "\u0074\u0065\u0078\u0074" {
			_agaf, _gbebg := _bgfga.Value, error(nil)
			if _gbebg != nil {
				return _gbebg
			}
			_agfb.TextAttr = &_agaf
			continue
		}
		if _bgfga.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_ffge, _dfb := _g.ParseUint(_bgfga.Value, 10, 32)
			if _dfb != nil {
				return _dfb
			}
			_bcgad := uint32(_ffge)
			_agfb.DxfIdAttr = &_bcgad
			continue
		}
		if _bgfga.Name.Local == "\u0073\u0074\u006f\u0070\u0049\u0066\u0054\u0072\u0075\u0065" {
			_dcbe, _eecg := _g.ParseBool(_bgfga.Value)
			if _eecg != nil {
				return _eecg
			}
			_agfb.StopIfTrueAttr = &_dcbe
			continue
		}
		if _bgfga.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_eadd, _dggdd := _g.ParseBool(_bgfga.Value)
			if _dggdd != nil {
				return _dggdd
			}
			_agfb.PercentAttr = &_eadd
			continue
		}
		if _bgfga.Name.Local == "\u0065\u0071\u0075a\u006c\u0041\u0076\u0065\u0072\u0061\u0067\u0065" {
			_bdac, _dgee := _g.ParseBool(_bgfga.Value)
			if _dgee != nil {
				return _dgee
			}
			_agfb.EqualAverageAttr = &_bdac
			continue
		}
	}
_dgead:
	for {
		_dcfa, _aecaa := d.Token()
		if _aecaa != nil {
			return _aecaa
		}
		switch _dcbgc := _dcfa.(type) {
		case _b.StartElement:
			switch _dcbgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}:
				var _dbfgc string
				if _gaff := d.DecodeElement(&_dbfgc, &_dcbgc); _gaff != nil {
					return _gaff
				}
				_agfb.Formula = append(_agfb.Formula, _dbfgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"}:
				_agfb.ColorScale = NewCT_ColorScale()
				if _bedg := d.DecodeElement(_agfb.ColorScale, &_dcbgc); _bedg != nil {
					return _bedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0042\u0061\u0072"}:
				_agfb.DataBar = NewCT_DataBar()
				if _bfbbb := d.DecodeElement(_agfb.DataBar, &_dcbgc); _bfbbb != nil {
					return _bfbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069c\u006f\u006e\u0053\u0065\u0074"}:
				_agfb.IconSet = NewCT_IconSet()
				if _aagd := d.DecodeElement(_agfb.IconSet, &_dcbgc); _aagd != nil {
					return _aagd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_agfb.ExtLst = NewCT_ExtensionList()
				if _cdg := d.DecodeElement(_agfb.ExtLst, &_dcbgc); _cdg != nil {
					return _cdg
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0066\u0052u\u006c\u0065 \u0025\u0076", _dcbgc.Name)
				if _agdb := d.Skip(); _agdb != nil {
					return _agdb
				}
			}
		case _b.EndElement:
			break _dgead
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellProtection and its children, prefixing error messages with path
func (_fdbf *CT_CellProtection) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_SmartTags and its children, prefixing error messages with path
func (_eefg *CT_SmartTags) ValidateWithPath(path string) error {
	for _eggf, _gbgab := range _eefg.CellSmartTags {
		if _bbgdge := _gbgab.ValidateWithPath(_a.Sprintf("%\u0073/\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072t\u0054\u0061\u0067\u0073[%\u0064\u005d", path, _eggf)); _bbgdge != nil {
			return _bbgdge
		}
	}
	return nil
}

type Dialogsheet struct{ CT_Dialogsheet }

func (_ccdea *CT_IndexedColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_deafb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0067\u0062\u0043\u006f\u006c\u006f\u0072"}}
	for _, _bgfdb := range _ccdea.RgbColor {
		e.EncodeElement(_bgfdb, _deafb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dgfbfc ST_DateTimeGrouping) ValidateWithPath(path string) error {
	switch _dgfbfc {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dgfbfc))
	}
	return nil
}
func (_bgbcb *CT_OleObject) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gabaea := range start.Attr {
		if _gabaea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gabaea.Name.Local == "\u0069\u0064" || _gabaea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gabaea.Name.Local == "\u0069\u0064" {
			_eeebcg, _caddc := _gabaea.Value, error(nil)
			if _caddc != nil {
				return _caddc
			}
			_bgbcb.IdAttr = &_eeebcg
			continue
		}
		if _gabaea.Name.Local == "\u0064\u0076\u0041\u0073\u0070\u0065\u0063\u0074" {
			_bgbcb.DvAspectAttr.UnmarshalXMLAttr(_gabaea)
			continue
		}
		if _gabaea.Name.Local == "\u006c\u0069\u006e\u006b" {
			_fbdba, _edae := _gabaea.Value, error(nil)
			if _edae != nil {
				return _edae
			}
			_bgbcb.LinkAttr = &_fbdba
			continue
		}
		if _gabaea.Name.Local == "\u006fl\u0065\u0055\u0070\u0064\u0061\u0074e" {
			_bgbcb.OleUpdateAttr.UnmarshalXMLAttr(_gabaea)
			continue
		}
		if _gabaea.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u006f\u0061\u0064" {
			_abaef, _edbdaf := _g.ParseBool(_gabaea.Value)
			if _edbdaf != nil {
				return _edbdaf
			}
			_bgbcb.AutoLoadAttr = &_abaef
			continue
		}
		if _gabaea.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_cacfge, _begba := _g.ParseUint(_gabaea.Value, 10, 32)
			if _begba != nil {
				return _begba
			}
			_bgbcb.ShapeIdAttr = uint32(_cacfge)
			continue
		}
		if _gabaea.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_ceagf, _cgfddd := _gabaea.Value, error(nil)
			if _cgfddd != nil {
				return _cgfddd
			}
			_bgbcb.ProgIdAttr = &_ceagf
			continue
		}
	}
_fbggf:
	for {
		_fadfe, _ggeag := d.Token()
		if _ggeag != nil {
			return _ggeag
		}
		switch _feccd := _fadfe.(type) {
		case _b.StartElement:
			switch _feccd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0050\u0072"}:
				_bgbcb.ObjectPr = NewCT_ObjectPr()
				if _dfebe := d.DecodeElement(_bgbcb.ObjectPr, &_feccd); _dfebe != nil {
					return _dfebe
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_O\u006c\u0065O\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _feccd.Name)
				if _bdgae := d.Skip(); _bdgae != nil {
					return _bdgae
				}
			}
		case _b.EndElement:
			break _fbggf
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_IconSetTypeUnset           ST_IconSetType = 0
	ST_IconSetType3Arrows         ST_IconSetType = 1
	ST_IconSetType3ArrowsGray     ST_IconSetType = 2
	ST_IconSetType3Flags          ST_IconSetType = 3
	ST_IconSetType3TrafficLights1 ST_IconSetType = 4
	ST_IconSetType3TrafficLights2 ST_IconSetType = 5
	ST_IconSetType3Signs          ST_IconSetType = 6
	ST_IconSetType3Symbols        ST_IconSetType = 7
	ST_IconSetType3Symbols2       ST_IconSetType = 8
	ST_IconSetType4Arrows         ST_IconSetType = 9
	ST_IconSetType4ArrowsGray     ST_IconSetType = 10
	ST_IconSetType4RedToBlack     ST_IconSetType = 11
	ST_IconSetType4Rating         ST_IconSetType = 12
	ST_IconSetType4TrafficLights  ST_IconSetType = 13
	ST_IconSetType5Arrows         ST_IconSetType = 14
	ST_IconSetType5ArrowsGray     ST_IconSetType = 15
	ST_IconSetType5Rating         ST_IconSetType = 16
	ST_IconSetType5Quarters       ST_IconSetType = 17
)

// Validate validates the CT_XmlCellPr and its children
func (_gcgcaf *CT_XmlCellPr) Validate() error {
	return _gcgcaf.ValidateWithPath("\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072")
}
func (_dadaab *CT_PivotAreaReference) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dadaab.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dadaab.FieldAttr)})
	}
	if _dadaab.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dadaab.CountAttr)})
	}
	if _dadaab.SelectedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.SelectedAttr))})
	}
	if _dadaab.ByPositionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.ByPositionAttr))})
	}
	if _dadaab.RelativeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.RelativeAttr))})
	}
	if _dadaab.DefaultSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.DefaultSubtotalAttr))})
	}
	if _dadaab.SumSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.SumSubtotalAttr))})
	}
	if _dadaab.CountASubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.CountASubtotalAttr))})
	}
	if _dadaab.AvgSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.AvgSubtotalAttr))})
	}
	if _dadaab.MaxSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.MaxSubtotalAttr))})
	}
	if _dadaab.MinSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.MinSubtotalAttr))})
	}
	if _dadaab.ProductSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.ProductSubtotalAttr))})
	}
	if _dadaab.CountSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.CountSubtotalAttr))})
	}
	if _dadaab.StdDevSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.StdDevSubtotalAttr))})
	}
	if _dadaab.StdDevPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.StdDevPSubtotalAttr))})
	}
	if _dadaab.VarSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.VarSubtotalAttr))})
	}
	if _dadaab.VarPSubtotalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dadaab.VarPSubtotalAttr))})
	}
	e.EncodeToken(start)
	if _dadaab.X != nil {
		_eaccc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cffac := range _dadaab.X {
			e.EncodeElement(_cffac, _eaccc)
		}
	}
	if _dadaab.ExtLst != nil {
		_gdabcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dadaab.ExtLst, _gdabcg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_CalculatedMembers() *CT_CalculatedMembers { _dfea := &CT_CalculatedMembers{}; return _dfea }

// Validate validates the CT_GradientFill and its children
func (_dgae *CT_GradientFill) Validate() error {
	return _dgae.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c")
}

// ValidateWithPath validates the CT_CustomProperties and its children, prefixing error messages with path
func (_eadf *CT_CustomProperties) ValidateWithPath(path string) error {
	for _bcge, _adbe := range _eadf.CustomPr {
		if _acecg := _adbe.ValidateWithPath(_a.Sprintf("\u0025s\u002fC\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u005b\u0025\u0064\u005d", path, _bcge)); _acecg != nil {
			return _acecg
		}
	}
	return nil
}

// Validate validates the CT_MetadataBlock and its children
func (_edfd *CT_MetadataBlock) Validate() error {
	return _edfd.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b")
}
func (_gebdg ST_Pane) String() string {
	switch _gebdg {
	case 0:
		return ""
	case 1:
		return "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 2:
		return "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 3:
		return "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 4:
		return "\u0074o\u0070\u004c\u0065\u0066\u0074"
	}
	return ""
}
func (_eagacf *CT_FontFamily) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eagacf.ValAttr = 0
	for _, _dbadb := range start.Attr {
		if _dbadb.Name.Local == "\u0076\u0061\u006c" {
			_dgggc, _aeaca := _g.ParseInt(_dbadb.Value, 10, 64)
			if _aeaca != nil {
				return _aeaca
			}
			_eagacf.ValAttr = _dgggc
			continue
		}
	}
	for {
		_fdbcc, _addd := d.Token()
		if _addd != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0046o\u006et\u0046a\u006d\u0069\u006c\u0079\u003a\u0020\u0025s", _addd)
		}
		if _gdad, _baac := _fdbcc.(_b.EndElement); _baac && _gdad.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_WebPublishObjects and its children
func (_gbgcgc *CT_WebPublishObjects) Validate() error {
	return _gbgcgc.ValidateWithPath("C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073")
}
func (_cfbcab ST_rwColActionType) String() string {
	switch _cfbcab {
	case 0:
		return ""
	case 1:
		return "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case 2:
		return "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case 3:
		return "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case 4:
		return "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return ""
}

// ValidateWithPath validates the CT_MergeCells and its children, prefixing error messages with path
func (_aedag *CT_MergeCells) ValidateWithPath(path string) error {
	for _dggca, _afaab := range _aedag.MergeCell {
		if _gfacf := _afaab.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u004d\u0065\u0072g\u0065\u0043\u0065\u006c\u006c\u005b\u0025\u0064\u005d", path, _dggca)); _gfacf != nil {
			return _gfacf
		}
	}
	return nil
}
func (_gbadbg ST_UnderlineValues) String() string {
	switch _gbadbg {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u006e\u0067\u006c\u0065"
	case 2:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 3:
		return "\u0073\u0069n\u0067\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 4:
		return "\u0064\u006fu\u0062\u006c\u0065A\u0063\u0063\u006f\u0075\u006e\u0074\u0069\u006e\u0067"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_RevisionHeader and its children, prefixing error messages with path
func (_edgad *CT_RevisionHeader) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_edgad.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _edgad.GuidAttr)
	}
	if _cggea := _edgad.SheetIdMap.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"); _cggea != nil {
		return _cggea
	}
	if _edgad.ReviewedList != nil {
		if _gfcfd := _edgad.ReviewedList.ValidateWithPath(path + "\u002f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"); _gfcfd != nil {
			return _gfcfd
		}
	}
	if _edgad.ExtLst != nil {
		if _eeaab := _edgad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eeaab != nil {
			return _eeaab
		}
	}
	return nil
}
func NewCT_Hyperlink() *CT_Hyperlink { _affbb := &CT_Hyperlink{}; return _affbb }

// ValidateWithPath validates the Connections and its children, prefixing error messages with path
func (_dfefdg *Connections) ValidateWithPath(path string) error {
	if _bfefc := _dfefdg.CT_Connections.ValidateWithPath(path); _bfefc != nil {
		return _bfefc
	}
	return nil
}
func (_bcdgd *ST_ItemType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bcdgd = 0
	case "\u0064\u0061\u0074\u0061":
		*_bcdgd = 1
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_bcdgd = 2
	case "\u0073\u0075\u006d":
		*_bcdgd = 3
	case "\u0063\u006f\u0075\u006e\u0074\u0041":
		*_bcdgd = 4
	case "\u0061\u0076\u0067":
		*_bcdgd = 5
	case "\u006d\u0061\u0078":
		*_bcdgd = 6
	case "\u006d\u0069\u006e":
		*_bcdgd = 7
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_bcdgd = 8
	case "\u0063\u006f\u0075n\u0074":
		*_bcdgd = 9
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_bcdgd = 10
	case "\u0073t\u0064\u0044\u0065\u0076\u0050":
		*_bcdgd = 11
	case "\u0076\u0061\u0072":
		*_bcdgd = 12
	case "\u0076\u0061\u0072\u0050":
		*_bcdgd = 13
	case "\u0067\u0072\u0061n\u0064":
		*_bcdgd = 14
	case "\u0062\u006c\u0061n\u006b":
		*_bcdgd = 15
	}
	return nil
}
func (_bcdabe ST_CfType) Validate() error { return _bcdabe.ValidateWithPath("") }

type CT_ChartsheetView struct {

	// Sheet Tab Selected
	TabSelectedAttr *bool

	// Window Zoom Scale
	ZoomScaleAttr *uint32

	// Workbook View Id
	WorkbookViewIdAttr uint32

	// Zoom To Fit
	ZoomToFitAttr *bool
	ExtLst        *CT_ExtensionList
}

// Validate validates the AG_RevData and its children
func (_ffec *AG_RevData) Validate() error {
	return _ffec.ValidateWithPath("\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061")
}

type ST_UpdateLinks byte

// ValidateWithPath validates the CT_QueryCache and its children, prefixing error messages with path
func (_feabdg *CT_QueryCache) ValidateWithPath(path string) error {
	for _egaag, _baded := range _feabdg.Query {
		if _fefff := _baded.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fQ\u0075\u0065\u0072\u0079\u005b\u0025\u0064\u005d", path, _egaag)); _fefff != nil {
			return _fefff
		}
	}
	return nil
}
func (_edgafd *ST_FormulaExpression) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edgafd = 0
	case "\u0072\u0065\u0066":
		*_edgafd = 1
	case "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072":
		*_edgafd = 2
	case "\u0061\u0072\u0065\u0061":
		*_edgafd = 3
	case "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr":
		*_edgafd = 4
	case "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061":
		*_edgafd = 5
	}
	return nil
}
func NewCT_SheetView() *CT_SheetView { _cafffa := &CT_SheetView{}; return _cafffa }
func (_fddgge *CT_QueryTable) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _fddgge.NameAttr)})
	if _fddgge.HeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.HeadersAttr))})
	}
	if _fddgge.RowNumbersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.RowNumbersAttr))})
	}
	if _fddgge.DisableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.DisableRefreshAttr))})
	}
	if _fddgge.BackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065f\u0072\u0065\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.BackgroundRefreshAttr))})
	}
	if _fddgge.FirstBackgroundRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0072\u0073tB\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0052\u0065\u0066\u0072\u0065s\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.FirstBackgroundRefreshAttr))})
	}
	if _fddgge.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.RefreshOnLoadAttr))})
	}
	if _fddgge.GrowShrinkTypeAttr != ST_GrowShrinkTypeUnset {
		_adcfa, _efaecb := _fddgge.GrowShrinkTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0067\u0072\u006f\u0077\u0053\u0068\u0072\u0069\u006ek\u0054\u0079\u0070\u0065"})
		if _efaecb != nil {
			return _efaecb
		}
		start.Attr = append(start.Attr, _adcfa)
	}
	if _fddgge.FillFormulasAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.FillFormulasAttr))})
	}
	if _fddgge.RemoveDataOnSaveAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065m\u006f\u0076\u0065D\u0061\u0074\u0061\u004f\u006e\u0053\u0061\u0076\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.RemoveDataOnSaveAttr))})
	}
	if _fddgge.DisableEditAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0061\u0062\u006c\u0065\u0045\u0064\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.DisableEditAttr))})
	}
	if _fddgge.PreserveFormattingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.PreserveFormattingAttr))})
	}
	if _fddgge.AdjustColumnWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0064\u006a\u0075\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006eW\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.AdjustColumnWidthAttr))})
	}
	if _fddgge.IntermediateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0074e\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.IntermediateAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _fddgge.ConnectionIdAttr)})
	if _fddgge.AutoFormatIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_fddgge.AutoFormatIdAttr)})
	}
	if _fddgge.ApplyNumberFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyNumberFormatsAttr))})
	}
	if _fddgge.ApplyBorderFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyBorderFormatsAttr))})
	}
	if _fddgge.ApplyFontFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyFontFormatsAttr))})
	}
	if _fddgge.ApplyPatternFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyPatternFormatsAttr))})
	}
	if _fddgge.ApplyAlignmentFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyAlignmentFormatsAttr))})
	}
	if _fddgge.ApplyWidthHeightFormatsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fddgge.ApplyWidthHeightFormatsAttr))})
	}
	e.EncodeToken(start)
	if _fddgge.QueryTableRefresh != nil {
		_ggeff := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068"}}
		e.EncodeElement(_fddgge.QueryTableRefresh, _ggeff)
	}
	if _fddgge.ExtLst != nil {
		_gbbef := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_fddgge.ExtLst, _gbbef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deecc ST_WebSourceType) ValidateWithPath(path string) error {
	switch _deecc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_deecc))
	}
	return nil
}

const (
	ST_FieldSortTypeUnset      ST_FieldSortType = 0
	ST_FieldSortTypeManual     ST_FieldSortType = 1
	ST_FieldSortTypeAscending  ST_FieldSortType = 2
	ST_FieldSortTypeDescending ST_FieldSortType = 3
)

func NewCT_ChartsheetViews() *CT_ChartsheetViews { _eddd := &CT_ChartsheetViews{}; return _eddd }
func (_baddf ST_RevisionAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_eedgef := _b.Attr{}
	_eedgef.Name = name
	switch _baddf {
	case ST_RevisionActionUnset:
		_eedgef.Value = ""
	case ST_RevisionActionAdd:
		_eedgef.Value = "\u0061\u0064\u0064"
	case ST_RevisionActionDelete:
		_eedgef.Value = "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return _eedgef, nil
}

// ValidateWithPath validates the CT_GroupItems and its children, prefixing error messages with path
func (_eacbg *CT_GroupItems) ValidateWithPath(path string) error {
	for _bccgd, _cbead := range _eacbg.M {
		if _agbde := _cbead.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _bccgd)); _agbde != nil {
			return _agbde
		}
	}
	for _gbead, _egbecb := range _eacbg.N {
		if _gegbf := _egbecb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _gbead)); _gegbf != nil {
			return _gegbf
		}
	}
	for _bgbge, _fbebf := range _eacbg.B {
		if _eaeceg := _fbebf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u005b\u0025\u0064\u005d", path, _bgbge)); _eaeceg != nil {
			return _eaeceg
		}
	}
	for _abad, _dgbgd := range _eacbg.E {
		if _aaefc := _dgbgd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _abad)); _aaefc != nil {
			return _aaefc
		}
	}
	for _bbda, _agfed := range _eacbg.S {
		if _aaaa := _agfed.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _bbda)); _aaaa != nil {
			return _aaaa
		}
	}
	for _ddea, _aagb := range _eacbg.D {
		if _abceb := _aagb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0044\u005b\u0025\u0064\u005d", path, _ddea)); _abceb != nil {
			return _abceb
		}
	}
	return nil
}

// Validate validates the CT_ProtectedRanges and its children
func (_bffaf *CT_ProtectedRanges) Validate() error {
	return _bffaf.ValidateWithPath("\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073")
}
func (_cgcba *CT_FontName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _cgcba.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aecf *CT_ControlPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_aecf.Anchor = NewCT_ObjectAnchor()
	for _, _eade := range start.Attr {
		if _eade.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _eade.Name.Local == "\u0069\u0064" || _eade.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _eade.Name.Local == "\u0069\u0064" {
			_cedd, _cabg := _eade.Value, error(nil)
			if _cabg != nil {
				return _cabg
			}
			_aecf.IdAttr = &_cedd
			continue
		}
		if _eade.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_cfbff, _ebae := _g.ParseBool(_eade.Value)
			if _ebae != nil {
				return _ebae
			}
			_aecf.AutoPictAttr = &_cfbff
			continue
		}
		if _eade.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_cbcg, _cgbac := _eade.Value, error(nil)
			if _cgbac != nil {
				return _cgbac
			}
			_aecf.MacroAttr = &_cbcg
			continue
		}
		if _eade.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_beebf, _bbfed := _g.ParseBool(_eade.Value)
			if _bbfed != nil {
				return _bbfed
			}
			_aecf.PrintAttr = &_beebf
			continue
		}
		if _eade.Name.Local == "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073" {
			_dacgdf, _bfdbbd := _g.ParseBool(_eade.Value)
			if _bfdbbd != nil {
				return _bfdbbd
			}
			_aecf.RecalcAlwaysAttr = &_dacgdf
			continue
		}
		if _eade.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ddgf, _abab := _g.ParseBool(_eade.Value)
			if _abab != nil {
				return _abab
			}
			_aecf.UiObjectAttr = &_ddgf
			continue
		}
		if _eade.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_geag, _fafba := _g.ParseBool(_eade.Value)
			if _fafba != nil {
				return _fafba
			}
			_aecf.AutoFillAttr = &_geag
			continue
		}
		if _eade.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_feaa, _cbdbe := _g.ParseBool(_eade.Value)
			if _cbdbe != nil {
				return _cbdbe
			}
			_aecf.AutoLineAttr = &_feaa
			continue
		}
		if _eade.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_beedg, _gbcbdb := _g.ParseBool(_eade.Value)
			if _gbcbdb != nil {
				return _gbcbdb
			}
			_aecf.LockedAttr = &_beedg
			continue
		}
		if _eade.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_ffgff, _bbfad := _g.ParseBool(_eade.Value)
			if _bbfad != nil {
				return _bbfad
			}
			_aecf.DisabledAttr = &_ffgff
			continue
		}
		if _eade.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_adab, _dcfb := _eade.Value, error(nil)
			if _dcfb != nil {
				return _dcfb
			}
			_aecf.AltTextAttr = &_adab
			continue
		}
		if _eade.Name.Local == "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c" {
			_aebb, _fcfd := _eade.Value, error(nil)
			if _fcfd != nil {
				return _fcfd
			}
			_aecf.LinkedCellAttr = &_aebb
			continue
		}
		if _eade.Name.Local == "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065" {
			_gbecfab, _gafg := _eade.Value, error(nil)
			if _gafg != nil {
				return _gafg
			}
			_aecf.ListFillRangeAttr = &_gbecfab
			continue
		}
		if _eade.Name.Local == "\u0063\u0066" {
			_fddf, _cdab := _eade.Value, error(nil)
			if _cdab != nil {
				return _cdab
			}
			_aecf.CfAttr = &_fddf
			continue
		}
		if _eade.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_fbee, _dcbef := _g.ParseBool(_eade.Value)
			if _dcbef != nil {
				return _dcbef
			}
			_aecf.DefaultSizeAttr = &_fbee
			continue
		}
	}
_cfbg:
	for {
		_ebfb, _cegc := d.Token()
		if _cegc != nil {
			return _cegc
		}
		switch _eacg := _ebfb.(type) {
		case _b.StartElement:
			switch _eacg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _daaf := d.DecodeElement(_aecf.Anchor, &_eacg); _daaf != nil {
					return _daaf
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006et\u0072\u006f\u006c\u0050\u0072\u0020\u0025\u0076", _eacg.Name)
				if _gbfdd := d.Skip(); _gbfdd != nil {
					return _gbfdd
				}
			}
		case _b.EndElement:
			break _cfbg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Selection and its children
func (_gagcb *CT_Selection) Validate() error {
	return _gagcb.ValidateWithPath("\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_AutoFilter and its children
func (_gae *CT_AutoFilter) Validate() error {
	return _gae.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_cbbdf *Headers) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cbbdf.CT_RevisionHeaders = *NewCT_RevisionHeaders()
	for _, _gdedb := range start.Attr {
		if _gdedb.Name.Local == "\u0065x\u0063\u006c\u0075\u0073\u0069\u0076e" {
			_dgaddb, _bfeab := _g.ParseBool(_gdedb.Value)
			if _bfeab != nil {
				return _bfeab
			}
			_cbbdf.ExclusiveAttr = &_dgaddb
			continue
		}
		if _gdedb.Name.Local == "\u006c\u0061\u0073\u0074\u0047\u0075\u0069\u0064" {
			_gcaac, _fbaabf := _gdedb.Value, error(nil)
			if _fbaabf != nil {
				return _fbaabf
			}
			_cbbdf.LastGuidAttr = &_gcaac
			continue
		}
		if _gdedb.Name.Local == "\u0073\u0068\u0061\u0072\u0065\u0064" {
			_dbeaaa, _fcfde := _g.ParseBool(_gdedb.Value)
			if _fcfde != nil {
				return _fcfde
			}
			_cbbdf.SharedAttr = &_dbeaaa
			continue
		}
		if _gdedb.Name.Local == "\u0064\u0069\u0073\u006b\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073" {
			_beceb, _afee := _g.ParseBool(_gdedb.Value)
			if _afee != nil {
				return _afee
			}
			_cbbdf.DiskRevisionsAttr = &_beceb
			continue
		}
		if _gdedb.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_daffa, _adadg := _g.ParseBool(_gdedb.Value)
			if _adadg != nil {
				return _adadg
			}
			_cbbdf.HistoryAttr = &_daffa
			continue
		}
		if _gdedb.Name.Local == "\u0074\u0072\u0061\u0063\u006b\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0073" {
			_defbc, _cacaf := _g.ParseBool(_gdedb.Value)
			if _cacaf != nil {
				return _cacaf
			}
			_cbbdf.TrackRevisionsAttr = &_defbc
			continue
		}
		if _gdedb.Name.Local == "\u0067\u0075\u0069\u0064" {
			_aacga, _adeaf := _gdedb.Value, error(nil)
			if _adeaf != nil {
				return _adeaf
			}
			_cbbdf.GuidAttr = _aacga
			continue
		}
		if _gdedb.Name.Local == "\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0049\u0064" {
			_dcgeab, _gdfffg := _g.ParseUint(_gdedb.Value, 10, 32)
			if _gdfffg != nil {
				return _gdfffg
			}
			_aeaafd := uint32(_dcgeab)
			_cbbdf.RevisionIdAttr = &_aeaafd
			continue
		}
		if _gdedb.Name.Local == "\u0076e\u0072\u0073\u0069\u006f\u006e" {
			_ffcbfd, _fdga := _g.ParseInt(_gdedb.Value, 10, 32)
			if _fdga != nil {
				return _fdga
			}
			_gedbac := int32(_ffcbfd)
			_cbbdf.VersionAttr = &_gedbac
			continue
		}
		if _gdedb.Name.Local == "\u006b\u0065\u0065\u0070\u0043\u0068\u0061\u006e\u0067\u0065\u0048\u0069s\u0074\u006f\u0072\u0079" {
			_eagfb, _bcfbf := _g.ParseBool(_gdedb.Value)
			if _bcfbf != nil {
				return _bcfbf
			}
			_cbbdf.KeepChangeHistoryAttr = &_eagfb
			continue
		}
		if _gdedb.Name.Local == "\u0070r\u006f\u0074\u0065\u0063\u0074\u0065d" {
			_edacd, _aegcag := _g.ParseBool(_gdedb.Value)
			if _aegcag != nil {
				return _aegcag
			}
			_cbbdf.ProtectedAttr = &_edacd
			continue
		}
		if _gdedb.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0048\u0069\u0073\u0074\u006f\u0072\u0079" {
			_gddee, _cdgb := _g.ParseUint(_gdedb.Value, 10, 32)
			if _cdgb != nil {
				return _cdgb
			}
			_ggbba := uint32(_gddee)
			_cbbdf.PreserveHistoryAttr = &_ggbba
			continue
		}
	}
_gabfb:
	for {
		_gfbed, _fedebee := d.Token()
		if _fedebee != nil {
			return _fedebee
		}
		switch _dbbccd := _gfbed.(type) {
		case _b.StartElement:
			switch _dbbccd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				_geeec := NewCT_RevisionHeader()
				if _ecaga := d.DecodeElement(_geeec, &_dbbccd); _ecaga != nil {
					return _ecaga
				}
				_cbbdf.Header = append(_cbbdf.Header, _geeec)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0048e\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _dbbccd.Name)
				if _gbfgf := d.Skip(); _gbfgf != nil {
					return _gbfgf
				}
			}
		case _b.EndElement:
			break _gabfb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_UndoInfo and its children
func (_aefge *CT_UndoInfo) Validate() error {
	return _aefge.ValidateWithPath("C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f")
}

type ST_VolDepType byte
type CT_MdxMetadata struct {

	// MDX Metadata Record Count
	CountAttr *uint32

	// MDX Metadata Record
	Mdx []*CT_Mdx
}
type ST_WebSourceType byte

// Validate validates the SingleXmlCells and its children
func (_gggad *SingleXmlCells) Validate() error {
	return _gggad.ValidateWithPath("\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

// ValidateWithPath validates the CT_RevisionComment and its children, prefixing error messages with path
func (_afbaf *CT_RevisionComment) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_afbaf.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _afbaf.GuidAttr)
	}
	if _aacffg := _afbaf.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _aacffg != nil {
		return _aacffg
	}
	return nil
}

// Validate validates the CT_RevisionConflict and its children
func (_fcddc *CT_RevisionConflict) Validate() error {
	return _fcddc.ValidateWithPath("\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074")
}
func (_eefde ST_TableType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eefde.String(), start)
}

type ST_RevisionAction byte

func (_ecedb ST_ExternalConnectionType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecedb.String(), start)
}
func (_cbfaf ST_MdxSetOrder) String() string {
	switch _cbfaf {
	case 0:
		return ""
	case 1:
		return "\u0075"
	case 2:
		return "\u0061"
	case 3:
		return "\u0064"
	case 4:
		return "\u0061\u0061"
	case 5:
		return "\u0061\u0064"
	case 6:
		return "\u006e\u0061"
	case 7:
		return "\u006e\u0064"
	}
	return ""
}
func (_ceabb *CT_I) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ceabb.TAttr != ST_ItemTypeUnset {
		_acac, _agbgc := _ceabb.TAttr.MarshalXMLAttr(_b.Name{Local: "\u0074"})
		if _agbgc != nil {
			return _agbgc
		}
		start.Attr = append(start.Attr, _acac)
	}
	if _ceabb.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_ceabb.RAttr)})
	}
	if _ceabb.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_ceabb.IAttr)})
	}
	e.EncodeToken(start)
	if _ceabb.X != nil {
		_fgcgb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cafaa := range _ceabb.X {
			e.EncodeElement(_cafaa, _fgcgb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gadeaa *CT_DataConsolidate) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gadeaa.FunctionAttr != ST_DataConsolidateFunctionUnset {
		_aega, _daddd := _gadeaa.FunctionAttr.MarshalXMLAttr(_b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"})
		if _daddd != nil {
			return _daddd
		}
		start.Attr = append(start.Attr, _aega)
	}
	if _gadeaa.StartLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0074\u0061\u0072\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gadeaa.StartLabelsAttr))})
	}
	if _gadeaa.LeftLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0065\u0066\u0074\u004c\u0061\u0062\u0065\u006c\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gadeaa.LeftLabelsAttr))})
	}
	if _gadeaa.TopLabelsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0070\u004c\u0061\u0062\u0065\u006cs"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gadeaa.TopLabelsAttr))})
	}
	if _gadeaa.LinkAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gadeaa.LinkAttr))})
	}
	e.EncodeToken(start)
	if _gadeaa.DataRefs != nil {
		_bdba := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0064\u0061\u0074\u0061\u0052\u0065\u0066\u0073"}}
		e.EncodeElement(_gadeaa.DataRefs, _bdba)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adgfaf *CT_GroupLevel) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _adgfaf.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _adgfaf.CaptionAttr)})
	if _adgfaf.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_adgfaf.UserAttr))})
	}
	if _adgfaf.CustomRollUpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_adgfaf.CustomRollUpAttr))})
	}
	e.EncodeToken(start)
	if _adgfaf.Groups != nil {
		_dcead := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0067\u0072\u006f\u0075\u0070s"}}
		e.EncodeElement(_adgfaf.Groups, _dcead)
	}
	if _adgfaf.ExtLst != nil {
		_bcgfge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_adgfaf.ExtLst, _bcgfge)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acaed ST_TextHAlign) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fcbgd := _b.Attr{}
	_fcbgd.Name = name
	switch _acaed {
	case ST_TextHAlignUnset:
		_fcbgd.Value = ""
	case ST_TextHAlignLeft:
		_fcbgd.Value = "\u006c\u0065\u0066\u0074"
	case ST_TextHAlignCenter:
		_fcbgd.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_TextHAlignRight:
		_fcbgd.Value = "\u0072\u0069\u0067h\u0074"
	case ST_TextHAlignJustify:
		_fcbgd.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_TextHAlignDistributed:
		_fcbgd.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _fcbgd, nil
}
func (_fdbacg ST_SortBy) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bccgaf := _b.Attr{}
	_bccgaf.Name = name
	switch _fdbacg {
	case ST_SortByUnset:
		_bccgaf.Value = ""
	case ST_SortByValue:
		_bccgaf.Value = "\u0076\u0061\u006cu\u0065"
	case ST_SortByCellColor:
		_bccgaf.Value = "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case ST_SortByFontColor:
		_bccgaf.Value = "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case ST_SortByIcon:
		_bccgaf.Value = "\u0069\u0063\u006f\u006e"
	}
	return _bccgaf, nil
}

// Validate validates the CT_Xf and its children
func (_bcbgf *CT_Xf) Validate() error { return _bcbgf.ValidateWithPath("\u0043\u0054\u005fX\u0066") }

// ValidateWithPath validates the CT_MetadataStrings and its children, prefixing error messages with path
func (_cedga *CT_MetadataStrings) ValidateWithPath(path string) error {
	for _ebcd, _ffgcb := range _cedga.S {
		if _gdfg := _ffgcb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _ebcd)); _gdfg != nil {
			return _gdfg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotCacheDefinition and its children, prefixing error messages with path
func (_efabdg *CT_PivotCacheDefinition) ValidateWithPath(path string) error {
	if _dcefg := _efabdg.CacheSource.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"); _dcefg != nil {
		return _dcefg
	}
	if _egba := _efabdg.CacheFields.ValidateWithPath(path + "\u002f\u0043\u0061c\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"); _egba != nil {
		return _egba
	}
	if _efabdg.CacheHierarchies != nil {
		if _gfdfg := _efabdg.CacheHierarchies.ValidateWithPath(path + "\u002f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072c\u0068\u0069\u0065\u0073"); _gfdfg != nil {
			return _gfdfg
		}
	}
	if _efabdg.Kpis != nil {
		if _egaeg := _efabdg.Kpis.ValidateWithPath(path + "\u002f\u004b\u0070i\u0073"); _egaeg != nil {
			return _egaeg
		}
	}
	if _efabdg.TupleCache != nil {
		if _aafdc := _efabdg.TupleCache.ValidateWithPath(path + "/\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"); _aafdc != nil {
			return _aafdc
		}
	}
	if _efabdg.CalculatedItems != nil {
		if _eabga := _efabdg.CalculatedItems.ValidateWithPath(path + "\u002f\u0043a\u006c\u0063\u0075l\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"); _eabga != nil {
			return _eabga
		}
	}
	if _efabdg.CalculatedMembers != nil {
		if _eddea := _efabdg.CalculatedMembers.ValidateWithPath(path + "\u002fC\u0061l\u0063\u0075\u006c\u0061\u0074e\u0064\u004de\u006d\u0062\u0065\u0072\u0073"); _eddea != nil {
			return _eddea
		}
	}
	if _efabdg.Dimensions != nil {
		if _efcbd := _efabdg.Dimensions.ValidateWithPath(path + "/\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"); _efcbd != nil {
			return _efcbd
		}
	}
	if _efabdg.MeasureGroups != nil {
		if _deabcg := _efabdg.MeasureGroups.ValidateWithPath(path + "\u002f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047r\u006f\u0075\u0070\u0073"); _deabcg != nil {
			return _deabcg
		}
	}
	if _efabdg.Maps != nil {
		if _dddcd := _efabdg.Maps.ValidateWithPath(path + "\u002f\u004d\u0061p\u0073"); _dddcd != nil {
			return _dddcd
		}
	}
	if _efabdg.ExtLst != nil {
		if _bfdea := _efabdg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfdea != nil {
			return _bfdea
		}
	}
	return nil
}

const (
	ST_TypeUnset  ST_Type = 0
	ST_TypeNone   ST_Type = 1
	ST_TypeAll    ST_Type = 2
	ST_TypeRow    ST_Type = 3
	ST_TypeColumn ST_Type = 4
)

func (_cdcgbf *ST_DataConsolidateFunction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdcgbf = 0
	case "\u0061v\u0065\u0072\u0061\u0067\u0065":
		*_cdcgbf = 1
	case "\u0063\u006f\u0075n\u0074":
		*_cdcgbf = 2
	case "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds":
		*_cdcgbf = 3
	case "\u006d\u0061\u0078":
		*_cdcgbf = 4
	case "\u006d\u0069\u006e":
		*_cdcgbf = 5
	case "\u0070r\u006f\u0064\u0075\u0063\u0074":
		*_cdcgbf = 6
	case "\u0073\u0074\u0064\u0044\u0065\u0076":
		*_cdcgbf = 7
	case "\u0073t\u0064\u0044\u0065\u0076\u0070":
		*_cdcgbf = 8
	case "\u0073\u0075\u006d":
		*_cdcgbf = 9
	case "\u0076\u0061\u0072":
		*_cdcgbf = 10
	case "\u0076\u0061\u0072\u0070":
		*_cdcgbf = 11
	}
	return nil
}

type CT_DdeLink struct {

	// Service name
	DdeServiceAttr string

	// Topic for DDE server
	DdeTopicAttr string

	// DDE Items Collection
	DdeItems *CT_DdeItems
}

func (_efbcb *CT_GradientFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aafe := range start.Attr {
		if _aafe.Name.Local == "\u0074\u0079\u0070\u0065" {
			_efbcb.TypeAttr.UnmarshalXMLAttr(_aafe)
			continue
		}
		if _aafe.Name.Local == "\u0064\u0065\u0067\u0072\u0065\u0065" {
			_gafda, _eadcc := _g.ParseFloat(_aafe.Value, 64)
			if _eadcc != nil {
				return _eadcc
			}
			_efbcb.DegreeAttr = &_gafda
			continue
		}
		if _aafe.Name.Local == "\u006c\u0065\u0066\u0074" {
			_ccffc, _bbded := _g.ParseFloat(_aafe.Value, 64)
			if _bbded != nil {
				return _bbded
			}
			_efbcb.LeftAttr = &_ccffc
			continue
		}
		if _aafe.Name.Local == "\u0072\u0069\u0067h\u0074" {
			_acef, _bcdg := _g.ParseFloat(_aafe.Value, 64)
			if _bcdg != nil {
				return _bcdg
			}
			_efbcb.RightAttr = &_acef
			continue
		}
		if _aafe.Name.Local == "\u0074\u006f\u0070" {
			_gccgf, _acdcea := _g.ParseFloat(_aafe.Value, 64)
			if _acdcea != nil {
				return _acdcea
			}
			_efbcb.TopAttr = &_gccgf
			continue
		}
		if _aafe.Name.Local == "\u0062\u006f\u0074\u0074\u006f\u006d" {
			_abcae, _ebbdf := _g.ParseFloat(_aafe.Value, 64)
			if _ebbdf != nil {
				return _ebbdf
			}
			_efbcb.BottomAttr = &_abcae
			continue
		}
	}
_dfcbc:
	for {
		_gfddb, _fadbd := d.Token()
		if _fadbd != nil {
			return _fadbd
		}
		switch _ceeee := _gfddb.(type) {
		case _b.StartElement:
			switch _ceeee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u006f\u0070"}:
				_decga := NewCT_GradientStop()
				if _aadde := d.DecodeElement(_decga, &_ceeee); _aadde != nil {
					return _aadde
				}
				_efbcb.Stop = append(_efbcb.Stop, _decga)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _ceeee.Name)
				if _dfcfg := d.Skip(); _dfcfg != nil {
					return _dfcfg
				}
			}
		case _b.EndElement:
			break _dfcbc
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Dxf and its children
func (_dafgg *CT_Dxf) Validate() error {
	return _dafgg.ValidateWithPath("\u0043\u0054\u005f\u0044\u0078\u0066")
}

// ValidateWithPath validates the CT_Parameters and its children, prefixing error messages with path
func (_ccdeb *CT_Parameters) ValidateWithPath(path string) error {
	for _dcbad, _aaafd := range _ccdeb.Parameter {
		if _abbae := _aaafd.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0050\u0061\u0072a\u006d\u0065\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _dcbad)); _abbae != nil {
			return _abbae
		}
	}
	return nil
}

// Validate validates the CT_AutoSortScope and its children
func (_cac *CT_AutoSortScope) Validate() error {
	return _cac.ValidateWithPath("\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065")
}
func NewCT_SheetViews() *CT_SheetViews { _ecdea := &CT_SheetViews{}; return _ecdea }
func (_gcfecb *CT_WorksheetSource) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcfecb.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_gcfecb.RefAttr)})
	}
	if _gcfecb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gcfecb.NameAttr)})
	}
	if _gcfecb.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gcfecb.SheetAttr)})
	}
	if _gcfecb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gcfecb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffbef ST_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ffbef.String(), start)
}
func (_afbfc *CT_Member) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _afbfc.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aebag *CT_FutureMetadata) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecadb := range start.Attr {
		if _ecadb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebdfe, _feggd := _ecadb.Value, error(nil)
			if _feggd != nil {
				return _feggd
			}
			_aebag.NameAttr = _ebdfe
			continue
		}
		if _ecadb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_decb, _fdgbg := _g.ParseUint(_ecadb.Value, 10, 32)
			if _fdgbg != nil {
				return _fdgbg
			}
			_cgdeg := uint32(_decb)
			_aebag.CountAttr = &_cgdeg
			continue
		}
	}
_aggf:
	for {
		_abcee, _dfbeb := d.Token()
		if _dfbeb != nil {
			return _dfbeb
		}
		switch _geafe := _abcee.(type) {
		case _b.StartElement:
			switch _geafe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006b"}:
				_ebeef := NewCT_FutureMetadataBlock()
				if _gdcba := d.DecodeElement(_ebeef, &_geafe); _gdcba != nil {
					return _gdcba
				}
				_aebag.Bk = append(_aebag.Bk, _ebeef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aebag.ExtLst = NewCT_ExtensionList()
				if _deefc := d.DecodeElement(_aebag.ExtLst, &_geafe); _deefc != nil {
					return _deefc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0020\u0025\u0076", _geafe.Name)
				if _ggea := d.Skip(); _ggea != nil {
					return _ggea
				}
			}
		case _b.EndElement:
			break _aggf
		case _b.CharData:
		}
	}
	return nil
}
func (_efbab ST_TotalsRowFunction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efbab.String(), start)
}

// ValidateWithPath validates the CT_DataBinding and its children, prefixing error messages with path
func (_gadg *CT_DataBinding) ValidateWithPath(path string) error { return nil }
func (_cdegc *CT_PhoneticPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bgdab := range start.Attr {
		if _bgdab.Name.Local == "\u0066\u006f\u006e\u0074\u0049\u0064" {
			_gafdb, _feeeba := _g.ParseUint(_bgdab.Value, 10, 32)
			if _feeeba != nil {
				return _feeeba
			}
			_cdegc.FontIdAttr = uint32(_gafdb)
			continue
		}
		if _bgdab.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cdegc.TypeAttr.UnmarshalXMLAttr(_bgdab)
			continue
		}
		if _bgdab.Name.Local == "\u0061l\u0069\u0067\u006e\u006d\u0065\u006et" {
			_cdegc.AlignmentAttr.UnmarshalXMLAttr(_bgdab)
			continue
		}
	}
	for {
		_dgaff, _gegae := d.Token()
		if _gegae != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050h\u006fn\u0065t\u0069\u0063\u0050\u0072\u003a\u0020\u0025s", _gegae)
		}
		if _adcef, _adffe := _dgaff.(_b.EndElement); _adffe && _adcef.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ExternalSheetDataSet() *CT_ExternalSheetDataSet {
	_dfddg := &CT_ExternalSheetDataSet{}
	return _dfddg
}
func (_gfabf *CT_Sheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gffgd := range start.Attr {
		if _gffgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gffgd.Name.Local == "\u0069\u0064" || _gffgd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gffgd.Name.Local == "\u0069\u0064" {
			_badbcc, _cddda := _gffgd.Value, error(nil)
			if _cddda != nil {
				return _cddda
			}
			_gfabf.IdAttr = _badbcc
			continue
		}
		if _gffgd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_defffc, _dfbff := _gffgd.Value, error(nil)
			if _dfbff != nil {
				return _dfbff
			}
			_gfabf.NameAttr = _defffc
			continue
		}
		if _gffgd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_aceedb, _gdbbeb := _g.ParseUint(_gffgd.Value, 10, 32)
			if _gdbbeb != nil {
				return _gdbbeb
			}
			_gfabf.SheetIdAttr = uint32(_aceedb)
			continue
		}
		if _gffgd.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_gfabf.StateAttr.UnmarshalXMLAttr(_gffgd)
			continue
		}
	}
	for {
		_fgcacb, _ageae := d.Token()
		if _ageae != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fS\u0068\u0065\u0065\u0074: \u0025\u0073", _ageae)
		}
		if _bgaacg, _abcfg := _fgcacb.(_b.EndElement); _abcfg && _bgaacg.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomChartsheetView and its children, prefixing error messages with path
func (_gbgc *CT_CustomChartsheetView) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_gbgc.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _gbgc.GuidAttr)
	}
	if _efdg := _gbgc.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _efdg != nil {
		return _efdg
	}
	if _gbgc.PageMargins != nil {
		if _dbgad := _gbgc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _dbgad != nil {
			return _dbgad
		}
	}
	if _gbgc.PageSetup != nil {
		if _gaebc := _gbgc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _gaebc != nil {
			return _gaebc
		}
	}
	if _gbgc.HeaderFooter != nil {
		if _acag := _gbgc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _acag != nil {
			return _acag
		}
	}
	return nil
}
func (_eecdd ST_DataValidationImeMode) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eecdd.String(), start)
}
func (_bfbded ST_SmartTagShow) ValidateWithPath(path string) error {
	switch _bfbded {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfbded))
	}
	return nil
}
func (_dgddbe *EG_ExtensionList) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dgddbe.Ext != nil {
		_eddged := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065\u0078\u0074"}}
		for _, _cfbeg := range _dgddbe.Ext {
			e.EncodeElement(_cfbeg, _eddged)
		}
	}
	return nil
}
func NewCT_GradientStop() *CT_GradientStop {
	_ecfcf := &CT_GradientStop{}
	_ecfcf.Color = NewCT_Color()
	return _ecfcf
}
func (_ebdgdg ST_HtmlFmt) Validate() error { return _ebdgdg.ValidateWithPath("") }
func (_fcdf *CT_Query) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efdcb := range start.Attr {
		if _efdcb.Name.Local == "\u006d\u0064\u0078" {
			_gdgbf, _dfgad := _efdcb.Value, error(nil)
			if _dfgad != nil {
				return _dfgad
			}
			_fcdf.MdxAttr = _gdgbf
			continue
		}
	}
_gfbfd:
	for {
		_cfffae, _fcbcd := d.Token()
		if _fcbcd != nil {
			return _fcbcd
		}
		switch _cedag := _cfffae.(type) {
		case _b.StartElement:
			switch _cedag.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c\u0073"}:
				_fcdf.Tpls = NewCT_Tuples()
				if _fdcbb := d.DecodeElement(_fcdf.Tpls, &_cedag); _fdcbb != nil {
					return _fdcbb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0020\u0025\u0076", _cedag.Name)
				if _fbeeb := d.Skip(); _fbeeb != nil {
					return _fbeeb
				}
			}
		case _b.EndElement:
			break _gfbfd
		case _b.CharData:
		}
	}
	return nil
}
func (_eegbdd *CT_Top10) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eegbdd.TopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eegbdd.TopAttr))})
	}
	if _eegbdd.PercentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070e\u0072\u0063\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eegbdd.PercentAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _eegbdd.ValAttr)})
	if _eegbdd.FilterValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u006c\u0074\u0065\u0072\u0056\u0061l"}, Value: _a.Sprintf("\u0025\u0076", *_eegbdd.FilterValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dacee *CT_ServerFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbefc := range start.Attr {
		if _gbefc.Name.Local == "\u0063u\u006c\u0074\u0075\u0072\u0065" {
			_acedc, _eafbbc := _gbefc.Value, error(nil)
			if _eafbbc != nil {
				return _eafbbc
			}
			_dacee.CultureAttr = &_acedc
			continue
		}
		if _gbefc.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074" {
			_ceeed, _adace := _gbefc.Value, error(nil)
			if _adace != nil {
				return _adace
			}
			_dacee.FormatAttr = &_ceeed
			continue
		}
	}
	for {
		_afddg, _bedaf := d.Token()
		if _bedaf != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072F\u006f\u0072\u006da\u0074:\u0020\u0025\u0073", _bedaf)
		}
		if _dfagc, _daade := _afddg.(_b.EndElement); _daade && _dfagc.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_OleSize struct {

	// Reference
	RefAttr string
}

func NewCT_DbPr() *CT_DbPr { _ebaf := &CT_DbPr{}; return _ebaf }
func (_cadba ST_BorderStyle) String() string {
	switch _cadba {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0068\u0069\u006e"
	case 3:
		return "\u006d\u0065\u0064\u0069\u0075\u006d"
	case 4:
		return "\u0064\u0061\u0073\u0068\u0065\u0064"
	case 5:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 6:
		return "\u0074\u0068\u0069c\u006b"
	case 7:
		return "\u0064\u006f\u0075\u0062\u006c\u0065"
	case 8:
		return "\u0068\u0061\u0069\u0072"
	case 9:
		return "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064"
	case 10:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 12:
		return "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 13:
		return "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 14:
		return "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	}
	return ""
}

// ValidateWithPath validates the CT_Authors and its children, prefixing error messages with path
func (_cg *CT_Authors) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Workbook and its children, prefixing error messages with path
func (_ffgcg *CT_Workbook) ValidateWithPath(path string) error {
	if _gafgd := _ffgcg.ConformanceAttr.ValidateWithPath(path + "\u002f\u0043o\u006e\u0066\u006fr\u006d\u0061\u006e\u0063\u0065\u0041\u0074\u0074\u0072"); _gafgd != nil {
		return _gafgd
	}
	if _ffgcg.FileVersion != nil {
		if _abcff := _ffgcg.FileVersion.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"); _abcff != nil {
			return _abcff
		}
	}
	if _ffgcg.FileSharing != nil {
		if _ccbaad := _ffgcg.FileSharing.ValidateWithPath(path + "\u002f\u0046\u0069l\u0065\u0053\u0068\u0061\u0072\u0069\u006e\u0067"); _ccbaad != nil {
			return _ccbaad
		}
	}
	if _ffgcg.WorkbookPr != nil {
		if _bdfab := _ffgcg.WorkbookPr.ValidateWithPath(path + "/\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072"); _bdfab != nil {
			return _bdfab
		}
	}
	if _ffgcg.WorkbookProtection != nil {
		if _cedgdg := _ffgcg.WorkbookProtection.ValidateWithPath(path + "\u002f\u0057\u006f\u0072kb\u006f\u006f\u006b\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _cedgdg != nil {
			return _cedgdg
		}
	}
	if _ffgcg.BookViews != nil {
		if _ffagg := _ffgcg.BookViews.ValidateWithPath(path + "\u002f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073"); _ffagg != nil {
			return _ffagg
		}
	}
	if _ebbcb := _ffgcg.Sheets.ValidateWithPath(path + "\u002fS\u0068\u0065\u0065\u0074\u0073"); _ebbcb != nil {
		return _ebbcb
	}
	if _ffgcg.FunctionGroups != nil {
		if _acggg := _ffgcg.FunctionGroups.ValidateWithPath(path + "\u002fF\u0075n\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073"); _acggg != nil {
			return _acggg
		}
	}
	if _ffgcg.ExternalReferences != nil {
		if _bfgab := _ffgcg.ExternalReferences.ValidateWithPath(path + "\u002f\u0045\u0078\u0074er\u006e\u0061\u006c\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _bfgab != nil {
			return _bfgab
		}
	}
	if _ffgcg.DefinedNames != nil {
		if _abeeb := _ffgcg.DefinedNames.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073"); _abeeb != nil {
			return _abeeb
		}
	}
	if _ffgcg.CalcPr != nil {
		if _degab := _ffgcg.CalcPr.ValidateWithPath(path + "\u002fC\u0061\u006c\u0063\u0050\u0072"); _degab != nil {
			return _degab
		}
	}
	if _ffgcg.OleSize != nil {
		if _bbfaeb := _ffgcg.OleSize.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u0053\u0069\u007a\u0065"); _bbfaeb != nil {
			return _bbfaeb
		}
	}
	if _ffgcg.CustomWorkbookViews != nil {
		if _gdbge := _ffgcg.CustomWorkbookViews.ValidateWithPath(path + "/\u0043u\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006bb\u006f\u006f\u006b\u0056ie\u0077\u0073"); _gdbge != nil {
			return _gdbge
		}
	}
	if _ffgcg.PivotCaches != nil {
		if _aacdca := _ffgcg.PivotCaches.ValidateWithPath(path + "\u002f\u0050\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0073"); _aacdca != nil {
			return _aacdca
		}
	}
	if _ffgcg.SmartTagPr != nil {
		if _fddddc := _ffgcg.SmartTagPr.ValidateWithPath(path + "/\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072"); _fddddc != nil {
			return _fddddc
		}
	}
	if _ffgcg.SmartTagTypes != nil {
		if _agfga := _ffgcg.SmartTagTypes.ValidateWithPath(path + "\u002f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067T\u0079\u0070\u0065\u0073"); _agfga != nil {
			return _agfga
		}
	}
	if _ffgcg.WebPublishing != nil {
		if _fegee := _ffgcg.WebPublishing.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u0069\u006e\u0067"); _fegee != nil {
			return _fegee
		}
	}
	for _bafbb, _bbcdb := range _ffgcg.FileRecoveryPr {
		if _baeee := _bbcdb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0046\u0069le\u0052e\u0063\u006f\u0076\u0065\u0072y\u0050\u0072\u005b\u0025\u0064\u005d", path, _bafbb)); _baeee != nil {
			return _baeee
		}
	}
	if _ffgcg.WebPublishObjects != nil {
		if _deegb := _ffgcg.WebPublishObjects.ValidateWithPath(path + "\u002fW\u0065b\u0050\u0075\u0062\u006c\u0069s\u0068\u004fb\u006a\u0065\u0063\u0074\u0073"); _deegb != nil {
			return _deegb
		}
	}
	if _ffgcg.ExtLst != nil {
		if _eegcf := _ffgcg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eegcf != nil {
			return _eegcf
		}
	}
	return nil
}

// Validate validates the CT_PivotAreaReference and its children
func (_ecfbc *CT_PivotAreaReference) Validate() error {
	return _ecfbc.ValidateWithPath("C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065")
}
func (_egceg ST_PageOrder) ValidateWithPath(path string) error {
	switch _egceg {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egceg))
	}
	return nil
}
func (_bbdaa *CT_PhoneticRun) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfagc := range start.Attr {
		if _bfagc.Name.Local == "\u0073\u0062" {
			_dbaae, _feeag := _g.ParseUint(_bfagc.Value, 10, 32)
			if _feeag != nil {
				return _feeag
			}
			_bbdaa.SbAttr = uint32(_dbaae)
			continue
		}
		if _bfagc.Name.Local == "\u0065\u0062" {
			_dgffbc, _ddgef := _g.ParseUint(_bfagc.Value, 10, 32)
			if _ddgef != nil {
				return _ddgef
			}
			_bbdaa.EbAttr = uint32(_dgffbc)
			continue
		}
	}
_aabeb:
	for {
		_aagab, _cbebe := d.Token()
		if _cbebe != nil {
			return _cbebe
		}
		switch _afde := _aagab.(type) {
		case _b.StartElement:
			switch _afde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _aaeee := d.DecodeElement(&_bbdaa.T, &_afde); _aaeee != nil {
					return _aaeee
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069c\u0052u\u006e\u0020\u0025\u0076", _afde.Name)
				if _fdbg := d.Skip(); _fdbg != nil {
					return _fdbg
				}
			}
		case _b.EndElement:
			break _aabeb
		case _b.CharData:
		}
	}
	return nil
}

type ST_OleUpdate byte

func (_bcbba ST_PrintError) String() string {
	switch _bcbba {
	case 0:
		return ""
	case 1:
		return "\u0064i\u0073\u0070\u006c\u0061\u0079\u0065d"
	case 2:
		return "\u0062\u006c\u0061n\u006b"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u004e\u0041"
	}
	return ""
}

// ValidateWithPath validates the CT_TableStyleInfo and its children, prefixing error messages with path
func (_fgfdcf *CT_TableStyleInfo) ValidateWithPath(path string) error { return nil }

type CT_DdeItems struct {

	// DDE Item definition
	DdeItem []*CT_DdeItem
}

func (_aecca ST_Sqref) String() string { return _c.Join(_aecca, "\u0020") }

// Validate validates the CT_BorderPr and its children
func (_gdbb *CT_BorderPr) Validate() error {
	return _gdbb.ValidateWithPath("C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072")
}

// ValidateWithPath validates the CT_ExternalSheetName and its children, prefixing error messages with path
func (_cbbce *CT_ExternalSheetName) ValidateWithPath(path string) error { return nil }

type CT_MetadataType struct {

	// Metadata Type Name
	NameAttr string

	// Minimum Supported Version
	MinSupportedVersionAttr uint32

	// Metadata Ghost Row
	GhostRowAttr *bool

	// Metadata Ghost Column
	GhostColAttr *bool

	// Metadata Edit
	EditAttr *bool

	// Metadata Cell Value Delete
	DeleteAttr *bool

	// Metadata Copy
	CopyAttr *bool

	// Metadata Paste All
	PasteAllAttr *bool

	// Metadata Paste Formulas
	PasteFormulasAttr *bool

	// Metadata Paste Special Values
	PasteValuesAttr *bool

	// Metadata Paste Formats
	PasteFormatsAttr *bool

	// Metadata Paste Comments
	PasteCommentsAttr *bool

	// Metadata Paste Data Validation
	PasteDataValidationAttr *bool

	// Metadata Paste Borders
	PasteBordersAttr *bool

	// Metadata Paste Column Widths
	PasteColWidthsAttr *bool

	// Metadata Paste Number Formats
	PasteNumberFormatsAttr *bool

	// Metadata Merge
	MergeAttr *bool

	// Meatadata Split First
	SplitFirstAttr *bool

	// Metadata Split All
	SplitAllAttr *bool

	// Metadata Insert Delete
	RowColShiftAttr *bool

	// Metadata Clear All
	ClearAllAttr *bool

	// Metadata Clear Formats
	ClearFormatsAttr *bool

	// Metadata Clear Contents
	ClearContentsAttr *bool

	// Metadata Clear Comments
	ClearCommentsAttr *bool

	// Metadata Formula Assignment
	AssignAttr *bool

	// Metadata Coercion
	CoerceAttr *bool

	// Adjust Metadata
	AdjustAttr *bool

	// Cell Metadata
	CellMetaAttr *bool
}

func (_becff *Connections) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0063\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073"
	return _becff.CT_Connections.MarshalXML(e, start)
}

type CT_DdeValues struct {

	// Rows
	RowsAttr *uint32

	// Columns
	ColsAttr *uint32

	// Value
	Value []*CT_DdeValue
}
type CT_CellStyleXfs struct {

	// Style Count
	CountAttr *uint32

	// Formatting Elements
	Xf []*CT_Xf
}
type CT_VolTopic struct {

	// Type
	TAttr ST_VolValueType

	// Topic Value
	V string

	// Strings in Subtopic
	Stp []string

	// References
	Tr []*CT_VolTopicRef
}

// Validate validates the CT_Pane and its children
func (_ffbc *CT_Pane) Validate() error {
	return _ffbc.ValidateWithPath("\u0043T\u005f\u0050\u0061\u006e\u0065")
}
func (_affcec *ST_SourceType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gedfa, _daebb := d.Token()
	if _daebb != nil {
		return _daebb
	}
	if _bbadaf, _fbbgca := _gedfa.(_b.EndElement); _fbbgca && _bbadaf.Name == start.Name {
		*_affcec = 1
		return nil
	}
	if _dabagec, _febbcc := _gedfa.(_b.CharData); !_febbcc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gedfa)
	} else {
		switch string(_dabagec) {
		case "":
			*_affcec = 0
		case "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t":
			*_affcec = 1
		case "\u0065\u0078\u0074\u0065\u0072\u006e\u0061\u006c":
			*_affcec = 2
		case "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e":
			*_affcec = 3
		case "\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f":
			*_affcec = 4
		}
	}
	_gedfa, _daebb = d.Token()
	if _daebb != nil {
		return _daebb
	}
	if _acbbd, _egbga := _gedfa.(_b.EndElement); _egbga && _acbbd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gedfa)
}

type CT_SheetProtection struct {

	// Legacy Password
	PasswordAttr *string

	// Cryptographic Algorithm Name
	AlgorithmNameAttr *string

	// Password Hash Value
	HashValueAttr *string

	// Salt Value for Password Verifier
	SaltValueAttr *string

	// Iterations to Run Hashing Algorithm
	SpinCountAttr *uint32

	// Sheet Locked
	SheetAttr *bool

	// Objects Locked
	ObjectsAttr *bool

	// Scenarios Locked
	ScenariosAttr *bool

	// Format Cells Locked
	FormatCellsAttr *bool

	// Format Columns Locked
	FormatColumnsAttr *bool

	// Format Rows Locked
	FormatRowsAttr *bool

	// Insert Columns Locked
	InsertColumnsAttr *bool

	// Insert Rows Locked
	InsertRowsAttr *bool

	// Insert Hyperlinks Locked
	InsertHyperlinksAttr *bool

	// Delete Columns Locked
	DeleteColumnsAttr *bool

	// Delete Rows Locked
	DeleteRowsAttr *bool

	// Select Locked Cells Locked
	SelectLockedCellsAttr *bool

	// Sort Locked
	SortAttr *bool

	// AutoFilter Locked
	AutoFilterAttr *bool

	// Pivot Tables Locked
	PivotTablesAttr *bool

	// Select Unlocked Cells Locked
	SelectUnlockedCellsAttr *bool
}

func (_fface *CT_SheetDimension) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _fface.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_afdab *CT_Items) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bedb := range start.Attr {
		if _bedb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cccfcd, _fgefb := _g.ParseUint(_bedb.Value, 10, 32)
			if _fgefb != nil {
				return _fgefb
			}
			_cfefe := uint32(_cccfcd)
			_afdab.CountAttr = &_cfefe
			continue
		}
	}
_dfbdd:
	for {
		_ecfb, _gccae := d.Token()
		if _gccae != nil {
			return _gccae
		}
		switch _adbac := _ecfb.(type) {
		case _b.StartElement:
			switch _adbac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u0074\u0065\u006d"}:
				_afebe := NewCT_Item()
				if _ddcef := d.DecodeElement(_afebe, &_adbac); _ddcef != nil {
					return _ddcef
				}
				_afdab.Item = append(_afdab.Item, _afebe)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _adbac.Name)
				if _dabaf := d.Skip(); _dabaf != nil {
					return _dabaf
				}
			}
		case _b.EndElement:
			break _dfbdd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Cell and its children
func (_ggdgd *CT_Cell) Validate() error {
	return _ggdgd.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c")
}
func (_dabgec *ST_FieldSortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfafc, _babafd := d.Token()
	if _babafd != nil {
		return _babafd
	}
	if _ggbcgd, _gfcdf := _bfafc.(_b.EndElement); _gfcdf && _ggbcgd.Name == start.Name {
		*_dabgec = 1
		return nil
	}
	if _bfadc, _accgd := _bfafc.(_b.CharData); !_accgd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfafc)
	} else {
		switch string(_bfadc) {
		case "":
			*_dabgec = 0
		case "\u006d\u0061\u006e\u0075\u0061\u006c":
			*_dabgec = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_dabgec = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_dabgec = 3
		}
	}
	_bfafc, _babafd = d.Token()
	if _babafd != nil {
		return _babafd
	}
	if _degcb, _bddaa := _bfafc.(_b.EndElement); _bddaa && _degcb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfafc)
}
func (_abgefe ST_FormulaExpression) String() string {
	switch _abgefe {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0066"
	case 2:
		return "\u0072\u0065\u0066\u0045\u0072\u0072\u006f\u0072"
	case 3:
		return "\u0061\u0072\u0065\u0061"
	case 4:
		return "\u0061r\u0065\u0061\u0045\u0072\u0072\u006fr"
	case 5:
		return "\u0063\u006f\u006dp\u0075\u0074\u0065\u0064\u0041\u0072\u0065\u0061"
	}
	return ""
}

// ValidateWithPath validates the CT_Mdx and its children, prefixing error messages with path
func (_bfgc *CT_Mdx) ValidateWithPath(path string) error {
	if _bfgc.FAttr == ST_MdxFunctionTypeUnset {
		return _a.Errorf("\u0025\u0073/\u0046\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066ie\u006c\u0064", path)
	}
	if _ffbae := _bfgc.FAttr.ValidateWithPath(path + "\u002f\u0046\u0041\u0074\u0074\u0072"); _ffbae != nil {
		return _ffbae
	}
	if _bfgc.T != nil {
		if _fbdf := _bfgc.T.ValidateWithPath(path + "\u002f\u0054"); _fbdf != nil {
			return _fbdf
		}
	}
	if _bfgc.Ms != nil {
		if _dgcef := _bfgc.Ms.ValidateWithPath(path + "\u002f\u004d\u0073"); _dgcef != nil {
			return _dgcef
		}
	}
	if _bfgc.P != nil {
		if _ebaef := _bfgc.P.ValidateWithPath(path + "\u002f\u0050"); _ebaef != nil {
			return _ebaef
		}
	}
	if _bfgc.K != nil {
		if _dgcab := _bfgc.K.ValidateWithPath(path + "\u002f\u004b"); _dgcab != nil {
			return _dgcab
		}
	}
	return nil
}
func NewCT_CalcCell() *CT_CalcCell { _dddfa := &CT_CalcCell{}; return _dddfa }

type CT_WorkbookPr struct {

	// Date 1904
	Date1904Attr *bool

	// Show Objects
	ShowObjectsAttr ST_Objects

	// Show Border Unselected Table
	ShowBorderUnselectedTablesAttr *bool

	// Filter Privacy
	FilterPrivacyAttr *bool

	// Prompted Solutions
	PromptedSolutionsAttr *bool

	// Show Ink Annotations
	ShowInkAnnotationAttr *bool

	// Create Backup File
	BackupFileAttr *bool

	// Save External Link Values
	SaveExternalLinkValuesAttr *bool

	// Update Links Behavior
	UpdateLinksAttr ST_UpdateLinks

	// Code Name
	CodeNameAttr *string

	// Hide Pivot Field List
	HidePivotFieldListAttr *bool

	// Show Pivot Chart Filter
	ShowPivotChartFilterAttr *bool

	// Allow Refresh Query
	AllowRefreshQueryAttr *bool

	// Publish Items
	PublishItemsAttr *bool

	// Check Compatibility On Save
	CheckCompatibilityAttr *bool

	// Auto Compress Pictures
	AutoCompressPicturesAttr *bool

	// Refresh all Connections on Open
	RefreshAllConnectionsAttr *bool

	// Default Theme Version
	DefaultThemeVersionAttr *uint32
}

func (_gafadc *CT_PivotHierarchies) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gafadc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gafadc.CountAttr)})
	}
	e.EncodeToken(start)
	_aafce := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079"}}
	for _, _febfdg := range _gafadc.PivotHierarchy {
		e.EncodeElement(_febfdg, _aafce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_PhoneticAlignment byte

// ValidateWithPath validates the CT_CellStyle and its children, prefixing error messages with path
func (_gbcbb *CT_CellStyle) ValidateWithPath(path string) error {
	if _gbcbb.ExtLst != nil {
		if _gbbb := _gbcbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbb != nil {
			return _gbbb
		}
	}
	return nil
}
func (_bdfaa *CT_XmlCellPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bdfaa.IdAttr)})
	if _bdfaa.UniqueNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bdfaa.UniqueNameAttr)})
	}
	e.EncodeToken(start)
	_fcbad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078\u006d\u006c\u0050\u0072"}}
	e.EncodeElement(_bdfaa.XmlPr, _fcbad)
	if _bdfaa.ExtLst != nil {
		_dbged := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bdfaa.ExtLst, _dbged)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gacegd ST_Type) Validate() error { return _gacegd.ValidateWithPath("") }
func NewCT_Control() *CT_Control        { _dgcg := &CT_Control{}; return _dgcg }
func (_cdceg ST_SheetViewType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_cdceg.String(), start)
}

// ValidateWithPath validates the CT_Xf and its children, prefixing error messages with path
func (_gbcde *CT_Xf) ValidateWithPath(path string) error {
	if _gbcde.Alignment != nil {
		if _fdbgf := _gbcde.Alignment.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074"); _fdbgf != nil {
			return _fdbgf
		}
	}
	if _gbcde.Protection != nil {
		if _adbda := _gbcde.Protection.ValidateWithPath(path + "/\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _adbda != nil {
			return _adbda
		}
	}
	if _gbcde.ExtLst != nil {
		if _dbccb := _gbcde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbccb != nil {
			return _dbccb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Pane and its children, prefixing error messages with path
func (_cccac *CT_Pane) ValidateWithPath(path string) error {
	if _aabba := _cccac.ActivePaneAttr.ValidateWithPath(path + "\u002fA\u0063t\u0069\u0076\u0065\u0050\u0061\u006e\u0065\u0041\u0074\u0074\u0072"); _aabba != nil {
		return _aabba
	}
	if _dfbaf := _cccac.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _dfbaf != nil {
		return _dfbaf
	}
	return nil
}
func (_bggca ST_PrintError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bggca.String(), start)
}
func (_dbecg *CT_Mdx) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbecg.FAttr = ST_MdxFunctionType(1)
	for _, _ebaed := range start.Attr {
		if _ebaed.Name.Local == "\u006e" {
			_ebaea, _abfc := _g.ParseUint(_ebaed.Value, 10, 32)
			if _abfc != nil {
				return _abfc
			}
			_dbecg.NAttr = uint32(_ebaea)
			continue
		}
		if _ebaed.Name.Local == "\u0066" {
			_dbecg.FAttr.UnmarshalXMLAttr(_ebaed)
			continue
		}
	}
_bggdg:
	for {
		_edadb, _dabad := d.Token()
		if _dabad != nil {
			return _dabad
		}
		switch _affc := _edadb.(type) {
		case _b.StartElement:
			switch _affc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_dbecg.T = NewCT_MdxTuple()
				if _gbde := d.DecodeElement(_dbecg.T, &_affc); _gbde != nil {
					return _gbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0073"}:
				_dbecg.Ms = NewCT_MdxSet()
				if _fedfe := d.DecodeElement(_dbecg.Ms, &_affc); _fedfe != nil {
					return _fedfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_dbecg.P = NewCT_MdxMemeberProp()
				if _cefgca := d.DecodeElement(_dbecg.P, &_affc); _cefgca != nil {
					return _cefgca
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b"}:
				_dbecg.K = NewCT_MdxKPI()
				if _ggadb := d.DecodeElement(_dbecg.K, &_affc); _ggadb != nil {
					return _ggadb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u0020\u0025\u0076", _affc.Name)
				if _eddcc := d.Skip(); _eddcc != nil {
					return _eddcc
				}
			}
		case _b.EndElement:
			break _bggdg
		case _b.CharData:
		}
	}
	return nil
}
func (_fcbbf *CT_GroupItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcbbf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fcbbf.CountAttr)})
	}
	e.EncodeToken(start)
	if _fcbbf.M != nil {
		_beab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _baceb := range _fcbbf.M {
			e.EncodeElement(_baceb, _beab)
		}
	}
	if _fcbbf.N != nil {
		_ggffc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _ddagb := range _fcbbf.N {
			e.EncodeElement(_ddagb, _ggffc)
		}
	}
	if _fcbbf.B != nil {
		_fdffg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062"}}
		for _, _gcbb := range _fcbbf.B {
			e.EncodeElement(_gcbb, _fdffg)
		}
	}
	if _fcbbf.E != nil {
		_gddeca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0065"}}
		for _, _fabbe := range _fcbbf.E {
			e.EncodeElement(_fabbe, _gddeca)
		}
	}
	if _fcbbf.S != nil {
		_beede := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _egdca := range _fcbbf.S {
			e.EncodeElement(_egdca, _beede)
		}
	}
	if _fcbbf.D != nil {
		_bggeb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064"}}
		for _, _egfd := range _fcbbf.D {
			e.EncodeElement(_egfd, _bggeb)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_colItems and its children
func (_badaf *CT_colItems) Validate() error {
	return _badaf.ValidateWithPath("C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_NumFmts() *CT_NumFmts { _adcab := &CT_NumFmts{}; return _adcab }

// ValidateWithPath validates the CT_MeasureDimensionMaps and its children, prefixing error messages with path
func (_cbbfa *CT_MeasureDimensionMaps) ValidateWithPath(path string) error {
	for _bbccg, _beade := range _cbbfa.Map {
		if _eaefa := _beade.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u0061\u0070\u005b\u0025\u0064\u005d", path, _bbccg)); _eaefa != nil {
			return _eaefa
		}
	}
	return nil
}
func (_faeafe ST_TargetScreenSize) Validate() error { return _faeafe.ValidateWithPath("") }
func (_bfdfcf ST_DataValidationType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_effea := _b.Attr{}
	_effea.Name = name
	switch _bfdfcf {
	case ST_DataValidationTypeUnset:
		_effea.Value = ""
	case ST_DataValidationTypeNone:
		_effea.Value = "\u006e\u006f\u006e\u0065"
	case ST_DataValidationTypeWhole:
		_effea.Value = "\u0077\u0068\u006fl\u0065"
	case ST_DataValidationTypeDecimal:
		_effea.Value = "\u0064e\u0063\u0069\u006d\u0061\u006c"
	case ST_DataValidationTypeList:
		_effea.Value = "\u006c\u0069\u0073\u0074"
	case ST_DataValidationTypeDate:
		_effea.Value = "\u0064\u0061\u0074\u0065"
	case ST_DataValidationTypeTime:
		_effea.Value = "\u0074\u0069\u006d\u0065"
	case ST_DataValidationTypeTextLength:
		_effea.Value = "\u0074\u0065\u0078\u0074\u004c\u0065\u006e\u0067\u0074\u0068"
	case ST_DataValidationTypeCustom:
		_effea.Value = "\u0063\u0075\u0073\u0074\u006f\u006d"
	}
	return _effea, nil
}

const (
	ST_PatternTypeUnset           ST_PatternType = 0
	ST_PatternTypeNone            ST_PatternType = 1
	ST_PatternTypeSolid           ST_PatternType = 2
	ST_PatternTypeMediumGray      ST_PatternType = 3
	ST_PatternTypeDarkGray        ST_PatternType = 4
	ST_PatternTypeLightGray       ST_PatternType = 5
	ST_PatternTypeDarkHorizontal  ST_PatternType = 6
	ST_PatternTypeDarkVertical    ST_PatternType = 7
	ST_PatternTypeDarkDown        ST_PatternType = 8
	ST_PatternTypeDarkUp          ST_PatternType = 9
	ST_PatternTypeDarkGrid        ST_PatternType = 10
	ST_PatternTypeDarkTrellis     ST_PatternType = 11
	ST_PatternTypeLightHorizontal ST_PatternType = 12
	ST_PatternTypeLightVertical   ST_PatternType = 13
	ST_PatternTypeLightDown       ST_PatternType = 14
	ST_PatternTypeLightUp         ST_PatternType = 15
	ST_PatternTypeLightGrid       ST_PatternType = 16
	ST_PatternTypeLightTrellis    ST_PatternType = 17
	ST_PatternTypeGray125         ST_PatternType = 18
	ST_PatternTypeGray0625        ST_PatternType = 19
)
const (
	ST_ParameterTypeUnset  ST_ParameterType = 0
	ST_ParameterTypePrompt ST_ParameterType = 1
	ST_ParameterTypeValue  ST_ParameterType = 2
	ST_ParameterTypeCell   ST_ParameterType = 3
)

type CT_Sheet struct {

	// Sheet Name
	NameAttr string

	// Sheet Tab Id
	SheetIdAttr uint32

	// Visible State
	StateAttr ST_SheetState
	IdAttr    string
}

func (_fabbbb ST_DataValidationOperator) ValidateWithPath(path string) error {
	switch _fabbbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fabbbb))
	}
	return nil
}

const (
	ST_PhoneticAlignmentUnset       ST_PhoneticAlignment = 0
	ST_PhoneticAlignmentNoControl   ST_PhoneticAlignment = 1
	ST_PhoneticAlignmentLeft        ST_PhoneticAlignment = 2
	ST_PhoneticAlignmentCenter      ST_PhoneticAlignment = 3
	ST_PhoneticAlignmentDistributed ST_PhoneticAlignment = 4
)

func NewCT_IgnoredError() *CT_IgnoredError { _gddcdc := &CT_IgnoredError{}; return _gddcdc }
func (_gfcbg *CT_SheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _decgfb := range start.Attr {
		if _decgfb.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0052\u006f\u0077\u0073" {
			_adbec, _fabgad := _g.ParseBool(_decgfb.Value)
			if _fabgad != nil {
				return _fabgad
			}
			_gfcbg.FormatRowsAttr = &_adbec
			continue
		}
		if _decgfb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_aefgf, _deaaeg := _g.ParseBool(_decgfb.Value)
			if _deaaeg != nil {
				return _deaaeg
			}
			_gfcbg.InsertColumnsAttr = &_aefgf
			continue
		}
		if _decgfb.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_fagge, _dccfd := _decgfb.Value, error(nil)
			if _dccfd != nil {
				return _dccfd
			}
			_gfcbg.AlgorithmNameAttr = &_fagge
			continue
		}
		if _decgfb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077\u0073" {
			_gdebb, _bddeg := _g.ParseBool(_decgfb.Value)
			if _bddeg != nil {
				return _bddeg
			}
			_gfcbg.InsertRowsAttr = &_gdebb
			continue
		}
		if _decgfb.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_decdf, _cabff := _decgfb.Value, error(nil)
			if _cabff != nil {
				return _cabff
			}
			_gfcbg.SaltValueAttr = &_decdf
			continue
		}
		if _decgfb.Name.Local == "\u0069\u006es\u0065\u0072\u0074H\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073" {
			_adgac, _dbdfff := _g.ParseBool(_decgfb.Value)
			if _dbdfff != nil {
				return _dbdfff
			}
			_gfcbg.InsertHyperlinksAttr = &_adgac
			continue
		}
		if _decgfb.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_dggbcc, _edgca := _g.ParseBool(_decgfb.Value)
			if _edgca != nil {
				return _edgca
			}
			_gfcbg.SheetAttr = &_dggbcc
			continue
		}
		if _decgfb.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_dcddcg, _faaffa := _g.ParseBool(_decgfb.Value)
			if _faaffa != nil {
				return _faaffa
			}
			_gfcbg.DeleteColumnsAttr = &_dcddcg
			continue
		}
		if _decgfb.Name.Local == "\u0073c\u0065\u006e\u0061\u0072\u0069\u006fs" {
			_aeaebf, _dgafb := _g.ParseBool(_decgfb.Value)
			if _dgafb != nil {
				return _dgafb
			}
			_gfcbg.ScenariosAttr = &_aeaebf
			continue
		}
		if _decgfb.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_fbbfb, _efaab := _g.ParseBool(_decgfb.Value)
			if _efaab != nil {
				return _efaab
			}
			_gfcbg.FormatColumnsAttr = &_fbbfb
			continue
		}
		if _decgfb.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_begfdg, _ffefa := _decgfb.Value, error(nil)
			if _ffefa != nil {
				return _ffefa
			}
			_gfcbg.PasswordAttr = &_begfdg
			continue
		}
		if _decgfb.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_ddcfad, _bcedg := _decgfb.Value, error(nil)
			if _bcedg != nil {
				return _bcedg
			}
			_gfcbg.HashValueAttr = &_ddcfad
			continue
		}
		if _decgfb.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gdcea, _fcdfb := _g.ParseUint(_decgfb.Value, 10, 32)
			if _fcdfb != nil {
				return _fcdfb
			}
			_eadga := uint32(_gdcea)
			_gfcbg.SpinCountAttr = &_eadga
			continue
		}
		if _decgfb.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_fagabab, _fgbab := _g.ParseBool(_decgfb.Value)
			if _fgbab != nil {
				return _fgbab
			}
			_gfcbg.ObjectsAttr = &_fagabab
			continue
		}
		if _decgfb.Name.Local == "f\u006f\u0072\u006d\u0061\u0074\u0043\u0065\u006c\u006c\u0073" {
			_dcaac, _gdfbd := _g.ParseBool(_decgfb.Value)
			if _gdfbd != nil {
				return _gdfbd
			}
			_gfcbg.FormatCellsAttr = &_dcaac
			continue
		}
		if _decgfb.Name.Local == "\u0064\u0065\u006c\u0065\u0074\u0065\u0052\u006f\u0077\u0073" {
			_gbbddd, _dbdba := _g.ParseBool(_decgfb.Value)
			if _dbdba != nil {
				return _dbdba
			}
			_gfcbg.DeleteRowsAttr = &_gbbddd
			continue
		}
		if _decgfb.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u004c\u006f\u0063\u006b\u0065\u0064C\u0065\u006c\u006c\u0073" {
			_gggbgb, _ffebge := _g.ParseBool(_decgfb.Value)
			if _ffebge != nil {
				return _ffebge
			}
			_gfcbg.SelectLockedCellsAttr = &_gggbgb
			continue
		}
		if _decgfb.Name.Local == "\u0073\u006f\u0072\u0074" {
			_ebgffa, _ecfegd := _g.ParseBool(_decgfb.Value)
			if _ecfegd != nil {
				return _ecfegd
			}
			_gfcbg.SortAttr = &_ebgffa
			continue
		}
		if _decgfb.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072" {
			_dccbf, _cbabf := _g.ParseBool(_decgfb.Value)
			if _cbabf != nil {
				return _cbabf
			}
			_gfcbg.AutoFilterAttr = &_dccbf
			continue
		}
		if _decgfb.Name.Local == "p\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0073" {
			_geaaf, _bbbfc := _g.ParseBool(_decgfb.Value)
			if _bbbfc != nil {
				return _bbbfc
			}
			_gfcbg.PivotTablesAttr = &_geaaf
			continue
		}
		if _decgfb.Name.Local == "\u0073\u0065\u006c\u0065ct\u0055\u006e\u006c\u006f\u0063\u006b\u0065\u0064\u0043\u0065\u006c\u006c\u0073" {
			_added, _gaagf := _g.ParseBool(_decgfb.Value)
			if _gaagf != nil {
				return _gaagf
			}
			_gfcbg.SelectUnlockedCellsAttr = &_added
			continue
		}
	}
	for {
		_bdccee, _eccgg := d.Token()
		if _eccgg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u0068\u0065\u0065\u0074\u0050\u0072o\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073", _eccgg)
		}
		if _dfede, _bgbcg := _bdccee.(_b.EndElement); _bgbcg && _dfede.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_DefinedNames() *CT_DefinedNames { _geed := &CT_DefinedNames{}; return _geed }
func (_fbgdf *ST_OleUpdate) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_fbgdf = 0
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
		*_fbgdf = 1
	case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
		*_fbgdf = 2
	}
	return nil
}
func (_gfdgc *Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0073\u0074"
	return _gfdgc.CT_Sst.MarshalXML(e, start)
}
func NewCT_DateTime() *CT_DateTime { _eafbb := &CT_DateTime{}; return _eafbb }

type CT_Error struct {

	// Value
	VAttr string

	// Unused Item
	UAttr *bool

	// Calculated Item
	FAttr *bool

	// Item Caption
	CAttr *string

	// Member Property Count
	CpAttr *uint32

	// Format Index
	InAttr *uint32

	// background Color
	BcAttr *string

	// Foreground Color
	FcAttr *string

	// Italic
	IAttr *bool

	// Underline
	UnAttr *bool

	// Strikethrough
	StAttr *bool

	// Bold
	BAttr *bool

	// Tuples
	Tpls *CT_Tuples

	// Member Property Indexes
	X []*CT_X
}

func NewCT_PivotCache() *CT_PivotCache { _gebadb := &CT_PivotCache{}; return _gebadb }
func NewCT_ExternalLinkChoice() *CT_ExternalLinkChoice {
	_efacc := &CT_ExternalLinkChoice{}
	return _efacc
}

// ValidateWithPath validates the CT_MemberProperties and its children, prefixing error messages with path
func (_dfgda *CT_MemberProperties) ValidateWithPath(path string) error {
	for _gdfab, _ebaec := range _dfgda.Mp {
		if _edfeb := _ebaec.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u004d\u0070\u005b\u0025\u0064]", path, _gdfab)); _edfeb != nil {
			return _edfeb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RevisionQueryTableField and its children, prefixing error messages with path
func (_bacffcf *CT_RevisionQueryTableField) ValidateWithPath(path string) error { return nil }
func (_gacbd *ST_Orientation) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeffcc, _ffdfg := d.Token()
	if _ffdfg != nil {
		return _ffdfg
	}
	if _ddaf, _gafbca := _eeffcc.(_b.EndElement); _gafbca && _ddaf.Name == start.Name {
		*_gacbd = 1
		return nil
	}
	if _ceaeg, _aeabb := _eeffcc.(_b.CharData); !_aeabb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeffcc)
	} else {
		switch string(_ceaeg) {
		case "":
			*_gacbd = 0
		case "\u0064e\u0066\u0061\u0075\u006c\u0074":
			*_gacbd = 1
		case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
			*_gacbd = 2
		case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
			*_gacbd = 3
		}
	}
	_eeffcc, _ffdfg = d.Token()
	if _ffdfg != nil {
		return _ffdfg
	}
	if _dgagff, _bbede := _eeffcc.(_b.EndElement); _bbede && _dgagff.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeffcc)
}

type CT_PivotAreas struct {

	// Pivot Area Count
	CountAttr *uint32

	// Pivot Area
	PivotArea []*CT_PivotArea
}

func (_afccea *ST_PageOrder) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_afccea = 0
	case "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072":
		*_afccea = 1
	case "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e":
		*_afccea = 2
	}
	return nil
}
func NewCT_MdxMemeberProp() *CT_MdxMemeberProp { _dedb := &CT_MdxMemeberProp{}; return _dedb }

type ST_GrowShrinkType byte

func ParseStdlibTime(s string) (_d.Time, error) { return _d.Time{}, nil }

type ST_BorderStyle byte

func (_dagad *PivotTableDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dagad.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	for _, _feeagg := range start.Attr {
		if _feeagg.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_adcfe, _afcefg := _g.ParseUint(_feeagg.Value, 10, 8)
			if _afcefg != nil {
				return _afcefg
			}
			_gggfg := uint8(_adcfe)
			_dagad.CreatedVersionAttr = &_gggfg
			continue
		}
		if _feeagg.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_cdeadf, _bgbbafe := _g.ParseUint(_feeagg.Value, 10, 32)
			if _bgbbafe != nil {
				return _bgbbafe
			}
			_gfbcc := uint32(_cdeadf)
			_dagad.IndentAttr = &_gfbcc
			continue
		}
		if _feeagg.Name.Local == "\u0070i\u0076o\u0074\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065" {
			_dcabbc, _cfdae := _feeagg.Value, error(nil)
			if _cfdae != nil {
				return _cfdae
			}
			_dagad.PivotTableStyleAttr = &_dcabbc
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0052\u006f\u0077" {
			_debebf, _gfgba := _g.ParseBool(_feeagg.Value)
			if _gfgba != nil {
				return _gfgba
			}
			_dagad.ShowEmptyRowAttr = &_debebf
			continue
		}
		if _feeagg.Name.Local == "\u0074\u0061\u0067" {
			_ebegab, _edbbe := _feeagg.Value, error(nil)
			if _edbbe != nil {
				return _edbbe
			}
			_dagad.TagAttr = &_ebegab
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006fw\u0045\u006d\u0070\u0074\u0079\u0043\u006f\u006c" {
			_egdffb, _febgge := _g.ParseBool(_feeagg.Value)
			if _febgge != nil {
				return _febgge
			}
			_dagad.ShowEmptyColAttr = &_egdffb
			continue
		}
		if _feeagg.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_aegbcf, _gaed := _g.ParseUint(_feeagg.Value, 10, 8)
			if _gaed != nil {
				return _gaed
			}
			_fagdc := uint8(_aegbcf)
			_dagad.MinRefreshableVersionAttr = &_fagdc
			continue
		}
		if _feeagg.Name.Local == "s\u0068\u006f\u0077\u0048\u0065\u0061\u0064\u0065\u0072\u0073" {
			_edcee, _faacf := _g.ParseBool(_feeagg.Value)
			if _faacf != nil {
				return _faacf
			}
			_dagad.ShowHeadersAttr = &_edcee
			continue
		}
		if _feeagg.Name.Local == "\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b\u0054o\u0074\u0061\u006c\u0073" {
			_acfdbd, _abaeb := _g.ParseBool(_feeagg.Value)
			if _abaeb != nil {
				return _abaeb
			}
			_dagad.AsteriskTotalsAttr = &_acfdbd
			continue
		}
		if _feeagg.Name.Local == "\u0063o\u006d\u0070\u0061\u0063\u0074" {
			_bbgad, _bfedc := _g.ParseBool(_feeagg.Value)
			if _bfedc != nil {
				return _bfedc
			}
			_dagad.CompactAttr = &_bbgad
			continue
		}
		if _feeagg.Name.Local == "\u0065\u0064\u0069\u0074\u0044\u0061\u0074\u0061" {
			_abcfd, _bfeaf := _g.ParseBool(_feeagg.Value)
			if _bfeaf != nil {
				return _bfeaf
			}
			_dagad.EditDataAttr = &_abcfd
			continue
		}
		if _feeagg.Name.Local == "\u006fu\u0074\u006c\u0069\u006e\u0065" {
			_dfgbd, _badgcg := _g.ParseBool(_feeagg.Value)
			if _badgcg != nil {
				return _badgcg
			}
			_dagad.OutlineAttr = &_dfgbd
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006fw\u0043\u0061\u006c\u0063\u004d\u0062\u0072\u0073" {
			_gdbdc, _dcbcf := _g.ParseBool(_feeagg.Value)
			if _dcbcf != nil {
				return _dcbcf
			}
			_dagad.ShowCalcMbrsAttr = &_gdbdc
			continue
		}
		if _feeagg.Name.Local == "o\u0075\u0074\u006c\u0069\u006e\u0065\u0044\u0061\u0074\u0061" {
			_eacfe, _bebaf := _g.ParseBool(_feeagg.Value)
			if _bebaf != nil {
				return _bebaf
			}
			_dagad.OutlineDataAttr = &_eacfe
			continue
		}
		if _feeagg.Name.Local == "\u0067\u0072\u0069\u0064\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_bdcfce, _acggf := _g.ParseBool(_feeagg.Value)
			if _acggf != nil {
				return _acggf
			}
			_dagad.GridDropZonesAttr = &_bdcfce
			continue
		}
		if _feeagg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004c\u0069\u0073t\u0053\u006f\u0072\u0074" {
			_aggdf, _bdbcg := _g.ParseBool(_feeagg.Value)
			if _bdbcg != nil {
				return _bdbcg
			}
			_dagad.CustomListSortAttr = &_aggdf
			continue
		}
		if _feeagg.Name.Local == "\u0072\u006f\u0077\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_cebgde, _dgecc := _g.ParseBool(_feeagg.Value)
			if _dgecc != nil {
				return _dgecc
			}
			_dagad.RowGrandTotalsAttr = &_cebgde
			continue
		}
		if _feeagg.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_afccef, _cgddd := _g.ParseBool(_feeagg.Value)
			if _cgddd != nil {
				return _cgddd
			}
			_dagad.ApplyWidthHeightFormatsAttr = &_afccef
			continue
		}
		if _feeagg.Name.Local == "\u0075\u0073\u0065\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061t\u0074\u0069\u006e\u0067" {
			_faeffe, _fgfca := _g.ParseBool(_feeagg.Value)
			if _fgfca != nil {
				return _fgfca
			}
			_dagad.UseAutoFormattingAttr = &_faeffe
			continue
		}
		if _feeagg.Name.Local == "\u0072\u006fw\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_dffdd, _ddbad := _feeagg.Value, error(nil)
			if _ddbad != nil {
				return _ddbad
			}
			_dagad.RowHeaderCaptionAttr = &_dffdd
			continue
		}
		if _feeagg.Name.Local == "\u0073h\u006f\u0077\u0044\u0072\u0069\u006cl" {
			_ccecf, _bbeeff := _g.ParseBool(_feeagg.Value)
			if _bbeeff != nil {
				return _bbeeff
			}
			_dagad.ShowDrillAttr = &_ccecf
			continue
		}
		if _feeagg.Name.Local == "\u006de\u0072\u0067\u0065\u0049\u0074\u0065m" {
			_afdgc, _dceddag := _g.ParseBool(_feeagg.Value)
			if _dceddag != nil {
				return _dceddag
			}
			_dagad.MergeItemAttr = &_afdgc
			continue
		}
		if _feeagg.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_bgdaa, _acbfbdd := _g.ParseBool(_feeagg.Value)
			if _acbfbdd != nil {
				return _acbfbdd
			}
			_dagad.ApplyBorderFormatsAttr = &_bgdaa
			continue
		}
		if _feeagg.Name.Local == "\u0076\u0069\u0073u\u0061\u006c\u0054\u006f\u0074\u0061\u006c\u0073" {
			_dbdgeb, _feccgb := _g.ParseBool(_feeagg.Value)
			if _feccgb != nil {
				return _feccgb
			}
			_dagad.VisualTotalsAttr = &_dbdgeb
			continue
		}
		if _feeagg.Name.Local == "c\u006f\u006d\u0070\u0061\u0063\u0074\u0044\u0061\u0074\u0061" {
			_ebbgc, _fcgafd := _g.ParseBool(_feeagg.Value)
			if _fcgafd != nil {
				return _fcgafd
			}
			_dagad.CompactDataAttr = &_ebbgc
			continue
		}
		if _feeagg.Name.Local == "\u0064\u0061\u0074a\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_fcecfd, _dagbcg := _g.ParseUint(_feeagg.Value, 10, 32)
			if _dagbcg != nil {
				return _dagbcg
			}
			_fccfda := uint32(_fcecfd)
			_dagad.DataPositionAttr = &_fccfda
			continue
		}
		if _feeagg.Name.Local == "m\u0075l\u0074\u0069\u0070\u006c\u0065\u0046\u0069\u0065l\u0064\u0046\u0069\u006cte\u0072\u0073" {
			_ggbcba, _egdeg := _g.ParseBool(_feeagg.Value)
			if _egdeg != nil {
				return _egdeg
			}
			_dagad.MultipleFieldFiltersAttr = &_ggbcba
			continue
		}
		if _feeagg.Name.Local == "\u0070\u0061g\u0065\u004f\u0076e\u0072\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e" {
			_caffe, _dfbbb := _g.ParseBool(_feeagg.Value)
			if _dfbbb != nil {
				return _dfbbb
			}
			_dagad.PageOverThenDownAttr = &_caffe
			continue
		}
		if _feeagg.Name.Local == "\u0066\u0069\u0065\u006cdL\u0069\u0073\u0074\u0053\u006f\u0072\u0074\u0041\u0073\u0063\u0065\u006e\u0064\u0069n\u0067" {
			_gcfaga, _cdbcf := _g.ParseBool(_feeagg.Value)
			if _cdbcf != nil {
				return _cdbcf
			}
			_dagad.FieldListSortAscendingAttr = &_gcfaga
			continue
		}
		if _feeagg.Name.Local == "s\u0068\u006f\u0077\u004d\u0069\u0073\u0073\u0069\u006e\u0067" {
			_bbabf, _fbcfd := _g.ParseBool(_feeagg.Value)
			if _fbcfd != nil {
				return _fbcfd
			}
			_dagad.ShowMissingAttr = &_bbabf
			continue
		}
		if _feeagg.Name.Local == "\u0066\u0069e\u006c\u0064\u0050r\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_ggeaff, _ddcbf := _g.ParseBool(_feeagg.Value)
			if _ddcbf != nil {
				return _ddcbf
			}
			_dagad.FieldPrintTitlesAttr = &_ggeaff
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006f\u0077Me\u006d\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0079\u0054\u0069p\u0073" {
			_eegfd, _dcddd := _g.ParseBool(_feeagg.Value)
			if _dcddd != nil {
				return _dcddd
			}
			_dagad.ShowMemberPropertyTipsAttr = &_eegfd
			continue
		}
		if _feeagg.Name.Local == "\u0070a\u0067\u0065\u0053\u0074\u0079\u006ce" {
			_afdbfe, _aefga := _feeagg.Value, error(nil)
			if _aefga != nil {
				return _aefga
			}
			_dagad.PageStyleAttr = &_afdbfe
			continue
		}
		if _feeagg.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_egfgce, _dbccda := _g.ParseUint(_feeagg.Value, 10, 32)
			if _dbccda != nil {
				return _dbccda
			}
			_decaf := uint32(_egfgce)
			_dagad.AutoFormatIdAttr = &_decaf
			continue
		}
		if _feeagg.Name.Local == "\u0073h\u006f\u0077\u0049\u0074\u0065\u006ds" {
			_dcbadf, _dadccag := _g.ParseBool(_feeagg.Value)
			if _dadccag != nil {
				return _dadccag
			}
			_dagad.ShowItemsAttr = &_dcbadf
			continue
		}
		if _feeagg.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_efbced, _ebaefe := _g.ParseBool(_feeagg.Value)
			if _ebaefe != nil {
				return _ebaefe
			}
			_dagad.ApplyPatternFormatsAttr = &_efbced
			continue
		}
		if _feeagg.Name.Local == "e\u006e\u0061\u0062\u006ceF\u0069e\u006c\u0064\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073" {
			_ccdbg, _bbedg := _g.ParseBool(_feeagg.Value)
			if _bbedg != nil {
				return _bbedg
			}
			_dagad.EnableFieldPropertiesAttr = &_ccdbg
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006f\u0077\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0065L\u0061\u0062\u0065\u006c" {
			_cdabgf, _afgbed := _g.ParseBool(_feeagg.Value)
			if _afgbed != nil {
				return _afgbed
			}
			_dagad.ShowMultipleLabelAttr = &_cdabgf
			continue
		}
		if _feeagg.Name.Local == "\u0070r\u0065s\u0065\u0072\u0076\u0065\u0046o\u0072\u006da\u0074\u0074\u0069\u006e\u0067" {
			_dbebaf, _ddaag := _g.ParseBool(_feeagg.Value)
			if _ddaag != nil {
				return _ddaag
			}
			_dagad.PreserveFormattingAttr = &_dbebaf
			continue
		}
		if _feeagg.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_agcdbg, _fdgege := _g.ParseBool(_feeagg.Value)
			if _fdgege != nil {
				return _fdgege
			}
			_dagad.PublishedAttr = &_agcdbg
			continue
		}
		if _feeagg.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_dgagb, _adefea := _feeagg.Value, error(nil)
			if _adefea != nil {
				return _adefea
			}
			_dagad.MissingCaptionAttr = &_dgagb
			continue
		}
		if _feeagg.Name.Local == "\u0069m\u006d\u0065\u0072\u0073\u0069\u0076e" {
			_ebabg, _aeccf := _g.ParseBool(_feeagg.Value)
			if _aeccf != nil {
				return _aeccf
			}
			_dagad.ImmersiveAttr = &_ebabg
			continue
		}
		if _feeagg.Name.Local == "\u0070\u0061\u0067\u0065\u0057\u0072\u0061\u0070" {
			_fdcgeb, _bgdga := _g.ParseUint(_feeagg.Value, 10, 32)
			if _bgdga != nil {
				return _bgdga
			}
			_eagffd := uint32(_fdcgeb)
			_dagad.PageWrapAttr = &_eagffd
			continue
		}
		if _feeagg.Name.Local == "c\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074" {
			_bfdag, _ecddcd := _g.ParseUint(_feeagg.Value, 10, 32)
			if _ecddcd != nil {
				return _ecddcd
			}
			_febe := uint32(_bfdag)
			_dagad.ChartFormatAttr = &_febe
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068o\u0077\u0044\u0061t\u0061\u0044\u0072\u006f\u0070\u0044\u006f\u0077\u006e" {
			_bbgcc, _ecbbf := _g.ParseBool(_feeagg.Value)
			if _ecbbf != nil {
				return _ecbbf
			}
			_dagad.ShowDataDropDownAttr = &_bbgcc
			continue
		}
		if _feeagg.Name.Local == "\u0063\u006fl\u0048\u0065\u0061d\u0065\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ffbcd, _gbdgcc := _feeagg.Value, error(nil)
			if _gbdgcc != nil {
				return _gbdgcc
			}
			_dagad.ColHeaderCaptionAttr = &_ffbcd
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0075\u0062\u0074ot\u0061\u006c\u0048\u0069\u0064\u0064\u0065\u006e\u0049\u0074\u0065\u006d\u0073" {
			_aagfb, _abdag := _g.ParseBool(_feeagg.Value)
			if _abdag != nil {
				return _abdag
			}
			_dagad.SubtotalHiddenItemsAttr = &_aagfb
			continue
		}
		if _feeagg.Name.Local == "\u006d\u0064\u0078\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0069\u0065\u0073" {
			_ffeaad, _ccbaee := _g.ParseBool(_feeagg.Value)
			if _ccbaee != nil {
				return _ccbaee
			}
			_dagad.MdxSubqueriesAttr = &_ffeaad
			continue
		}
		if _feeagg.Name.Local == "\u0065\u0072\u0072o\u0072\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_ecfcfdf, _eecaf := _feeagg.Value, error(nil)
			if _eecaf != nil {
				return _eecaf
			}
			_dagad.ErrorCaptionAttr = &_ecfcfdf
			continue
		}
		if _feeagg.Name.Local == "\u0063\u006f\u006c\u0047\u0072\u0061\u006e\u0064\u0054o\u0074\u0061\u006c\u0073" {
			_abcadb, _bfgbag := _g.ParseBool(_feeagg.Value)
			if _bfgbag != nil {
				return _bfgbag
			}
			_dagad.ColGrandTotalsAttr = &_abcadb
			continue
		}
		if _feeagg.Name.Local == "\u0070\u0072\u0069\u006e\u0074\u0044\u0072\u0069\u006c\u006c" {
			_cbgggf, _gbaefe := _g.ParseBool(_feeagg.Value)
			if _gbaefe != nil {
				return _gbaefe
			}
			_dagad.PrintDrillAttr = &_cbgggf
			continue
		}
		if _feeagg.Name.Local == "\u0069t\u0065m\u0050\u0072\u0069\u006e\u0074\u0054\u0069\u0074\u006c\u0065\u0073" {
			_feadfa, _gbdcce := _g.ParseBool(_feeagg.Value)
			if _gbdcce != nil {
				return _gbdcce
			}
			_dagad.ItemPrintTitlesAttr = &_feadfa
			continue
		}
		if _feeagg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fcged, _dbaec := _feeagg.Value, error(nil)
			if _dbaec != nil {
				return _dbaec
			}
			_dagad.NameAttr = _fcged
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006f\u0077\u0044\u0072\u006f\u0070\u005a\u006f\u006e\u0065\u0073" {
			_cfabb, _febda := _g.ParseBool(_feeagg.Value)
			if _febda != nil {
				return _febda
			}
			_dagad.ShowDropZonesAttr = &_cfabb
			continue
		}
		if _feeagg.Name.Local == "\u0073\u0068\u006fw\u0044\u0061\u0074\u0061\u0054\u0069\u0070\u0073" {
			_afefbd, _cbdefb := _g.ParseBool(_feeagg.Value)
			if _cbdefb != nil {
				return _cbdefb
			}
			_dagad.ShowDataTipsAttr = &_afefbd
			continue
		}
		if _feeagg.Name.Local == "\u0076\u0061\u0063a\u0074\u0065\u0064\u0053\u0074\u0079\u006c\u0065" {
			_ecagg, _fbgdbg := _feeagg.Value, error(nil)
			if _fbgdbg != nil {
				return _fbgdbg
			}
			_dagad.VacatedStyleAttr = &_ecagg
			continue
		}
		if _feeagg.Name.Local == "\u0067\u0072\u0061\u006e\u0064\u0054\u006f\u0074\u0061\u006c\u0043\u0061p\u0074\u0069\u006f\u006e" {
			_bdggc, _afdcfa := _feeagg.Value, error(nil)
			if _afdcfa != nil {
				return _afdcfa
			}
			_dagad.GrandTotalCaptionAttr = &_bdggc
			continue
		}
		if _feeagg.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_abcadg, _eccae := _g.ParseBool(_feeagg.Value)
			if _eccae != nil {
				return _eccae
			}
			_dagad.ApplyNumberFormatsAttr = &_abcadg
			continue
		}
		if _feeagg.Name.Local == "e\u006e\u0061\u0062\u006c\u0065\u0044\u0072\u0069\u006c\u006c" {
			_adcegd, _bdcfcb := _g.ParseBool(_feeagg.Value)
			if _bdcfcb != nil {
				return _bdcfcb
			}
			_dagad.EnableDrillAttr = &_adcegd
			continue
		}
		if _feeagg.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dgbdb, _fafbc := _g.ParseBool(_feeagg.Value)
			if _fafbc != nil {
				return _fafbc
			}
			_dagad.ApplyFontFormatsAttr = &_dgbdb
			continue
		}
		if _feeagg.Name.Local == "\u0064\u0069s\u0061\u0062\u006ce\u0046\u0069\u0065\u006c\u0064\u004c\u0069\u0073\u0074" {
			_baedbg, _cfcbc := _g.ParseBool(_feeagg.Value)
			if _cfcbc != nil {
				return _cfcbc
			}
			_dagad.DisableFieldListAttr = &_baedbg
			continue
		}
		if _feeagg.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_bbbfd, _ceaea := _g.ParseBool(_feeagg.Value)
			if _ceaea != nil {
				return _ceaea
			}
			_dagad.ApplyAlignmentFormatsAttr = &_bbbfd
			continue
		}
		if _feeagg.Name.Local == "\u0064\u0061\u0074\u0061\u004f\u006e\u0052\u006f\u0077\u0073" {
			_dfbfe, _dfege := _g.ParseBool(_feeagg.Value)
			if _dfege != nil {
				return _dfege
			}
			_dagad.DataOnRowsAttr = &_dfbfe
			continue
		}
		if _feeagg.Name.Local == "d\u0061\u0074\u0061\u0043\u0061\u0070\u0074\u0069\u006f\u006e" {
			_defgb, _ggaec := _feeagg.Value, error(nil)
			if _ggaec != nil {
				return _ggaec
			}
			_dagad.DataCaptionAttr = _defgb
			continue
		}
		if _feeagg.Name.Local == "\u0073h\u006f\u0077\u0045\u0072\u0072\u006fr" {
			_cbcec, _bgfef := _g.ParseBool(_feeagg.Value)
			if _bgfef != nil {
				return _bgfef
			}
			_dagad.ShowErrorAttr = &_cbcec
			continue
		}
		if _feeagg.Name.Local == "\u0063a\u0063\u0068\u0065\u0049\u0064" {
			_geggg, _efdede := _g.ParseUint(_feeagg.Value, 10, 32)
			if _efdede != nil {
				return _efdede
			}
			_dagad.CacheIdAttr = uint32(_geggg)
			continue
		}
		if _feeagg.Name.Local == "\u0065\u006e\u0061b\u006c\u0065\u0057\u0069\u007a\u0061\u0072\u0064" {
			_fgaaag, _adbfa := _g.ParseBool(_feeagg.Value)
			if _adbfa != nil {
				return _adbfa
			}
			_dagad.EnableWizardAttr = &_fgaaag
			continue
		}
		if _feeagg.Name.Local == "\u0075\u0070\u0064\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_adbca, _cddgg := _g.ParseUint(_feeagg.Value, 10, 8)
			if _cddgg != nil {
				return _cddgg
			}
			_ffccd := uint8(_adbca)
			_dagad.UpdatedVersionAttr = &_ffccd
			continue
		}
	}
_dfgebc:
	for {
		_gaddbc, _aecbb := d.Token()
		if _aecbb != nil {
			return _aecbb
		}
		switch _agcad := _gaddbc.(type) {
		case _b.StartElement:
			switch _agcad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}:
				if _bgcgg := d.DecodeElement(_dagad.Location, &_agcad); _bgcgg != nil {
					return _bgcgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dagad.PivotFields = NewCT_PivotFields()
				if _fbbfeg := d.DecodeElement(_dagad.PivotFields, &_agcad); _fbbfeg != nil {
					return _fbbfeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0046\u0069\u0065\u006c\u0064s"}:
				_dagad.RowFields = NewCT_RowFields()
				if _fgbdd := d.DecodeElement(_dagad.RowFields, &_agcad); _fgbdd != nil {
					return _fgbdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073"}:
				_dagad.RowItems = NewCT_rowItems()
				if _dffeg := d.DecodeElement(_dagad.RowItems, &_agcad); _dffeg != nil {
					return _dffeg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0046\u0069\u0065\u006c\u0064s"}:
				_dagad.ColFields = NewCT_ColFields()
				if _cgdded := d.DecodeElement(_dagad.ColFields, &_agcad); _cgdded != nil {
					return _cgdded
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073"}:
				_dagad.ColItems = NewCT_colItems()
				if _cgfaa := d.DecodeElement(_dagad.ColItems, &_agcad); _cgfaa != nil {
					return _cgfaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dagad.PageFields = NewCT_PageFields()
				if _fceec := d.DecodeElement(_dagad.PageFields, &_agcad); _fceec != nil {
					return _fceec
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073"}:
				_dagad.DataFields = NewCT_DataFields()
				if _gecaae := d.DecodeElement(_dagad.DataFields, &_agcad); _gecaae != nil {
					return _gecaae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u0072\u006d\u0061\u0074\u0073"}:
				_dagad.Formats = NewCT_Formats()
				if _gddbac := d.DecodeElement(_dagad.Formats, &_agcad); _gddbac != nil {
					return _gddbac
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006ed\u0069\u0074\u0069\u006f\u006ea\u006c\u0046o\u0072\u006d\u0061\u0074\u0073"}:
				_dagad.ConditionalFormats = NewCT_ConditionalFormats()
				if _cggc := d.DecodeElement(_dagad.ConditionalFormats, &_agcad); _cggc != nil {
					return _cggc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_dagad.ChartFormats = NewCT_ChartFormats()
				if _gaafdg := d.DecodeElement(_dagad.ChartFormats, &_agcad); _gaafdg != nil {
					return _gaafdg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069v\u006f\u0074\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_dagad.PivotHierarchies = NewCT_PivotHierarchies()
				if _cefaf := d.DecodeElement(_dagad.PivotHierarchies, &_agcad); _cefaf != nil {
					return _cefaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006ftT\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"}:
				_dagad.PivotTableStyleInfo = NewCT_PivotTableStyle()
				if _gdeda := d.DecodeElement(_dagad.PivotTableStyleInfo, &_agcad); _gdeda != nil {
					return _gdeda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u0074\u0065\u0072\u0073"}:
				_dagad.Filters = NewCT_PivotFilters()
				if _gdggfc := d.DecodeElement(_dagad.Filters, &_agcad); _gdggfc != nil {
					return _gdggfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0077\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_dagad.RowHierarchiesUsage = NewCT_RowHierarchiesUsage()
				if _dacfc := d.DecodeElement(_dagad.RowHierarchiesUsage, &_agcad); _dacfc != nil {
					return _dacfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048ie\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065"}:
				_dagad.ColHierarchiesUsage = NewCT_ColHierarchiesUsage()
				if _ecdacg := d.DecodeElement(_dagad.ColHierarchiesUsage, &_agcad); _ecdacg != nil {
					return _ecdacg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dagad.ExtLst = NewCT_ExtensionList()
				if _fcadc := d.DecodeElement(_dagad.ExtLst, &_agcad); _fcadc != nil {
					return _fcadc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _agcad.Name)
				if _bafbf := d.Skip(); _bafbf != nil {
					return _bafbf
				}
			}
		case _b.EndElement:
			break _dfgebc
		case _b.CharData:
		}
	}
	return nil
}
func (_cegfe ST_OleUpdate) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egbac := _b.Attr{}
	_egbac.Name = name
	switch _cegfe {
	case ST_OleUpdateUnset:
		_egbac.Value = ""
	case ST_OleUpdateOLEUPDATE_ALWAYS:
		_egbac.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053"
	case ST_OleUpdateOLEUPDATE_ONCALL:
		_egbac.Value = "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c"
	}
	return _egbac, nil
}
func (_ggffb *ST_GradientType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ggffb = 0
	case "\u006c\u0069\u006e\u0065\u0061\u0072":
		*_ggffb = 1
	case "\u0070\u0061\u0074\u0068":
		*_ggffb = 2
	}
	return nil
}

type CT_FileRecoveryPr struct {

	// Auto Recover
	AutoRecoverAttr *bool

	// Crash Save
	CrashSaveAttr *bool

	// Data Extract Load
	DataExtractLoadAttr *bool

	// Repair Load
	RepairLoadAttr *bool
}
type CT_SheetIdMap struct {

	// Sheet Count
	CountAttr *uint32

	// Sheet Id
	SheetId []*CT_SheetId
}

func (_aagbfd ST_TableType) Validate() error { return _aagbfd.ValidateWithPath("") }
func (_edfa *CT_DdeItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aadca:
	for {
		_fedgc, _gfgfe := d.Token()
		if _gfgfe != nil {
			return _gfgfe
		}
		switch _gcac := _fedgc.(type) {
		case _b.StartElement:
			switch _gcac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064d\u0065\u0049\u0074\u0065\u006d"}:
				_effac := NewCT_DdeItem()
				if _dcaf := d.DecodeElement(_effac, &_gcac); _dcaf != nil {
					return _dcaf
				}
				_edfa.DdeItem = append(_edfa.DdeItem, _effac)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _gcac.Name)
				if _fgceg := d.Skip(); _fgceg != nil {
					return _fgceg
				}
			}
		case _b.EndElement:
			break _aadca
		case _b.CharData:
		}
	}
	return nil
}
func (_agce *CT_CalcCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dbfc := range start.Attr {
		if _dbfc.Name.Local == "\u0072" {
			_bafc, _dgdd := _dbfc.Value, error(nil)
			if _dgdd != nil {
				return _dgdd
			}
			_agce.RAttr = &_bafc
			continue
		}
		if _dbfc.Name.Local == "\u0072\u0065\u0066" {
			_efb, _ead := _dbfc.Value, error(nil)
			if _ead != nil {
				return _ead
			}
			_agce.RefAttr = &_efb
			continue
		}
		if _dbfc.Name.Local == "\u0069" {
			_baga, _fdfg := _g.ParseInt(_dbfc.Value, 10, 32)
			if _fdfg != nil {
				return _fdfg
			}
			_gcc := int32(_baga)
			_agce.IAttr = &_gcc
			continue
		}
		if _dbfc.Name.Local == "\u0073" {
			_fcbe, _gcbc := _g.ParseBool(_dbfc.Value)
			if _gcbc != nil {
				return _gcbc
			}
			_agce.SAttr = &_fcbe
			continue
		}
		if _dbfc.Name.Local == "\u006c" {
			_ded, _fdef := _g.ParseBool(_dbfc.Value)
			if _fdef != nil {
				return _fdef
			}
			_agce.LAttr = &_ded
			continue
		}
		if _dbfc.Name.Local == "\u0074" {
			_ebb, _cfgd := _g.ParseBool(_dbfc.Value)
			if _cfgd != nil {
				return _cfgd
			}
			_agce.TAttr = &_ebb
			continue
		}
		if _dbfc.Name.Local == "\u0061" {
			_abeg, _aadc := _g.ParseBool(_dbfc.Value)
			if _aadc != nil {
				return _aadc
			}
			_agce.AAttr = &_abeg
			continue
		}
	}
	for {
		_dfe, _adce := d.Token()
		if _adce != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _adce)
		}
		if _dca, _cfae := _dfe.(_b.EndElement); _cfae && _dca.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_RPrElt and its children
func (_caace *CT_RPrElt) Validate() error {
	return _caace.ValidateWithPath("\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct")
}

// Validate validates the CT_UnderlineProperty and its children
func (_gfacea *CT_UnderlineProperty) Validate() error {
	return _gfacea.ValidateWithPath("C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079")
}
func (_bddbc *CT_String) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0076", _bddbc.VAttr)})
	if _bddbc.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.UAttr))})
	}
	if _bddbc.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.FAttr))})
	}
	if _bddbc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bddbc.CAttr)})
	}
	if _bddbc.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_bddbc.CpAttr)})
	}
	if _bddbc.InAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_bddbc.InAttr)})
	}
	if _bddbc.BcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bddbc.BcAttr)})
	}
	if _bddbc.FcAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_bddbc.FcAttr)})
	}
	if _bddbc.IAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.IAttr))})
	}
	if _bddbc.UnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.UnAttr))})
	}
	if _bddbc.StAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.StAttr))})
	}
	if _bddbc.BAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bddbc.BAttr))})
	}
	e.EncodeToken(start)
	if _bddbc.Tpls != nil {
		_gacbgd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0074\u0070\u006c\u0073"}}
		for _, _gcdg := range _bddbc.Tpls {
			e.EncodeElement(_gcdg, _gacbgd)
		}
	}
	if _bddbc.X != nil {
		_dagbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dafgba := range _bddbc.X {
			e.EncodeElement(_dafgba, _dagbc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_IndexedColors() *CT_IndexedColors { _ecdfe := &CT_IndexedColors{}; return _ecdfe }
func (_gffecg ST_TableStyleType) ValidateWithPath(path string) error {
	switch _gffecg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gffecg))
	}
	return nil
}

type CT_DbPr struct {

	// Connection String
	ConnectionAttr string

	// Command Text
	CommandAttr *string

	// Command Text
	ServerCommandAttr *string

	// OLE DB Command Type
	CommandTypeAttr *uint32
}

// Validate validates the CT_SortState and its children
func (_fbcdbcd *CT_SortState) Validate() error {
	return _fbcdbcd.ValidateWithPath("\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065")
}

type CT_rowItems struct {

	// Items in a Row Count
	CountAttr *uint32

	// Row Items
	I []*CT_I
}

func (_ffaccd *CT_Schema) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eegef := range start.Attr {
		if _eegef.Name.Local == "\u0049\u0044" {
			_fcdde, _faggce := _eegef.Value, error(nil)
			if _faggce != nil {
				return _faggce
			}
			_ffaccd.IDAttr = _fcdde
			continue
		}
		if _eegef.Name.Local == "\u0053c\u0068\u0065\u006d\u0061\u0052\u0065f" {
			_dcbdge, _geagcf := _eegef.Value, error(nil)
			if _geagcf != nil {
				return _geagcf
			}
			_ffaccd.SchemaRefAttr = &_dcbdge
			continue
		}
		if _eegef.Name.Local == "\u004ea\u006d\u0065\u0073\u0070\u0061\u0063e" {
			_fbgff, _bgedfg := _eegef.Value, error(nil)
			if _bgedfg != nil {
				return _bgedfg
			}
			_ffaccd.NamespaceAttr = &_fbgff
			continue
		}
		if _eegef.Name.Local == "\u0053\u0063\u0068\u0065\u006d\u0061\u004c\u0061\u006eg\u0075\u0061\u0067\u0065" {
			_gcdea, _cgfba := _eegef.Value, error(nil)
			if _cgfba != nil {
				return _cgfba
			}
			_ffaccd.SchemaLanguageAttr = &_gcdea
			continue
		}
	}
_gbaaa:
	for {
		_gddae, _fbggeg := d.Token()
		if _fbggeg != nil {
			return _fbggeg
		}
		switch _ffaca := _gddae.(type) {
		case _b.StartElement:
			switch _ffaca.Name {
			default:
				if _dgbgeb, _ecafbf := _f.CreateElement(_ffaca); _ecafbf != nil {
					return _ecafbf
				} else {
					if _afcbb := d.DecodeElement(_dgbgeb, &_ffaca); _afcbb != nil {
						return _afcbb
					}
					_ffaccd.Any = _dgbgeb
				}
			}
		case _b.EndElement:
			break _gbaaa
		case _b.CharData:
		}
	}
	return nil
}

type CT_Consolidation struct {

	// Auto Page
	AutoPageAttr *bool

	// Page Item Values
	Pages *CT_Pages

	// Range Sets
	RangeSets *CT_RangeSets
}

func NewCT_QueryCache() *CT_QueryCache { _fbceg := &CT_QueryCache{}; return _fbceg }
func (_abadbc *CT_Items) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abadbc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_abadbc.CountAttr)})
	}
	e.EncodeToken(start)
	_cdebd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0069\u0074\u0065\u006d"}}
	for _, _aafda := range _abadbc.Item {
		e.EncodeElement(_aafda, _cdebd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eggga *ST_SortType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_eggga = 0
	case "\u006e\u006f\u006e\u0065":
		*_eggga = 1
	case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
		*_eggga = 2
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
		*_eggga = 3
	case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
		*_eggga = 4
	case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
		*_eggga = 5
	case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
		*_eggga = 6
	case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
		*_eggga = 7
	}
	return nil
}

// Validate validates the CT_TableMissing and its children
func (_fcdcf *CT_TableMissing) Validate() error {
	return _fcdcf.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067")
}
func (_cdgcg *ST_Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bafga, _gafacd := d.Token()
	if _gafacd != nil {
		return _gafacd
	}
	if _bfcgbf, _cbacbfe := _bafga.(_b.EndElement); _cbacbfe && _bfcgbf.Name == start.Name {
		*_cdgcg = 1
		return nil
	}
	if _dbcgef, _bafbge := _bafga.(_b.CharData); !_bafbge {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bafga)
	} else {
		switch string(_dbcgef) {
		case "":
			*_cdgcg = 0
		case "\u0063\u006f\u006d\u006d\u004e\u006f\u006e\u0065":
			*_cdgcg = 1
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_cdgcg = 2
		case "\u0063\u006f\u006d\u006d\u0049\u006e\u0064\u0041\u006e\u0064\u0043\u006fm\u006d\u0065\u006e\u0074":
			*_cdgcg = 3
		}
	}
	_bafga, _gafacd = d.Token()
	if _gafacd != nil {
		return _gafacd
	}
	if _dbbgfg, _dafagf := _bafga.(_b.EndElement); _dafagf && _dbbgfg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bafga)
}

// Validate validates the CT_ExternalRow and its children
func (_gfegb *CT_ExternalRow) Validate() error {
	return _gfegb.ValidateWithPath("\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077")
}
func (_bfdbef *ST_WebSourceType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bfdbef = 0
	case "\u0073\u0068\u0065e\u0074":
		*_bfdbef = 1
	case "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a":
		*_bfdbef = 2
	case "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072":
		*_bfdbef = 3
	case "\u0072\u0061\u006eg\u0065":
		*_bfdbef = 4
	case "\u0063\u0068\u0061r\u0074":
		*_bfdbef = 5
	case "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065":
		*_bfdbef = 6
	case "\u0071\u0075\u0065r\u0079":
		*_bfdbef = 7
	case "\u006c\u0061\u0062e\u006c":
		*_bfdbef = 8
	}
	return nil
}

// Validate validates the CT_QueryTableField and its children
func (_bdcef *CT_QueryTableField) Validate() error {
	return _bdcef.ValidateWithPath("\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064")
}

type CalcChain struct{ CT_CalcChain }
type CT_GradientStop struct {

	// Gradient Stop Position
	PositionAttr float64

	// Color
	Color *CT_Color
}

func NewCT_PageMargins() *CT_PageMargins { _ebdgc := &CT_PageMargins{}; return _ebdgc }

// ValidateWithPath validates the CT_BorderPr and its children, prefixing error messages with path
func (_eff *CT_BorderPr) ValidateWithPath(path string) error {
	if _cdd := _eff.StyleAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065\u0041\u0074\u0074\u0072"); _cdd != nil {
		return _cdd
	}
	if _eff.Color != nil {
		if _abf := _eff.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _abf != nil {
			return _abf
		}
	}
	return nil
}
func NewCT_IntProperty() *CT_IntProperty { _ddfa := &CT_IntProperty{}; return _ddfa }
func (_cafaebb ST_DdeValueType) String() string {
	switch _cafaebb {
	case 0:
		return ""
	case 1:
		return "\u006e\u0069\u006c"
	case 2:
		return "\u0062"
	case 3:
		return "\u006e"
	case 4:
		return "\u0065"
	case 5:
		return "\u0073\u0074\u0072"
	}
	return ""
}

// Validate validates the CT_CfRule and its children
func (_dacge *CT_CfRule) Validate() error {
	return _dacge.ValidateWithPath("\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce")
}

// ValidateWithPath validates the CT_RangePr and its children, prefixing error messages with path
func (_ddeaca *CT_RangePr) ValidateWithPath(path string) error {
	if _bfagdf := _ddeaca.GroupByAttr.ValidateWithPath(path + "\u002f\u0047\u0072o\u0075\u0070\u0042\u0079\u0041\u0074\u0074\u0072"); _bfagdf != nil {
		return _bfagdf
	}
	return nil
}

// ValidateWithPath validates the CT_SheetView and its children, prefixing error messages with path
func (_beacfg *CT_SheetView) ValidateWithPath(path string) error {
	if _gdfea := _beacfg.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _gdfea != nil {
		return _gdfea
	}
	if _beacfg.Pane != nil {
		if _ddbdg := _beacfg.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _ddbdg != nil {
			return _ddbdg
		}
	}
	for _dffcf, _deeaf := range _beacfg.Selection {
		if _becdab := _deeaf.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0053\u0065\u006ce\u0063\u0074\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _dffcf)); _becdab != nil {
			return _becdab
		}
	}
	for _gfgbde, _gbfbdb := range _beacfg.PivotSelection {
		if _gaefc := _gbfbdb.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074S\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u005b\u0025\u0064\u005d", path, _gfgbde)); _gaefc != nil {
			return _gaefc
		}
	}
	if _beacfg.ExtLst != nil {
		if _faedf := _beacfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _faedf != nil {
			return _faedf
		}
	}
	return nil
}
func NewCT_PivotFilters() *CT_PivotFilters { _cbbbb := &CT_PivotFilters{}; return _cbbbb }
func (_afgadc ST_PivotFilterType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbafdc := _b.Attr{}
	_fbafdc.Name = name
	switch _afgadc {
	case ST_PivotFilterTypeUnset:
		_fbafdc.Value = ""
	case ST_PivotFilterTypeUnknown:
		_fbafdc.Value = "\u0075n\u006b\u006e\u006f\u0077\u006e"
	case ST_PivotFilterTypeCount:
		_fbafdc.Value = "\u0063\u006f\u0075n\u0074"
	case ST_PivotFilterTypePercent:
		_fbafdc.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_PivotFilterTypeSum:
		_fbafdc.Value = "\u0073\u0075\u006d"
	case ST_PivotFilterTypeCaptionEqual:
		_fbafdc.Value = "\u0063\u0061\u0070t\u0069\u006f\u006e\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionNotEqual:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeCaptionBeginsWith:
		_fbafdc.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065\u0067\u0069\u006es\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotBeginsWith:
		_fbafdc.Value = "c\u0061p\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042e\u0067\u0069\u006e\u0073Wi\u0074\u0068"
	case ST_PivotFilterTypeCaptionEndsWith:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0045\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionNotEndsWith:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0045\u006ed\u0073\u0057\u0069\u0074\u0068"
	case ST_PivotFilterTypeCaptionContains:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionNotContains:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004e\u006ft\u0043\u006fn\u0074\u0061\u0069\u006e\u0073"
	case ST_PivotFilterTypeCaptionGreaterThan:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u0047\u0072e\u0061\u0074e\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionGreaterThanOrEqual:
		_fbafdc.Value = "\u0063a\u0070\u0074\u0069\u006fn\u0047\u0072\u0065\u0061\u0074e\u0072T\u0068a\u006e\u004f\u0072\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeCaptionLessThan:
		_fbafdc.Value = "\u0063a\u0070t\u0069\u006f\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeCaptionLessThanOrEqual:
		_fbafdc.Value = "\u0063\u0061\u0070\u0074io\u006e\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075a\u006c"
	case ST_PivotFilterTypeCaptionBetween:
		_fbafdc.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeCaptionNotBetween:
		_fbafdc.Value = "\u0063\u0061\u0070\u0074\u0069\u006f\u006e\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueEqual:
		_fbafdc.Value = "\u0076\u0061\u006c\u0075\u0065\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueNotEqual:
		_fbafdc.Value = "\u0076\u0061\u006c\u0075\u0065\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueGreaterThan:
		_fbafdc.Value = "\u0076\u0061l\u0075\u0065\u0047r\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueGreaterThanOrEqual:
		_fbafdc.Value = "\u0076\u0061\u006cue\u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeValueLessThan:
		_fbafdc.Value = "\u0076\u0061\u006c\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeValueLessThanOrEqual:
		_fbafdc.Value = "v\u0061l\u0075\u0065\u004c\u0065\u0073\u0073\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeValueBetween:
		_fbafdc.Value = "\u0076\u0061\u006cu\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeValueNotBetween:
		_fbafdc.Value = "\u0076a\u006cu\u0065\u004e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateEqual:
		_fbafdc.Value = "\u0064a\u0074\u0065\u0045\u0071\u0075\u0061l"
	case ST_PivotFilterTypeDateNotEqual:
		_fbafdc.Value = "\u0064\u0061\u0074e\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_PivotFilterTypeDateOlderThan:
		_fbafdc.Value = "\u0064\u0061\u0074\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateOlderThanOrEqual:
		_fbafdc.Value = "d\u0061t\u0065\u004f\u006c\u0064\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateNewerThan:
		_fbafdc.Value = "\u0064\u0061\u0074\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_PivotFilterTypeDateNewerThanOrEqual:
		_fbafdc.Value = "d\u0061t\u0065\u004e\u0065\u0077\u0065\u0072\u0054\u0068a\u006e\u004f\u0072\u0045qu\u0061\u006c"
	case ST_PivotFilterTypeDateBetween:
		_fbafdc.Value = "d\u0061\u0074\u0065\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeDateNotBetween:
		_fbafdc.Value = "\u0064\u0061\u0074\u0065\u004e\u006f\u0074\u0042\u0065t\u0077\u0065\u0065\u006e"
	case ST_PivotFilterTypeTomorrow:
		_fbafdc.Value = "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case ST_PivotFilterTypeToday:
		_fbafdc.Value = "\u0074\u006f\u0064a\u0079"
	case ST_PivotFilterTypeYesterday:
		_fbafdc.Value = "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case ST_PivotFilterTypeNextWeek:
		_fbafdc.Value = "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeThisWeek:
		_fbafdc.Value = "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeLastWeek:
		_fbafdc.Value = "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case ST_PivotFilterTypeNextMonth:
		_fbafdc.Value = "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeThisMonth:
		_fbafdc.Value = "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeLastMonth:
		_fbafdc.Value = "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case ST_PivotFilterTypeNextQuarter:
		_fbafdc.Value = "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeThisQuarter:
		_fbafdc.Value = "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeLastQuarter:
		_fbafdc.Value = "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case ST_PivotFilterTypeNextYear:
		_fbafdc.Value = "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeThisYear:
		_fbafdc.Value = "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeLastYear:
		_fbafdc.Value = "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case ST_PivotFilterTypeYearToDate:
		_fbafdc.Value = "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case ST_PivotFilterTypeQ1:
		_fbafdc.Value = "\u0051\u0031"
	case ST_PivotFilterTypeQ2:
		_fbafdc.Value = "\u0051\u0032"
	case ST_PivotFilterTypeQ3:
		_fbafdc.Value = "\u0051\u0033"
	case ST_PivotFilterTypeQ4:
		_fbafdc.Value = "\u0051\u0034"
	case ST_PivotFilterTypeM1:
		_fbafdc.Value = "\u004d\u0031"
	case ST_PivotFilterTypeM2:
		_fbafdc.Value = "\u004d\u0032"
	case ST_PivotFilterTypeM3:
		_fbafdc.Value = "\u004d\u0033"
	case ST_PivotFilterTypeM4:
		_fbafdc.Value = "\u004d\u0034"
	case ST_PivotFilterTypeM5:
		_fbafdc.Value = "\u004d\u0035"
	case ST_PivotFilterTypeM6:
		_fbafdc.Value = "\u004d\u0036"
	case ST_PivotFilterTypeM7:
		_fbafdc.Value = "\u004d\u0037"
	case ST_PivotFilterTypeM8:
		_fbafdc.Value = "\u004d\u0038"
	case ST_PivotFilterTypeM9:
		_fbafdc.Value = "\u004d\u0039"
	case ST_PivotFilterTypeM10:
		_fbafdc.Value = "\u004d\u0031\u0030"
	case ST_PivotFilterTypeM11:
		_fbafdc.Value = "\u004d\u0031\u0031"
	case ST_PivotFilterTypeM12:
		_fbafdc.Value = "\u004d\u0031\u0032"
	}
	return _fbafdc, nil
}

// Validate validates the PivotCacheRecords and its children
func (_bababb *PivotCacheRecords) Validate() error {
	return _bababb.ValidateWithPath("\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073")
}
func (_aefeae *CT_Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _aefeae.IdAttr)})
	if _aefeae.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.NameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _aefeae.DisplayNameAttr)})
	if _aefeae.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.CommentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _aefeae.RefAttr)})
	if _aefeae.TableTypeAttr != ST_TableTypeUnset {
		_fbbge, _faaae := _aefeae.TableTypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e"})
		if _faaae != nil {
			return _faaae
		}
		start.Attr = append(start.Attr, _fbbge)
	}
	if _aefeae.HeaderRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.HeaderRowCountAttr)})
	}
	if _aefeae.InsertRowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aefeae.InsertRowAttr))})
	}
	if _aefeae.InsertRowShiftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aefeae.InsertRowShiftAttr))})
	}
	if _aefeae.TotalsRowCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.TotalsRowCountAttr)})
	}
	if _aefeae.TotalsRowShownAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aefeae.TotalsRowShownAttr))})
	}
	if _aefeae.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aefeae.PublishedAttr))})
	}
	if _aefeae.HeaderRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.HeaderRowDxfIdAttr)})
	}
	if _aefeae.DataDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.DataDxfIdAttr)})
	}
	if _aefeae.TotalsRowDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.TotalsRowDxfIdAttr)})
	}
	if _aefeae.HeaderRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.HeaderRowBorderDxfIdAttr)})
	}
	if _aefeae.TableBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.TableBorderDxfIdAttr)})
	}
	if _aefeae.TotalsRowBorderDxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.TotalsRowBorderDxfIdAttr)})
	}
	if _aefeae.HeaderRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.HeaderRowCellStyleAttr)})
	}
	if _aefeae.DataCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.DataCellStyleAttr)})
	}
	if _aefeae.TotalsRowCellStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.TotalsRowCellStyleAttr)})
	}
	if _aefeae.ConnectionIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aefeae.ConnectionIdAttr)})
	}
	e.EncodeToken(start)
	if _aefeae.AutoFilter != nil {
		_dgaca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}}
		e.EncodeElement(_aefeae.AutoFilter, _dgaca)
	}
	if _aefeae.SortState != nil {
		_gfddd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_aefeae.SortState, _gfddd)
	}
	_cfddb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003at\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}}
	e.EncodeElement(_aefeae.TableColumns, _cfddb)
	if _aefeae.TableStyleInfo != nil {
		_cgbbad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}}
		e.EncodeElement(_aefeae.TableStyleInfo, _cgbbad)
	}
	if _aefeae.ExtLst != nil {
		_fbdbf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aefeae.ExtLst, _fbdbf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ShowDataAsUnset          ST_ShowDataAs = 0
	ST_ShowDataAsNormal         ST_ShowDataAs = 1
	ST_ShowDataAsDifference     ST_ShowDataAs = 2
	ST_ShowDataAsPercent        ST_ShowDataAs = 3
	ST_ShowDataAsPercentDiff    ST_ShowDataAs = 4
	ST_ShowDataAsRunTotal       ST_ShowDataAs = 5
	ST_ShowDataAsPercentOfRow   ST_ShowDataAs = 6
	ST_ShowDataAsPercentOfCol   ST_ShowDataAs = 7
	ST_ShowDataAsPercentOfTotal ST_ShowDataAs = 8
	ST_ShowDataAsIndex          ST_ShowDataAs = 9
)

func NewCT_PageFields() *CT_PageFields { _bgcbc := &CT_PageFields{}; return _bgcbc }
func NewCT_VolMain() *CT_VolMain       { _bbdeb := &CT_VolMain{}; return _bbdeb }

// Validate validates the CT_OutlinePr and its children
func (_egcbf *CT_OutlinePr) Validate() error {
	return _egcbf.ValidateWithPath("\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072")
}

type CT_IgnoredErrors struct {

	// Ignored Error
	IgnoredError []*CT_IgnoredError
	ExtLst       *CT_ExtensionList
}

func (_gdbfbf *CT_Row) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdbfbf.RAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_gdbfbf.RAttr)})
	}
	if _gdbfbf.SpansAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0070\u0061n\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_gdbfbf.SpansAttr)})
	}
	if _gdbfbf.SAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_gdbfbf.SAttr)})
	}
	if _gdbfbf.CustomFormatAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.CustomFormatAttr))})
	}
	if _gdbfbf.HtAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gdbfbf.HtAttr)})
	}
	if _gdbfbf.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.HiddenAttr))})
	}
	if _gdbfbf.CustomHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.CustomHeightAttr))})
	}
	if _gdbfbf.OutlineLevelAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_gdbfbf.OutlineLevelAttr)})
	}
	if _gdbfbf.CollapsedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.CollapsedAttr))})
	}
	if _gdbfbf.ThickTopAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.ThickTopAttr))})
	}
	if _gdbfbf.ThickBotAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.ThickBotAttr))})
	}
	if _gdbfbf.PhAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdbfbf.PhAttr))})
	}
	e.EncodeToken(start)
	if _gdbfbf.C != nil {
		_afbcd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063"}}
		for _, _dgeba := range _gdbfbf.C {
			e.EncodeElement(_dgeba, _afbcd)
		}
	}
	if _gdbfbf.ExtLst != nil {
		_bedcga := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gdbfbf.ExtLst, _bedcga)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_FontSize and its children
func (_ccef *CT_FontSize) Validate() error {
	return _ccef.ValidateWithPath("C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065")
}

type CT_PivotHierarchies struct {

	// OLAP Hierarchy Count
	CountAttr *uint32

	// OLAP Hierarchy
	PivotHierarchy []*CT_PivotHierarchy
}

func (_afdg *CT_CalculatedItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fffb := range start.Attr {
		if _fffb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ceaf, _ccbd := _g.ParseUint(_fffb.Value, 10, 32)
			if _ccbd != nil {
				return _ccbd
			}
			_gade := uint32(_ceaf)
			_afdg.CountAttr = &_gade
			continue
		}
	}
_gdbg:
	for {
		_ccgfc, _bfbc := d.Token()
		if _bfbc != nil {
			return _bfbc
		}
		switch _agd := _ccgfc.(type) {
		case _b.StartElement:
			switch _agd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}:
				_abacf := NewCT_CalculatedItem()
				if _acab := d.DecodeElement(_abacf, &_agd); _acab != nil {
					return _acab
				}
				_afdg.CalculatedItem = append(_afdg.CalculatedItem, _abacf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _agd.Name)
				if _dedg := d.Skip(); _dedg != nil {
					return _dedg
				}
			}
		case _b.EndElement:
			break _gdbg
		case _b.CharData:
		}
	}
	return nil
}
func (_edbdcg ST_FieldSortType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fbbca := _b.Attr{}
	_fbbca.Name = name
	switch _edbdcg {
	case ST_FieldSortTypeUnset:
		_fbbca.Value = ""
	case ST_FieldSortTypeManual:
		_fbbca.Value = "\u006d\u0061\u006e\u0075\u0061\u006c"
	case ST_FieldSortTypeAscending:
		_fbbca.Value = "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case ST_FieldSortTypeDescending:
		_fbbca.Value = "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return _fbbca, nil
}
func (_begde *CT_DiscretePr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebbcc := range start.Attr {
		if _ebbcc.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_deaae, _dbfec := _g.ParseUint(_ebbcc.Value, 10, 32)
			if _dbfec != nil {
				return _dbfec
			}
			_facg := uint32(_deaae)
			_begde.CountAttr = &_facg
			continue
		}
	}
_dbgbc:
	for {
		_ddedd, _adff := d.Token()
		if _adff != nil {
			return _adff
		}
		switch _bffc := _ddedd.(type) {
		case _b.StartElement:
			switch _bffc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_ddegf := NewCT_Index()
				if _bcgbc := d.DecodeElement(_ddegf, &_bffc); _bcgbc != nil {
					return _bcgbc
				}
				_begde.X = append(_begde.X, _ddegf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072 \u0025\u0076", _bffc.Name)
				if _fada := d.Skip(); _fada != nil {
					return _fada
				}
			}
		case _b.EndElement:
			break _dbgbc
		case _b.CharData:
		}
	}
	return nil
}
func (_bdgff *CT_MdxMemeberProp) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ebbbf := range start.Attr {
		if _ebbbf.Name.Local == "\u006e" {
			_bcgab, _bgaagb := _g.ParseUint(_ebbbf.Value, 10, 32)
			if _bgaagb != nil {
				return _bgaagb
			}
			_bdgff.NAttr = uint32(_bcgab)
			continue
		}
		if _ebbbf.Name.Local == "\u006e\u0070" {
			_caeb, _ddege := _g.ParseUint(_ebbbf.Value, 10, 32)
			if _ddege != nil {
				return _ddege
			}
			_bdgff.NpAttr = uint32(_caeb)
			continue
		}
	}
	for {
		_eeag, _cgcee := d.Token()
		if _cgcee != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065\u0072\u0050\u0072\u006f\u0070: \u0025\u0073", _cgcee)
		}
		if _bcagg, _gcbdb := _eeag.(_b.EndElement); _gcbdb && _bcagg.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_IconFilter and its children
func (_dcaaa *CT_IconFilter) Validate() error {
	return _dcaaa.ValidateWithPath("\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072")
}
func (_bbgee *CT_Mdx) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e"}, Value: _a.Sprintf("\u0025\u0076", _bbgee.NAttr)})
	_fbdda, _fbfdb := _bbgee.FAttr.MarshalXMLAttr(_b.Name{Local: "\u0066"})
	if _fbfdb != nil {
		return _fbfdb
	}
	start.Attr = append(start.Attr, _fbdda)
	e.EncodeToken(start)
	if _bbgee.T != nil {
		_agagb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
		e.EncodeElement(_bbgee.T, _agagb)
	}
	if _bbgee.Ms != nil {
		_bfbag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003am\u0073"}}
		e.EncodeElement(_bbgee.Ms, _bfbag)
	}
	if _bbgee.P != nil {
		_dfbccd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070"}}
		e.EncodeElement(_bbgee.P, _dfbccd)
	}
	if _bbgee.K != nil {
		_ebeecb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b"}}
		e.EncodeElement(_bbgee.K, _ebeecb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Dxfs struct {

	// Format Count
	CountAttr *uint32

	// Formatting
	Dxf []*CT_Dxf
}
type CT_BooleanProperty struct {

	// Value
	ValAttr *bool
}

// ValidateWithPath validates the CT_DdeValues and its children, prefixing error messages with path
func (_cagcb *CT_DdeValues) ValidateWithPath(path string) error {
	for _ggeea, _cdbfd := range _cagcb.Value {
		if _efafa := _cdbfd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fV\u0061\u006c\u0075\u0065\u005b\u0025\u0064\u005d", path, _ggeea)); _efafa != nil {
			return _efafa
		}
	}
	return nil
}
func (_egfced ST_CfType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_egfced.String(), start)
}
func NewCT_SmartTagPr() *CT_SmartTagPr { _ceecc := &CT_SmartTagPr{}; return _ceecc }
func (_cag *CT_AutoFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cag.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cag.RefAttr)})
	}
	e.EncodeToken(start)
	if _cag.FilterColumn != nil {
		_fa := _b.StartElement{Name: _b.Name{Local: "\u006da\u003af\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e"}}
		for _, _gcb := range _cag.FilterColumn {
			e.EncodeElement(_gcb, _fa)
		}
	}
	if _cag.SortState != nil {
		_gbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"}}
		e.EncodeElement(_cag.SortState, _gbc)
	}
	if _cag.ExtLst != nil {
		_abd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cag.ExtLst, _abd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_FilterOperatorUnset              ST_FilterOperator = 0
	ST_FilterOperatorEqual              ST_FilterOperator = 1
	ST_FilterOperatorLessThan           ST_FilterOperator = 2
	ST_FilterOperatorLessThanOrEqual    ST_FilterOperator = 3
	ST_FilterOperatorNotEqual           ST_FilterOperator = 4
	ST_FilterOperatorGreaterThanOrEqual ST_FilterOperator = 5
	ST_FilterOperatorGreaterThan        ST_FilterOperator = 6
)

type CT_VerticalAlignFontProperty struct {

	// Value
	ValAttr _ff.ST_VerticalAlignRun
}

func (_gedgg *Table) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065"
	return _gedgg.CT_Table.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_Tuple and its children, prefixing error messages with path
func (_aaedd *CT_Tuple) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ExternalSheetData and its children
func (_eded *CT_ExternalSheetData) Validate() error {
	return _eded.ValidateWithPath("C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061")
}

// Validate validates the CT_Color and its children
func (_gbaf *CT_Color) Validate() error {
	return _gbaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

const (
	ST_VisibilityUnset      ST_Visibility = 0
	ST_VisibilityVisible    ST_Visibility = 1
	ST_VisibilityHidden     ST_Visibility = 2
	ST_VisibilityVeryHidden ST_Visibility = 3
)

func (_fdfbda ST_UnderlineValues) Validate() error { return _fdfbda.ValidateWithPath("") }

type CT_Table struct {

	// Table Id
	IdAttr uint32

	// Name
	NameAttr *string

	// Table Name
	DisplayNameAttr string

	// Table Comment
	CommentAttr *string

	// Reference
	RefAttr string

	// Table Type
	TableTypeAttr ST_TableType

	// Header Row Count
	HeaderRowCountAttr *uint32

	// Insert Row Showing
	InsertRowAttr *bool

	// Insert Row Shift
	InsertRowShiftAttr *bool

	// Totals Row Count
	TotalsRowCountAttr *uint32

	// Totals Row Shown
	TotalsRowShownAttr *bool

	// Published
	PublishedAttr *bool

	// Header Row Format Id
	HeaderRowDxfIdAttr *uint32

	// Data Area Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Border Format Id
	HeaderRowBorderDxfIdAttr *uint32

	// Table Border Format Id
	TableBorderDxfIdAttr *uint32

	// Totals Row Border Format Id
	TotalsRowBorderDxfIdAttr *uint32

	// Header Row Style
	HeaderRowCellStyleAttr *string

	// Data Style Name
	DataCellStyleAttr *string

	// Totals Row Style
	TotalsRowCellStyleAttr *string

	// Connection ID
	ConnectionIdAttr *uint32

	// Table AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Table Columns
	TableColumns *CT_TableColumns

	// Table Style
	TableStyleInfo *CT_TableStyleInfo

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_PageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// Print Scale
	ScaleAttr *uint32

	// First Page Number
	FirstPageNumberAttr *uint32

	// Fit To Width
	FitToWidthAttr *uint32

	// Fit To Height
	FitToHeightAttr *uint32

	// Page Order
	PageOrderAttr ST_PageOrder

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Print Cell Comments
	CellCommentsAttr ST_CellComments

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Print Error Handling
	ErrorsAttr ST_PrintError

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

func NewCT_Connections() *CT_Connections { _cgda := &CT_Connections{}; return _cgda }

// ValidateWithPath validates the CT_DbPr and its children, prefixing error messages with path
func (_edef *CT_DbPr) ValidateWithPath(path string) error { return nil }

type CT_Parameter struct {

	// Parameter Name
	NameAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Parameter Type
	ParameterTypeAttr ST_ParameterType

	// Refresh on Change
	RefreshOnChangeAttr *bool

	// Parameter Prompt String
	PromptAttr *string

	// Boolean
	BooleanAttr *bool

	// Double
	DoubleAttr *float64

	// Integer
	IntegerAttr *int32

	// String
	StringAttr *string

	// Cell Reference
	CellAttr *string
}

func (_bbfab *CT_DataRefs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcaf := range start.Attr {
		if _fcaf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ggcc, _ffae := _g.ParseUint(_fcaf.Value, 10, 32)
			if _ffae != nil {
				return _ffae
			}
			_gace := uint32(_ggcc)
			_bbfab.CountAttr = &_gace
			continue
		}
	}
_dgbfg:
	for {
		_baadb, _ffee := d.Token()
		if _ffee != nil {
			return _ffee
		}
		switch _gbeef := _baadb.(type) {
		case _b.StartElement:
			switch _gbeef.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064a\u0074\u0061\u0052\u0065\u0066"}:
				_gaae := NewCT_DataRef()
				if _fade := d.DecodeElement(_gaae, &_gbeef); _fade != nil {
					return _fade
				}
				_bbfab.DataRef = append(_bbfab.DataRef, _gaae)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073\u0020\u0025\u0076", _gbeef.Name)
				if _gadgd := d.Skip(); _gadgd != nil {
					return _gadgd
				}
			}
		case _b.EndElement:
			break _dgbfg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_InputCells() *CT_InputCells { _dffed := &CT_InputCells{}; return _dffed }
func (_gbdaa *CT_ExternalDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gbdaa.NameAttr)})
	if _gbdaa.RefersToAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0065\u0072\u0073\u0054\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_gbdaa.RefersToAttr)})
	}
	if _gbdaa.SheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gbdaa.SheetIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_RefMode byte

// Validate validates the CT_NumFmts and its children
func (_ebfdf *CT_NumFmts) Validate() error {
	return _ebfdf.ValidateWithPath("\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073")
}
func (_gfgcc *CT_PivotAreas) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfgcc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gfgcc.CountAttr)})
	}
	e.EncodeToken(start)
	if _gfgcc.PivotArea != nil {
		_eecff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
		for _, _abaga := range _gfgcc.PivotArea {
			e.EncodeElement(_abaga, _eecff)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acecgb *ST_RefMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_acecgb = 0
	case "\u0041\u0031":
		*_acecgb = 1
	case "\u0052\u0031\u0043\u0031":
		*_acecgb = 2
	}
	return nil
}
func (_gabcgg ST_TextHAlign) Validate() error { return _gabcgg.ValidateWithPath("") }

// Validate validates the CT_PhoneticRun and its children
func (_egeac *CT_PhoneticRun) Validate() error {
	return _egeac.ValidateWithPath("\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e")
}
func NewCT_OleObjects() *CT_OleObjects { _cafgb := &CT_OleObjects{}; return _cafgb }
func (_ffbgc *CT_PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffbgc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.IdAttr)})
	}
	if _ffbgc.InvalidAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0076\u0061\u006c\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.InvalidAttr))})
	}
	if _ffbgc.SaveDataAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.SaveDataAttr))})
	}
	if _ffbgc.RefreshOnLoadAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.RefreshOnLoadAttr))})
	}
	if _ffbgc.OptimizeMemoryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.OptimizeMemoryAttr))})
	}
	if _ffbgc.EnableRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.EnableRefreshAttr))})
	}
	if _ffbgc.RefreshedByAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.RefreshedByAttr)})
	}
	if _ffbgc.RefreshedDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.RefreshedDateAttr)})
	}
	if _ffbgc.RefreshedDateIsoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.RefreshedDateIsoAttr)})
	}
	if _ffbgc.BackgroundQueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.BackgroundQueryAttr))})
	}
	if _ffbgc.MissingItemsLimitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.MissingItemsLimitAttr)})
	}
	if _ffbgc.CreatedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.CreatedVersionAttr)})
	}
	if _ffbgc.RefreshedVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.RefreshedVersionAttr)})
	}
	if _ffbgc.MinRefreshableVersionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.MinRefreshableVersionAttr)})
	}
	if _ffbgc.RecordCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffbgc.RecordCountAttr)})
	}
	if _ffbgc.UpgradeOnRefreshAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.UpgradeOnRefreshAttr))})
	}
	if _ffbgc.TupleCacheAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.TupleCacheAttr))})
	}
	if _ffbgc.SupportSubqueryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.SupportSubqueryAttr))})
	}
	if _ffbgc.SupportAdvancedDrillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ffbgc.SupportAdvancedDrillAttr))})
	}
	e.EncodeToken(start)
	_edacc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065"}}
	e.EncodeElement(_ffbgc.CacheSource, _edacc)
	_aebfdf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073"}}
	e.EncodeElement(_ffbgc.CacheFields, _aebfdf)
	if _ffbgc.CacheHierarchies != nil {
		_acbef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}}
		e.EncodeElement(_ffbgc.CacheHierarchies, _acbef)
	}
	if _ffbgc.Kpis != nil {
		_dgeeg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006b\u0070\u0069\u0073"}}
		e.EncodeElement(_ffbgc.Kpis, _dgeeg)
	}
	if _ffbgc.TupleCache != nil {
		_ebdad := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}}
		e.EncodeElement(_ffbgc.TupleCache, _ebdad)
	}
	if _ffbgc.CalculatedItems != nil {
		_bdgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073"}}
		e.EncodeElement(_ffbgc.CalculatedItems, _bdgc)
	}
	if _ffbgc.CalculatedMembers != nil {
		_edbcd := _b.StartElement{Name: _b.Name{Local: "m\u0061:\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073"}}
		e.EncodeElement(_ffbgc.CalculatedMembers, _edbcd)
	}
	if _ffbgc.Dimensions != nil {
		_bgcafd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}}
		e.EncodeElement(_ffbgc.Dimensions, _bgcafd)
	}
	if _ffbgc.MeasureGroups != nil {
		_dcbfd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}}
		e.EncodeElement(_ffbgc.MeasureGroups, _dcbfd)
	}
	if _ffbgc.Maps != nil {
		_aedcg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006d\u0061\u0070\u0073"}}
		e.EncodeElement(_ffbgc.Maps, _aedcg)
	}
	if _ffbgc.ExtLst != nil {
		_bagfag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffbgc.ExtLst, _bagfag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_adfb *CT_DdeItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _adfb.DdeItem != nil {
		_dacgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0064\u0065\u0049\u0074\u0065\u006d"}}
		for _, _eccgf := range _adfb.DdeItem {
			e.EncodeElement(_eccgf, _dacgf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cedbae ST_SortBy) String() string {
	switch _cedbae {
	case 0:
		return ""
	case 1:
		return "\u0076\u0061\u006cu\u0065"
	case 2:
		return "\u0063e\u006c\u006c\u0043\u006f\u006c\u006fr"
	case 3:
		return "\u0066o\u006e\u0074\u0043\u006f\u006c\u006fr"
	case 4:
		return "\u0069\u0063\u006f\u006e"
	}
	return ""
}
func (_aeee *ST_DataValidationErrorStyle) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddfaeg, _bcfaca := d.Token()
	if _bcfaca != nil {
		return _bcfaca
	}
	if _cfeca, _edafg := _ddfaeg.(_b.EndElement); _edafg && _cfeca.Name == start.Name {
		*_aeee = 1
		return nil
	}
	if _gdacc, _affccb := _ddfaeg.(_b.CharData); !_affccb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddfaeg)
	} else {
		switch string(_gdacc) {
		case "":
			*_aeee = 0
		case "\u0073\u0074\u006f\u0070":
			*_aeee = 1
		case "\u0077a\u0072\u006e\u0069\u006e\u0067":
			*_aeee = 2
		case "i\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_aeee = 3
		}
	}
	_ddfaeg, _bcfaca = d.Token()
	if _bcfaca != nil {
		return _bcfaca
	}
	if _cabbgba, _dacfad := _ddfaeg.(_b.EndElement); _dacfad && _cabbgba.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddfaeg)
}

// Validate validates the CT_RevisionCellChange and its children
func (_fgdce *CT_RevisionCellChange) Validate() error {
	return _fgdce.ValidateWithPath("C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065")
}
func (_dfdbg ST_SortMethod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dfdbg.String(), start)
}

// Validate validates the CT_ConditionalFormatting and its children
func (_baad *CT_ConditionalFormatting) Validate() error {
	return _baad.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func (_dcbdb *CT_FontName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eecbg := range start.Attr {
		if _eecbg.Name.Local == "\u0076\u0061\u006c" {
			_deaeb, _fgfff := _eecbg.Value, error(nil)
			if _fgfff != nil {
				return _fgfff
			}
			_dcbdb.ValAttr = _deaeb
			continue
		}
	}
	for {
		_fbfab, _adgcbc := d.Token()
		if _adgcbc != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _adgcbc)
		}
		if _debce, _fgcee := _fbfab.(_b.EndElement); _fgcee && _debce.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ProtectedRange and its children
func (_gfecge *CT_ProtectedRange) Validate() error {
	return _gfecge.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065")
}
func (_fabc *CT_CustomSheetView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fabc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _cccf := range start.Attr {
		if _cccf.Name.Local == "\u0073\u0074\u0061t\u0065" {
			_fabc.StateAttr.UnmarshalXMLAttr(_cccf)
			continue
		}
		if _cccf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ccge, _ebfdg := _cccf.Value, error(nil)
			if _ebfdg != nil {
				return _ebfdg
			}
			_fabc.GuidAttr = _ccge
			continue
		}
		if _cccf.Name.Local == "\u0066\u0069\u006ct\u0065\u0072\u0055\u006e\u0069\u0071\u0075\u0065" {
			_bcadf, _fgcb := _g.ParseBool(_cccf.Value)
			if _fgcb != nil {
				return _fgcb
			}
			_fabc.FilterUniqueAttr = &_bcadf
			continue
		}
		if _cccf.Name.Local == "\u0063o\u006c\u006f\u0072\u0049\u0064" {
			_gafad, _abef := _g.ParseUint(_cccf.Value, 10, 32)
			if _abef != nil {
				return _abef
			}
			_gded := uint32(_gafad)
			_fabc.ColorIdAttr = &_gded
			continue
		}
		if _cccf.Name.Local == "\u0076\u0069\u0065\u0077" {
			_fabc.ViewAttr.UnmarshalXMLAttr(_cccf)
			continue
		}
		if _cccf.Name.Local == "\u0073\u0068\u006fw\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_gdagb, _ggddf := _g.ParseBool(_cccf.Value)
			if _ggddf != nil {
				return _ggddf
			}
			_fabc.ShowFormulasAttr = &_gdagb
			continue
		}
		if _cccf.Name.Local == "\u0073h\u006f\u0077\u0052\u0075\u006c\u0065r" {
			_cbga, _fcba := _g.ParseBool(_cccf.Value)
			if _fcba != nil {
				return _fcba
			}
			_fabc.ShowRulerAttr = &_cbga
			continue
		}
		if _cccf.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gbea, _fdaa := _g.ParseBool(_cccf.Value)
			if _fdaa != nil {
				return _fdaa
			}
			_fabc.ShowRowColAttr = &_gbea
			continue
		}
		if _cccf.Name.Local == "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c" {
			_gcab, _gcea := _cccf.Value, error(nil)
			if _gcea != nil {
				return _gcea
			}
			_fabc.TopLeftCellAttr = &_gcab
			continue
		}
		if _cccf.Name.Local == "\u007a\u0065\u0072\u006f\u0056\u0061\u006c\u0075\u0065\u0073" {
			_defae, _babdc := _g.ParseBool(_cccf.Value)
			if _babdc != nil {
				return _babdc
			}
			_fabc.ZeroValuesAttr = &_defae
			continue
		}
		if _cccf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0043\u006f\u006c\u0075\u006d\u006e\u0073" {
			_gdda, _bdcfe := _g.ParseBool(_cccf.Value)
			if _bdcfe != nil {
				return _bdcfe
			}
			_fabc.HiddenColumnsAttr = &_gdda
			continue
		}
		if _cccf.Name.Local == "\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0053\u0079m\u0062\u006f\u006c\u0073" {
			_bbbcb, _bbbec := _g.ParseBool(_cccf.Value)
			if _bbbec != nil {
				return _bbbec
			}
			_fabc.OutlineSymbolsAttr = &_bbbcb
			continue
		}
		if _cccf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072" {
			_eabaa, _cebg := _g.ParseBool(_cccf.Value)
			if _cebg != nil {
				return _cebg
			}
			_fabc.FilterAttr = &_eabaa
			continue
		}
		if _cccf.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_daaae, _cfebb := _g.ParseUint(_cccf.Value, 10, 32)
			if _cfebb != nil {
				return _cfebb
			}
			_adgf := uint32(_daaae)
			_fabc.ScaleAttr = &_adgf
			continue
		}
		if _cccf.Name.Local == "\u0073\u0068\u006f\u0077\u0047\u0072\u0069\u0064\u004c\u0069\u006e\u0065\u0073" {
			_fgcag, _bbee := _g.ParseBool(_cccf.Value)
			if _bbee != nil {
				return _bbee
			}
			_fabc.ShowGridLinesAttr = &_fgcag
			continue
		}
		if _cccf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0073" {
			_gbef, _dece := _g.ParseBool(_cccf.Value)
			if _dece != nil {
				return _dece
			}
			_fabc.HiddenRowsAttr = &_gbef
			continue
		}
		if _cccf.Name.Local == "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e" {
			_gddcd, _cfecb := _g.ParseBool(_cccf.Value)
			if _cfecb != nil {
				return _cfecb
			}
			_fabc.FitToPageAttr = &_gddcd
			continue
		}
		if _cccf.Name.Local == "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a" {
			_bgcb, _fadgg := _g.ParseBool(_cccf.Value)
			if _fadgg != nil {
				return _fadgg
			}
			_fabc.PrintAreaAttr = &_bgcb
			continue
		}
		if _cccf.Name.Local == "\u0073\u0068\u006f\u0077\u0041\u0075\u0074\u006f\u0046i\u006c\u0074\u0065\u0072" {
			_fcbdcd, _bggg := _g.ParseBool(_cccf.Value)
			if _bggg != nil {
				return _bggg
			}
			_fabc.ShowAutoFilterAttr = &_fcbdcd
			continue
		}
		if _cccf.Name.Local == "\u0073\u0068\u006f\u0077\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073" {
			_cega, _ceagd := _g.ParseBool(_cccf.Value)
			if _ceagd != nil {
				return _ceagd
			}
			_fabc.ShowPageBreaksAttr = &_cega
			continue
		}
	}
_bfdf:
	for {
		_ebba, _fcbbb := d.Token()
		if _fcbbb != nil {
			return _fcbbb
		}
		switch _fgdd := _ebba.(type) {
		case _b.StartElement:
			switch _fgdd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u006e\u0065"}:
				_fabc.Pane = NewCT_Pane()
				if _acgg := d.DecodeElement(_fabc.Pane, &_fgdd); _acgg != nil {
					return _acgg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"}:
				_fabc.Selection = NewCT_Selection()
				if _fdgba := d.DecodeElement(_fabc.Selection, &_fgdd); _fdgba != nil {
					return _fdgba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072o\u0077\u0042\u0072\u0065\u0061\u006bs"}:
				_fabc.RowBreaks = NewCT_PageBreak()
				if _dgbg := d.DecodeElement(_fabc.RowBreaks, &_fgdd); _dgbg != nil {
					return _dgbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006c\u0042\u0072\u0065\u0061\u006bs"}:
				_fabc.ColBreaks = NewCT_PageBreak()
				if _bgbe := d.DecodeElement(_fabc.ColBreaks, &_fgdd); _bgbe != nil {
					return _bgbe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_fabc.PageMargins = NewCT_PageMargins()
				if _edcf := d.DecodeElement(_fabc.PageMargins, &_fgdd); _edcf != nil {
					return _edcf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0069n\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"}:
				_fabc.PrintOptions = NewCT_PrintOptions()
				if _bgfgc := d.DecodeElement(_fabc.PrintOptions, &_fgdd); _bgfgc != nil {
					return _bgfgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_fabc.PageSetup = NewCT_PageSetup()
				if _aeeba := d.DecodeElement(_fabc.PageSetup, &_fgdd); _aeeba != nil {
					return _aeeba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_fabc.HeaderFooter = NewCT_HeaderFooter()
				if _gcfd := d.DecodeElement(_fabc.HeaderFooter, &_fgdd); _gcfd != nil {
					return _gcfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_fabc.AutoFilter = NewCT_AutoFilter()
				if _ebgad := d.DecodeElement(_fabc.AutoFilter, &_fgdd); _ebgad != nil {
					return _ebgad
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabc.ExtLst = NewCT_ExtensionList()
				if _dadf := d.DecodeElement(_fabc.ExtLst, &_fgdd); _dadf != nil {
					return _dadf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _fgdd.Name)
				if _fbcab := d.Skip(); _fbcab != nil {
					return _fbcab
				}
			}
		case _b.EndElement:
			break _bfdf
		case _b.CharData:
		}
	}
	return nil
}

type ST_ConditionalFormattingOperator byte

func (_fffaad ST_GroupBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fffaad.String(), start)
}

type CT_Hyperlinks struct {

	// Hyperlink
	Hyperlink []*CT_Hyperlink
}

func NewCT_Formats() *CT_Formats { _cfcg := &CT_Formats{}; return _cfcg }
func NewCT_Format() *CT_Format {
	_fafa := &CT_Format{}
	_fafa.PivotArea = NewCT_PivotArea()
	return _fafa
}

type CT_DataBinding struct {

	// Unique Identifer
	DataBindingNameAttr *string

	// Binding to External File
	FileBindingAttr *bool

	// Reference to Connection ID
	ConnectionIDAttr *uint32

	// File Binding Name
	FileBindingNameAttr *string

	// XML Data Loading Behavior
	DataBindingLoadModeAttr uint32
	Any                     _f.Any
}

func (_cacba *CT_TableStyleElement) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cacba.TypeAttr = ST_TableStyleType(1)
	for _, _aadgb := range start.Attr {
		if _aadgb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_cacba.TypeAttr.UnmarshalXMLAttr(_aadgb)
			continue
		}
		if _aadgb.Name.Local == "\u0073\u0069\u007a\u0065" {
			_cgcfcg, _adabdb := _g.ParseUint(_aadgb.Value, 10, 32)
			if _adabdb != nil {
				return _adabdb
			}
			_eebff := uint32(_cgcfcg)
			_cacba.SizeAttr = &_eebff
			continue
		}
		if _aadgb.Name.Local == "\u0064\u0078\u0066I\u0064" {
			_ecdbg, _efedg := _g.ParseUint(_aadgb.Value, 10, 32)
			if _efedg != nil {
				return _efedg
			}
			_eadgb := uint32(_ecdbg)
			_cacba.DxfIdAttr = &_eadgb
			continue
		}
	}
	for {
		_gcgadb, _gbecg := d.Token()
		if _gbecg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006ce\u0053t\u0079\u006c\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _gbecg)
		}
		if _gddbag, _bafcgd := _gcgadb.(_b.EndElement); _bafcgd && _gddbag.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fdafe ST_ParameterType) Validate() error { return _fdafe.ValidateWithPath("") }
func (_effaca ST_FileType) Validate() error     { return _effaca.ValidateWithPath("") }
func (_bffga *CT_IgnoredErrors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebgdf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ai\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072"}}
	for _, _ebdc := range _bffga.IgnoredError {
		e.EncodeElement(_ebdc, _ebgdf)
	}
	if _bffga.ExtLst != nil {
		_dbfgb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bffga.ExtLst, _dbfgb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acbbc ST_FormatAction) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fcada := _b.Attr{}
	_fcada.Name = name
	switch _acbbc {
	case ST_FormatActionUnset:
		_fcada.Value = ""
	case ST_FormatActionBlank:
		_fcada.Value = "\u0062\u006c\u0061n\u006b"
	case ST_FormatActionFormatting:
		_fcada.Value = "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067"
	case ST_FormatActionDrill:
		_fcada.Value = "\u0064\u0072\u0069l\u006c"
	case ST_FormatActionFormula:
		_fcada.Value = "\u0066o\u0072\u006d\u0075\u006c\u0061"
	}
	return _fcada, nil
}
func (_edbg *CT_DefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _edbg.NameAttr)})
	if _edbg.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.CommentAttr)})
	}
	if _edbg.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.CustomMenuAttr)})
	}
	if _edbg.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.DescriptionAttr)})
	}
	if _edbg.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.HelpAttr)})
	}
	if _edbg.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.StatusBarAttr)})
	}
	if _edbg.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.LocalSheetIdAttr)})
	}
	if _edbg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.HiddenAttr))})
	}
	if _edbg.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.FunctionAttr))})
	}
	if _edbg.VbProcedureAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.VbProcedureAttr))})
	}
	if _edbg.XlmAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006c\u006d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.XlmAttr))})
	}
	if _edbg.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.FunctionGroupIdAttr)})
	}
	if _edbg.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_edbg.ShortcutKeyAttr)})
	}
	if _edbg.PublishToServerAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.PublishToServerAttr))})
	}
	if _edbg.WorkbookParameterAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_edbg.WorkbookParameterAttr))})
	}
	e.EncodeElement(_edbg.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Macrosheet struct {

	// Sheet Properties
	SheetPr *CT_SheetPr

	// Macro Sheet Dimensions
	Dimension *CT_SheetDimension

	// Macro Sheet Views
	SheetViews *CT_SheetViews

	// Sheet Format Properties
	SheetFormatPr *CT_SheetFormatPr

	// Column Information
	Cols []*CT_Cols

	// Sheet Data
	SheetData *CT_SheetData

	// Sheet Protection Options
	SheetProtection *CT_SheetProtection

	// AutoFilter
	AutoFilter *CT_AutoFilter

	// Sort State
	SortState *CT_SortState

	// Data Consolidation
	DataConsolidate *CT_DataConsolidate

	// Custom Sheet Views
	CustomSheetViews *CT_CustomSheetViews

	// Phonetic Properties
	PhoneticPr *CT_PhoneticPr

	// Conditional Formatting
	ConditionalFormatting []*CT_ConditionalFormatting

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Margins
	PageMargins *CT_PageMargins

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// Horizontal Page Breaks (Row)
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Custom Properties
	CustomProperties *CT_CustomProperties

	// Drawing
	Drawing *CT_Drawing

	// Legacy Drawing Reference
	LegacyDrawing *CT_LegacyDrawing

	// Legacy Drawing Header Footer
	LegacyDrawingHF *CT_LegacyDrawing
	DrawingHF       *CT_DrawingHF

	// Background Image
	Picture *CT_SheetBackgroundPicture

	// Embedded Objects
	OleObjects *CT_OleObjects

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_bageg ST_TextVAlign) Validate() error { return _bageg.ValidateWithPath("") }

type CT_TextPr struct {

	// Prompt for File Name
	PromptAttr *bool

	// File Type
	FileTypeAttr ST_FileType

	// Code Page
	CodePageAttr *uint32

	// Character Set
	CharacterSetAttr *string

	// First Row
	FirstRowAttr *uint32

	// Source File Name
	SourceFileAttr *string

	// Delimited File
	DelimitedAttr *bool

	// Decimal Separator
	DecimalAttr *string

	// Thousands Separator
	ThousandsAttr *string

	// Tab as Delimiter
	TabAttr *bool

	// Space is Delimiter
	SpaceAttr *bool

	// Comma is Delimiter
	CommaAttr *bool

	// Semicolon is Delimiter
	SemicolonAttr *bool

	// Consecutive Delimiters
	ConsecutiveAttr *bool

	// Qualifier
	QualifierAttr ST_Qualifier

	// Custom Delimiter
	DelimiterAttr *string

	// Fields
	TextFields *CT_TextFields
}

func (_eggbe *CT_OlapPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efeac := range start.Attr {
		if _efeac.Name.Local == "\u006c\u006f\u0063a\u006c" {
			_aebgfd, _eagfc := _g.ParseBool(_efeac.Value)
			if _eagfc != nil {
				return _eagfc
			}
			_eggbe.LocalAttr = &_aebgfd
			continue
		}
		if _efeac.Name.Local == "\u006co\u0063a\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e" {
			_febae, _gaafd := _efeac.Value, error(nil)
			if _gaafd != nil {
				return _gaafd
			}
			_eggbe.LocalConnectionAttr = &_febae
			continue
		}
		if _efeac.Name.Local == "\u006c\u006f\u0063a\u006c\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_bdedg, _ecccc := _g.ParseBool(_efeac.Value)
			if _ecccc != nil {
				return _ecccc
			}
			_eggbe.LocalRefreshAttr = &_bdedg
			continue
		}
		if _efeac.Name.Local == "\u0073\u0065\u006e\u0064\u004c\u006f\u0063\u0061\u006c\u0065" {
			_adfaa, _ddabf := _g.ParseBool(_efeac.Value)
			if _ddabf != nil {
				return _ddabf
			}
			_eggbe.SendLocaleAttr = &_adfaa
			continue
		}
		if _efeac.Name.Local == "\u0072\u006f\u0077\u0044\u0072\u0069\u006c\u006c\u0043\u006f\u0075\u006e\u0074" {
			_cbcb, _bdggd := _g.ParseUint(_efeac.Value, 10, 32)
			if _bdggd != nil {
				return _bdggd
			}
			_ebaba := uint32(_cbcb)
			_eggbe.RowDrillCountAttr = &_ebaba
			continue
		}
		if _efeac.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u0069\u006c\u006c" {
			_dfeeb, _dbcdg := _g.ParseBool(_efeac.Value)
			if _dbcdg != nil {
				return _dbcdg
			}
			_eggbe.ServerFillAttr = &_dfeeb
			continue
		}
		if _efeac.Name.Local == "\u0073e\u0072v\u0065\u0072\u004e\u0075\u006db\u0065\u0072F\u006f\u0072\u006d\u0061\u0074" {
			_gabcb, _gfdeg := _g.ParseBool(_efeac.Value)
			if _gfdeg != nil {
				return _gfdeg
			}
			_eggbe.ServerNumberFormatAttr = &_gabcb
			continue
		}
		if _efeac.Name.Local == "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u006e\u0074" {
			_efdagg, _daagc := _g.ParseBool(_efeac.Value)
			if _daagc != nil {
				return _daagc
			}
			_eggbe.ServerFontAttr = &_efdagg
			continue
		}
		if _efeac.Name.Local == "\u0073e\u0072v\u0065\u0072\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006f\u0072" {
			_cbcgd, _bdgdb := _g.ParseBool(_efeac.Value)
			if _bdgdb != nil {
				return _bdgdb
			}
			_eggbe.ServerFontColorAttr = &_cbcgd
			continue
		}
	}
	for {
		_fdgdd, _ecddc := d.Token()
		if _ecddc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004f\u006c\u0061p\u0050\u0072\u003a\u0020\u0025\u0073", _ecddc)
		}
		if _becdgd, _gaced := _fdgdd.(_b.EndElement); _gaced && _becdgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_agfeea ST_PrintError) ValidateWithPath(path string) error {
	switch _agfeea {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_agfeea))
	}
	return nil
}

type CT_TupleCache struct {

	// Entries
	Entries *CT_PCDSDTCEntries

	// Sets
	Sets *CT_Sets

	// OLAP Query Cache
	QueryCache *CT_QueryCache

	// Server Formats
	ServerFormats *CT_ServerFormats

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_PrintOptions and its children
func (_fcbce *CT_PrintOptions) Validate() error {
	return _fcbce.ValidateWithPath("\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073")
}

// ValidateWithPath validates the CT_ConditionalFormat and its children, prefixing error messages with path
func (_cbfe *CT_ConditionalFormat) ValidateWithPath(path string) error {
	if _gead := _cbfe.ScopeAttr.ValidateWithPath(path + "\u002f\u0053\u0063\u006f\u0070\u0065\u0041\u0074\u0074\u0072"); _gead != nil {
		return _gead
	}
	if _caaa := _cbfe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _caaa != nil {
		return _caaa
	}
	if _cbegd := _cbfe.PivotAreas.ValidateWithPath(path + "/\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073"); _cbegd != nil {
		return _cbegd
	}
	if _cbfe.ExtLst != nil {
		if _gdbe := _cbfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdbe != nil {
			return _gdbe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MeasureGroups and its children, prefixing error messages with path
func (_deag *CT_MeasureGroups) ValidateWithPath(path string) error {
	for _ebede, _dafcf := range _deag.MeasureGroup {
		if _cedde := _dafcf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004dea\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u005b\u0025\u0064\u005d", path, _ebede)); _cedde != nil {
			return _cedde
		}
	}
	return nil
}
func NewCT_CellAlignment() *CT_CellAlignment { _dbae := &CT_CellAlignment{}; return _dbae }

type CT_CellSmartTags struct {

	// Reference
	RAttr string

	// Cell Smart Tag
	CellSmartTag []*CT_CellSmartTag
}

func NewCT_PatternFill() *CT_PatternFill { _edbee := &CT_PatternFill{}; return _edbee }

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_dbbe *CT_Connection) ValidateWithPath(path string) error {
	if _cfde := _dbbe.CredentialsAttr.ValidateWithPath(path + "\u002f\u0043r\u0065\u0064\u0065n\u0074\u0069\u0061\u006c\u0073\u0041\u0074\u0074\u0072"); _cfde != nil {
		return _cfde
	}
	if _dbbe.DbPr != nil {
		if _cddc := _dbbe.DbPr.ValidateWithPath(path + "\u002f\u0044\u0062P\u0072"); _cddc != nil {
			return _cddc
		}
	}
	if _dbbe.OlapPr != nil {
		if _ageed := _dbbe.OlapPr.ValidateWithPath(path + "\u002fO\u006c\u0061\u0070\u0050\u0072"); _ageed != nil {
			return _ageed
		}
	}
	if _dbbe.WebPr != nil {
		if _dbgf := _dbbe.WebPr.ValidateWithPath(path + "\u002f\u0057\u0065\u0062\u0050\u0072"); _dbgf != nil {
			return _dbgf
		}
	}
	if _dbbe.TextPr != nil {
		if _eefd := _dbbe.TextPr.ValidateWithPath(path + "\u002fT\u0065\u0078\u0074\u0050\u0072"); _eefd != nil {
			return _eefd
		}
	}
	if _dbbe.Parameters != nil {
		if _gcbe := _dbbe.Parameters.ValidateWithPath(path + "/\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073"); _gcbe != nil {
			return _gcbe
		}
	}
	if _dbbe.ExtLst != nil {
		if _bacag := _dbbe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bacag != nil {
			return _bacag
		}
	}
	return nil
}
func (_begffe *CT_PageFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgcfg := range start.Attr {
		if _fgcfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_afdbf, _gegfd := _g.ParseUint(_fgcfg.Value, 10, 32)
			if _gegfd != nil {
				return _gegfd
			}
			_bcfbd := uint32(_afdbf)
			_begffe.CountAttr = &_bcfbd
			continue
		}
	}
_dafdef:
	for {
		_dacce, _aecgfa := d.Token()
		if _aecgfa != nil {
			return _aecgfa
		}
		switch _fgbgee := _dacce.(type) {
		case _b.StartElement:
			switch _fgbgee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0046\u0069\u0065\u006cd"}:
				_eaage := NewCT_PageField()
				if _eeegdd := d.DecodeElement(_eaage, &_fgbgee); _eeegdd != nil {
					return _eeegdd
				}
				_begffe.PageField = append(_begffe.PageField, _eaage)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073 \u0025\u0076", _fgbgee.Name)
				if _ccaeaa := d.Skip(); _ccaeaa != nil {
					return _ccaeaa
				}
			}
		case _b.EndElement:
			break _dafdef
		case _b.CharData:
		}
	}
	return nil
}
func (_becdd ST_PatternType) Validate() error { return _becdd.ValidateWithPath("") }
func NewCT_MRUColors() *CT_MRUColors          { _ggcda := &CT_MRUColors{}; return _ggcda }

// Validate validates the MapInfo and its children
func (_addgd *MapInfo) Validate() error {
	return _addgd.ValidateWithPath("\u004da\u0070\u0049\u006e\u0066\u006f")
}
func (_gbfged *CT_ServerFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _beefe := range start.Attr {
		if _beefe.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dgbce, _bbbed := _g.ParseUint(_beefe.Value, 10, 32)
			if _bbbed != nil {
				return _bbbed
			}
			_gfgbf := uint32(_dgbce)
			_gbfged.CountAttr = &_gfgbf
			continue
		}
	}
_ebdcbf:
	for {
		_gdefd, _dbgbca := d.Token()
		if _dbgbca != nil {
			return _dbgbca
		}
		switch _cbfgf := _gdefd.(type) {
		case _b.StartElement:
			switch _cbfgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074"}:
				_bbagdc := NewCT_ServerFormat()
				if _eaaf := d.DecodeElement(_bbagdc, &_cbfgf); _eaaf != nil {
					return _eaaf
				}
				_gbfged.ServerFormat = append(_gbfged.ServerFormat, _bbagdc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025v", _cbfgf.Name)
				if _deafe := d.Skip(); _deafe != nil {
					return _deafe
				}
			}
		case _b.EndElement:
			break _ebdcbf
		case _b.CharData:
		}
	}
	return nil
}

type CT_CellFormula struct {
	TAttr    ST_CellFormulaType
	AcaAttr  *bool
	RefAttr  *string
	Dt2DAttr *bool
	DtrAttr  *bool
	Del1Attr *bool
	Del2Attr *bool
	R1Attr   *string
	R2Attr   *string
	CaAttr   *bool
	SiAttr   *uint32
	BxAttr   *bool
	Content  string
}

func (_eddcce *CT_NumFmt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _eddcce.NumFmtIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065"}, Value: _a.Sprintf("\u0025\u0076", _eddcce.FormatCodeAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Macrosheet and its children, prefixing error messages with path
func (_dgfga *CT_Macrosheet) ValidateWithPath(path string) error {
	if _dgfga.SheetPr != nil {
		if _bbgbbg := _dgfga.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _bbgbbg != nil {
			return _bbgbbg
		}
	}
	if _dgfga.Dimension != nil {
		if _edfaf := _dgfga.Dimension.ValidateWithPath(path + "\u002f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e"); _edfaf != nil {
			return _edfaf
		}
	}
	if _dgfga.SheetViews != nil {
		if _fdeeb := _dgfga.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _fdeeb != nil {
			return _fdeeb
		}
	}
	if _dgfga.SheetFormatPr != nil {
		if _abdga := _dgfga.SheetFormatPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0046\u006f\u0072m\u0061\u0074\u0050\u0072"); _abdga != nil {
			return _abdga
		}
	}
	for _dfdec, _geegd := range _dgfga.Cols {
		if _ccccc := _geegd.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u006f\u006c\u0073\u005b\u0025\u0064\u005d", path, _dfdec)); _ccccc != nil {
			return _ccccc
		}
	}
	if _edafb := _dgfga.SheetData.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061"); _edafb != nil {
		return _edafb
	}
	if _dgfga.SheetProtection != nil {
		if _ggefb := _dgfga.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _ggefb != nil {
			return _ggefb
		}
	}
	if _dgfga.AutoFilter != nil {
		if _afdf := _dgfga.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _afdf != nil {
			return _afdf
		}
	}
	if _dgfga.SortState != nil {
		if _fcfcb := _dgfga.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _fcfcb != nil {
			return _fcfcb
		}
	}
	if _dgfga.DataConsolidate != nil {
		if _egege := _dgfga.DataConsolidate.ValidateWithPath(path + "\u002f\u0044a\u0074\u0061\u0043o\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0065"); _egege != nil {
			return _egege
		}
	}
	if _dgfga.CustomSheetViews != nil {
		if _gecba := _dgfga.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _gecba != nil {
			return _gecba
		}
	}
	if _dgfga.PhoneticPr != nil {
		if _gage := _dgfga.PhoneticPr.ValidateWithPath(path + "/\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"); _gage != nil {
			return _gage
		}
	}
	for _abaf, _bffgd := range _dgfga.ConditionalFormatting {
		if _dcfea := _bffgd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043o\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072m\u0061\u0074\u0074\u0069\u006e\u0067\u005b%\u0064\u005d", path, _abaf)); _dcfea != nil {
			return _dcfea
		}
	}
	if _dgfga.PrintOptions != nil {
		if _agac := _dgfga.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _agac != nil {
			return _agac
		}
	}
	if _dgfga.PageMargins != nil {
		if _eabfa := _dgfga.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _eabfa != nil {
			return _eabfa
		}
	}
	if _dgfga.PageSetup != nil {
		if _fadeb := _dgfga.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _fadeb != nil {
			return _fadeb
		}
	}
	if _dgfga.HeaderFooter != nil {
		if _dgffa := _dgfga.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _dgffa != nil {
			return _dgffa
		}
	}
	if _dgfga.RowBreaks != nil {
		if _adcage := _dgfga.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _adcage != nil {
			return _adcage
		}
	}
	if _dgfga.ColBreaks != nil {
		if _aeefbe := _dgfga.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _aeefbe != nil {
			return _aeefbe
		}
	}
	if _dgfga.CustomProperties != nil {
		if _cbab := _dgfga.CustomProperties.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073"); _cbab != nil {
			return _cbab
		}
	}
	if _dgfga.Drawing != nil {
		if _gdeccf := _dgfga.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _gdeccf != nil {
			return _gdeccf
		}
	}
	if _dgfga.LegacyDrawing != nil {
		if _eadaa := _dgfga.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _eadaa != nil {
			return _eadaa
		}
	}
	if _dgfga.LegacyDrawingHF != nil {
		if _cffda := _dgfga.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _cffda != nil {
			return _cffda
		}
	}
	if _dgfga.DrawingHF != nil {
		if _ffaaa := _dgfga.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _ffaaa != nil {
			return _ffaaa
		}
	}
	if _dgfga.Picture != nil {
		if _fbbbfd := _dgfga.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _fbbbfd != nil {
			return _fbbbfd
		}
	}
	if _dgfga.OleObjects != nil {
		if _bdffe := _dgfga.OleObjects.ValidateWithPath(path + "/\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073"); _bdffe != nil {
			return _bdffe
		}
	}
	if _dgfga.ExtLst != nil {
		if _dabdc := _dgfga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dabdc != nil {
			return _dabdc
		}
	}
	return nil
}
func (_dfff *CT_Col) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cacfcf := range start.Attr {
		if _cacfcf.Name.Local == "\u006d\u0069\u006e" {
			_gdeb, _cfcf := _g.ParseUint(_cacfcf.Value, 10, 32)
			if _cfcf != nil {
				return _cfcf
			}
			_dfff.MinAttr = uint32(_gdeb)
			continue
		}
		if _cacfcf.Name.Local == "\u006d\u0061\u0078" {
			_fcgg, _cefge := _g.ParseUint(_cacfcf.Value, 10, 32)
			if _cefge != nil {
				return _cefge
			}
			_dfff.MaxAttr = uint32(_fcgg)
			continue
		}
		if _cacfcf.Name.Local == "\u0077\u0069\u0064t\u0068" {
			_dadga, _cffd := _g.ParseFloat(_cacfcf.Value, 64)
			if _cffd != nil {
				return _cffd
			}
			_dfff.WidthAttr = &_dadga
			continue
		}
		if _cacfcf.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_ecdge, _afcb := _g.ParseUint(_cacfcf.Value, 10, 32)
			if _afcb != nil {
				return _afcb
			}
			_geegf := uint32(_ecdge)
			_dfff.StyleAttr = &_geegf
			continue
		}
		if _cacfcf.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_bedc, _efaf := _g.ParseBool(_cacfcf.Value)
			if _efaf != nil {
				return _efaf
			}
			_dfff.HiddenAttr = &_bedc
			continue
		}
		if _cacfcf.Name.Local == "\u0062e\u0073\u0074\u0046\u0069\u0074" {
			_bcgg, _egca := _g.ParseBool(_cacfcf.Value)
			if _egca != nil {
				return _egca
			}
			_dfff.BestFitAttr = &_bcgg
			continue
		}
		if _cacfcf.Name.Local == "c\u0075\u0073\u0074\u006f\u006d\u0057\u0069\u0064\u0074\u0068" {
			_bgfe, _facc := _g.ParseBool(_cacfcf.Value)
			if _facc != nil {
				return _facc
			}
			_dfff.CustomWidthAttr = &_bgfe
			continue
		}
		if _cacfcf.Name.Local == "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063" {
			_bfabf, _ecdgg := _g.ParseBool(_cacfcf.Value)
			if _ecdgg != nil {
				return _ecdgg
			}
			_dfff.PhoneticAttr = &_bfabf
			continue
		}
		if _cacfcf.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_acfc, _bcba := _g.ParseUint(_cacfcf.Value, 10, 8)
			if _bcba != nil {
				return _bcba
			}
			_gbecf := uint8(_acfc)
			_dfff.OutlineLevelAttr = &_gbecf
			continue
		}
		if _cacfcf.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_aacb, _cege := _g.ParseBool(_cacfcf.Value)
			if _cege != nil {
				return _cege
			}
			_dfff.CollapsedAttr = &_aacb
			continue
		}
	}
	for {
		_edea, _ddgb := d.Token()
		if _ddgb != nil {
			return _a.Errorf("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0043o\u006c\u003a\u0020\u0025\u0073", _ddgb)
		}
		if _acfd, _gbcc := _edea.(_b.EndElement); _gbcc && _acfd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_ColFields() *CT_ColFields { _gfec := &CT_ColFields{}; return _gfec }

type CT_DdeValue struct {

	// DDE Value Type
	TAttr ST_DdeValueType

	// DDE Link Value
	Val string
}

// ValidateWithPath validates the CT_SortCondition and its children, prefixing error messages with path
func (_fdcfd *CT_SortCondition) ValidateWithPath(path string) error {
	if _caede := _fdcfd.SortByAttr.ValidateWithPath(path + "/\u0053\u006f\u0072\u0074\u0042\u0079\u0041\u0074\u0074\u0072"); _caede != nil {
		return _caede
	}
	if _dcegef := _fdcfd.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _dcegef != nil {
		return _dcegef
	}
	return nil
}

// ValidateWithPath validates the CT_ReviewedRevisions and its children, prefixing error messages with path
func (_cebaf *CT_ReviewedRevisions) ValidateWithPath(path string) error {
	for _dfdfd, _adbfbf := range _cebaf.Reviewed {
		if _bcdac := _adbfbf.ValidateWithPath(_a.Sprintf("\u0025s\u002fR\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u005b\u0025\u0064\u005d", path, _dfdfd)); _bcdac != nil {
			return _bcdac
		}
	}
	return nil
}
func _bacga(_cgfge bool) uint8 {
	if _cgfge {
		return 1
	}
	return 0
}
func (_aegc *CT_Tables) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aegc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aegc.CountAttr)})
	}
	e.EncodeToken(start)
	if _aegc.M != nil {
		_cbbgd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d"}}
		for _, _addab := range _aegc.M {
			e.EncodeElement(_addab, _cbbgd)
		}
	}
	if _aegc.S != nil {
		_eebcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073"}}
		for _, _degebe := range _aegc.S {
			e.EncodeElement(_degebe, _eebcf)
		}
	}
	if _aegc.X != nil {
		_dacbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _cfgedb := range _aegc.X {
			e.EncodeElement(_cfgedb, _dacbe)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_deedf *CT_CellSmartTag) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", _deedf.TypeAttr)})
	if _deedf.DeletedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064e\u006c\u0065\u0074\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deedf.DeletedAttr))})
	}
	if _deedf.XmlBasedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u0042\u0061\u0073\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_deedf.XmlBasedAttr))})
	}
	e.EncodeToken(start)
	if _deedf.CellSmartTagPr != nil {
		_bgaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072"}}
		for _, _aefa := range _deedf.CellSmartTagPr {
			e.EncodeElement(_aefa, _bgaf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Reviewed() *CT_Reviewed { _efded := &CT_Reviewed{}; return _efded }

type ST_GradientType byte

// ValidateWithPath validates the CT_FontSize and its children, prefixing error messages with path
func (_bbgec *CT_FontSize) ValidateWithPath(path string) error { return nil }
func (_bdf *CT_BookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eb := range start.Attr {
		if _eb.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_agee, _gfg := _g.ParseUint(_eb.Value, 10, 32)
			if _gfg != nil {
				return _gfg
			}
			_fb := uint32(_agee)
			_bdf.WindowWidthAttr = &_fb
			continue
		}
		if _eb.Name.Local == "\u0076\u0069\u0073\u0069\u0062\u0069\u006c\u0069\u0074\u0079" {
			_bdf.VisibilityAttr.UnmarshalXMLAttr(_eb)
			continue
		}
		if _eb.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_ecc, _df := _g.ParseBool(_eb.Value)
			if _df != nil {
				return _df
			}
			_bdf.ShowHorizontalScrollAttr = &_ecc
			continue
		}
		if _eb.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_fgd, _gfa := _g.ParseBool(_eb.Value)
			if _gfa != nil {
				return _gfa
			}
			_bdf.ShowVerticalScrollAttr = &_fgd
			continue
		}
		if _eb.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_fad, _gdf := _g.ParseBool(_eb.Value)
			if _gdf != nil {
				return _gdf
			}
			_bdf.ShowSheetTabsAttr = &_fad
			continue
		}
		if _eb.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_bbcd, _aba := _g.ParseInt(_eb.Value, 10, 32)
			if _aba != nil {
				return _aba
			}
			_ede := int32(_bbcd)
			_bdf.XWindowAttr = &_ede
			continue
		}
		if _eb.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_aae, _agc := _g.ParseInt(_eb.Value, 10, 32)
			if _agc != nil {
				return _agc
			}
			_fde := int32(_aae)
			_bdf.YWindowAttr = &_fde
			continue
		}
		if _eb.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_acf, _bba := _g.ParseBool(_eb.Value)
			if _bba != nil {
				return _bba
			}
			_bdf.MinimizedAttr = &_acf
			continue
		}
		if _eb.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_eabb, _cfc := _g.ParseUint(_eb.Value, 10, 32)
			if _cfc != nil {
				return _cfc
			}
			_gff := uint32(_eabb)
			_bdf.WindowHeightAttr = &_gff
			continue
		}
		if _eb.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_fca, _bgb := _g.ParseUint(_eb.Value, 10, 32)
			if _bgb != nil {
				return _bgb
			}
			_cegb := uint32(_fca)
			_bdf.TabRatioAttr = &_cegb
			continue
		}
		if _eb.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0053\u0068\u0065\u0065\u0074" {
			_bagb, _ecd := _g.ParseUint(_eb.Value, 10, 32)
			if _ecd != nil {
				return _ecd
			}
			_cbg := uint32(_bagb)
			_bdf.FirstSheetAttr = &_cbg
			continue
		}
		if _eb.Name.Local == "\u0061c\u0074\u0069\u0076\u0065\u0054\u0061b" {
			_egd, _ced := _g.ParseUint(_eb.Value, 10, 32)
			if _ced != nil {
				return _ced
			}
			_acd := uint32(_egd)
			_bdf.ActiveTabAttr = &_acd
			continue
		}
		if _eb.Name.Local == "\u0061\u0075\u0074\u006fFi\u006c\u0074\u0065\u0072\u0044\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0069n\u0067" {
			_edac, _cec := _g.ParseBool(_eb.Value)
			if _cec != nil {
				return _cec
			}
			_bdf.AutoFilterDateGroupingAttr = &_edac
			continue
		}
	}
_bbcf:
	for {
		_eec, _ade := d.Token()
		if _ade != nil {
			return _ade
		}
		switch _caf := _eec.(type) {
		case _b.StartElement:
			switch _caf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdf.ExtLst = NewCT_ExtensionList()
				if _cef := d.DecodeElement(_bdf.ExtLst, &_caf); _cef != nil {
					return _cef
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _caf.Name)
				if _cc := d.Skip(); _cc != nil {
					return _cc
				}
			}
		case _b.EndElement:
			break _bbcf
		case _b.CharData:
		}
	}
	return nil
}
func NewComments() *Comments {
	_gdccdc := &Comments{}
	_gdccdc.CT_Comments = *NewCT_Comments()
	return _gdccdc
}

// Validate validates the CT_HeaderFooter and its children
func (_ffffd *CT_HeaderFooter) Validate() error {
	return _ffffd.ValidateWithPath("\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072")
}

// ValidateWithPath validates the CT_VolType and its children, prefixing error messages with path
func (_gffed *CT_VolType) ValidateWithPath(path string) error {
	if _gffed.TypeAttr == ST_VolDepTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fbfcb := _gffed.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _fbfcb != nil {
		return _fbfcb
	}
	for _dfgbb, _cgcbc := range _gffed.Main {
		if _cbbcc := _cgcbc.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u004d\u0061\u0069\u006e\u005b\u0025\u0064\u005d", path, _dfgbb)); _cbbcc != nil {
			return _cbbcc
		}
	}
	return nil
}
func NewCT_RevisionCustomView() *CT_RevisionCustomView {
	_caaae := &CT_RevisionCustomView{}
	_caaae.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_caaae.ActionAttr = ST_RevisionAction(1)
	return _caaae
}
func (_ebcde *ST_TimePeriod) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ebcde = 0
	case "\u0074\u006f\u0064a\u0079":
		*_ebcde = 1
	case "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y":
		*_ebcde = 2
	case "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077":
		*_ebcde = 3
	case "\u006ca\u0073\u0074\u0037\u0044\u0061\u0079s":
		*_ebcde = 4
	case "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h":
		*_ebcde = 5
	case "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h":
		*_ebcde = 6
	case "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h":
		*_ebcde = 7
	case "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b":
		*_ebcde = 8
	case "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b":
		*_ebcde = 9
	case "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b":
		*_ebcde = 10
	}
	return nil
}
func (_agdefa *ST_GrowShrinkType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_agdefa = 0
	case "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065":
		*_agdefa = 1
	case "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072":
		*_agdefa = 2
	case "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072":
		*_agdefa = 3
	}
	return nil
}
func NewCT_SheetPr() *CT_SheetPr { _badbddg := &CT_SheetPr{}; return _badbddg }

// Validate validates the CT_ServerFormats and its children
func (_babcd *CT_ServerFormats) Validate() error {
	return _babcd.ValidateWithPath("\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}
func (_acbb *CT_CellAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acbb.HorizontalAttr != ST_HorizontalAlignmentUnset {
		_fagf, _ebdb := _acbb.HorizontalAttr.MarshalXMLAttr(_b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c"})
		if _ebdb != nil {
			return _ebdb
		}
		start.Attr = append(start.Attr, _fagf)
	}
	if _acbb.VerticalAttr != ST_VerticalAlignmentUnset {
		_aefbc, _ggaf := _acbb.VerticalAttr.MarshalXMLAttr(_b.Name{Local: "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"})
		if _ggaf != nil {
			return _ggaf
		}
		start.Attr = append(start.Attr, _aefbc)
	}
	if _acbb.TextRotationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0065\u0078t\u0052\u006f\u0074\u0061\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_acbb.TextRotationAttr)})
	}
	if _acbb.WrapTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0072\u0061\u0070\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acbb.WrapTextAttr))})
	}
	if _acbb.IndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_acbb.IndentAttr)})
	}
	if _acbb.RelativeIndentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0049n\u0064\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_acbb.RelativeIndentAttr)})
	}
	if _acbb.JustifyLastLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006au\u0073t\u0069\u0066\u0079\u004c\u0061\u0073\u0074\u004c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acbb.JustifyLastLineAttr))})
	}
	if _acbb.ShrinkToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u0072\u0069\u006e\u006b\u0054\u006f\u0046\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acbb.ShrinkToFitAttr))})
	}
	if _acbb.ReadingOrderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0061d\u0069\u006e\u0067\u004f\u0072\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_acbb.ReadingOrderAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_VolMain and its children
func (_cdbda *CT_VolMain) Validate() error {
	return _cdbda.ValidateWithPath("\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e")
}

// ValidateWithPath validates the CT_CalcCell and its children, prefixing error messages with path
func (_dgdc *CT_CalcCell) ValidateWithPath(path string) error { return nil }
func (_abdaa *CT_RangeSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _abdaa.I1Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0031"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.I1Attr)})
	}
	if _abdaa.I2Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0032"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.I2Attr)})
	}
	if _abdaa.I3Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0033"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.I3Attr)})
	}
	if _abdaa.I4Attr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0034"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.I4Attr)})
	}
	if _abdaa.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.RefAttr)})
	}
	if _abdaa.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.NameAttr)})
	}
	if _abdaa.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.SheetAttr)})
	}
	if _abdaa.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_abdaa.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bfecfb *CT_PrintOptions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abbea := range start.Attr {
		if _abbea.Name.Local == "\u0068o\u0072i\u007a\u006f\u006e\u0074\u0061l\u0043\u0065n\u0074\u0065\u0072\u0065\u0064" {
			_eeegeb, _addcb := _g.ParseBool(_abbea.Value)
			if _addcb != nil {
				return _addcb
			}
			_bfecfb.HorizontalCenteredAttr = &_eeegeb
			continue
		}
		if _abbea.Name.Local == "\u0076\u0065r\u0074\u0069\u0063a\u006c\u0043\u0065\u006e\u0074\u0065\u0072\u0065\u0064" {
			_agabcc, _cebd := _g.ParseBool(_abbea.Value)
			if _cebd != nil {
				return _cebd
			}
			_bfecfb.VerticalCenteredAttr = &_agabcc
			continue
		}
		if _abbea.Name.Local == "\u0068\u0065\u0061\u0064\u0069\u006e\u0067\u0073" {
			_cacfcg, _fdaec := _g.ParseBool(_abbea.Value)
			if _fdaec != nil {
				return _fdaec
			}
			_bfecfb.HeadingsAttr = &_cacfcg
			continue
		}
		if _abbea.Name.Local == "\u0067r\u0069\u0064\u004c\u0069\u006e\u0065s" {
			_fagaba, _efgcd := _g.ParseBool(_abbea.Value)
			if _efgcd != nil {
				return _efgcd
			}
			_bfecfb.GridLinesAttr = &_fagaba
			continue
		}
		if _abbea.Name.Local == "\u0067\u0072\u0069d\u004c\u0069\u006e\u0065\u0073\u0053\u0065\u0074" {
			_ebafc, _acaa := _g.ParseBool(_abbea.Value)
			if _acaa != nil {
				return _acaa
			}
			_bfecfb.GridLinesSetAttr = &_ebafc
			continue
		}
	}
	for {
		_ddbec, _cacedg := d.Token()
		if _cacedg != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0050\u0072\u0069\u006e\u0074\u004fp\u0074\u0069\u006fn\u0073:\u0020\u0025\u0073", _cacedg)
		}
		if _ccfdd, _abcb := _ddbec.(_b.EndElement); _abcb && _ccfdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_abdeb *CT_TableMissing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgfed ST_Scope) String() string {
	switch _cgfed {
	case 0:
		return ""
	case 1:
		return "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case 2:
		return "\u0064\u0061\u0074\u0061"
	case 3:
		return "\u0066\u0069\u0065l\u0064"
	}
	return ""
}
func (_ggdfd *CT_RevisionConflict) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dgdcdf := range start.Attr {
		if _dgdcdf.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_gafba, _bgedb := _g.ParseUint(_dgdcdf.Value, 10, 32)
			if _bgedb != nil {
				return _bgedb
			}
			_agcbb := uint32(_gafba)
			_ggdfd.SheetIdAttr = &_agcbb
			continue
		}
		if _dgdcdf.Name.Local == "\u0072\u0049\u0064" {
			_ddcbee, _babfg := _g.ParseUint(_dgdcdf.Value, 10, 32)
			if _babfg != nil {
				return _babfg
			}
			_ageca := uint32(_ddcbee)
			_ggdfd.RIdAttr = &_ageca
			continue
		}
		if _dgdcdf.Name.Local == "\u0075\u0061" {
			_fbfcf, _cagga := _g.ParseBool(_dgdcdf.Value)
			if _cagga != nil {
				return _cagga
			}
			_ggdfd.UaAttr = &_fbfcf
			continue
		}
		if _dgdcdf.Name.Local == "\u0072\u0061" {
			_cceda, _bgacc := _g.ParseBool(_dgdcdf.Value)
			if _bgacc != nil {
				return _bgacc
			}
			_ggdfd.RaAttr = &_cceda
			continue
		}
	}
	for {
		_gagc, _dbbge := d.Token()
		if _dbbge != nil {
			return _a.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0076\u0069\u0073i\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074\u003a\u0020\u0025\u0073", _dbbge)
		}
		if _egfed, _dadgc := _gagc.(_b.EndElement); _dadgc && _egfed.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdcca ST_CellComments) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bdcca.String(), start)
}

type CT_Tuple struct {

	// Field Index
	FldAttr *uint32

	// Hierarchy Index
	HierAttr *uint32

	// Item Index
	ItemAttr uint32
}

func NewCT_ColHierarchiesUsage() *CT_ColHierarchiesUsage {
	_gdgf := &CT_ColHierarchiesUsage{}
	return _gdgf
}

// ValidateWithPath validates the CT_VolTypes and its children, prefixing error messages with path
func (_cdcabd *CT_VolTypes) ValidateWithPath(path string) error {
	for _dbebc, _fdcca := range _cdcabd.VolType {
		if _bbegb := _fdcca.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0056\u006f\u006c\u0054\u0079\u0070e\u005b\u0025\u0064\u005d", path, _dbebc)); _bbegb != nil {
			return _bbegb
		}
	}
	if _cdcabd.ExtLst != nil {
		if _defcb := _cdcabd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _defcb != nil {
			return _defcb
		}
	}
	return nil
}
func (_cdabff *CT_XmlCellPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdabff.XmlPr = NewCT_XmlPr()
	for _, _bbggb := range start.Attr {
		if _bbggb.Name.Local == "\u0069\u0064" {
			_agbaae, _dbbab := _g.ParseUint(_bbggb.Value, 10, 32)
			if _dbbab != nil {
				return _dbbab
			}
			_cdabff.IdAttr = uint32(_agbaae)
			continue
		}
		if _bbggb.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_cadbd, _fbcee := _bbggb.Value, error(nil)
			if _fbcee != nil {
				return _fbcee
			}
			_cdabff.UniqueNameAttr = &_cadbd
			continue
		}
	}
_cbcbde:
	for {
		_bafbgd, _fgedec := d.Token()
		if _fgedec != nil {
			return _fgedec
		}
		switch _bfeea := _bafbgd.(type) {
		case _b.StartElement:
			switch _bfeea.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u006d\u006cP\u0072"}:
				if _deebd := d.DecodeElement(_cdabff.XmlPr, &_bfeea); _deebd != nil {
					return _deebd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdabff.ExtLst = NewCT_ExtensionList()
				if _ffbga := d.DecodeElement(_cdabff.ExtLst, &_bfeea); _ffbga != nil {
					return _ffbga
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_X\u006d\u006cC\u0065\u006c\u006c\u0050\u0072\u0020\u0025\u0076", _bfeea.Name)
				if _cfceeg := d.Skip(); _cfceeg != nil {
					return _cfceeg
				}
			}
		case _b.EndElement:
			break _cbcbde
		case _b.CharData:
		}
	}
	return nil
}
func (_ecda *CT_BookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_bdd:
	for {
		_fgc, _ebf := d.Token()
		if _ebf != nil {
			return _ebf
		}
		switch _cff := _fgc.(type) {
		case _b.StartElement:
			switch _cff.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u006f\u0072k\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}:
				_dbga := NewCT_BookView()
				if _cbd := d.DecodeElement(_dbga, &_cff); _cbd != nil {
					return _cbd
				}
				_ecda.WorkbookView = append(_ecda.WorkbookView, _dbga)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_B\u006f\u006fk\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _cff.Name)
				if _bde := d.Skip(); _bde != nil {
					return _bde
				}
			}
		case _b.EndElement:
			break _bdd
		case _b.CharData:
		}
	}
	return nil
}
func (_bcdbb *CT_PivotAreaReferences) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efbgcf := range start.Attr {
		if _efbgcf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_acbgb, _dcdc := _g.ParseUint(_efbgcf.Value, 10, 32)
			if _dcdc != nil {
				return _dcdc
			}
			_geafb := uint32(_acbgb)
			_bcdbb.CountAttr = &_geafb
			continue
		}
	}
_efdgg:
	for {
		_cabga, _gcbge := d.Token()
		if _gcbge != nil {
			return _gcbge
		}
		switch _fedec := _cabga.(type) {
		case _b.StartElement:
			switch _fedec.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072e\u0066\u0065\u0072\u0065\u006e\u0063e"}:
				_gbeeg := NewCT_PivotAreaReference()
				if _gaeaf := d.DecodeElement(_gbeeg, &_fedec); _gaeaf != nil {
					return _gaeaf
				}
				_bcdbb.Reference = append(_bcdbb.Reference, _gbeeg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0069\u0076\u006ft\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073\u0020\u0025\u0076", _fedec.Name)
				if _bcgdb := d.Skip(); _bcgdb != nil {
					return _bcgdb
				}
			}
		case _b.EndElement:
			break _efdgg
		case _b.CharData:
		}
	}
	return nil
}
func (_cacfc *CT_CellXfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gddgg := range start.Attr {
		if _gddgg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cgcb, _cdb := _g.ParseUint(_gddgg.Value, 10, 32)
			if _cdb != nil {
				return _cdb
			}
			_ggfg := uint32(_cgcb)
			_cacfc.CountAttr = &_ggfg
			continue
		}
	}
_fgda:
	for {
		_eccg, _fdcg := d.Token()
		if _fdcg != nil {
			return _fdcg
		}
		switch _efcf := _eccg.(type) {
		case _b.StartElement:
			switch _efcf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066"}:
				_cdce := NewCT_Xf()
				if _ceef := d.DecodeElement(_cdce, &_efcf); _ceef != nil {
					return _ceef
				}
				_cacfc.Xf = append(_cacfc.Xf, _cdce)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u0065\u006c\u006c\u0058\u0066\u0073\u0020\u0025\u0076", _efcf.Name)
				if _cbbab := d.Skip(); _cbbab != nil {
					return _cbbab
				}
			}
		case _b.EndElement:
			break _fgda
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_String and its children
func (_dagefd *CT_String) Validate() error {
	return _dagefd.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg")
}

type ST_Visibility byte

// ValidateWithPath validates the CT_PageSetup and its children, prefixing error messages with path
func (_eegbc *CT_PageSetup) ValidateWithPath(path string) error {
	if _eegbc.PaperHeightAttr != nil {
		if !_ff.ST_PositiveUniversalMeasurePatternRe.MatchString(*_eegbc.PaperHeightAttr) {
			return _a.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_PositiveUniversalMeasurePatternRe, *_eegbc.PaperHeightAttr)
		}
	}
	if _eegbc.PaperHeightAttr != nil {
		if !_ff.ST_UniversalMeasurePatternRe.MatchString(*_eegbc.PaperHeightAttr) {
			return _a.Errorf("\u0025\u0073/\u006d\u002e\u0050\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_UniversalMeasurePatternRe, *_eegbc.PaperHeightAttr)
		}
	}
	if _eegbc.PaperWidthAttr != nil {
		if !_ff.ST_PositiveUniversalMeasurePatternRe.MatchString(*_eegbc.PaperWidthAttr) {
			return _a.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_PositiveUniversalMeasurePatternRe, *_eegbc.PaperWidthAttr)
		}
	}
	if _eegbc.PaperWidthAttr != nil {
		if !_ff.ST_UniversalMeasurePatternRe.MatchString(*_eegbc.PaperWidthAttr) {
			return _a.Errorf("\u0025s\u002f\u006d.\u0050\u0061\u0070e\u0072\u0057\u0069\u0064\u0074\u0068\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _ff.ST_UniversalMeasurePatternRe, *_eegbc.PaperWidthAttr)
		}
	}
	if _fegebf := _eegbc.PageOrderAttr.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u004f\u0072\u0064\u0065r\u0041\u0074\u0074\u0072"); _fegebf != nil {
		return _fegebf
	}
	if _affde := _eegbc.OrientationAttr.ValidateWithPath(path + "\u002f\u004fr\u0069\u0065\u006et\u0061\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _affde != nil {
		return _affde
	}
	if _eddgdf := _eegbc.CellCommentsAttr.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u0043\u006f\u006d\u006d\u0065\u006e\u0074s\u0041\u0074\u0074\u0072"); _eddgdf != nil {
		return _eddgdf
	}
	if _bgdcf := _eegbc.ErrorsAttr.ValidateWithPath(path + "/\u0045\u0072\u0072\u006f\u0072\u0073\u0041\u0074\u0074\u0072"); _bgdcf != nil {
		return _bgdcf
	}
	return nil
}

// ValidateWithPath validates the CT_CacheSource and its children, prefixing error messages with path
func (_bgc *CT_CacheSource) ValidateWithPath(path string) error {
	if _bgc.TypeAttr == ST_SourceTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbf := _bgc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _cbf != nil {
		return _cbf
	}
	if _bgc.WorksheetSource != nil {
		if _geac := _bgc.WorksheetSource.ValidateWithPath(path + "\u002f\u0057o\u0072\u006b\u0073h\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"); _geac != nil {
			return _geac
		}
	}
	if _bgc.Consolidation != nil {
		if _daf := _bgc.Consolidation.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0073\u006f\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"); _daf != nil {
			return _daf
		}
	}
	if _bgc.ExtLst != nil {
		if _daee := _bgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _daee != nil {
			return _daee
		}
	}
	return nil
}

// Validate validates the CT_ColorFilter and its children
func (_edaf *CT_ColorFilter) Validate() error {
	return _edaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072")
}
func (_cdagf *ST_BorderStyle) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cdagf = 0
	case "\u006e\u006f\u006e\u0065":
		*_cdagf = 1
	case "\u0074\u0068\u0069\u006e":
		*_cdagf = 2
	case "\u006d\u0065\u0064\u0069\u0075\u006d":
		*_cdagf = 3
	case "\u0064\u0061\u0073\u0068\u0065\u0064":
		*_cdagf = 4
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_cdagf = 5
	case "\u0074\u0068\u0069c\u006b":
		*_cdagf = 6
	case "\u0064\u006f\u0075\u0062\u006c\u0065":
		*_cdagf = 7
	case "\u0068\u0061\u0069\u0072":
		*_cdagf = 8
	case "\u006d\u0065\u0064i\u0075\u006d\u0044\u0061\u0073\u0068\u0065\u0064":
		*_cdagf = 9
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_cdagf = 10
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_cdagf = 11
	case "\u0064\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_cdagf = 12
	case "\u006d\u0065d\u0069\u0075\u006dD\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_cdagf = 13
	case "\u0073\u006c\u0061n\u0074\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_cdagf = 14
	}
	return nil
}

// Validate validates the CT_RangeSet and its children
func (_fdaae *CT_RangeSet) Validate() error {
	return _fdaae.ValidateWithPath("C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074")
}

// Validate validates the CT_FileVersion and its children
func (_dbec *CT_FileVersion) Validate() error {
	return _dbec.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e")
}
func NewCT_Table() *CT_Table {
	_gfgff := &CT_Table{}
	_gfgff.TableColumns = NewCT_TableColumns()
	return _gfgff
}

// Validate validates the CT_CommentPr and its children
func (_afafa *CT_CommentPr) Validate() error {
	return _afafa.ValidateWithPath("\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072")
}
func NewPivotCacheRecords() *PivotCacheRecords {
	_bbcbge := &PivotCacheRecords{}
	_bbcbge.CT_PivotCacheRecords = *NewCT_PivotCacheRecords()
	return _bbcbge
}

// ValidateWithPath validates the CT_ExternalReference and its children, prefixing error messages with path
func (_bfef *CT_ExternalReference) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Groups and its children
func (_eddaf *CT_Groups) Validate() error {
	return _eddaf.ValidateWithPath("\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s")
}
func NewCT_SheetProtection() *CT_SheetProtection { _ffcga := &CT_SheetProtection{}; return _ffcga }
func (_bcafgd ST_FilterOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_ffecea := _b.Attr{}
	_ffecea.Name = name
	switch _bcafgd {
	case ST_FilterOperatorUnset:
		_ffecea.Value = ""
	case ST_FilterOperatorEqual:
		_ffecea.Value = "\u0065\u0071\u0075a\u006c"
	case ST_FilterOperatorLessThan:
		_ffecea.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_FilterOperatorLessThanOrEqual:
		_ffecea.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorNotEqual:
		_ffecea.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThanOrEqual:
		_ffecea.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	case ST_FilterOperatorGreaterThan:
		_ffecea.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	}
	return _ffecea, nil
}

type Chartsheet struct{ CT_Chartsheet }

func (_fadfd ST_TableStyleType) String() string {
	switch _fadfd {
	case 0:
		return ""
	case 1:
		return "\u0077\u0068\u006f\u006c\u0065\u0054\u0061\u0062\u006c\u0065"
	case 2:
		return "\u0068e\u0061\u0064\u0065\u0072\u0052\u006fw"
	case 3:
		return "\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 4:
		return "f\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 5:
		return "\u006c\u0061\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"
	case 6:
		return "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077\u0053t\u0072\u0069\u0070\u0065"
	case 7:
		return "\u0073e\u0063o\u006e\u0064\u0052\u006f\u0077\u0053\u0074\u0072\u0069\u0070\u0065"
	case 8:
		return "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e\u0053t\u0072\u0069\u0070\u0065"
	case 9:
		return "\u0073e\u0063o\u006e\u0064\u0043\u006f\u006cu\u006d\u006eS\u0074\u0072\u0069\u0070\u0065"
	case 10:
		return "\u0066i\u0072s\u0074\u0048\u0065\u0061\u0064\u0065\u0072\u0043\u0065\u006c\u006c"
	case 11:
		return "\u006c\u0061\u0073\u0074\u0048\u0065\u0061\u0064\u0065r\u0043\u0065\u006c\u006c"
	case 12:
		return "\u0066\u0069\u0072\u0073\u0074\u0054\u006f\u0074\u0061l\u0043\u0065\u006c\u006c"
	case 13:
		return "\u006c\u0061\u0073\u0074\u0054\u006f\u0074\u0061\u006c\u0043\u0065\u006c\u006c"
	case 14:
		return "\u0066\u0069\u0072\u0073tS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 15:
		return "s\u0065c\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006ft\u0061\u006c\u0043\u006flu\u006d\u006e"
	case 16:
		return "\u0074\u0068\u0069\u0072dS\u0075\u0062\u0074\u006f\u0074\u0061\u006c\u0043\u006f\u006c\u0075\u006d\u006e"
	case 17:
		return "\u0066\u0069r\u0073\u0074\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 18:
		return "\u0073\u0065\u0063\u006f\u006e\u0064\u0053\u0075\u0062\u0074\u006f\u0074a\u006c\u0052\u006f\u0077"
	case 19:
		return "\u0074\u0068i\u0072\u0064\u0053u\u0062\u0074\u006f\u0074\u0061\u006c\u0052\u006f\u0077"
	case 20:
		return "\u0062\u006c\u0061\u006e\u006b\u0052\u006f\u0077"
	case 21:
		return "f\u0069\u0072\u0073\u0074Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 22:
		return "\u0073\u0065\u0063\u006fnd\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069n\u0067"
	case 23:
		return "t\u0068\u0069\u0072\u0064Co\u006cu\u006d\u006e\u0053\u0075\u0062h\u0065\u0061\u0064\u0069\u006e\u0067"
	case 24:
		return "\u0066i\u0072s\u0074\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 25:
		return "\u0073\u0065\u0063\u006fnd\u0052\u006f\u0077\u0053\u0075\u0062\u0068\u0065\u0061\u0064\u0069\u006e\u0067"
	case 26:
		return "\u0074h\u0069r\u0064\u0052\u006f\u0077\u0053u\u0062\u0068e\u0061\u0064\u0069\u006e\u0067"
	case 27:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u004c\u0061\u0062\u0065\u006c\u0073"
	case 28:
		return "\u0070a\u0067e\u0046\u0069\u0065\u006c\u0064\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return ""
}

// Validate validates the CT_MdxSet and its children
func (_cedee *CT_MdxSet) Validate() error {
	return _cedee.ValidateWithPath("\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t")
}
func (_efdaag *Headers) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072\u0073"
	return _efdaag.CT_RevisionHeaders.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_DynamicFilter and its children, prefixing error messages with path
func (_gacag *CT_DynamicFilter) ValidateWithPath(path string) error {
	if _gacag.TypeAttr == ST_DynamicFilterTypeUnset {
		return _a.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eabef := _gacag.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _eabef != nil {
		return _eabef
	}
	return nil
}
func (_acadg *CT_Formats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffebd := range start.Attr {
		if _ffebd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbac, _dcga := _g.ParseUint(_ffebd.Value, 10, 32)
			if _dcga != nil {
				return _dcga
			}
			_fcddg := uint32(_bbac)
			_acadg.CountAttr = &_fcddg
			continue
		}
	}
_abdb:
	for {
		_dgca, _feffe := d.Token()
		if _feffe != nil {
			return _feffe
		}
		switch _feagf := _dgca.(type) {
		case _b.StartElement:
			switch _feagf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}:
				_bggec := NewCT_Format()
				if _eacbab := d.DecodeElement(_bggec, &_feagf); _eacbab != nil {
					return _eacbab
				}
				_acadg.Format = append(_acadg.Format, _bggec)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _feagf.Name)
				if _gdeaf := d.Skip(); _gdeaf != nil {
					return _gdeaf
				}
			}
		case _b.EndElement:
			break _abdb
		case _b.CharData:
		}
	}
	return nil
}
func (_effgd ST_VolDepType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_effgd.String(), start)
}

const (
	ST_DataValidationImeModeUnset        ST_DataValidationImeMode = 0
	ST_DataValidationImeModeNoControl    ST_DataValidationImeMode = 1
	ST_DataValidationImeModeOff          ST_DataValidationImeMode = 2
	ST_DataValidationImeModeOn           ST_DataValidationImeMode = 3
	ST_DataValidationImeModeDisabled     ST_DataValidationImeMode = 4
	ST_DataValidationImeModeHiragana     ST_DataValidationImeMode = 5
	ST_DataValidationImeModeFullKatakana ST_DataValidationImeMode = 6
	ST_DataValidationImeModeHalfKatakana ST_DataValidationImeMode = 7
	ST_DataValidationImeModeFullAlpha    ST_DataValidationImeMode = 8
	ST_DataValidationImeModeHalfAlpha    ST_DataValidationImeMode = 9
	ST_DataValidationImeModeFullHangul   ST_DataValidationImeMode = 10
	ST_DataValidationImeModeHalfHangul   ST_DataValidationImeMode = 11
)

func (_egeg *CT_Extension) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _abdab := range start.Attr {
		if _abdab.Name.Local == "\u0075\u0072\u0069" {
			_ebfac, _bbddb := _abdab.Value, error(nil)
			if _bbddb != nil {
				return _bbddb
			}
			_egeg.UriAttr = &_ebfac
			continue
		}
	}
_deac:
	for {
		_ffefg, _abgbd := d.Token()
		if _abgbd != nil {
			return _abgbd
		}
		switch _gdce := _ffefg.(type) {
		case _b.StartElement:
			switch _gdce.Name {
			default:
				if _dcff, _acgec := _f.CreateElement(_gdce); _acgec != nil {
					return _acgec
				} else {
					if _fffg := d.DecodeElement(_dcff, &_gdce); _fffg != nil {
						return _fffg
					}
					_egeg.Any = _dcff
				}
			}
		case _b.EndElement:
			break _deac
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_FunctionGroups and its children, prefixing error messages with path
func (_cfedaf *CT_FunctionGroups) ValidateWithPath(path string) error {
	for _cddga, _fecba := range _cfedaf.FunctionGroup {
		if _fgac := _fecba.ValidateWithPath(_a.Sprintf("%\u0073/\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006eG\u0072\u006f\u0075\u0070[%\u0064\u005d", path, _cddga)); _fgac != nil {
			return _fgac
		}
	}
	return nil
}
func (_addeg ST_TableStyleType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_addeg.String(), start)
}

const (
	ST_MdxFunctionTypeUnset ST_MdxFunctionType = 0
	ST_MdxFunctionTypeM     ST_MdxFunctionType = 1
	ST_MdxFunctionTypeV     ST_MdxFunctionType = 2
	ST_MdxFunctionTypeS     ST_MdxFunctionType = 3
	ST_MdxFunctionTypeC     ST_MdxFunctionType = 4
	ST_MdxFunctionTypeR     ST_MdxFunctionType = 5
	ST_MdxFunctionTypeP     ST_MdxFunctionType = 6
	ST_MdxFunctionTypeK     ST_MdxFunctionType = 7
)

// Validate validates the CT_ObjectAnchor and its children
func (_ebaae *CT_ObjectAnchor) Validate() error {
	return _ebaae.ValidateWithPath("\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072")
}
func NewCT_PivotTableStyle() *CT_PivotTableStyle { _gcaa := &CT_PivotTableStyle{}; return _gcaa }

type CT_PivotDimension struct {

	// Measure
	MeasureAttr *bool

	// Dimension Name
	NameAttr string

	// Dimension Unique Name
	UniqueNameAttr string

	// Dimension Display Name
	CaptionAttr string
}

const (
	ST_UpdateLinksUnset   ST_UpdateLinks = 0
	ST_UpdateLinksUserSet ST_UpdateLinks = 1
	ST_UpdateLinksNever   ST_UpdateLinks = 2
	ST_UpdateLinksAlways  ST_UpdateLinks = 3
)

// Validate validates the CT_Hyperlink and its children
func (_eeafa *CT_Hyperlink) Validate() error {
	return _eeafa.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}

type CT_QueryTable struct {

	// QueryTable Name
	NameAttr string

	// First Row Column Titles
	HeadersAttr *bool

	// Row Numbers
	RowNumbersAttr *bool

	// Disable Refresh
	DisableRefreshAttr *bool

	// Background Refresh
	BackgroundRefreshAttr *bool

	// First Background Refresh
	FirstBackgroundRefreshAttr *bool

	// Refresh On Load
	RefreshOnLoadAttr *bool

	// Grow Shrink Type
	GrowShrinkTypeAttr ST_GrowShrinkType

	// Fill Adjacent Formulas
	FillFormulasAttr *bool

	// Remove Data On Save
	RemoveDataOnSaveAttr *bool

	// Disable Edit
	DisableEditAttr *bool

	// Preserve Formatting On Refresh
	PreserveFormattingAttr *bool

	// Adjust Column Width On Refresh
	AdjustColumnWidthAttr *bool

	// Intermediate
	IntermediateAttr *bool

	// Connection Id
	ConnectionIdAttr uint32

	// QueryTable Refresh Information
	QueryTableRefresh *CT_QueryTableRefresh

	// Future Feature Data Storage Area
	ExtLst                      *CT_ExtensionList
	AutoFormatIdAttr            *uint32
	ApplyNumberFormatsAttr      *bool
	ApplyBorderFormatsAttr      *bool
	ApplyFontFormatsAttr        *bool
	ApplyPatternFormatsAttr     *bool
	ApplyAlignmentFormatsAttr   *bool
	ApplyWidthHeightFormatsAttr *bool
}

func (_baef *CT_Item) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcgbd := range start.Attr {
		if _dcgbd.Name.Local == "\u006e" {
			_fbfe, _accecg := _dcgbd.Value, error(nil)
			if _accecg != nil {
				return _accecg
			}
			_baef.NAttr = &_fbfe
			continue
		}
		if _dcgbd.Name.Local == "\u0074" {
			_baef.TAttr.UnmarshalXMLAttr(_dcgbd)
			continue
		}
		if _dcgbd.Name.Local == "\u0068" {
			_ebde, _fcad := _g.ParseBool(_dcgbd.Value)
			if _fcad != nil {
				return _fcad
			}
			_baef.HAttr = &_ebde
			continue
		}
		if _dcgbd.Name.Local == "\u0073" {
			_eecfe, _cgcde := _g.ParseBool(_dcgbd.Value)
			if _cgcde != nil {
				return _cgcde
			}
			_baef.SAttr = &_eecfe
			continue
		}
		if _dcgbd.Name.Local == "\u0073\u0064" {
			_fgggb, _gegdb := _g.ParseBool(_dcgbd.Value)
			if _gegdb != nil {
				return _gegdb
			}
			_baef.SdAttr = &_fgggb
			continue
		}
		if _dcgbd.Name.Local == "\u0066" {
			_gffc, _gccbfc := _g.ParseBool(_dcgbd.Value)
			if _gccbfc != nil {
				return _gccbfc
			}
			_baef.FAttr = &_gffc
			continue
		}
		if _dcgbd.Name.Local == "\u006d" {
			_bagag, _fgaae := _g.ParseBool(_dcgbd.Value)
			if _fgaae != nil {
				return _fgaae
			}
			_baef.MAttr = &_bagag
			continue
		}
		if _dcgbd.Name.Local == "\u0063" {
			_ffffb, _becda := _g.ParseBool(_dcgbd.Value)
			if _becda != nil {
				return _becda
			}
			_baef.CAttr = &_ffffb
			continue
		}
		if _dcgbd.Name.Local == "\u0078" {
			_dgdffe, _dafded := _g.ParseUint(_dcgbd.Value, 10, 32)
			if _dafded != nil {
				return _dafded
			}
			_fbdcb := uint32(_dgdffe)
			_baef.XAttr = &_fbdcb
			continue
		}
		if _dcgbd.Name.Local == "\u0064" {
			_dagdg, _aaeae := _g.ParseBool(_dcgbd.Value)
			if _aaeae != nil {
				return _aaeae
			}
			_baef.DAttr = &_dagdg
			continue
		}
		if _dcgbd.Name.Local == "\u0065" {
			_babdg, _bafcf := _g.ParseBool(_dcgbd.Value)
			if _bafcf != nil {
				return _bafcf
			}
			_baef.EAttr = &_babdg
			continue
		}
	}
	for {
		_cbdee, _gffgf := d.Token()
		if _gffgf != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _gffgf)
		}
		if _febgf, _ccbdg := _cbdee.(_b.EndElement); _ccbdg && _febgf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableMissing and its children, prefixing error messages with path
func (_ceggf *CT_TableMissing) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Number and its children
func (_bccfa *CT_Number) Validate() error {
	return _bccfa.ValidateWithPath("\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r")
}

// ValidateWithPath validates the CT_SheetPr and its children, prefixing error messages with path
func (_cefaa *CT_SheetPr) ValidateWithPath(path string) error {
	if _cefaa.TabColor != nil {
		if _dggcab := _cefaa.TabColor.ValidateWithPath(path + "\u002fT\u0061\u0062\u0043\u006f\u006c\u006fr"); _dggcab != nil {
			return _dggcab
		}
	}
	if _cefaa.OutlinePr != nil {
		if _ecfab := _cefaa.OutlinePr.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"); _ecfab != nil {
			return _ecfab
		}
	}
	if _cefaa.PageSetUpPr != nil {
		if _agbec := _cefaa.PageSetUpPr.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u0053\u0065\u0074\u0055\u0070\u0050\u0072"); _agbec != nil {
			return _agbec
		}
	}
	return nil
}
func (_cccd ST_Comments) Validate() error { return _cccd.ValidateWithPath("") }

type CT_CellStyle struct {

	// User Defined Cell Style
	NameAttr *string

	// Format Id
	XfIdAttr uint32

	// Built-In Style Id
	BuiltinIdAttr *uint32

	// Outline Style
	ILevelAttr *uint32

	// Hidden Style
	HiddenAttr *bool

	// Custom Built In
	CustomBuiltinAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type ST_PivotFilterType byte

// ValidateWithPath validates the CT_PhoneticPr and its children, prefixing error messages with path
func (_daeafc *CT_PhoneticPr) ValidateWithPath(path string) error {
	if _dedge := _daeafc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dedge != nil {
		return _dedge
	}
	if _bgbbaf := _daeafc.AlignmentAttr.ValidateWithPath(path + "\u002f\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006et\u0041\u0074\u0074\u0072"); _bgbbaf != nil {
		return _bgbbaf
	}
	return nil
}
func (_eagfe *CT_Pane) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eagfe.XSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u0053\u0070\u006c\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eagfe.XSplitAttr)})
	}
	if _eagfe.YSplitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079\u0053\u0070\u006c\u0069\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eagfe.YSplitAttr)})
	}
	if _eagfe.TopLeftCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u006f\u0070\u004c\u0065\u0066\u0074\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_eagfe.TopLeftCellAttr)})
	}
	if _eagfe.ActivePaneAttr != ST_PaneUnset {
		_ggae, _eeecd := _eagfe.ActivePaneAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0050\u0061\u006e\u0065"})
		if _eeecd != nil {
			return _eeecd
		}
		start.Attr = append(start.Attr, _ggae)
	}
	if _eagfe.StateAttr != ST_PaneStateUnset {
		_dagbad, _eddcg := _eagfe.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _eddcg != nil {
			return _eddcg
		}
		start.Attr = append(start.Attr, _dagbad)
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Fonts and its children, prefixing error messages with path
func (_gcdcg *CT_Fonts) ValidateWithPath(path string) error {
	for _dcdee, _fcgbc := range _gcdcg.Font {
		if _bgdbc := _fcgbc.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _dcdee)); _bgdbc != nil {
			return _bgdbc
		}
	}
	return nil
}

// Validate validates the CT_Authors and its children
func (_fggg *CT_Authors) Validate() error {
	return _fggg.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073")
}
func (_bgcfa *ST_ExternalConnectionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eggg, _fdafdf := d.Token()
	if _fdafdf != nil {
		return _fdafdf
	}
	if _cfgcbg, _fdfdd := _eggg.(_b.EndElement); _fdfdd && _cfgcbg.Name == start.Name {
		*_bgcfa = 1
		return nil
	}
	if _egffea, _deffb := _eggg.(_b.CharData); !_deffb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggg)
	} else {
		switch string(_egffea) {
		case "":
			*_bgcfa = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_bgcfa = 1
		case "\u0074\u0065\u0078\u0074":
			*_bgcfa = 2
		case "\u004d\u0044\u0059":
			*_bgcfa = 3
		case "\u0044\u004d\u0059":
			*_bgcfa = 4
		case "\u0059\u004d\u0044":
			*_bgcfa = 5
		case "\u004d\u0059\u0044":
			*_bgcfa = 6
		case "\u0044\u0059\u004d":
			*_bgcfa = 7
		case "\u0059\u0044\u004d":
			*_bgcfa = 8
		case "\u0073\u006b\u0069\u0070":
			*_bgcfa = 9
		case "\u0045\u004d\u0044":
			*_bgcfa = 10
		}
	}
	_eggg, _fdafdf = d.Token()
	if _fdafdf != nil {
		return _fdafdf
	}
	if _cefccb, _efdbeb := _eggg.(_b.EndElement); _efdbeb && _cefccb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggg)
}

// Validate validates the CT_SheetView and its children
func (_efce *CT_SheetView) Validate() error {
	return _efce.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077")
}

// Validate validates the CT_WebPublishItems and its children
func (_gbcgb *CT_WebPublishItems) Validate() error {
	return _gbcgb.ValidateWithPath("\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073")
}
func (_faggd *ST_PhoneticAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdbef, _ebagdc := d.Token()
	if _ebagdc != nil {
		return _ebagdc
	}
	if _cadgce, _dfbcgf := _gdbef.(_b.EndElement); _dfbcgf && _cadgce.Name == start.Name {
		*_faggd = 1
		return nil
	}
	if _bdfac, _caafe := _gdbef.(_b.CharData); !_caafe {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gdbef)
	} else {
		switch string(_bdfac) {
		case "":
			*_faggd = 0
		case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
			*_faggd = 1
		case "\u006c\u0065\u0066\u0074":
			*_faggd = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_faggd = 3
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_faggd = 4
		}
	}
	_gdbef, _ebagdc = d.Token()
	if _ebagdc != nil {
		return _ebagdc
	}
	if _dbbgbc, _dffbf := _gdbef.(_b.EndElement); _dffbf && _dbbgbc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gdbef)
}
func (_cceee ST_TextVAlign) ValidateWithPath(path string) error {
	switch _cceee {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cceee))
	}
	return nil
}
func (_fgced *CT_GroupLevel) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egfbd := range start.Attr {
		if _egfbd.Name.Local == "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065" {
			_gaddg, _afgbf := _egfbd.Value, error(nil)
			if _afgbf != nil {
				return _afgbf
			}
			_fgced.UniqueNameAttr = _gaddg
			continue
		}
		if _egfbd.Name.Local == "\u0063a\u0070\u0074\u0069\u006f\u006e" {
			_ffedc, _cbbg := _egfbd.Value, error(nil)
			if _cbbg != nil {
				return _cbbg
			}
			_fgced.CaptionAttr = _ffedc
			continue
		}
		if _egfbd.Name.Local == "\u0075\u0073\u0065\u0072" {
			_bafea, _eagcd := _g.ParseBool(_egfbd.Value)
			if _eagcd != nil {
				return _eagcd
			}
			_fgced.UserAttr = &_bafea
			continue
		}
		if _egfbd.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0052\u006f\u006c\u006c\u0055\u0070" {
			_dgddb, _dcgcag := _g.ParseBool(_egfbd.Value)
			if _dcgcag != nil {
				return _dcgcag
			}
			_fgced.CustomRollUpAttr = &_dgddb
			continue
		}
	}
_dgcgf:
	for {
		_ddgcf, _adgd := d.Token()
		if _adgd != nil {
			return _adgd
		}
		switch _gdgdb := _ddgcf.(type) {
		case _b.StartElement:
			switch _gdgdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u006f\u0075\u0070\u0073"}:
				_fgced.Groups = NewCT_Groups()
				if _bcdgc := d.DecodeElement(_fgced.Groups, &_gdgdb); _bcdgc != nil {
					return _bcdgc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgced.ExtLst = NewCT_ExtensionList()
				if _bedce := d.DecodeElement(_fgced.ExtLst, &_gdgdb); _bedce != nil {
					return _bedce
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047r\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c \u0025\u0076", _gdgdb.Name)
				if _bbdb := d.Skip(); _bbdb != nil {
					return _bbdb
				}
			}
		case _b.EndElement:
			break _dgcgf
		case _b.CharData:
		}
	}
	return nil
}
func (_bacccd ST_GrowShrinkType) String() string {
	switch _bacccd {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case 2:
		return "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case 3:
		return "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return ""
}
func (_gdgef ST_SmartTagShow) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cbgbfc := _b.Attr{}
	_cbgbfc.Name = name
	switch _gdgef {
	case ST_SmartTagShowUnset:
		_cbgbfc.Value = ""
	case ST_SmartTagShowAll:
		_cbgbfc.Value = "\u0061\u006c\u006c"
	case ST_SmartTagShowNone:
		_cbgbfc.Value = "\u006e\u006f\u006e\u0065"
	case ST_SmartTagShowNoIndicator:
		_cbgbfc.Value = "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return _cbgbfc, nil
}
func (_dedff ST_IconSetType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_dedff.String(), start)
}
func NewCT_IgnoredErrors() *CT_IgnoredErrors { _cfdee := &CT_IgnoredErrors{}; return _cfdee }
func (_dda *CT_BookViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dag := _b.StartElement{Name: _b.Name{Local: "\u006da\u003aw\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077"}}
	for _, _dgf := range _dda.WorkbookView {
		e.EncodeElement(_dgf, _dag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_GradientFill() *CT_GradientFill { _agafe := &CT_GradientFill{}; return _agafe }

type Workbook struct{ CT_Workbook }

func (_gdcde *ST_GradientType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_egggaf, _cfbab := d.Token()
	if _cfbab != nil {
		return _cfbab
	}
	if _bfgbc, _cffdg := _egggaf.(_b.EndElement); _cffdg && _bfgbc.Name == start.Name {
		*_gdcde = 1
		return nil
	}
	if _ecfabe, _ggggbf := _egggaf.(_b.CharData); !_ggggbf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _egggaf)
	} else {
		switch string(_ecfabe) {
		case "":
			*_gdcde = 0
		case "\u006c\u0069\u006e\u0065\u0061\u0072":
			*_gdcde = 1
		case "\u0070\u0061\u0074\u0068":
			*_gdcde = 2
		}
	}
	_egggaf, _cfbab = d.Token()
	if _cfbab != nil {
		return _cfbab
	}
	if _eaacc, _ebcgae := _egggaf.(_b.EndElement); _ebcgae && _eaacc.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _egggaf)
}

// ValidateWithPath validates the CT_PageField and its children, prefixing error messages with path
func (_dceae *CT_PageField) ValidateWithPath(path string) error {
	if _dceae.ExtLst != nil {
		if _dbcgfd := _dceae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbcgfd != nil {
			return _dbcgfd
		}
	}
	return nil
}

type Users struct{ CT_Users }

func (_gbcda *CT_PivotAreas) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgfed := range start.Attr {
		if _fgfed.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gdcec, _bfeed := _g.ParseUint(_fgfed.Value, 10, 32)
			if _bfeed != nil {
				return _bfeed
			}
			_gddag := uint32(_gdcec)
			_gbcda.CountAttr = &_gddag
			continue
		}
	}
_ccaad:
	for {
		_fbefb, _fggfe := d.Token()
		if _fggfe != nil {
			return _fggfe
		}
		switch _bffe := _fbefb.(type) {
		case _b.StartElement:
			switch _bffe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				_affce := NewCT_PivotArea()
				if _ebfbf := d.DecodeElement(_affce, &_bffe); _ebfbf != nil {
					return _ebfbf
				}
				_gbcda.PivotArea = append(_gbcda.PivotArea, _affce)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050i\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073 \u0025\u0076", _bffe.Name)
				if _agdbe := d.Skip(); _agdbe != nil {
					return _agdbe
				}
			}
		case _b.EndElement:
			break _ccaad
		case _b.CharData:
		}
	}
	return nil
}
func (_bafd *CT_ColorScale) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_efbc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _fccde := range _bafd.Cfvo {
		e.EncodeElement(_fccde, _efbc)
	}
	_acde := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _eabc := range _bafd.Color {
		e.EncodeElement(_eabc, _acde)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dgbbe ST_PhoneticType) String() string {
	switch _dgbbe {
	case 0:
		return ""
	case 1:
		return "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 2:
		return "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case 3:
		return "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case 4:
		return "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return ""
}
func NewCT_SharedItems() *CT_SharedItems { _cgfgb := &CT_SharedItems{}; return _cgfgb }

// Validate validates the CT_SharedUser and its children
func (_degde *CT_SharedUser) Validate() error {
	return _degde.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072")
}

type CT_Authors struct {

	// Author
	Author []string
}

// Validate validates the CT_BooleanProperty and its children
func (_bfd *CT_BooleanProperty) Validate() error {
	return _bfd.ValidateWithPath("\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079")
}
func (_eabfag *CT_TableStyleInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eabfag.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_eabfag.NameAttr)})
	}
	if _eabfag.ShowFirstColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eabfag.ShowFirstColumnAttr))})
	}
	if _eabfag.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eabfag.ShowLastColumnAttr))})
	}
	if _eabfag.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eabfag.ShowRowStripesAttr))})
	}
	if _eabfag.ShowColumnStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_eabfag.ShowColumnStripesAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_PrintErrorUnset     ST_PrintError = 0
	ST_PrintErrorDisplayed ST_PrintError = 1
	ST_PrintErrorBlank     ST_PrintError = 2
	ST_PrintErrorDash      ST_PrintError = 3
	ST_PrintErrorNA        ST_PrintError = 4
)

func (_gdbega *CT_SharedUser) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_gdbega.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _bffad := range start.Attr {
		if _bffad.Name.Local == "\u0067\u0075\u0069\u0064" {
			_abecc, _cfdaa := _bffad.Value, error(nil)
			if _cfdaa != nil {
				return _cfdaa
			}
			_gdbega.GuidAttr = _abecc
			continue
		}
		if _bffad.Name.Local == "\u006e\u0061\u006d\u0065" {
			_debbf, _afcad := _bffad.Value, error(nil)
			if _afcad != nil {
				return _afcad
			}
			_gdbega.NameAttr = _debbf
			continue
		}
		if _bffad.Name.Local == "\u0069\u0064" {
			_dbecf, _ebege := _g.ParseInt(_bffad.Value, 10, 32)
			if _ebege != nil {
				return _ebege
			}
			_gdbega.IdAttr = int32(_dbecf)
			continue
		}
		if _bffad.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_gccgb, _ffgce := ParseStdlibTime(_bffad.Value)
			if _ffgce != nil {
				return _ffgce
			}
			_gdbega.DateTimeAttr = _gccgb
			continue
		}
	}
_bfgfd:
	for {
		_gdbed, _aegfd := d.Token()
		if _aegfd != nil {
			return _aegfd
		}
		switch _dgaac := _gdbed.(type) {
		case _b.StartElement:
			switch _dgaac.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdbega.ExtLst = NewCT_ExtensionList()
				if _ccdgc := d.DecodeElement(_gdbega.ExtLst, &_dgaac); _ccdgc != nil {
					return _ccdgc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072 \u0025\u0076", _dgaac.Name)
				if _fbfcd := d.Skip(); _fbfcd != nil {
					return _fbfcd
				}
			}
		case _b.EndElement:
			break _bfgfd
		case _b.CharData:
		}
	}
	return nil
}
func (_bffef *ST_FormatAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bffef = 0
	case "\u0062\u006c\u0061n\u006b":
		*_bffef = 1
	case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
		*_bffef = 2
	case "\u0064\u0072\u0069l\u006c":
		*_bffef = 3
	case "\u0066o\u0072\u006d\u0075\u006c\u0061":
		*_bffef = 4
	}
	return nil
}
func (_aaedb *Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0075\u0073\u0065\u0072\u0073"
	return _aaedb.CT_Users.MarshalXML(e, start)
}
func (_bbga *CT_PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bbga.CacheSource = NewCT_CacheSource()
	_bbga.CacheFields = NewCT_CacheFields()
	for _, _cfacfd := range start.Attr {
		if _cfacfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cfacfd.Name.Local == "\u0069\u0064" || _cfacfd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cfacfd.Name.Local == "\u0069\u0064" {
			_fcadb, _adegb := _cfacfd.Value, error(nil)
			if _adegb != nil {
				return _adegb
			}
			_bbga.IdAttr = &_fcadb
			continue
		}
		if _cfacfd.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_egcaec, _eccgd := _g.ParseBool(_cfacfd.Value)
			if _eccgd != nil {
				return _eccgd
			}
			_bbga.UpgradeOnRefreshAttr = &_egcaec
			continue
		}
		if _cfacfd.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_agdebd, _geage := _g.ParseBool(_cfacfd.Value)
			if _geage != nil {
				return _geage
			}
			_bbga.TupleCacheAttr = &_agdebd
			continue
		}
		if _cfacfd.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_fbbeff, _bfgdaa := _g.ParseBool(_cfacfd.Value)
			if _bfgdaa != nil {
				return _bfgdaa
			}
			_bbga.SaveDataAttr = &_fbbeff
			continue
		}
		if _cfacfd.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_ebfaga, _gggbf := _g.ParseBool(_cfacfd.Value)
			if _gggbf != nil {
				return _gggbf
			}
			_bbga.SupportSubqueryAttr = &_ebfaga
			continue
		}
		if _cfacfd.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_bgefe, _babfe := _g.ParseBool(_cfacfd.Value)
			if _babfe != nil {
				return _babfe
			}
			_bbga.OptimizeMemoryAttr = &_bgefe
			continue
		}
		if _cfacfd.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_bfggb, _cgcgd := _g.ParseBool(_cfacfd.Value)
			if _cgcgd != nil {
				return _cgcgd
			}
			_bbga.SupportAdvancedDrillAttr = &_bfggb
			continue
		}
		if _cfacfd.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_dfcead, _bcgfad := _cfacfd.Value, error(nil)
			if _bcgfad != nil {
				return _bcgfad
			}
			_bbga.RefreshedByAttr = &_dfcead
			continue
		}
		if _cfacfd.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_gcead, _eaeba := ParseStdlibTime(_cfacfd.Value)
			if _eaeba != nil {
				return _eaeba
			}
			_bbga.RefreshedDateIsoAttr = &_gcead
			continue
		}
		if _cfacfd.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_dfade, _ffeac := _g.ParseBool(_cfacfd.Value)
			if _ffeac != nil {
				return _ffeac
			}
			_bbga.InvalidAttr = &_dfade
			continue
		}
		if _cfacfd.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_bafab, _cdddc := _g.ParseBool(_cfacfd.Value)
			if _cdddc != nil {
				return _cdddc
			}
			_bbga.BackgroundQueryAttr = &_bafab
			continue
		}
		if _cfacfd.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_cdfbg, _face := _g.ParseUint(_cfacfd.Value, 10, 32)
			if _face != nil {
				return _face
			}
			_afafec := uint32(_cdfbg)
			_bbga.MissingItemsLimitAttr = &_afafec
			continue
		}
		if _cfacfd.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ggabb, _eeffgd := _g.ParseUint(_cfacfd.Value, 10, 8)
			if _eeffgd != nil {
				return _eeffgd
			}
			_aedgf := uint8(_ggabb)
			_bbga.RefreshedVersionAttr = &_aedgf
			continue
		}
		if _cfacfd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_cacbc, _fbfgb := _g.ParseBool(_cfacfd.Value)
			if _fbfgb != nil {
				return _fbfgb
			}
			_bbga.RefreshOnLoadAttr = &_cacbc
			continue
		}
		if _cfacfd.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_gbcfg, _agdca := _g.ParseFloat(_cfacfd.Value, 64)
			if _agdca != nil {
				return _agdca
			}
			_bbga.RefreshedDateAttr = &_gbcfg
			continue
		}
		if _cfacfd.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_gfgeb, _cfegd := _g.ParseUint(_cfacfd.Value, 10, 32)
			if _cfegd != nil {
				return _cfegd
			}
			_bfafg := uint32(_gfgeb)
			_bbga.RecordCountAttr = &_bfafg
			continue
		}
		if _cfacfd.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_fccgae, _cbggaf := _g.ParseUint(_cfacfd.Value, 10, 8)
			if _cbggaf != nil {
				return _cbggaf
			}
			_gddgf := uint8(_fccgae)
			_bbga.CreatedVersionAttr = &_gddgf
			continue
		}
		if _cfacfd.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_dddg, _dcefa := _g.ParseUint(_cfacfd.Value, 10, 8)
			if _dcefa != nil {
				return _dcefa
			}
			_fgebb := uint8(_dddg)
			_bbga.MinRefreshableVersionAttr = &_fgebb
			continue
		}
		if _cfacfd.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_edbgf, _begbae := _g.ParseBool(_cfacfd.Value)
			if _begbae != nil {
				return _begbae
			}
			_bbga.EnableRefreshAttr = &_edbgf
			continue
		}
	}
_fbgdd:
	for {
		_fagbd, _abeec := d.Token()
		if _abeec != nil {
			return _abeec
		}
		switch _fadc := _fagbd.(type) {
		case _b.StartElement:
			switch _fadc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _cbcbd := d.DecodeElement(_bbga.CacheSource, &_fadc); _cbcbd != nil {
					return _cbcbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _bbgbc := d.DecodeElement(_bbga.CacheFields, &_fadc); _bbgbc != nil {
					return _bbgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_bbga.CacheHierarchies = NewCT_CacheHierarchies()
				if _eecab := d.DecodeElement(_bbga.CacheHierarchies, &_fadc); _eecab != nil {
					return _eecab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_bbga.Kpis = NewCT_PCDKPIs()
				if _cabbc := d.DecodeElement(_bbga.Kpis, &_fadc); _cabbc != nil {
					return _cabbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_bbga.TupleCache = NewCT_TupleCache()
				if _deabg := d.DecodeElement(_bbga.TupleCache, &_fadc); _deabg != nil {
					return _deabg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_bbga.CalculatedItems = NewCT_CalculatedItems()
				if _eggce := d.DecodeElement(_bbga.CalculatedItems, &_fadc); _eggce != nil {
					return _eggce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_bbga.CalculatedMembers = NewCT_CalculatedMembers()
				if _cbcag := d.DecodeElement(_bbga.CalculatedMembers, &_fadc); _cbcag != nil {
					return _cbcag
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_bbga.Dimensions = NewCT_Dimensions()
				if _cfgaa := d.DecodeElement(_bbga.Dimensions, &_fadc); _cfgaa != nil {
					return _cfgaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_bbga.MeasureGroups = NewCT_MeasureGroups()
				if _dedgcb := d.DecodeElement(_bbga.MeasureGroups, &_fadc); _dedgcb != nil {
					return _dedgcb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_bbga.Maps = NewCT_MeasureDimensionMaps()
				if _beecee := d.DecodeElement(_bbga.Maps, &_fadc); _beecee != nil {
					return _beecee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bbga.ExtLst = NewCT_ExtensionList()
				if _acgdg := d.DecodeElement(_bbga.ExtLst, &_fadc); _acgdg != nil {
					return _acgdg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u0044\u0065\u0066\u0069\u006e\u0069t\u0069\u006f\u006e \u0025\u0076", _fadc.Name)
				if _cdbcd := d.Skip(); _cdbcd != nil {
					return _cdbcd
				}
			}
		case _b.EndElement:
			break _fbgdd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_CalcChain and its children
func (_fded *CT_CalcChain) Validate() error {
	return _fded.ValidateWithPath("\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e")
}
func (_efede ST_GrowShrinkType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_efede.String(), start)
}

type CT_ProtectedRanges struct {

	// Protected Range
	ProtectedRange []*CT_ProtectedRange
}

func (_ceada *CT_FunctionGroup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _edcdg := range start.Attr {
		if _edcdg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_edegb, _egacf := _edcdg.Value, error(nil)
			if _egacf != nil {
				return _egacf
			}
			_ceada.NameAttr = &_edegb
			continue
		}
	}
	for {
		_dfgeba, _cdae := d.Token()
		if _cdae != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063t\u0069o\u006e\u0047\u0072\u006f\u0075\u0070\u003a \u0025\u0073", _cdae)
		}
		if _cbbaf, _bgbdb := _dfgeba.(_b.EndElement); _bgbdb && _cbbaf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aagdge *ST_Objects) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_aagdge = 0
	case "\u0061\u006c\u006c":
		*_aagdge = 1
	case "\u0070\u006c\u0061c\u0065\u0068\u006f\u006c\u0064\u0065\u0072\u0073":
		*_aagdge = 2
	case "\u006e\u006f\u006e\u0065":
		*_aagdge = 3
	}
	return nil
}
func NewCT_CacheHierarchies() *CT_CacheHierarchies { _cbcd := &CT_CacheHierarchies{}; return _cbcd }
func (_cgdg *CT_DataRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _faef := range start.Attr {
		if _faef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _faef.Name.Local == "\u0069\u0064" || _faef.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _faef.Name.Local == "\u0069\u0064" {
			_aegb, _cabb := _faef.Value, error(nil)
			if _cabb != nil {
				return _cabb
			}
			_cgdg.IdAttr = &_aegb
			continue
		}
		if _faef.Name.Local == "\u0072\u0065\u0066" {
			_cgacca, _aeegf := _faef.Value, error(nil)
			if _aeegf != nil {
				return _aeegf
			}
			_cgdg.RefAttr = &_cgacca
			continue
		}
		if _faef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_feeca, _fega := _faef.Value, error(nil)
			if _fega != nil {
				return _fega
			}
			_cgdg.NameAttr = &_feeca
			continue
		}
		if _faef.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_ggff, _bfga := _faef.Value, error(nil)
			if _bfga != nil {
				return _bfga
			}
			_cgdg.SheetAttr = &_ggff
			continue
		}
	}
	for {
		_gfdef, _dfgg := d.Token()
		if _dfgg != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u003a\u0020%\u0073", _dfgg)
		}
		if _dead, _cbgf := _gfdef.(_b.EndElement); _cbgf && _dead.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_DataFields and its children
func (_gbbf *CT_DataFields) Validate() error {
	return _gbbf.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073")
}

type CT_PCDKPI struct {

	// KPI Unique Name
	UniqueNameAttr string

	// KPI Display Name
	CaptionAttr *string

	// KPI Display Folder
	DisplayFolderAttr *string

	// KPI Measure Group Name
	MeasureGroupAttr *string

	// Parent KPI
	ParentAttr *string

	// KPI Value Unique Name
	ValueAttr string

	// KPI Goal Unique Name
	GoalAttr *string

	// KPI Status Unique Name
	StatusAttr *string

	// KPI Trend Unique Name
	TrendAttr *string

	// KPI Weight Unique Name
	WeightAttr *string

	// Time Member KPI Unique Name
	TimeAttr *string
}

func (_eggffb ST_FileType) String() string {
	switch _eggffb {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u0063"
	case 2:
		return "\u0077\u0069\u006e"
	case 3:
		return "\u0064\u006f\u0073"
	case 4:
		return "\u006c\u0069\u006e"
	case 5:
		return "\u006f\u0074\u0068e\u0072"
	}
	return ""
}
func (_agebce *CT_Sheets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_fgebcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074"}}
	for _, _bdfeb := range _agebce.Sheet {
		e.EncodeElement(_bdfeb, _fgebcc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgggd ST_ItemType) String() string {
	switch _fgggd {
	case 0:
		return ""
	case 1:
		return "\u0064\u0061\u0074\u0061"
	case 2:
		return "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0075\u006d"
	case 4:
		return "\u0063\u006f\u0075\u006e\u0074\u0041"
	case 5:
		return "\u0061\u0076\u0067"
	case 6:
		return "\u006d\u0061\u0078"
	case 7:
		return "\u006d\u0069\u006e"
	case 8:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 9:
		return "\u0063\u006f\u0075n\u0074"
	case 10:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 11:
		return "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case 12:
		return "\u0076\u0061\u0072"
	case 13:
		return "\u0076\u0061\u0072\u0050"
	case 14:
		return "\u0067\u0072\u0061n\u0064"
	case 15:
		return "\u0062\u006c\u0061n\u006b"
	}
	return ""
}

type ST_MdxFunctionType byte

// Validate validates the EG_ExtensionList and its children
func (_ebafbb *EG_ExtensionList) Validate() error {
	return _ebafbb.ValidateWithPath("\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074")
}
func (_bdbgfe ST_OleUpdate) ValidateWithPath(path string) error {
	switch _bdbgfe {
	case 0, 1, 2:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bdbgfe))
	}
	return nil
}
func (_cgcce *ST_CellType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_badgd, _dccdgda := d.Token()
	if _dccdgda != nil {
		return _dccdgda
	}
	if _bffgdaf, _fceefe := _badgd.(_b.EndElement); _fceefe && _bffgdaf.Name == start.Name {
		*_cgcce = 1
		return nil
	}
	if _bgccbf, _ccecd := _badgd.(_b.CharData); !_ccecd {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _badgd)
	} else {
		switch string(_bgccbf) {
		case "":
			*_cgcce = 0
		case "\u0062":
			*_cgcce = 1
		case "\u006e":
			*_cgcce = 2
		case "\u0065":
			*_cgcce = 3
		case "\u0073":
			*_cgcce = 4
		case "\u0073\u0074\u0072":
			*_cgcce = 5
		case "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r":
			*_cgcce = 6
		}
	}
	_badgd, _dccdgda = d.Token()
	if _dccdgda != nil {
		return _dccdgda
	}
	if _ddgafe, _gdgde := _badgd.(_b.EndElement); _gdgde && _ddgafe.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _badgd)
}
func (_bbgea *CT_NumFmt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _feeefg := range start.Attr {
		if _feeefg.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_baea, _gbdbf := _g.ParseUint(_feeefg.Value, 10, 32)
			if _gbdbf != nil {
				return _gbdbf
			}
			_bbgea.NumFmtIdAttr = uint32(_baea)
			continue
		}
		if _feeefg.Name.Local == "\u0066\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u0064\u0065" {
			_cdggc, _ggbbb := _feeefg.Value, error(nil)
			if _ggbbb != nil {
				return _ggbbb
			}
			_bbgea.FormatCodeAttr = _cdggc
			continue
		}
	}
	for {
		_bdfcee, _fbdbc := d.Token()
		if _fbdbc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069ng\u0020C\u0054\u005f\u004e\u0075\u006dF\u006d\u0074\u003a\u0020\u0025\u0073", _fbdbc)
		}
		if _dgdab, _dadggg := _bdfcee.(_b.EndElement); _dadggg && _dgdab.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgcef ST_MdxKPIProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgcef.String(), start)
}

// Validate validates the CT_MdxMemeberProp and its children
func (_gdba *CT_MdxMemeberProp) Validate() error {
	return _gdba.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070")
}

// Validate validates the CT_SmartTagPr and its children
func (_bacdbd *CT_SmartTagPr) Validate() error {
	return _bacdbd.ValidateWithPath("\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072")
}
func (_agffea *ST_FileType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eeace, _fegag := d.Token()
	if _fegag != nil {
		return _fegag
	}
	if _gdbdd, _cfaef := _eeace.(_b.EndElement); _cfaef && _gdbdd.Name == start.Name {
		*_agffea = 1
		return nil
	}
	if _gefddb, _ffgaag := _eeace.(_b.CharData); !_ffgaag {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eeace)
	} else {
		switch string(_gefddb) {
		case "":
			*_agffea = 0
		case "\u006d\u0061\u0063":
			*_agffea = 1
		case "\u0077\u0069\u006e":
			*_agffea = 2
		case "\u0064\u006f\u0073":
			*_agffea = 3
		case "\u006c\u0069\u006e":
			*_agffea = 4
		case "\u006f\u0074\u0068e\u0072":
			*_agffea = 5
		}
	}
	_eeace, _fegag = d.Token()
	if _fegag != nil {
		return _fegag
	}
	if _bgcbb, _dcdddc := _eeace.(_b.EndElement); _dcdddc && _bgcbb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eeace)
}
func (_fgefcg *CT_WorksheetSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ceaagc := range start.Attr {
		if _ceaagc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ceaagc.Name.Local == "\u0069\u0064" || _ceaagc.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ceaagc.Name.Local == "\u0069\u0064" {
			_edeefe, _caaaede := _ceaagc.Value, error(nil)
			if _caaaede != nil {
				return _caaaede
			}
			_fgefcg.IdAttr = &_edeefe
			continue
		}
		if _ceaagc.Name.Local == "\u0072\u0065\u0066" {
			_dadcca, _dfgddbc := _ceaagc.Value, error(nil)
			if _dfgddbc != nil {
				return _dfgddbc
			}
			_fgefcg.RefAttr = &_dadcca
			continue
		}
		if _ceaagc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_gbbac, _cbeef := _ceaagc.Value, error(nil)
			if _cbeef != nil {
				return _cbeef
			}
			_fgefcg.NameAttr = &_gbbac
			continue
		}
		if _ceaagc.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_feace, _cdead := _ceaagc.Value, error(nil)
			if _cdead != nil {
				return _cdead
			}
			_fgefcg.SheetAttr = &_feace
			continue
		}
	}
	for {
		_dabcea, _bdbcd := d.Token()
		if _bdbcd != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0057\u006f\u0072\u006b\u0073\u0068\u0065e\u0074\u0053\u006f\u0075\u0072\u0063\u0065\u003a\u0020\u0025\u0073", _bdbcd)
		}
		if _cbbed, _geafa := _dabcea.(_b.EndElement); _geafa && _cbbed.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecdeg *CT_FieldUsage) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078"}, Value: _a.Sprintf("\u0025\u0076", _ecdeg.XAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ecfeg *CT_PageBreak) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ecfeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ecfeg.CountAttr)})
	}
	if _ecfeg.ManualBreakCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061n\u0075\u0061\u006cB\u0072\u0065\u0061\u006b\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ecfeg.ManualBreakCountAttr)})
	}
	e.EncodeToken(start)
	if _ecfeg.Brk != nil {
		_gegc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0062\u0072\u006b"}}
		for _, _fafbgg := range _ecfeg.Brk {
			e.EncodeElement(_fafbgg, _gegc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_FutureMetadataBlock struct {

	// Future Feature Storage Area
	ExtLst *CT_ExtensionList
}

func (_gddgde ST_DynamicFilterType) String() string {
	switch _gddgde {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006c\u006c"
	case 2:
		return "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 3:
		return "\u0062\u0065\u006co\u0077\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	case 4:
		return "\u0074\u006f\u006d\u006f\u0072\u0072\u006f\u0077"
	case 5:
		return "\u0074\u006f\u0064a\u0079"
	case 6:
		return "\u0079e\u0073\u0074\u0065\u0072\u0064\u0061y"
	case 7:
		return "\u006e\u0065\u0078\u0074\u0057\u0065\u0065\u006b"
	case 8:
		return "\u0074\u0068\u0069\u0073\u0057\u0065\u0065\u006b"
	case 9:
		return "\u006c\u0061\u0073\u0074\u0057\u0065\u0065\u006b"
	case 10:
		return "\u006ee\u0078\u0074\u004d\u006f\u006e\u0074h"
	case 11:
		return "\u0074h\u0069\u0073\u004d\u006f\u006e\u0074h"
	case 12:
		return "\u006ca\u0073\u0074\u004d\u006f\u006e\u0074h"
	case 13:
		return "n\u0065\u0078\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 14:
		return "t\u0068\u0069\u0073\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 15:
		return "l\u0061\u0073\u0074\u0051\u0075\u0061\u0072\u0074\u0065\u0072"
	case 16:
		return "\u006e\u0065\u0078\u0074\u0059\u0065\u0061\u0072"
	case 17:
		return "\u0074\u0068\u0069\u0073\u0059\u0065\u0061\u0072"
	case 18:
		return "\u006c\u0061\u0073\u0074\u0059\u0065\u0061\u0072"
	case 19:
		return "\u0079\u0065\u0061\u0072\u0054\u006f\u0044\u0061\u0074\u0065"
	case 20:
		return "\u0051\u0031"
	case 21:
		return "\u0051\u0032"
	case 22:
		return "\u0051\u0033"
	case 23:
		return "\u0051\u0034"
	case 24:
		return "\u004d\u0031"
	case 25:
		return "\u004d\u0032"
	case 26:
		return "\u004d\u0033"
	case 27:
		return "\u004d\u0034"
	case 28:
		return "\u004d\u0035"
	case 29:
		return "\u004d\u0036"
	case 30:
		return "\u004d\u0037"
	case 31:
		return "\u004d\u0038"
	case 32:
		return "\u004d\u0039"
	case 33:
		return "\u004d\u0031\u0030"
	case 34:
		return "\u004d\u0031\u0031"
	case 35:
		return "\u004d\u0031\u0032"
	}
	return ""
}

// ValidateWithPath validates the CT_Scenario and its children, prefixing error messages with path
func (_gabb *CT_Scenario) ValidateWithPath(path string) error {
	for _caagf, _ceegf := range _gabb.InputCells {
		if _acccg := _ceegf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006cs\u005b\u0025\u0064\u005d", path, _caagf)); _acccg != nil {
			return _acccg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Control and its children, prefixing error messages with path
func (_adaa *CT_Control) ValidateWithPath(path string) error {
	if _adaa.ControlPr != nil {
		if _afba := _adaa.ControlPr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"); _afba != nil {
			return _afba
		}
	}
	return nil
}
func (_ffdeb *CT_PivotCacheRecords) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ffdeb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ffdeb.CountAttr)})
	}
	e.EncodeToken(start)
	if _ffdeb.R != nil {
		_ebdbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072"}}
		for _, _fgfdag := range _ffdeb.R {
			e.EncodeElement(_fgfdag, _ebdbe)
		}
	}
	if _ffdeb.ExtLst != nil {
		_defdb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_ffdeb.ExtLst, _defdb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fagaed ST_PivotAreaType) ValidateWithPath(path string) error {
	switch _fagaed {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fagaed))
	}
	return nil
}
func (_fdc *CT_CacheSource) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fdc.TypeAttr = ST_SourceType(1)
	for _, _bgab := range start.Attr {
		if _bgab.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fdc.TypeAttr.UnmarshalXMLAttr(_bgab)
			continue
		}
		if _bgab.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_bgdd, _fedc := _g.ParseUint(_bgab.Value, 10, 32)
			if _fedc != nil {
				return _fedc
			}
			_fggb := uint32(_bgdd)
			_fdc.ConnectionIdAttr = &_fggb
			continue
		}
	}
_aaf:
	for {
		_abbf, _eggd := d.Token()
		if _eggd != nil {
			return _eggd
		}
		switch _afgb := _abbf.(type) {
		case _b.StartElement:
			switch _afgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077o\u0072k\u0073\u0068\u0065\u0065\u0074\u0053\u006f\u0075\u0072\u0063\u0065"}:
				_fdc.WorksheetSource = NewCT_WorksheetSource()
				if _cfb := d.DecodeElement(_fdc.WorksheetSource, &_afgb); _cfb != nil {
					return _cfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0073\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e"}:
				_fdc.Consolidation = NewCT_Consolidation()
				if _bfab := d.DecodeElement(_fdc.Consolidation, &_afgb); _bfab != nil {
					return _bfab
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fdc.ExtLst = NewCT_ExtensionList()
				if _dge := d.DecodeElement(_fdc.ExtLst, &_afgb); _dge != nil {
					return _dge
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053\u006fu\u0072c\u0065\u0020\u0025\u0076", _afgb.Name)
				if _gcfb := d.Skip(); _gcfb != nil {
					return _gcfb
				}
			}
		case _b.EndElement:
			break _aaf
		case _b.CharData:
		}
	}
	return nil
}

type CT_SheetPr struct {

	// Synch Horizontal
	SyncHorizontalAttr *bool

	// Synch Vertical
	SyncVerticalAttr *bool

	// Synch Reference
	SyncRefAttr *string

	// Transition Formula Evaluation
	TransitionEvaluationAttr *bool

	// Transition Formula Entry
	TransitionEntryAttr *bool

	// Published
	PublishedAttr *bool

	// Code Name
	CodeNameAttr *string

	// Filter Mode
	FilterModeAttr *bool

	// Enable Conditional Formatting Calculations
	EnableFormatConditionsCalculationAttr *bool

	// Sheet Tab Color
	TabColor *CT_Color

	// Outline Properties
	OutlinePr *CT_OutlinePr

	// Page Setup Properties
	PageSetUpPr *CT_PageSetUpPr
}

func (_eeeeeg ST_ParameterType) ValidateWithPath(path string) error {
	switch _eeeeeg {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeeeeg))
	}
	return nil
}

// Validate validates the CT_IgnoredError and its children
func (_gfccb *CT_IgnoredError) Validate() error {
	return _gfccb.ValidateWithPath("\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072")
}
func (_cbfee ST_PageOrder) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_degdac := _b.Attr{}
	_degdac.Name = name
	switch _cbfee {
	case ST_PageOrderUnset:
		_degdac.Value = ""
	case ST_PageOrderDownThenOver:
		_degdac.Value = "\u0064\u006f\u0077n\u0054\u0068\u0065\u006e\u004f\u0076\u0065\u0072"
	case ST_PageOrderOverThenDown:
		_degdac.Value = "\u006f\u0076\u0065r\u0054\u0068\u0065\u006e\u0044\u006f\u0077\u006e"
	}
	return _degdac, nil
}

// ValidateWithPath validates the CT_CfRule and its children, prefixing error messages with path
func (_cagfe *CT_CfRule) ValidateWithPath(path string) error {
	if _gbdd := _cagfe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _gbdd != nil {
		return _gbdd
	}
	if _ddeg := _cagfe.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _ddeg != nil {
		return _ddeg
	}
	if _acea := _cagfe.TimePeriodAttr.ValidateWithPath(path + "\u002fT\u0069m\u0065\u0050\u0065\u0072\u0069\u006f\u0064\u0041\u0074\u0074\u0072"); _acea != nil {
		return _acea
	}
	if _cagfe.ColorScale != nil {
		if _fgff := _cagfe.ColorScale.ValidateWithPath(path + "/\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"); _fgff != nil {
			return _fgff
		}
	}
	if _cagfe.DataBar != nil {
		if _fegfa := _cagfe.DataBar.ValidateWithPath(path + "\u002f\u0044\u0061\u0074\u0061\u0042\u0061\u0072"); _fegfa != nil {
			return _fegfa
		}
	}
	if _cagfe.IconSet != nil {
		if _fgdae := _cagfe.IconSet.ValidateWithPath(path + "\u002f\u0049\u0063\u006f\u006e\u0053\u0065\u0074"); _fgdae != nil {
			return _fgdae
		}
	}
	if _cagfe.ExtLst != nil {
		if _eecdfg := _cagfe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eecdfg != nil {
			return _eecdfg
		}
	}
	return nil
}

type ST_PivotAreaType byte

func (_abbfd *ST_Orientation) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_abbfd = 0
	case "\u0064e\u0066\u0061\u0075\u006c\u0074":
		*_abbfd = 1
	case "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074":
		*_abbfd = 2
	case "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e":
		*_abbfd = 3
	}
	return nil
}

type ST_PhoneticType byte

func (_gagbfd *PivotCacheDefinition) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003api\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e"
	return _gagbfd.CT_PivotCacheDefinition.MarshalXML(e, start)
}
func (_dbeadc *ST_DvAspect) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_dbeadc = 0
	case "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054":
		*_dbeadc = 1
	case "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e":
		*_dbeadc = 2
	}
	return nil
}
func (_ababae *CT_RElt) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _ababae.RPr != nil {
		_feaef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0050\u0072"}}
		e.EncodeElement(_ababae.RPr, _feaef)
	}
	_caafg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074"}}
	_f.AddPreserveSpaceAttr(&_caafg, _ababae.T)
	e.EncodeElement(_ababae.T, _caafg)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffcdg *CT_IntProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _ffcdg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_rwColActionTypeUnset     ST_rwColActionType = 0
	ST_rwColActionTypeInsertRow ST_rwColActionType = 1
	ST_rwColActionTypeDeleteRow ST_rwColActionType = 2
	ST_rwColActionTypeInsertCol ST_rwColActionType = 3
	ST_rwColActionTypeDeleteCol ST_rwColActionType = 4
)

type CT_Tables struct {

	// Count of Tables
	CountAttr *uint32

	// No Value
	M []*CT_TableMissing

	// Character Value
	S []*CT_XStringElement

	// Index
	X []*CT_Index
}

func (_dffaga *CT_WorkbookPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ccgbcf := range start.Attr {
		if _ccgbcf.Name.Local == "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065" {
			_afefc, _fegeeg := _ccgbcf.Value, error(nil)
			if _fegeeg != nil {
				return _fegeeg
			}
			_dffaga.CodeNameAttr = &_afefc
			continue
		}
		if _ccgbcf.Name.Local == "\u0064\u0061\u0074\u0065\u0031\u0039\u0030\u0034" {
			_cgefg, _ddgdbc := _g.ParseBool(_ccgbcf.Value)
			if _ddgdbc != nil {
				return _ddgdbc
			}
			_dffaga.Date1904Attr = &_cgefg
			continue
		}
		if _ccgbcf.Name.Local == "\u0068i\u0064e\u0050\u0069\u0076\u006f\u0074F\u0069\u0065l\u0064\u004c\u0069\u0073\u0074" {
			_gffbad, _fcaee := _g.ParseBool(_ccgbcf.Value)
			if _fcaee != nil {
				return _fcaee
			}
			_dffaga.HidePivotFieldListAttr = &_gffbad
			continue
		}
		if _ccgbcf.Name.Local == "\u0073\u0068\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0055n\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064\u0054\u0061b\u006c\u0065\u0073" {
			_efcccc, _agcag := _g.ParseBool(_ccgbcf.Value)
			if _agcag != nil {
				return _agcag
			}
			_dffaga.ShowBorderUnselectedTablesAttr = &_efcccc
			continue
		}
		if _ccgbcf.Name.Local == "s\u0068o\u0077\u0050\u0069\u0076\u006f\u0074\u0043\u0068a\u0072\u0074\u0046\u0069lt\u0065\u0072" {
			_cgbbbe, _gefae := _g.ParseBool(_ccgbcf.Value)
			if _gefae != nil {
				return _gefae
			}
			_dffaga.ShowPivotChartFilterAttr = &_cgbbbe
			continue
		}
		if _ccgbcf.Name.Local == "\u0070\u0072\u006f\u006d\u0070\u0074\u0065\u0064\u0053\u006f\u006c\u0075t\u0069\u006f\u006e\u0073" {
			_fcecd, _geaccd := _g.ParseBool(_ccgbcf.Value)
			if _geaccd != nil {
				return _geaccd
			}
			_dffaga.PromptedSolutionsAttr = &_fcecd
			continue
		}
		if _ccgbcf.Name.Local == "\u0062\u0061\u0063\u006b\u0075\u0070\u0046\u0069\u006c\u0065" {
			_gbafc, _bagdb := _g.ParseBool(_ccgbcf.Value)
			if _bagdb != nil {
				return _bagdb
			}
			_dffaga.BackupFileAttr = &_gbafc
			continue
		}
		if _ccgbcf.Name.Local == "\u0073\u0061\u0076\u0065Ex\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b\u0056\u0061\u006c\u0075e\u0073" {
			_acegc, _egbaf := _g.ParseBool(_ccgbcf.Value)
			if _egbaf != nil {
				return _egbaf
			}
			_dffaga.SaveExternalLinkValuesAttr = &_acegc
			continue
		}
		if _ccgbcf.Name.Local == "u\u0070\u0064\u0061\u0074\u0065\u004c\u0069\u006e\u006b\u0073" {
			_dffaga.UpdateLinksAttr.UnmarshalXMLAttr(_ccgbcf)
			continue
		}
		if _ccgbcf.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dffaga.ShowObjectsAttr.UnmarshalXMLAttr(_ccgbcf)
			continue
		}
		if _ccgbcf.Name.Local == "\u0066\u0069\u006c\u0074\u0065\u0072\u0050\u0072\u0069\u0076\u0061\u0063\u0079" {
			_fcbbgf, _ebbaec := _g.ParseBool(_ccgbcf.Value)
			if _ebbaec != nil {
				return _ebbaec
			}
			_dffaga.FilterPrivacyAttr = &_fcbbgf
			continue
		}
		if _ccgbcf.Name.Local == "\u0073\u0068\u006f\u0077\u0049\u006e\u006b\u0041\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e" {
			_cgbaef, _cafdc := _g.ParseBool(_ccgbcf.Value)
			if _cafdc != nil {
				return _cafdc
			}
			_dffaga.ShowInkAnnotationAttr = &_cgbaef
			continue
		}
		if _ccgbcf.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0052\u0065\u0066\u0072\u0065\u0073\u0068Q\u0075\u0065\u0072\u0079" {
			_bfbfa, _efafc := _g.ParseBool(_ccgbcf.Value)
			if _efafc != nil {
				return _efafc
			}
			_dffaga.AllowRefreshQueryAttr = &_bfbfa
			continue
		}
		if _ccgbcf.Name.Local == "\u0070\u0075\u0062l\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073" {
			_bfggdg, _abcabg := _g.ParseBool(_ccgbcf.Value)
			if _abcabg != nil {
				return _abcabg
			}
			_dffaga.PublishItemsAttr = &_bfggdg
			continue
		}
		if _ccgbcf.Name.Local == "\u0063h\u0065c\u006b\u0043\u006f\u006d\u0070a\u0074\u0069b\u0069\u006c\u0069\u0074\u0079" {
			_bddabfe, _bdgdd := _g.ParseBool(_ccgbcf.Value)
			if _bdgdd != nil {
				return _bdgdd
			}
			_dffaga.CheckCompatibilityAttr = &_bddabfe
			continue
		}
		if _ccgbcf.Name.Local == "a\u0075t\u006f\u0043\u006f\u006d\u0070\u0072\u0065\u0073s\u0050\u0069\u0063\u0074ur\u0065\u0073" {
			_fedege, _egeaac := _g.ParseBool(_ccgbcf.Value)
			if _egeaac != nil {
				return _egeaac
			}
			_dffaga.AutoCompressPicturesAttr = &_fedege
			continue
		}
		if _ccgbcf.Name.Local == "r\u0065\u0066\u0072\u0065sh\u0041l\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u0069\u006f\u006e\u0073" {
			_dcafgf, _ebefa := _g.ParseBool(_ccgbcf.Value)
			if _ebefa != nil {
				return _ebefa
			}
			_dffaga.RefreshAllConnectionsAttr = &_dcafgf
			continue
		}
		if _ccgbcf.Name.Local == "\u0064\u0065\u0066\u0061ul\u0074\u0054\u0068\u0065\u006d\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_gcgdf, _egdgga := _g.ParseUint(_ccgbcf.Value, 10, 32)
			if _egdgga != nil {
				return _egdgga
			}
			_cffadf := uint32(_gcgdf)
			_dffaga.DefaultThemeVersionAttr = &_cffadf
			continue
		}
	}
	for {
		_fgddbe, _dadgcc := d.Token()
		if _dadgcc != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0057o\u0072k\u0062o\u006f\u006b\u0050\u0072\u003a\u0020\u0025s", _dadgcc)
		}
		if _gcgca, _gedae := _fgddbe.(_b.EndElement); _gedae && _gcgca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfeg *CT_Control) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0061\u0070\u0065\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cfeg.ShapeIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _cfeg.IdAttr)})
	if _cfeg.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cfeg.NameAttr)})
	}
	e.EncodeToken(start)
	if _cfeg.ControlPr != nil {
		_bceb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072"}}
		e.EncodeElement(_cfeg.ControlPr, _bceb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GroupMember struct {

	// Group Member Unique Name
	UniqueNameAttr string

	// Group
	GroupAttr *bool
}

func (_gbdcf ST_UpdateLinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gbdcf.String(), start)
}

// Validate validates the CT_ServerFormat and its children
func (_fgcacf *CT_ServerFormat) Validate() error {
	return _fgcacf.ValidateWithPath("\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074")
}
func (_caefc ST_TargetScreenSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_caefc.String(), start)
}

type CT_ColFields struct {

	// Repeated Items Count
	CountAttr *uint32

	// Field
	Field []*CT_Field
}
type CT_Borders struct {

	// Border Count
	CountAttr *uint32

	// Border
	Border []*CT_Border
}

// Validate validates the CT_Filter and its children
func (_efdgf *CT_Filter) Validate() error {
	return _efdgf.ValidateWithPath("\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r")
}

// ValidateWithPath validates the CT_NumFmts and its children, prefixing error messages with path
func (_eaccb *CT_NumFmts) ValidateWithPath(path string) error {
	for _aaaad, _cdcc := range _eaccb.NumFmt {
		if _ggfgdc := _cdcc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u0075\u006d\u0046\u006d\u0074\u005b\u0025\u0064\u005d", path, _aaaad)); _ggfgdc != nil {
			return _ggfgdc
		}
	}
	return nil
}
func (_cdfcg *CT_TableStyleInfo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgfdagb := range start.Attr {
		if _fgfdagb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abffd, _bcgfc := _fgfdagb.Value, error(nil)
			if _bcgfc != nil {
				return _bcgfc
			}
			_cdfcg.NameAttr = &_abffd
			continue
		}
		if _fgfdagb.Name.Local == "\u0073h\u006fw\u0046\u0069\u0072\u0073\u0074\u0043\u006f\u006c\u0075\u006d\u006e" {
			_abbec, _gdffa := _g.ParseBool(_fgfdagb.Value)
			if _gdffa != nil {
				return _gdffa
			}
			_cdfcg.ShowFirstColumnAttr = &_abbec
			continue
		}
		if _fgfdagb.Name.Local == "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e" {
			_fcdea, _dgfcd := _g.ParseBool(_fgfdagb.Value)
			if _dgfcd != nil {
				return _dgfcd
			}
			_cdfcg.ShowLastColumnAttr = &_fcdea
			continue
		}
		if _fgfdagb.Name.Local == "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_bdbgfa, _edecef := _g.ParseBool(_fgfdagb.Value)
			if _edecef != nil {
				return _edecef
			}
			_cdfcg.ShowRowStripesAttr = &_bdbgfa
			continue
		}
		if _fgfdagb.Name.Local == "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0053\u0074r\u0069\u0070\u0065\u0073" {
			_fbcaf, _cgbfec := _g.ParseBool(_fgfdagb.Value)
			if _cgbfec != nil {
				return _cgbfec
			}
			_cdfcg.ShowColumnStripesAttr = &_fbcaf
			continue
		}
	}
	for {
		_fbdbec, _cbfec := d.Token()
		if _cbfec != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f: \u0025\u0073", _cbfec)
		}
		if _aeacbd, _abgbde := _fbdbec.(_b.EndElement); _abgbde && _aeacbd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Map struct {

	// XML Mapping ID
	IDAttr uint32

	// XML Mapping Name
	NameAttr string

	// Root Element Name
	RootElementAttr string

	// Schema Name
	SchemaIDAttr string

	// Show Validation Errors
	ShowImportExportValidationErrorsAttr bool

	// AutoFit Table on Refresh
	AutoFitAttr bool

	// Append Data to Table
	AppendAttr bool

	// Preserve AutoFilter State
	PreserveSortAFLayoutAttr bool

	// Preserve Cell Formatting
	PreserveFormatAttr bool

	// XML Mapping
	DataBinding *CT_DataBinding
}

func (_bcdb *CT_Dxfs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _babbf := range start.Attr {
		if _babbf.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbec, _decgf := _g.ParseUint(_babbf.Value, 10, 32)
			if _decgf != nil {
				return _decgf
			}
			_decfb := uint32(_bbec)
			_bcdb.CountAttr = &_decfb
			continue
		}
	}
_gbgfab:
	for {
		_gbfacb, _gegec := d.Token()
		if _gegec != nil {
			return _gegec
		}
		switch _bbgbb := _gbfacb.(type) {
		case _b.StartElement:
			switch _bbgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0078\u0066"}:
				_fceac := NewCT_Dxf()
				if _cadb := d.DecodeElement(_fceac, &_bbgbb); _cadb != nil {
					return _cadb
				}
				_bcdb.Dxf = append(_bcdb.Dxf, _fceac)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0044\u0078\u0066\u0073\u0020\u0025\u0076", _bbgbb.Name)
				if _ecac := d.Skip(); _ecac != nil {
					return _ecac
				}
			}
		case _b.EndElement:
			break _gbgfab
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Metadata and its children, prefixing error messages with path
func (_abecbb *CT_Metadata) ValidateWithPath(path string) error {
	if _abecbb.MetadataTypes != nil {
		if _gegda := _abecbb.MetadataTypes.ValidateWithPath(path + "\u002f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061T\u0079\u0070\u0065\u0073"); _gegda != nil {
			return _gegda
		}
	}
	if _abecbb.MetadataStrings != nil {
		if _fecbbc := _abecbb.MetadataStrings.ValidateWithPath(path + "\u002f\u004de\u0074\u0061\u0064a\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0073"); _fecbbc != nil {
			return _fecbbc
		}
	}
	if _abecbb.MdxMetadata != nil {
		if _dbfeb := _abecbb.MdxMetadata.ValidateWithPath(path + "\u002f\u004d\u0064x\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _dbfeb != nil {
			return _dbfeb
		}
	}
	for _fgedc, _dcbece := range _abecbb.FutureMetadata {
		if _agffb := _dcbece.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0046\u0075tu\u0072e\u004d\u0065\u0074\u0061\u0064a\u0074\u0061\u005b\u0025\u0064\u005d", path, _fgedc)); _agffb != nil {
			return _agffb
		}
	}
	if _abecbb.CellMetadata != nil {
		if _cdad := _abecbb.CellMetadata.ValidateWithPath(path + "\u002f\u0043\u0065\u006c\u006c\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"); _cdad != nil {
			return _cdad
		}
	}
	if _abecbb.ValueMetadata != nil {
		if _bfebg := _abecbb.ValueMetadata.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0075\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061"); _bfebg != nil {
			return _bfebg
		}
	}
	if _abecbb.ExtLst != nil {
		if _gafbg := _abecbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gafbg != nil {
			return _gafbg
		}
	}
	return nil
}

type CT_Cfvo struct {

	// Type
	TypeAttr ST_CfvoType

	// Value
	ValAttr *string

	// Greater Than Or Equal
	GteAttr *bool
	ExtLst  *CT_ExtensionList
}

func (_faac *CT_ChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cgdfa:
	for {
		_bddf, _ebgd := d.Token()
		if _ebgd != nil {
			return _ebgd
		}
		switch _egbg := _bddf.(type) {
		case _b.StartElement:
			switch _egbg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_fcfga := NewCT_ChartsheetView()
				if _fgad := d.DecodeElement(_fcfga, &_egbg); _fgad != nil {
					return _fgad
				}
				_faac.SheetView = append(_faac.SheetView, _fcfga)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faac.ExtLst = NewCT_ExtensionList()
				if _bdcfc := d.DecodeElement(_faac.ExtLst, &_egbg); _bdcfc != nil {
					return _bdcfc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _egbg.Name)
				if _bgfd := d.Skip(); _bgfd != nil {
					return _bgfd
				}
			}
		case _b.EndElement:
			break _cgdfa
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ColorFilter() *CT_ColorFilter { _dbeb := &CT_ColorFilter{}; return _dbeb }

type CT_PivotSelection struct {

	// Pane
	PaneAttr ST_Pane

	// Show Header
	ShowHeaderAttr *bool

	// Label
	LabelAttr *bool

	// Data Selection
	DataAttr *bool

	// Extendable
	ExtendableAttr *bool

	// Selection Count
	CountAttr *uint32

	// Axis
	AxisAttr ST_Axis

	// Dimension
	DimensionAttr *uint32

	// Start
	StartAttr *uint32

	// Minimum
	MinAttr *uint32

	// Maximum
	MaxAttr *uint32

	// Active Row
	ActiveRowAttr *uint32

	// Active Column
	ActiveColAttr *uint32

	// Previous Row
	PreviousRowAttr *uint32

	// Previous Column Selection
	PreviousColAttr *uint32

	// Click Count
	ClickAttr *uint32
	IdAttr    *string

	// Pivot Area
	PivotArea *CT_PivotArea
}

const (
	ST_PageOrderUnset        ST_PageOrder = 0
	ST_PageOrderDownThenOver ST_PageOrder = 1
	ST_PageOrderOverThenDown ST_PageOrder = 2
)

func NewCT_Query() *CT_Query     { _bgeg := &CT_Query{}; return _bgeg }
func NewCT_Filters() *CT_Filters { _gddgd := &CT_Filters{}; return _gddgd }

// ValidateWithPath validates the CT_PivotAreaReference and its children, prefixing error messages with path
func (_agcefe *CT_PivotAreaReference) ValidateWithPath(path string) error {
	for _bbdbd, _gfefb := range _agcefe.X {
		if _acfcb := _gfefb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _bbdbd)); _acfcb != nil {
			return _acfcb
		}
	}
	if _agcefe.ExtLst != nil {
		if _fabgea := _agcefe.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fabgea != nil {
			return _fabgea
		}
	}
	return nil
}
func (_dbefeg ST_ItemType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_agabef := _b.Attr{}
	_agabef.Name = name
	switch _dbefeg {
	case ST_ItemTypeUnset:
		_agabef.Value = ""
	case ST_ItemTypeData:
		_agabef.Value = "\u0064\u0061\u0074\u0061"
	case ST_ItemTypeDefault:
		_agabef.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_ItemTypeSum:
		_agabef.Value = "\u0073\u0075\u006d"
	case ST_ItemTypeCountA:
		_agabef.Value = "\u0063\u006f\u0075\u006e\u0074\u0041"
	case ST_ItemTypeAvg:
		_agabef.Value = "\u0061\u0076\u0067"
	case ST_ItemTypeMax:
		_agabef.Value = "\u006d\u0061\u0078"
	case ST_ItemTypeMin:
		_agabef.Value = "\u006d\u0069\u006e"
	case ST_ItemTypeProduct:
		_agabef.Value = "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case ST_ItemTypeCount:
		_agabef.Value = "\u0063\u006f\u0075n\u0074"
	case ST_ItemTypeStdDev:
		_agabef.Value = "\u0073\u0074\u0064\u0044\u0065\u0076"
	case ST_ItemTypeStdDevP:
		_agabef.Value = "\u0073t\u0064\u0044\u0065\u0076\u0050"
	case ST_ItemTypeVar:
		_agabef.Value = "\u0076\u0061\u0072"
	case ST_ItemTypeVarP:
		_agabef.Value = "\u0076\u0061\u0072\u0050"
	case ST_ItemTypeGrand:
		_agabef.Value = "\u0067\u0072\u0061n\u0064"
	case ST_ItemTypeBlank:
		_agabef.Value = "\u0062\u006c\u0061n\u006b"
	}
	return _agabef, nil
}

type CT_CalculatedItem struct {

	// Field Index
	FieldAttr *uint32

	// Calculated Item Formula
	FormulaAttr *string

	// Calculated Item Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_agfa *CT_CustomWorkbookViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfcc:
	for {
		_beece, _bgfag := d.Token()
		if _bgfag != nil {
			return _bgfag
		}
		switch _gbfee := _beece.(type) {
		case _b.StartElement:
			switch _gbfee.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062\u006fo\u006b\u0056\u0069\u0065\u0077"}:
				_fdac := NewCT_CustomWorkbookView()
				if _efccb := d.DecodeElement(_fdac, &_gbfee); _efccb != nil {
					return _efccb
				}
				_agfa.CustomWorkbookView = append(_agfa.CustomWorkbookView, _fdac)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0075\u0073\u0074o\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073\u0020\u0025\u0076", _gbfee.Name)
				if _gcbed := d.Skip(); _gcbed != nil {
					return _gcbed
				}
			}
		case _b.EndElement:
			break _gfcc
		case _b.CharData:
		}
	}
	return nil
}
func (_eaede *Workbook) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "m\u0061\u003a\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b"
	return _eaede.CT_Workbook.MarshalXML(e, start)
}
func (_bcefd ST_DataValidationType) ValidateWithPath(path string) error {
	switch _bcefd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bcefd))
	}
	return nil
}
func (_cgeb *CT_IgnoredError) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", _cgeb.SqrefAttr)})
	if _cgeb.EvalErrorAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065v\u0061\u006c\u0045\u0072\u0072\u006fr"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.EvalErrorAttr))})
	}
	if _cgeb.TwoDigitTextYearAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0077o\u0044\u0069\u0067i\u0074\u0054\u0065\u0078\u0074\u0059\u0065\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.TwoDigitTextYearAttr))})
	}
	if _cgeb.NumberStoredAsTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006eu\u006db\u0065\u0072\u0053\u0074\u006fr\u0065\u0064A\u0073\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.NumberStoredAsTextAttr))})
	}
	if _cgeb.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.FormulaAttr))})
	}
	if _cgeb.FormulaRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072m\u0075\u006c\u0061\u0052\u0061\u006e\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.FormulaRangeAttr))})
	}
	if _cgeb.UnlockedFormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075n\u006co\u0063\u006b\u0065\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.UnlockedFormulaAttr))})
	}
	if _cgeb.EmptyCellReferenceAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065m\u0070t\u0079\u0043\u0065\u006c\u006cR\u0065\u0066e\u0072\u0065\u006e\u0063\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.EmptyCellReferenceAttr))})
	}
	if _cgeb.ListDataValidationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ci\u0073t\u0044\u0061\u0074\u0061\u0056a\u006c\u0069d\u0061\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.ListDataValidationAttr))})
	}
	if _cgeb.CalculatedColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0061l\u0063\u0075\u006ca\u0074\u0065\u0064\u0043\u006f\u006c\u0075\u006d\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgeb.CalculatedColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextHAlignUnset       ST_TextHAlign = 0
	ST_TextHAlignLeft        ST_TextHAlign = 1
	ST_TextHAlignCenter      ST_TextHAlign = 2
	ST_TextHAlignRight       ST_TextHAlign = 3
	ST_TextHAlignJustify     ST_TextHAlign = 4
	ST_TextHAlignDistributed ST_TextHAlign = 5
)

func (_cbcbce *CT_TableMissing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for {
		_bffac, _acfaf := d.Token()
		if _acfaf != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u004di\u0073\u0073\u0069n\u0067:\u0020\u0025\u0073", _acfaf)
		}
		if _adfcb, _ccfag := _bffac.(_b.EndElement); _ccfag && _adfcb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_FieldGroup and its children
func (_ceff *CT_FieldGroup) Validate() error {
	return _ceff.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070")
}
func (_gdbgc *ST_UpdateLinks) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_badfe, _bdgfcaa := d.Token()
	if _bdgfcaa != nil {
		return _bdgfcaa
	}
	if _ffdbbe, _ceadeb := _badfe.(_b.EndElement); _ceadeb && _ffdbbe.Name == start.Name {
		*_gdbgc = 1
		return nil
	}
	if _eaacb, _gdbca := _badfe.(_b.CharData); !_gdbca {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _badfe)
	} else {
		switch string(_eaacb) {
		case "":
			*_gdbgc = 0
		case "\u0075s\u0065\u0072\u0053\u0065\u0074":
			*_gdbgc = 1
		case "\u006e\u0065\u0076e\u0072":
			*_gdbgc = 2
		case "\u0061\u006c\u0077\u0061\u0079\u0073":
			*_gdbgc = 3
		}
	}
	_badfe, _bdgfcaa = d.Token()
	if _bdgfcaa != nil {
		return _bdgfcaa
	}
	if _ccgcgd, _ageadb := _badfe.(_b.EndElement); _ageadb && _ccgcgd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _badfe)
}
func (_fffgf *CT_MeasureGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbbaee := range start.Attr {
		if _fbbaee.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bfag, _eabff := _g.ParseUint(_fbbaee.Value, 10, 32)
			if _eabff != nil {
				return _eabff
			}
			_eegd := uint32(_bfag)
			_fffgf.CountAttr = &_eegd
			continue
		}
	}
_ebgbg:
	for {
		_gcfae, _cefdb := d.Token()
		if _cefdb != nil {
			return _cefdb
		}
		switch _feegg := _gcfae.(type) {
		case _b.StartElement:
			switch _feegg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}:
				_dbcgf := NewCT_MeasureGroup()
				if _aagdd := d.DecodeElement(_dbcgf, &_feegg); _aagdd != nil {
					return _aagdd
				}
				_fffgf.MeasureGroup = append(_fffgf.MeasureGroup, _dbcgf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025v", _feegg.Name)
				if _fagce := d.Skip(); _fagce != nil {
					return _fagce
				}
			}
		case _b.EndElement:
			break _ebgbg
		case _b.CharData:
		}
	}
	return nil
}

type ST_SortType byte

func (_cdeffe ST_SheetState) ValidateWithPath(path string) error {
	switch _cdeffe {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdeffe))
	}
	return nil
}
func NewCT_Colors() *CT_Colors { _ddedb := &CT_Colors{}; return _ddedb }

// Validate validates the CT_GroupLevel and its children
func (_cdegd *CT_GroupLevel) Validate() error {
	return _cdegd.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c")
}
func (_aabc *CT_PageSetUpPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aabc.AutoPageBreaksAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0061\u0067\u0065\u0042r\u0065\u0061\u006b\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aabc.AutoPageBreaksAttr))})
	}
	if _aabc.FitToPageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0074\u0054\u006f\u0050\u0061\u0067e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aabc.FitToPageAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_RevData and its children, prefixing error messages with path
func (_fc *AG_RevData) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_ExternalLinkChoice and its children
func (_gebdf *CT_ExternalLinkChoice) Validate() error {
	return _gebdf.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u004c\u0069\u006ek\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_dddfb ST_DataValidationOperator) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeeaee := _b.Attr{}
	_aeeaee.Name = name
	switch _dddfb {
	case ST_DataValidationOperatorUnset:
		_aeeaee.Value = ""
	case ST_DataValidationOperatorBetween:
		_aeeaee.Value = "\u0062e\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorNotBetween:
		_aeeaee.Value = "\u006e\u006f\u0074\u0042\u0065\u0074\u0077\u0065\u0065\u006e"
	case ST_DataValidationOperatorEqual:
		_aeeaee.Value = "\u0065\u0071\u0075a\u006c"
	case ST_DataValidationOperatorNotEqual:
		_aeeaee.Value = "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorLessThan:
		_aeeaee.Value = "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorLessThanOrEqual:
		_aeeaee.Value = "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c"
	case ST_DataValidationOperatorGreaterThan:
		_aeeaee.Value = "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e"
	case ST_DataValidationOperatorGreaterThanOrEqual:
		_aeeaee.Value = "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c"
	}
	return _aeeaee, nil
}

// Validate validates the CT_OleObject and its children
func (_ccagc *CT_OleObject) Validate() error {
	return _ccagc.ValidateWithPath("\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074")
}

type ExternalLink struct{ CT_ExternalLink }

func (_edgfb *ST_PhoneticAlignment) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_edgfb = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_edgfb = 1
	case "\u006c\u0065\u0066\u0074":
		*_edgfb = 2
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_edgfb = 3
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_edgfb = 4
	}
	return nil
}
func NewCT_Scenario() *CT_Scenario { _beadea := &CT_Scenario{}; return _beadea }

// Validate validates the CT_ChartFormats and its children
func (_bdfb *CT_ChartFormats) Validate() error {
	return _bdfb.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073")
}

type CT_MapInfo struct {

	// Prefix Mappings for XPath Expressions
	SelectionNamespacesAttr string

	// XML Schema
	Schema []*CT_Schema

	// XML Mapping Properties
	Map []*CT_Map
}

func (_dgbaf ST_PhoneticType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dfdgg := _b.Attr{}
	_dfdgg.Name = name
	switch _dgbaf {
	case ST_PhoneticTypeUnset:
		_dfdgg.Value = ""
	case ST_PhoneticTypeHalfwidthKatakana:
		_dfdgg.Value = "\u0068\u0061\u006c\u0066\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeFullwidthKatakana:
		_dfdgg.Value = "\u0066\u0075\u006c\u006c\u0077\u0069\u0064\u0074\u0068\u004b\u0061\u0074a\u006b\u0061\u006e\u0061"
	case ST_PhoneticTypeHiragana:
		_dfdgg.Value = "\u0048\u0069\u0072\u0061\u0067\u0061\u006e\u0061"
	case ST_PhoneticTypeNoConversion:
		_dfdgg.Value = "\u006e\u006f\u0043o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e"
	}
	return _dfdgg, nil
}

// Validate validates the CT_ExternalSheetNames and its children
func (_gbadf *CT_ExternalSheetNames) Validate() error {
	return _gbadf.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073")
}

type CT_LevelGroup struct {

	// Group Name
	NameAttr string

	// Unique Group Name
	UniqueNameAttr string

	// Group Caption
	CaptionAttr string

	// Parent Unique Name
	UniqueParentAttr *string

	// Group Id
	IdAttr *int32

	// OLAP Group Members
	GroupMembers *CT_GroupMembers
}

func NewCT_TableColumn() *CT_TableColumn { _egcace := &CT_TableColumn{}; return _egcace }

type CT_Comments struct {

	// Authors
	Authors *CT_Authors

	// List of Comments
	CommentList *CT_CommentList
	ExtLst      *CT_ExtensionList
}

func (_cccg *CT_ChartsheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cccg.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cccg.PublishedAttr))})
	}
	if _cccg.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cccg.CodeNameAttr)})
	}
	e.EncodeToken(start)
	if _cccg.TabColor != nil {
		_cdeee := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_cccg.TabColor, _cdeee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ExtensionList() *CT_ExtensionList { _dfde := &CT_ExtensionList{}; return _dfde }

// Validate validates the CT_SheetData and its children
func (_daecb *CT_SheetData) Validate() error {
	return _daecb.ValidateWithPath("\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061")
}

// Validate validates the CT_MeasureGroup and its children
func (_dedda *CT_MeasureGroup) Validate() error {
	return _dedda.ValidateWithPath("\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070")
}

// ValidateWithPath validates the CT_HierarchyUsage and its children, prefixing error messages with path
func (_fbbe *CT_HierarchyUsage) ValidateWithPath(path string) error { return nil }
func (_bcbcfb ST_Scope) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gcddec := _b.Attr{}
	_gcddec.Name = name
	switch _bcbcfb {
	case ST_ScopeUnset:
		_gcddec.Value = ""
	case ST_ScopeSelection:
		_gcddec.Value = "\u0073e\u006c\u0065\u0063\u0074\u0069\u006fn"
	case ST_ScopeData:
		_gcddec.Value = "\u0064\u0061\u0074\u0061"
	case ST_ScopeField:
		_gcddec.Value = "\u0066\u0069\u0065l\u0064"
	}
	return _gcddec, nil
}
func (_gcgabag *CT_Scenarios) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gcgabag.CurrentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063u\u0072\u0072\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gcgabag.CurrentAttr)})
	}
	if _gcgabag.ShowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_gcgabag.ShowAttr)})
	}
	if _gcgabag.SqrefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0071\u0072e\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_gcgabag.SqrefAttr)})
	}
	e.EncodeToken(start)
	_geeef := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0073\u0063\u0065\u006e\u0061\u0072\u0069\u006f"}}
	for _, _dfadeg := range _gcgabag.Scenario {
		e.EncodeElement(_dfadeg, _geeef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Tuple and its children
func (_egaebd *CT_Tuple) Validate() error {
	return _egaebd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065")
}
func (_dcgcf *CT_HeaderFooter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcgab := range start.Attr {
		if _gcgab.Name.Local == "\u0064\u0069f\u0066\u0065\u0072e\u006e\u0074\u004f\u0064\u0064\u0045\u0076\u0065\u006e" {
			_dffb, _caca := _g.ParseBool(_gcgab.Value)
			if _caca != nil {
				return _caca
			}
			_dcgcf.DifferentOddEvenAttr = &_dffb
			continue
		}
		if _gcgab.Name.Local == "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074F\u0069\u0072\u0073\u0074" {
			_abgcf, _bbebg := _g.ParseBool(_gcgab.Value)
			if _bbebg != nil {
				return _bbebg
			}
			_dcgcf.DifferentFirstAttr = &_abgcf
			continue
		}
		if _gcgab.Name.Local == "\u0073\u0063\u0061l\u0065\u0057\u0069\u0074\u0068\u0044\u006f\u0063" {
			_fcaff, _ffgdd := _g.ParseBool(_gcgab.Value)
			if _ffgdd != nil {
				return _ffgdd
			}
			_dcgcf.ScaleWithDocAttr = &_fcaff
			continue
		}
		if _gcgab.Name.Local == "\u0061\u006ci\u0067\u006e\u0057i\u0074\u0068\u004d\u0061\u0072\u0067\u0069\u006e\u0073" {
			_fgeba, _gabaa := _g.ParseBool(_gcgab.Value)
			if _gabaa != nil {
				return _gabaa
			}
			_dcgcf.AlignWithMarginsAttr = &_fgeba
			continue
		}
	}
_dfafc:
	for {
		_ggcag, _cfcea := d.Token()
		if _cfcea != nil {
			return _cfcea
		}
		switch _bgfbe := _ggcag.(type) {
		case _b.StartElement:
			switch _bgfbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0048\u0065\u0061\u0064\u0065r"}:
				_dcgcf.OddHeader = new(string)
				if _acgfe := d.DecodeElement(_dcgcf.OddHeader, &_bgfbe); _acgfe != nil {
					return _acgfe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fd\u0064\u0046\u006f\u006f\u0074\u0065r"}:
				_dcgcf.OddFooter = new(string)
				if _caacb := d.DecodeElement(_dcgcf.OddFooter, &_bgfbe); _caacb != nil {
					return _caacb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_dcgcf.EvenHeader = new(string)
				if _daccd := d.DecodeElement(_dcgcf.EvenHeader, &_bgfbe); _daccd != nil {
					return _daccd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0076\u0065\u006e\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dcgcf.EvenFooter = new(string)
				if _bcccb := d.DecodeElement(_dcgcf.EvenFooter, &_bgfbe); _bcccb != nil {
					return _bcccb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0048\u0065\u0061\u0064\u0065\u0072"}:
				_dcgcf.FirstHeader = new(string)
				if _dacgfa := d.DecodeElement(_dcgcf.FirstHeader, &_bgfbe); _dacgfa != nil {
					return _dacgfa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u0072\u0073\u0074\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_dcgcf.FirstFooter = new(string)
				if _efab := d.DecodeElement(_dcgcf.FirstFooter, &_bgfbe); _efab != nil {
					return _efab
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072\u0020\u0025\u0076", _bgfbe.Name)
				if _bgbb := d.Skip(); _bgbb != nil {
					return _bgbb
				}
			}
		case _b.EndElement:
			break _dfafc
		case _b.CharData:
		}
	}
	return nil
}
func (_baegb ST_Type) ValidateWithPath(path string) error {
	switch _baegb {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baegb))
	}
	return nil
}
func (_bbae *CT_CustomProperty) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _bbae.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bbae.IdAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fabgg *ST_RevisionAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cdfcc, _efgaa := d.Token()
	if _efgaa != nil {
		return _efgaa
	}
	if _bdffb, _fefag := _cdfcc.(_b.EndElement); _fefag && _bdffb.Name == start.Name {
		*_fabgg = 1
		return nil
	}
	if _cedeee, _dfbecb := _cdfcc.(_b.CharData); !_dfbecb {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdfcc)
	} else {
		switch string(_cedeee) {
		case "":
			*_fabgg = 0
		case "\u0061\u0064\u0064":
			*_fabgg = 1
		case "\u0064\u0065\u006c\u0065\u0074\u0065":
			*_fabgg = 2
		}
	}
	_cdfcc, _efgaa = d.Token()
	if _efgaa != nil {
		return _efgaa
	}
	if _gbceb, _beaee := _cdfcc.(_b.EndElement); _beaee && _gbceb.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdfcc)
}

const (
	ST_DvAspectUnset            ST_DvAspect = 0
	ST_DvAspectDVASPECT_CONTENT ST_DvAspect = 1
	ST_DvAspectDVASPECT_ICON    ST_DvAspect = 2
)

func NewCT_OutlinePr() *CT_OutlinePr { _dbecgc := &CT_OutlinePr{}; return _dbecgc }
func (_ffbac *CT_TableStyleElement) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	_geae, _eaade := _ffbac.TypeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _eaade != nil {
		return _eaade
	}
	start.Attr = append(start.Attr, _geae)
	if _ffbac.SizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0069\u007a\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ffbac.SizeAttr)})
	}
	if _ffbac.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffbac.DxfIdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FieldsUsage and its children, prefixing error messages with path
func (_gffea *CT_FieldsUsage) ValidateWithPath(path string) error {
	for _dcea, _ebefd := range _gffea.FieldUsage {
		if _eagaf := _ebefd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067e\u005b\u0025\u0064\u005d", path, _dcea)); _eagaf != nil {
			return _eagaf
		}
	}
	return nil
}
func NewCT_Tuple() *CT_Tuple { _cbdeeb := &CT_Tuple{}; return _cbdeeb }

// ValidateWithPath validates the CT_LevelGroup and its children, prefixing error messages with path
func (_aaeag *CT_LevelGroup) ValidateWithPath(path string) error {
	if _fggdg := _aaeag.GroupMembers.ValidateWithPath(path + "\u002f\u0047\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"); _fggdg != nil {
		return _fggdg
	}
	return nil
}
func (_cagggg ST_TargetScreenSize) ValidateWithPath(path string) error {
	switch _cagggg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cagggg))
	}
	return nil
}

// Validate validates the CT_Location and its children
func (_gggcg *CT_Location) Validate() error {
	return _gggcg.ValidateWithPath("C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e")
}

// ValidateWithPath validates the CT_VolTopic and its children, prefixing error messages with path
func (_bddef *CT_VolTopic) ValidateWithPath(path string) error {
	if _fggcc := _bddef.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _fggcc != nil {
		return _fggcc
	}
	for _eccgfb, _cdccdb := range _bddef.Tr {
		if _ccgad := _cdccdb.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _eccgfb)); _ccgad != nil {
			return _ccgad
		}
	}
	return nil
}
func (_gceeb *CT_Rst) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fdabg:
	for {
		_gffdc, _bgged := d.Token()
		if _bgged != nil {
			return _bgged
		}
		switch _fdfae := _gffdc.(type) {
		case _b.StartElement:
			switch _fdfae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_gceeb.T = new(string)
				if _dfcba := d.DecodeElement(_gceeb.T, &_fdfae); _dfcba != nil {
					return _dfcba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_fgcgc := NewCT_RElt()
				if _bgegd := d.DecodeElement(_fgcgc, &_fdfae); _bgegd != nil {
					return _bgegd
				}
				_gceeb.R = append(_gceeb.R, _fgcgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0068"}:
				_degef := NewCT_PhoneticRun()
				if _geecd := d.DecodeElement(_degef, &_fdfae); _geecd != nil {
					return _geecd
				}
				_gceeb.RPh = append(_gceeb.RPh, _degef)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072"}:
				_gceeb.PhoneticPr = NewCT_PhoneticPr()
				if _bfceb := d.DecodeElement(_gceeb.PhoneticPr, &_fdfae); _bfceb != nil {
					return _bfceb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0073\u0074\u0020\u0025\u0076", _fdfae.Name)
				if _ecdga := d.Skip(); _ecdga != nil {
					return _ecdga
				}
			}
		case _b.EndElement:
			break _fdabg
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_UnderlineValuesUnset            ST_UnderlineValues = 0
	ST_UnderlineValuesSingle           ST_UnderlineValues = 1
	ST_UnderlineValuesDouble           ST_UnderlineValues = 2
	ST_UnderlineValuesSingleAccounting ST_UnderlineValues = 3
	ST_UnderlineValuesDoubleAccounting ST_UnderlineValues = 4
	ST_UnderlineValuesNone             ST_UnderlineValues = 5
)

func (_fdcag *CT_NumFmts) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fdcag.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fdcag.CountAttr)})
	}
	e.EncodeToken(start)
	if _fdcag.NumFmt != nil {
		_dbdge := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u006e\u0075\u006d\u0046\u006dt"}}
		for _, _facbe := range _fdcag.NumFmt {
			e.EncodeElement(_facbe, _dbdge)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbf *CT_CellWatches) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_ebee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ac\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068"}}
	for _, _cdef := range _fbf.CellWatch {
		e.EncodeElement(_cdef, _ebee)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_cgfc *CT_CellWatches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_feag:
	for {
		_bcce, _gdac := d.Token()
		if _gdac != nil {
			return _gdac
		}
		switch _eaba := _bcce.(type) {
		case _b.StartElement:
			switch _eaba.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063e\u006c\u006c\u0057\u0061\u0074\u0063h"}:
				_deeb := NewCT_CellWatch()
				if _gbdc := d.DecodeElement(_deeb, &_eaba); _gbdc != nil {
					return _gbdc
				}
				_cgfc.CellWatch = append(_cgfc.CellWatch, _deeb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061\u0074c\u0068e\u0073\u0020\u0025\u0076", _eaba.Name)
				if _acgfc := d.Skip(); _acgfc != nil {
					return _acgfc
				}
			}
		case _b.EndElement:
			break _feag
		case _b.CharData:
		}
	}
	return nil
}
func (_cfegeg ST_DataConsolidateFunction) String() string {
	switch _cfegeg {
	case 0:
		return ""
	case 1:
		return "\u0061v\u0065\u0072\u0061\u0067\u0065"
	case 2:
		return "\u0063\u006f\u0075n\u0074"
	case 3:
		return "\u0063o\u0075\u006e\u0074\u004e\u0075\u006ds"
	case 4:
		return "\u006d\u0061\u0078"
	case 5:
		return "\u006d\u0069\u006e"
	case 6:
		return "\u0070r\u006f\u0064\u0075\u0063\u0074"
	case 7:
		return "\u0073\u0074\u0064\u0044\u0065\u0076"
	case 8:
		return "\u0073t\u0064\u0044\u0065\u0076\u0070"
	case 9:
		return "\u0073\u0075\u006d"
	case 10:
		return "\u0076\u0061\u0072"
	case 11:
		return "\u0076\u0061\u0072\u0070"
	}
	return ""
}

// ValidateWithPath validates the CT_RevisionSheetRename and its children, prefixing error messages with path
func (_efef *CT_RevisionSheetRename) ValidateWithPath(path string) error {
	if _efef.ExtLst != nil {
		if _acdfcf := _efef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdfcf != nil {
			return _acdfcf
		}
	}
	return nil
}
func (_fbaea *CT_ExternalSheetName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecad := range start.Attr {
		if _ecad.Name.Local == "\u0076\u0061\u006c" {
			_bcgbcc, _bcfad := _ecad.Value, error(nil)
			if _bcfad != nil {
				return _bcfad
			}
			_fbaea.ValAttr = &_bcgbcc
			continue
		}
	}
	for {
		_dbbd, _fadag := d.Token()
		if _fadag != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0045\u0078\u0074\u0065r\u006ea\u006c\u0053\u0068\u0065\u0065\u0074\u004e\u0061\u006d\u0065\u003a\u0020\u0025\u0073", _fadag)
		}
		if _cdeaa, _ecddd := _dbbd.(_b.EndElement); _ecddd && _cdeaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bffba ST_RefMode) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edeab := _b.Attr{}
	_edeab.Name = name
	switch _bffba {
	case ST_RefModeUnset:
		_edeab.Value = ""
	case ST_RefModeA1:
		_edeab.Value = "\u0041\u0031"
	case ST_RefModeR1C1:
		_edeab.Value = "\u0052\u0031\u0043\u0031"
	}
	return _edeab, nil
}

// ValidateWithPath validates the CT_PageBreak and its children, prefixing error messages with path
func (_gccfa *CT_PageBreak) ValidateWithPath(path string) error {
	for _eabgg, _bcfd := range _gccfa.Brk {
		if _bddbfe := _bcfd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0042\u0072\u006b\u005b\u0025\u0064\u005d", path, _eabgg)); _bddbfe != nil {
			return _bddbfe
		}
	}
	return nil
}

type CT_MeasureGroup struct {

	// Measure Group Name
	NameAttr string

	// Measure Group Display Name
	CaptionAttr string
}

func (_ccadd *CT_VolTopic) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fabbg := range start.Attr {
		if _fabbg.Name.Local == "\u0074" {
			_ccadd.TAttr.UnmarshalXMLAttr(_fabbg)
			continue
		}
	}
_cbaag:
	for {
		_cccccc, _gggfa := d.Token()
		if _gggfa != nil {
			return _gggfa
		}
		switch _dgbgb := _cccccc.(type) {
		case _b.StartElement:
			switch _dgbgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076"}:
				if _beedf := d.DecodeElement(&_ccadd.V, &_dgbgb); _beedf != nil {
					return _beedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0070"}:
				var _ecfgd string
				if _ceacea := d.DecodeElement(&_ecfgd, &_dgbgb); _ceacea != nil {
					return _ceacea
				}
				_ccadd.Stp = append(_ccadd.Stp, _ecfgd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_gbgca := NewCT_VolTopicRef()
				if _aeegd := d.DecodeElement(_gbgca, &_dgbgb); _aeegd != nil {
					return _aeegd
				}
				_ccadd.Tr = append(_ccadd.Tr, _gbgca)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0020\u0025\u0076", _dgbgb.Name)
				if _gcfgef := d.Skip(); _gcfgef != nil {
					return _gcfgef
				}
			}
		case _b.EndElement:
			break _cbaag
		case _b.CharData:
		}
	}
	return nil
}

type CT_RevisionSheetRename struct {

	// Sheet Id
	SheetIdAttr uint32

	// Old Sheet Name
	OldNameAttr string

	// New Sheet Name
	NewNameAttr string
	ExtLst      *CT_ExtensionList
	RIdAttr     *uint32
	UaAttr      *bool
	RaAttr      *bool
}

func (_dgdaf ST_CredMethod) String() string {
	switch _dgdaf {
	case 0:
		return ""
	case 1:
		return "\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u0074\u0065\u0064"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "\u0073\u0074\u006f\u0072\u0065\u0064"
	case 4:
		return "\u0070\u0072\u006f\u006d\u0070\u0074"
	}
	return ""
}
func (_da *CT_Authors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _da.Author != nil {
		_fea := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u0075\u0074\u0068\u006fr"}}
		for _, _fce := range _da.Author {
			e.EncodeElement(_fce, _fea)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gffg *CT_DdeItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dfbg := range start.Attr {
		if _dfbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cegf, _dfcg := _dfbg.Value, error(nil)
			if _dfcg != nil {
				return _dfcg
			}
			_gffg.NameAttr = &_cegf
			continue
		}
		if _dfbg.Name.Local == "\u006f\u006c\u0065" {
			_bbafd, _cgfd := _g.ParseBool(_dfbg.Value)
			if _cgfd != nil {
				return _cgfd
			}
			_gffg.OleAttr = &_bbafd
			continue
		}
		if _dfbg.Name.Local == "\u0061\u0064\u0076\u0069\u0073\u0065" {
			_acagd, _eega := _g.ParseBool(_dfbg.Value)
			if _eega != nil {
				return _eega
			}
			_gffg.AdviseAttr = &_acagd
			continue
		}
		if _dfbg.Name.Local == "\u0070r\u0065\u0066\u0065\u0072\u0050\u0069c" {
			_cfece, _gggce := _g.ParseBool(_dfbg.Value)
			if _gggce != nil {
				return _gggce
			}
			_gffg.PreferPicAttr = &_cfece
			continue
		}
	}
_baaf:
	for {
		_dege, _beegb := d.Token()
		if _beegb != nil {
			return _beegb
		}
		switch _baadf := _dege.(type) {
		case _b.StartElement:
			switch _baadf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006c\u0075\u0065\u0073"}:
				_gffg.Values = NewCT_DdeValues()
				if _bdga := d.DecodeElement(_gffg.Values, &_baadf); _bdga != nil {
					return _bdga
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0064\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _baadf.Name)
				if _afcfb := d.Skip(); _afcfb != nil {
					return _afcfb
				}
			}
		case _b.EndElement:
			break _baaf
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableStyle and its children
func (_gdgecd *CT_TableStyle) Validate() error {
	return _gdgecd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}

const (
	ST_DataValidationTypeUnset      ST_DataValidationType = 0
	ST_DataValidationTypeNone       ST_DataValidationType = 1
	ST_DataValidationTypeWhole      ST_DataValidationType = 2
	ST_DataValidationTypeDecimal    ST_DataValidationType = 3
	ST_DataValidationTypeList       ST_DataValidationType = 4
	ST_DataValidationTypeDate       ST_DataValidationType = 5
	ST_DataValidationTypeTime       ST_DataValidationType = 6
	ST_DataValidationTypeTextLength ST_DataValidationType = 7
	ST_DataValidationTypeCustom     ST_DataValidationType = 8
)

func NewCT_MetadataTypes() *CT_MetadataTypes { _dcdab := &CT_MetadataTypes{}; return _dcdab }

type ST_TimePeriod byte

func (_abgbgf *CT_MRUColors) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_abdaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	for _, _ecfge := range _abgbgf.Color {
		e.EncodeElement(_ecfge, _abdaf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_effc *CT_Table) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_effc.TableColumns = NewCT_TableColumns()
	for _, _ddaedb := range start.Attr {
		if _ddaedb.Name.Local == "\u0064a\u0074\u0061\u0044\u0078\u0066\u0049d" {
			_bbfeebc, _adbaea := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _adbaea != nil {
				return _adbaea
			}
			_agcdb := uint32(_bbfeebc)
			_effc.DataDxfIdAttr = &_agcdb
			continue
		}
		if _ddaedb.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_cafea, _eedae := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _eedae != nil {
				return _eedae
			}
			_ggfgg := uint32(_cafea)
			_effc.TotalsRowDxfIdAttr = &_ggfgg
			continue
		}
		if _ddaedb.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbbgc, _debde := _ddaedb.Value, error(nil)
			if _debde != nil {
				return _debde
			}
			_effc.NameAttr = &_fbbgc
			continue
		}
		if _ddaedb.Name.Local == "h\u0065a\u0064\u0065\u0072\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_efbf, _efgge := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _efgge != nil {
				return _efgge
			}
			_egddc := uint32(_efbf)
			_effc.HeaderRowBorderDxfIdAttr = &_egddc
			continue
		}
		if _ddaedb.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_eeaga, _abcdb := _ddaedb.Value, error(nil)
			if _abcdb != nil {
				return _abcdb
			}
			_effc.CommentAttr = &_eeaga
			continue
		}
		if _ddaedb.Name.Local == "\u0074\u0061b\u006c\u0065\u0042o\u0072\u0064\u0065\u0072\u0044\u0078\u0066\u0049\u0064" {
			_bedbfg, _bbgfc := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _bbgfc != nil {
				return _bbgfc
			}
			_beadbf := uint32(_bedbfg)
			_effc.TableBorderDxfIdAttr = &_beadbf
			continue
		}
		if _ddaedb.Name.Local == "\u0074a\u0062\u006c\u0065\u0054\u0079\u0070e" {
			_effc.TableTypeAttr.UnmarshalXMLAttr(_ddaedb)
			continue
		}
		if _ddaedb.Name.Local == "t\u006ft\u0061\u006c\u0073\u0052\u006f\u0077\u0042\u006fr\u0064\u0065\u0072\u0044xf\u0049\u0064" {
			_gegbeb, _bgfca := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _bgfca != nil {
				return _bgfca
			}
			_gcfed := uint32(_gegbeb)
			_effc.TotalsRowBorderDxfIdAttr = &_gcfed
			continue
		}
		if _ddaedb.Name.Local == "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw" {
			_ecbcg, _caabab := _g.ParseBool(_ddaedb.Value)
			if _caabab != nil {
				return _caabab
			}
			_effc.InsertRowAttr = &_ecbcg
			continue
		}
		if _ddaedb.Name.Local == "\u0068e\u0061d\u0065\u0072\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_badfb, _dagfe := _ddaedb.Value, error(nil)
			if _dagfe != nil {
				return _dagfe
			}
			_effc.HeaderRowCellStyleAttr = &_badfb
			continue
		}
		if _ddaedb.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_bbcdg, _gfeba := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _gfeba != nil {
				return _gfeba
			}
			_cfcgbb := uint32(_bbcdg)
			_effc.TotalsRowCountAttr = &_cfcgbb
			continue
		}
		if _ddaedb.Name.Local == "\u0074o\u0074a\u006c\u0073\u0052\u006f\u0077C\u0065\u006cl\u0053\u0074\u0079\u006c\u0065" {
			_ddgdbe, _ffeefa := _ddaedb.Value, error(nil)
			if _ffeefa != nil {
				return _ffeefa
			}
			_effc.TotalsRowCellStyleAttr = &_ddgdbe
			continue
		}
		if _ddaedb.Name.Local == "d\u0069\u0073\u0070\u006c\u0061\u0079\u004e\u0061\u006d\u0065" {
			_edadd, _ffgdfe := _ddaedb.Value, error(nil)
			if _ffgdfe != nil {
				return _ffgdfe
			}
			_effc.DisplayNameAttr = _edadd
			continue
		}
		if _ddaedb.Name.Local == "\u0069\u0064" {
			_ggbaf, _ecgdge := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _ecgdge != nil {
				return _ecgdge
			}
			_effc.IdAttr = uint32(_ggbaf)
			continue
		}
		if _ddaedb.Name.Local == "\u0064\u0061\u0074\u0061\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065" {
			_eegeef, _fbdga := _ddaedb.Value, error(nil)
			if _fbdga != nil {
				return _fbdga
			}
			_effc.DataCellStyleAttr = &_eegeef
			continue
		}
		if _ddaedb.Name.Local == "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d" {
			_dfbec, _gebcb := _g.ParseBool(_ddaedb.Value)
			if _gebcb != nil {
				return _gebcb
			}
			_effc.PublishedAttr = &_dfbec
			continue
		}
		if _ddaedb.Name.Local == "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064" {
			_agdgd, _badeb := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _badeb != nil {
				return _badeb
			}
			_fbbee := uint32(_agdgd)
			_effc.ConnectionIdAttr = &_fbbee
			continue
		}
		if _ddaedb.Name.Local == "\u0072\u0065\u0066" {
			_eddfa, _gedfg := _ddaedb.Value, error(nil)
			if _gedfg != nil {
				return _gedfg
			}
			_effc.RefAttr = _eddfa
			continue
		}
		if _ddaedb.Name.Local == "\u0069\u006e\u0073\u0065\u0072\u0074\u0052\u006f\u0077S\u0068\u0069\u0066\u0074" {
			_cbfbaf, _edcddb := _g.ParseBool(_ddaedb.Value)
			if _edcddb != nil {
				return _edcddb
			}
			_effc.InsertRowShiftAttr = &_cbfbaf
			continue
		}
		if _ddaedb.Name.Local == "\u0074\u006f\u0074\u0061\u006c\u0073\u0052\u006f\u0077S\u0068\u006f\u0077\u006e" {
			_dcbaab, _eaagg := _g.ParseBool(_ddaedb.Value)
			if _eaagg != nil {
				return _eaagg
			}
			_effc.TotalsRowShownAttr = &_dcbaab
			continue
		}
		if _ddaedb.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077D\u0078\u0066\u0049\u0064" {
			_bggaeb, _ccegd := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _ccegd != nil {
				return _ccegd
			}
			_affcb := uint32(_bggaeb)
			_effc.HeaderRowDxfIdAttr = &_affcb
			continue
		}
		if _ddaedb.Name.Local == "\u0068\u0065\u0061\u0064\u0065\u0072\u0052\u006f\u0077C\u006f\u0075\u006e\u0074" {
			_ecgfe, _bagged := _g.ParseUint(_ddaedb.Value, 10, 32)
			if _bagged != nil {
				return _bagged
			}
			_fdbgd := uint32(_ecgfe)
			_effc.HeaderRowCountAttr = &_fdbgd
			continue
		}
	}
_fcceeb:
	for {
		_aecgad, _acedb := d.Token()
		if _acedb != nil {
			return _acedb
		}
		switch _cgdcg := _aecgad.(type) {
		case _b.StartElement:
			switch _cgdcg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_effc.AutoFilter = NewCT_AutoFilter()
				if _agbbg := d.DecodeElement(_effc.AutoFilter, &_cgdcg); _agbbg != nil {
					return _agbbg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u0072\u0074\u0053\u0074\u0061\u0074e"}:
				_effc.SortState = NewCT_SortState()
				if _cbbgbc := d.DecodeElement(_effc.SortState, &_cgdcg); _cbbgbc != nil {
					return _cbbgbc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"}:
				if _dgfdb := d.DecodeElement(_effc.TableColumns, &_cgdcg); _dgfdb != nil {
					return _dgfdb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f"}:
				_effc.TableStyleInfo = NewCT_TableStyleInfo()
				if _ebbfc := d.DecodeElement(_effc.TableStyleInfo, &_cgdcg); _ebbfc != nil {
					return _ebbfc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_effc.ExtLst = NewCT_ExtensionList()
				if _adgacf := d.DecodeElement(_effc.ExtLst, &_cgdcg); _adgacf != nil {
					return _adgacf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _cgdcg.Name)
				if _ffeaa := d.Skip(); _ffeaa != nil {
					return _ffeaa
				}
			}
		case _b.EndElement:
			break _fcceeb
		case _b.CharData:
		}
	}
	return nil
}
func (_fdfgg *CT_PageItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _fdfgg.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MemberProperties and its children
func (_bebgf *CT_MemberProperties) Validate() error {
	return _bebgf.ValidateWithPath("\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gaebbb ST_VolValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gaebbb.String(), start)
}
func NewCT_CacheHierarchy() *CT_CacheHierarchy { _gdef := &CT_CacheHierarchy{}; return _gdef }

type CT_Dxf struct {

	// Font Properties
	Font *CT_Font

	// Number Format
	NumFmt *CT_NumFmt

	// Fill
	Fill *CT_Fill

	// Alignment
	Alignment *CT_CellAlignment

	// Border Properties
	Border *CT_Border

	// Protection Properties
	Protection *CT_CellProtection

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_efegeg ST_CfType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edbdag := _b.Attr{}
	_edbdag.Name = name
	switch _efegeg {
	case ST_CfTypeUnset:
		_edbdag.Value = ""
	case ST_CfTypeExpression:
		_edbdag.Value = "\u0065\u0078\u0070\u0072\u0065\u0073\u0073\u0069\u006f\u006e"
	case ST_CfTypeCellIs:
		_edbdag.Value = "\u0063\u0065\u006c\u006c\u0049\u0073"
	case ST_CfTypeColorScale:
		_edbdag.Value = "\u0063\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065"
	case ST_CfTypeDataBar:
		_edbdag.Value = "\u0064a\u0074\u0061\u0042\u0061\u0072"
	case ST_CfTypeIconSet:
		_edbdag.Value = "\u0069c\u006f\u006e\u0053\u0065\u0074"
	case ST_CfTypeTop10:
		_edbdag.Value = "\u0074\u006f\u00701\u0030"
	case ST_CfTypeUniqueValues:
		_edbdag.Value = "\u0075\u006e\u0069q\u0075\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeDuplicateValues:
		_edbdag.Value = "\u0064u\u0070l\u0069\u0063\u0061\u0074\u0065\u0056\u0061\u006c\u0075\u0065\u0073"
	case ST_CfTypeContainsText:
		_edbdag.Value = "\u0063\u006f\u006et\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeNotContainsText:
		_edbdag.Value = "\u006eo\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0054\u0065\u0078\u0074"
	case ST_CfTypeBeginsWith:
		_edbdag.Value = "\u0062\u0065\u0067\u0069\u006e\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeEndsWith:
		_edbdag.Value = "\u0065\u006e\u0064\u0073\u0057\u0069\u0074\u0068"
	case ST_CfTypeContainsBlanks:
		_edbdag.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeNotContainsBlanks:
		_edbdag.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0042l\u0061\u006e\u006b\u0073"
	case ST_CfTypeContainsErrors:
		_edbdag.Value = "\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeNotContainsErrors:
		_edbdag.Value = "\u006e\u006f\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0045r\u0072\u006f\u0072\u0073"
	case ST_CfTypeTimePeriod:
		_edbdag.Value = "\u0074\u0069\u006d\u0065\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_CfTypeAboveAverage:
		_edbdag.Value = "\u0061\u0062\u006fv\u0065\u0041\u0076\u0065\u0072\u0061\u0067\u0065"
	}
	return _edbdag, nil
}

// ValidateWithPath validates the CT_MetadataBlock and its children, prefixing error messages with path
func (_dfeef *CT_MetadataBlock) ValidateWithPath(path string) error {
	for _gcbfd, _cggda := range _dfeef.Rc {
		if _fdacg := _cggda.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0052\u0063\u005b\u0025\u0064]", path, _gcbfd)); _fdacg != nil {
			return _fdacg
		}
	}
	return nil
}

type CT_TableColumn struct {

	// Table Field Id
	IdAttr uint32

	// Unique Name
	UniqueNameAttr *string

	// Column name
	NameAttr string

	// Totals Row Function
	TotalsRowFunctionAttr ST_TotalsRowFunction

	// Totals Row Label
	TotalsRowLabelAttr *string

	// Query Table Field Id
	QueryTableFieldIdAttr *uint32

	// Header Row Cell Format Id
	HeaderRowDxfIdAttr *uint32

	// Data & Insert Row Format Id
	DataDxfIdAttr *uint32

	// Totals Row Format Id
	TotalsRowDxfIdAttr *uint32

	// Header Row Cell Style
	HeaderRowCellStyleAttr *string

	// Data Area Style Name
	DataCellStyleAttr *string

	// Totals Row Style Name
	TotalsRowCellStyleAttr *string

	// Calculated Column Formula
	CalculatedColumnFormula *CT_TableFormula

	// Totals Row Formula
	TotalsRowFormula *CT_TableFormula

	// XML Column Properties
	XmlColumnPr *CT_XmlColumnPr

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cacea *ST_FilterOperator) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cacea = 0
	case "\u0065\u0071\u0075a\u006c":
		*_cacea = 1
	case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
		*_cacea = 2
	case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
		*_cacea = 3
	case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_cacea = 4
	case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
		*_cacea = 5
	case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
		*_cacea = 6
	}
	return nil
}
func (_dggfe *ST_FontScheme) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ddaaa, _bggeca := d.Token()
	if _bggeca != nil {
		return _bggeca
	}
	if _adfbg, _eddac := _ddaaa.(_b.EndElement); _eddac && _adfbg.Name == start.Name {
		*_dggfe = 1
		return nil
	}
	if _adabg, _gdbddc := _ddaaa.(_b.CharData); !_gdbddc {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddaaa)
	} else {
		switch string(_adabg) {
		case "":
			*_dggfe = 0
		case "\u006e\u006f\u006e\u0065":
			*_dggfe = 1
		case "\u006d\u0061\u006ao\u0072":
			*_dggfe = 2
		case "\u006d\u0069\u006eo\u0072":
			*_dggfe = 3
		}
	}
	_ddaaa, _bggeca = d.Token()
	if _bggeca != nil {
		return _bggeca
	}
	if _gfgdg, _cdabd := _ddaaa.(_b.EndElement); _cdabd && _gfgdg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddaaa)
}

// Validate validates the CT_MetadataTypes and its children
func (_fecgd *CT_MetadataTypes) Validate() error {
	return _fecgd.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073")
}
func (_gfcce *CT_PageFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gfcce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gfcce.CountAttr)})
	}
	e.EncodeToken(start)
	_cgcfc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gaceef := range _gfcce.PageField {
		e.EncodeElement(_gaceef, _cgcfc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_edfbg ST_MdxKPIProperty) Validate() error { return _edfbg.ValidateWithPath("") }

// ValidateWithPath validates the CT_PivotDimension and its children, prefixing error messages with path
func (_dgbeb *CT_PivotDimension) ValidateWithPath(path string) error { return nil }

type CT_Drawing struct{ IdAttr string }

func NewCT_CommentPr() *CT_CommentPr {
	_eddc := &CT_CommentPr{}
	_eddc.Anchor = NewCT_ObjectAnchor()
	return _eddc
}
func (_dfbada *CT_PatternFill) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aaadc := range start.Attr {
		if _aaadc.Name.Local == "p\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065" {
			_dfbada.PatternTypeAttr.UnmarshalXMLAttr(_aaadc)
			continue
		}
	}
_fdbab:
	for {
		_bgbba, _gfedb := d.Token()
		if _gfedb != nil {
			return _gfedb
		}
		switch _egcdg := _bgbba.(type) {
		case _b.StartElement:
			switch _egcdg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066g\u0043\u006f\u006c\u006f\u0072"}:
				_dfbada.FgColor = NewCT_Color()
				if _aedfg := d.DecodeElement(_dfbada.FgColor, &_egcdg); _aedfg != nil {
					return _aedfg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062g\u0043\u006f\u006c\u006f\u0072"}:
				_dfbada.BgColor = NewCT_Color()
				if _ecaeg := d.DecodeElement(_dfbada.BgColor, &_egcdg); _ecaeg != nil {
					return _ecaeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006eF\u0069l\u006c\u0020\u0025\u0076", _egcdg.Name)
				if _cfacfc := d.Skip(); _cfacfc != nil {
					return _cfacfc
				}
			}
		case _b.EndElement:
			break _fdbab
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_SharedUser() *CT_SharedUser {
	_adbcbe := &CT_SharedUser{}
	_adbcbe.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _adbcbe
}
func (_gbcee *CT_RPrElt) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ceega:
	for {
		_bdacf, _ecafb := d.Token()
		if _ecafb != nil {
			return _ecafb
		}
		switch _agdgad := _bdacf.(type) {
		case _b.StartElement:
			switch _agdgad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0046\u006fn\u0074"}:
				_gbcee.RFont = NewCT_FontName()
				if _dcedda := d.DecodeElement(_gbcee.RFont, &_agdgad); _dcedda != nil {
					return _dcedda
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_gbcee.Charset = NewCT_IntProperty()
				if _dfcfb := d.DecodeElement(_gbcee.Charset, &_agdgad); _dfcfb != nil {
					return _dfcfb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_gbcee.Family = NewCT_IntProperty()
				if _cfedg := d.DecodeElement(_gbcee.Family, &_agdgad); _cfedg != nil {
					return _cfedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_gbcee.B = NewCT_BooleanProperty()
				if _cfdgd := d.DecodeElement(_gbcee.B, &_agdgad); _cfdgd != nil {
					return _cfdgd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_gbcee.I = NewCT_BooleanProperty()
				if _gdgdd := d.DecodeElement(_gbcee.I, &_agdgad); _gdgdd != nil {
					return _gdgdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_gbcee.Strike = NewCT_BooleanProperty()
				if _gdaecc := d.DecodeElement(_gbcee.Strike, &_agdgad); _gdaecc != nil {
					return _gdaecc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_gbcee.Outline = NewCT_BooleanProperty()
				if _edgaf := d.DecodeElement(_gbcee.Outline, &_agdgad); _edgaf != nil {
					return _edgaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_gbcee.Shadow = NewCT_BooleanProperty()
				if _bfada := d.DecodeElement(_gbcee.Shadow, &_agdgad); _bfada != nil {
					return _bfada
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_gbcee.Condense = NewCT_BooleanProperty()
				if _dfffe := d.DecodeElement(_gbcee.Condense, &_agdgad); _dfffe != nil {
					return _dfffe
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_gbcee.Extend = NewCT_BooleanProperty()
				if _ebffc := d.DecodeElement(_gbcee.Extend, &_agdgad); _ebffc != nil {
					return _ebffc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_gbcee.Color = NewCT_Color()
				if _gdead := d.DecodeElement(_gbcee.Color, &_agdgad); _gdead != nil {
					return _gdead
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_gbcee.Sz = NewCT_FontSize()
				if _bcace := d.DecodeElement(_gbcee.Sz, &_agdgad); _bcace != nil {
					return _bcace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_gbcee.U = NewCT_UnderlineProperty()
				if _deaba := d.DecodeElement(_gbcee.U, &_agdgad); _deaba != nil {
					return _deaba
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_gbcee.VertAlign = NewCT_VerticalAlignFontProperty()
				if _adae := d.DecodeElement(_gbcee.VertAlign, &_agdgad); _adae != nil {
					return _adae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_gbcee.Scheme = NewCT_FontScheme()
				if _gdgcfd := d.DecodeElement(_gbcee.Scheme, &_agdgad); _gdgcfd != nil {
					return _gdgcfd
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0050\u0072E\u006c\u0074 \u0025\u0076", _agdgad.Name)
				if _egcaa := d.Skip(); _egcaa != nil {
					return _egcaa
				}
			}
		case _b.EndElement:
			break _ceega
		case _b.CharData:
		}
	}
	return nil
}
func (_fff *CT_AutoSortScope) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fff.PivotArea = NewCT_PivotArea()
_feg:
	for {
		_fef, _fffd := d.Token()
		if _fffd != nil {
			return _fffd
		}
		switch _fafb := _fef.(type) {
		case _b.StartElement:
			switch _fafb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _fffa := d.DecodeElement(_fff.PivotArea, &_fafb); _fffa != nil {
					return _fffa
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065\u0020\u0025v", _fafb.Name)
				if _aga := d.Skip(); _aga != nil {
					return _aga
				}
			}
		case _b.EndElement:
			break _feg
		case _b.CharData:
		}
	}
	return nil
}

type CT_UnderlineProperty struct {

	// Underline Value
	ValAttr ST_UnderlineValues
}

// ValidateWithPath validates the CT_WebPublishObjects and its children, prefixing error messages with path
func (_fccff *CT_WebPublishObjects) ValidateWithPath(path string) error {
	for _dcebd, _abgg := range _fccff.WebPublishObject {
		if _daagb := _abgg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fWe\u0062\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074\u005b\u0025\u0064\u005d", path, _dcebd)); _daagb != nil {
			return _daagb
		}
	}
	return nil
}
func (_abfde *CT_Hyperlink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bebda := range start.Attr {
		if _bebda.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bebda.Name.Local == "\u0069\u0064" || _bebda.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bebda.Name.Local == "\u0069\u0064" {
			_fbed, _gbcec := _bebda.Value, error(nil)
			if _gbcec != nil {
				return _gbcec
			}
			_abfde.IdAttr = &_fbed
			continue
		}
		if _bebda.Name.Local == "\u0072\u0065\u0066" {
			_ccadc, _gcfc := _bebda.Value, error(nil)
			if _gcfc != nil {
				return _gcfc
			}
			_abfde.RefAttr = _ccadc
			continue
		}
		if _bebda.Name.Local == "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e" {
			_ecbea, _ffaea := _bebda.Value, error(nil)
			if _ffaea != nil {
				return _ffaea
			}
			_abfde.LocationAttr = &_ecbea
			continue
		}
		if _bebda.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_badg, _fecbb := _bebda.Value, error(nil)
			if _fecbb != nil {
				return _fecbb
			}
			_abfde.TooltipAttr = &_badg
			continue
		}
		if _bebda.Name.Local == "\u0064i\u0073\u0070\u006c\u0061\u0079" {
			_dfdfe, _fefbd := _bebda.Value, error(nil)
			if _fefbd != nil {
				return _fefbd
			}
			_abfde.DisplayAttr = &_dfdfe
			continue
		}
	}
	for {
		_gffdd, _ebbefa := d.Token()
		if _ebbefa != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0079p\u0065\u0072\u006c\u0069\u006e\u006b\u003a\u0020\u0025\u0073", _ebbefa)
		}
		if _abecb, _gcgc := _gffdd.(_b.EndElement); _gcgc && _abecb.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_FormulaExpressionUnset        ST_FormulaExpression = 0
	ST_FormulaExpressionRef          ST_FormulaExpression = 1
	ST_FormulaExpressionRefError     ST_FormulaExpression = 2
	ST_FormulaExpressionArea         ST_FormulaExpression = 3
	ST_FormulaExpressionAreaError    ST_FormulaExpression = 4
	ST_FormulaExpressionComputedArea ST_FormulaExpression = 5
)

func (_cceecf *CT_OleLink) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbafb := range start.Attr {
		if _bbafb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _bbafb.Name.Local == "\u0069\u0064" || _bbafb.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _bbafb.Name.Local == "\u0069\u0064" {
			_badd, _agdebf := _bbafb.Value, error(nil)
			if _agdebf != nil {
				return _agdebf
			}
			_cceecf.IdAttr = _badd
			continue
		}
		if _bbafb.Name.Local == "\u0070\u0072\u006f\u0067\u0049\u0064" {
			_abdc, _babdb := _bbafb.Value, error(nil)
			if _babdb != nil {
				return _babdb
			}
			_cceecf.ProgIdAttr = _abdc
			continue
		}
	}
_fgcdg:
	for {
		_gfgb, _deefd := d.Token()
		if _deefd != nil {
			return _deefd
		}
		switch _fecce := _gfgb.(type) {
		case _b.StartElement:
			switch _fecce.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u006c\u0065\u0049\u0074\u0065\u006d\u0073"}:
				_cceecf.OleItems = NewCT_OleItems()
				if _acbfd := d.DecodeElement(_cceecf.OleItems, &_fecce); _acbfd != nil {
					return _acbfd
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fO\u006c\u0065\u004c\u0069\u006e\u006b\u0020\u0025\u0076", _fecce.Name)
				if _gdaafb := d.Skip(); _gdaafb != nil {
					return _gdaafb
				}
			}
		case _b.EndElement:
			break _fgcdg
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_CustomWorkbookViews() *CT_CustomWorkbookViews {
	_dbgbg := &CT_CustomWorkbookViews{}
	return _dbgbg
}

type CT_MdxKPI struct {

	// Member Unique Name Index
	NAttr uint32

	// KPI Index
	NpAttr uint32

	// KPI Property
	PAttr ST_MdxKPIProperty
}
type CT_MetadataTypes struct {

	// Metadata Type Count
	CountAttr *uint32

	// Metadata Type Information
	MetadataType []*CT_MetadataType
}

func NewCT_TextPr() *CT_TextPr { _adbea := &CT_TextPr{}; return _adbea }

// ValidateWithPath validates the CT_Map and its children, prefixing error messages with path
func (_gbbfa *CT_Map) ValidateWithPath(path string) error {
	if _gbbfa.DataBinding != nil {
		if _ddfegd := _gbbfa.DataBinding.ValidateWithPath(path + "\u002f\u0044\u0061t\u0061\u0042\u0069\u006e\u0064\u0069\u006e\u0067"); _ddfegd != nil {
			return _ddfegd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ExternalCell and its children, prefixing error messages with path
func (_bafa *CT_ExternalCell) ValidateWithPath(path string) error {
	if _cfgba := _bafa.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cfgba != nil {
		return _cfgba
	}
	return nil
}
func (_fdefc *CT_CustomProperties) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_edbb:
	for {
		_cgca, _adbb := d.Token()
		if _adbb != nil {
			return _adbb
		}
		switch _fcebb := _cgca.(type) {
		case _b.StartElement:
			switch _fcebb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0050\u0072"}:
				_ffeca := NewCT_CustomProperty()
				if _facf := d.DecodeElement(_ffeca, &_fcebb); _facf != nil {
					return _facf
				}
				_fdefc.CustomPr = append(_fdefc.CustomPr, _ffeca)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fcebb.Name)
				if _bggff := d.Skip(); _bggff != nil {
					return _bggff
				}
			}
		case _b.EndElement:
			break _edbb
		case _b.CharData:
		}
	}
	return nil
}
func (_eafgb *CT_PageItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egec := range start.Attr {
		if _egec.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dcgaf, _gdagba := _egec.Value, error(nil)
			if _gdagba != nil {
				return _gdagba
			}
			_eafgb.NameAttr = _dcgaf
			continue
		}
	}
	for {
		_acbbf, _addba := d.Token()
		if _addba != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d\u003a\u0020\u0025\u0073", _addba)
		}
		if _bfgbd, _cbefe := _acbbf.(_b.EndElement); _cbefe && _bfgbd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aadf *CT_ColFields) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ffcfg := range start.Attr {
		if _ffcfg.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_dbbc, _bgccg := _g.ParseUint(_ffcfg.Value, 10, 32)
			if _bgccg != nil {
				return _bgccg
			}
			_bcag := uint32(_dbbc)
			_aadf.CountAttr = &_bcag
			continue
		}
	}
_feafd:
	for {
		_eabf, _aacc := d.Token()
		if _aacc != nil {
			return _aacc
		}
		switch _eceda := _eabf.(type) {
		case _b.StartElement:
			switch _eceda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0065l\u0064"}:
				_agde := NewCT_Field()
				if _fdge := d.DecodeElement(_agde, &_eceda); _fdge != nil {
					return _fdge
				}
				_aadf.Field = append(_aadf.Field, _agde)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006cF\u0069\u0065\u006c\u0064\u0073\u0020\u0025\u0076", _eceda.Name)
				if _gecb := d.Skip(); _gecb != nil {
					return _gecb
				}
			}
		case _b.EndElement:
			break _feafd
		case _b.CharData:
		}
	}
	return nil
}
func (_geg *AG_RevData) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ba := range start.Attr {
		if _ba.Name.Local == "\u0072\u0049\u0064" {
			_bg, _cfa := _g.ParseUint(_ba.Value, 10, 32)
			if _cfa != nil {
				return _cfa
			}
			_ga := uint32(_bg)
			_geg.RIdAttr = &_ga
			continue
		}
		if _ba.Name.Local == "\u0075\u0061" {
			_ca, _cd := _g.ParseBool(_ba.Value)
			if _cd != nil {
				return _cd
			}
			_geg.UaAttr = &_ca
			continue
		}
		if _ba.Name.Local == "\u0072\u0061" {
			_be, _bfb := _g.ParseBool(_ba.Value)
			if _bfb != nil {
				return _bfb
			}
			_geg.RaAttr = &_be
			continue
		}
	}
	for {
		_ffb, _ee := d.Token()
		if _ee != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061\u003a\u0020%\u0073", _ee)
		}
		if _ac, _cfe := _ffb.(_b.EndElement); _cfe && _ac.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PivotFilter() *CT_PivotFilter {
	_ebdda := &CT_PivotFilter{}
	_ebdda.TypeAttr = ST_PivotFilterType(1)
	_ebdda.AutoFilter = NewCT_AutoFilter()
	return _ebdda
}
func (_ebdg *CT_Colors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_gfde:
	for {
		_fbg, _bfeb := d.Token()
		if _bfeb != nil {
			return _bfeb
		}
		switch _ffab := _fbg.(type) {
		case _b.StartElement:
			switch _ffab.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073"}:
				_ebdg.IndexedColors = NewCT_IndexedColors()
				if _bbageb := d.DecodeElement(_ebdg.IndexedColors, &_ffab); _bbageb != nil {
					return _bbageb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006dr\u0075\u0043\u006f\u006c\u006f\u0072s"}:
				_ebdg.MruColors = NewCT_MRUColors()
				if _feed := d.DecodeElement(_ebdg.MruColors, &_ffab); _feed != nil {
					return _feed
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u006f\u006co\u0072\u0073 \u0025\u0076", _ffab.Name)
				if _cbbb := d.Skip(); _cbbb != nil {
					return _cbbb
				}
			}
		case _b.EndElement:
			break _gfde
		case _b.CharData:
		}
	}
	return nil
}
func (_de *CT_Boolean) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_de.VAttr))})
	if _de.UAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_de.UAttr))})
	}
	if _de.FAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_de.FAttr))})
	}
	if _de.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_de.CAttr)})
	}
	if _de.CpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_de.CpAttr)})
	}
	e.EncodeToken(start)
	if _de.X != nil {
		_dee := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
		for _, _dcb := range _de.X {
			e.EncodeElement(_dcb, _dee)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dcaece ST_GrowShrinkType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_egfggb := _b.Attr{}
	_egfggb.Name = name
	switch _dcaece {
	case ST_GrowShrinkTypeUnset:
		_egfggb.Value = ""
	case ST_GrowShrinkTypeInsertDelete:
		_egfggb.Value = "\u0069\u006e\u0073e\u0072\u0074\u0044\u0065\u006c\u0065\u0074\u0065"
	case ST_GrowShrinkTypeInsertClear:
		_egfggb.Value = "i\u006e\u0073\u0065\u0072\u0074\u0043\u006c\u0065\u0061\u0072"
	case ST_GrowShrinkTypeOverwriteClear:
		_egfggb.Value = "\u006f\u0076\u0065\u0072\u0077\u0072\u0069\u0074\u0065C\u006c\u0065\u0061\u0072"
	}
	return _egfggb, nil
}
func NewCT_PivotCacheRecords() *CT_PivotCacheRecords {
	_aecad := &CT_PivotCacheRecords{}
	return _aecad
}
func (_bbbgdc ST_TextHAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bbbgdc.String(), start)
}
func (_efagb *PivotCacheDefinition) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_efagb.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	for _, _fadddf := range start.Attr {
		if _fadddf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fadddf.Name.Local == "\u0069\u0064" || _fadddf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fadddf.Name.Local == "\u0069\u0064" {
			_fgbbe, _bbfbed := _fadddf.Value, error(nil)
			if _bbfbed != nil {
				return _bbfbed
			}
			_efagb.IdAttr = &_fgbbe
			continue
		}
		if _fadddf.Name.Local == "\u0075\u0070g\u0072\u0061\u0064e\u004f\u006e\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_geadc, _bfccf := _g.ParseBool(_fadddf.Value)
			if _bfccf != nil {
				return _bfccf
			}
			_efagb.UpgradeOnRefreshAttr = &_geadc
			continue
		}
		if _fadddf.Name.Local == "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065" {
			_bdebca, _addfb := _g.ParseBool(_fadddf.Value)
			if _addfb != nil {
				return _addfb
			}
			_efagb.TupleCacheAttr = &_bdebca
			continue
		}
		if _fadddf.Name.Local == "\u0073\u0061\u0076\u0065\u0044\u0061\u0074\u0061" {
			_eacdac, _egbgc := _g.ParseBool(_fadddf.Value)
			if _egbgc != nil {
				return _egbgc
			}
			_efagb.SaveDataAttr = &_eacdac
			continue
		}
		if _fadddf.Name.Local == "\u0073u\u0070p\u006f\u0072\u0074\u0053\u0075\u0062\u0071\u0075\u0065\u0072\u0079" {
			_bbdbgf, _accfd := _g.ParseBool(_fadddf.Value)
			if _accfd != nil {
				return _accfd
			}
			_efagb.SupportSubqueryAttr = &_bbdbgf
			continue
		}
		if _fadddf.Name.Local == "\u006f\u0070\u0074\u0069\u006d\u0069\u007a\u0065\u004de\u006d\u006f\u0072\u0079" {
			_cffcd, _agedbg := _g.ParseBool(_fadddf.Value)
			if _agedbg != nil {
				return _agedbg
			}
			_efagb.OptimizeMemoryAttr = &_cffcd
			continue
		}
		if _fadddf.Name.Local == "s\u0075p\u0070\u006f\u0072\u0074\u0041\u0064\u0076\u0061n\u0063\u0065\u0064\u0044ri\u006c\u006c" {
			_eegcbfd, _ggfgc := _g.ParseBool(_fadddf.Value)
			if _ggfgc != nil {
				return _ggfgc
			}
			_efagb.SupportAdvancedDrillAttr = &_eegcbfd
			continue
		}
		if _fadddf.Name.Local == "r\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0042\u0079" {
			_badgeb, _faffdd := _fadddf.Value, error(nil)
			if _faffdd != nil {
				return _faffdd
			}
			_efagb.RefreshedByAttr = &_badgeb
			continue
		}
		if _fadddf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0044\u0061\u0074\u0065\u0049\u0073\u006f" {
			_aagdfd, _cdfaa := ParseStdlibTime(_fadddf.Value)
			if _cdfaa != nil {
				return _cdfaa
			}
			_efagb.RefreshedDateIsoAttr = &_aagdfd
			continue
		}
		if _fadddf.Name.Local == "\u0069n\u0076\u0061\u006c\u0069\u0064" {
			_aabbc, _ccafe := _g.ParseBool(_fadddf.Value)
			if _ccafe != nil {
				return _ccafe
			}
			_efagb.InvalidAttr = &_aabbc
			continue
		}
		if _fadddf.Name.Local == "\u0062a\u0063k\u0067\u0072\u006f\u0075\u006e\u0064\u0051\u0075\u0065\u0072\u0079" {
			_ebegcc, _efedc := _g.ParseBool(_fadddf.Value)
			if _efedc != nil {
				return _efedc
			}
			_efagb.BackgroundQueryAttr = &_ebegcc
			continue
		}
		if _fadddf.Name.Local == "\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0049\u0074\u0065\u006d\u0073L\u0069\u006d\u0069\u0074" {
			_dbabe, _bcgage := _g.ParseUint(_fadddf.Value, 10, 32)
			if _bcgage != nil {
				return _bcgage
			}
			_abgag := uint32(_dbabe)
			_efagb.MissingItemsLimitAttr = &_abgag
			continue
		}
		if _fadddf.Name.Local == "\u0072\u0065f\u0072\u0065\u0073h\u0065\u0064\u0056\u0065\u0072\u0073\u0069\u006f\u006e" {
			_adbge, _abceea := _g.ParseUint(_fadddf.Value, 10, 8)
			if _abceea != nil {
				return _abceea
			}
			_ebbbgg := uint8(_adbge)
			_efagb.RefreshedVersionAttr = &_ebbbgg
			continue
		}
		if _fadddf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u004f\u006e\u004c\u006f\u0061\u0064" {
			_abefg, _agabb := _g.ParseBool(_fadddf.Value)
			if _agabb != nil {
				return _agabb
			}
			_efagb.RefreshOnLoadAttr = &_abefg
			continue
		}
		if _fadddf.Name.Local == "\u0072\u0065\u0066\u0072\u0065\u0073\u0068\u0065\u0064\u0044\u0061\u0074\u0065" {
			_fggcb, _effebd := _g.ParseFloat(_fadddf.Value, 64)
			if _effebd != nil {
				return _effebd
			}
			_efagb.RefreshedDateAttr = &_fggcb
			continue
		}
		if _fadddf.Name.Local == "r\u0065\u0063\u006f\u0072\u0064\u0043\u006f\u0075\u006e\u0074" {
			_gabdeb, _gagdfb := _g.ParseUint(_fadddf.Value, 10, 32)
			if _gagdfb != nil {
				return _gagdfb
			}
			_cgdfc := uint32(_gabdeb)
			_efagb.RecordCountAttr = &_cgdfc
			continue
		}
		if _fadddf.Name.Local == "\u0063\u0072\u0065\u0061\u0074\u0065\u0064\u0056\u0065r\u0073\u0069\u006f\u006e" {
			_gdcacd, _cddgf := _g.ParseUint(_fadddf.Value, 10, 8)
			if _cddgf != nil {
				return _cddgf
			}
			_agdcc := uint8(_gdcacd)
			_efagb.CreatedVersionAttr = &_agdcc
			continue
		}
		if _fadddf.Name.Local == "m\u0069\u006e\u0052\u0065fr\u0065s\u0068\u0061\u0062\u006c\u0065V\u0065\u0072\u0073\u0069\u006f\u006e" {
			_ceagae, _cacfae := _g.ParseUint(_fadddf.Value, 10, 8)
			if _cacfae != nil {
				return _cacfae
			}
			_dbfae := uint8(_ceagae)
			_efagb.MinRefreshableVersionAttr = &_dbfae
			continue
		}
		if _fadddf.Name.Local == "\u0065\u006e\u0061\u0062\u006c\u0065\u0052\u0065\u0066\u0072\u0065\u0073\u0068" {
			_gcgfe, _bcbae := _g.ParseBool(_fadddf.Value)
			if _bcbae != nil {
				return _bcbae
			}
			_efagb.EnableRefreshAttr = &_gcgfe
			continue
		}
	}
_dgced:
	for {
		_fbgfdb, _gcgdeb := d.Token()
		if _gcgdeb != nil {
			return _gcgdeb
		}
		switch _acadc := _fbgfdb.(type) {
		case _b.StartElement:
			switch _acadc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0053\u006f\u0075\u0072\u0063\u0065"}:
				if _cdfdd := d.DecodeElement(_efagb.CacheSource, &_acadc); _cdfdd != nil {
					return _cdfdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064\u0073"}:
				if _cegegc := d.DecodeElement(_efagb.CacheFields, &_acadc); _cegegc != nil {
					return _cegegc
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061c\u0068\u0065\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073"}:
				_efagb.CacheHierarchies = NewCT_CacheHierarchies()
				if _edbce := d.DecodeElement(_efagb.CacheHierarchies, &_acadc); _edbce != nil {
					return _edbce
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069\u0073"}:
				_efagb.Kpis = NewCT_PCDKPIs()
				if _dcgee := d.DecodeElement(_efagb.Kpis, &_acadc); _dcgee != nil {
					return _dcgee
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065"}:
				_efagb.TupleCache = NewCT_TupleCache()
				if _beaaf := d.DecodeElement(_efagb.TupleCache, &_acadc); _beaaf != nil {
					return _beaaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063a\u006cc\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0073"}:
				_efagb.CalculatedItems = NewCT_CalculatedItems()
				if _agbdf := d.DecodeElement(_efagb.CalculatedItems, &_acadc); _agbdf != nil {
					return _agbdf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065m\u0062\u0065\u0072\u0073"}:
				_efagb.CalculatedMembers = NewCT_CalculatedMembers()
				if _ccgeb := d.DecodeElement(_efagb.CalculatedMembers, &_acadc); _ccgeb != nil {
					return _ccgeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073"}:
				_efagb.Dimensions = NewCT_Dimensions()
				if _fafedg := d.DecodeElement(_efagb.Dimensions, &_acadc); _fafedg != nil {
					return _fafedg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073"}:
				_efagb.MeasureGroups = NewCT_MeasureGroups()
				if _bdffd := d.DecodeElement(_efagb.MeasureGroups, &_acadc); _bdffd != nil {
					return _bdffd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0070\u0073"}:
				_efagb.Maps = NewCT_MeasureDimensionMaps()
				if _efgabb := d.DecodeElement(_efagb.Maps, &_acadc); _efgabb != nil {
					return _efgabb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_efagb.ExtLst = NewCT_ExtensionList()
				if _cbdda := d.DecodeElement(_efagb.ExtLst, &_acadc); _cbdda != nil {
					return _cbdda
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _acadc.Name)
				if _ffdeag := d.Skip(); _ffdeag != nil {
					return _ffdeag
				}
			}
		case _b.EndElement:
			break _dgced
		case _b.CharData:
		}
	}
	return nil
}

type CT_ConditionalFormatting struct {

	// PivotTable Conditional Formatting
	PivotAttr *bool

	// Sequence of References
	SqrefAttr *ST_Sqref

	// Conditional Formatting Rule
	CfRule []*CT_CfRule
	ExtLst *CT_ExtensionList
}

const (
	ST_MdxKPIPropertyUnset ST_MdxKPIProperty = 0
	ST_MdxKPIPropertyV     ST_MdxKPIProperty = 1
	ST_MdxKPIPropertyG     ST_MdxKPIProperty = 2
	ST_MdxKPIPropertyS     ST_MdxKPIProperty = 3
	ST_MdxKPIPropertyT     ST_MdxKPIProperty = 4
	ST_MdxKPIPropertyW     ST_MdxKPIProperty = 5
	ST_MdxKPIPropertyM     ST_MdxKPIProperty = 6
)
const (
	ST_DdeValueTypeUnset ST_DdeValueType = 0
	ST_DdeValueTypeNil   ST_DdeValueType = 1
	ST_DdeValueTypeB     ST_DdeValueType = 2
	ST_DdeValueTypeN     ST_DdeValueType = 3
	ST_DdeValueTypeE     ST_DdeValueType = 4
	ST_DdeValueTypeStr   ST_DdeValueType = 5
)

func (_cbgggc *ST_DataValidationImeMode) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cbgggc = 0
	case "\u006eo\u0043\u006f\u006e\u0074\u0072\u006fl":
		*_cbgggc = 1
	case "\u006f\u0066\u0066":
		*_cbgggc = 2
	case "\u006f\u006e":
		*_cbgggc = 3
	case "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064":
		*_cbgggc = 4
	case "\u0068\u0069\u0072\u0061\u0067\u0061\u006e\u0061":
		*_cbgggc = 5
	case "\u0066\u0075\u006cl\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cbgggc = 6
	case "\u0068\u0061\u006cf\u004b\u0061\u0074\u0061\u006b\u0061\u006e\u0061":
		*_cbgggc = 7
	case "\u0066u\u006c\u006c\u0041\u006c\u0070\u0068a":
		*_cbgggc = 8
	case "\u0068a\u006c\u0066\u0041\u006c\u0070\u0068a":
		*_cbgggc = 9
	case "\u0066\u0075\u006c\u006c\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cbgggc = 10
	case "\u0068\u0061\u006c\u0066\u0048\u0061\u006e\u0067\u0075\u006c":
		*_cbgggc = 11
	}
	return nil
}
func NewChartsheet() *Chartsheet {
	_cddag := &Chartsheet{}
	_cddag.CT_Chartsheet = *NewCT_Chartsheet()
	return _cddag
}
func NewCT_Dxfs() *CT_Dxfs { _eagac := &CT_Dxfs{}; return _eagac }

// Validate validates the CT_DiscretePr and its children
func (_gdafa *CT_DiscretePr) Validate() error {
	return _gdafa.ValidateWithPath("\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072")
}

// Validate validates the CT_ExternalReferences and its children
func (_cffb *CT_ExternalReferences) Validate() error {
	return _cffb.ValidateWithPath("C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073")
}

type CT_Fonts struct {

	// Font Count
	CountAttr *uint32

	// Font
	Font []*CT_Font
}

func (_bfafab *CT_SingleXmlCells) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_cegab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061:\u0073\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c"}}
	for _, _fffbc := range _bfafab.SingleXmlCell {
		e.EncodeElement(_fffbc, _cegab)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ObjectPr() *CT_ObjectPr {
	_dbdgd := &CT_ObjectPr{}
	_dbdgd.Anchor = NewCT_ObjectAnchor()
	return _dbdgd
}
func (_fbedag *Comments) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fbedag.CT_Comments = *NewCT_Comments()
_efffa:
	for {
		_bbgeeg, _befgcc := d.Token()
		if _befgcc != nil {
			return _befgcc
		}
		switch _dbdda := _bbgeeg.(type) {
		case _b.StartElement:
			switch _dbdda.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0074\u0068\u006f\u0072\u0073"}:
				if _acbbbbd := d.DecodeElement(_fbedag.Authors, &_dbdda); _acbbbbd != nil {
					return _acbbbbd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "c\u006f\u006d\u006d\u0065\u006e\u0074\u004c\u0069\u0073\u0074"}:
				if _ddfdcg := d.DecodeElement(_fbedag.CommentList, &_dbdda); _ddfdcg != nil {
					return _ddfdcg
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fbedag.ExtLst = NewCT_ExtensionList()
				if _gdgeg := d.DecodeElement(_fbedag.ExtLst, &_dbdda); _gdgeg != nil {
					return _gdgeg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073\u0020\u0025\u0076", _dbdda.Name)
				if _ddgfce := d.Skip(); _ddgfce != nil {
					return _ddgfce
				}
			}
		case _b.EndElement:
			break _efffa
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ChartsheetViews and its children, prefixing error messages with path
func (_efad *CT_ChartsheetViews) ValidateWithPath(path string) error {
	for _cgbag, _egeb := range _efad.SheetView {
		if _bagg := _egeb.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0053\u0068\u0065e\u0074\u0056\u0069\u0065\u0077\u005b\u0025\u0064\u005d", path, _cgbag)); _bagg != nil {
			return _bagg
		}
	}
	if _efad.ExtLst != nil {
		if _acbe := _efad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acbe != nil {
			return _acbe
		}
	}
	return nil
}
func (_ffgbde ST_TableStyleType) Validate() error { return _ffgbde.ValidateWithPath("") }

// Validate validates the CT_ObjectPr and its children
func (_dedag *CT_ObjectPr) Validate() error {
	return _dedag.ValidateWithPath("C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072")
}

// ValidateWithPath validates the CT_PCDKPIs and its children, prefixing error messages with path
func (_gaaga *CT_PCDKPIs) ValidateWithPath(path string) error {
	for _cgcfb, _agbga := range _gaaga.Kpi {
		if _adabb := _agbga.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004b\u0070\u0069\u005b\u0025\u0064\u005d", path, _cgcfb)); _adabb != nil {
			return _adabb
		}
	}
	return nil
}
func (_egcfg *CT_RowFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _egcfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_egcfg.CountAttr)})
	}
	e.EncodeToken(start)
	_dggda := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u0069\u0065\u006c\u0064"}}
	for _, _effebf := range _egcfg.Field {
		e.EncodeElement(_effebf, _dggda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_eadac ST_Visibility) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_eadac.String(), start)
}
func (_deffea ST_RevisionAction) Validate() error { return _deffea.ValidateWithPath("") }
func (_fegde *CT_PivotCaches) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_fagcd:
	for {
		_ddgcd, _bfecc := d.Token()
		if _bfecc != nil {
			return _bfecc
		}
		switch _bcfc := _ddgcd.(type) {
		case _b.StartElement:
			switch _bcfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065"}:
				_fgcbc := NewCT_PivotCache()
				if _fbagg := d.DecodeElement(_fgcbc, &_bcfc); _fbagg != nil {
					return _fbagg
				}
				_fegde.PivotCache = append(_fegde.PivotCache, _fgcbc)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061c\u0068e\u0073\u0020\u0025\u0076", _bcfc.Name)
				if _eabcd := d.Skip(); _eabcd != nil {
					return _eabcd
				}
			}
		case _b.EndElement:
			break _fagcd
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_MeasureDimensionMaps and its children
func (_bgbag *CT_MeasureDimensionMaps) Validate() error {
	return _bgbag.ValidateWithPath("\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073")
}
func (_aegab *CT_WebPublishing) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _affdd := range start.Attr {
		if _affdd.Name.Local == "\u0063\u0073\u0073" {
			_fecdg, _egdge := _g.ParseBool(_affdd.Value)
			if _egdge != nil {
				return _egdge
			}
			_aegab.CssAttr = &_fecdg
			continue
		}
		if _affdd.Name.Local == "\u0074h\u0069\u0063\u006b\u0065\u0074" {
			_egbeb, _fdfbd := _g.ParseBool(_affdd.Value)
			if _fdfbd != nil {
				return _fdfbd
			}
			_aegab.ThicketAttr = &_egbeb
			continue
		}
		if _affdd.Name.Local == "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073" {
			_dgege, _faedg := _g.ParseBool(_affdd.Value)
			if _faedg != nil {
				return _faedg
			}
			_aegab.LongFileNamesAttr = &_dgege
			continue
		}
		if _affdd.Name.Local == "\u0076\u006d\u006c" {
			_gffce, _ccbdc := _g.ParseBool(_affdd.Value)
			if _ccbdc != nil {
				return _ccbdc
			}
			_aegab.VmlAttr = &_gffce
			continue
		}
		if _affdd.Name.Local == "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067" {
			_ebdbf, _dfdcb := _g.ParseBool(_affdd.Value)
			if _dfdcb != nil {
				return _dfdcb
			}
			_aegab.AllowPngAttr = &_ebdbf
			continue
		}
		if _affdd.Name.Local == "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065" {
			_aegab.TargetScreenSizeAttr.UnmarshalXMLAttr(_affdd)
			continue
		}
		if _affdd.Name.Local == "\u0064\u0070\u0069" {
			_aagee, _bafccd := _g.ParseUint(_affdd.Value, 10, 32)
			if _bafccd != nil {
				return _bafccd
			}
			_deebc := uint32(_aagee)
			_aegab.DpiAttr = &_deebc
			continue
		}
		if _affdd.Name.Local == "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065" {
			_bbgbe, _cfeba := _g.ParseUint(_affdd.Value, 10, 32)
			if _cfeba != nil {
				return _cfeba
			}
			_cccag := uint32(_bbgbe)
			_aegab.CodePageAttr = &_cccag
			continue
		}
		if _affdd.Name.Local == "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074" {
			_gdadf, _ceafe := _affdd.Value, error(nil)
			if _ceafe != nil {
				return _ceafe
			}
			_aegab.CharacterSetAttr = &_gdadf
			continue
		}
	}
	for {
		_ddacdc, _eebab := d.Token()
		if _eebab != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0057\u0065\u0062\u0050u\u0062l\u0069\u0073\u0068\u0069\u006e\u0067\u003a \u0025\u0073", _eebab)
		}
		if _bggga, _gffba := _ddacdc.(_b.EndElement); _gffba && _bggga.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fbcfe ST_FontScheme) String() string {
	switch _fbcfe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006d\u0061\u006ao\u0072"
	case 3:
		return "\u006d\u0069\u006eo\u0072"
	}
	return ""
}
func (_bcecg *ST_CellFormulaType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfgce, _dacfdc := d.Token()
	if _dacfdc != nil {
		return _dacfdc
	}
	if _aadadg, _eadddg := _bfgce.(_b.EndElement); _eadddg && _aadadg.Name == start.Name {
		*_bcecg = 1
		return nil
	}
	if _acbccg, _adddf := _bfgce.(_b.CharData); !_adddf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfgce)
	} else {
		switch string(_acbccg) {
		case "":
			*_bcecg = 0
		case "\u006e\u006f\u0072\u006d\u0061\u006c":
			*_bcecg = 1
		case "\u0061\u0072\u0072a\u0079":
			*_bcecg = 2
		case "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce":
			*_bcecg = 3
		case "\u0073\u0068\u0061\u0072\u0065\u0064":
			*_bcecg = 4
		}
	}
	_bfgce, _dacfdc = d.Token()
	if _dacfdc != nil {
		return _dacfdc
	}
	if _ddccf, _fbbgg := _bfgce.(_b.EndElement); _fbbgg && _ddccf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfgce)
}

type CT_QueryTableFields struct {

	// Column Count
	CountAttr *uint32

	// QueryTable Field
	QueryTableField []*CT_QueryTableField
}

func (_dccc *CT_PCDKPI) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _dccc.UniqueNameAttr)})
	if _dccc.CaptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.CaptionAttr)})
	}
	if _dccc.DisplayFolderAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0046\u006f\u006c\u0064\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.DisplayFolderAttr)})
	}
	if _dccc.MeasureGroupAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.MeasureGroupAttr)})
	}
	if _dccc.ParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0072\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.ParentAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006cu\u0065"}, Value: _a.Sprintf("\u0025\u0076", _dccc.ValueAttr)})
	if _dccc.GoalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u006f\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.GoalAttr)})
	}
	if _dccc.StatusAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0074\u0075\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.StatusAttr)})
	}
	if _dccc.TrendAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0072\u0065n\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.TrendAttr)})
	}
	if _dccc.WeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.WeightAttr)})
	}
	if _dccc.TimeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_dccc.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotFilters and its children, prefixing error messages with path
func (_ebafd *CT_PivotFilters) ValidateWithPath(path string) error {
	for _dfbgb, _bgdfd := range _ebafd.Filter {
		if _bgded := _bgdfd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0046\u0069\u006c\u0074\u0065\u0072\u005b\u0025\u0064\u005d", path, _dfbgb)); _bgded != nil {
			return _bgded
		}
	}
	return nil
}
func NewCT_CacheSource() *CT_CacheSource {
	_egee := &CT_CacheSource{}
	_egee.TypeAttr = ST_SourceType(1)
	return _egee
}

type ST_CalcMode byte

func NewCT_TablePart() *CT_TablePart { _afbgf := &CT_TablePart{}; return _afbgf }

// ValidateWithPath validates the CT_Col and its children, prefixing error messages with path
func (_geba *CT_Col) ValidateWithPath(path string) error { return nil }
func (_bfec *CT_CommentPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfec.Anchor = NewCT_ObjectAnchor()
	for _, _afae := range start.Attr {
		if _afae.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_agff, _aaggf := _afae.Value, error(nil)
			if _aaggf != nil {
				return _aaggf
			}
			_bfec.AltTextAttr = &_agff
			continue
		}
		if _afae.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_eecb, _gfba := _g.ParseBool(_afae.Value)
			if _gfba != nil {
				return _gfba
			}
			_bfec.DefaultSizeAttr = &_eecb
			continue
		}
		if _afae.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_cbegbg, _gebae := _g.ParseBool(_afae.Value)
			if _gebae != nil {
				return _gebae
			}
			_bfec.PrintAttr = &_cbegbg
			continue
		}
		if _afae.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_bccc, _deffd := _g.ParseBool(_afae.Value)
			if _deffd != nil {
				return _deffd
			}
			_bfec.DisabledAttr = &_bccc
			continue
		}
		if _afae.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_fceb, _dbacb := _g.ParseBool(_afae.Value)
			if _dbacb != nil {
				return _dbacb
			}
			_bfec.AutoFillAttr = &_fceb
			continue
		}
		if _afae.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_bedea, _befe := _g.ParseBool(_afae.Value)
			if _befe != nil {
				return _befe
			}
			_bfec.AutoLineAttr = &_bedea
			continue
		}
		if _afae.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_gegd, _gagb := _g.ParseBool(_afae.Value)
			if _gagb != nil {
				return _gagb
			}
			_bfec.LockedAttr = &_gegd
			continue
		}
		if _afae.Name.Local == "\u0074\u0065\u0078\u0074\u0048\u0041\u006c\u0069\u0067\u006e" {
			_bfec.TextHAlignAttr.UnmarshalXMLAttr(_afae)
			continue
		}
		if _afae.Name.Local == "\u0074\u0065\u0078\u0074\u0056\u0041\u006c\u0069\u0067\u006e" {
			_bfec.TextVAlignAttr.UnmarshalXMLAttr(_afae)
			continue
		}
		if _afae.Name.Local == "\u006c\u006f\u0063\u006b\u0054\u0065\u0078\u0074" {
			_gfce, _bfdd := _g.ParseBool(_afae.Value)
			if _bfdd != nil {
				return _bfdd
			}
			_bfec.LockTextAttr = &_gfce
			continue
		}
		if _afae.Name.Local == "\u006au\u0073\u0074\u004c\u0061\u0073\u0074X" {
			_bccg, _dega := _g.ParseBool(_afae.Value)
			if _dega != nil {
				return _dega
			}
			_bfec.JustLastXAttr = &_bccg
			continue
		}
		if _afae.Name.Local == "\u0061u\u0074\u006f\u0053\u0063\u0061\u006ce" {
			_bfecf, _gfdb := _g.ParseBool(_afae.Value)
			if _gfdb != nil {
				return _gfdb
			}
			_bfec.AutoScaleAttr = &_bfecf
			continue
		}
	}
_ebfgg:
	for {
		_ceafg, _bdfg := d.Token()
		if _bdfg != nil {
			return _bdfg
		}
		switch _dbgb := _ceafg.(type) {
		case _b.StartElement:
			switch _dbgb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _fabfd := d.DecodeElement(_bfec.Anchor, &_dbgb); _fabfd != nil {
					return _fabfd
				}
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_C\u006f\u006dm\u0065\u006e\u0074\u0050\u0072\u0020\u0025\u0076", _dbgb.Name)
				if _bgfa := d.Skip(); _bgfa != nil {
					return _bgfa
				}
			}
		case _b.EndElement:
			break _ebfgg
		case _b.CharData:
		}
	}
	return nil
}
func (_fdbee ST_CellComments) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gadcb := _b.Attr{}
	_gadcb.Name = name
	switch _fdbee {
	case ST_CellCommentsUnset:
		_gadcb.Value = ""
	case ST_CellCommentsNone:
		_gadcb.Value = "\u006e\u006f\u006e\u0065"
	case ST_CellCommentsAsDisplayed:
		_gadcb.Value = "a\u0073\u0044\u0069\u0073\u0070\u006c\u0061\u0079\u0065\u0064"
	case ST_CellCommentsAtEnd:
		_gadcb.Value = "\u0061\u0074\u0045n\u0064"
	}
	return _gadcb, nil
}

type CT_CacheFields struct {

	// Field Count
	CountAttr *uint32

	// PivotCache Field
	CacheField []*CT_CacheField
}

// ValidateWithPath validates the CT_GroupLevels and its children, prefixing error messages with path
func (_abadb *CT_GroupLevels) ValidateWithPath(path string) error {
	for _gcge, _ggdfg := range _abadb.GroupLevel {
		if _bffcd := _ggdfg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _gcge)); _bffcd != nil {
			return _bffcd
		}
	}
	return nil
}
func NewCT_CellStyleXfs() *CT_CellStyleXfs { _dcda := &CT_CellStyleXfs{}; return _dcda }
func (_bgceb *CT_Users) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgceb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bgceb.CountAttr)})
	}
	e.EncodeToken(start)
	if _bgceb.UserInfo != nil {
		_fgaafd := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0075\u0073\u0065\u0072\u0049\u006e\u0066\u006f"}}
		for _, _dafeg := range _bgceb.UserInfo {
			e.EncodeElement(_dafeg, _fgaafd)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_MRUColors and its children
func (_deddc *CT_MRUColors) Validate() error {
	return _deddc.ValidateWithPath("\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073")
}

// ValidateWithPath validates the CT_PivotCache and its children, prefixing error messages with path
func (_ebgae *CT_PivotCache) ValidateWithPath(path string) error { return nil }

type CT_RangePr struct {

	// Source Data Set Beginning Range
	AutoStartAttr *bool

	// Source Data Ending Range
	AutoEndAttr *bool

	// Group By
	GroupByAttr ST_GroupBy

	// Numeric Grouping Start Value
	StartNumAttr *float64

	// Numeric Grouping End Value
	EndNumAttr *float64

	// Date Grouping Start Value
	StartDateAttr *_d.Time

	// Date Grouping End Value
	EndDateAttr *_d.Time

	// Grouping Interval
	GroupIntervalAttr *float64
}

// ValidateWithPath validates the CT_UnderlineProperty and its children, prefixing error messages with path
func (_gdbaa *CT_UnderlineProperty) ValidateWithPath(path string) error {
	if _dacgg := _gdbaa.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dacgg != nil {
		return _dacgg
	}
	return nil
}

// Validate validates the CT_Sheets and its children
func (_adfeda *CT_Sheets) Validate() error {
	return _adfeda.ValidateWithPath("\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s")
}
func (_eadfe *CT_DataBar) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_eadfe.Color = NewCT_Color()
	for _, _degc := range start.Attr {
		if _degc.Name.Local == "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h" {
			_bcbe, _cdfcb := _g.ParseUint(_degc.Value, 10, 32)
			if _cdfcb != nil {
				return _cdfcb
			}
			_fcgge := uint32(_bcbe)
			_eadfe.MinLengthAttr = &_fcgge
			continue
		}
		if _degc.Name.Local == "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h" {
			_ecee, _eebgc := _g.ParseUint(_degc.Value, 10, 32)
			if _eebgc != nil {
				return _eebgc
			}
			_faggg := uint32(_ecee)
			_eadfe.MaxLengthAttr = &_faggg
			continue
		}
		if _degc.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_fba, _agaaa := _g.ParseBool(_degc.Value)
			if _agaaa != nil {
				return _agaaa
			}
			_eadfe.ShowValueAttr = &_fba
			continue
		}
	}
_bbeb:
	for {
		_cadfb, _fcgbg := d.Token()
		if _fcgbg != nil {
			return _fcgbg
		}
		switch _gdfad := _cadfb.(type) {
		case _b.StartElement:
			switch _gdfad.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_efdc := NewCT_Cfvo()
				if _bddfd := d.DecodeElement(_efdc, &_gdfad); _bddfd != nil {
					return _bddfd
				}
				_eadfe.Cfvo = append(_eadfe.Cfvo, _efdc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				if _facfc := d.DecodeElement(_eadfe.Color, &_gdfad); _facfc != nil {
					return _facfc
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fD\u0061\u0074\u0061\u0042\u0061\u0072\u0020\u0025\u0076", _gdfad.Name)
				if _febbe := d.Skip(); _febbe != nil {
					return _febbe
				}
			}
		case _b.EndElement:
			break _bbeb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NumFmt and its children, prefixing error messages with path
func (_fggbe *CT_NumFmt) ValidateWithPath(path string) error { return nil }

const (
	ST_RefModeUnset ST_RefMode = 0
	ST_RefModeA1    ST_RefMode = 1
	ST_RefModeR1C1  ST_RefMode = 2
)

func NewCT_OleLink() *CT_OleLink                { _ggdce := &CT_OleLink{}; return _ggdce }
func (_bdagc ST_SheetViewType) Validate() error { return _bdagc.ValidateWithPath("") }
func NewCT_VolType() *CT_VolType {
	_faage := &CT_VolType{}
	_faage.TypeAttr = ST_VolDepType(1)
	return _faage
}
func NewCT_RowFields() *CT_RowFields { _aedcc := &CT_RowFields{}; return _aedcc }

type CT_VolTypes struct {

	// Volatile Dependency Type
	VolType []*CT_VolType
	ExtLst  *CT_ExtensionList
}

// Validate validates the CT_Fills and its children
func (_cfce *CT_Fills) Validate() error {
	return _cfce.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073")
}
func (_ccdfd *ST_FileType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_ccdfd = 0
	case "\u006d\u0061\u0063":
		*_ccdfd = 1
	case "\u0077\u0069\u006e":
		*_ccdfd = 2
	case "\u0064\u006f\u0073":
		*_ccdfd = 3
	case "\u006c\u0069\u006e":
		*_ccdfd = 4
	case "\u006f\u0074\u0068e\u0072":
		*_ccdfd = 5
	}
	return nil
}

type CT_MemberProperty struct {

	// OLAP Member Property Unique Name
	NameAttr *string

	// Show Cell
	ShowCellAttr *bool

	// Show Tooltip
	ShowTipAttr *bool

	// Show As Caption
	ShowAsCaptionAttr *bool

	// Name Length
	NameLenAttr *uint32

	// Property Name Character Index
	PPosAttr *uint32

	// Property Name Length
	PLenAttr *uint32

	// Level Index
	LevelAttr *uint32

	// Field Index
	FieldAttr uint32
}

func (_bgabd *CT_MRUColors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_egdda:
	for {
		_eggcf, _aegdb := d.Token()
		if _aegdb != nil {
			return _aegdb
		}
		switch _bdgbb := _eggcf.(type) {
		case _b.StartElement:
			switch _bdgbb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_bfeec := NewCT_Color()
				if _agaga := d.DecodeElement(_bfeec, &_bdgbb); _agaga != nil {
					return _agaga
				}
				_bgabd.Color = append(_bgabd.Color, _bfeec)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_M\u0052\u0055C\u006f\u006c\u006f\u0072\u0073\u0020\u0025\u0076", _bdgbb.Name)
				if _eddgd := d.Skip(); _eddgd != nil {
					return _eddgd
				}
			}
		case _b.EndElement:
			break _egdda
		case _b.CharData:
		}
	}
	return nil
}
func (_bdabf *CT_RevisionHeader) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bdabf.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	_bdabf.SheetIdMap = NewCT_SheetIdMap()
	for _, _afbbge := range start.Attr {
		if _afbbge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _afbbge.Name.Local == "\u0069\u0064" || _afbbge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _afbbge.Name.Local == "\u0069\u0064" {
			_aggcba, _bdcdcag := _afbbge.Value, error(nil)
			if _bdcdcag != nil {
				return _bdcdcag
			}
			_bdabf.IdAttr = _aggcba
			continue
		}
		if _afbbge.Name.Local == "\u0067\u0075\u0069\u0064" {
			_ggcdd, _gdafd := _afbbge.Value, error(nil)
			if _gdafd != nil {
				return _gdafd
			}
			_bdabf.GuidAttr = _ggcdd
			continue
		}
		if _afbbge.Name.Local == "\u0064\u0061\u0074\u0065\u0054\u0069\u006d\u0065" {
			_fagbe, _dcabf := ParseStdlibTime(_afbbge.Value)
			if _dcabf != nil {
				return _dcabf
			}
			_bdabf.DateTimeAttr = _fagbe
			continue
		}
		if _afbbge.Name.Local == "\u006d\u0061\u0078\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_ebebge, _ggeaf := _g.ParseUint(_afbbge.Value, 10, 32)
			if _ggeaf != nil {
				return _ggeaf
			}
			_bdabf.MaxSheetIdAttr = uint32(_ebebge)
			continue
		}
		if _afbbge.Name.Local == "\u0075\u0073\u0065\u0072\u004e\u0061\u006d\u0065" {
			_fdcgf, _bgaac := _afbbge.Value, error(nil)
			if _bgaac != nil {
				return _bgaac
			}
			_bdabf.UserNameAttr = _fdcgf
			continue
		}
		if _afbbge.Name.Local == "\u006d\u0069\u006e\u0052\u0049\u0064" {
			_baade, _fgdef := _g.ParseUint(_afbbge.Value, 10, 32)
			if _fgdef != nil {
				return _fgdef
			}
			_fbgea := uint32(_baade)
			_bdabf.MinRIdAttr = &_fbgea
			continue
		}
		if _afbbge.Name.Local == "\u006d\u0061\u0078\u0052\u0049\u0064" {
			_fccgd, _cgbddc := _g.ParseUint(_afbbge.Value, 10, 32)
			if _cgbddc != nil {
				return _cgbddc
			}
			_ggabad := uint32(_fccgd)
			_bdabf.MaxRIdAttr = &_ggabad
			continue
		}
	}
_adgcbb:
	for {
		_cebae, _fcefb := d.Token()
		if _fcefb != nil {
			return _fcefb
		}
		switch _acdacd := _cebae.(type) {
		case _b.StartElement:
			switch _acdacd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070"}:
				if _edace := d.DecodeElement(_bdabf.SheetIdMap, &_acdacd); _edace != nil {
					return _edace
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0076i\u0065\u0077\u0065\u0064\u004c\u0069\u0073\u0074"}:
				_bdabf.ReviewedList = NewCT_ReviewedRevisions()
				if _cfaae := d.DecodeElement(_bdabf.ReviewedList, &_acdacd); _cfaae != nil {
					return _cfaae
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdabf.ExtLst = NewCT_ExtensionList()
				if _bfda := d.DecodeElement(_bdabf.ExtLst, &_acdacd); _bfda != nil {
					return _bfda
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048\u0065\u0061\u0064\u0065\u0072\u0020\u0025\u0076", _acdacd.Name)
				if _dfgfg := d.Skip(); _dfgfg != nil {
					return _dfgfg
				}
			}
		case _b.EndElement:
			break _adgcbb
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_bffbf *CT_TableStyle) ValidateWithPath(path string) error {
	for _gbbfcb, _eaeeb := range _bffbf.TableStyleElement {
		if _ffcbb := _eaeeb.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065E\u006c\u0065\u006d\u0065\u006e\u0074\u005b\u0025\u0064\u005d", path, _gbbfcb)); _ffcbb != nil {
			return _ffcbb
		}
	}
	return nil
}
func (_ggada *CT_SheetIdMap) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfgd := range start.Attr {
		if _ddfgd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_ecffe, _bbcbd := _g.ParseUint(_ddfgd.Value, 10, 32)
			if _bbcbd != nil {
				return _bbcbd
			}
			_cbcae := uint32(_ecffe)
			_ggada.CountAttr = &_cbcae
			continue
		}
	}
_ccccec:
	for {
		_ecabfa, _decagb := d.Token()
		if _decagb != nil {
			return _decagb
		}
		switch _fecbe := _ecabfa.(type) {
		case _b.StartElement:
			switch _fecbe.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}:
				_gfdbbd := NewCT_SheetId()
				if _gegbfb := d.DecodeElement(_gfdbbd, &_fecbe); _gegbfb != nil {
					return _gegbfb
				}
				_ggada.SheetId = append(_ggada.SheetId, _gfdbbd)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070 \u0025\u0076", _fecbe.Name)
				if _dbaad := d.Skip(); _dbaad != nil {
					return _dbaad
				}
			}
		case _b.EndElement:
			break _ccccec
		case _b.CharData:
		}
	}
	return nil
}
func (_cfffa *CT_OleObjects) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_aebdg:
	for {
		_gdedg, _dgbge := d.Token()
		if _dgbge != nil {
			return _dgbge
		}
		switch _ccffa := _gdedg.(type) {
		case _b.StartElement:
			switch _ccffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fl\u0065\u004f\u0062\u006a\u0065\u0063t"}:
				_dbbgf := NewCT_OleObject()
				if _geafgd := d.DecodeElement(_dbbgf, &_ccffa); _geafgd != nil {
					return _geafgd
				}
				_cfffa.OleObject = append(_cfffa.OleObject, _dbbgf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004fl\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073 \u0025\u0076", _ccffa.Name)
				if _ffgbf := d.Skip(); _ffgbf != nil {
					return _ffgbf
				}
			}
		case _b.EndElement:
			break _aebdg
		case _b.CharData:
		}
	}
	return nil
}
func (_cbcfc ST_Axis) Validate() error { return _cbcfc.ValidateWithPath("") }

// ValidateWithPath validates the CT_TableFormula and its children, prefixing error messages with path
func (_efccc *CT_TableFormula) ValidateWithPath(path string) error { return nil }
func NewCT_Break() *CT_Break                                       { _gcf := &CT_Break{}; return _gcf }

// Validate validates the CT_Index and its children
func (_gffge *CT_Index) Validate() error {
	return _gffge.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078")
}
func (_ggfce *CT_MeasureDimensionMaps) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggfce.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ggfce.CountAttr)})
	}
	e.EncodeToken(start)
	if _ggfce.Map != nil {
		_fceca := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006d\u0061\u0070"}}
		for _, _ebgaa := range _ggfce.Map {
			e.EncodeElement(_ebgaa, _fceca)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgfaf *CT_RevisionSheetRename) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _afegd := range start.Attr {
		if _afegd.Name.Local == "\u0073h\u0065\u0065\u0074\u0049\u0064" {
			_edfcc, _aeadb := _g.ParseUint(_afegd.Value, 10, 32)
			if _aeadb != nil {
				return _aeadb
			}
			_bgfaf.SheetIdAttr = uint32(_edfcc)
			continue
		}
		if _afegd.Name.Local == "\u006fl\u0064\u004e\u0061\u006d\u0065" {
			_fgfac, _bfcfca := _afegd.Value, error(nil)
			if _bfcfca != nil {
				return _bfcfca
			}
			_bgfaf.OldNameAttr = _fgfac
			continue
		}
		if _afegd.Name.Local == "\u006ee\u0077\u004e\u0061\u006d\u0065" {
			_daefe, _fffgdd := _afegd.Value, error(nil)
			if _fffgdd != nil {
				return _fffgdd
			}
			_bgfaf.NewNameAttr = _daefe
			continue
		}
		if _afegd.Name.Local == "\u0072\u0049\u0064" {
			_bgdgb, _ggfea := _g.ParseUint(_afegd.Value, 10, 32)
			if _ggfea != nil {
				return _ggfea
			}
			_fgddb := uint32(_bgdgb)
			_bgfaf.RIdAttr = &_fgddb
			continue
		}
		if _afegd.Name.Local == "\u0075\u0061" {
			_deeac, _bdeef := _g.ParseBool(_afegd.Value)
			if _bdeef != nil {
				return _bdeef
			}
			_bgfaf.UaAttr = &_deeac
			continue
		}
		if _afegd.Name.Local == "\u0072\u0061" {
			_fgbeb, _aafaf := _g.ParseBool(_afegd.Value)
			if _aafaf != nil {
				return _aafaf
			}
			_bgfaf.RaAttr = &_fgbeb
			continue
		}
	}
_babfd:
	for {
		_dgfbb, _edfdg := d.Token()
		if _edfdg != nil {
			return _edfdg
		}
		switch _ccdebf := _dgfbb.(type) {
		case _b.StartElement:
			switch _ccdebf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgfaf.ExtLst = NewCT_ExtensionList()
				if _gbacg := d.DecodeElement(_bgfaf.ExtLst, &_ccdebf); _gbacg != nil {
					return _gbacg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0052\u0065\u0076\u0069s\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061\u006d\u0065\u0020\u0025\u0076", _ccdebf.Name)
				if _dddgfa := d.Skip(); _dddgfa != nil {
					return _dddgfa
				}
			}
		case _b.EndElement:
			break _babfd
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_DynamicFilterTypeUnset        ST_DynamicFilterType = 0
	ST_DynamicFilterTypeNull         ST_DynamicFilterType = 1
	ST_DynamicFilterTypeAboveAverage ST_DynamicFilterType = 2
	ST_DynamicFilterTypeBelowAverage ST_DynamicFilterType = 3
	ST_DynamicFilterTypeTomorrow     ST_DynamicFilterType = 4
	ST_DynamicFilterTypeToday        ST_DynamicFilterType = 5
	ST_DynamicFilterTypeYesterday    ST_DynamicFilterType = 6
	ST_DynamicFilterTypeNextWeek     ST_DynamicFilterType = 7
	ST_DynamicFilterTypeThisWeek     ST_DynamicFilterType = 8
	ST_DynamicFilterTypeLastWeek     ST_DynamicFilterType = 9
	ST_DynamicFilterTypeNextMonth    ST_DynamicFilterType = 10
	ST_DynamicFilterTypeThisMonth    ST_DynamicFilterType = 11
	ST_DynamicFilterTypeLastMonth    ST_DynamicFilterType = 12
	ST_DynamicFilterTypeNextQuarter  ST_DynamicFilterType = 13
	ST_DynamicFilterTypeThisQuarter  ST_DynamicFilterType = 14
	ST_DynamicFilterTypeLastQuarter  ST_DynamicFilterType = 15
	ST_DynamicFilterTypeNextYear     ST_DynamicFilterType = 16
	ST_DynamicFilterTypeThisYear     ST_DynamicFilterType = 17
	ST_DynamicFilterTypeLastYear     ST_DynamicFilterType = 18
	ST_DynamicFilterTypeYearToDate   ST_DynamicFilterType = 19
	ST_DynamicFilterTypeQ1           ST_DynamicFilterType = 20
	ST_DynamicFilterTypeQ2           ST_DynamicFilterType = 21
	ST_DynamicFilterTypeQ3           ST_DynamicFilterType = 22
	ST_DynamicFilterTypeQ4           ST_DynamicFilterType = 23
	ST_DynamicFilterTypeM1           ST_DynamicFilterType = 24
	ST_DynamicFilterTypeM2           ST_DynamicFilterType = 25
	ST_DynamicFilterTypeM3           ST_DynamicFilterType = 26
	ST_DynamicFilterTypeM4           ST_DynamicFilterType = 27
	ST_DynamicFilterTypeM5           ST_DynamicFilterType = 28
	ST_DynamicFilterTypeM6           ST_DynamicFilterType = 29
	ST_DynamicFilterTypeM7           ST_DynamicFilterType = 30
	ST_DynamicFilterTypeM8           ST_DynamicFilterType = 31
	ST_DynamicFilterTypeM9           ST_DynamicFilterType = 32
	ST_DynamicFilterTypeM10          ST_DynamicFilterType = 33
	ST_DynamicFilterTypeM11          ST_DynamicFilterType = 34
	ST_DynamicFilterTypeM12          ST_DynamicFilterType = 35
)

// Validate validates the CT_CalculatedMembers and its children
func (_dacf *CT_CalculatedMembers) Validate() error {
	return _dacf.ValidateWithPath("C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073")
}

type ST_Pane byte

func NewCT_DataFields() *CT_DataFields { _adfc := &CT_DataFields{}; return _adfc }
func (_bea *CT_CellSmartTagPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006b\u0065\u0079"}, Value: _a.Sprintf("\u0025\u0076", _bea.KeyAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _bea.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fcaba *CT_VerticalAlignFontProperty) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fcaba.ValAttr = _ff.ST_VerticalAlignRun(1)
	for _, _aaaddd := range start.Attr {
		if _aaaddd.Name.Local == "\u0076\u0061\u006c" {
			_fcaba.ValAttr.UnmarshalXMLAttr(_aaaddd)
			continue
		}
	}
	for {
		_fcegdb, _gedfd := d.Token()
		if _gedfd != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006cA\u006c\u0069\u0067\u006e\u0046\u006f\u006e\u0074\u0050\u0072op\u0065\u0072\u0074y\u003a \u0025\u0073", _gedfd)
		}
		if _dfcdb, _fcbef := _fcegdb.(_b.EndElement); _fcbef && _dfcdb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gcbfe *CT_DdeValues) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fddgg := range start.Attr {
		if _fddgg.Name.Local == "\u0072\u006f\u0077\u0073" {
			_deaa, _ebadd := _g.ParseUint(_fddgg.Value, 10, 32)
			if _ebadd != nil {
				return _ebadd
			}
			_cbaaa := uint32(_deaa)
			_gcbfe.RowsAttr = &_cbaaa
			continue
		}
		if _fddgg.Name.Local == "\u0063\u006f\u006c\u0073" {
			_gedg, _eagf := _g.ParseUint(_fddgg.Value, 10, 32)
			if _eagf != nil {
				return _eagf
			}
			_ebfad := uint32(_gedg)
			_gcbfe.ColsAttr = &_ebfad
			continue
		}
	}
_aebfdc:
	for {
		_gaddf, _gbfac := d.Token()
		if _gbfac != nil {
			return _gbfac
		}
		switch _adbd := _gaddf.(type) {
		case _b.StartElement:
			switch _adbd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076\u0061\u006cu\u0065"}:
				_aeaba := NewCT_DdeValue()
				if _eadcf := d.DecodeElement(_aeaba, &_adbd); _eadcf != nil {
					return _eadcf
				}
				_gcbfe.Value = append(_gcbfe.Value, _aeaba)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_D\u0064\u0065V\u0061\u006c\u0075\u0065\u0073\u0020\u0025\u0076", _adbd.Name)
				if _cgdfad := d.Skip(); _cgdfad != nil {
					return _cgdfad
				}
			}
		case _b.EndElement:
			break _aebfdc
		case _b.CharData:
		}
	}
	return nil
}
func (_bfbdc ST_PageOrder) Validate() error { return _bfbdc.ValidateWithPath("") }

type CT_TableStyleInfo struct {

	// Style Name
	NameAttr *string

	// Show First Column
	ShowFirstColumnAttr *bool

	// Show Last Column
	ShowLastColumnAttr *bool

	// Show Row Stripes
	ShowRowStripesAttr *bool

	// Show Column Stripes
	ShowColumnStripesAttr *bool
}

// Validate validates the CT_CustomChartsheetViews and its children
func (_eaccg *CT_CustomChartsheetViews) Validate() error {
	return _eaccg.ValidateWithPath("\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

// ValidateWithPath validates the CT_QueryTableField and its children, prefixing error messages with path
func (_acdead *CT_QueryTableField) ValidateWithPath(path string) error {
	if _acdead.ExtLst != nil {
		if _gggcd := _acdead.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gggcd != nil {
			return _gggcd
		}
	}
	return nil
}
func (_dddbe ST_DvAspect) String() string {
	switch _dddbe {
	case 0:
		return ""
	case 1:
		return "\u0044\u0056A\u0053\u0050\u0045C\u0054\u005f\u0043\u004f\u004e\u0054\u0045\u004e\u0054"
	case 2:
		return "\u0044\u0056\u0041\u0053\u0050\u0045\u0043\u0054\u005f\u0049\u0043\u004f\u004e"
	}
	return ""
}

const (
	ST_CellTypeUnset     ST_CellType = 0
	ST_CellTypeB         ST_CellType = 1
	ST_CellTypeN         ST_CellType = 2
	ST_CellTypeE         ST_CellType = 3
	ST_CellTypeS         ST_CellType = 4
	ST_CellTypeStr       ST_CellType = 5
	ST_CellTypeInlineStr ST_CellType = 6
)

type CT_DataFields struct {

	// Data Items Count
	CountAttr *uint32

	// Data Field Item
	DataField []*CT_DataField
}

func (_dgfbc *CT_CustomWorkbookView) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dgfbc.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _gagf := range start.Attr {
		if _gagf.Name.Local == "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c" {
			_gede, _cggbe := _g.ParseBool(_gagf.Value)
			if _cggbe != nil {
				return _cggbe
			}
			_dgfbc.ShowVerticalScrollAttr = &_gede
			continue
		}
		if _gagf.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073" {
			_bgcg, _bffg := _g.ParseBool(_gagf.Value)
			if _bffg != nil {
				return _bffg
			}
			_dgfbc.ShowSheetTabsAttr = &_bgcg
			continue
		}
		if _gagf.Name.Local == "\u0067\u0075\u0069\u0064" {
			_agdeb, _gbgf := _gagf.Value, error(nil)
			if _gbgf != nil {
				return _gbgf
			}
			_dgfbc.GuidAttr = _agdeb
			continue
		}
		if _gagf.Name.Local == "\u0078W\u0069\u006e\u0064\u006f\u0077" {
			_beacg, _dbaa := _g.ParseInt(_gagf.Value, 10, 32)
			if _dbaa != nil {
				return _dbaa
			}
			_cccgg := int32(_beacg)
			_dgfbc.XWindowAttr = &_cccgg
			continue
		}
		if _gagf.Name.Local == "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c" {
			_adgb, _eacge := _g.ParseUint(_gagf.Value, 10, 32)
			if _eacge != nil {
				return _eacge
			}
			_gfbgc := uint32(_adgb)
			_dgfbc.MergeIntervalAttr = &_gfbgc
			continue
		}
		if _gagf.Name.Local == "\u0079W\u0069\u006e\u0064\u006f\u0077" {
			_fafcb, _acbbb := _g.ParseInt(_gagf.Value, 10, 32)
			if _acbbb != nil {
				return _acbbb
			}
			_dcabb := int32(_fafcb)
			_dgfbc.YWindowAttr = &_dcabb
			continue
		}
		if _gagf.Name.Local == "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063" {
			_bdaaa, _feagb := _g.ParseBool(_gagf.Value)
			if _feagb != nil {
				return _feagb
			}
			_dgfbc.OnlySyncAttr = &_bdaaa
			continue
		}
		if _gagf.Name.Local == "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068" {
			_abded, _bded := _g.ParseUint(_gagf.Value, 10, 32)
			if _bded != nil {
				return _bded
			}
			_dgfbc.WindowWidthAttr = uint32(_abded)
			continue
		}
		if _gagf.Name.Local == "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073" {
			_deba, _ageff := _g.ParseBool(_gagf.Value)
			if _ageff != nil {
				return _ageff
			}
			_dgfbc.IncludePrintSettingsAttr = &_deba
			continue
		}
		if _gagf.Name.Local == "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074" {
			_bgaa, _bcec := _g.ParseUint(_gagf.Value, 10, 32)
			if _bcec != nil {
				return _bcec
			}
			_dgfbc.WindowHeightAttr = uint32(_bgaa)
			continue
		}
		if _gagf.Name.Local == "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f" {
			_acfbg, _aebfg := _g.ParseUint(_gagf.Value, 10, 32)
			if _aebfg != nil {
				return _aebfg
			}
			_cbfd := uint32(_acfbg)
			_dgfbc.TabRatioAttr = &_cbfd
			continue
		}
		if _gagf.Name.Local == "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072" {
			_bagge, _egcbd := _g.ParseBool(_gagf.Value)
			if _egcbd != nil {
				return _egcbd
			}
			_dgfbc.ShowFormulaBarAttr = &_bagge
			continue
		}
		if _gagf.Name.Local == "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e" {
			_gdbeb, _gbege := _g.ParseBool(_gagf.Value)
			if _gbege != nil {
				return _gbege
			}
			_dgfbc.ChangesSavedWinAttr = &_gdbeb
			continue
		}
		if _gagf.Name.Local == "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d" {
			_eedf, _ebfag := _g.ParseBool(_gagf.Value)
			if _ebfag != nil {
				return _ebfag
			}
			_dgfbc.MaximizedAttr = &_eedf
			continue
		}
		if _gagf.Name.Local == "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_dgfbc.ShowCommentsAttr.UnmarshalXMLAttr(_gagf)
			continue
		}
		if _gagf.Name.Local == "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065" {
			_faee, _daefc := _g.ParseBool(_gagf.Value)
			if _daefc != nil {
				return _daefc
			}
			_dgfbc.AutoUpdateAttr = &_faee
			continue
		}
		if _gagf.Name.Local == "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_aecgaa, _gcfa := _g.ParseUint(_gagf.Value, 10, 32)
			if _gcfa != nil {
				return _gcfa
			}
			_dgfbc.ActiveSheetIdAttr = uint32(_aecgaa)
			continue
		}
		if _gagf.Name.Local == "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c" {
			_aafd, _eeeeb := _g.ParseBool(_gagf.Value)
			if _eeeeb != nil {
				return _eeeeb
			}
			_dgfbc.ShowHorizontalScrollAttr = &_aafd
			continue
		}
		if _gagf.Name.Local == "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072" {
			_feba, _egfe := _g.ParseBool(_gagf.Value)
			if _egfe != nil {
				return _egfe
			}
			_dgfbc.ShowStatusbarAttr = &_feba
			continue
		}
		if _gagf.Name.Local == "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077" {
			_bbaff, _cegg := _g.ParseBool(_gagf.Value)
			if _cegg != nil {
				return _cegg
			}
			_dgfbc.PersonalViewAttr = &_bbaff
			continue
		}
		if _gagf.Name.Local == "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d" {
			_bbbfg, _effa := _g.ParseBool(_gagf.Value)
			if _effa != nil {
				return _effa
			}
			_dgfbc.MinimizedAttr = &_bbbfg
			continue
		}
		if _gagf.Name.Local == "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073" {
			_dgfbc.ShowObjectsAttr.UnmarshalXMLAttr(_gagf)
			continue
		}
		if _gagf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_bebd, _ggfa := _gagf.Value, error(nil)
			if _ggfa != nil {
				return _ggfa
			}
			_dgfbc.NameAttr = _bebd
			continue
		}
		if _gagf.Name.Local == "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c" {
			_gebce, _befac := _g.ParseBool(_gagf.Value)
			if _befac != nil {
				return _befac
			}
			_dgfbc.IncludeHiddenRowColAttr = &_gebce
			continue
		}
	}
_dbbfe:
	for {
		_fdcf, _ggdbf := d.Token()
		if _ggdbf != nil {
			return _ggdbf
		}
		switch _eebb := _fdcf.(type) {
		case _b.StartElement:
			switch _eebb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgfbc.ExtLst = NewCT_ExtensionList()
				if _dadfg := d.DecodeElement(_dgfbc.ExtLst, &_eebb); _dadfg != nil {
					return _dadfg
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0020\u0025\u0076", _eebb.Name)
				if _acbf := d.Skip(); _acbf != nil {
					return _acbf
				}
			}
		case _b.EndElement:
			break _dbbfe
		case _b.CharData:
		}
	}
	return nil
}

type CT_FieldGroup struct {

	// Parent
	ParAttr *uint32

	// Field Base
	BaseAttr *uint32

	// Range Grouping Properties
	RangePr *CT_RangePr

	// Discrete Grouping Properties
	DiscretePr *CT_DiscretePr

	// OLAP Group Items
	GroupItems *CT_GroupItems
}

func (_cadcg *CT_SheetIdMap) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cadcg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cadcg.CountAttr)})
	}
	e.EncodeToken(start)
	_fadfg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0068\u0065\u0065\u0074\u0049\u0064"}}
	for _, _eabfgd := range _cadcg.SheetId {
		e.EncodeElement(_eabfgd, _fadfg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotHierarchies and its children, prefixing error messages with path
func (_cgefd *CT_PivotHierarchies) ValidateWithPath(path string) error {
	for _bbfbda, _cbcab := range _cgefd.PivotHierarchy {
		if _eeafb := _cbcab.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0050\u0069vo\u0074H\u0069\u0065\u0072\u0061\u0072c\u0068\u0079\u005b\u0025\u0064\u005d", path, _bbfbda)); _eeafb != nil {
			return _eeafb
		}
	}
	return nil
}

// Validate validates the CT_XmlPr and its children
func (_cbbba *CT_XmlPr) Validate() error {
	return _cbbba.ValidateWithPath("\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072")
}
func NewCT_CalculatedItems() *CT_CalculatedItems { _cceb := &CT_CalculatedItems{}; return _cceb }
func NewSst() *Sst                               { _dgfdf := &Sst{}; _dgfdf.CT_Sst = *NewCT_Sst(); return _dgfdf }
func (_bfdcf ST_SortBy) Validate() error         { return _bfdcf.ValidateWithPath("") }

// ValidateWithPath validates the CT_RElt and its children, prefixing error messages with path
func (_ffdea *CT_RElt) ValidateWithPath(path string) error {
	if _ffdea.RPr != nil {
		if _bacaf := _ffdea.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _bacaf != nil {
			return _bacaf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PivotArea and its children, prefixing error messages with path
func (_cgfdda *CT_PivotArea) ValidateWithPath(path string) error {
	if _edffg := _cgfdda.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _edffg != nil {
		return _edffg
	}
	if _gfdbg := _cgfdda.AxisAttr.ValidateWithPath(path + "\u002fA\u0078\u0069\u0073\u0041\u0074\u0074r"); _gfdbg != nil {
		return _gfdbg
	}
	if _cgfdda.References != nil {
		if _dbeeb := _cgfdda.References.ValidateWithPath(path + "/\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"); _dbeeb != nil {
			return _dbeeb
		}
	}
	if _cgfdda.ExtLst != nil {
		if _gdcfg := _cgfdda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gdcfg != nil {
			return _gdcfg
		}
	}
	return nil
}

type CT_WebPublishObject struct {

	// Id
	IdAttr uint32

	// Div Id
	DivIdAttr string

	// Source Object
	SourceObjectAttr *string

	// Destination File
	DestinationFileAttr string

	// Title
	TitleAttr *string

	// Auto Republish
	AutoRepublishAttr *bool
}

func NewCT_CustomChartsheetViews() *CT_CustomChartsheetViews {
	_gefg := &CT_CustomChartsheetViews{}
	return _gefg
}
func (_gbcefd *ST_VerticalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_caddeg, _ggfgca := d.Token()
	if _ggfgca != nil {
		return _ggfgca
	}
	if _bdaafc, _aaaaef := _caddeg.(_b.EndElement); _aaaaef && _bdaafc.Name == start.Name {
		*_gbcefd = 1
		return nil
	}
	if _deafdd, _ffaee := _caddeg.(_b.CharData); !_ffaee {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _caddeg)
	} else {
		switch string(_deafdd) {
		case "":
			*_gbcefd = 0
		case "\u0074\u006f\u0070":
			*_gbcefd = 1
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_gbcefd = 2
		case "\u0062\u006f\u0074\u0074\u006f\u006d":
			*_gbcefd = 3
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_gbcefd = 4
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_gbcefd = 5
		}
	}
	_caddeg, _ggfgca = d.Token()
	if _ggfgca != nil {
		return _ggfgca
	}
	if _ffbaf, _ccaca := _caddeg.(_b.EndElement); _ccaca && _ffbaf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _caddeg)
}

type CT_NumFmt struct {

	// Number Format Id
	NumFmtIdAttr uint32

	// Number Format Code
	FormatCodeAttr string
}
type CT_RevisionFormatting struct {

	// Sheet Id
	SheetIdAttr uint32

	// Row or Column Formatting Change
	XfDxfAttr *bool

	// Style
	SAttr *bool

	// Sequence Of References
	SqrefAttr ST_Sqref

	// Start index
	StartAttr *uint32

	// Length
	LengthAttr *uint32

	// Formatting
	Dxf    *CT_Dxf
	ExtLst *CT_ExtensionList
}

func (_dafg *CT_CellSmartTags) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _dafg.RAttr)})
	e.EncodeToken(start)
	_dbac := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ac\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067"}}
	for _, _fdbdc := range _dafg.CellSmartTag {
		e.EncodeElement(_fdbdc, _dbac)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SortTypeUnset             ST_SortType = 0
	ST_SortTypeNone              ST_SortType = 1
	ST_SortTypeAscending         ST_SortType = 2
	ST_SortTypeDescending        ST_SortType = 3
	ST_SortTypeAscendingAlpha    ST_SortType = 4
	ST_SortTypeDescendingAlpha   ST_SortType = 5
	ST_SortTypeAscendingNatural  ST_SortType = 6
	ST_SortTypeDescendingNatural ST_SortType = 7
)

// ValidateWithPath validates the CT_ChartFormat and its children, prefixing error messages with path
func (_egfc *CT_ChartFormat) ValidateWithPath(path string) error {
	if _cbdbg := _egfc.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _cbdbg != nil {
		return _cbdbg
	}
	return nil
}

// ValidateWithPath validates the CT_Pages and its children, prefixing error messages with path
func (_efbbf *CT_Pages) ValidateWithPath(path string) error {
	for _bccad, _beaa := range _efbbf.Page {
		if _fbeae := _beaa.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0050\u0061\u0067\u0065\u005b\u0025\u0064\u005d", path, _bccad)); _fbeae != nil {
			return _fbeae
		}
	}
	return nil
}
func (_cage *CT_ControlPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cage.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.LockedAttr))})
	}
	if _cage.DefaultSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.DefaultSizeAttr))})
	}
	if _cage.PrintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0072\u0069n\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.PrintAttr))})
	}
	if _cage.DisabledAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.DisabledAttr))})
	}
	if _cage.RecalcAlwaysAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0063a\u006c\u0063\u0041\u006c\u0077\u0061\u0079\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.RecalcAlwaysAttr))})
	}
	if _cage.UiObjectAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.UiObjectAttr))})
	}
	if _cage.AutoFillAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.AutoFillAttr))})
	}
	if _cage.AutoLineAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.AutoLineAttr))})
	}
	if _cage.AutoPictAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cage.AutoPictAttr))})
	}
	if _cage.MacroAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0061\u0063r\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_cage.MacroAttr)})
	}
	if _cage.AltTextAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061l\u0074\u0054\u0065\u0078\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cage.AltTextAttr)})
	}
	if _cage.LinkedCellAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u006e\u006b\u0065\u0064\u0043\u0065\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_cage.LinkedCellAttr)})
	}
	if _cage.ListFillRangeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u0069\u0073\u0074\u0046\u0069\u006c\u006c\u0052\u0061\u006e\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cage.ListFillRangeAttr)})
	}
	if _cage.CfAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_cage.CfAttr)})
	}
	if _cage.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_cage.IdAttr)})
	}
	e.EncodeToken(start)
	_gdfc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0061\u006e\u0063\u0068\u006fr"}}
	e.EncodeElement(_cage.Anchor, _gdfc)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_begb *CT_CalculatedItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _begb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_begb.CountAttr)})
	}
	e.EncodeToken(start)
	_gegbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d"}}
	for _, _adcg := range _begb.CalculatedItem {
		e.EncodeElement(_adcg, _gegbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_DataBar struct {

	// Minimum Length
	MinLengthAttr *uint32

	// Maximum Length
	MaxLengthAttr *uint32

	// Show Values
	ShowValueAttr *bool

	// Conditional Format Value Object
	Cfvo []*CT_Cfvo

	// Data Bar Color
	Color *CT_Color
}

// ValidateWithPath validates the CT_CustomSheetView and its children, prefixing error messages with path
func (_dgbgf *CT_CustomSheetView) ValidateWithPath(path string) error {
	if !_ff.ST_GuidPatternRe.MatchString(_dgbgf.GuidAttr) {
		return _a.Errorf("\u0025\u0073\u002f\u006d\u002e\u0047\u0075\u0069\u0064\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u006da\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _ff.ST_GuidPatternRe, _dgbgf.GuidAttr)
	}
	if _deeg := _dgbgf.StateAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _deeg != nil {
		return _deeg
	}
	if _aabd := _dgbgf.ViewAttr.ValidateWithPath(path + "\u002fV\u0069\u0065\u0077\u0041\u0074\u0074r"); _aabd != nil {
		return _aabd
	}
	if _dgbgf.Pane != nil {
		if _fbcg := _dgbgf.Pane.ValidateWithPath(path + "\u002f\u0050\u0061n\u0065"); _fbcg != nil {
			return _fbcg
		}
	}
	if _dgbgf.Selection != nil {
		if _ababf := _dgbgf.Selection.ValidateWithPath(path + "\u002f\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _ababf != nil {
			return _ababf
		}
	}
	if _dgbgf.RowBreaks != nil {
		if _fdeb := _dgbgf.RowBreaks.ValidateWithPath(path + "\u002f\u0052\u006f\u0077\u0042\u0072\u0065\u0061\u006b\u0073"); _fdeb != nil {
			return _fdeb
		}
	}
	if _dgbgf.ColBreaks != nil {
		if _deabf := _dgbgf.ColBreaks.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u0042\u0072\u0065\u0061\u006b\u0073"); _deabf != nil {
			return _deabf
		}
	}
	if _dgbgf.PageMargins != nil {
		if _gcdc := _dgbgf.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _gcdc != nil {
			return _gcdc
		}
	}
	if _dgbgf.PrintOptions != nil {
		if _cggb := _dgbgf.PrintOptions.ValidateWithPath(path + "\u002f\u0050\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073"); _cggb != nil {
			return _cggb
		}
	}
	if _dgbgf.PageSetup != nil {
		if _acdef := _dgbgf.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _acdef != nil {
			return _acdef
		}
	}
	if _dgbgf.HeaderFooter != nil {
		if _dabf := _dgbgf.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _dabf != nil {
			return _dabf
		}
	}
	if _dgbgf.AutoFilter != nil {
		if _feadd := _dgbgf.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _feadd != nil {
			return _feadd
		}
	}
	if _dgbgf.ExtLst != nil {
		if _dbcd := _dgbgf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dbcd != nil {
			return _dbcd
		}
	}
	return nil
}
func (_bggbc ST_VerticalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bgcbf := _b.Attr{}
	_bgcbf.Name = name
	switch _bggbc {
	case ST_VerticalAlignmentUnset:
		_bgcbf.Value = ""
	case ST_VerticalAlignmentTop:
		_bgcbf.Value = "\u0074\u006f\u0070"
	case ST_VerticalAlignmentCenter:
		_bgcbf.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_VerticalAlignmentBottom:
		_bgcbf.Value = "\u0062\u006f\u0074\u0074\u006f\u006d"
	case ST_VerticalAlignmentJustify:
		_bgcbf.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_VerticalAlignmentDistributed:
		_bgcbf.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _bgcbf, nil
}

type CT_ObjectAnchor struct {

	// Move With Cells
	MoveWithCellsAttr *bool

	// Size With Cells
	SizeWithCellsAttr *bool
	From              *_bb.From
	To                *_bb.To
}
type CT_Item struct {

	// Item User Caption
	NAttr *string

	// Item Type
	TAttr ST_ItemType

	// Hidden
	HAttr *bool

	// Character
	SAttr *bool

	// Hide Details
	SdAttr *bool

	// Calculated Member
	FAttr *bool

	// Missing
	MAttr *bool

	// Child Items
	CAttr *bool

	// Item Index
	XAttr *uint32

	// Expanded
	DAttr *bool

	// Drill Across Attributes
	EAttr *bool
}

// Validate validates the CT_ExternalLink and its children
func (_ecdce *CT_ExternalLink) Validate() error {
	return _ecdce.ValidateWithPath("\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b")
}

type CT_PivotAreaReferences struct {

	// Pivot Filter Count
	CountAttr *uint32

	// Reference
	Reference []*CT_PivotAreaReference
}

func (_dfaded *CT_ProtectedRanges) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_dfbgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065"}}
	for _, _dcaee := range _dfaded.ProtectedRange {
		e.EncodeElement(_dcaee, _dfbgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SingleXmlCells and its children
func (_bgbdcg *CT_SingleXmlCells) Validate() error {
	return _bgbdcg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073")
}

type StyleSheet struct{ CT_Stylesheet }

const (
	ST_OleUpdateUnset            ST_OleUpdate = 0
	ST_OleUpdateOLEUPDATE_ALWAYS ST_OleUpdate = 1
	ST_OleUpdateOLEUPDATE_ONCALL ST_OleUpdate = 2
)

// ValidateWithPath validates the CT_Row and its children, prefixing error messages with path
func (_bccga *CT_Row) ValidateWithPath(path string) error {
	for _bbgba, _decgae := range _bccga.C {
		if _adcad := _decgae.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u005b\u0025\u0064\u005d", path, _bbgba)); _adcad != nil {
			return _adcad
		}
	}
	if _bccga.ExtLst != nil {
		if _caaaed := _bccga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _caaaed != nil {
			return _caaaed
		}
	}
	return nil
}
func (_edgfa ST_CellComments) Validate() error { return _edgfa.ValidateWithPath("") }
func NewCT_Row() *CT_Row                       { _egacd := &CT_Row{}; return _egacd }
func (_fbdabg ST_DdeValueType) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbdabg.String(), start)
}

// ValidateWithPath validates the AG_AutoFormat and its children, prefixing error messages with path
func (_fdd *AG_AutoFormat) ValidateWithPath(path string) error { return nil }
func (_bebcbf ST_CellFormulaType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_fgddad := _b.Attr{}
	_fgddad.Name = name
	switch _bebcbf {
	case ST_CellFormulaTypeUnset:
		_fgddad.Value = ""
	case ST_CellFormulaTypeNormal:
		_fgddad.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_CellFormulaTypeArray:
		_fgddad.Value = "\u0061\u0072\u0072a\u0079"
	case ST_CellFormulaTypeDataTable:
		_fgddad.Value = "\u0064a\u0074\u0061\u0054\u0061\u0062\u006ce"
	case ST_CellFormulaTypeShared:
		_fgddad.Value = "\u0073\u0068\u0061\u0072\u0065\u0064"
	}
	return _fgddad, nil
}
func (_bbbede *ST_GroupBy) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bbbede = 0
	case "\u0072\u0061\u006eg\u0065":
		*_bbbede = 1
	case "\u0073e\u0063\u006f\u006e\u0064\u0073":
		*_bbbede = 2
	case "\u006di\u006e\u0075\u0074\u0065\u0073":
		*_bbbede = 3
	case "\u0068\u006f\u0075r\u0073":
		*_bbbede = 4
	case "\u0064\u0061\u0079\u0073":
		*_bbbede = 5
	case "\u006d\u006f\u006e\u0074\u0068\u0073":
		*_bbbede = 6
	case "\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073":
		*_bbbede = 7
	case "\u0079\u0065\u0061r\u0073":
		*_bbbede = 8
	}
	return nil
}

type CT_TableStyles struct {

	// Table Style Count
	CountAttr *uint32

	// Default Table Style
	DefaultTableStyleAttr *string

	// Default Pivot Style
	DefaultPivotStyleAttr *string

	// Table Style
	TableStyle []*CT_TableStyle
}
type CT_Groups struct {

	// Level Group Count
	CountAttr *uint32

	// OLAP Group
	Group []*CT_LevelGroup
}

func (_ffca *CT_Hyperlink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _ffca.RefAttr)})
	if _ffca.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ffca.IdAttr)})
	}
	if _ffca.LocationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_ffca.LocationAttr)})
	}
	if _ffca.TooltipAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_ffca.TooltipAttr)})
	}
	if _ffca.DisplayAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064i\u0073\u0070\u006c\u0061\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_ffca.DisplayAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_GroupLevel struct {

	// Unique Name
	UniqueNameAttr string

	// Grouping Level Display Name
	CaptionAttr string

	// User-Defined Group Level
	UserAttr *bool

	// Custom Roll Up
	CustomRollUpAttr *bool

	// OLAP Level Groups
	Groups *CT_Groups

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}
type CT_CustomWorkbookViews struct {

	// Custom Workbook View
	CustomWorkbookView []*CT_CustomWorkbookView
}

// ValidateWithPath validates the CT_Cols and its children, prefixing error messages with path
func (_ceacfd *CT_Cols) ValidateWithPath(path string) error {
	for _babc, _aggc := range _ceacfd.Col {
		if _ecg := _aggc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u006f\u006c\u005b\u0025\u0064\u005d", path, _babc)); _ecg != nil {
			return _ecg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_MetadataTypes and its children, prefixing error messages with path
func (_bbacd *CT_MetadataTypes) ValidateWithPath(path string) error {
	for _edbda, _cceba := range _bbacd.MetadataType {
		if _gfagd := _cceba.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004det\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u005b\u0025\u0064\u005d", path, _edbda)); _gfagd != nil {
			return _gfagd
		}
	}
	return nil
}

type CT_ConditionalFormat struct {

	// Conditional Formatting Scope
	ScopeAttr ST_Scope

	// Conditional Formatting Rule Type
	TypeAttr ST_Type

	// Priority
	PriorityAttr uint32

	// Pivot Areas
	PivotAreas *CT_PivotAreas
	ExtLst     *CT_ExtensionList
}

func (_bebbg *EG_ExtensionList) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_ceccec:
	for {
		_eabge, _fcfae := d.Token()
		if _fcfae != nil {
			return _fcfae
		}
		switch _gfcfc := _eabge.(type) {
		case _b.StartElement:
			switch _gfcfc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_daeag := NewCT_Extension()
				if _fbggfb := d.DecodeElement(_daeag, &_gfcfc); _fbggfb != nil {
					return _fbggfb
				}
				_bebbg.Ext = append(_bebbg.Ext, _daeag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074\u0020\u0025v", _gfcfc.Name)
				if _defec := d.Skip(); _defec != nil {
					return _defec
				}
			}
		case _b.EndElement:
			break _ceccec
		case _b.CharData:
		}
	}
	return nil
}
func (_ddgbb *CT_ConditionalFormats) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fgdb := range start.Attr {
		if _fgdb.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abdg, _fbgd := _g.ParseUint(_fgdb.Value, 10, 32)
			if _fbgd != nil {
				return _fbgd
			}
			_fae := uint32(_abdg)
			_ddgbb.CountAttr = &_fae
			continue
		}
	}
_cgagf:
	for {
		_faaf, _bfgd := d.Token()
		if _bfgd != nil {
			return _bfgd
		}
		switch _defgf := _faaf.(type) {
		case _b.StartElement:
			switch _defgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046o\u0072\u006d\u0061\u0074"}:
				_ffbg := NewCT_ConditionalFormat()
				if _fedge := d.DecodeElement(_ffbg, &_defgf); _fedge != nil {
					return _fedge
				}
				_ddgbb.ConditionalFormat = append(_ddgbb.ConditionalFormat, _ffbg)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061\u006c\u0046\u006f\u0072\u006d\u0061\u0074\u0073\u0020\u0025\u0076", _defgf.Name)
				if _aded := d.Skip(); _aded != nil {
					return _aded
				}
			}
		case _b.EndElement:
			break _cgagf
		case _b.CharData:
		}
	}
	return nil
}
func (_aageca ST_HorizontalAlignment) ValidateWithPath(path string) error {
	switch _aageca {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aageca))
	}
	return nil
}
func (_fbdbg ST_SortBy) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fbdbg.String(), start)
}

// Validate validates the CT_FileSharing and its children
func (_dgafe *CT_FileSharing) Validate() error {
	return _dgafe.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067")
}
func (_adcgag *ST_IconSetType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_adcgag = 0
	case "\u0033A\u0072\u0072\u006f\u0077\u0073":
		*_adcgag = 1
	case "3\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_adcgag = 2
	case "\u0033\u0046\u006c\u0061\u0067\u0073":
		*_adcgag = 3
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0031":
		*_adcgag = 4
	case "\u0033T\u0072a\u0066\u0066\u0069\u0063\u004c\u0069\u0067\u0068\u0074\u0073\u0032":
		*_adcgag = 5
	case "\u0033\u0053\u0069\u0067\u006e\u0073":
		*_adcgag = 6
	case "\u0033\u0053\u0079\u006d\u0062\u006f\u006c\u0073":
		*_adcgag = 7
	case "\u0033S\u0079\u006d\u0062\u006f\u006c\u00732":
		*_adcgag = 8
	case "\u0034A\u0072\u0072\u006f\u0077\u0073":
		*_adcgag = 9
	case "4\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_adcgag = 10
	case "4\u0052\u0065\u0064\u0054\u006f\u0042\u006c\u0061\u0063\u006b":
		*_adcgag = 11
	case "\u0034R\u0061\u0074\u0069\u006e\u0067":
		*_adcgag = 12
	case "\u0034\u0054\u0072\u0061\u0066\u0066\u0069\u0063\u004ci\u0067\u0068\u0074\u0073":
		*_adcgag = 13
	case "\u0035A\u0072\u0072\u006f\u0077\u0073":
		*_adcgag = 14
	case "5\u0041\u0072\u0072\u006f\u0077\u0073\u0047\u0072\u0061\u0079":
		*_adcgag = 15
	case "\u0035R\u0061\u0074\u0069\u006e\u0067":
		*_adcgag = 16
	case "\u0035Q\u0075\u0061\u0072\u0074\u0065\u0072s":
		*_adcgag = 17
	}
	return nil
}
func NewCT_Index() *CT_Index { _fegad := &CT_Index{}; return _fegad }

type ST_CfType byte

func (_gdcbd *CT_ReviewedRevisions) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdcbd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gdcbd.CountAttr)})
	}
	e.EncodeToken(start)
	_afabbb := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0065\u0076\u0069\u0065\u0077\u0065\u0064"}}
	for _, _ebebg := range _gdcbd.Reviewed {
		e.EncodeElement(_ebebg, _afabbb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Record struct {

	// No Value
	M []*CT_Missing

	// Numeric Value
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime

	// Shared Items Index
	X []*CT_Index
}

// ValidateWithPath validates the CT_Schema and its children, prefixing error messages with path
func (_eafdbf *CT_Schema) ValidateWithPath(path string) error { return nil }

type CT_RangeSet struct {

	// Field Item Index Page 1
	I1Attr *uint32

	// Field Item Index Page 2
	I2Attr *uint32

	// Field Item index Page 3
	I3Attr *uint32

	// Field Item Index Page 4
	I4Attr *uint32

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

func (_begaf *CT_PCDKPIs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _begaf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_begaf.CountAttr)})
	}
	e.EncodeToken(start)
	if _begaf.Kpi != nil {
		_fgffg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006b\u0070\u0069"}}
		for _, _dddbc := range _begaf.Kpi {
			e.EncodeElement(_dddbc, _fgffg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Groups() *CT_Groups { _baebbb := &CT_Groups{}; return _baebbb }

// ValidateWithPath validates the CT_XStringElement and its children, prefixing error messages with path
func (_gdfabb *CT_XStringElement) ValidateWithPath(path string) error { return nil }
func (_cdbe *CT_CustomFilters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbfg := range start.Attr {
		if _gbfg.Name.Local == "\u0061\u006e\u0064" {
			_gagag, _dfdg := _g.ParseBool(_gbfg.Value)
			if _dfdg != nil {
				return _dfdg
			}
			_cdbe.AndAttr = &_gagag
			continue
		}
	}
_agcggc:
	for {
		_fbdee, _effeg := d.Token()
		if _effeg != nil {
			return _effeg
		}
		switch _dcefb := _fbdee.(type) {
		case _b.StartElement:
			switch _dcefb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072"}:
				_cdcf := NewCT_CustomFilter()
				if _bdagb := d.DecodeElement(_cdcf, &_dcefb); _bdagb != nil {
					return _bdagb
				}
				_cdbe.CustomFilter = append(_cdbe.CustomFilter, _cdcf)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025v", _dcefb.Name)
				if _cdac := d.Skip(); _cdac != nil {
					return _cdac
				}
			}
		case _b.EndElement:
			break _agcggc
		case _b.CharData:
		}
	}
	return nil
}

type ST_CellFormulaType byte

func NewCT_CustomFilters() *CT_CustomFilters { _adfe := &CT_CustomFilters{}; return _adfe }
func (_bbcec *CT_Sst) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bbcec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bbcec.CountAttr)})
	}
	if _bbcec.UniqueCountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "u\u006e\u0069\u0071\u0075\u0065\u0043\u006f\u0075\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bbcec.UniqueCountAttr)})
	}
	e.EncodeToken(start)
	if _bbcec.Si != nil {
		_egadgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0069"}}
		for _, _fdaad := range _bbcec.Si {
			e.EncodeElement(_fdaad, _egadgf)
		}
	}
	if _bbcec.ExtLst != nil {
		_bcbgce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_bbcec.ExtLst, _bcbgce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Cell and its children, prefixing error messages with path
func (_gdd *CT_Cell) ValidateWithPath(path string) error {
	if _cgbgb := _gdd.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _cgbgb != nil {
		return _cgbgb
	}
	if _gdd.F != nil {
		if _aagaa := _gdd.F.ValidateWithPath(path + "\u002f\u0046"); _aagaa != nil {
			return _aagaa
		}
	}
	if _gdd.Is != nil {
		if _gbfa := _gdd.Is.ValidateWithPath(path + "\u002f\u0049\u0073"); _gbfa != nil {
			return _gbfa
		}
	}
	if _gdd.ExtLst != nil {
		if _adg := _gdd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adg != nil {
			return _adg
		}
	}
	return nil
}
func (_eeddg *CT_FunctionGroups) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _daegd := range start.Attr {
		if _daegd.Name.Local == "\u0062\u0075\u0069\u006c\u0074\u0049\u006e\u0047\u0072\u006f\u0075\u0070C\u006f\u0075\u006e\u0074" {
			_acgfg, _fegfc := _g.ParseUint(_daegd.Value, 10, 32)
			if _fegfc != nil {
				return _fegfc
			}
			_ffeaf := uint32(_acgfg)
			_eeddg.BuiltInGroupCountAttr = &_ffeaf
			continue
		}
	}
_defeg:
	for {
		_aebae, _dcbda := d.Token()
		if _dcbda != nil {
			return _dcbda
		}
		switch _ageffg := _aebae.(type) {
		case _b.StartElement:
			switch _ageffg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070"}:
				_dfgaa := NewCT_FunctionGroup()
				if _bbged := d.DecodeElement(_dfgaa, &_ageffg); _bbged != nil {
					return _bbged
				}
				_eeddg.FunctionGroup = append(_eeddg.FunctionGroup, _dfgaa)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0073\u0020\u0025\u0076", _ageffg.Name)
				if _egcg := d.Skip(); _egcg != nil {
					return _egcg
				}
			}
		case _b.EndElement:
			break _defeg
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextFields and its children, prefixing error messages with path
func (_efbdc *CT_TextFields) ValidateWithPath(path string) error {
	for _dfeg, _ggggb := range _efbdc.TextField {
		if _bbdbg := _ggggb.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0054\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u005b\u0025\u0064\u005d", path, _dfeg)); _bbdbg != nil {
			return _bbdbg
		}
	}
	return nil
}

type CT_CalculatedMember struct {

	// Calculated Member Name
	NameAttr string

	// Calculated Member MDX Formula
	MdxAttr string

	// OLAP Calculated Member Name
	MemberNameAttr *string

	// Hierarchy Name
	HierarchyAttr *string

	// Parent Name
	ParentAttr *string

	// Calculated Members Solve Order
	SolveOrderAttr *int32

	// Set
	SetAttr *bool

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// ValidateWithPath validates the CT_PivotCaches and its children, prefixing error messages with path
func (_deadf *CT_PivotCaches) ValidateWithPath(path string) error {
	for _fafd, _cgafd := range _deadf.PivotCache {
		if _cdgdde := _cgafd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068e\u005b\u0025\u0064\u005d", path, _fafd)); _cdgdde != nil {
			return _cdgdde
		}
	}
	return nil
}
func (_gfccaf ST_CfvoType) String() string {
	switch _gfccaf {
	case 0:
		return ""
	case 1:
		return "\u006e\u0075\u006d"
	case 2:
		return "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case 3:
		return "\u006d\u0061\u0078"
	case 4:
		return "\u006d\u0069\u006e"
	case 5:
		return "\u0066o\u0072\u006d\u0075\u006c\u0061"
	case 6:
		return "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u0069\u006c\u0065"
	}
	return ""
}

type CT_PageMargins struct {

	// Left Page Margin
	LeftAttr float64

	// Right Page Margin
	RightAttr float64

	// Top Page Margin
	TopAttr float64

	// Bottom Page Margin
	BottomAttr float64

	// Header Page Margin
	HeaderAttr float64

	// Footer Page Margin
	FooterAttr float64
}

// ValidateWithPath validates the Comments and its children, prefixing error messages with path
func (_dcgbdg *Comments) ValidateWithPath(path string) error {
	if _gbagea := _dcgbdg.CT_Comments.ValidateWithPath(path); _gbagea != nil {
		return _gbagea
	}
	return nil
}

// Validate validates the CT_MetadataRecord and its children
func (_ggggf *CT_MetadataRecord) Validate() error {
	return _ggggf.ValidateWithPath("\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064")
}
func (_eeec *CT_ColorScale) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cece:
	for {
		_efac, _ecfa := d.Token()
		if _ecfa != nil {
			return _ecfa
		}
		switch _bebfg := _efac.(type) {
		case _b.StartElement:
			switch _bebfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_febf := NewCT_Cfvo()
				if _acgde := d.DecodeElement(_febf, &_bebfg); _acgde != nil {
					return _acgde
				}
				_eeec.Cfvo = append(_eeec.Cfvo, _febf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_dafge := NewCT_Color()
				if _gaga := d.DecodeElement(_dafge, &_bebfg); _gaga != nil {
					return _gaga
				}
				_eeec.Color = append(_eeec.Color, _dafge)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043o\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065 \u0025\u0076", _bebfg.Name)
				if _afaa := d.Skip(); _afaa != nil {
					return _afaa
				}
			}
		case _b.EndElement:
			break _cece
		case _b.CharData:
		}
	}
	return nil
}
func (_faefa ST_Visibility) Validate() error { return _faefa.ValidateWithPath("") }
func (_bgecg ST_MdxFunctionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_aeaaaa := _b.Attr{}
	_aeaaaa.Name = name
	switch _bgecg {
	case ST_MdxFunctionTypeUnset:
		_aeaaaa.Value = ""
	case ST_MdxFunctionTypeM:
		_aeaaaa.Value = "\u006d"
	case ST_MdxFunctionTypeV:
		_aeaaaa.Value = "\u0076"
	case ST_MdxFunctionTypeS:
		_aeaaaa.Value = "\u0073"
	case ST_MdxFunctionTypeC:
		_aeaaaa.Value = "\u0063"
	case ST_MdxFunctionTypeR:
		_aeaaaa.Value = "\u0072"
	case ST_MdxFunctionTypeP:
		_aeaaaa.Value = "\u0070"
	case ST_MdxFunctionTypeK:
		_aeaaaa.Value = "\u006b"
	}
	return _aeaaaa, nil
}
func (_ccged ST_CalcMode) String() string {
	switch _ccged {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "a\u0075\u0074\u006f\u004e\u006f\u0054\u0061\u0062\u006c\u0065"
	}
	return ""
}
func (_caaac *ST_rwColActionType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bebde, _eaffd := d.Token()
	if _eaffd != nil {
		return _eaffd
	}
	if _bbaaa, _bbageg := _bebde.(_b.EndElement); _bbageg && _bbaaa.Name == start.Name {
		*_caaac = 1
		return nil
	}
	if _bddbab, _ccdffa := _bebde.(_b.CharData); !_ccdffa {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bebde)
	} else {
		switch string(_bddbab) {
		case "":
			*_caaac = 0
		case "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw":
			*_caaac = 1
		case "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw":
			*_caaac = 2
		case "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl":
			*_caaac = 3
		case "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl":
			*_caaac = 4
		}
	}
	_bebde, _eaffd = d.Token()
	if _eaffd != nil {
		return _eaffd
	}
	if _aadad, _eadfda := _bebde.(_b.EndElement); _eadfda && _aadad.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bebde)
}
func (_aceabg *ST_FormatAction) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_faagc, _eabfga := d.Token()
	if _eabfga != nil {
		return _eabfga
	}
	if _bceae, _acaecf := _faagc.(_b.EndElement); _acaecf && _bceae.Name == start.Name {
		*_aceabg = 1
		return nil
	}
	if _beddad, _effef := _faagc.(_b.CharData); !_effef {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _faagc)
	} else {
		switch string(_beddad) {
		case "":
			*_aceabg = 0
		case "\u0062\u006c\u0061n\u006b":
			*_aceabg = 1
		case "\u0066\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067":
			*_aceabg = 2
		case "\u0064\u0072\u0069l\u006c":
			*_aceabg = 3
		case "\u0066o\u0072\u006d\u0075\u006c\u0061":
			*_aceabg = 4
		}
	}
	_faagc, _eabfga = d.Token()
	if _eabfga != nil {
		return _eabfga
	}
	if _adadd, _eacae := _faagc.(_b.EndElement); _eacae && _adadd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _faagc)
}

type ST_HorizontalAlignment byte

func (_bbfee *CT_DateTime) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fdagf := range start.Attr {
		if _fdagf.Name.Local == "\u0076" {
			_bbcbg, _bacbf := ParseStdlibTime(_fdagf.Value)
			if _bacbf != nil {
				return _bacbf
			}
			_bbfee.VAttr = _bbcbg
			continue
		}
		if _fdagf.Name.Local == "\u0075" {
			_dbace, _geacc := _g.ParseBool(_fdagf.Value)
			if _geacc != nil {
				return _geacc
			}
			_bbfee.UAttr = &_dbace
			continue
		}
		if _fdagf.Name.Local == "\u0066" {
			_cgdfb, _badbf := _g.ParseBool(_fdagf.Value)
			if _badbf != nil {
				return _badbf
			}
			_bbfee.FAttr = &_cgdfb
			continue
		}
		if _fdagf.Name.Local == "\u0063" {
			_bfddd, _dfbc := _fdagf.Value, error(nil)
			if _dfbc != nil {
				return _dfbc
			}
			_bbfee.CAttr = &_bfddd
			continue
		}
		if _fdagf.Name.Local == "\u0063\u0070" {
			_gbge, _dfgcf := _g.ParseUint(_fdagf.Value, 10, 32)
			if _dfgcf != nil {
				return _dfgcf
			}
			_bbcga := uint32(_gbge)
			_bbfee.CpAttr = &_bbcga
			continue
		}
	}
_fefcb:
	for {
		_dcagg, _cdeb := d.Token()
		if _cdeb != nil {
			return _cdeb
		}
		switch _deffa := _dcagg.(type) {
		case _b.StartElement:
			switch _deffa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_egcf := NewCT_X()
				if _cdceb := d.DecodeElement(_egcf, &_deffa); _cdceb != nil {
					return _cdceb
				}
				_bbfee.X = append(_bbfee.X, _egcf)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065\u0020\u0025\u0076", _deffa.Name)
				if _cacg := d.Skip(); _cacg != nil {
					return _cacg
				}
			}
		case _b.EndElement:
			break _fefcb
		case _b.CharData:
		}
	}
	return nil
}

type ST_VerticalAlignment byte

func (_bac *CT_Authors) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eda:
	for {
		_ce, _bd := d.Token()
		if _bd != nil {
			return _bd
		}
		switch _gb := _ce.(type) {
		case _b.StartElement:
			switch _gb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0075\u0074\u0068\u006f\u0072"}:
				var _gg string
				if _dbg := d.DecodeElement(&_gg, &_gb); _dbg != nil {
					return _dbg
				}
				_bac.Author = append(_bac.Author, _gg)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0074\u0068\u006f\u0072\u0073\u0020\u0025\u0076", _gb.Name)
				if _gc := d.Skip(); _gc != nil {
					return _gc
				}
			}
		case _b.EndElement:
			break _eda
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Extension and its children
func (_aeag *CT_Extension) Validate() error {
	return _aeag.ValidateWithPath("\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e")
}

// Validate validates the CT_CacheField and its children
func (_gfgce *CT_CacheField) Validate() error {
	return _gfgce.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064")
}
func (_gggbg *CT_Index) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bfee := range start.Attr {
		if _bfee.Name.Local == "\u0076" {
			_eddafc, _afdc := _g.ParseUint(_bfee.Value, 10, 32)
			if _afdc != nil {
				return _afdc
			}
			_gggbg.VAttr = uint32(_eddafc)
			continue
		}
	}
	for {
		_fafbg, _edfb := d.Token()
		if _edfb != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fI\u006e\u0064\u0065\u0078: \u0025\u0073", _edfb)
		}
		if _abgbc, _abcec := _fafbg.(_b.EndElement); _abcec && _abgbc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gebfb *CT_RangeSets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gebfb.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gebfb.CountAttr)})
	}
	e.EncodeToken(start)
	_gcdbc := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0072\u0061\u006e\u0067\u0065\u0053\u0065\u0074"}}
	for _, _cadbgg := range _gebfb.RangeSet {
		e.EncodeElement(_cadbgg, _gcdbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dfbgf *ST_OleUpdate) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_fgadb, _fagaf := d.Token()
	if _fagaf != nil {
		return _fagaf
	}
	if _debffe, _ddeaf := _fgadb.(_b.EndElement); _ddeaf && _debffe.Name == start.Name {
		*_dfbgf = 1
		return nil
	}
	if _fbceef, _bacgf := _fgadb.(_b.CharData); !_bacgf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fgadb)
	} else {
		switch string(_fbceef) {
		case "":
			*_dfbgf = 0
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u0041\u004c\u0057\u0041\u0059\u0053":
			*_dfbgf = 1
		case "\u004f\u004cE\u0055\u0050\u0044A\u0054\u0045\u005f\u004f\u004e\u0043\u0041\u004c\u004c":
			*_dfbgf = 2
		}
	}
	_fgadb, _fagaf = d.Token()
	if _fagaf != nil {
		return _fagaf
	}
	if _baace, _aabged := _fgadb.(_b.EndElement); _aabged && _baace.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fgadb)
}
func NewPivotTableDefinition() *PivotTableDefinition {
	_ecgfaa := &PivotTableDefinition{}
	_ecgfaa.CT_pivotTableDefinition = *NewCT_pivotTableDefinition()
	return _ecgfaa
}

const (
	ST_TargetScreenSizeUnset     ST_TargetScreenSize = 0
	ST_TargetScreenSize544x376   ST_TargetScreenSize = 1
	ST_TargetScreenSize640x480   ST_TargetScreenSize = 2
	ST_TargetScreenSize720x512   ST_TargetScreenSize = 3
	ST_TargetScreenSize800x600   ST_TargetScreenSize = 4
	ST_TargetScreenSize1024x768  ST_TargetScreenSize = 5
	ST_TargetScreenSize1152x882  ST_TargetScreenSize = 6
	ST_TargetScreenSize1152x900  ST_TargetScreenSize = 7
	ST_TargetScreenSize1280x1024 ST_TargetScreenSize = 8
	ST_TargetScreenSize1600x1200 ST_TargetScreenSize = 9
	ST_TargetScreenSize1800x1440 ST_TargetScreenSize = 10
	ST_TargetScreenSize1920x1200 ST_TargetScreenSize = 11
)

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_gddf *CT_FontScheme) ValidateWithPath(path string) error {
	if _gddf.ValAttr == ST_FontSchemeUnset {
		return _a.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _bbgfd := _gddf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _bbgfd != nil {
		return _bbgfd
	}
	return nil
}

// ValidateWithPath validates the CT_Item and its children, prefixing error messages with path
func (_becc *CT_Item) ValidateWithPath(path string) error {
	if _ccga := _becc.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ccga != nil {
		return _ccga
	}
	return nil
}
func NewCT_Schema() *CT_Schema { _cbbec := &CT_Schema{}; return _cbbec }

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_cgfe *CT_Color) ValidateWithPath(path string) error { return nil }
func (_afgcf ST_PivotAreaType) Validate() error            { return _afgcf.ValidateWithPath("") }
func (_ffcbcd ST_VerticalAlignment) ValidateWithPath(path string) error {
	switch _ffcbcd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ffcbcd))
	}
	return nil
}

// Validate validates the CT_DataBar and its children
func (_afda *CT_DataBar) Validate() error {
	return _afda.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072")
}

type CT_ChartsheetViews struct {

	// Chart Sheet View
	SheetView []*CT_ChartsheetView
	ExtLst    *CT_ExtensionList
}

func (_gccbd ST_DataConsolidateFunction) ValidateWithPath(path string) error {
	switch _gccbd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gccbd))
	}
	return nil
}
func NewCT_Scenarios() *CT_Scenarios { _dafddf := &CT_Scenarios{}; return _dafddf }

type CT_ExternalDefinedNames struct {

	// Defined Name
	DefinedName []*CT_ExternalDefinedName
}

func (_defaa ST_rwColActionType) Validate() error { return _defaa.ValidateWithPath("") }
func (_ccfcgc *CT_VolType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_ccfcgc.TypeAttr = ST_VolDepType(1)
	for _, _bcagb := range start.Attr {
		if _bcagb.Name.Local == "\u0074\u0079\u0070\u0065" {
			_ccfcgc.TypeAttr.UnmarshalXMLAttr(_bcagb)
			continue
		}
	}
_bbbfgd:
	for {
		_ecfcfd, _bfecagd := d.Token()
		if _bfecagd != nil {
			return _bfecagd
		}
		switch _dcaged := _ecfcfd.(type) {
		case _b.StartElement:
			switch _dcaged.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061\u0069\u006e"}:
				_cabad := NewCT_VolMain()
				if _bbfbeg := d.DecodeElement(_cabad, &_dcaged); _bbfbeg != nil {
					return _bbfbeg
				}
				_ccfcgc.Main = append(_ccfcgc.Main, _cabad)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u0079\u0070\u0065\u0020\u0025\u0076", _dcaged.Name)
				if _aacda := d.Skip(); _aacda != nil {
					return _aacda
				}
			}
		case _b.EndElement:
			break _bbbfgd
		case _b.CharData:
		}
	}
	return nil
}
func (_faeebg *CT_TupleCache) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_deaca:
	for {
		_gaaab, _ebbeb := d.Token()
		if _ebbeb != nil {
			return _ebbeb
		}
		switch _dfccfg := _gaaab.(type) {
		case _b.StartElement:
			switch _dfccfg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065n\u0074\u0072\u0069\u0065\u0073"}:
				_faeebg.Entries = NewCT_PCDSDTCEntries()
				if _fbbbb := d.DecodeElement(_faeebg.Entries, &_dfccfg); _fbbbb != nil {
					return _fbbbb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0074\u0073"}:
				_faeebg.Sets = NewCT_Sets()
				if _adggga := d.DecodeElement(_faeebg.Sets, &_dfccfg); _adggga != nil {
					return _adggga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065"}:
				_faeebg.QueryCache = NewCT_QueryCache()
				if _cbbbed := d.DecodeElement(_faeebg.QueryCache, &_dfccfg); _cbbbed != nil {
					return _cbbbed
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073"}:
				_faeebg.ServerFormats = NewCT_ServerFormats()
				if _cbceb := d.DecodeElement(_faeebg.ServerFormats, &_dfccfg); _cbceb != nil {
					return _cbceb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faeebg.ExtLst = NewCT_ExtensionList()
				if _eccde := d.DecodeElement(_faeebg.ExtLst, &_dfccfg); _eccde != nil {
					return _eccde
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054u\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065 \u0025\u0076", _dfccfg.Name)
				if _ecgecf := d.Skip(); _ecgecf != nil {
					return _ecgecf
				}
			}
		case _b.EndElement:
			break _deaca
		case _b.CharData:
		}
	}
	return nil
}
func (_dcbf *CT_Cfvo) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dcbf.TypeAttr = ST_CfvoType(1)
	for _, _cbgd := range start.Attr {
		if _cbgd.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dcbf.TypeAttr.UnmarshalXMLAttr(_cbgd)
			continue
		}
		if _cbgd.Name.Local == "\u0076\u0061\u006c" {
			_bbgd, _cgdc := _cbgd.Value, error(nil)
			if _cgdc != nil {
				return _cgdc
			}
			_dcbf.ValAttr = &_bbgd
			continue
		}
		if _cbgd.Name.Local == "\u0067\u0074\u0065" {
			_debe, _adea := _g.ParseBool(_cbgd.Value)
			if _adea != nil {
				return _adea
			}
			_dcbf.GteAttr = &_debe
			continue
		}
	}
_ffgb:
	for {
		_dfabd, _daaa := d.Token()
		if _daaa != nil {
			return _daaa
		}
		switch _edccg := _dfabd.(type) {
		case _b.StartElement:
			switch _edccg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbf.ExtLst = NewCT_ExtensionList()
				if _dea := d.DecodeElement(_dcbf.ExtLst, &_edccg); _dea != nil {
					return _dea
				}
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u0066\u0076\u006f\u0020\u0025\u0076", _edccg.Name)
				if _ffecb := d.Skip(); _ffecb != nil {
					return _ffecb
				}
			}
		case _b.EndElement:
			break _ffgb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_ChartsheetPr() *CT_ChartsheetPr { _cfga := &CT_ChartsheetPr{}; return _cfga }
func (_cbfba *CT_MdxSet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0073"}, Value: _a.Sprintf("\u0025\u0076", _cbfba.NsAttr)})
	if _cbfba.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_cbfba.CAttr)})
	}
	if _cbfba.OAttr != ST_MdxSetOrderUnset {
		_fggge, _afggb := _cbfba.OAttr.MarshalXMLAttr(_b.Name{Local: "\u006f"})
		if _afggb != nil {
			return _afggb
		}
		start.Attr = append(start.Attr, _fggge)
	}
	e.EncodeToken(start)
	if _cbfba.N != nil {
		_egbed := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006e"}}
		for _, _dbgd := range _cbfba.N {
			e.EncodeElement(_dbgd, _egbed)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_faeefd *ST_TextVAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_faeefd = 0
	case "\u0074\u006f\u0070":
		*_faeefd = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_faeefd = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d":
		*_faeefd = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_faeefd = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_faeefd = 5
	}
	return nil
}

// ValidateWithPath validates the CT_CustomFilter and its children, prefixing error messages with path
func (_bcgce *CT_CustomFilter) ValidateWithPath(path string) error {
	if _dbgc := _bcgce.OperatorAttr.ValidateWithPath(path + "\u002f\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072\u0041\u0074\u0074\u0072"); _dbgc != nil {
		return _dbgc
	}
	return nil
}
func NewCT_Worksheet() *CT_Worksheet {
	_cfgc := &CT_Worksheet{}
	_cfgc.SheetData = NewCT_SheetData()
	return _cfgc
}
func (_gfbbb ST_Axis) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gffag := _b.Attr{}
	_gffag.Name = name
	switch _gfbbb {
	case ST_AxisUnset:
		_gffag.Value = ""
	case ST_AxisAxisRow:
		_gffag.Value = "\u0061x\u0069\u0073\u0052\u006f\u0077"
	case ST_AxisAxisCol:
		_gffag.Value = "\u0061x\u0069\u0073\u0043\u006f\u006c"
	case ST_AxisAxisPage:
		_gffag.Value = "\u0061\u0078\u0069\u0073\u0050\u0061\u0067\u0065"
	case ST_AxisAxisValues:
		_gffag.Value = "\u0061\u0078\u0069\u0073\u0056\u0061\u006c\u0075\u0065\u0073"
	}
	return _gffag, nil
}
func (_dfef *CT_DiscretePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dfef.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dfef.CountAttr)})
	}
	e.EncodeToken(start)
	_ebfae := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0078"}}
	for _, _eeffc := range _dfef.X {
		e.EncodeElement(_eeffc, _ebfae)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_IgnoredError and its children, prefixing error messages with path
func (_babeee *CT_IgnoredError) ValidateWithPath(path string) error { return nil }
func NewCT_Record() *CT_Record                                      { _ggcaf := &CT_Record{}; return _ggcaf }
func (_dafgfg *CT_Scenario) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _dafgfg.NameAttr)})
	if _dafgfg.LockedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063\u006b\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dafgfg.LockedAttr))})
	}
	if _dafgfg.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dafgfg.HiddenAttr))})
	}
	if _dafgfg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dafgfg.CountAttr)})
	}
	if _dafgfg.UserAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0073\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_dafgfg.UserAttr)})
	}
	if _dafgfg.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dafgfg.CommentAttr)})
	}
	e.EncodeToken(start)
	_fgfcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073"}}
	for _, _gcdfgb := range _dafgfg.InputCells {
		e.EncodeElement(_gcdfgb, _fgfcf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_WebPr and its children
func (_bgaagg *CT_WebPr) Validate() error {
	return _bgaagg.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072")
}
func (_bggba *ST_ExternalConnectionType) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bggba = 0
	case "\u0067e\u006e\u0065\u0072\u0061\u006c":
		*_bggba = 1
	case "\u0074\u0065\u0078\u0074":
		*_bggba = 2
	case "\u004d\u0044\u0059":
		*_bggba = 3
	case "\u0044\u004d\u0059":
		*_bggba = 4
	case "\u0059\u004d\u0044":
		*_bggba = 5
	case "\u004d\u0059\u0044":
		*_bggba = 6
	case "\u0044\u0059\u004d":
		*_bggba = 7
	case "\u0059\u0044\u004d":
		*_bggba = 8
	case "\u0073\u006b\u0069\u0070":
		*_bggba = 9
	case "\u0045\u004d\u0044":
		*_bggba = 10
	}
	return nil
}

// Validate validates the CT_Users and its children
func (_ecfdbd *CT_Users) Validate() error {
	return _ecfdbd.ValidateWithPath("\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073")
}

// Validate validates the CT_CalcCell and its children
func (_eeca *CT_CalcCell) Validate() error {
	return _eeca.ValidateWithPath("C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c")
}
func NewCT_PageBreak() *CT_PageBreak { _cfcd := &CT_PageBreak{}; return _cfcd }

type ST_UnderlineValues byte
type CT_CsPageSetup struct {

	// Paper Size
	PaperSizeAttr *uint32

	// Paper Height
	PaperHeightAttr *string

	// Paper Width
	PaperWidthAttr *string

	// First Page Number
	FirstPageNumberAttr *uint32

	// Orientation
	OrientationAttr ST_Orientation

	// Use Printer Defaults
	UsePrinterDefaultsAttr *bool

	// Black And White
	BlackAndWhiteAttr *bool

	// Draft
	DraftAttr *bool

	// Use First Page Number
	UseFirstPageNumberAttr *bool

	// Horizontal DPI
	HorizontalDpiAttr *uint32

	// Vertical DPI
	VerticalDpiAttr *uint32

	// Number Of Copies
	CopiesAttr *uint32
	IdAttr     *string
}

// Validate validates the Revisions and its children
func (_ccccce *Revisions) Validate() error {
	return _ccccce.ValidateWithPath("\u0052e\u0076\u0069\u0073\u0069\u006f\u006es")
}
func NewMapInfo() *MapInfo { _adedf := &MapInfo{}; _adedf.CT_MapInfo = *NewCT_MapInfo(); return _adedf }

// Validate validates the CT_Format and its children
func (_gfbfe *CT_Format) Validate() error {
	return _gfbfe.ValidateWithPath("\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t")
}
func (_agbccg *CT_VolTopicRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _agbccg.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073"}, Value: _a.Sprintf("\u0025\u0076", _agbccg.SAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aagc *CT_DeletedField) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _aagc.NameAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_RevisionInsertSheet and its children, prefixing error messages with path
func (_aagcg *CT_RevisionInsertSheet) ValidateWithPath(path string) error { return nil }
func (_dgbcfg *CT_Tuples) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebgf := range start.Attr {
		if _eebgf.Name.Local == "\u0063" {
			_eeafbc, _eccdf := _g.ParseUint(_eebgf.Value, 10, 32)
			if _eccdf != nil {
				return _eccdf
			}
			_dgbbd := uint32(_eeafbc)
			_dgbcfg.CAttr = &_dgbbd
			continue
		}
	}
_bddfda:
	for {
		_fdgdg, _daaea := d.Token()
		if _daaea != nil {
			return _daaea
		}
		switch _abbdb := _fdgdg.(type) {
		case _b.StartElement:
			switch _abbdb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0070\u006c"}:
				_ebega := NewCT_Tuple()
				if _fffcg := d.DecodeElement(_ebega, &_abbdb); _fffcg != nil {
					return _fffcg
				}
				_dgbcfg.Tpl = append(_dgbcfg.Tpl, _ebega)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0054\u0075\u0070l\u0065\u0073 \u0025\u0076", _abbdb.Name)
				if _egeeb := d.Skip(); _egeeb != nil {
					return _egeeb
				}
			}
		case _b.EndElement:
			break _bddfda
		case _b.CharData:
		}
	}
	return nil
}
func (_cdabg *CT_TableStyles) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cdabg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cdabg.CountAttr)})
	}
	if _cdabg.DefaultTableStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cdabg.DefaultTableStyleAttr)})
	}
	if _cdabg.DefaultPivotStyleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cdabg.DefaultPivotStyleAttr)})
	}
	e.EncodeToken(start)
	if _cdabg.TableStyle != nil {
		_cagcf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		for _, _fbadb := range _cdabg.TableStyle {
			e.EncodeElement(_fbadb, _cagcf)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetViews and its children
func (_cbfda *CT_SheetViews) Validate() error {
	return _cbfda.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073")
}

type CT_DataRef struct {

	// Reference
	RefAttr *string

	// Named Range
	NameAttr *string

	// Sheet Name
	SheetAttr *string
	IdAttr    *string
}

// ValidateWithPath validates the CT_ExternalLinkChoice and its children, prefixing error messages with path
func (_bcedc *CT_ExternalLinkChoice) ValidateWithPath(path string) error {
	if _bcedc.ExternalBook != nil {
		if _fbgac := _bcedc.ExternalBook.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b"); _fbgac != nil {
			return _fbgac
		}
	}
	if _bcedc.DdeLink != nil {
		if _dgebd := _bcedc.DdeLink.ValidateWithPath(path + "\u002f\u0044\u0064\u0065\u004c\u0069\u006e\u006b"); _dgebd != nil {
			return _dgebd
		}
	}
	if _bcedc.OleLink != nil {
		if _bgaeb := _bcedc.OleLink.ValidateWithPath(path + "\u002f\u004f\u006c\u0065\u004c\u0069\u006e\u006b"); _bgaeb != nil {
			return _bgaeb
		}
	}
	return nil
}
func (_cbfgd *CT_SheetViews) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_eedac := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003as\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}}
	for _, _fgafge := range _cbfgd.SheetView {
		e.EncodeElement(_fgafge, _eedac)
	}
	if _cbfgd.ExtLst != nil {
		_cfeeeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_cbfgd.ExtLst, _cfeeeb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bgfab ST_FontScheme) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bgfab.String(), start)
}
func NewRevisions() *Revisions {
	_fefea := &Revisions{}
	_fefea.CT_Revisions = *NewCT_Revisions()
	return _fefea
}
func (_gdebd *CT_RevisionMove) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gdebd.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gdebd.SourceAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0074\u0069\u006e\u0061\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _gdebd.DestinationAttr)})
	if _gdebd.SourceSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u006f\u0075\u0072\u0063\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gdebd.SourceSheetIdAttr)})
	}
	if _gdebd.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gdebd.RIdAttr)})
	}
	if _gdebd.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdebd.UaAttr))})
	}
	if _gdebd.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdebd.RaAttr))})
	}
	e.EncodeToken(start)
	if _gdebd.Undo != nil {
		_gefeb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0075\u006e\u0064\u006f"}}
		for _, _eaca := range _gdebd.Undo {
			e.EncodeElement(_eaca, _gefeb)
		}
	}
	if _gdebd.Rcc != nil {
		_ebfeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0072\u0063\u0063"}}
		for _, _ecfgag := range _gdebd.Rcc {
			e.EncodeElement(_ecfgag, _ebfeg)
		}
	}
	if _gdebd.Rfmt != nil {
		_ffddg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0072\u0066\u006d\u0074"}}
		for _, _gabgb := range _gdebd.Rfmt {
			e.EncodeElement(_gabgb, _ffddg)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_aedb *CT_RevisionDefinedName) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aedb.LocalSheetIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.LocalSheetIdAttr)})
	}
	if _aedb.CustomViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u0056\u0069\u0065\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.CustomViewAttr))})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _aedb.NameAttr)})
	if _aedb.FunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.FunctionAttr))})
	}
	if _aedb.OldFunctionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "o\u006c\u0064\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.OldFunctionAttr))})
	}
	if _aedb.FunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.FunctionGroupIdAttr)})
	}
	if _aedb.OldFunctionGroupIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064F\u0075\u006e\u0063\u0074\u0069o\u006e\u0047r\u006f\u0075\u0070\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldFunctionGroupIdAttr)})
	}
	if _aedb.ShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.ShortcutKeyAttr)})
	}
	if _aedb.OldShortcutKeyAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0053\u0068\u006f\u0072\u0074\u0063u\u0074\u004b\u0065\u0079"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldShortcutKeyAttr)})
	}
	if _aedb.HiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.HiddenAttr))})
	}
	if _aedb.OldHiddenAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0069\u0064\u0064\u0065n"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.OldHiddenAttr))})
	}
	if _aedb.CustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.CustomMenuAttr)})
	}
	if _aedb.OldCustomMenuAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldCustomMenuAttr)})
	}
	if _aedb.DescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.DescriptionAttr)})
	}
	if _aedb.OldDescriptionAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0044\u0065\u0073\u0063\u0072\u0069p\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldDescriptionAttr)})
	}
	if _aedb.HelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u0065\u006c\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.HelpAttr)})
	}
	if _aedb.OldHelpAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u0048\u0065\u006c\u0070"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldHelpAttr)})
	}
	if _aedb.StatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.StatusBarAttr)})
	}
	if _aedb.OldStatusBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064S\u0074\u0061\u0074\u0075\u0073\u0042\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldStatusBarAttr)})
	}
	if _aedb.CommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.CommentAttr)})
	}
	if _aedb.OldCommentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006c\u0064\u0043\u006f\u006d\u006d\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.OldCommentAttr)})
	}
	if _aedb.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_aedb.RIdAttr)})
	}
	if _aedb.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.UaAttr))})
	}
	if _aedb.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_aedb.RaAttr))})
	}
	e.EncodeToken(start)
	if _aedb.Formula != nil {
		_eadcfe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0066\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_f.AddPreserveSpaceAttr(&_eadcfe, *_aedb.Formula)
		e.EncodeElement(_aedb.Formula, _eadcfe)
	}
	if _aedb.OldFormula != nil {
		_ebdcb := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u006f\u006c\u0064\u0046\u006f\u0072\u006d\u0075\u006c\u0061"}}
		_f.AddPreserveSpaceAttr(&_ebdcb, *_aedb.OldFormula)
		e.EncodeElement(_aedb.OldFormula, _ebdcb)
	}
	if _aedb.ExtLst != nil {
		_acdadg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_aedb.ExtLst, _acdadg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbefb *ST_PatternType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfdda, _gddea := d.Token()
	if _gddea != nil {
		return _gddea
	}
	if _gbebcd, _eadgd := _bfdda.(_b.EndElement); _eadgd && _gbebcd.Name == start.Name {
		*_gbefb = 1
		return nil
	}
	if _agfbgg, _efbae := _bfdda.(_b.CharData); !_efbae {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfdda)
	} else {
		switch string(_agfbgg) {
		case "":
			*_gbefb = 0
		case "\u006e\u006f\u006e\u0065":
			*_gbefb = 1
		case "\u0073\u006f\u006ci\u0064":
			*_gbefb = 2
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0047\u0072\u0061\u0079":
			*_gbefb = 3
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_gbefb = 4
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_gbefb = 5
		case "\u0064\u0061\u0072\u006b\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c":
			*_gbefb = 6
		case "\u0064\u0061\u0072k\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_gbefb = 7
		case "\u0064\u0061\u0072\u006b\u0044\u006f\u0077\u006e":
			*_gbefb = 8
		case "\u0064\u0061\u0072\u006b\u0055\u0070":
			*_gbefb = 9
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0069\u0064":
			*_gbefb = 10
		case "d\u0061\u0072\u006b\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_gbefb = 11
		case "\u006ci\u0067h\u0074\u0048\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c":
			*_gbefb = 12
		case "\u006c\u0069\u0067\u0068\u0074\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c":
			*_gbefb = 13
		case "\u006ci\u0067\u0068\u0074\u0044\u006f\u0077n":
			*_gbefb = 14
		case "\u006ci\u0067\u0068\u0074\u0055\u0070":
			*_gbefb = 15
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0069d":
			*_gbefb = 16
		case "\u006c\u0069\u0067h\u0074\u0054\u0072\u0065\u006c\u006c\u0069\u0073":
			*_gbefb = 17
		case "\u0067r\u0061\u0079\u0031\u0032\u0035":
			*_gbefb = 18
		case "\u0067\u0072\u0061\u0079\u0030\u0036\u0032\u0035":
			*_gbefb = 19
		}
	}
	_bfdda, _gddea = d.Token()
	if _gddea != nil {
		return _gddea
	}
	if _fcbcdd, _fcgae := _bfdda.(_b.EndElement); _fcgae && _fcbcdd.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfdda)
}

type ST_PaneState byte

func (_aabgd *CT_RangeSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ddfff := range start.Attr {
		if _ddfff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ddfff.Name.Local == "\u0069\u0064" || _ddfff.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ddfff.Name.Local == "\u0069\u0064" {
			_dffgd, _eabffd := _ddfff.Value, error(nil)
			if _eabffd != nil {
				return _eabffd
			}
			_aabgd.IdAttr = &_dffgd
			continue
		}
		if _ddfff.Name.Local == "\u0069\u0031" {
			_gbbag, _efdeaa := _g.ParseUint(_ddfff.Value, 10, 32)
			if _efdeaa != nil {
				return _efdeaa
			}
			_dgeda := uint32(_gbbag)
			_aabgd.I1Attr = &_dgeda
			continue
		}
		if _ddfff.Name.Local == "\u0069\u0033" {
			_abfcb, _eacgc := _g.ParseUint(_ddfff.Value, 10, 32)
			if _eacgc != nil {
				return _eacgc
			}
			_gfdgec := uint32(_abfcb)
			_aabgd.I3Attr = &_gfdgec
			continue
		}
		if _ddfff.Name.Local == "\u0069\u0034" {
			_efccbd, _aeaab := _g.ParseUint(_ddfff.Value, 10, 32)
			if _aeaab != nil {
				return _aeaab
			}
			_dbaef := uint32(_efccbd)
			_aabgd.I4Attr = &_dbaef
			continue
		}
		if _ddfff.Name.Local == "\u0072\u0065\u0066" {
			_gfdbe, _facae := _ddfff.Value, error(nil)
			if _facae != nil {
				return _facae
			}
			_aabgd.RefAttr = &_gfdbe
			continue
		}
		if _ddfff.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aedce, _fdgcg := _ddfff.Value, error(nil)
			if _fdgcg != nil {
				return _fdgcg
			}
			_aabgd.NameAttr = &_aedce
			continue
		}
		if _ddfff.Name.Local == "\u0073\u0068\u0065e\u0074" {
			_faadg, _faed := _ddfff.Value, error(nil)
			if _faed != nil {
				return _faed
			}
			_aabgd.SheetAttr = &_faadg
			continue
		}
		if _ddfff.Name.Local == "\u0069\u0032" {
			_dabcc, _fbffa := _g.ParseUint(_ddfff.Value, 10, 32)
			if _fbffa != nil {
				return _fbffa
			}
			_afgad := uint32(_dabcc)
			_aabgd.I2Attr = &_afgad
			continue
		}
	}
	for {
		_fedcc, _dgdga := d.Token()
		if _dgdga != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u003a\u0020\u0025\u0073", _dgdga)
		}
		if _efeee, _gfcg := _fedcc.(_b.EndElement); _gfcg && _efeee.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_FontScheme byte

func NewCT_PivotCaches() *CT_PivotCaches { _dddgf := &CT_PivotCaches{}; return _dddgf }

// ValidateWithPath validates the PivotCacheDefinition and its children, prefixing error messages with path
func (_bbgbeb *PivotCacheDefinition) ValidateWithPath(path string) error {
	if _dbafa := _bbgbeb.CT_PivotCacheDefinition.ValidateWithPath(path); _dbafa != nil {
		return _dbafa
	}
	return nil
}
func (_fcef *CT_Field) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eebdd := range start.Attr {
		if _eebdd.Name.Local == "\u0078" {
			_edeeg, _aacba := _g.ParseInt(_eebdd.Value, 10, 32)
			if _aacba != nil {
				return _aacba
			}
			_fcef.XAttr = int32(_edeeg)
			continue
		}
	}
	for {
		_bcadfc, _gdfbf := d.Token()
		if _gdfbf != nil {
			return _a.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fF\u0069\u0065\u006c\u0064: \u0025\u0073", _gdfbf)
		}
		if _abgbb, _cecg := _bcadfc.(_b.EndElement); _cecg && _abgbb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_CacheHierarchies struct {

	// Hierarchy Count
	CountAttr *uint32

	// PivotCache Hierarchy
	CacheHierarchy []*CT_CacheHierarchy
}

// ValidateWithPath validates the SingleXmlCells and its children, prefixing error messages with path
func (_ccebf *SingleXmlCells) ValidateWithPath(path string) error {
	if _cgadg := _ccebf.CT_SingleXmlCells.ValidateWithPath(path); _cgadg != nil {
		return _cgadg
	}
	return nil
}

// ValidateWithPath validates the CT_Chartsheet and its children, prefixing error messages with path
func (_cdfc *CT_Chartsheet) ValidateWithPath(path string) error {
	if _cdfc.SheetPr != nil {
		if _bega := _cdfc.SheetPr.ValidateWithPath(path + "\u002f\u0053\u0068\u0065\u0065\u0074\u0050\u0072"); _bega != nil {
			return _bega
		}
	}
	if _cedfc := _cdfc.SheetViews.ValidateWithPath(path + "/\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"); _cedfc != nil {
		return _cedfc
	}
	if _cdfc.SheetProtection != nil {
		if _bbefg := _cdfc.SheetProtection.ValidateWithPath(path + "\u002f\u0053h\u0065\u0065\u0074P\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"); _bbefg != nil {
			return _bbefg
		}
	}
	if _cdfc.CustomSheetViews != nil {
		if _dace := _cdfc.CustomSheetViews.ValidateWithPath(path + "\u002f\u0043\u0075\u0073\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073"); _dace != nil {
			return _dace
		}
	}
	if _cdfc.PageMargins != nil {
		if _ebacf := _cdfc.PageMargins.ValidateWithPath(path + "\u002f\u0050\u0061g\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"); _ebacf != nil {
			return _ebacf
		}
	}
	if _cdfc.PageSetup != nil {
		if _edfea := _cdfc.PageSetup.ValidateWithPath(path + "\u002f\u0050\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"); _edfea != nil {
			return _edfea
		}
	}
	if _cdfc.HeaderFooter != nil {
		if _caaea := _cdfc.HeaderFooter.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"); _caaea != nil {
			return _caaea
		}
	}
	if _fcde := _cdfc.Drawing.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067"); _fcde != nil {
		return _fcde
	}
	if _cdfc.LegacyDrawing != nil {
		if _cgacf := _cdfc.LegacyDrawing.ValidateWithPath(path + "\u002f\u004c\u0065\u0067\u0061\u0063\u0079\u0044\u0072a\u0077\u0069\u006e\u0067"); _cgacf != nil {
			return _cgacf
		}
	}
	if _cdfc.LegacyDrawingHF != nil {
		if _dceef := _cdfc.LegacyDrawingHF.ValidateWithPath(path + "\u002f\u004ce\u0067\u0061\u0063y\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _dceef != nil {
			return _dceef
		}
	}
	if _cdfc.DrawingHF != nil {
		if _dab := _cdfc.DrawingHF.ValidateWithPath(path + "\u002f\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"); _dab != nil {
			return _dab
		}
	}
	if _cdfc.Picture != nil {
		if _geeba := _cdfc.Picture.ValidateWithPath(path + "\u002f\u0050\u0069\u0063\u0074\u0075\u0072\u0065"); _geeba != nil {
			return _geeba
		}
	}
	if _cdfc.WebPublishItems != nil {
		if _ddec := _cdfc.WebPublishItems.ValidateWithPath(path + "\u002f\u0057e\u0062\u0050\u0075b\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"); _ddec != nil {
			return _ddec
		}
	}
	if _cdfc.ExtLst != nil {
		if _fged := _cdfc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fged != nil {
			return _fged
		}
	}
	return nil
}
func (_ecaadf ST_TextVAlign) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ecaadf.String(), start)
}
func (_fegdeg ST_VolValueType) String() string {
	switch _fegdeg {
	case 0:
		return ""
	case 1:
		return "\u0062"
	case 2:
		return "\u006e"
	case 3:
		return "\u0065"
	case 4:
		return "\u0073"
	}
	return ""
}

// Validate validates the CT_PageField and its children
func (_aaddf *CT_PageField) Validate() error {
	return _aaddf.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064")
}
func (_ecaaf *ST_HorizontalAlignment) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dddfbc, _fdedgb := d.Token()
	if _fdedgb != nil {
		return _fdedgb
	}
	if _fcfefc, _adcbd := _dddfbc.(_b.EndElement); _adcbd && _fcfefc.Name == start.Name {
		*_ecaaf = 1
		return nil
	}
	if _dgdge, _ceffe := _dddfbc.(_b.CharData); !_ceffe {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddfbc)
	} else {
		switch string(_dgdge) {
		case "":
			*_ecaaf = 0
		case "\u0067e\u006e\u0065\u0072\u0061\u006c":
			*_ecaaf = 1
		case "\u006c\u0065\u0066\u0074":
			*_ecaaf = 2
		case "\u0063\u0065\u006e\u0074\u0065\u0072":
			*_ecaaf = 3
		case "\u0072\u0069\u0067h\u0074":
			*_ecaaf = 4
		case "\u0066\u0069\u006c\u006c":
			*_ecaaf = 5
		case "\u006au\u0073\u0074\u0069\u0066\u0079":
			*_ecaaf = 6
		case "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073":
			*_ecaaf = 7
		case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
			*_ecaaf = 8
		}
	}
	_dddfbc, _fdedgb = d.Token()
	if _fdedgb != nil {
		return _fdedgb
	}
	if _ccaadg, _ceacd := _dddfbc.(_b.EndElement); _ceacd && _ccaadg.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddfbc)
}
func NewCT_QueryTableFields() *CT_QueryTableFields { _fgfdd := &CT_QueryTableFields{}; return _fgfdd }

type CT_InputCells struct {

	// Reference
	RAttr string

	// Deleted
	DeletedAttr *bool

	// Undone
	UndoneAttr *bool

	// Value
	ValAttr string

	// Number Format Id
	NumFmtIdAttr *uint32
}

// Validate validates the CT_Sets and its children
func (_daadg *CT_Sets) Validate() error {
	return _daadg.ValidateWithPath("\u0043T\u005f\u0053\u0065\u0074\u0073")
}

type CT_FieldUsage struct {

	// Field Index
	XAttr int32
}

// Validate validates the CT_SharedItems and its children
func (_fgabd *CT_SharedItems) Validate() error {
	return _fgabd.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073")
}
func (_ed *AG_RevData) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ed.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ed.RIdAttr)})
	}
	if _ed.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ed.UaAttr))})
	}
	if _ed.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_ed.RaAttr))})
	}
	return nil
}
func (_ccaga *CT_rowItems) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gbaef := range start.Attr {
		if _gbaef.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bbdge, _gcfede := _g.ParseUint(_gbaef.Value, 10, 32)
			if _gcfede != nil {
				return _gcfede
			}
			_ffbacg := uint32(_bbdge)
			_ccaga.CountAttr = &_ffbacg
			continue
		}
	}
_afafac:
	for {
		_geebc, _bgaacc := d.Token()
		if _bgaacc != nil {
			return _bgaacc
		}
		switch _edabg := _geebc.(type) {
		case _b.StartElement:
			switch _edabg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_gbdbd := NewCT_I()
				if _gfcgc := d.DecodeElement(_gbdbd, &_edabg); _gfcgc != nil {
					return _gfcgc
				}
				_ccaga.I = append(_ccaga.I, _gbdbd)
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073\u0020\u0025\u0076", _edabg.Name)
				if _eedbdd := d.Skip(); _eedbdd != nil {
					return _eedbdd
				}
			}
		case _b.EndElement:
			break _afafac
		case _b.CharData:
		}
	}
	return nil
}

type CT_ExternalSheetNames struct {

	// Sheet Name
	SheetName []*CT_ExternalSheetName
}
type CT_SharedItems struct {

	// Contains Semi Mixed Data Types
	ContainsSemiMixedTypesAttr *bool

	// Contains Non Date
	ContainsNonDateAttr *bool

	// Contains Date
	ContainsDateAttr *bool

	// Contains String
	ContainsStringAttr *bool

	// Contains Blank
	ContainsBlankAttr *bool

	// Contains Mixed Data Types
	ContainsMixedTypesAttr *bool

	// Contains Numbers
	ContainsNumberAttr *bool

	// Contains Integer
	ContainsIntegerAttr *bool

	// Minimum Numeric Value
	MinValueAttr *float64

	// Maximum Numeric Value
	MaxValueAttr *float64

	// Minimum Date Time
	MinDateAttr *_d.Time

	// Maximum Date Time Value
	MaxDateAttr *_d.Time

	// Shared Items Count
	CountAttr *uint32

	// Long Text
	LongTextAttr *bool

	// No Value
	M []*CT_Missing

	// Numeric
	N []*CT_Number

	// Boolean
	B []*CT_Boolean

	// Error Value
	E []*CT_Error

	// Character Value
	S []*CT_String

	// Date Time
	D []*CT_DateTime
}
type CT_NumFmts struct {

	// Number Format Count
	CountAttr *uint32

	// Number Formats
	NumFmt []*CT_NumFmt
}

func (_gfcadc ST_Orientation) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_gfcadc.String(), start)
}
func (_gabdd *ST_RevisionAction) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_gabdd = 0
	case "\u0061\u0064\u0064":
		*_gabdd = 1
	case "\u0064\u0065\u006c\u0065\u0074\u0065":
		*_gabdd = 2
	}
	return nil
}
func NewCT_FileSharing() *CT_FileSharing { _fegcf := &CT_FileSharing{}; return _fegcf }
func (_gccdfg *CT_Control) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _efdae := range start.Attr {
		if _efdae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _efdae.Name.Local == "\u0069\u0064" || _efdae.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _efdae.Name.Local == "\u0069\u0064" {
			_ecefg, _eaea := _efdae.Value, error(nil)
			if _eaea != nil {
				return _eaea
			}
			_gccdfg.IdAttr = _ecefg
			continue
		}
		if _efdae.Name.Local == "\u0073h\u0061\u0070\u0065\u0049\u0064" {
			_baeg, _fbbg := _g.ParseUint(_efdae.Value, 10, 32)
			if _fbbg != nil {
				return _fbbg
			}
			_gccdfg.ShapeIdAttr = uint32(_baeg)
			continue
		}
		if _efdae.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fgadd, _gbdae := _efdae.Value, error(nil)
			if _gbdae != nil {
				return _gbdae
			}
			_gccdfg.NameAttr = &_fgadd
			continue
		}
	}
_fegfb:
	for {
		_caga, _ccadg := d.Token()
		if _ccadg != nil {
			return _ccadg
		}
		switch _befa := _caga.(type) {
		case _b.StartElement:
			switch _befa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063o\u006e\u0074\u0072\u006f\u006c\u0050r"}:
				_gccdfg.ControlPr = NewCT_ControlPr()
				if _ffeb := d.DecodeElement(_gccdfg.ControlPr, &_befa); _ffeb != nil {
					return _ffeb
				}
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0020\u0025\u0076", _befa.Name)
				if _deaff := d.Skip(); _deaff != nil {
					return _deaff
				}
			}
		case _b.EndElement:
			break _fegfb
		case _b.CharData:
		}
	}
	return nil
}
func (_baegef ST_CellFormulaType) ValidateWithPath(path string) error {
	switch _baegef {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_baegef))
	}
	return nil
}

type ST_SheetViewType byte
type CT_PatternFill struct {

	// Pattern Type
	PatternTypeAttr ST_PatternType

	// Foreground Color
	FgColor *CT_Color

	// Background Color
	BgColor *CT_Color
}

func (_gabfbb ST_SortMethod) Validate() error { return _gabfbb.ValidateWithPath("") }
func (_dbfcb *CT_CalculatedItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dbfcb.PivotArea = NewCT_PivotArea()
	for _, _dfab := range start.Attr {
		if _dfab.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_eef, _ggf := _g.ParseUint(_dfab.Value, 10, 32)
			if _ggf != nil {
				return _ggf
			}
			_eedb := uint32(_eef)
			_dbfcb.FieldAttr = &_eedb
			continue
		}
		if _dfab.Name.Local == "\u0066o\u0072\u006d\u0075\u006c\u0061" {
			_bcgd, _ecece := _dfab.Value, error(nil)
			if _ecece != nil {
				return _ecece
			}
			_dbfcb.FormulaAttr = &_bcgd
			continue
		}
	}
_abgb:
	for {
		_aeca, _aaac := d.Token()
		if _aaac != nil {
			return _aaac
		}
		switch _aeg := _aeca.(type) {
		case _b.StartElement:
			switch _aeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0076\u006f\u0074\u0041\u0072\u0065a"}:
				if _aggb := d.DecodeElement(_dbfcb.PivotArea, &_aeg); _aggb != nil {
					return _aggb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbfcb.ExtLst = NewCT_ExtensionList()
				if _gegbg := d.DecodeElement(_dbfcb.ExtLst, &_aeg); _gegbg != nil {
					return _gegbg
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _aeg.Name)
				if _geff := d.Skip(); _geff != nil {
					return _geff
				}
			}
		case _b.EndElement:
			break _abgb
		case _b.CharData:
		}
	}
	return nil
}

const (
	ST_ScopeUnset     ST_Scope = 0
	ST_ScopeSelection ST_Scope = 1
	ST_ScopeData      ST_Scope = 2
	ST_ScopeField     ST_Scope = 3
)
const (
	ST_TextVAlignUnset       ST_TextVAlign = 0
	ST_TextVAlignTop         ST_TextVAlign = 1
	ST_TextVAlignCenter      ST_TextVAlign = 2
	ST_TextVAlignBottom      ST_TextVAlign = 3
	ST_TextVAlignJustify     ST_TextVAlign = 4
	ST_TextVAlignDistributed ST_TextVAlign = 5
)

// Validate validates the CT_RangePr and its children
func (_dcfgg *CT_RangePr) Validate() error {
	return _dcfgg.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072")
}
func (_ggccg *CT_DefinedName) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cddg := range start.Attr {
		if _cddg.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_bgcad, _fbddbb := _g.ParseBool(_cddg.Value)
			if _fbddbb != nil {
				return _fbddbb
			}
			_ggccg.HiddenAttr = &_bgcad
			continue
		}
		if _cddg.Name.Local == "\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e" {
			_edggd, _bcgfg := _g.ParseBool(_cddg.Value)
			if _bcgfg != nil {
				return _bcgfg
			}
			_ggccg.FunctionAttr = &_edggd
			continue
		}
		if _cddg.Name.Local == "\u0063o\u006d\u006d\u0065\u006e\u0074" {
			_gffe, _bbgef := _cddg.Value, error(nil)
			if _bbgef != nil {
				return _bbgef
			}
			_ggccg.CommentAttr = &_gffe
			continue
		}
		if _cddg.Name.Local == "d\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u0069\u006f\u006e" {
			_gfbd, _dbad := _cddg.Value, error(nil)
			if _dbad != nil {
				return _dbad
			}
			_ggccg.DescriptionAttr = &_gfbd
			continue
		}
		if _cddg.Name.Local == "\u0068\u0065\u006c\u0070" {
			_gagbc, _fcae := _cddg.Value, error(nil)
			if _fcae != nil {
				return _fcae
			}
			_ggccg.HelpAttr = &_gagbc
			continue
		}
		if _cddg.Name.Local == "\u0073t\u0061\u0074\u0075\u0073\u0042\u0061r" {
			_cgaaf, _ggbcc := _cddg.Value, error(nil)
			if _ggbcc != nil {
				return _ggbcc
			}
			_ggccg.StatusBarAttr = &_cgaaf
			continue
		}
		if _cddg.Name.Local == "\u006c\u006f\u0063a\u006c\u0053\u0068\u0065\u0065\u0074\u0049\u0064" {
			_gagab, _bfbacc := _g.ParseUint(_cddg.Value, 10, 32)
			if _bfbacc != nil {
				return _bfbacc
			}
			_aacd := uint32(_gagab)
			_ggccg.LocalSheetIdAttr = &_aacd
			continue
		}
		if _cddg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fccae, _gbbd := _cddg.Value, error(nil)
			if _gbbd != nil {
				return _gbbd
			}
			_ggccg.NameAttr = _fccae
			continue
		}
		if _cddg.Name.Local == "\u0063\u0075\u0073\u0074\u006f\u006d\u004d\u0065\u006e\u0075" {
			_bbefd, _bcbb := _cddg.Value, error(nil)
			if _bcbb != nil {
				return _bcbb
			}
			_ggccg.CustomMenuAttr = &_bbefd
			continue
		}
		if _cddg.Name.Local == "v\u0062\u0050\u0072\u006f\u0063\u0065\u0064\u0075\u0072\u0065" {
			_aaae, _dbcag := _g.ParseBool(_cddg.Value)
			if _dbcag != nil {
				return _dbcag
			}
			_ggccg.VbProcedureAttr = &_aaae
			continue
		}
		if _cddg.Name.Local == "\u0078\u006c\u006d" {
			_gcag, _dcegd := _g.ParseBool(_cddg.Value)
			if _dcegd != nil {
				return _dcegd
			}
			_ggccg.XlmAttr = &_gcag
			continue
		}
		if _cddg.Name.Local == "\u0066u\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070\u0049\u0064" {
			_cceea, _cceec := _g.ParseUint(_cddg.Value, 10, 32)
			if _cceec != nil {
				return _cceec
			}
			_bceee := uint32(_cceea)
			_ggccg.FunctionGroupIdAttr = &_bceee
			continue
		}
		if _cddg.Name.Local == "s\u0068\u006f\u0072\u0074\u0063\u0075\u0074\u004b\u0065\u0079" {
			_bcea, _bfbd := _cddg.Value, error(nil)
			if _bfbd != nil {
				return _bfbd
			}
			_ggccg.ShortcutKeyAttr = &_bcea
			continue
		}
		if _cddg.Name.Local == "\u0070u\u0062l\u0069\u0073\u0068\u0054\u006f\u0053\u0065\u0072\u0076\u0065\u0072" {
			_eafef, _eafcc := _g.ParseBool(_cddg.Value)
			if _eafcc != nil {
				return _eafcc
			}
			_ggccg.PublishToServerAttr = &_eafef
			continue
		}
		if _cddg.Name.Local == "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0061\u0072\u0061m\u0065\u0074\u0065\u0072" {
			_agae, _aeef := _g.ParseBool(_cddg.Value)
			if _aeef != nil {
				return _aeef
			}
			_ggccg.WorkbookParameterAttr = &_agae
			continue
		}
	}
	for {
		_adcc, _ecea := d.Token()
		if _ecea != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065:\u0020\u0025\u0073", _ecea)
		}
		if _dgab, _dfdag := _adcc.(_b.CharData); _dfdag {
			_ggccg.Content = string(_dgab)
		}
		if _gceca, _dgadd := _adcc.(_b.EndElement); _dgadd && _gceca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaebg *CT_RevisionSheetRename) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _gaebg.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006fl\u0064\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gaebg.OldNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006ee\u0077\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gaebg.NewNameAttr)})
	if _gaebg.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gaebg.RIdAttr)})
	}
	if _gaebg.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gaebg.UaAttr))})
	}
	if _gaebg.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gaebg.RaAttr))})
	}
	e.EncodeToken(start)
	if _gaebg.ExtLst != nil {
		_gabda := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gaebg.ExtLst, _gabda)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_ffgfc *CT_Cols) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cfab:
	for {
		_fcac, _fgef := d.Token()
		if _fgef != nil {
			return _fgef
		}
		switch _eeae := _fcac.(type) {
		case _b.StartElement:
			switch _eeae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c"}:
				_ccbb := NewCT_Col()
				if _cdcd := d.DecodeElement(_ccbb, &_eeae); _cdcd != nil {
					return _cdcd
				}
				_ffgfc.Col = append(_ffgfc.Col, _ccbb)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0073\u0020\u0025\u0076", _eeae.Name)
				if _bbfe := d.Skip(); _bbfe != nil {
					return _bbfe
				}
			}
		case _b.EndElement:
			break _cfab
		case _b.CharData:
		}
	}
	return nil
}
func (_dccag *CT_ObjectPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dccag.Anchor = NewCT_ObjectAnchor()
	for _, _fbcge := range start.Attr {
		if _fbcge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fbcge.Name.Local == "\u0069\u0064" || _fbcge.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fbcge.Name.Local == "\u0069\u0064" {
			_abdad, _ceba := _fbcge.Value, error(nil)
			if _ceba != nil {
				return _ceba
			}
			_dccag.IdAttr = &_abdad
			continue
		}
		if _fbcge.Name.Local == "\u0061\u0075\u0074\u006f\u004c\u0069\u006e\u0065" {
			_bffda, _fdcb := _g.ParseBool(_fbcge.Value)
			if _fdcb != nil {
				return _fdcb
			}
			_dccag.AutoLineAttr = &_bffda
			continue
		}
		if _fbcge.Name.Local == "\u0070\u0072\u0069n\u0074" {
			_bagdf, _cccff := _g.ParseBool(_fbcge.Value)
			if _cccff != nil {
				return _cccff
			}
			_dccag.PrintAttr = &_bagdf
			continue
		}
		if _fbcge.Name.Local == "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0064" {
			_bccfe, _gcfbeg := _g.ParseBool(_fbcge.Value)
			if _gcfbeg != nil {
				return _gcfbeg
			}
			_dccag.DisabledAttr = &_bccfe
			continue
		}
		if _fbcge.Name.Local == "\u0075\u0069\u004f\u0062\u006a\u0065\u0063\u0074" {
			_ggbcce, _cace := _g.ParseBool(_fbcge.Value)
			if _cace != nil {
				return _cace
			}
			_dccag.UiObjectAttr = &_ggbcce
			continue
		}
		if _fbcge.Name.Local == "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u006c" {
			_aagdb, _egbca := _g.ParseBool(_fbcge.Value)
			if _egbca != nil {
				return _egbca
			}
			_dccag.AutoFillAttr = &_aagdb
			continue
		}
		if _fbcge.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_efee, _afbdc := _g.ParseBool(_fbcge.Value)
			if _afbdc != nil {
				return _afbdc
			}
			_dccag.LockedAttr = &_efee
			continue
		}
		if _fbcge.Name.Local == "\u0061\u0075\u0074\u006f\u0050\u0069\u0063\u0074" {
			_dbaee, _dfccb := _g.ParseBool(_fbcge.Value)
			if _dfccb != nil {
				return _dfccb
			}
			_dccag.AutoPictAttr = &_dbaee
			continue
		}
		if _fbcge.Name.Local == "\u006d\u0061\u0063r\u006f" {
			_fefab, _dddab := _fbcge.Value, error(nil)
			if _dddab != nil {
				return _dddab
			}
			_dccag.MacroAttr = &_fefab
			continue
		}
		if _fbcge.Name.Local == "\u0061l\u0074\u0054\u0065\u0078\u0074" {
			_dfadd, _bagdc := _fbcge.Value, error(nil)
			if _bagdc != nil {
				return _bagdc
			}
			_dccag.AltTextAttr = &_dfadd
			continue
		}
		if _fbcge.Name.Local == "\u0064\u0064\u0065" {
			_ebfeee, _cbggag := _g.ParseBool(_fbcge.Value)
			if _cbggag != nil {
				return _cbggag
			}
			_dccag.DdeAttr = &_ebfeee
			continue
		}
		if _fbcge.Name.Local == "d\u0065\u0066\u0061\u0075\u006c\u0074\u0053\u0069\u007a\u0065" {
			_bddba, _ebaedf := _g.ParseBool(_fbcge.Value)
			if _ebaedf != nil {
				return _ebaedf
			}
			_dccag.DefaultSizeAttr = &_bddba
			continue
		}
	}
_cbbacg:
	for {
		_afafg, _bdbdc := d.Token()
		if _bdbdc != nil {
			return _bdbdc
		}
		switch _cgfde := _afafg.(type) {
		case _b.StartElement:
			switch _cgfde.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _cedba := d.DecodeElement(_dccag.Anchor, &_cgfde); _cedba != nil {
					return _cedba
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072\u0020\u0025\u0076", _cgfde.Name)
				if _agebf := d.Skip(); _agebf != nil {
					return _agebf
				}
			}
		case _b.EndElement:
			break _cbbacg
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PivotAreaReferences and its children
func (_fgcdb *CT_PivotAreaReferences) Validate() error {
	return _fgcdb.ValidateWithPath("\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073")
}
func (_gdecc *CT_CacheFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdecc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_gdecc.CountAttr)})
	}
	e.EncodeToken(start)
	if _gdecc.CacheField != nil {
		_cgc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064"}}
		for _, _dcg := range _gdecc.CacheField {
			e.EncodeElement(_dcg, _cgc)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_agggfb *CT_Font) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cafba:
	for {
		_cfdcc, _ddfeg := d.Token()
		if _ddfeg != nil {
			return _ddfeg
		}
		switch _decd := _cfdcc.(type) {
		case _b.StartElement:
			switch _decd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0061\u006d\u0065"}:
				_ebfbe := NewCT_FontName()
				if _bggb := d.DecodeElement(_ebfbe, &_decd); _bggb != nil {
					return _bggb
				}
				_agggfb.Name = append(_agggfb.Name, _ebfbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}:
				_gdcae := NewCT_IntProperty()
				if _gdfbfd := d.DecodeElement(_gdcae, &_decd); _gdfbfd != nil {
					return _gdfbfd
				}
				_agggfb.Charset = append(_agggfb.Charset, _gdcae)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0061\u006d\u0069\u006c\u0079"}:
				_gbbbg := NewCT_FontFamily()
				if _fgfc := d.DecodeElement(_gbbbg, &_decd); _fgfc != nil {
					return _fgfc
				}
				_agggfb.Family = append(_agggfb.Family, _gbbbg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_dcdg := NewCT_BooleanProperty()
				if _ebegf := d.DecodeElement(_dcdg, &_decd); _ebegf != nil {
					return _ebegf
				}
				_agggfb.B = append(_agggfb.B, _dcdg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069"}:
				_ggaaa := NewCT_BooleanProperty()
				if _bccge := d.DecodeElement(_ggaaa, &_decd); _bccge != nil {
					return _bccge
				}
				_agggfb.I = append(_agggfb.I, _ggaaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0072\u0069\u006b\u0065"}:
				_gaded := NewCT_BooleanProperty()
				if _adfaga := d.DecodeElement(_gaded, &_decd); _adfaga != nil {
					return _adfaga
				}
				_agggfb.Strike = append(_agggfb.Strike, _gaded)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u006c\u0069\u006e\u0065"}:
				_eedcg := NewCT_BooleanProperty()
				if _dgdaa := d.DecodeElement(_eedcg, &_decd); _dgdaa != nil {
					return _dgdaa
				}
				_agggfb.Outline = append(_agggfb.Outline, _eedcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061\u0064\u006f\u0077"}:
				_bggda := NewCT_BooleanProperty()
				if _egad := d.DecodeElement(_bggda, &_decd); _egad != nil {
					return _egad
				}
				_agggfb.Shadow = append(_agggfb.Shadow, _bggda)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0064\u0065\u006e\u0073\u0065"}:
				_daab := NewCT_BooleanProperty()
				if _acfbgf := d.DecodeElement(_daab, &_decd); _acfbgf != nil {
					return _acfbgf
				}
				_agggfb.Condense = append(_agggfb.Condense, _daab)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0065\u006e\u0064"}:
				_acede := NewCT_BooleanProperty()
				if _cbafe := d.DecodeElement(_acede, &_decd); _cbafe != nil {
					return _cbafe
				}
				_agggfb.Extend = append(_agggfb.Extend, _acede)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cddgc := NewCT_Color()
				if _dcbec := d.DecodeElement(_cddgc, &_decd); _dcbec != nil {
					return _dcbec
				}
				_agggfb.Color = append(_agggfb.Color, _cddgc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u007a"}:
				_aafg := NewCT_FontSize()
				if _badbd := d.DecodeElement(_aafg, &_decd); _badbd != nil {
					return _badbd
				}
				_agggfb.Sz = append(_agggfb.Sz, _aafg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075"}:
				_afea := NewCT_UnderlineProperty()
				if _abgbg := d.DecodeElement(_afea, &_decd); _abgbg != nil {
					return _abgbg
				}
				_agggfb.U = append(_agggfb.U, _afea)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076e\u0072\u0074\u0041\u006c\u0069\u0067n"}:
				_fbagf := NewCT_VerticalAlignFontProperty()
				if _fbbc := d.DecodeElement(_fbagf, &_decd); _fbbc != nil {
					return _fbbc
				}
				_agggfb.VertAlign = append(_agggfb.VertAlign, _fbagf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0068\u0065\u006d\u0065"}:
				_gadb := NewCT_FontScheme()
				if _dcgb := d.DecodeElement(_gadb, &_decd); _dcgb != nil {
					return _dcgb
				}
				_agggfb.Scheme = append(_agggfb.Scheme, _gadb)
			default:
				_f.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0046\u006f\u006e\u0074\u0020\u0025\u0076", _decd.Name)
				if _faec := d.Skip(); _faec != nil {
					return _faec
				}
			}
		case _b.EndElement:
			break _cafba
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_WebPublishItem and its children
func (_dgbfd *CT_WebPublishItem) Validate() error {
	return _dgbfd.ValidateWithPath("\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d")
}

// Validate validates the CT_MeasureGroups and its children
func (_bccag *CT_MeasureGroups) Validate() error {
	return _bccag.ValidateWithPath("\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073")
}

// ValidateWithPath validates the CT_IconSet and its children, prefixing error messages with path
func (_afdae *CT_IconSet) ValidateWithPath(path string) error {
	if _cddb := _afdae.IconSetAttr.ValidateWithPath(path + "\u002f\u0049\u0063o\u006e\u0053\u0065\u0074\u0041\u0074\u0074\u0072"); _cddb != nil {
		return _cddb
	}
	for _egeae, _gafbf := range _afdae.Cfvo {
		if _bccde := _gafbf.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _egeae)); _bccde != nil {
			return _bccde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorFilter and its children, prefixing error messages with path
func (_fgbg *CT_ColorFilter) ValidateWithPath(path string) error { return nil }
func (_dacac ST_Orientation) ValidateWithPath(path string) error {
	switch _dacac {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dacac))
	}
	return nil
}
func (_cba *CT_BorderPr) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cgf := range start.Attr {
		if _cgf.Name.Local == "\u0073\u0074\u0079l\u0065" {
			_cba.StyleAttr.UnmarshalXMLAttr(_cgf)
			continue
		}
	}
_edf:
	for {
		_gdbc, _bbf := d.Token()
		if _bbf != nil {
			return _bbf
		}
		switch _efd := _gdbc.(type) {
		case _b.StartElement:
			switch _efd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006co\u0072"}:
				_cba.Color = NewCT_Color()
				if _ggdc := d.DecodeElement(_cba.Color, &_efd); _ggdc != nil {
					return _ggdc
				}
			default:
				_f.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072\u0020\u0025\u0076", _efd.Name)
				if _gfge := d.Skip(); _gfge != nil {
					return _gfge
				}
			}
		case _b.EndElement:
			break _edf
		case _b.CharData:
		}
	}
	return nil
}
func (_dbgac *CT_PivotTableStyle) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbgac.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_dbgac.NameAttr)})
	}
	if _dbgac.ShowRowHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbgac.ShowRowHeadersAttr))})
	}
	if _dbgac.ShowColHeadersAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0048\u0065a\u0064\u0065\u0072\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbgac.ShowColHeadersAttr))})
	}
	if _dbgac.ShowRowStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0052\u006f\u0077\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbgac.ShowRowStripesAttr))})
	}
	if _dbgac.ShowColStripesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0043\u006f\u006c\u0053\u0074r\u0069\u0070\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbgac.ShowColStripesAttr))})
	}
	if _dbgac.ShowLastColumnAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u004c\u0061\u0073\u0074\u0043o\u006c\u0075\u006d\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_dbgac.ShowLastColumnAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dacceg *CT_SheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_eebf:
	for {
		_gefgb, _cefgbc := d.Token()
		if _cefgbc != nil {
			return _cefgbc
		}
		switch _agdgf := _gefgb.(type) {
		case _b.StartElement:
			switch _agdgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0056\u0069\u0065w"}:
				_adgge := NewCT_SheetView()
				if _dcabad := d.DecodeElement(_adgge, &_agdgf); _dcabad != nil {
					return _dcabad
				}
				_dacceg.SheetView = append(_dacceg.SheetView, _adgge)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dacceg.ExtLst = NewCT_ExtensionList()
				if _gdfgc := d.DecodeElement(_dacceg.ExtLst, &_agdgf); _gdfgc != nil {
					return _gdfgc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073 \u0025\u0076", _agdgf.Name)
				if _gcega := d.Skip(); _gcega != nil {
					return _gcega
				}
			}
		case _b.EndElement:
			break _eebf
		case _b.CharData:
		}
	}
	return nil
}
func (_bagfae *ST_Pane) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_bagfae = 0
	case "b\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_bagfae = 1
	case "\u0074\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_bagfae = 2
	case "\u0062\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_bagfae = 3
	case "\u0074o\u0070\u004c\u0065\u0066\u0074":
		*_bagfae = 4
	}
	return nil
}

// ValidateWithPath validates the CT_Dimensions and its children, prefixing error messages with path
func (_dcaege *CT_Dimensions) ValidateWithPath(path string) error {
	for _fafcbb, _gccff := range _dcaege.Dimension {
		if _ffaa := _gccff.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0044\u0069\u006de\u006e\u0073\u0069\u006f\u006e\u005b\u0025\u0064\u005d", path, _fafcbb)); _ffaa != nil {
			return _ffaa
		}
	}
	return nil
}
func (_ddcce *ST_SmartTagShow) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_acdcdc, _gdbcf := d.Token()
	if _gdbcf != nil {
		return _gdbcf
	}
	if _fbccf, _beebed := _acdcdc.(_b.EndElement); _beebed && _fbccf.Name == start.Name {
		*_ddcce = 1
		return nil
	}
	if _beead, _cedfaa := _acdcdc.(_b.CharData); !_cedfaa {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _acdcdc)
	} else {
		switch string(_beead) {
		case "":
			*_ddcce = 0
		case "\u0061\u006c\u006c":
			*_ddcce = 1
		case "\u006e\u006f\u006e\u0065":
			*_ddcce = 2
		case "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072":
			*_ddcce = 3
		}
	}
	_acdcdc, _gdbcf = d.Token()
	if _gdbcf != nil {
		return _gdbcf
	}
	if _gbdda, _bacfc := _acdcdc.(_b.EndElement); _bacfc && _gbdda.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _acdcdc)
}

type CT_RevisionComment struct {

	// Sheet Id
	SheetIdAttr uint32

	// Cell
	CellAttr string

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction

	// Always Show Comment
	AlwaysShowAttr *bool

	// Old Comment
	OldAttr *bool

	// Comment In Hidden Row
	HiddenRowAttr *bool

	// Hidden Column
	HiddenColumnAttr *bool

	// Author
	AuthorAttr string

	// Original Comment Length
	OldLengthAttr *uint32

	// New Comment Length
	NewLengthAttr *uint32
}

// Validate validates the CT_IndexedColors and its children
func (_bcecf *CT_IndexedColors) Validate() error {
	return _bcecf.ValidateWithPath("\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073")
}
func (_dbbb *CT_Format) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbbb.ActionAttr != ST_FormatActionUnset {
		_dcdaa, _affgc := _dbbb.ActionAttr.MarshalXMLAttr(_b.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"})
		if _affgc != nil {
			return _affgc
		}
		start.Attr = append(start.Attr, _dcdaa)
	}
	if _dbbb.DxfIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0078\u0066I\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dbbb.DxfIdAttr)})
	}
	e.EncodeToken(start)
	_cgbf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_dbbb.PivotArea, _cgbf)
	if _dbbb.ExtLst != nil {
		_feegb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_dbbb.ExtLst, _feegb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GroupMembers and its children, prefixing error messages with path
func (_beeag *CT_GroupMembers) ValidateWithPath(path string) error {
	for _aecgb, _gcde := range _beeag.GroupMember {
		if _ebgdcb := _gcde.ValidateWithPath(_a.Sprintf("\u0025s\u002fG\u0072\u006f\u0075\u0070\u004de\u006d\u0062e\u0072\u005b\u0025\u0064\u005d", path, _aecgb)); _ebgdcb != nil {
			return _ebgdcb
		}
	}
	return nil
}
func NewPivotCacheDefinition() *PivotCacheDefinition {
	_ddefa := &PivotCacheDefinition{}
	_ddefa.CT_PivotCacheDefinition = *NewCT_PivotCacheDefinition()
	return _ddefa
}
func (_dffe *CT_ColHierarchiesUsage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gedd := range start.Attr {
		if _gedd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_gaag, _afca := _g.ParseUint(_gedd.Value, 10, 32)
			if _afca != nil {
				return _afca
			}
			_cdga := uint32(_gaag)
			_dffe.CountAttr = &_cdga
			continue
		}
	}
_eaab:
	for {
		_bccb, _edg := d.Token()
		if _edg != nil {
			return _edg
		}
		switch _fcgf := _bccb.(type) {
		case _b.StartElement:
			switch _fcgf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006c\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065"}:
				_ffbb := NewCT_HierarchyUsage()
				if _dfdbe := d.DecodeElement(_ffbb, &_fcgf); _dfdbe != nil {
					return _dfdbe
				}
				_dffe.ColHierarchyUsage = append(_dffe.ColHierarchyUsage, _ffbb)
			default:
				_f.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006f\u006c\u0048i\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061\u0067\u0065\u0020\u0025\u0076", _fcgf.Name)
				if _gebfd := d.Skip(); _gebfd != nil {
					return _gebfd
				}
			}
		case _b.EndElement:
			break _eaab
		case _b.CharData:
		}
	}
	return nil
}
func (_bacbfb *CT_InputCells) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _dcgbb := range start.Attr {
		if _dcgbb.Name.Local == "\u0072" {
			_ccbea, _bdbg := _dcgbb.Value, error(nil)
			if _bdbg != nil {
				return _bdbg
			}
			_bacbfb.RAttr = _ccbea
			continue
		}
		if _dcgbb.Name.Local == "\u0064e\u006c\u0065\u0074\u0065\u0064" {
			_aecfb, _gdecb := _g.ParseBool(_dcgbb.Value)
			if _gdecb != nil {
				return _gdecb
			}
			_bacbfb.DeletedAttr = &_aecfb
			continue
		}
		if _dcgbb.Name.Local == "\u0075\u006e\u0064\u006f\u006e\u0065" {
			_cbbea, _ccaba := _g.ParseBool(_dcgbb.Value)
			if _ccaba != nil {
				return _ccaba
			}
			_bacbfb.UndoneAttr = &_cbbea
			continue
		}
		if _dcgbb.Name.Local == "\u0076\u0061\u006c" {
			_bfcgg, _aefbe := _dcgbb.Value, error(nil)
			if _aefbe != nil {
				return _aefbe
			}
			_bacbfb.ValAttr = _bfcgg
			continue
		}
		if _dcgbb.Name.Local == "\u006e\u0075\u006d\u0046\u006d\u0074\u0049\u0064" {
			_dabag, _fcgbcd := _g.ParseUint(_dcgbb.Value, 10, 32)
			if _fcgbcd != nil {
				return _fcgbcd
			}
			_eggeeb := uint32(_dabag)
			_bacbfb.NumFmtIdAttr = &_eggeeb
			continue
		}
	}
	for {
		_cfac, _faeeb := d.Token()
		if _faeeb != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0049n\u0070u\u0074C\u0065\u006c\u006c\u0073\u003a\u0020\u0025s", _faeeb)
		}
		if _ecdae, _eafga := _cfac.(_b.EndElement); _eafga && _ecdae.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_TotalsRowFunction byte
type CT_Format struct {

	// Format Action
	ActionAttr ST_FormatAction

	// Format Id
	DxfIdAttr *uint32

	// Pivot Table Location
	PivotArea *CT_PivotArea

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_I and its children
func (_abgf *CT_I) Validate() error { return _abgf.ValidateWithPath("\u0043\u0054\u005f\u0049") }

type ST_Comments byte
type CT_XStringElement struct {

	// Value
	VAttr string
}

const (
	ST_TotalsRowFunctionUnset     ST_TotalsRowFunction = 0
	ST_TotalsRowFunctionNone      ST_TotalsRowFunction = 1
	ST_TotalsRowFunctionSum       ST_TotalsRowFunction = 2
	ST_TotalsRowFunctionMin       ST_TotalsRowFunction = 3
	ST_TotalsRowFunctionMax       ST_TotalsRowFunction = 4
	ST_TotalsRowFunctionAverage   ST_TotalsRowFunction = 5
	ST_TotalsRowFunctionCount     ST_TotalsRowFunction = 6
	ST_TotalsRowFunctionCountNums ST_TotalsRowFunction = 7
	ST_TotalsRowFunctionStdDev    ST_TotalsRowFunction = 8
	ST_TotalsRowFunctionVar       ST_TotalsRowFunction = 9
	ST_TotalsRowFunctionCustom    ST_TotalsRowFunction = 10
)

func (_bdfege ST_RevisionAction) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_bdfege.String(), start)
}

// ValidateWithPath validates the CT_IntProperty and its children, prefixing error messages with path
func (_fbcf *CT_IntProperty) ValidateWithPath(path string) error { return nil }
func (_dgfbfb *CT_PCDKPIs) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bdcdca := range start.Attr {
		if _bdcdca.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_bffgfe, _dcbaaa := _g.ParseUint(_bdcdca.Value, 10, 32)
			if _dcbaaa != nil {
				return _dcbaaa
			}
			_ccbae := uint32(_bffgfe)
			_dgfbfb.CountAttr = &_ccbae
			continue
		}
	}
_bggdd:
	for {
		_fbdce, _bfcfdg := d.Token()
		if _bfcfdg != nil {
			return _bfcfdg
		}
		switch _feeeg := _fbdce.(type) {
		case _b.StartElement:
			switch _feeeg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006b\u0070\u0069"}:
				_gefd := NewCT_PCDKPI()
				if _cagad := d.DecodeElement(_gefd, &_feeeg); _cagad != nil {
					return _cagad
				}
				_dgfbfb.Kpi = append(_dgfbfb.Kpi, _gefd)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fP\u0043\u0044\u004b\u0050\u0049\u0073\u0020\u0025\u0076", _feeeg.Name)
				if _gfbaf := d.Skip(); _gfbaf != nil {
					return _gfbaf
				}
			}
		case _b.EndElement:
			break _bggdd
		case _b.CharData:
		}
	}
	return nil
}

type CT_MetadataStrings struct {

	// MDX Metadata String Count
	CountAttr *uint32

	// MDX Metadata String
	S []*CT_XStringElement
}
type CT_SmartTagType struct {

	// SmartTag Namespace URI
	NamespaceUriAttr *string

	// Name
	NameAttr *string

	// Smart Tag URL
	UrlAttr *string
}

func NewCT_SheetDimension() *CT_SheetDimension { _cfdefc := &CT_SheetDimension{}; return _cfdefc }

// Validate validates the CT_RgbColor and its children
func (_ffcef *CT_RgbColor) Validate() error {
	return _ffcef.ValidateWithPath("C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_dbgeg *CT_Sets) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dbgeg.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dbgeg.CountAttr)})
	}
	e.EncodeToken(start)
	_edaeg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0073\u0065\u0074"}}
	for _, _abgab := range _dbgeg.Set {
		e.EncodeElement(_abgab, _edaeg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Hyperlinks() *CT_Hyperlinks { _agedf := &CT_Hyperlinks{}; return _agedf }
func (_efcfe *CT_CustomChartsheetViews) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dcaeg:
	for {
		_fcgbd, _bdcd := d.Token()
		if _bdcd != nil {
			return _bdcd
		}
		switch _bcca := _fcgbd.(type) {
		case _b.StartElement:
			switch _bcca.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073t\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077"}:
				_ceec := NewCT_CustomChartsheetView()
				if _fgbgg := d.DecodeElement(_ceec, &_bcca); _fgbgg != nil {
					return _fgbgg
				}
				_efcfe.CustomSheetView = append(_efcfe.CustomSheetView, _ceec)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074V\u0069\u0065\u0077\u0073\u0020%\u0076", _bcca.Name)
				if _egef := d.Skip(); _egef != nil {
					return _egef
				}
			}
		case _b.EndElement:
			break _dcaeg
		case _b.CharData:
		}
	}
	return nil
}
func (_gdcc *CT_Connections) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_cdbb:
	for {
		_dgcf, _badb := d.Token()
		if _badb != nil {
			return _badb
		}
		switch _bced := _dgcf.(type) {
		case _b.StartElement:
			switch _bced.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fbga := NewCT_Connection()
				if _dfc := d.DecodeElement(_fbga, &_bced); _dfc != nil {
					return _dfc
				}
				_gdcc.Connection = append(_gdcc.Connection, _fbga)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074i\u006fn\u0073\u0020\u0025\u0076", _bced.Name)
				if _ggfc := d.Skip(); _ggfc != nil {
					return _ggfc
				}
			}
		case _b.EndElement:
			break _cdbb
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TableColumn and its children
func (_feccg *CT_TableColumn) Validate() error {
	return _feccg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e")
}

type CT_CacheField struct {

	// PivotCache Field Name
	NameAttr string

	// PivotCache Field Caption
	CaptionAttr *string

	// Property Name
	PropertyNameAttr *string

	// Server-based Field
	ServerFieldAttr *bool

	// Unique List Retrieved
	UniqueListAttr *bool

	// Number Format Id
	NumFmtIdAttr *uint32

	// Calculated Field Formula
	FormulaAttr *string

	// SQL Data Type
	SqlTypeAttr *int32

	// Hierarchy
	HierarchyAttr *int32

	// Hierarchy Level
	LevelAttr *uint32

	// Database Field
	DatabaseFieldAttr *bool

	// Member Property Count
	MappingCountAttr *uint32

	// Member Property Field
	MemberPropertyFieldAttr *bool

	// Shared Items
	SharedItems *CT_SharedItems

	// Field Group Properties
	FieldGroup *CT_FieldGroup

	// Member Properties Map
	MpMap []*CT_X

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

// Validate validates the CT_Mdx and its children
func (_bgaab *CT_Mdx) Validate() error {
	return _bgaab.ValidateWithPath("\u0043\u0054\u005f\u004d\u0064\u0078")
}
func (_ggabbf *CT_TextFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _ggabbf.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_ggabbf.CountAttr)})
	}
	e.EncodeToken(start)
	_efgf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003at\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _gfcedc := range _ggabbf.TextField {
		e.EncodeElement(_gfcedc, _efgf)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_efca *CT_Color) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _efca.AutoAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_efca.AutoAttr))})
	}
	if _efca.IndexedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069n\u0064\u0065\u0078\u0065\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_efca.IndexedAttr)})
	}
	if _efca.RgbAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0067\u0062"}, Value: _a.Sprintf("\u0025\u0076", *_efca.RgbAttr)})
	}
	if _efca.ThemeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0068\u0065m\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_efca.ThemeAttr)})
	}
	if _efca.TintAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0069\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_efca.TintAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_cceebc *CT_Table) ValidateWithPath(path string) error {
	if _ggdde := _cceebc.TableTypeAttr.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0054\u0079\u0070e\u0041\u0074\u0074\u0072"); _ggdde != nil {
		return _ggdde
	}
	if _cceebc.AutoFilter != nil {
		if _geedef := _cceebc.AutoFilter.ValidateWithPath(path + "/\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"); _geedef != nil {
			return _geedef
		}
	}
	if _cceebc.SortState != nil {
		if _dgagc := _cceebc.SortState.ValidateWithPath(path + "\u002f\u0053\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065"); _dgagc != nil {
			return _dgagc
		}
	}
	if _bgggbg := _cceebc.TableColumns.ValidateWithPath(path + "\u002f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073"); _bgggbg != nil {
		return _bgggbg
	}
	if _cceebc.TableStyleInfo != nil {
		if _gdacf := _cceebc.TableStyleInfo.ValidateWithPath(path + "\u002fT\u0061b\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u006e\u0066\u006f"); _gdacf != nil {
			return _gdacf
		}
	}
	if _cceebc.ExtLst != nil {
		if _abebg := _cceebc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abebg != nil {
			return _abebg
		}
	}
	return nil
}
func (_fcdbg ST_GroupBy) ValidateWithPath(path string) error {
	switch _fcdbg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fcdbg))
	}
	return nil
}

// Validate validates the CT_PivotSelection and its children
func (_fgdca *CT_PivotSelection) Validate() error {
	return _fgdca.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e")
}
func (_abfggb ST_PhoneticAlignment) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_abfggb.String(), start)
}
func NewCT_Extension() *CT_Extension { _egbec := &CT_Extension{}; return _egbec }
func (_febddg *CT_SingleXmlCell) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _febddg.IdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072"}, Value: _a.Sprintf("\u0025\u0076", _febddg.RAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _febddg.ConnectionIdAttr)})
	e.EncodeToken(start)
	_defade := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ax\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072"}}
	e.EncodeElement(_febddg.XmlCellPr, _defade)
	if _febddg.ExtLst != nil {
		_cadcd := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_febddg.ExtLst, _cadcd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_bcege ST_FieldSortType) Validate() error { return _bcege.ValidateWithPath("") }
func (_egfg *CT_CellProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _cbdad := range start.Attr {
		if _cbdad.Name.Local == "\u006c\u006f\u0063\u006b\u0065\u0064" {
			_gceb, _baca := _g.ParseBool(_cbdad.Value)
			if _baca != nil {
				return _baca
			}
			_egfg.LockedAttr = &_gceb
			continue
		}
		if _cbdad.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_afeg, _bbbg := _g.ParseBool(_cbdad.Value)
			if _bbbg != nil {
				return _bbbg
			}
			_egfg.HiddenAttr = &_afeg
			continue
		}
	}
	for {
		_ddefb, _dfad := d.Token()
		if _dfad != nil {
			return _a.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e: \u0025\u0073", _dfad)
		}
		if _acdc, _gbeb := _ddefb.(_b.EndElement); _gbeb && _acdc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cecc *CT_Groups) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cecc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cecc.CountAttr)})
	}
	e.EncodeToken(start)
	_agag := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0067\u0072\u006f\u0075\u0070"}}
	for _, _ffgcd := range _cecc.Group {
		e.EncodeElement(_ffgcd, _agag)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_CellStyles and its children
func (_dadd *CT_CellStyles) Validate() error {
	return _dadd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073")
}

type CT_XmlColumnPr struct {

	// XML Map Id
	MapIdAttr uint32

	// XPath
	XpathAttr string

	// Denormalized
	DenormalizedAttr *bool

	// XML Data Type
	XmlDataTypeAttr string

	// Future Feature Data Storage Area
	ExtLst *CT_ExtensionList
}

func (_cafcd ST_FileType) ValidateWithPath(path string) error {
	switch _cafcd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cafcd))
	}
	return nil
}

// Validate validates the CT_SmartTagType and its children
func (_feccea *CT_SmartTagType) Validate() error {
	return _feccea.ValidateWithPath("\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065")
}
func (_bfbec *CT_CustomFilter) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bfbec.OperatorAttr != ST_FilterOperatorUnset {
		_fdad, _gfbg := _bfbec.OperatorAttr.MarshalXMLAttr(_b.Name{Local: "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072"})
		if _gfbg != nil {
			return _gfbg
		}
		start.Attr = append(start.Attr, _fdad)
	}
	if _bfbec.ValAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_bfbec.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fbggg ST_PaneState) Validate() error { return _fbggg.ValidateWithPath("") }
func (_dfeacb *CT_TableFormula) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0072\u0072a\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(_dfeacb.ArrayAttr))})
	e.EncodeElement(_dfeacb.Content, start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_QueryTableDeletedFields and its children
func (_ggeec *CT_QueryTableDeletedFields) Validate() error {
	return _ggeec.ValidateWithPath("\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073")
}
func (_eeadc *CT_Tuples) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eeadc.CAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063"}, Value: _a.Sprintf("\u0025\u0076", *_eeadc.CAttr)})
	}
	e.EncodeToken(start)
	_aagdg := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0074\u0070\u006c"}}
	for _, _ceaaee := range _eeadc.Tpl {
		e.EncodeElement(_ceaaee, _aagdg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gbdfbd ST_WebSourceType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cdeba := _b.Attr{}
	_cdeba.Name = name
	switch _gbdfbd {
	case ST_WebSourceTypeUnset:
		_cdeba.Value = ""
	case ST_WebSourceTypeSheet:
		_cdeba.Value = "\u0073\u0068\u0065e\u0074"
	case ST_WebSourceTypePrintArea:
		_cdeba.Value = "\u0070r\u0069\u006e\u0074\u0041\u0072\u0065a"
	case ST_WebSourceTypeAutoFilter:
		_cdeba.Value = "\u0061\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072"
	case ST_WebSourceTypeRange:
		_cdeba.Value = "\u0072\u0061\u006eg\u0065"
	case ST_WebSourceTypeChart:
		_cdeba.Value = "\u0063\u0068\u0061r\u0074"
	case ST_WebSourceTypePivotTable:
		_cdeba.Value = "\u0070\u0069\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065"
	case ST_WebSourceTypeQuery:
		_cdeba.Value = "\u0071\u0075\u0065r\u0079"
	case ST_WebSourceTypeLabel:
		_cdeba.Value = "\u006c\u0061\u0062e\u006c"
	}
	return _cdeba, nil
}
func (_fcfdc *CT_DataValidations) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcfdc.DisablePromptsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0069\u0073\u0061\u0062\u006c\u0065\u0050\u0072o\u006d\u0070\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fcfdc.DisablePromptsAttr))})
	}
	if _fcfdc.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_fcfdc.XWindowAttr)})
	}
	if _fcfdc.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_fcfdc.YWindowAttr)})
	}
	if _fcfdc.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_fcfdc.CountAttr)})
	}
	e.EncodeToken(start)
	_ddgbc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e"}}
	for _, _aadff := range _fcfdc.DataValidation {
		e.EncodeElement(_aadff, _ddgbc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_fgace ST_TimePeriod) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_fgace.String(), start)
}
func (_eaceed *CT_colItems) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _eaceed.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_eaceed.CountAttr)})
	}
	e.EncodeToken(start)
	_egbbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0069"}}
	for _, _gfegdd := range _eaceed.I {
		e.EncodeElement(_gfegdd, _egbbe)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_rowItems and its children, prefixing error messages with path
func (_afgdaa *CT_rowItems) ValidateWithPath(path string) error {
	for _dedcaa, _ddgda := range _afgdaa.I {
		if _gbfeea := _ddgda.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0049\u005b\u0025\u0064\u005d", path, _dedcaa)); _gbfeea != nil {
			return _gbfeea
		}
	}
	return nil
}
func (_dfcfgdd ST_Orientation) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_gacade := _b.Attr{}
	_gacade.Name = name
	switch _dfcfgdd {
	case ST_OrientationUnset:
		_gacade.Value = ""
	case ST_OrientationDefault:
		_gacade.Value = "\u0064e\u0066\u0061\u0075\u006c\u0074"
	case ST_OrientationPortrait:
		_gacade.Value = "\u0070\u006f\u0072\u0074\u0072\u0061\u0069\u0074"
	case ST_OrientationLandscape:
		_gacade.Value = "\u006ca\u006e\u0064\u0073\u0063\u0061\u0070e"
	}
	return _gacade, nil
}
func (_afedg ST_RevisionAction) String() string {
	switch _afedg {
	case 0:
		return ""
	case 1:
		return "\u0061\u0064\u0064"
	case 2:
		return "\u0064\u0065\u006c\u0065\u0074\u0065"
	}
	return ""
}

type CT_DynamicFilter struct {

	// Dynamic filter type
	TypeAttr ST_DynamicFilterType

	// Value
	ValAttr *float64

	// ISO Value
	ValIsoAttr *_d.Time

	// Max Value
	MaxValAttr *float64

	// Max ISO Value
	MaxValIsoAttr *_d.Time
}

const (
	ST_HorizontalAlignmentUnset            ST_HorizontalAlignment = 0
	ST_HorizontalAlignmentGeneral          ST_HorizontalAlignment = 1
	ST_HorizontalAlignmentLeft             ST_HorizontalAlignment = 2
	ST_HorizontalAlignmentCenter           ST_HorizontalAlignment = 3
	ST_HorizontalAlignmentRight            ST_HorizontalAlignment = 4
	ST_HorizontalAlignmentFill             ST_HorizontalAlignment = 5
	ST_HorizontalAlignmentJustify          ST_HorizontalAlignment = 6
	ST_HorizontalAlignmentCenterContinuous ST_HorizontalAlignment = 7
	ST_HorizontalAlignmentDistributed      ST_HorizontalAlignment = 8
)

// Validate validates the CT_Stylesheet and its children
func (_cbcca *CT_Stylesheet) Validate() error {
	return _cbcca.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074")
}

// ValidateWithPath validates the CT_PivotFields and its children, prefixing error messages with path
func (_eaddf *CT_PivotFields) ValidateWithPath(path string) error {
	for _bgeb, _dcdcf := range _eaddf.PivotField {
		if _gdgdf := _dcdcf.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _bgeb)); _gdgdf != nil {
			return _gdgdf
		}
	}
	return nil
}
func (_befcfd *CT_RevisionInsertSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _befcfd.SheetIdAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _befcfd.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065\u0065\u0074\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _befcfd.SheetPositionAttr)})
	if _befcfd.RIdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_befcfd.RIdAttr)})
	}
	if _befcfd.UaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_befcfd.UaAttr))})
	}
	if _befcfd.RaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0061"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_befcfd.RaAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewEG_ExtensionList() *EG_ExtensionList { _cfcfcd := &EG_ExtensionList{}; return _cfcfcd }

// Validate validates the CT_PivotFilters and its children
func (_bbbdd *CT_PivotFilters) Validate() error {
	return _bbbdd.ValidateWithPath("\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073")
}
func (_bfeg *CT_Chartsheet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfeg.SheetViews = NewCT_ChartsheetViews()
	_bfeg.Drawing = NewCT_Drawing()
_ecb:
	for {
		_cdeg, _ffed := d.Token()
		if _ffed != nil {
			return _ffed
		}
		switch _bcgc := _cdeg.(type) {
		case _b.StartElement:
			switch _bcgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065\u0065\u0074\u0050\u0072"}:
				_bfeg.SheetPr = NewCT_ChartsheetPr()
				if _bged := d.DecodeElement(_bfeg.SheetPr, &_bcgc); _bged != nil {
					return _bged
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				if _adaf := d.DecodeElement(_bfeg.SheetViews, &_bcgc); _adaf != nil {
					return _adaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073h\u0065e\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_bfeg.SheetProtection = NewCT_ChartsheetProtection()
				if _gaeb := d.DecodeElement(_bfeg.SheetProtection, &_bcgc); _gaeb != nil {
					return _gaeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075s\u0074\u006f\u006dS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073"}:
				_bfeg.CustomSheetViews = NewCT_CustomChartsheetViews()
				if _fdaf := d.DecodeElement(_bfeg.CustomSheetViews, &_bcgc); _fdaf != nil {
					return _fdaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "p\u0061\u0067\u0065\u004d\u0061\u0072\u0067\u0069\u006e\u0073"}:
				_bfeg.PageMargins = NewCT_PageMargins()
				if _bbde := d.DecodeElement(_bfeg.PageMargins, &_bcgc); _bbde != nil {
					return _bbde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0067\u0065\u0053\u0065\u0074\u0075p"}:
				_bfeg.PageSetup = NewCT_CsPageSetup()
				if _cefdd := d.DecodeElement(_bfeg.PageSetup, &_bcgc); _cefdd != nil {
					return _cefdd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061d\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}:
				_bfeg.HeaderFooter = NewCT_HeaderFooter()
				if _gbfd := d.DecodeElement(_bfeg.HeaderFooter, &_bcgc); _gbfd != nil {
					return _gbfd
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067"}:
				if _bacde := d.DecodeElement(_bfeg.Drawing, &_bcgc); _bacde != nil {
					return _bacde
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0067\u0061\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067"}:
				_bfeg.LegacyDrawing = NewCT_LegacyDrawing()
				if _gbaa := d.DecodeElement(_bfeg.LegacyDrawing, &_bcgc); _gbaa != nil {
					return _gbaa
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ce\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046"}:
				_bfeg.LegacyDrawingHF = NewCT_LegacyDrawing()
				if _eaf := d.DecodeElement(_bfeg.LegacyDrawingHF, &_bcgc); _eaf != nil {
					return _eaf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064r\u0061\u0077\u0069\u006e\u0067\u0048F"}:
				_bfeg.DrawingHF = NewCT_DrawingHF()
				if _bedf := d.DecodeElement(_bfeg.DrawingHF, &_bcgc); _bedf != nil {
					return _bedf
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070i\u0063\u0074\u0075\u0072\u0065"}:
				_bfeg.Picture = NewCT_SheetBackgroundPicture()
				if _faga := d.DecodeElement(_bfeg.Picture, &_bcgc); _faga != nil {
					return _faga
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077e\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0049\u0074\u0065\u006d\u0073"}:
				_bfeg.WebPublishItems = NewCT_WebPublishItems()
				if _fgfeb := d.DecodeElement(_bfeg.WebPublishItems, &_bcgc); _fgfeb != nil {
					return _fgfeb
				}
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bfeg.ExtLst = NewCT_ExtensionList()
				if _bbgf := d.DecodeElement(_bfeg.ExtLst, &_bcgc); _bbgf != nil {
					return _bbgf
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043h\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074 \u0025\u0076", _bcgc.Name)
				if _ggedc := d.Skip(); _ggedc != nil {
					return _ggedc
				}
			}
		case _b.EndElement:
			break _ecb
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_WorksheetSource() *CT_WorksheetSource { _gaafad := &CT_WorksheetSource{}; return _gaafad }

// ValidateWithPath validates the CT_MergeCell and its children, prefixing error messages with path
func (_aeggf *CT_MergeCell) ValidateWithPath(path string) error { return nil }

type VolTypes struct{ CT_VolTypes }

// Validate validates the CT_Col and its children
func (_gdaaf *CT_Col) Validate() error {
	return _gdaaf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c")
}

// Validate validates the CT_FunctionGroups and its children
func (_cbgdb *CT_FunctionGroups) Validate() error {
	return _cbgdb.ValidateWithPath("\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073")
}

// ValidateWithPath validates the CT_SheetProtection and its children, prefixing error messages with path
func (_bbfc *CT_SheetProtection) ValidateWithPath(path string) error { return nil }
func (_adgcd *MapInfo) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u004d\u0061\u0070\u0049\u006e\u0066\u006f"
	return _adgcd.CT_MapInfo.MarshalXML(e, start)
}

// Validate validates the CT_InputCells and its children
func (_ecbd *CT_InputCells) Validate() error {
	return _ecbd.ValidateWithPath("\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073")
}
func (_gabee *CT_SmartTagTypes) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _gabee.SmartTagType != nil {
		_egbdad := _b.StartElement{Name: _b.Name{Local: "\u006da\u003as\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065"}}
		for _, _cabda := range _gabee.SmartTagType {
			e.EncodeElement(_cabda, _egbdad)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_ColHierarchiesUsage struct {

	// Items Count
	CountAttr *uint32

	// Column OLAP Hierarchies
	ColHierarchyUsage []*CT_HierarchyUsage
}

func NewCT_AutoFilter() *CT_AutoFilter { _eee := &CT_AutoFilter{}; return _eee }
func (_gdfe *CT_OleSize) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", _gdfe.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ChartsheetView() *CT_ChartsheetView { _ffda := &CT_ChartsheetView{}; return _ffda }
func (_dgfcf ST_GradientType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_cffed := _b.Attr{}
	_cffed.Name = name
	switch _dgfcf {
	case ST_GradientTypeUnset:
		_cffed.Value = ""
	case ST_GradientTypeLinear:
		_cffed.Value = "\u006c\u0069\u006e\u0065\u0061\u0072"
	case ST_GradientTypePath:
		_cffed.Value = "\u0070\u0061\u0074\u0068"
	}
	return _cffed, nil
}
func (_aacee *CT_SheetId) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _aacee.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_geagc *CT_LevelGroup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _geagc.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069\u0071\u0075\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _geagc.UniqueNameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063a\u0070\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _geagc.CaptionAttr)})
	if _geagc.UniqueParentAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075\u006e\u0069q\u0075\u0065\u0050\u0061\u0072\u0065\u006e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_geagc.UniqueParentAttr)})
	}
	if _geagc.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_geagc.IdAttr)})
	}
	e.EncodeToken(start)
	_edadf := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ag\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073"}}
	e.EncodeElement(_geagc.GroupMembers, _edadf)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_Selection() *CT_Selection { _dcfaea := &CT_Selection{}; return _dcfaea }

// Validate validates the CT_Set and its children
func (_dgef *CT_Set) Validate() error {
	return _dgef.ValidateWithPath("\u0043\u0054\u005f\u0053\u0065\u0074")
}
func NewCT_Location() *CT_Location { _eedcgf := &CT_Location{}; return _eedcgf }

// Validate validates the CT_PageBreak and its children
func (_edeb *CT_PageBreak) Validate() error {
	return _edeb.ValidateWithPath("\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b")
}

// ValidateWithPath validates the CT_SingleXmlCells and its children, prefixing error messages with path
func (_agbdcg *CT_SingleXmlCells) ValidateWithPath(path string) error {
	for _agbdaf, _fabee := range _agbdcg.SingleXmlCell {
		if _deabd := _fabee.ValidateWithPath(_a.Sprintf("%\u0073/\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006dl\u0043\u0065\u006c\u006c[%\u0064\u005d", path, _agbdaf)); _deabd != nil {
			return _deabd
		}
	}
	return nil
}
func (_adadb *ST_FilterOperator) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_abdgf, _bebbef := d.Token()
	if _bebbef != nil {
		return _bebbef
	}
	if _gdaafd, _ceabc := _abdgf.(_b.EndElement); _ceabc && _gdaafd.Name == start.Name {
		*_adadb = 1
		return nil
	}
	if _gcbedg, _bdega := _abdgf.(_b.CharData); !_bdega {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _abdgf)
	} else {
		switch string(_gcbedg) {
		case "":
			*_adadb = 0
		case "\u0065\u0071\u0075a\u006c":
			*_adadb = 1
		case "\u006c\u0065\u0073\u0073\u0054\u0068\u0061\u006e":
			*_adadb = 2
		case "\u006ce\u0073s\u0054\u0068\u0061\u006e\u004f\u0072\u0045\u0071\u0075\u0061\u006c":
			*_adadb = 3
		case "\u006e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_adadb = 4
		case "\u0067r\u0065a\u0074\u0065\u0072\u0054\u0068a\u006e\u004fr\u0045\u0071\u0075\u0061\u006c":
			*_adadb = 5
		case "g\u0072\u0065\u0061\u0074\u0065\u0072\u0054\u0068\u0061\u006e":
			*_adadb = 6
		}
	}
	_abdgf, _bebbef = d.Token()
	if _bebbef != nil {
		return _bebbef
	}
	if _gbgdf, _fbdfe := _abdgf.(_b.EndElement); _fbdfe && _gbgdf.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _abdgf)
}
func (_ccebd ST_FormulaExpression) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ccebd.String(), start)
}
func (_dbgfef ST_HorizontalAlignment) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_dacdee := _b.Attr{}
	_dacdee.Name = name
	switch _dbgfef {
	case ST_HorizontalAlignmentUnset:
		_dacdee.Value = ""
	case ST_HorizontalAlignmentGeneral:
		_dacdee.Value = "\u0067e\u006e\u0065\u0072\u0061\u006c"
	case ST_HorizontalAlignmentLeft:
		_dacdee.Value = "\u006c\u0065\u0066\u0074"
	case ST_HorizontalAlignmentCenter:
		_dacdee.Value = "\u0063\u0065\u006e\u0074\u0065\u0072"
	case ST_HorizontalAlignmentRight:
		_dacdee.Value = "\u0072\u0069\u0067h\u0074"
	case ST_HorizontalAlignmentFill:
		_dacdee.Value = "\u0066\u0069\u006c\u006c"
	case ST_HorizontalAlignmentJustify:
		_dacdee.Value = "\u006au\u0073\u0074\u0069\u0066\u0079"
	case ST_HorizontalAlignmentCenterContinuous:
		_dacdee.Value = "\u0063\u0065n\u0074\u0065\u0072C\u006f\u006e\u0074\u0069\u006e\u0075\u006f\u0075\u0073"
	case ST_HorizontalAlignmentDistributed:
		_dacdee.Value = "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064"
	}
	return _dacdee, nil
}
func (_caad *CT_CustomWorkbookView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", _caad.NameAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _caad.GuidAttr)})
	if _caad.AutoUpdateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0075\u0074\u006f\u0055\u0070\u0064\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.AutoUpdateAttr))})
	}
	if _caad.MergeIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006d\u0065\u0072\u0067\u0065\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_caad.MergeIntervalAttr)})
	}
	if _caad.ChangesSavedWinAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063h\u0061n\u0067\u0065\u0073\u0053\u0061\u0076\u0065\u0064\u0057\u0069\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ChangesSavedWinAttr))})
	}
	if _caad.OnlySyncAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006f\u006e\u006c\u0079\u0053\u0079\u006e\u0063"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.OnlySyncAttr))})
	}
	if _caad.PersonalViewAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0065\u0072s\u006f\u006e\u0061\u006c\u0056\u0069\u0065\u0077"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.PersonalViewAttr))})
	}
	if _caad.IncludePrintSettingsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "i\u006ec\u006c\u0075\u0064\u0065\u0050\u0072\u0069\u006et\u0053\u0065\u0074\u0074in\u0067\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.IncludePrintSettingsAttr))})
	}
	if _caad.IncludeHiddenRowColAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0069\u006e\u0063\u006cud\u0065\u0048\u0069\u0064\u0064\u0065\u006e\u0052\u006f\u0077\u0043\u006f\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.IncludeHiddenRowColAttr))})
	}
	if _caad.MaximizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u0069\u006d\u0069\u007a\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.MaximizedAttr))})
	}
	if _caad.MinimizedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u0069\u006d\u0069\u007a\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.MinimizedAttr))})
	}
	if _caad.ShowHorizontalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "s\u0068o\u0077\u0048\u006f\u0072\u0069\u007a\u006f\u006et\u0061\u006c\u0053\u0063ro\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ShowHorizontalScrollAttr))})
	}
	if _caad.ShowVerticalScrollAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006fw\u0056\u0065\u0072\u0074\u0069c\u0061\u006cS\u0063\u0072\u006f\u006c\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ShowVerticalScrollAttr))})
	}
	if _caad.ShowSheetTabsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0068\u0065\u0065\u0074\u0054\u0061\u0062\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ShowSheetTabsAttr))})
	}
	if _caad.XWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_caad.XWindowAttr)})
	}
	if _caad.YWindowAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0079W\u0069\u006e\u0064\u006f\u0077"}, Value: _a.Sprintf("\u0025\u0076", *_caad.YWindowAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "w\u0069\u006e\u0064\u006f\u0077\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", _caad.WindowWidthAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0077\u0069\u006ed\u006f\u0077\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", _caad.WindowHeightAttr)})
	if _caad.TabRatioAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074\u0061\u0062\u0052\u0061\u0074\u0069\u006f"}, Value: _a.Sprintf("\u0025\u0076", *_caad.TabRatioAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u0063\u0074\u0069\u0076\u0065\u0053\u0068\u0065\u0065\u0074\u0049\u0064"}, Value: _a.Sprintf("\u0025\u0076", _caad.ActiveSheetIdAttr)})
	if _caad.ShowFormulaBarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0046\u006f\u0072\u006d\u0075l\u0061\u0042\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ShowFormulaBarAttr))})
	}
	if _caad.ShowStatusbarAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u006f\u0077\u0053\u0074\u0061\u0074\u0075\u0073\u0062\u0061\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_caad.ShowStatusbarAttr))})
	}
	if _caad.ShowCommentsAttr != ST_CommentsUnset {
		_dcedc, _egac := _caad.ShowCommentsAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0068\u006fw\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073"})
		if _egac != nil {
			return _egac
		}
		start.Attr = append(start.Attr, _dcedc)
	}
	if _caad.ShowObjectsAttr != ST_ObjectsUnset {
		_cgcaa, _gaffd := _caad.ShowObjectsAttr.MarshalXMLAttr(_b.Name{Local: "s\u0068\u006f\u0077\u004f\u0062\u006a\u0065\u0063\u0074\u0073"})
		if _gaffd != nil {
			return _gaffd
		}
		start.Attr = append(start.Attr, _cgcaa)
	}
	e.EncodeToken(start)
	if _caad.ExtLst != nil {
		_dbfb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_caad.ExtLst, _dbfb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_PivotAreas and its children, prefixing error messages with path
func (_bdcaa *CT_PivotAreas) ValidateWithPath(path string) error {
	for _cgffg, _caaaff := range _bdcaa.PivotArea {
		if _fagaee := _caaaff.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0050\u0069\u0076o\u0074\u0041\u0072\u0065\u0061\u005b\u0025\u0064\u005d", path, _cgffg)); _fagaee != nil {
			return _fagaee
		}
	}
	return nil
}

type CT_CalcPr struct {

	// Calculation Id
	CalcIdAttr *uint32

	// Calculation Mode
	CalcModeAttr ST_CalcMode

	// Full Calculation On Load
	FullCalcOnLoadAttr *bool

	// Reference Mode
	RefModeAttr ST_RefMode

	// Calculation Iteration
	IterateAttr *bool

	// Iteration Count
	IterateCountAttr *uint32

	// Iterative Calculation Delta
	IterateDeltaAttr *float64

	// Full Precision Calculation
	FullPrecisionAttr *bool

	// Calc Completed
	CalcCompletedAttr *bool

	// Calculate On Save
	CalcOnSaveAttr *bool

	// Concurrent Calculations
	ConcurrentCalcAttr *bool

	// Concurrent Thread Manual Count
	ConcurrentManualCountAttr *uint32

	// Force Full Calculation
	ForceFullCalcAttr *bool
}

// Validate validates the CT_WebPublishObject and its children
func (_fgeacc *CT_WebPublishObject) Validate() error {
	return _fgeacc.ValidateWithPath("\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074")
}

// Validate validates the CT_Top10 and its children
func (_aabdbfd *CT_Top10) Validate() error {
	return _aabdbfd.ValidateWithPath("\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030")
}
func (_dfbgcg *CT_VolTopicRef) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _caaeg := range start.Attr {
		if _caaeg.Name.Local == "\u0072" {
			_fbfcg, _baebfe := _caaeg.Value, error(nil)
			if _baebfe != nil {
				return _baebfe
			}
			_dfbgcg.RAttr = _fbfcg
			continue
		}
		if _caaeg.Name.Local == "\u0073" {
			_baeag, _aeafe := _g.ParseUint(_caaeg.Value, 10, 32)
			if _aeafe != nil {
				return _aeafe
			}
			_dfbgcg.SAttr = uint32(_baeag)
			continue
		}
	}
	for {
		_acbcc, _aeaec := d.Token()
		if _aeaec != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fV\u006f\u006c\u0054\u006f\u0070\u0069\u0063\u0052\u0065\u0066:\u0020\u0025\u0073", _aeaec)
		}
		if _dagce, _fcceab := _acbcc.(_b.EndElement); _fcceab && _dagce.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_SheetCalcPr and its children
func (_acdgb *CT_SheetCalcPr) Validate() error {
	return _acdgb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072")
}
func NewCT_QueryTableRefresh() *CT_QueryTableRefresh {
	_ebddbg := &CT_QueryTableRefresh{}
	_ebddbg.QueryTableFields = NewCT_QueryTableFields()
	return _ebddbg
}

// ValidateWithPath validates the CT_I and its children, prefixing error messages with path
func (_cagee *CT_I) ValidateWithPath(path string) error {
	if _ggad := _cagee.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _ggad != nil {
		return _ggad
	}
	for _addg, _gbfcc := range _cagee.X {
		if _dceddc := _gbfcc.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _addg)); _dceddc != nil {
			return _dceddc
		}
	}
	return nil
}
func (_gfbfde *CT_Record) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_dagfb:
	for {
		_ddcdf, _daae := d.Token()
		if _daae != nil {
			return _daae
		}
		switch _agedgc := _ddcdf.(type) {
		case _b.StartElement:
			switch _agedgc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d"}:
				_egafc := NewCT_Missing()
				if _bgdac := d.DecodeElement(_egafc, &_agedgc); _bgdac != nil {
					return _bgdac
				}
				_gfbfde.M = append(_gfbfde.M, _egafc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e"}:
				_afgbe := NewCT_Number()
				if _afggd := d.DecodeElement(_afgbe, &_agedgc); _afggd != nil {
					return _afggd
				}
				_gfbfde.N = append(_gfbfde.N, _afgbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062"}:
				_bdcdcf := NewCT_Boolean()
				if _agfge := d.DecodeElement(_bdcdcf, &_agedgc); _agfge != nil {
					return _agfge
				}
				_gfbfde.B = append(_gfbfde.B, _bdcdcf)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065"}:
				_fdgeg := NewCT_Error()
				if _accefa := d.DecodeElement(_fdgeg, &_agedgc); _accefa != nil {
					return _accefa
				}
				_gfbfde.E = append(_gfbfde.E, _fdgeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073"}:
				_cbbcg := NewCT_String()
				if _dbgadc := d.DecodeElement(_cbbcg, &_agedgc); _dbgadc != nil {
					return _dbgadc
				}
				_gfbfde.S = append(_gfbfde.S, _cbbcg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064"}:
				_cfffc := NewCT_DateTime()
				if _ceccb := d.DecodeElement(_cfffc, &_agedgc); _ceccb != nil {
					return _ceccb
				}
				_gfbfde.D = append(_gfbfde.D, _cfffc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_dfabed := NewCT_Index()
				if _gccef := d.DecodeElement(_dfabed, &_agedgc); _gccef != nil {
					return _gccef
				}
				_gfbfde.X = append(_gfbfde.X, _dfabed)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0052\u0065\u0063o\u0072\u0064 \u0025\u0076", _agedgc.Name)
				if _cgbacd := d.Skip(); _cgbacd != nil {
					return _cgbacd
				}
			}
		case _b.EndElement:
			break _dagfb
		case _b.CharData:
		}
	}
	return nil
}
func (_gdfdb ST_VolDepType) String() string {
	switch _gdfdb {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u0061l\u0054\u0069\u006d\u0065\u0044\u0061\u0074\u0061"
	case 2:
		return "\u006f\u006c\u0061\u0070\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0073"
	}
	return ""
}
func (_adfgb ST_UnderlineValues) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_adfgb.String(), start)
}
func (_ggfdf ST_SourceType) Validate() error { return _ggfdf.ValidateWithPath("") }
func NewCT_ExternalReferences() *CT_ExternalReferences {
	_ecccf := &CT_ExternalReferences{}
	return _ecccf
}
func (_dgafc *CT_Row) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _ecfba := range start.Attr {
		if _ecfba.Name.Local == "\u006f\u0075\u0074l\u0069\u006e\u0065\u004c\u0065\u0076\u0065\u006c" {
			_faade, _bbdgg := _g.ParseUint(_ecfba.Value, 10, 8)
			if _bbdgg != nil {
				return _bbdgg
			}
			_ggdcdb := uint8(_faade)
			_dgafc.OutlineLevelAttr = &_ggdcdb
			continue
		}
		if _ecfba.Name.Local == "\u0072" {
			_fgdebe, _fgedeb := _g.ParseUint(_ecfba.Value, 10, 32)
			if _fgedeb != nil {
				return _fgedeb
			}
			_dfgae := uint32(_fgdebe)
			_dgafc.RAttr = &_dfgae
			continue
		}
		if _ecfba.Name.Local == "\u0073" {
			_dbbfee, _cbbeg := _g.ParseUint(_ecfba.Value, 10, 32)
			if _cbbeg != nil {
				return _cbbeg
			}
			_efafb := uint32(_dbbfee)
			_dgafc.SAttr = &_efafb
			continue
		}
		if _ecfba.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0046\u006f\u0072\u006d\u0061\u0074" {
			_ebeeb, _effae := _g.ParseBool(_ecfba.Value)
			if _effae != nil {
				return _effae
			}
			_dgafc.CustomFormatAttr = &_ebeeb
			continue
		}
		if _ecfba.Name.Local == "\u0068\u0074" {
			_egbadc, _acedg := _g.ParseFloat(_ecfba.Value, 64)
			if _acedg != nil {
				return _acedg
			}
			_dgafc.HtAttr = &_egbadc
			continue
		}
		if _ecfba.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_dedfcc, _eeabb := _g.ParseBool(_ecfba.Value)
			if _eeabb != nil {
				return _eeabb
			}
			_dgafc.HiddenAttr = &_dedfcc
			continue
		}
		if _ecfba.Name.Local == "\u0063\u0075\u0073t\u006f\u006d\u0048\u0065\u0069\u0067\u0068\u0074" {
			_babdcd, _ffced := _g.ParseBool(_ecfba.Value)
			if _ffced != nil {
				return _ffced
			}
			_dgafc.CustomHeightAttr = &_babdcd
			continue
		}
		if _ecfba.Name.Local == "\u0073\u0070\u0061n\u0073" {
			_eabeea, _ddcec := ParseSliceST_CellSpans(_ecfba.Value)
			if _ddcec != nil {
				return _ddcec
			}
			_dgafc.SpansAttr = &_eabeea
			continue
		}
		if _ecfba.Name.Local == "\u0063o\u006c\u006c\u0061\u0070\u0073\u0065d" {
			_faadac, _gcdfge := _g.ParseBool(_ecfba.Value)
			if _gcdfge != nil {
				return _gcdfge
			}
			_dgafc.CollapsedAttr = &_faadac
			continue
		}
		if _ecfba.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0054\u006f\u0070" {
			_gdebec, _aegge := _g.ParseBool(_ecfba.Value)
			if _aegge != nil {
				return _aegge
			}
			_dgafc.ThickTopAttr = &_gdebec
			continue
		}
		if _ecfba.Name.Local == "\u0074\u0068\u0069\u0063\u006b\u0042\u006f\u0074" {
			_fbbbea, _ddeaa := _g.ParseBool(_ecfba.Value)
			if _ddeaa != nil {
				return _ddeaa
			}
			_dgafc.ThickBotAttr = &_fbbbea
			continue
		}
		if _ecfba.Name.Local == "\u0070\u0068" {
			_bdbef, _dgdcda := _g.ParseBool(_ecfba.Value)
			if _dgdcda != nil {
				return _dgdcda
			}
			_dgafc.PhAttr = &_bdbef
			continue
		}
	}
_dgffc:
	for {
		_aadffa, _ccfdf := d.Token()
		if _ccfdf != nil {
			return _ccfdf
		}
		switch _cbgdaa := _aadffa.(type) {
		case _b.StartElement:
			switch _cbgdaa.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063"}:
				_feafb := NewCT_Cell()
				if _deefa := d.DecodeElement(_feafb, &_cbgdaa); _deefa != nil {
					return _deefa
				}
				_dgafc.C = append(_dgafc.C, _feafb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dgafc.ExtLst = NewCT_ExtensionList()
				if _gcbgb := d.DecodeElement(_dgafc.ExtLst, &_cbgdaa); _gcbgb != nil {
					return _gcbgb
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u006f\u0077\u0020\u0025\u0076", _cbgdaa.Name)
				if _dbbfd := d.Skip(); _dbbfd != nil {
					return _dbbfd
				}
			}
		case _b.EndElement:
			break _dgffc
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CellSmartTags and its children, prefixing error messages with path
func (_aecg *CT_CellSmartTags) ValidateWithPath(path string) error {
	for _aeba, _fdfb := range _aecg.CellSmartTag {
		if _gedb := _fdfb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043el\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u005b\u0025\u0064\u005d", path, _aeba)); _gedb != nil {
			return _gedb
		}
	}
	return nil
}

type CT_Query struct {

	// MDX Query String
	MdxAttr string

	// Tuples
	Tpls *CT_Tuples
}

func (_ggcf *CT_DbPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0076", _ggcf.ConnectionAttr)})
	if _ggcf.CommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063o\u006d\u006d\u0061\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ggcf.CommandAttr)})
	}
	if _ggcf.ServerCommandAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0076\u0065\u0072\u0043\u006f\u006d\u006d\u0061\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_ggcf.ServerCommandAttr)})
	}
	if _ggcf.CommandTypeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "c\u006f\u006d\u006d\u0061\u006e\u0064\u0054\u0079\u0070\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_ggcf.CommandTypeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Format and its children, prefixing error messages with path
func (_cbecab *CT_Format) ValidateWithPath(path string) error {
	if _fggd := _cbecab.ActionAttr.ValidateWithPath(path + "/\u0041\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _fggd != nil {
		return _fggd
	}
	if _eeecg := _cbecab.PivotArea.ValidateWithPath(path + "\u002f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"); _eeecg != nil {
		return _eeecg
	}
	if _cbecab.ExtLst != nil {
		if _eacde := _cbecab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eacde != nil {
			return _eacde
		}
	}
	return nil
}

const (
	ST_HtmlFmtUnset ST_HtmlFmt = 0
	ST_HtmlFmtNone  ST_HtmlFmt = 1
	ST_HtmlFmtRtf   ST_HtmlFmt = 2
	ST_HtmlFmtAll   ST_HtmlFmt = 3
)

func NewCT_Controls() *CT_Controls { _gcece := &CT_Controls{}; return _gcece }

// ValidateWithPath validates the Dialogsheet and its children, prefixing error messages with path
func (_cgeae *Dialogsheet) ValidateWithPath(path string) error {
	if _gefagb := _cgeae.CT_Dialogsheet.ValidateWithPath(path); _gefagb != nil {
		return _gefagb
	}
	return nil
}

type CT_CustomSheetView struct {

	// GUID
	GuidAttr string

	// Print Scale
	ScaleAttr *uint32

	// Color Id
	ColorIdAttr *uint32

	// Show Page Breaks
	ShowPageBreaksAttr *bool

	// Show Formulas
	ShowFormulasAttr *bool

	// Show Grid Lines
	ShowGridLinesAttr *bool

	// Show Headers
	ShowRowColAttr *bool

	// Show Outline Symbols
	OutlineSymbolsAttr *bool

	// Show Zero Values
	ZeroValuesAttr *bool

	// Fit To Page
	FitToPageAttr *bool

	// Print Area Defined
	PrintAreaAttr *bool

	// Filtered List
	FilterAttr *bool

	// Show AutoFitler Drop Down Controls
	ShowAutoFilterAttr *bool

	// Hidden Rows
	HiddenRowsAttr *bool

	// Hidden Columns
	HiddenColumnsAttr *bool

	// Visible State
	StateAttr ST_SheetState

	// Filter
	FilterUniqueAttr *bool

	// View Type
	ViewAttr ST_SheetViewType

	// Show Ruler
	ShowRulerAttr *bool

	// Top Left Visible Cell
	TopLeftCellAttr *string

	// Pane Split Information
	Pane *CT_Pane

	// Selection
	Selection *CT_Selection

	// Horizontal Page Breaks
	RowBreaks *CT_PageBreak

	// Vertical Page Breaks
	ColBreaks *CT_PageBreak

	// Page Margins
	PageMargins *CT_PageMargins

	// Print Options
	PrintOptions *CT_PrintOptions

	// Page Setup Settings
	PageSetup *CT_PageSetup

	// Header Footer Settings
	HeaderFooter *CT_HeaderFooter

	// AutoFilter Settings
	AutoFilter *CT_AutoFilter
	ExtLst     *CT_ExtensionList
}

func (_gfbgb *CT_Filters) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gadda := range start.Attr {
		if _gadda.Name.Local == "\u0062\u006c\u0061n\u006b" {
			_efdga, _abbgd := _g.ParseBool(_gadda.Value)
			if _abbgd != nil {
				return _abbgd
			}
			_gfbgb.BlankAttr = &_efdga
			continue
		}
		if _gadda.Name.Local == "\u0063\u0061\u006ce\u006e\u0064\u0061\u0072\u0054\u0079\u0070\u0065" {
			_gfbgb.CalendarTypeAttr.UnmarshalXMLAttr(_gadda)
			continue
		}
	}
_gdgec:
	for {
		_dfdfc, _edege := d.Token()
		if _edege != nil {
			return _edege
		}
		switch _geegc := _dfdfc.(type) {
		case _b.StartElement:
			switch _geegc.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u0074\u0065\u0072"}:
				_dffag := NewCT_Filter()
				if _aeacb := d.DecodeElement(_dffag, &_geegc); _aeacb != nil {
					return _aeacb
				}
				_gfbgb.Filter = append(_gfbgb.Filter, _dffag)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0061\u0074\u0065\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d"}:
				_fdffc := NewCT_DateGroupItem()
				if _feea := d.DecodeElement(_fdffc, &_geegc); _feea != nil {
					return _feea
				}
				_gfbgb.DateGroupItem = append(_gfbgb.DateGroupItem, _fdffc)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fF\u0069\u006c\u0074\u0065\u0072\u0073\u0020\u0025\u0076", _geegc.Name)
				if _baee := d.Skip(); _baee != nil {
					return _baee
				}
			}
		case _b.EndElement:
			break _gdgec
		case _b.CharData:
		}
	}
	return nil
}
func NewCT_OleItem() *CT_OleItem { _efabd := &CT_OleItem{}; return _efabd }
func (_ddcdcc ST_DvAspect) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	return e.EncodeElement(_ddcdcc.String(), start)
}
func NewCT_VolTopicRef() *CT_VolTopicRef                  { _adafe := &CT_VolTopicRef{}; return _adafe }
func (_efbaag ST_ExternalConnectionType) Validate() error { return _efbaag.ValidateWithPath("") }
func (_baeec *CT_PivotFields) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _baeec.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_baeec.CountAttr)})
	}
	e.EncodeToken(start)
	_dgabd := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064"}}
	for _, _fbdg := range _baeec.PivotField {
		e.EncodeElement(_fbdg, _dgabd)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Sheets and its children, prefixing error messages with path
func (_gaafdb *CT_Sheets) ValidateWithPath(path string) error {
	for _dcgbe, _beddag := range _gaafdb.Sheet {
		if _dddcdd := _beddag.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002fS\u0068\u0065\u0065\u0074\u005b\u0025\u0064\u005d", path, _dcgbe)); _dddcdd != nil {
			return _dddcdd
		}
	}
	return nil
}
func (_eaaed ST_Scope) ValidateWithPath(path string) error {
	switch _eaaed {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eaaed))
	}
	return nil
}
func NewCT_HeaderFooter() *CT_HeaderFooter { _fgafe := &CT_HeaderFooter{}; return _fgafe }

// ValidateWithPath validates the CT_WebPublishItems and its children, prefixing error messages with path
func (_cffbb *CT_WebPublishItems) ValidateWithPath(path string) error {
	for _cbcad, _gbaae := range _cffbb.WebPublishItem {
		if _efdda := _gbaae.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0057\u0065bP\u0075b\u006c\u0069\u0073\u0068\u0049t\u0065\u006d\u005b\u0025\u0064\u005d", path, _cbcad)); _efdda != nil {
			return _efdda
		}
	}
	return nil
}
func (_gad *CT_CalculatedItem) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gad.FieldAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u0065l\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_gad.FieldAttr)})
	}
	if _gad.FormulaAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066o\u0072\u006d\u0075\u006c\u0061"}, Value: _a.Sprintf("\u0025\u0076", *_gad.FormulaAttr)})
	}
	e.EncodeToken(start)
	_caff := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_gad.PivotArea, _caff)
	if _gad.ExtLst != nil {
		_gccb := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_gad.ExtLst, _gccb)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SheetFormatPr and its children
func (_gdbbc *CT_SheetFormatPr) Validate() error {
	return _gdbbc.ValidateWithPath("\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072")
}
func (_gbdgeb *CT_Revisions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
_afge:
	for {
		_fccbe, _fgcdf := d.Token()
		if _fgcdf != nil {
			return _fgcdf
		}
		switch _cgade := _fccbe.(type) {
		case _b.StartElement:
			switch _cgade.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0072\u0063"}:
				_ddeba := NewCT_RevisionRowColumn()
				if _beagg := d.DecodeElement(_ddeba, &_cgade); _beagg != nil {
					return _beagg
				}
				_gbdgeb.Rrc = append(_gbdgeb.Rrc, _ddeba)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006d"}:
				_eddfc := NewCT_RevisionMove()
				if _fbgfe := d.DecodeElement(_eddfc, &_cgade); _fbgfe != nil {
					return _fbgfe
				}
				_gbdgeb.Rm = append(_gbdgeb.Rm, _eddfc)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0076"}:
				_abagd := NewCT_RevisionCustomView()
				if _bafac := d.DecodeElement(_abagd, &_cgade); _bafac != nil {
					return _bafac
				}
				_gbdgeb.Rcv = append(_gbdgeb.Rcv, _abagd)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0073\u006e\u006d"}:
				_daeaa := NewCT_RevisionSheetRename()
				if _ceabbg := d.DecodeElement(_daeaa, &_cgade); _ceabbg != nil {
					return _ceabbg
				}
				_gbdgeb.Rsnm = append(_gbdgeb.Rsnm, _daeaa)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0073"}:
				_geacg := NewCT_RevisionInsertSheet()
				if _cacfe := d.DecodeElement(_geacg, &_cgade); _cacfe != nil {
					return _cacfe
				}
				_gbdgeb.Ris = append(_gbdgeb.Ris, _geacg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_accfg := NewCT_RevisionCellChange()
				if _eedcd := d.DecodeElement(_accfg, &_cgade); _eedcd != nil {
					return _eedcd
				}
				_gbdgeb.Rcc = append(_gbdgeb.Rcc, _accfg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_bddfee := NewCT_RevisionFormatting()
				if _gfbde := d.DecodeElement(_bddfee, &_cgade); _gfbde != nil {
					return _gfbde
				}
				_gbdgeb.Rfmt = append(_gbdgeb.Rfmt, _bddfee)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0061\u0066"}:
				_deabfe := NewCT_RevisionAutoFormatting()
				if _ddbce := d.DecodeElement(_deabfe, &_cgade); _ddbce != nil {
					return _ddbce
				}
				_gbdgeb.Raf = append(_gbdgeb.Raf, _deabfe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0064\u006e"}:
				_cdaff := NewCT_RevisionDefinedName()
				if _baaeda := d.DecodeElement(_cdaff, &_cgade); _baaeda != nil {
					return _baaeda
				}
				_gbdgeb.Rdn = append(_gbdgeb.Rdn, _cdaff)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u006d\u0074"}:
				_eacceb := NewCT_RevisionComment()
				if _degb := d.DecodeElement(_eacceb, &_cgade); _degb != nil {
					return _degb
				}
				_gbdgeb.Rcmt = append(_gbdgeb.Rcmt, _eacceb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0071\u0074"}:
				_dgdeg := NewCT_RevisionQueryTableField()
				if _bgafgb := d.DecodeElement(_dgdeg, &_cgade); _bgafgb != nil {
					return _bgafgb
				}
				_gbdgeb.Rqt = append(_gbdgeb.Rqt, _dgdeg)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0066\u0074"}:
				_geabad := NewCT_RevisionConflict()
				if _eecdgf := d.DecodeElement(_geabad, &_cgade); _eecdgf != nil {
					return _eecdgf
				}
				_gbdgeb.Rcft = append(_gbdgeb.Rcft, _geabad)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_R\u0065\u0076i\u0073\u0069\u006f\u006e\u0073\u0020\u0025\u0076", _cgade.Name)
				if _bffgda := d.Skip(); _bffgda != nil {
					return _bffgda
				}
			}
		case _b.EndElement:
			break _afge
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableColumns and its children, prefixing error messages with path
func (_gegga *CT_TableColumns) ValidateWithPath(path string) error {
	for _ccffd, _adege := range _gegga.TableColumn {
		if _cbbbee := _adege.ValidateWithPath(_a.Sprintf("\u0025s\u002fT\u0061\u0062\u006c\u0065\u0043o\u006c\u0075m\u006e\u005b\u0025\u0064\u005d", path, _ccffd)); _cbbbee != nil {
			return _cbbbee
		}
	}
	return nil
}

// ValidateWithPath validates the CT_WorkbookProtection and its children, prefixing error messages with path
func (_dbeba *CT_WorkbookProtection) ValidateWithPath(path string) error { return nil }

type CT_Border struct {

	// Diagonal Up
	DiagonalUpAttr *bool

	// Diagonal Down
	DiagonalDownAttr *bool

	// Outline
	OutlineAttr *bool

	// Leading Edge Border
	Start *CT_BorderPr

	// Trailing Edge Border
	End *CT_BorderPr

	// Leading Edge Border
	Left *CT_BorderPr

	// Trailing Edge Border
	Right *CT_BorderPr

	// Top Border
	Top *CT_BorderPr

	// Bottom Border
	Bottom *CT_BorderPr

	// Diagonal
	Diagonal *CT_BorderPr

	// Vertical Inner Border
	Vertical *CT_BorderPr

	// Horizontal Inner Borders
	Horizontal *CT_BorderPr
}

func (_agfgc ST_DvAspect) Validate() error { return _agfgc.ValidateWithPath("") }
func (_ebfde *ST_SortType) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_cagcbe, _aaffa := d.Token()
	if _aaffa != nil {
		return _aaffa
	}
	if _fedfag, _gbgbg := _cagcbe.(_b.EndElement); _gbgbg && _fedfag.Name == start.Name {
		*_ebfde = 1
		return nil
	}
	if _gfgfg, _dfcbf := _cagcbe.(_b.CharData); !_dfcbf {
		return _a.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cagcbe)
	} else {
		switch string(_gfgfg) {
		case "":
			*_ebfde = 0
		case "\u006e\u006f\u006e\u0065":
			*_ebfde = 1
		case "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg":
			*_ebfde = 2
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067":
			*_ebfde = 3
		case "\u0061\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067A\u006c\u0070\u0068\u0061":
			*_ebfde = 4
		case "\u0064e\u0073c\u0065\u006e\u0064\u0069\u006e\u0067\u0041\u006c\u0070\u0068\u0061":
			*_ebfde = 5
		case "\u0061\u0073c\u0065\u006e\u0064i\u006e\u0067\u004e\u0061\u0074\u0075\u0072\u0061\u006c":
			*_ebfde = 6
		case "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067\u004e\u0061t\u0075\u0072\u0061\u006c":
			*_ebfde = 7
		}
	}
	_cagcbe, _aaffa = d.Token()
	if _aaffa != nil {
		return _aaffa
	}
	if _gcfgec, _dabagb := _cagcbe.(_b.EndElement); _dabagb && _gcfgec.Name == start.Name {
		return nil
	}
	return _a.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cagcbe)
}

// ValidateWithPath validates the CT_DateTime and its children, prefixing error messages with path
func (_gdcab *CT_DateTime) ValidateWithPath(path string) error {
	for _ebdf, _egfgcg := range _gdcab.X {
		if _daga := _egfgcg.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0058\u005b\u0025\u0064\u005d", path, _ebdf)); _daga != nil {
			return _daga
		}
	}
	return nil
}
func (_eabae *CT_FontFamily) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", _eabae.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

const (
	ST_SheetStateUnset      ST_SheetState = 0
	ST_SheetStateVisible    ST_SheetState = 1
	ST_SheetStateHidden     ST_SheetState = 2
	ST_SheetStateVeryHidden ST_SheetState = 3
)

func (_faeff *CT_PCDSCPage) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fbgbad := range start.Attr {
		if _fbgbad.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_aeffg, _ggfcc := _g.ParseUint(_fbgbad.Value, 10, 32)
			if _ggfcc != nil {
				return _ggfcc
			}
			_ddcbc := uint32(_aeffg)
			_faeff.CountAttr = &_ddcbc
			continue
		}
	}
_ggacg:
	for {
		_bacf, _ebgaf := d.Token()
		if _ebgaf != nil {
			return _ebgaf
		}
		switch _ffggaf := _bacf.(type) {
		case _b.StartElement:
			switch _ffggaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0067\u0065\u0049\u0074\u0065\u006d"}:
				_dacad := NewCT_PageItem()
				if _acabc := d.DecodeElement(_dacad, &_ffggaf); _acabc != nil {
					return _acabc
				}
				_faeff.PageItem = append(_faeff.PageItem, _dacad)
			default:
				_f.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_P\u0043\u0044S\u0043\u0050\u0061\u0067\u0065\u0020\u0025\u0076", _ffggaf.Name)
				if _bbafc := d.Skip(); _bbafc != nil {
					return _bbafc
				}
			}
		case _b.EndElement:
			break _ggacg
		case _b.CharData:
		}
	}
	return nil
}
func (_acfb *CT_CsPageSetup) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _acfb.PaperSizeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.PaperSizeAttr)})
	}
	if _acfb.PaperHeightAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.PaperHeightAttr)})
	}
	if _acfb.PaperWidthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.PaperWidthAttr)})
	}
	if _acfb.FirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.FirstPageNumberAttr)})
	}
	if _acfb.OrientationAttr != ST_OrientationUnset {
		_efec, _aaggc := _acfb.OrientationAttr.MarshalXMLAttr(_b.Name{Local: "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e"})
		if _aaggc != nil {
			return _aaggc
		}
		start.Attr = append(start.Attr, _efec)
	}
	if _acfb.UsePrinterDefaultsAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acfb.UsePrinterDefaultsAttr))})
	}
	if _acfb.BlackAndWhiteAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acfb.BlackAndWhiteAttr))})
	}
	if _acfb.DraftAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0072\u0061f\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acfb.DraftAttr))})
	}
	if _acfb.UseFirstPageNumberAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_acfb.UseFirstPageNumberAttr))})
	}
	if _acfb.HorizontalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.HorizontalDpiAttr)})
	}
	if _acfb.VerticalDpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.VerticalDpiAttr)})
	}
	if _acfb.CopiesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0070\u0069\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.CopiesAttr)})
	}
	if _acfb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_acfb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acgac *CT_IconSet) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _aada := range start.Attr {
		if _aada.Name.Local == "\u0069c\u006f\u006e\u0053\u0065\u0074" {
			_acgac.IconSetAttr.UnmarshalXMLAttr(_aada)
			continue
		}
		if _aada.Name.Local == "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e" {
			_fegfbe, _caefg := _g.ParseBool(_aada.Value)
			if _caefg != nil {
				return _caefg
			}
			_acgac.ShowValueAttr = &_fegfbe
			continue
		}
		if _aada.Name.Local == "\u0070e\u0072\u0063\u0065\u006e\u0074" {
			_ffdbe, _bcabe := _g.ParseBool(_aada.Value)
			if _bcabe != nil {
				return _bcabe
			}
			_acgac.PercentAttr = &_ffdbe
			continue
		}
		if _aada.Name.Local == "\u0072e\u0076\u0065\u0072\u0073\u0065" {
			_fbff, _bfgba := _g.ParseBool(_aada.Value)
			if _bfgba != nil {
				return _bfgba
			}
			_acgac.ReverseAttr = &_fbff
			continue
		}
	}
_cadga:
	for {
		_cdfdb, _agedb := d.Token()
		if _agedb != nil {
			return _agedb
		}
		switch _gcfge := _cdfdb.(type) {
		case _b.StartElement:
			switch _gcfge.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0066\u0076\u006f"}:
				_ecba := NewCT_Cfvo()
				if _bgafe := d.DecodeElement(_ecba, &_gcfge); _bgafe != nil {
					return _bgafe
				}
				_acgac.Cfvo = append(_acgac.Cfvo, _ecba)
			default:
				_f.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fI\u0063\u006f\u006e\u0053\u0065\u0074\u0020\u0025\u0076", _gcfge.Name)
				if _ggbac := d.Skip(); _ggbac != nil {
					return _ggbac
				}
			}
		case _b.EndElement:
			break _cadga
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the Comments and its children
func (_decbg *Comments) Validate() error {
	return _decbg.ValidateWithPath("\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073")
}
func (_ccgbb ST_rwColActionType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_edbca := _b.Attr{}
	_edbca.Name = name
	switch _ccgbb {
	case ST_rwColActionTypeUnset:
		_edbca.Value = ""
	case ST_rwColActionTypeInsertRow:
		_edbca.Value = "\u0069n\u0073\u0065\u0072\u0074\u0052\u006fw"
	case ST_rwColActionTypeDeleteRow:
		_edbca.Value = "\u0064e\u006c\u0065\u0074\u0065\u0052\u006fw"
	case ST_rwColActionTypeInsertCol:
		_edbca.Value = "\u0069n\u0073\u0065\u0072\u0074\u0043\u006fl"
	case ST_rwColActionTypeDeleteCol:
		_edbca.Value = "\u0064e\u006c\u0065\u0074\u0065\u0043\u006fl"
	}
	return _edbca, nil
}

// ValidateWithPath validates the CT_Hyperlinks and its children, prefixing error messages with path
func (_adde *CT_Hyperlinks) ValidateWithPath(path string) error {
	for _gbbcf, _gfggb := range _adde.Hyperlink {
		if _eeaeg := _gfggb.ValidateWithPath(_a.Sprintf("\u0025\u0073/\u0048\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u005b\u0025\u0064\u005d", path, _gbbcf)); _eeaeg != nil {
			return _eeaeg
		}
	}
	return nil
}

const (
	ST_VolDepTypeUnset         ST_VolDepType = 0
	ST_VolDepTypeRealTimeData  ST_VolDepType = 1
	ST_VolDepTypeOlapFunctions ST_VolDepType = 2
)

// Validate validates the CT_DdeItems and its children
func (_ebafg *CT_DdeItems) Validate() error {
	return _ebafg.ValidateWithPath("C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073")
}
func NewCT_WorkbookProtection() *CT_WorkbookProtection {
	_afacfed := &CT_WorkbookProtection{}
	return _afacfed
}
func (_cbdca *CT_PivotAreaReference) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gdaaa := range start.Attr {
		if _gdaaa.Name.Local == "m\u0061\u0078\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_geebd, _bcafb := _g.ParseBool(_gdaaa.Value)
			if _bcafb != nil {
				return _bcafb
			}
			_cbdca.MaxSubtotalAttr = &_geebd
			continue
		}
		if _gdaaa.Name.Local == "m\u0069\u006e\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bdddab, _geaba := _g.ParseBool(_gdaaa.Value)
			if _geaba != nil {
				return _geaba
			}
			_cbdca.MinSubtotalAttr = &_bdddab
			continue
		}
		if _gdaaa.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cdabf, _fffda := _g.ParseUint(_gdaaa.Value, 10, 32)
			if _fffda != nil {
				return _fffda
			}
			_eadfd := uint32(_cdabf)
			_cbdca.CountAttr = &_eadfd
			continue
		}
		if _gdaaa.Name.Local == "\u0070r\u006fd\u0075\u0063\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gacbg, _bdfcd := _g.ParseBool(_gdaaa.Value)
			if _bdfcd != nil {
				return _bdfcd
			}
			_cbdca.ProductSubtotalAttr = &_gacbg
			continue
		}
		if _gdaaa.Name.Local == "\u0062\u0079\u0050\u006f\u0073\u0069\u0074\u0069\u006f\u006e" {
			_ccgbe, _fbccda := _g.ParseBool(_gdaaa.Value)
			if _fbccda != nil {
				return _fbccda
			}
			_cbdca.ByPositionAttr = &_ccgbe
			continue
		}
		if _gdaaa.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dccae, _eeef := _g.ParseBool(_gdaaa.Value)
			if _eeef != nil {
				return _eeef
			}
			_cbdca.CountSubtotalAttr = &_dccae
			continue
		}
		if _gdaaa.Name.Local == "\u0064e\u0066a\u0075\u006c\u0074\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_dgbed, _bfagd := _g.ParseBool(_gdaaa.Value)
			if _bfagd != nil {
				return _bfagd
			}
			_cbdca.DefaultSubtotalAttr = &_dgbed
			continue
		}
		if _gdaaa.Name.Local == "\u0063\u006f\u0075\u006e\u0074\u0041\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_bccbe, _dbegg := _g.ParseBool(_gdaaa.Value)
			if _dbegg != nil {
				return _dbegg
			}
			_cbdca.CountASubtotalAttr = &_bccbe
			continue
		}
		if _gdaaa.Name.Local == "a\u0076\u0067\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_abgba, _dfag := _g.ParseBool(_gdaaa.Value)
			if _dfag != nil {
				return _dfag
			}
			_cbdca.AvgSubtotalAttr = &_abgba
			continue
		}
		if _gdaaa.Name.Local == "\u0066\u0069\u0065l\u0064" {
			_caebe, _fdbdae := _g.ParseUint(_gdaaa.Value, 10, 32)
			if _fdbdae != nil {
				return _fdbdae
			}
			_dadbf := uint32(_caebe)
			_cbdca.FieldAttr = &_dadbf
			continue
		}
		if _gdaaa.Name.Local == "\u0073\u0065\u006c\u0065\u0063\u0074\u0065\u0064" {
			_fdgbe, _efgea := _g.ParseBool(_gdaaa.Value)
			if _efgea != nil {
				return _efgea
			}
			_cbdca.SelectedAttr = &_fdgbe
			continue
		}
		if _gdaaa.Name.Local == "\u0072\u0065\u006c\u0061\u0074\u0069\u0076\u0065" {
			_caggg, _bafcba := _g.ParseBool(_gdaaa.Value)
			if _bafcba != nil {
				return _bafcba
			}
			_cbdca.RelativeAttr = &_caggg
			continue
		}
		if _gdaaa.Name.Local == "s\u0075\u006d\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_fgegd, _dedgf := _g.ParseBool(_gdaaa.Value)
			if _dedgf != nil {
				return _dedgf
			}
			_cbdca.SumSubtotalAttr = &_fgegd
			continue
		}
		if _gdaaa.Name.Local == "\u0073\u0074\u0064\u0044\u0065\u0076\u0053\u0075\u0062t\u006f\u0074\u0061\u006c" {
			_dabga, _ccfabd := _g.ParseBool(_gdaaa.Value)
			if _ccfabd != nil {
				return _ccfabd
			}
			_cbdca.StdDevSubtotalAttr = &_dabga
			continue
		}
		if _gdaaa.Name.Local == "\u0073t\u0064D\u0065\u0076\u0050\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_bfacb, _efcg := _g.ParseBool(_gdaaa.Value)
			if _efcg != nil {
				return _efcg
			}
			_cbdca.StdDevPSubtotalAttr = &_bfacb
			continue
		}
		if _gdaaa.Name.Local == "v\u0061\u0072\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_gaaef, _edgaa := _g.ParseBool(_gdaaa.Value)
			if _edgaa != nil {
				return _edgaa
			}
			_cbdca.VarSubtotalAttr = &_gaaef
			continue
		}
		if _gdaaa.Name.Local == "\u0076\u0061\u0072P\u0053\u0075\u0062\u0074\u006f\u0074\u0061\u006c" {
			_cdaef, _dbbee := _g.ParseBool(_gdaaa.Value)
			if _dbbee != nil {
				return _dbbee
			}
			_cbdca.VarPSubtotalAttr = &_cdaef
			continue
		}
	}
_ggaga:
	for {
		_cceaf, _addcd := d.Token()
		if _addcd != nil {
			return _addcd
		}
		switch _bgcaf := _cceaf.(type) {
		case _b.StartElement:
			switch _bgcaf.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078"}:
				_aeebb := NewCT_Index()
				if _begfd := d.DecodeElement(_aeebb, &_bgcaf); _begfd != nil {
					return _begfd
				}
				_cbdca.X = append(_cbdca.X, _aeebb)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbdca.ExtLst = NewCT_ExtensionList()
				if _dcbc := d.DecodeElement(_cbdca.ExtLst, &_bgcaf); _dcbc != nil {
					return _dcbc
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025\u0076", _bgcaf.Name)
				if _aageg := d.Skip(); _aageg != nil {
					return _aageg
				}
			}
		case _b.EndElement:
			break _ggaga
		case _b.CharData:
		}
	}
	return nil
}
func (_gegfg ST_ShowDataAs) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_adeaac := _b.Attr{}
	_adeaac.Name = name
	switch _gegfg {
	case ST_ShowDataAsUnset:
		_adeaac.Value = ""
	case ST_ShowDataAsNormal:
		_adeaac.Value = "\u006e\u006f\u0072\u006d\u0061\u006c"
	case ST_ShowDataAsDifference:
		_adeaac.Value = "\u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065"
	case ST_ShowDataAsPercent:
		_adeaac.Value = "\u0070e\u0072\u0063\u0065\u006e\u0074"
	case ST_ShowDataAsPercentDiff:
		_adeaac.Value = "p\u0065\u0072\u0063\u0065\u006e\u0074\u0044\u0069\u0066\u0066"
	case ST_ShowDataAsRunTotal:
		_adeaac.Value = "\u0072\u0075\u006e\u0054\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsPercentOfRow:
		_adeaac.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0052\u006f\u0077"
	case ST_ShowDataAsPercentOfCol:
		_adeaac.Value = "\u0070\u0065\u0072c\u0065\u006e\u0074\u004f\u0066\u0043\u006f\u006c"
	case ST_ShowDataAsPercentOfTotal:
		_adeaac.Value = "\u0070\u0065\u0072\u0063\u0065\u006e\u0074\u004f\u0066T\u006f\u0074\u0061\u006c"
	case ST_ShowDataAsIndex:
		_adeaac.Value = "\u0069\u006e\u0064e\u0078"
	}
	return _adeaac, nil
}
func NewCT_DefinedName() *CT_DefinedName { _ecdacf := &CT_DefinedName{}; return _ecdacf }

// ValidateWithPath validates the CT_CustomWorkbookViews and its children, prefixing error messages with path
func (_bcgfa *CT_CustomWorkbookViews) ValidateWithPath(path string) error {
	for _egaa, _acce := range _bcgfa.CustomWorkbookView {
		if _fgfg := _acce.ValidateWithPath(_a.Sprintf("\u0025s\u002f\u0043\u0075\u0073t\u006f\u006d\u0057\u006f\u0072k\u0062o\u006fk\u0056\u0069\u0065\u0077\u005b\u0025\u0064]", path, _egaa)); _fgfg != nil {
			return _fgfg
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_gdefg *CT_TextField) Validate() error {
	return _gdefg.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}
func NewCT_CommentList() *CT_CommentList { _gbaab := &CT_CommentList{}; return _gbaab }

// Validate validates the CT_WorksheetSource and its children
func (_abcfcb *CT_WorksheetSource) Validate() error {
	return _abcfcb.ValidateWithPath("\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065")
}

// ValidateWithPath validates the QueryTable and its children, prefixing error messages with path
func (_deabaf *QueryTable) ValidateWithPath(path string) error {
	if _fgbcc := _deabaf.CT_QueryTable.ValidateWithPath(path); _fgbcc != nil {
		return _fgbcc
	}
	return nil
}

// ValidateWithPath validates the CT_TableStyles and its children, prefixing error messages with path
func (_edbbdf *CT_TableStyles) ValidateWithPath(path string) error {
	for _dagea, _cdcac := range _edbbdf.TableStyle {
		if _fegebd := _cdcac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u005b\u0025\u0064\u005d", path, _dagea)); _fegebd != nil {
			return _fegebd
		}
	}
	return nil
}
func (_dcbgb *CT_DataRef) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _dcbgb.RefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_dcbgb.RefAttr)})
	}
	if _dcbgb.NameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_dcbgb.NameAttr)})
	}
	if _dcbgb.SheetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0068\u0065e\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_dcbgb.SheetAttr)})
	}
	if _dcbgb.IdAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", *_dcbgb.IdAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ChartFormat() *CT_ChartFormat {
	_cdbf := &CT_ChartFormat{}
	_cdbf.PivotArea = NewCT_PivotArea()
	return _cdbf
}

// Validate validates the CT_DeletedField and its children
func (_dcfda *CT_DeletedField) Validate() error {
	return _dcfda.ValidateWithPath("\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064")
}
func (_dfgc *CT_DateGroupItem) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_dfgc.DateTimeGroupingAttr = ST_DateTimeGrouping(1)
	for _, _eefb := range start.Attr {
		if _eefb.Name.Local == "\u0079\u0065\u0061\u0072" {
			_eggdf, _aebbf := _g.ParseUint(_eefb.Value, 10, 16)
			if _aebbf != nil {
				return _aebbf
			}
			_dfgc.YearAttr = uint16(_eggdf)
			continue
		}
		if _eefb.Name.Local == "\u006d\u006f\u006et\u0068" {
			_gece, _bgec := _g.ParseUint(_eefb.Value, 10, 16)
			if _bgec != nil {
				return _bgec
			}
			_dagc := uint16(_gece)
			_dfgc.MonthAttr = &_dagc
			continue
		}
		if _eefb.Name.Local == "\u0064\u0061\u0079" {
			_deggc, _cdbg := _g.ParseUint(_eefb.Value, 10, 16)
			if _cdbg != nil {
				return _cdbg
			}
			_dabgc := uint16(_deggc)
			_dfgc.DayAttr = &_dabgc
			continue
		}
		if _eefb.Name.Local == "\u0068\u006f\u0075\u0072" {
			_bccf, _beefc := _g.ParseUint(_eefb.Value, 10, 16)
			if _beefc != nil {
				return _beefc
			}
			_fbccd := uint16(_bccf)
			_dfgc.HourAttr = &_fbccd
			continue
		}
		if _eefb.Name.Local == "\u006d\u0069\u006e\u0075\u0074\u0065" {
			_dcdd, _cfbca := _g.ParseUint(_eefb.Value, 10, 16)
			if _cfbca != nil {
				return _cfbca
			}
			_agcd := uint16(_dcdd)
			_dfgc.MinuteAttr = &_agcd
			continue
		}
		if _eefb.Name.Local == "\u0073\u0065\u0063\u006f\u006e\u0064" {
			_ebcgg, _bfgag := _g.ParseUint(_eefb.Value, 10, 16)
			if _bfgag != nil {
				return _bfgag
			}
			_ffad := uint16(_ebcgg)
			_dfgc.SecondAttr = &_ffad
			continue
		}
		if _eefb.Name.Local == "\u0064\u0061t\u0065\u0054\u0069m\u0065\u0047\u0072\u006f\u0075\u0070\u0069\u006e\u0067" {
			_dfgc.DateTimeGroupingAttr.UnmarshalXMLAttr(_eefb)
			continue
		}
	}
	for {
		_aabed, _bfcfd := d.Token()
		if _bfcfd != nil {
			return _a.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0074\u0065G\u0072o\u0075\u0070\u0049\u0074\u0065\u006d\u003a \u0025\u0073", _bfcfd)
		}
		if _gfdf, _ddfd := _aabed.(_b.EndElement); _ddfd && _gfdf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_QueryTableFields and its children
func (_feggc *CT_QueryTableFields) Validate() error {
	return _feggc.ValidateWithPath("\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073")
}
func (_aadbd *CT_Formats) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _aadbd.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_aadbd.CountAttr)})
	}
	e.EncodeToken(start)
	_cabbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0066\u006f\u0072\u006d\u0061t"}}
	for _, _bgacf := range _aadbd.Format {
		e.EncodeElement(_bgacf, _cabbg)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_Selection struct {

	// Pane
	PaneAttr ST_Pane

	// Active Cell Location
	ActiveCellAttr *string

	// Active Cell Index
	ActiveCellIdAttr *uint32

	// Sequence of References
	SqrefAttr *ST_Sqref
}

// Validate validates the CT_Parameters and its children
func (_gafc *CT_Parameters) Validate() error {
	return _gafc.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073")
}
func (_fadcg ST_GrowShrinkType) ValidateWithPath(path string) error {
	switch _fadcg {
	case 0, 1, 2, 3:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fadcg))
	}
	return nil
}

// ValidateWithPath validates the Chartsheet and its children, prefixing error messages with path
func (_aeadge *Chartsheet) ValidateWithPath(path string) error {
	if _gggef := _aeadge.CT_Chartsheet.ValidateWithPath(path); _gggef != nil {
		return _gggef
	}
	return nil
}
func (_gddbb *CT_SheetPr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gddbb.SyncHorizontalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006e\u0063\u0048\u006f\u0072\u0069\u007ao\u006e\u0074\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.SyncHorizontalAttr))})
	}
	if _gddbb.SyncVerticalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0079\u006ec\u0056\u0065\u0072\u0074\u0069\u0063\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.SyncVerticalAttr))})
	}
	if _gddbb.SyncRefAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073y\u006e\u0063\u0052\u0065\u0066"}, Value: _a.Sprintf("\u0025\u0076", *_gddbb.SyncRefAttr)})
	}
	if _gddbb.TransitionEvaluationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "t\u0072a\u006e\u0073\u0069\u0074\u0069\u006f\u006e\u0045v\u0061\u006c\u0075\u0061ti\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.TransitionEvaluationAttr))})
	}
	if _gddbb.TransitionEntryAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074r\u0061n\u0073\u0069\u0074\u0069\u006f\u006e\u0045\u006e\u0074\u0072\u0079"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.TransitionEntryAttr))})
	}
	if _gddbb.PublishedAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0070u\u0062\u006c\u0069\u0073\u0068\u0065d"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.PublishedAttr))})
	}
	if _gddbb.CodeNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gddbb.CodeNameAttr)})
	}
	if _gddbb.FilterModeAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u0069\u006c\u0074\u0065\u0072\u004d\u006f\u0064\u0065"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.FilterModeAttr))})
	}
	if _gddbb.EnableFormatConditionsCalculationAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0061\u0062\u006c\u0065F\u006f\u0072\u006d\u0061\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0073\u0043\u0061\u006c\u0063\u0075\u006ca\u0074\u0069\u006f\u006e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gddbb.EnableFormatConditionsCalculationAttr))})
	}
	e.EncodeToken(start)
	if _gddbb.TabColor != nil {
		_gfeed := _b.StartElement{Name: _b.Name{Local: "m\u0061\u003a\u0074\u0061\u0062\u0043\u006f\u006c\u006f\u0072"}}
		e.EncodeElement(_gddbb.TabColor, _gfeed)
	}
	if _gddbb.OutlinePr != nil {
		_efdbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ao\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072"}}
		e.EncodeElement(_gddbb.OutlinePr, _efdbe)
	}
	if _gddbb.PageSetUpPr != nil {
		_edece := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072"}}
		e.EncodeElement(_gddbb.PageSetUpPr, _edece)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Users and its children
func (_defca *Users) Validate() error { return _defca.ValidateWithPath("\u0055\u0073\u0065r\u0073") }
func (_ecca *CT_Dimensions) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbdd := range start.Attr {
		if _bbdd.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_cefgb, _gdabc := _g.ParseUint(_bbdd.Value, 10, 32)
			if _gdabc != nil {
				return _gdabc
			}
			_ceeff := uint32(_cefgb)
			_ecca.CountAttr = &_ceeff
			continue
		}
	}
_cgaac:
	for {
		_ecgf, _fdeea := d.Token()
		if _fdeea != nil {
			return _fdeea
		}
		switch _efggg := _ecgf.(type) {
		case _b.StartElement:
			switch _efggg.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064i\u006d\u0065\u006e\u0073\u0069\u006fn"}:
				_bdbag := NewCT_PivotDimension()
				if _bfegb := d.DecodeElement(_bdbag, &_efggg); _bfegb != nil {
					return _bfegb
				}
				_ecca.Dimension = append(_ecca.Dimension, _bdbag)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044i\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073 \u0025\u0076", _efggg.Name)
				if _acage := d.Skip(); _acage != nil {
					return _acage
				}
			}
		case _b.EndElement:
			break _cgaac
		case _b.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Controls and its children
func (_fdccg *CT_Controls) Validate() error {
	return _fdccg.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073")
}
func NewCT_SheetData() *CT_SheetData { _ceecg := &CT_SheetData{}; return _ceecg }

// Validate validates the CT_CacheHierarchy and its children
func (_dfd *CT_CacheHierarchy) Validate() error {
	return _dfd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079")
}

type ST_rwColActionType byte

// ValidateWithPath validates the CT_CacheFields and its children, prefixing error messages with path
func (_agcb *CT_CacheFields) ValidateWithPath(path string) error {
	for _cddf, _aea := range _agcb.CacheField {
		if _cada := _aea.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006cd\u005b\u0025\u0064\u005d", path, _cddf)); _cada != nil {
			return _cada
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OleItems and its children, prefixing error messages with path
func (_fcbge *CT_OleItems) ValidateWithPath(path string) error {
	for _ecbbb, _eeac := range _fcbge.OleItem {
		if _effgf := _eeac.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004f\u006c\u0065\u0049\u0074\u0065m\u005b\u0025\u0064\u005d", path, _ecbbb)); _effgf != nil {
			return _effgf
		}
	}
	return nil
}
func NewCT_Cols() *CT_Cols { _feeg := &CT_Cols{}; return _feeg }

// Validate validates the CT_ChartsheetViews and its children
func (_ggfd *CT_ChartsheetViews) Validate() error {
	return _ggfd.ValidateWithPath("\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073")
}
func NewCT_CacheFields() *CT_CacheFields { _fefa := &CT_CacheFields{}; return _fefa }
func (_bdgb *CT_ChartFormat) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0074"}, Value: _a.Sprintf("\u0025\u0076", _bdgb.ChartAttr)})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0066\u006f\u0072\u006d\u0061\u0074"}, Value: _a.Sprintf("\u0025\u0076", _bdgb.FormatAttr)})
	if _bdgb.SeriesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0065\u0072\u0069\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bdgb.SeriesAttr))})
	}
	e.EncodeToken(start)
	_gcfga := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061"}}
	e.EncodeElement(_bdgb.PivotArea, _gcfga)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_gdgc *CT_DataBinding) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _gdgc.DataBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gdgc.DataBindingNameAttr)})
	}
	if _gdgc.FileBindingAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_gdgc.FileBindingAttr))})
	}
	if _gdgc.ConnectionIDAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044"}, Value: _a.Sprintf("\u0025\u0076", *_gdgc.ConnectionIDAttr)})
	}
	if _gdgc.FileBindingNameAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_gdgc.FileBindingNameAttr)})
	}
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065"}, Value: _a.Sprintf("\u0025\u0076", _gdgc.DataBindingLoadModeAttr)})
	e.EncodeToken(start)
	if _gdgc.Any != nil {
		_gdgc.Any.MarshalXML(e, _b.StartElement{})
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type CT_SingleXmlCells struct {

	// Table Properties
	SingleXmlCell []*CT_SingleXmlCell
}
type ST_PageOrder byte
type CT_DefinedNames struct {

	// Defined Name
	DefinedName []*CT_DefinedName
}

func (_bgee *CT_CustomChartsheetView) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0075\u0069\u0064"}, Value: _a.Sprintf("\u0025\u0076", _bgee.GuidAttr)})
	if _bgee.ScaleAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0063\u0061l\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_bgee.ScaleAttr)})
	}
	if _bgee.StateAttr != ST_SheetStateUnset {
		_gdgd, _fdff := _bgee.StateAttr.MarshalXMLAttr(_b.Name{Local: "\u0073\u0074\u0061t\u0065"})
		if _fdff != nil {
			return _fdff
		}
		start.Attr = append(start.Attr, _gdgd)
	}
	if _bgee.ZoomToFitAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u007ao\u006f\u006d\u0054\u006f\u0046\u0069t"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_bgee.ZoomToFitAttr))})
	}
	e.EncodeToken(start)
	if _bgee.PageMargins != nil {
		_gdaf := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0070\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073"}}
		e.EncodeElement(_bgee.PageMargins, _gdaf)
	}
	if _bgee.PageSetup != nil {
		_agbcc := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ap\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070"}}
		e.EncodeElement(_bgee.PageSetup, _agbcc)
	}
	if _bgee.HeaderFooter != nil {
		_fcfgc := _b.StartElement{Name: _b.Name{Local: "\u006da\u003ah\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072"}}
		e.EncodeElement(_bgee.HeaderFooter, _fcfgc)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_dbbed *CT_Hyperlinks) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	_gdecef := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003ah\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b"}}
	for _, _bfcg := range _dbbed.Hyperlink {
		e.EncodeElement(_bfcg, _gdecef)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_SheetCalcPr() *CT_SheetCalcPr { _cfbcf := &CT_SheetCalcPr{}; return _cfbcf }
func (_fagac ST_FieldSortType) String() string {
	switch _fagac {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006e\u0075\u0061\u006c"
	case 2:
		return "\u0061s\u0063\u0065\u006e\u0064\u0069\u006eg"
	case 3:
		return "\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0069\u006e\u0067"
	}
	return ""
}

// Validate validates the CT_CustomWorkbookViews and its children
func (_agaa *CT_CustomWorkbookViews) Validate() error {
	return _agaa.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073")
}
func NewDialogsheet() *Dialogsheet {
	_bfefcb := &Dialogsheet{}
	_bfefcb.CT_Dialogsheet = *NewCT_Dialogsheet()
	return _bfefcb
}

const (
	ST_BorderStyleUnset            ST_BorderStyle = 0
	ST_BorderStyleNone             ST_BorderStyle = 1
	ST_BorderStyleThin             ST_BorderStyle = 2
	ST_BorderStyleMedium           ST_BorderStyle = 3
	ST_BorderStyleDashed           ST_BorderStyle = 4
	ST_BorderStyleDotted           ST_BorderStyle = 5
	ST_BorderStyleThick            ST_BorderStyle = 6
	ST_BorderStyleDouble           ST_BorderStyle = 7
	ST_BorderStyleHair             ST_BorderStyle = 8
	ST_BorderStyleMediumDashed     ST_BorderStyle = 9
	ST_BorderStyleDashDot          ST_BorderStyle = 10
	ST_BorderStyleMediumDashDot    ST_BorderStyle = 11
	ST_BorderStyleDashDotDot       ST_BorderStyle = 12
	ST_BorderStyleMediumDashDotDot ST_BorderStyle = 13
	ST_BorderStyleSlantDashDot     ST_BorderStyle = 14
)

func (_bgde *CT_Dxfs) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _bgde.CountAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0075n\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_bgde.CountAttr)})
	}
	e.EncodeToken(start)
	if _bgde.Dxf != nil {
		_aecgab := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0064\u0078\u0066"}}
		for _, _afdd := range _bgde.Dxf {
			e.EncodeElement(_afdd, _aecgab)
		}
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_OutlinePr and its children, prefixing error messages with path
func (_fgae *CT_OutlinePr) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_PCDSDTCEntries and its children, prefixing error messages with path
func (_gbagc *CT_PCDSDTCEntries) ValidateWithPath(path string) error {
	for _ebbda, _dbfga := range _gbagc.M {
		if _faaaf := _dbfga.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004d\u005b\u0025\u0064\u005d", path, _ebbda)); _faaaf != nil {
			return _faaaf
		}
	}
	for _afacg, _fdafd := range _gbagc.N {
		if _dade := _fdafd.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u004e\u005b\u0025\u0064\u005d", path, _afacg)); _dade != nil {
			return _dade
		}
	}
	for _bcdfec, _cbfge := range _gbagc.E {
		if _cfgdb := _cbfge.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0045\u005b\u0025\u0064\u005d", path, _bcdfec)); _cfgdb != nil {
			return _cfgdb
		}
	}
	for _dfgddb, _gfbb := range _gbagc.S {
		if _bccgb := _gfbb.ValidateWithPath(_a.Sprintf("\u0025\u0073\u002f\u0053\u005b\u0025\u0064\u005d", path, _dfgddb)); _bccgb != nil {
			return _bccgb
		}
	}
	return nil
}

// Validate validates the CT_Tuples and its children
func (_gaabd *CT_Tuples) Validate() error {
	return _gaabd.ValidateWithPath("\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s")
}
func (_cgcga *CT_WebPublishing) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _cgcga.CssAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0073\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgcga.CssAttr))})
	}
	if _cgcga.ThicketAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0074h\u0069\u0063\u006b\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgcga.ThicketAttr))})
	}
	if _cgcga.LongFileNamesAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006c\u006f\u006e\u0067\u0046\u0069\u006c\u0065\u004e\u0061\u006d\u0065\u0073"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgcga.LongFileNamesAttr))})
	}
	if _cgcga.VmlAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0076\u006d\u006c"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgcga.VmlAttr))})
	}
	if _cgcga.AllowPngAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061\u006c\u006c\u006f\u0077\u0050\u006e\u0067"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_cgcga.AllowPngAttr))})
	}
	if _cgcga.TargetScreenSizeAttr != ST_TargetScreenSizeUnset {
		_dgdfa, _baffaf := _cgcga.TargetScreenSizeAttr.MarshalXMLAttr(_b.Name{Local: "\u0074\u0061r\u0067\u0065\u0074S\u0063\u0072\u0065\u0065\u006e\u0053\u0069\u007a\u0065"})
		if _baffaf != nil {
			return _baffaf
		}
		start.Attr = append(start.Attr, _dgdfa)
	}
	if _cgcga.DpiAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0064\u0070\u0069"}, Value: _a.Sprintf("\u0025\u0076", *_cgcga.DpiAttr)})
	}
	if _cgcga.CodePageAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u006f\u0064\u0065\u0050\u0061\u0067\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_cgcga.CodePageAttr)})
	}
	if _cgcga.CharacterSetAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0063\u0068\u0061r\u0061\u0063\u0074\u0065\u0072\u0053\u0065\u0074"}, Value: _a.Sprintf("\u0025\u0076", *_cgcga.CharacterSetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func NewCT_ConditionalFormats() *CT_ConditionalFormats {
	_beedd := &CT_ConditionalFormats{}
	return _beedd
}

// Validate validates the CT_DataValidation and its children
func (_deafc *CT_DataValidation) Validate() error {
	return _deafc.ValidateWithPath("\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e")
}

// Validate validates the CT_Scenarios and its children
func (_cccafa *CT_Scenarios) Validate() error {
	return _cccafa.ValidateWithPath("\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073")
}

// Validate validates the CT_CustomProperty and its children
func (_bfadf *CT_CustomProperty) Validate() error {
	return _bfadf.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079")
}
func (_dbaecb ST_SmartTagShow) String() string {
	switch _dbaecb {
	case 0:
		return ""
	case 1:
		return "\u0061\u006c\u006c"
	case 2:
		return "\u006e\u006f\u006e\u0065"
	case 3:
		return "n\u006f\u0049\u006e\u0064\u0069\u0063\u0061\u0074\u006f\u0072"
	}
	return ""
}
func (_fcggde *CT_RangePr) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _fcggde.AutoStartAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0053\u0074\u0061\u0072t"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fcggde.AutoStartAttr))})
	}
	if _fcggde.AutoEndAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0061u\u0074\u006f\u0045\u006e\u0064"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_fcggde.AutoEndAttr))})
	}
	if _fcggde.GroupByAttr != ST_GroupByUnset {
		_efbcc, _cbece := _fcggde.GroupByAttr.MarshalXMLAttr(_b.Name{Local: "\u0067r\u006f\u0075\u0070\u0042\u0079"})
		if _cbece != nil {
			return _cbece
		}
		start.Attr = append(start.Attr, _efbcc)
	}
	if _fcggde.StartNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073\u0074\u0061\u0072\u0074\u004e\u0075\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_fcggde.StartNumAttr)})
	}
	if _fcggde.EndNumAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065\u006e\u0064\u004e\u0075\u006d"}, Value: _a.Sprintf("\u0025\u0076", *_fcggde.EndNumAttr)})
	}
	if _fcggde.StartDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073t\u0061\u0072\u0074\u0044\u0061\u0074e"}, Value: _a.Sprintf("\u0025\u0076", *_fcggde.StartDateAttr)})
	}
	if _fcggde.EndDateAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0065n\u0064\u0044\u0061\u0074\u0065"}, Value: _a.Sprintf("\u0025\u0076", *_fcggde.EndDateAttr)})
	}
	if _fcggde.GroupIntervalAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0067\u0072\u006f\u0075\u0070\u0049\u006e\u0074\u0065\u0072\u0076\u0061\u006c"}, Value: _a.Sprintf("\u0025\u0076", *_fcggde.GroupIntervalAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_acgff *CT_ExternalLink) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	e.EncodeToken(start)
	if _acgff.Choice != nil {
		_acgff.Choice.MarshalXML(e, _b.StartElement{})
	}
	if _acgff.ExtLst != nil {
		_abce := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0065\u0078\u0074\u004c\u0073t"}}
		e.EncodeElement(_acgff.ExtLst, _abce)
	}
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}
func (_abbaea ST_Axis) ValidateWithPath(path string) error {
	switch _abbaea {
	case 0, 1, 2, 3, 4:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abbaea))
	}
	return nil
}
func NewWorksheet() *Worksheet {
	_egaea := &Worksheet{}
	_egaea.CT_Worksheet = *NewCT_Worksheet()
	return _egaea
}
func (_gdcfd ST_SortMethod) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bcegb := _b.Attr{}
	_bcegb.Name = name
	switch _gdcfd {
	case ST_SortMethodUnset:
		_bcegb.Value = ""
	case ST_SortMethodStroke:
		_bcegb.Value = "\u0073\u0074\u0072\u006f\u006b\u0065"
	case ST_SortMethodPinYin:
		_bcegb.Value = "\u0070\u0069\u006e\u0059\u0069\u006e"
	case ST_SortMethodNone:
		_bcegb.Value = "\u006e\u006f\u006e\u0065"
	}
	return _bcegb, nil
}
func (_daeaae ST_MdxKPIProperty) ValidateWithPath(path string) error {
	switch _daeaae {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_daeaae))
	}
	return nil
}
func (_gacd *CT_PageSetup) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gada := range start.Attr {
		if _gada.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _gada.Name.Local == "\u0069\u0064" || _gada.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _gada.Name.Local == "\u0069\u0064" {
			_ebbfg, _ffgcad := _gada.Value, error(nil)
			if _ffgcad != nil {
				return _ffgcad
			}
			_gacd.IdAttr = &_ebbfg
			continue
		}
		if _gada.Name.Local == "\u0070a\u0070\u0065\u0072\u0053\u0069\u007ae" {
			_dgaea, _eafgbd := _g.ParseUint(_gada.Value, 10, 32)
			if _eafgbd != nil {
				return _eafgbd
			}
			_eceae := uint32(_dgaea)
			_gacd.PaperSizeAttr = &_eceae
			continue
		}
		if _gada.Name.Local == "\u0062\u006c\u0061\u0063\u006b\u0041\u006e\u0064\u0057\u0068\u0069\u0074\u0065" {
			_efccd, _gecac := _g.ParseBool(_gada.Value)
			if _gecac != nil {
				return _gecac
			}
			_gacd.BlackAndWhiteAttr = &_efccd
			continue
		}
		if _gada.Name.Local == "\u0064\u0072\u0061f\u0074" {
			_gbeaed, _aaadd := _g.ParseBool(_gada.Value)
			if _aaadd != nil {
				return _aaadd
			}
			_gacd.DraftAttr = &_gbeaed
			continue
		}
		if _gada.Name.Local == "\u0073\u0063\u0061l\u0065" {
			_dcfec, _aeaeb := _g.ParseUint(_gada.Value, 10, 32)
			if _aeaeb != nil {
				return _aeaeb
			}
			_gbgde := uint32(_dcfec)
			_gacd.ScaleAttr = &_gbgde
			continue
		}
		if _gada.Name.Local == "\u0063\u0065\u006cl\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073" {
			_gacd.CellCommentsAttr.UnmarshalXMLAttr(_gada)
			continue
		}
		if _gada.Name.Local == "\u0066\u0069\u0074\u0054\u006f\u0057\u0069\u0064\u0074\u0068" {
			_edccd, _aedgd := _g.ParseUint(_gada.Value, 10, 32)
			if _aedgd != nil {
				return _aedgd
			}
			_dbdad := uint32(_edccd)
			_gacd.FitToWidthAttr = &_dbdad
			continue
		}
		if _gada.Name.Local == "\u0070a\u0067\u0065\u004f\u0072\u0064\u0065r" {
			_gacd.PageOrderAttr.UnmarshalXMLAttr(_gada)
			continue
		}
		if _gada.Name.Local == "o\u0072\u0069\u0065\u006e\u0074\u0061\u0074\u0069\u006f\u006e" {
			_gacd.OrientationAttr.UnmarshalXMLAttr(_gada)
			continue
		}
		if _gada.Name.Local == "p\u0061\u0070\u0065\u0072\u0048\u0065\u0069\u0067\u0068\u0074" {
			_dccdc, _dbbcc := _gada.Value, error(nil)
			if _dbbcc != nil {
				return _dbbcc
			}
			_gacd.PaperHeightAttr = &_dccdc
			continue
		}
		if _gada.Name.Local == "\u0070\u0061\u0070\u0065\u0072\u0057\u0069\u0064\u0074\u0068" {
			_aggcb, _cabde := _gada.Value, error(nil)
			if _cabde != nil {
				return _cabde
			}
			_gacd.PaperWidthAttr = &_aggcb
			continue
		}
		if _gada.Name.Local == "\u0066i\u0072s\u0074\u0050\u0061\u0067\u0065\u004e\u0075\u006d\u0062\u0065\u0072" {
			_afbdb, _gefdd := _g.ParseUint(_gada.Value, 10, 32)
			if _gefdd != nil {
				return _gefdd
			}
			_adec := uint32(_afbdb)
			_gacd.FirstPageNumberAttr = &_adec
			continue
		}
		if _gada.Name.Local == "f\u0069\u0074\u0054\u006f\u0048\u0065\u0069\u0067\u0068\u0074" {
			_gbbec, _fegaa := _g.ParseUint(_gada.Value, 10, 32)
			if _fegaa != nil {
				return _fegaa
			}
			_dfeadb := uint32(_gbbec)
			_gacd.FitToHeightAttr = &_dfeadb
			continue
		}
		if _gada.Name.Local == "\u0075s\u0065F\u0069\u0072\u0073\u0074\u0050a\u0067\u0065N\u0075\u006d\u0062\u0065\u0072" {
			_gfgbd, _cdcef := _g.ParseBool(_gada.Value)
			if _cdcef != nil {
				return _cdcef
			}
			_gacd.UseFirstPageNumberAttr = &_gfgbd
			continue
		}
		if _gada.Name.Local == "\u0065\u0072\u0072\u006f\u0072\u0073" {
			_gacd.ErrorsAttr.UnmarshalXMLAttr(_gada)
			continue
		}
		if _gada.Name.Local == "\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c\u0044\u0070\u0069" {
			_egacb, _fgacg := _g.ParseUint(_gada.Value, 10, 32)
			if _fgacg != nil {
				return _fgacg
			}
			_dfdfg := uint32(_egacb)
			_gacd.HorizontalDpiAttr = &_dfdfg
			continue
		}
		if _gada.Name.Local == "v\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0044\u0070\u0069" {
			_aadaf, _ccaec := _g.ParseUint(_gada.Value, 10, 32)
			if _ccaec != nil {
				return _ccaec
			}
			_baebg := uint32(_aadaf)
			_gacd.VerticalDpiAttr = &_baebg
			continue
		}
		if _gada.Name.Local == "\u0063\u006f\u0070\u0069\u0065\u0073" {
			_caddfa, _dedf := _g.ParseUint(_gada.Value, 10, 32)
			if _dedf != nil {
				return _dedf
			}
			_gggde := uint32(_caddfa)
			_gacd.CopiesAttr = &_gggde
			continue
		}
		if _gada.Name.Local == "\u0075s\u0065P\u0072\u0069\u006e\u0074\u0065r\u0044\u0065f\u0061\u0075\u006c\u0074\u0073" {
			_dacef, _gbcbga := _g.ParseBool(_gada.Value)
			if _gbcbga != nil {
				return _gbcbga
			}
			_gacd.UsePrinterDefaultsAttr = &_dacef
			continue
		}
	}
	for {
		_adcb, _ccgba := d.Token()
		if _ccgba != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0061g\u0065\u0053\u0065\u0074\u0075\u0070\u003a\u0020\u0025\u0073", _ccgba)
		}
		if _fefgc, _gfdbd := _adcb.(_b.EndElement); _gfdbd && _fefgc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_MdxKPIProperty byte

const (
	ST_CfTypeUnset             ST_CfType = 0
	ST_CfTypeExpression        ST_CfType = 1
	ST_CfTypeCellIs            ST_CfType = 2
	ST_CfTypeColorScale        ST_CfType = 3
	ST_CfTypeDataBar           ST_CfType = 4
	ST_CfTypeIconSet           ST_CfType = 5
	ST_CfTypeTop10             ST_CfType = 6
	ST_CfTypeUniqueValues      ST_CfType = 7
	ST_CfTypeDuplicateValues   ST_CfType = 8
	ST_CfTypeContainsText      ST_CfType = 9
	ST_CfTypeNotContainsText   ST_CfType = 10
	ST_CfTypeBeginsWith        ST_CfType = 11
	ST_CfTypeEndsWith          ST_CfType = 12
	ST_CfTypeContainsBlanks    ST_CfType = 13
	ST_CfTypeNotContainsBlanks ST_CfType = 14
	ST_CfTypeContainsErrors    ST_CfType = 15
	ST_CfTypeNotContainsErrors ST_CfType = 16
	ST_CfTypeTimePeriod        ST_CfType = 17
	ST_CfTypeAboveAverage      ST_CfType = 18
)

func (_eg *AG_AutoFormat) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gd := range start.Attr {
		if _gd.Name.Local == "\u0061\u0075\u0074o\u0046\u006f\u0072\u006d\u0061\u0074\u0049\u0064" {
			_bf, _fd := _g.ParseUint(_gd.Value, 10, 32)
			if _fd != nil {
				return _fd
			}
			_dgc := uint32(_bf)
			_eg.AutoFormatIdAttr = &_dgc
			continue
		}
		if _gd.Name.Local == "\u0061p\u0070l\u0079\u004e\u0075\u006d\u0062e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_cf, _ffe := _g.ParseBool(_gd.Value)
			if _ffe != nil {
				return _ffe
			}
			_eg.ApplyNumberFormatsAttr = &_cf
			continue
		}
		if _gd.Name.Local == "\u0061p\u0070l\u0079\u0042\u006f\u0072\u0064e\u0072\u0046o\u0072\u006d\u0061\u0074\u0073" {
			_ge, _bbg := _g.ParseBool(_gd.Value)
			if _bbg != nil {
				return _bbg
			}
			_eg.ApplyBorderFormatsAttr = &_ge
			continue
		}
		if _gd.Name.Local == "\u0061\u0070p\u006c\u0079\u0046o\u006e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_dgg, _dgb := _g.ParseBool(_gd.Value)
			if _dgb != nil {
				return _dgb
			}
			_eg.ApplyFontFormatsAttr = &_dgg
			continue
		}
		if _gd.Name.Local == "\u0061\u0070\u0070\u006cyP\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_db, _egb := _g.ParseBool(_gd.Value)
			if _egb != nil {
				return _egb
			}
			_eg.ApplyPatternFormatsAttr = &_db
			continue
		}
		if _gd.Name.Local == "a\u0070\u0070\u006c\u0079Al\u0069g\u006e\u006d\u0065\u006e\u0074F\u006f\u0072\u006d\u0061\u0074\u0073" {
			_fe, _bfg := _g.ParseBool(_gd.Value)
			if _bfg != nil {
				return _bfg
			}
			_eg.ApplyAlignmentFormatsAttr = &_fe
			continue
		}
		if _gd.Name.Local == "\u0061\u0070\u0070ly\u0057\u0069\u0064\u0074\u0068\u0048\u0065\u0069\u0067\u0068\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073" {
			_cb, _fed := _g.ParseBool(_gd.Value)
			if _fed != nil {
				return _fed
			}
			_eg.ApplyWidthHeightFormatsAttr = &_cb
			continue
		}
	}
	for {
		_fg, _ag := d.Token()
		if _ag != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0041\u0047\u005f\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u003a\u0020\u0025s", _ag)
		}
		if _aa, _dc := _fg.(_b.EndElement); _dc && _aa.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_CustomProperties() *CT_CustomProperties   { _dbbf := &CT_CustomProperties{}; return _dbbf }
func NewCT_ExternalReference() *CT_ExternalReference { _ccag := &CT_ExternalReference{}; return _ccag }

// ValidateWithPath validates the CT_DataBar and its children, prefixing error messages with path
func (_acgda *CT_DataBar) ValidateWithPath(path string) error {
	for _gfgg, _cfbc := range _acgda.Cfvo {
		if _abcg := _cfbc.ValidateWithPath(_a.Sprintf("%\u0073\u002f\u0043\u0066\u0076\u006f\u005b\u0025\u0064\u005d", path, _gfgg)); _abcg != nil {
			return _abcg
		}
	}
	if _fdda := _acgda.Color.ValidateWithPath(path + "\u002f\u0043\u006f\u006c\u006f\u0072"); _fdda != nil {
		return _fdda
	}
	return nil
}
func (_bdebg ST_CellType) MarshalXMLAttr(name _b.Name) (_b.Attr, error) {
	_bdgfca := _b.Attr{}
	_bdgfca.Name = name
	switch _bdebg {
	case ST_CellTypeUnset:
		_bdgfca.Value = ""
	case ST_CellTypeB:
		_bdgfca.Value = "\u0062"
	case ST_CellTypeN:
		_bdgfca.Value = "\u006e"
	case ST_CellTypeE:
		_bdgfca.Value = "\u0065"
	case ST_CellTypeS:
		_bdgfca.Value = "\u0073"
	case ST_CellTypeStr:
		_bdgfca.Value = "\u0073\u0074\u0072"
	case ST_CellTypeInlineStr:
		_bdgfca.Value = "\u0069n\u006c\u0069\u006e\u0065\u0053\u0074r"
	}
	return _bdgfca, nil
}
func (_aeedcc *StyleSheet) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u006d\u0061"}, Value: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u0064r"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077i\u006e\u0067\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u0044\u0072\u0061w\u0069\u006e\u0067"})
	start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u006d\u0061\u003a\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	return _aeedcc.CT_Stylesheet.MarshalXML(e, start)
}
func (_fbae *CT_DataBinding) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gfda := range start.Attr {
		if _gfda.Name.Local == "\u0044a\u0074a\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_bdeg, _feaff := _gfda.Value, error(nil)
			if _feaff != nil {
				return _feaff
			}
			_fbae.DataBindingNameAttr = &_bdeg
			continue
		}
		if _gfda.Name.Local == "F\u0069\u006c\u0065\u0042\u0069\u006e\u0064\u0069\u006e\u0067" {
			_feac, _gadea := _g.ParseBool(_gfda.Value)
			if _gadea != nil {
				return _gadea
			}
			_fbae.FileBindingAttr = &_feac
			continue
		}
		if _gfda.Name.Local == "\u0043\u006f\u006en\u0065\u0063\u0074\u0069\u006f\u006e\u0049\u0044" {
			_bcaab, _cgacc := _g.ParseUint(_gfda.Value, 10, 32)
			if _cgacc != nil {
				return _cgacc
			}
			_ddecd := uint32(_bcaab)
			_fbae.ConnectionIDAttr = &_ddecd
			continue
		}
		if _gfda.Name.Local == "\u0046i\u006ce\u0042\u0069\u006e\u0064\u0069\u006e\u0067\u004e\u0061\u006d\u0065" {
			_fbbga, _ddecc := _gfda.Value, error(nil)
			if _ddecc != nil {
				return _ddecc
			}
			_fbae.FileBindingNameAttr = &_fbbga
			continue
		}
		if _gfda.Name.Local == "\u0044\u0061\u0074\u0061Bi\u006e\u0064\u0069\u006e\u0067\u004c\u006f\u0061\u0064\u004d\u006f\u0064\u0065" {
			_bcbee, _ccdd := _g.ParseUint(_gfda.Value, 10, 32)
			if _ccdd != nil {
				return _ccdd
			}
			_fbae.DataBindingLoadModeAttr = uint32(_bcbee)
			continue
		}
	}
_beeddc:
	for {
		_faeef, _gfee := d.Token()
		if _gfee != nil {
			return _gfee
		}
		switch _decg := _faeef.(type) {
		case _b.StartElement:
			switch _decg.Name {
			default:
				if _gcddd, _gbdga := _f.CreateElement(_decg); _gbdga != nil {
					return _gbdga
				} else {
					if _gbbc := d.DecodeElement(_gcddd, &_decg); _gbbc != nil {
						return _gbbc
					}
					_fbae.Any = _gcddd
				}
			}
		case _b.EndElement:
			break _beeddc
		case _b.CharData:
		}
	}
	return nil
}
func (_dcbfb *CT_TableStyles) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _egcga := range start.Attr {
		if _egcga.Name.Local == "\u0063\u006f\u0075n\u0074" {
			_abbca, _fbcdad := _g.ParseUint(_egcga.Value, 10, 32)
			if _fbcdad != nil {
				return _fbcdad
			}
			_bcfga := uint32(_abbca)
			_dcbfb.CountAttr = &_bcfga
			continue
		}
		if _egcga.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0054\u0061\u0062\u006c\u0065S\u0074\u0079\u006c\u0065" {
			_daggb, _gfcbe := _egcga.Value, error(nil)
			if _gfcbe != nil {
				return _gfcbe
			}
			_dcbfb.DefaultTableStyleAttr = &_daggb
			continue
		}
		if _egcga.Name.Local == "\u0064\u0065\u0066\u0061\u0075\u006c\u0074\u0050\u0069\u0076\u006f\u0074S\u0074\u0079\u006c\u0065" {
			_daefeg, _afcac := _egcga.Value, error(nil)
			if _afcac != nil {
				return _afcac
			}
			_dcbfb.DefaultPivotStyleAttr = &_daefeg
			continue
		}
	}
_cgeeeg:
	for {
		_ebegdc, _eddde := d.Token()
		if _eddde != nil {
			return _eddde
		}
		switch _egdcd := _ebegdc.(type) {
		case _b.StartElement:
			switch _egdcd.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_abged := NewCT_TableStyle()
				if _cafde := d.DecodeElement(_abged, &_egdcd); _cafde != nil {
					return _cafde
				}
				_dcbfb.TableStyle = append(_dcbfb.TableStyle, _abged)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074y\u006ce\u0073\u0020\u0025\u0076", _egdcd.Name)
				if _abdda := d.Skip(); _abdda != nil {
					return _abdda
				}
			}
		case _b.EndElement:
			break _cgeeeg
		case _b.CharData:
		}
	}
	return nil
}
func (_bfdgdc *CT_RevisionRowColumn) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	_bfdgdc.ActionAttr = ST_rwColActionType(1)
	for _, _ecbdg := range start.Attr {
		if _ecbdg.Name.Local == "\u0073\u0049\u0064" {
			_cffacb, _cefca := _g.ParseUint(_ecbdg.Value, 10, 32)
			if _cefca != nil {
				return _cefca
			}
			_bfdgdc.SIdAttr = uint32(_cffacb)
			continue
		}
		if _ecbdg.Name.Local == "\u0065\u006f\u006c" {
			_cbadb, _caafc := _g.ParseBool(_ecbdg.Value)
			if _caafc != nil {
				return _caafc
			}
			_bfdgdc.EolAttr = &_cbadb
			continue
		}
		if _ecbdg.Name.Local == "\u0072\u0065\u0066" {
			_fgdf, _adeaa := _ecbdg.Value, error(nil)
			if _adeaa != nil {
				return _adeaa
			}
			_bfdgdc.RefAttr = _fgdf
			continue
		}
		if _ecbdg.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_bfdgdc.ActionAttr.UnmarshalXMLAttr(_ecbdg)
			continue
		}
		if _ecbdg.Name.Local == "\u0065\u0064\u0067\u0065" {
			_bdbbd, _accdd := _g.ParseBool(_ecbdg.Value)
			if _accdd != nil {
				return _accdd
			}
			_bfdgdc.EdgeAttr = &_bdbbd
			continue
		}
		if _ecbdg.Name.Local == "\u0072\u0049\u0064" {
			_dagfg, _bcfee := _g.ParseUint(_ecbdg.Value, 10, 32)
			if _bcfee != nil {
				return _bcfee
			}
			_gbdde := uint32(_dagfg)
			_bfdgdc.RIdAttr = &_gbdde
			continue
		}
		if _ecbdg.Name.Local == "\u0075\u0061" {
			_gdecg, _ccdf := _g.ParseBool(_ecbdg.Value)
			if _ccdf != nil {
				return _ccdf
			}
			_bfdgdc.UaAttr = &_gdecg
			continue
		}
		if _ecbdg.Name.Local == "\u0072\u0061" {
			_bceba, _cbdcb := _g.ParseBool(_ecbdg.Value)
			if _cbdcb != nil {
				return _cbdcb
			}
			_bfdgdc.RaAttr = &_bceba
			continue
		}
	}
_bbdcgf:
	for {
		_dcadg, _gcabcc := d.Token()
		if _gcabcc != nil {
			return _gcabcc
		}
		switch _dedeb := _dcadg.(type) {
		case _b.StartElement:
			switch _dedeb.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u006e\u0064\u006f"}:
				_daegbe := NewCT_UndoInfo()
				if _aaadf := d.DecodeElement(_daegbe, &_dedeb); _aaadf != nil {
					return _aaadf
				}
				_bfdgdc.Undo = append(_bfdgdc.Undo, _daegbe)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0063\u0063"}:
				_bcgdad := NewCT_RevisionCellChange()
				if _fbbcb := d.DecodeElement(_bcgdad, &_dedeb); _fbbcb != nil {
					return _fbbcb
				}
				_bfdgdc.Rcc = append(_bfdgdc.Rcc, _bcgdad)
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0066\u006d\u0074"}:
				_dbeed := NewCT_RevisionFormatting()
				if _acaec := d.DecodeElement(_dbeed, &_dedeb); _acaec != nil {
					return _acaec
				}
				_bfdgdc.Rfmt = append(_bfdgdc.Rfmt, _dbeed)
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0052\u006f\u0077\u0043\u006f\u006c\u0075\u006d\u006e\u0020\u0025\u0076", _dedeb.Name)
				if _facdd := d.Skip(); _facdd != nil {
					return _facdd
				}
			}
		case _b.EndElement:
			break _bbdcgf
		case _b.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_VolTopicRef and its children, prefixing error messages with path
func (_aeedaa *CT_VolTopicRef) ValidateWithPath(path string) error { return nil }
func (_efeab ST_DataConsolidateFunction) Validate() error          { return _efeab.ValidateWithPath("") }
func (_dbbgb *CT_MergeCell) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbbecb := range start.Attr {
		if _bbbecb.Name.Local == "\u0072\u0065\u0066" {
			_facgc, _cbfdb := _bbbecb.Value, error(nil)
			if _cbfdb != nil {
				return _cbfdb
			}
			_dbbgb.RefAttr = _facgc
			continue
		}
	}
	for {
		_cabf, _eafcd := d.Token()
		if _eafcd != nil {
			return _a.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004d\u0065r\u0067\u0065\u0043\u0065\u006c\u006c\u003a\u0020\u0025\u0073", _eafcd)
		}
		if _fbebb, _gbgcg := _cabf.(_b.EndElement); _gbgcg && _fbebb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgcgd ST_DdeValueType) ValidateWithPath(path string) error {
	switch _bgcgd {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _a.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bgcgd))
	}
	return nil
}

// Validate validates the CT_Control and its children
func (_affdf *CT_Control) Validate() error {
	return _affdf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c")
}

type CT_Schema struct {

	// Schema ID
	IDAttr string

	// Schema Reference
	SchemaRefAttr *string

	// Schema Root Namespace
	NamespaceAttr *string

	// Schema Language
	SchemaLanguageAttr *string
	Any                _f.Any
}

const (
	ST_SortMethodUnset  ST_SortMethod = 0
	ST_SortMethodStroke ST_SortMethod = 1
	ST_SortMethodPinYin ST_SortMethod = 2
	ST_SortMethodNone   ST_SortMethod = 3
)

// Validate validates the CT_Border and its children
func (_ggc *CT_Border) Validate() error {
	return _ggc.ValidateWithPath("\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r")
}
func (_agddf *CT_DataBar) MarshalXML(e *_b.Encoder, start _b.StartElement) error {
	if _agddf.MinLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006di\u006e\u004c\u0065\u006e\u0067\u0074h"}, Value: _a.Sprintf("\u0025\u0076", *_agddf.MinLengthAttr)})
	}
	if _agddf.MaxLengthAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u006da\u0078\u004c\u0065\u006e\u0067\u0074h"}, Value: _a.Sprintf("\u0025\u0076", *_agddf.MaxLengthAttr)})
	}
	if _agddf.ShowValueAttr != nil {
		start.Attr = append(start.Attr, _b.Attr{Name: _b.Name{Local: "\u0073h\u006f\u0077\u0056\u0061\u006c\u0075e"}, Value: _a.Sprintf("\u0025\u0064", _bacga(*_agddf.ShowValueAttr))})
	}
	e.EncodeToken(start)
	_aafbg := _b.StartElement{Name: _b.Name{Local: "\u006da\u003a\u0063\u0066\u0076\u006f"}}
	for _, _dgff := range _agddf.Cfvo {
		e.EncodeElement(_dgff, _aafbg)
	}
	_dcbbe := _b.StartElement{Name: _b.Name{Local: "\u006d\u0061\u003a\u0063\u006f\u006c\u006f\u0072"}}
	e.EncodeElement(_agddf.Color, _dcbbe)
	e.EncodeToken(_b.EndElement{Name: start.Name})
	return nil
}

type ST_IconSetType byte
type CT_RevisionCustomView struct {

	// GUID
	GuidAttr string

	// User Action
	ActionAttr ST_RevisionAction
}

func (_cfgfg *ST_TextHAlign) UnmarshalXMLAttr(attr _b.Attr) error {
	switch attr.Value {
	case "":
		*_cfgfg = 0
	case "\u006c\u0065\u0066\u0074":
		*_cfgfg = 1
	case "\u0063\u0065\u006e\u0074\u0065\u0072":
		*_cfgfg = 2
	case "\u0072\u0069\u0067h\u0074":
		*_cfgfg = 3
	case "\u006au\u0073\u0074\u0069\u0066\u0079":
		*_cfgfg = 4
	case "d\u0069\u0073\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0064":
		*_cfgfg = 5
	}
	return nil
}

type ST_ExternalConnectionType byte

func NewCT_CustomChartsheetView() *CT_CustomChartsheetView {
	_daeg := &CT_CustomChartsheetView{}
	_daeg.GuidAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _daeg
}
func (_fabdf *CT_QueryTableField) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _gcdbg := range start.Attr {
		if _gcdbg.Name.Local == "\u0069\u0064" {
			_bfbae, _fcega := _g.ParseUint(_gcdbg.Value, 10, 32)
			if _fcega != nil {
				return _fcega
			}
			_fabdf.IdAttr = uint32(_bfbae)
			continue
		}
		if _gcdbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_abcebe, _ccbfd := _gcdbg.Value, error(nil)
			if _ccbfd != nil {
				return _ccbfd
			}
			_fabdf.NameAttr = &_abcebe
			continue
		}
		if _gcdbg.Name.Local == "\u0064a\u0074\u0061\u0042\u006f\u0075\u006ed" {
			_bfgdae, _gccffb := _g.ParseBool(_gcdbg.Value)
			if _gccffb != nil {
				return _gccffb
			}
			_fabdf.DataBoundAttr = &_bfgdae
			continue
		}
		if _gcdbg.Name.Local == "\u0072\u006f\u0077\u004e\u0075\u006d\u0062\u0065\u0072\u0073" {
			_aaeeb, _gecfd := _g.ParseBool(_gcdbg.Value)
			if _gecfd != nil {
				return _gecfd
			}
			_fabdf.RowNumbersAttr = &_aaeeb
			continue
		}
		if _gcdbg.Name.Local == "\u0066\u0069\u006cl\u0046\u006f\u0072\u006d\u0075\u006c\u0061\u0073" {
			_effag, _ggcga := _g.ParseBool(_gcdbg.Value)
			if _ggcga != nil {
				return _ggcga
			}
			_fabdf.FillFormulasAttr = &_effag
			continue
		}
		if _gcdbg.Name.Local == "\u0063l\u0069\u0070\u0070\u0065\u0064" {
			_bdgaf, _edgfe := _g.ParseBool(_gcdbg.Value)
			if _edgfe != nil {
				return _edgfe
			}
			_fabdf.ClippedAttr = &_bdgaf
			continue
		}
		if _gcdbg.Name.Local == "\u0074\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0049\u0064" {
			_dfaeg, _aefgb := _g.ParseUint(_gcdbg.Value, 10, 32)
			if _aefgb != nil {
				return _aefgb
			}
			_cffbg := uint32(_dfaeg)
			_fabdf.TableColumnIdAttr = &_cffbg
			continue
		}
	}
_bbfdc:
	for {
		_ebca, _bgeaf := d.Token()
		if _bgeaf != nil {
			return _bgeaf
		}
		switch _fdbae := _ebca.(type) {
		case _b.StartElement:
			switch _fdbae.Name {
			case _b.Name{Space: "\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _b.Name{Space: "\u0068t\u0074\u0070:\u002f\u002f\u0070u\u0072\u006c\u002e\u006f\u0063\u006c\u0063.\u006f\u0072\u0067\u002f\u006f\u006fx\u006d\u006c\u002f\u0073\u0070\u0072\u0065\u0061\u0064\u0073\u0068e\u0065\u0074\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabdf.ExtLst = NewCT_ExtensionList()
				if _ggddd := d.DecodeElement(_fabdf.ExtLst, &_fdbae); _ggddd != nil {
					return _ggddd
				}
			default:
				_f.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054a\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _fdbae.Name)
				if _fbcdc := d.Skip(); _fbcdc != nil {
					return _fbcdc
				}
			}
		case _b.EndElement:
			break _bbfdc
		case _b.CharData:
		}
	}
	return nil
}

type CT_Controls struct {

	// Embedded Control
	Control []*CT_Control
}

func (_aefe *CT_ChartsheetProtection) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _fcbb := range start.Attr {
		if _fcbb.Name.Local == "\u0070\u0061\u0073\u0073\u0077\u006f\u0072\u0064" {
			_ceacf, _fcabf := _fcbb.Value, error(nil)
			if _fcabf != nil {
				return _fcabf
			}
			_aefe.PasswordAttr = &_ceacf
			continue
		}
		if _fcbb.Name.Local == "\u0061\u006c\u0067\u006f\u0072\u0069\u0074\u0068\u006d\u004e\u0061\u006d\u0065" {
			_dceg, _bgag := _fcbb.Value, error(nil)
			if _bgag != nil {
				return _bgag
			}
			_aefe.AlgorithmNameAttr = &_dceg
			continue
		}
		if _fcbb.Name.Local == "\u0068a\u0073\u0068\u0056\u0061\u006c\u0075e" {
			_deae, _acdb := _fcbb.Value, error(nil)
			if _acdb != nil {
				return _acdb
			}
			_aefe.HashValueAttr = &_deae
			continue
		}
		if _fcbb.Name.Local == "\u0073a\u006c\u0074\u0056\u0061\u006c\u0075e" {
			_dbfce, _acdag := _fcbb.Value, error(nil)
			if _acdag != nil {
				return _acdag
			}
			_aefe.SaltValueAttr = &_dbfce
			continue
		}
		if _fcbb.Name.Local == "\u0073p\u0069\u006e\u0043\u006f\u0075\u006et" {
			_gcee, _becd := _g.ParseUint(_fcbb.Value, 10, 32)
			if _becd != nil {
				return _becd
			}
			_ddfg := uint32(_gcee)
			_aefe.SpinCountAttr = &_ddfg
			continue
		}
		if _fcbb.Name.Local == "\u0063o\u006e\u0074\u0065\u006e\u0074" {
			_cfdg, _fgdc := _g.ParseBool(_fcbb.Value)
			if _fgdc != nil {
				return _fgdc
			}
			_aefe.ContentAttr = &_cfdg
			continue
		}
		if _fcbb.Name.Local == "\u006fb\u006a\u0065\u0063\u0074\u0073" {
			_cadaf, _eecea := _g.ParseBool(_fcbb.Value)
			if _eecea != nil {
				return _eecea
			}
			_aefe.ObjectsAttr = &_cadaf
			continue
		}
	}
	for {
		_cede, _bdcc := d.Token()
		if _bdcc != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0068\u0061r\u0074\u0073\u0068\u0065\u0065\u0074\u0050r\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020%\u0073", _bdcc)
		}
		if _bgdb, _caaf := _cede.(_b.EndElement); _caaf && _bgdb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Color() *CT_Color { _fedcg := &CT_Color{}; return _fedcg }
func (_dcdcc *CT_Reviewed) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _bbeca := range start.Attr {
		if _bbeca.Name.Local == "\u0072\u0049\u0064" {
			_bdbaae, _afbg := _g.ParseUint(_bbeca.Value, 10, 32)
			if _afbg != nil {
				return _afbg
			}
			_dcdcc.RIdAttr = uint32(_bdbaae)
			continue
		}
	}
	for {
		_bddcaf, _gfegd := d.Token()
		if _gfegd != nil {
			return _a.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064\u003a\u0020\u0025\u0073", _gfegd)
		}
		if _cdabb, _dgfce := _bddcaf.(_b.EndElement); _dgfce && _cdabb.Name == start.Name {
			break
		}
	}
	return nil
}
func init() {
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u006f\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_AutoFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u006c\u0074\u0065\u0072\u0043\u006f\u006c\u0075\u006d\u006e", NewCT_FilterColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_Filters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u0074\u0065r", NewCT_Filter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0075\u0073t\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_CustomFilters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006d\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_CustomFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u006f\u0070\u0031\u0030", NewCT_Top10)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0046i\u006c\u0074\u0065\u0072", NewCT_ColorFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_IconFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0079\u006ea\u006d\u0069\u0063\u0046\u0069\u006c\u0074\u0065\u0072", NewCT_DynamicFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006f\u0072\u0074\u0053\u0074\u0061\u0074\u0065", NewCT_SortState)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006f\u0072t\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e", NewCT_SortCondition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0061\u0074e\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d", NewCT_DateGroupItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0053\u0074\u0072\u0069\u006e\u0067\u0045\u006ce\u006d\u0065\u006e\u0074", NewCT_XStringElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fE\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_Extension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fO\u0062\u006a\u0065\u0063\u0074\u0041\u006e\u0063\u0068\u006f\u0072", NewCT_ObjectAnchor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewCT_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0061\u006c\u0063\u0043\u0068\u0061\u0069\u006e", NewCT_CalcChain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0061\u006c\u0063\u0043\u0065\u006c\u006c", NewCT_CalcCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewCT_Comments)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0074\u0068\u006f\u0072\u0073", NewCT_Authors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006et\u004c\u0069\u0073\u0074", NewCT_CommentList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006d\u006d\u0065\u006e\u0074", NewCT_Comment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006d\u006d\u0065\u006e\u0074\u0050\u0072", NewCT_CommentPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070\u0049\u006e\u0066\u006f", NewCT_MapInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0063\u0068\u0065\u006da", NewCT_Schema)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0070", NewCT_Map)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0069n\u0064\u0069\u006e\u0067", NewCT_DataBinding)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063t\u0069\u006f\u006e\u0073", NewCT_Connections)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0062\u0050\u0072", NewCT_DbPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u006c\u0061\u0070\u0050r", NewCT_OlapPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0072", NewCT_WebPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073", NewCT_Parameters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072", NewCT_Parameter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0061\u0062\u006c\u0065s", NewCT_Tables)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_TableMissing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0050r", NewCT_TextPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_TextFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fPi\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_PivotCacheDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046i\u0065\u006c\u0064\u0073", NewCT_CacheFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_CacheField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0053o\u0075\u0072\u0063\u0065", NewCT_CacheSource)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u006f\u0072\u006b\u0073\u0068e\u0065\u0074S\u006f\u0075\u0072\u0063\u0065", NewCT_WorksheetSource)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u006f\u006es\u006f\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e", NewCT_Consolidation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0073", NewCT_Pages)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0043\u0044\u0053\u0043\u0050\u0061\u0067\u0065", NewCT_PCDSCPage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061\u0067\u0065\u0049\u0074\u0065\u006d", NewCT_PageItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0061\u006e\u0067\u0065\u0053\u0065\u0074\u0073", NewCT_RangeSets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0053\u0065\u0074", NewCT_RangeSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064I\u0074\u0065\u006d\u0073", NewCT_SharedItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0069\u0073\u0073\u0069\u006e\u0067", NewCT_Missing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0062\u0065r", NewCT_Number)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0072\u0072\u006f\u0072", NewCT_Error)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0069\u006eg", NewCT_String)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0065\u0054\u0069\u006d\u0065", NewCT_DateTime)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0047\u0072\u006f\u0075\u0070", NewCT_FieldGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u006e\u0067\u0065\u0050\u0072", NewCT_RangePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0073\u0063\u0072\u0065\u0074\u0065\u0050\u0072", NewCT_DiscretePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0049\u0074\u0065\u006d\u0073", NewCT_GroupItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063h\u0065\u0052\u0065\u0063or\u0064\u0073", NewCT_PivotCacheRecords)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0063\u006f\u0072d", NewCT_Record)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u004b\u0050\u0049\u0073", NewCT_PCDKPIs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0043\u0044\u004b\u0050I", NewCT_PCDKPI)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ac\u0068\u0065\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_CacheHierarchies)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u0063\u0068\u0065\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_CacheHierarchy)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0073U\u0073\u0061\u0067\u0065", NewCT_FieldsUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064\u0055\u0073\u0061\u0067\u0065", NewCT_FieldUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004ce\u0076\u0065\u006c\u0073", NewCT_GroupLevels)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004c\u0065\u0076\u0065\u006c", NewCT_GroupLevel)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u006f\u0075\u0070s", NewCT_Groups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0065\u0076\u0065\u006c\u0047\u0072\u006f\u0075\u0070", NewCT_LevelGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_GroupMembers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u004de\u006d\u0062\u0065\u0072", NewCT_GroupMember)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065\u0043\u0061\u0063\u0068\u0065", NewCT_TupleCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0065\u0072\u0076\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074", NewCT_ServerFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0065\u0072v\u0065\u0072\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ServerFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0043\u0044\u0053\u0044\u0054\u0043\u0045\u006et\u0072\u0069\u0065\u0073", NewCT_PCDSDTCEntries)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0075\u0070\u006c\u0065s", NewCT_Tuples)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0075\u0070\u006c\u0065", NewCT_Tuple)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0065\u0074\u0073", NewCT_Sets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0065\u0074", NewCT_Set)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0043\u0061\u0063\u0068\u0065", NewCT_QueryCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079", NewCT_Query)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0061\u006c\u0063\u0075\u006ca\u0074\u0065d\u0049\u0074\u0065\u006d\u0073", NewCT_CalculatedItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074\u0065d\u0049\u0074\u0065\u006d", NewCT_CalculatedItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u0061\u006c\u0063\u0075\u006c\u0061\u0074e\u0064\u004d\u0065\u006dbe\u0072\u0073", NewCT_CalculatedMembers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043al\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u004d\u0065\u006d\u0062\u0065\u0072", NewCT_CalculatedMember)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fpi\u0076\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e", NewCT_pivotTableDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e", NewCT_Location)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u0065\u006c\u0064\u0073", NewCT_PivotFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_PivotField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0041\u0075\u0074o\u0053\u006f\u0072\u0074\u0053\u0063\u006f\u0070\u0065", NewCT_AutoSortScope)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0074\u0065\u006d\u0073", NewCT_Items)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u0074\u0065\u006d", NewCT_Item)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_PageFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0046\u0069\u0065\u006c\u0064", NewCT_PageField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_DataFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0061\u0074\u0061\u0046\u0069\u0065\u006c\u0064", NewCT_DataField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0072\u006f\u0077\u0049\u0074\u0065\u006d\u0073", NewCT_rowItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0063\u006f\u006c\u0049\u0074\u0065\u006d\u0073", NewCT_colItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049", NewCT_I)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058", NewCT_X)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u006f\u0077\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_RowFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006c\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_ColFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u0065\u006c\u0064", NewCT_Field)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_Formats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u0072\u006d\u0061t", NewCT_Format)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnd\u0069t\u0069\u006f\u006e\u0061\u006cF\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ConditionalFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006fn\u0061\u006c\u0046\u006frm\u0061\u0074", NewCT_ConditionalFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061\u0073", NewCT_PivotAreas)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0073", NewCT_ChartFormats)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0046o\u0072\u006d\u0061\u0074", NewCT_ChartFormat)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073", NewCT_PivotHierarchies)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0048\u0069\u0065\u0072a\u0072\u0063\u0068\u0079", NewCT_PivotHierarchy)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ow\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_RowHierarchiesUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043ol\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0069\u0065\u0073\u0055\u0073\u0061g\u0065", NewCT_ColHierarchiesUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0069\u0065\u0072\u0061\u0072\u0063\u0068\u0079U\u0073\u0061\u0067\u0065", NewCT_HierarchyUsage)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dem\u0062\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_MemberProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_MemberProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u006d\u0062\u0065\u0072\u0073", NewCT_Members)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0065\u006d\u0062\u0065r", NewCT_Member)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u0073", NewCT_Dimensions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_PivotDimension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0061s\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070\u0073", NewCT_MeasureGroups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fMe\u0061\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004d\u0061\u0070\u0073", NewCT_MeasureDimensionMaps)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0061\u0073\u0075\u0072\u0065\u0047\u0072\u006f\u0075\u0070", NewCT_MeasureGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004dea\u0073\u0075\u0072\u0065\u0044\u0069\u006d\u0065\u006e\u0073\u0069\u006f\u006e\u004da\u0070", NewCT_MeasureDimensionMap)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0054a\u0062\u006ce\u0053\u0074\u0079\u006c\u0065", NewCT_PivotTableStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0069\u0076\u006f\u0074\u0046\u0069\u006c\u0074\u0065\u0072\u0073", NewCT_PivotFilters)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0046i\u006c\u0074\u0065\u0072", NewCT_PivotFilter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0069\u0076\u006f\u0074\u0041\u0072\u0065\u0061", NewCT_PivotArea)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050iv\u006f\u0074\u0041\u0072\u0065\u0061\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063e\u0073", NewCT_PivotAreaReferences)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0069vo\u0074A\u0072\u0065\u0061\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_PivotAreaReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0064\u0065\u0078", NewCT_Index)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewCT_QueryTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0052\u0065\u0066re\u0073\u0068", NewCT_QueryTableRefresh)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051\u0075\u0065\u0072\u0079\u0054\u0061\u0062l\u0065\u0044\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069e\u006c\u0064\u0073", NewCT_QueryTableDeletedFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u006c\u0065\u0074\u0065\u0064\u0046\u0069\u0065\u006c\u0064", NewCT_DeletedField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0051ue\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046\u0069\u0065\u006c\u0064\u0073", NewCT_QueryTableFields)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fQ\u0075\u0065\u0072\u0079\u0054a\u0062\u006ce\u0046\u0069\u0065\u006c\u0064", NewCT_QueryTableField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0073\u0074", NewCT_Sst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074i\u0063\u0052\u0075\u006e", NewCT_PhoneticRun)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0045\u006c\u0074", NewCT_RElt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0050\u0072\u0045\u006ct", NewCT_RPrElt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0073\u0074", NewCT_Rst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0068\u006f\u006e\u0065\u0074\u0069\u0063\u0050\u0072", NewCT_PhoneticPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0048e\u0061\u0064\u0065\u0072\u0073", NewCT_RevisionHeaders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073", NewCT_Revisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0048e\u0061\u0064\u0065\u0072", NewCT_RevisionHeader)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064\u004d\u0061\u0070", NewCT_SheetIdMap)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0049\u0064", NewCT_SheetId)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064R\u0065\u0076\u0069\u0073io\u006e\u0073", NewCT_ReviewedRevisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065\u0076\u0069\u0065\u0077\u0065\u0064", NewCT_Reviewed)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0055\u006e\u0064\u006f\u0049\u006e\u0066\u006f", NewCT_UndoInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eR\u006f\u0077\u0043\u006flu\u006d\u006e", NewCT_RevisionRowColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u004d\u006f\u0076\u0065", NewCT_RevisionMove)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0075\u0073t\u006f\u006d\u0056\u0069\u0065\u0077", NewCT_RevisionCustomView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0053\u0068\u0065\u0065\u0074\u0052\u0065\u006e\u0061m\u0065", NewCT_RevisionSheetRename)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0049\u006e\u0073\u0065\u0072\u0074\u0053\u0068\u0065e\u0074", NewCT_RevisionInsertSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0043\u0065\u006cl\u0043\u0068\u0061\u006e\u0067\u0065", NewCT_RevisionCellChange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0065vi\u0073i\u006f\u006e\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_RevisionFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0052\u0065\u0076i\u0073\u0069\u006f\u006e\u0041u\u0074o\u0046o\u0072\u006d\u0061\u0074\u0074\u0069\u006eg", NewCT_RevisionAutoFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u0076\u0069\u0073\u0069o\u006e\u0043o\u006d\u006d\u0065\u006e\u0074", NewCT_RevisionComment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_RevisionDefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ev\u0069\u0073\u0069\u006f\u006e\u0043\u006f\u006e\u0066\u006c\u0069\u0063\u0074", NewCT_RevisionConflict)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0076\u0069\u0073\u0069\u006f\u006eQ\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065\u0046i\u0065\u006c\u0064", NewCT_RevisionQueryTableField)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0055\u0073\u0065\u0072\u0073", NewCT_Users)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0072\u0065\u0064\u0055\u0073\u0065\u0072", NewCT_SharedUser)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0061\u0063\u0072\u006f\u0073\u0068\u0065\u0065\u0074", NewCT_Macrosheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0069\u0061\u006c\u006f\u0067s\u0068\u0065\u0065\u0074", NewCT_Dialogsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fW\u006f\u0072\u006b\u0073\u0068\u0065\u0065\u0074", NewCT_Worksheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061", NewCT_SheetData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0043a\u006c\u0063\u0050\u0072", NewCT_SheetCalcPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0068\u0065e\u0074\u0046\u006f\u0072\u006d\u0061\u0074\u0050\u0072", NewCT_SheetFormatPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u0073", NewCT_Cols)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c", NewCT_Col)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u006f\u0077", NewCT_Row)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c", NewCT_Cell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_SheetPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0044\u0069\u006d\u0065n\u0073\u0069\u006f\u006e", NewCT_SheetDimension)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_SheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_SheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u006e\u0065", NewCT_Pane)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0053\u0065\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_PivotSelection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Selection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_PageBreak)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0072\u0065\u0061\u006b", NewCT_Break)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u0075\u0074\u006c\u0069\u006e\u0065\u0050\u0072", NewCT_OutlinePr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u0053\u0065t\u0055\u0070\u0050\u0072", NewCT_PageSetUpPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0043\u006fn\u0073\u006fl\u0069\u0064\u0061\u0074\u0065", NewCT_DataConsolidate)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066\u0073", NewCT_DataRefs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0052\u0065\u0066", NewCT_DataRef)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c\u0073", NewCT_MergeCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0065\u0072\u0067\u0065\u0043\u0065\u006c\u006c", NewCT_MergeCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_SmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0073", NewCT_CellSmartTags)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067", NewCT_CellSmartTag)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u006d\u0061\u0072\u0074T\u0061\u0067\u0050\u0072", NewCT_CellSmartTagPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_Drawing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0065\u0067a\u0063\u0079\u0044\u0072\u0061\u0077\u0069\u006e\u0067", NewCT_LegacyDrawing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0072\u0061\u0077\u0069\u006e\u0067\u0048\u0046", NewCT_DrawingHF)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0053\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomSheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dS\u0068\u0065e\u0074\u0056\u0069\u0065\u0077", NewCT_CustomSheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0074\u0061\u0056\u0061l\u0069\u0064a\u0074\u0069\u006f\u006e\u0073", NewCT_DataValidations)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0056\u0061\u006c\u0069\u0064a\u0074\u0069\u006f\u006e", NewCT_DataValidation)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e\u0061l\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_ConditionalFormatting)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0052\u0075\u006ce", NewCT_CfRule)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b\u0073", NewCT_Hyperlinks)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0046\u006fr\u006d\u0075\u006c\u0061", NewCT_CellFormula)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0061\u006c\u0065", NewCT_ColorScale)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0061\u0074\u0061\u0042\u0061\u0072", NewCT_DataBar)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u0063\u006f\u006e\u0053\u0065\u0074", NewCT_IconSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0066\u0076\u006f", NewCT_Cfvo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0067\u0065\u004d\u0061r\u0067\u0069\u006e\u0073", NewCT_PageMargins)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0069\u006e\u0074\u004f\u0070\u0074\u0069\u006f\u006e\u0073", NewCT_PrintOptions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fP\u0061\u0067\u0065\u0053\u0065\u0074\u0075\u0070", NewCT_PageSetup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fH\u0065\u0061\u0064\u0065\u0072\u0046\u006f\u006f\u0074\u0065\u0072", NewCT_HeaderFooter)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0063\u0065\u006e\u0061\u0072\u0069\u006f\u0073", NewCT_Scenarios)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0065\u0065\u0074\u0050r\u006f\u0074e\u0063\u0074\u0069\u006f\u006e", NewCT_SheetProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u006f\u0074\u0065\u0063t\u0065\u0064R\u0061\u006e\u0067\u0065\u0073", NewCT_ProtectedRanges)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064R\u0061\u006e\u0067\u0065", NewCT_ProtectedRange)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u0063\u0065\u006e\u0061\u0072\u0069\u006f", NewCT_Scenario)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0070\u0075\u0074\u0043\u0065\u006c\u006c\u0073", NewCT_InputCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0057\u0061t\u0063\u0068\u0065\u0073", NewCT_CellWatches)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0057\u0061\u0074\u0063\u0068", NewCT_CellWatch)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewCT_Chartsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072", NewCT_ChartsheetPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0068\u0061\u0072\u0074\u0073h\u0065\u0065t\u0056\u0069\u0065\u0077\u0073", NewCT_ChartsheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065t\u0056\u0069\u0065\u0077", NewCT_ChartsheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCh\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0050\u0072\u006f\u0074\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_ChartsheetProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0073\u0050\u0061\u0067\u0065S\u0065\u0074\u0075\u0070", NewCT_CsPageSetup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072t\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077\u0073", NewCT_CustomChartsheetViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCu\u0073\u0074\u006f\u006d\u0043\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074\u0056\u0069\u0065\u0077", NewCT_CustomChartsheetView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_CustomProperties)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_CustomProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074\u0073", NewCT_OleObjects)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fO\u006c\u0065\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_OleObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0062\u006a\u0065\u0063\u0074\u0050\u0072", NewCT_ObjectPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fW\u0065\u0062\u0050\u0075\u0062l\u0069\u0073h\u0049\u0074\u0065\u006d\u0073", NewCT_WebPublishItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069\u0073h\u0049\u0074\u0065\u006d", NewCT_WebPublishItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c\u0073", NewCT_Controls)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u0074\u0072\u006f\u006c", NewCT_Control)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u006f\u006e\u0074\u0072\u006f\u006c\u0050\u0072", NewCT_ControlPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u0067\u006eo\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072\u0073", NewCT_IgnoredErrors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fI\u0067\u006e\u006f\u0072\u0065\u0064\u0045\u0072\u0072\u006f\u0072", NewCT_IgnoredError)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0073", NewCT_TableParts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074", NewCT_TablePart)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewCT_Metadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065\u0073", NewCT_MetadataTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0054\u0079\u0070\u0065", NewCT_MetadataType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042l\u006f\u0063\u006b\u0073", NewCT_MetadataBlocks)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004d\u0065\u0074a\u0064\u0061\u0074\u0061\u0042\u006c\u006f\u0063\u006b", NewCT_MetadataBlock)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0052e\u0063\u006f\u0072\u0064", NewCT_MetadataRecord)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u0074\u0075\u0072\u0065\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_FutureMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046ut\u0075\u0072\u0065\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061\u0042\u006c\u006fc\u006b", NewCT_FutureMetadataBlock)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u0074a\u0064\u0061\u0074\u0061", NewCT_MdxMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078", NewCT_Mdx)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004d\u0064\u0078\u0054\u0075\u0070\u006c\u0065", NewCT_MdxTuple)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u0053\u0065t", NewCT_MdxSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004d\u0064\u0078\u004d\u0065\u006d\u0065\u0062\u0065r\u0050\u0072\u006f\u0070", NewCT_MdxMemeberProp)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004d\u0064\u0078\u004b\u0050I", NewCT_MdxKPI)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004det\u0061\u0064\u0061\u0074\u0061\u0053\u0074\u0072\u0069\u006e\u0067\u0049\u006e\u0064e\u0078", NewCT_MetadataStringIndex)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fM\u0065\u0074\u0061\u0064\u0061t\u0061\u0053t\u0072\u0069\u006e\u0067\u0073", NewCT_MetadataStrings)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewCT_SingleXmlCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u0069\u006eg\u006c\u0065\u0058\u006d\u006c\u0043\u0065\u006c\u006c", NewCT_SingleXmlCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u006d\u006c\u0043\u0065\u006c\u006c\u0050\u0072", NewCT_XmlCellPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0050\u0072", NewCT_XmlPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u0073\u0068\u0065\u0065\u0074", NewCT_Stylesheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0043\u0065\u006cl\u0041\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074", NewCT_CellAlignment)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0073", NewCT_Borders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006f\u0072\u0064\u0065r", NewCT_Border)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u0072\u0064\u0065\u0072\u0050\u0072", NewCT_BorderPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0074\u0065c\u0074\u0069\u006f\u006e", NewCT_CellProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0073", NewCT_Fonts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0073", NewCT_Fills)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u0069\u006c\u006c", NewCT_Fill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072n\u0046\u0069\u006c\u006c", NewCT_PatternFill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0046\u0069\u006c\u006c", NewCT_GradientFill)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u0075\u006d\u0046\u006d\u0074\u0073", NewCT_NumFmts)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u0075\u006d\u0046\u006dt", NewCT_NumFmt)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0058\u0066\u0073", NewCT_CellStyleXfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0058\u0066\u0073", NewCT_CellXfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fX\u0066", NewCT_Xf)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_CellStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fC\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065", NewCT_CellStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0078\u0066\u0073", NewCT_Dxfs)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0078\u0066", NewCT_Dxf)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072s", NewCT_Colors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0049\u006e\u0064e\u0078\u0065\u0064\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_IndexedColors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fM\u0052\u0055\u0043\u006f\u006c\u006f\u0072\u0073", NewCT_MRUColors)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_RgbColor)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053t\u0079\u006c\u0065\u0073", NewCT_TableStyles)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079l\u0065\u0045\u006c\u0065me\u006e\u0074", NewCT_TableStyleElement)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fB\u006f\u006f\u006c\u0065\u0061n\u0050\u0072o\u0070\u0065\u0072\u0074\u0079", NewCT_BooleanProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0069\u007a\u0065", NewCT_FontSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049\u006e\u0074\u0050\u0072\u006fp\u0065\u0072\u0074\u0079", NewCT_IntProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065", NewCT_FontName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056e\u0072\u0074\u0069\u0063\u0061\u006c\u0041\u006c\u0069\u0067n\u0046o\u006e\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0079", NewCT_VerticalAlignFontProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0050\u0072\u006f\u0070er\u0074\u0079", NewCT_UnderlineProperty)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0046\u006f\u006e\u0074", NewCT_Font)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079", NewCT_FontFamily)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewCT_ExternalLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0042\u006f\u006f\u006b", NewCT_ExternalBook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0053\u0068\u0065e\u0074\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalSheetNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Na\u006d\u0065", NewCT_ExternalSheetName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_ExternalDefinedNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045xt\u0065\u0072\u006e\u0061\u006c\u0044\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061m\u0065", NewCT_ExternalDefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEx\u0074\u0065\u0072\u006e\u0061\u006c\u0053\u0068\u0065\u0065\u0074\u0044\u0061\u0074\u0061\u0053\u0065\u0074", NewCT_ExternalSheetDataSet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cS\u0068\u0065\u0065\u0074Da\u0074\u0061", NewCT_ExternalSheetData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0078\u0074\u0065\u0072\u006ea\u006c\u0052\u006f\u0077", NewCT_ExternalRow)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0078\u0074\u0065\u0072\u006e\u0061\u006c\u0043\u0065\u006c\u006c", NewCT_ExternalCell)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u004c\u0069\u006e\u006b", NewCT_DdeLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_DdeItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0064\u0065\u0049\u0074\u0065\u006d", NewCT_DdeItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fD\u0064\u0065\u0056\u0061\u006c\u0075\u0065\u0073", NewCT_DdeValues)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0064\u0065\u0056\u0061\u006c\u0075\u0065", NewCT_DdeValue)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u004c\u0069\u006e\u006b", NewCT_OleLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d\u0073", NewCT_OleItems)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0049\u0074\u0065\u006d", NewCT_OleItem)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u0049\u006e\u0066\u006f", NewCT_TableStyleInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0075\u006d\u006e\u0073", NewCT_TableColumns)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043o\u006c\u0075\u006d\u006e", NewCT_TableColumn)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0046\u006f\u0072\u006d\u0075\u006c\u0061", NewCT_TableFormula)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u006d\u006c\u0043\u006f\u006cu\u006d\u006e\u0050\u0072", NewCT_XmlColumnPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewCT_VolTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u0079\u0070\u0065", NewCT_VolType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u004d\u0061\u0069\u006e", NewCT_VolMain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070\u0069\u0063", NewCT_VolTopic)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0056\u006f\u006c\u0054\u006f\u0070i\u0063\u0052\u0065\u0066", NewCT_VolTopicRef)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewCT_Workbook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0056\u0065r\u0073\u0069\u006f\u006e", NewCT_FileVersion)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fB\u006f\u006f\u006b\u0056\u0069\u0065\u0077\u0073", NewCT_BookViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006f\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_BookView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0056\u0069\u0065w\u0073", NewCT_CustomWorkbookViews)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u0075st\u006fm\u0057\u006f\u0072\u006b\u0062o\u006f\u006b\u0056\u0069\u0065\u0077", NewCT_CustomWorkbookView)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065\u0065\u0074s", NewCT_Sheets)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0065\u0065\u0074", NewCT_Sheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057\u006f\u0072\u006b\u0062\u006f\u006f\u006b\u0050\u0072", NewCT_WorkbookPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0050\u0072", NewCT_SmartTagPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0053\u006d\u0061r\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065\u0073", NewCT_SmartTagTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006d\u0061\u0072\u0074\u0054\u0061\u0067\u0054\u0079\u0070\u0065", NewCT_SmartTagType)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0052\u0065\u0063\u006f\u0076e\u0072\u0079\u0050\u0072", NewCT_FileRecoveryPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006c\u0063\u0050r", NewCT_CalcPr)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0065\u0066\u0069\u006e\u0065\u0064\u004e\u0061\u006d\u0065\u0073", NewCT_DefinedNames)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0044\u0065\u0066\u0069\u006e\u0065d\u004e\u0061\u006d\u0065", NewCT_DefinedName)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0045\u0078te\u0072n\u0061\u006c\u0052\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0073", NewCT_ExternalReferences)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0045\u0078\u0074\u0065\u0072\u006e\u0061\u006cR\u0065\u0066\u0065\u0072en\u0063\u0065", NewCT_ExternalReference)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0068\u0065e\u0074\u0042\u0061\u0063\u006bg\u0072o\u0075n\u0064\u0050\u0069\u0063\u0074\u0075\u0072e", NewCT_SheetBackgroundPicture)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043a\u0063\u0068\u0065\u0073", NewCT_PivotCaches)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065", NewCT_PivotCache)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u0065\u0053\u0068a\u0072\u0069\u006e\u0067", NewCT_FileSharing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004f\u006c\u0065\u0053\u0069\u007a\u0065", NewCT_OleSize)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u006frk\u0062o\u006f\u006b\u0050\u0072\u006ft\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_WorkbookProtection)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0057\u0065\u0062P\u0075\u0062\u006c\u0069\u0073\u0068\u0069\u006e\u0067", NewCT_WebPublishing)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0047r\u006f\u0075\u0070\u0073", NewCT_FunctionGroups)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0047\u0072\u006f\u0075\u0070", NewCT_FunctionGroup)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0057\u0065\u0062\u0050\u0075\u0062\u006c\u0069s\u0068\u004f\u0062\u006aec\u0074\u0073", NewCT_WebPublishObjects)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0057eb\u0050\u0075\u0062\u006c\u0069\u0073\u0068\u004f\u0062\u006a\u0065\u0063\u0074", NewCT_WebPublishObject)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063a\u006c\u0063\u0043\u0068\u0061\u0069n", NewCalcChain)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u006f\u006d\u006d\u0065\u006e\u0074\u0073", NewComments)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u004da\u0070\u0049\u006e\u0066\u006f", NewMapInfo)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "c\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0073", NewConnections)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotCacheDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0070\u0069\u0076\u006f\u0074\u0043\u0061\u0063\u0068\u0065\u0052\u0065c\u006f\u0072\u0064\u0073", NewPivotCacheRecords)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "p\u0069v\u006f\u0074\u0054\u0061\u0062\u006c\u0065\u0044e\u0066\u0069\u006e\u0069ti\u006f\u006e", NewPivotTableDefinition)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0071\u0075\u0065\u0072\u0079\u0054\u0061\u0062\u006c\u0065", NewQueryTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0073\u0074", NewSst)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0068e\u0061\u0064\u0065\u0072\u0073", NewHeaders)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0072e\u0076\u0069\u0073\u0069\u006f\u006es", NewRevisions)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0075\u0073\u0065r\u0073", NewUsers)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077o\u0072\u006b\u0073\u0068\u0065\u0065t", NewWorksheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0063\u0068\u0061\u0072\u0074\u0073\u0068\u0065\u0065\u0074", NewChartsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "d\u0069\u0061\u006c\u006f\u0067\u0073\u0068\u0065\u0065\u0074", NewDialogsheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u006d\u0065\u0074\u0061\u0064\u0061\u0074\u0061", NewMetadata)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0069\u006e\u0067\u006c\u0065\u0058\u006d\u006cC\u0065\u006c\u006c\u0073", NewSingleXmlCells)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0073\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewStyleSheet)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0065\u0078\u0074e\u0072\u006e\u0061\u006c\u004c\u0069\u006e\u006b", NewExternalLink)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0061\u0062l\u0065", NewTable)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076\u006f\u006c\u0054\u0079\u0070\u0065\u0073", NewVolTypes)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0077\u006f\u0072\u006b\u0062\u006f\u006f\u006b", NewWorkbook)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047_\u0045\u0078\u0074e\u006e\u0073\u0069\u006f\u006e\u004c\u0069\u0073\u0074", NewEG_ExtensionList)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0052\u0065\u0076\u0044\u0061\u0074\u0061", NewAG_RevData)
	_f.RegisterConstructor("\u0068\u0074\u0074\u0070:\u002f\u002f\u0073\u0063\u0068\u0065\u006d\u0061\u0073.\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u0073\u0070\u0072\u0065\u0061d\u0073\u0068\u0065\u0065\u0074\u006d\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u0041\u0075\u0074\u006f\u0046\u006f\u0072\u006d\u0061\u0074", NewAG_AutoFormat)
}
func (_ebbcg *CT_CustomFilter) UnmarshalXML(d *_b.Decoder, start _b.StartElement) error {
	for _, _eafec := range start.Attr {
		if _eafec.Name.Local == "\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072" {
			_ebbcg.OperatorAttr.UnmarshalXMLAttr(_eafec)
			continue
		}
		if _eafec.Name.Local == "\u0076\u0061\u006c" {
			_fbded, _cacdg := _eafec.Value, error(nil)
			if _cacdg != nil {
				return _cacdg
			}
			_ebbcg.ValAttr = &_fbded
			continue
		}
	}
	for {
		_ccee, _efgbe := d.Token()
		if _efgbe != nil {
			return _a.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dF\u0069\u006c\u0074e\u0072:\u0020\u0025\u0073", _efgbe)
		}
		if _bcef, _fcbc := _ccee.(_b.EndElement); _fcbc && _bcef.Name == start.Name {
			break
		}
	}
	return nil
}

const (
	ST_SortByUnset     ST_SortBy = 0
	ST_SortByValue     ST_SortBy = 1
	ST_SortByCellColor ST_SortBy = 2
	ST_SortByFontColor ST_SortBy = 3
	ST_SortByIcon      ST_SortBy = 4
)
