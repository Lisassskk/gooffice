package dml

import (
	_d "encoding/xml"
	_e "fmt"
	_cb "regexp"
	_cd "strconv"
	_c "time"

	_ff "gitee.com/yu_sheng/gooffice"
	_a "gitee.com/yu_sheng/gooffice/schema/soo/ofc/sharedTypes"
)

func ParseUnionST_PositivePercentage(s string) (ST_PositivePercentage, error) {
	_fggbe := ST_PositivePercentage{}
	if _a.ST_PositivePercentagePatternRe.MatchString(s) {
		_fggbe.ST_PositivePercentage = &ST_Percentage{}
		_fggbe.ST_PositivePercentage.ST_Percentage = &s
	} else {
		_fgdbae, _gfdd := _cd.ParseInt(s, 10, 32)
		if _gfdd != nil {
			return _fggbe, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _gfdd)
		}
		_ecdce := int32(_fgdbae)
		_fggbe.ST_PositivePercentageDecimal = &_ecdce
	}
	return _fggbe, nil
}
func (_ceacc ST_LightRigDirection) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bddfd := _d.Attr{}
	_bddfd.Name = name
	switch _ceacc {
	case ST_LightRigDirectionUnset:
		_bddfd.Value = ""
	case ST_LightRigDirectionTl:
		_bddfd.Value = "\u0074\u006c"
	case ST_LightRigDirectionT:
		_bddfd.Value = "\u0074"
	case ST_LightRigDirectionTr:
		_bddfd.Value = "\u0074\u0072"
	case ST_LightRigDirectionL:
		_bddfd.Value = "\u006c"
	case ST_LightRigDirectionR:
		_bddfd.Value = "\u0072"
	case ST_LightRigDirectionBl:
		_bddfd.Value = "\u0062\u006c"
	case ST_LightRigDirectionB:
		_bddfd.Value = "\u0062"
	case ST_LightRigDirectionBr:
		_bddfd.Value = "\u0062\u0072"
	}
	return _bddfd, nil
}
func NewCT_AlphaReplaceEffect() *CT_AlphaReplaceEffect { _dfe := &CT_AlphaReplaceEffect{}; return _dfe }
func NewCT_GvmlPictureNonVisual() *CT_GvmlPictureNonVisual {
	_eega := &CT_GvmlPictureNonVisual{}
	_eega.CNvPr = NewCT_NonVisualDrawingProps()
	_eega.CNvPicPr = NewCT_NonVisualPictureProperties()
	return _eega
}
func (_adgaf *EG_ColorTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _adgaf.Tint != nil {
		_ebbef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_adgaf.Tint, _ebbef)
	}
	if _adgaf.Shade != nil {
		_dbgad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0068\u0061\u0064\u0065"}}
		e.EncodeElement(_adgaf.Shade, _dbgad)
	}
	if _adgaf.Comp != nil {
		_ebege := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006d\u0070"}}
		e.EncodeElement(_adgaf.Comp, _ebege)
	}
	if _adgaf.Inv != nil {
		_efdge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0069n\u0076"}}
		e.EncodeElement(_adgaf.Inv, _efdge)
	}
	if _adgaf.Gray != nil {
		_ebgbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0079"}}
		e.EncodeElement(_adgaf.Gray, _ebgbe)
	}
	if _adgaf.Alpha != nil {
		_abdgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u006c\u0070\u0068\u0061"}}
		e.EncodeElement(_adgaf.Alpha, _abdgb)
	}
	if _adgaf.AlphaOff != nil {
		_gaddgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.AlphaOff, _gaddgg)
	}
	if _adgaf.AlphaMod != nil {
		_eebag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.AlphaMod, _eebag)
	}
	if _adgaf.Hue != nil {
		_acdbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068u\u0065"}}
		e.EncodeElement(_adgaf.Hue, _acdbf)
	}
	if _adgaf.HueOff != nil {
		_edeed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.HueOff, _edeed)
	}
	if _adgaf.HueMod != nil {
		_gaeee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0075\u0065\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.HueMod, _gaeee)
	}
	if _adgaf.Sat != nil {
		_abfee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073a\u0074"}}
		e.EncodeElement(_adgaf.Sat, _abfee)
	}
	if _adgaf.SatOff != nil {
		_cdaed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.SatOff, _cdaed)
	}
	if _adgaf.SatMod != nil {
		_ddfge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0061\u0074\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.SatMod, _ddfge)
	}
	if _adgaf.Lum != nil {
		_dbbbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_adgaf.Lum, _dbbbd)
	}
	if _adgaf.LumOff != nil {
		_fgffbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.LumOff, _fgffbc)
	}
	if _adgaf.LumMod != nil {
		_fecac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0075\u006d\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.LumMod, _fecac)
	}
	if _adgaf.Red != nil {
		_decda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0064"}}
		e.EncodeElement(_adgaf.Red, _decda)
	}
	if _adgaf.RedOff != nil {
		_acdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.RedOff, _acdc)
	}
	if _adgaf.RedMod != nil {
		_dbfgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0064\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.RedMod, _dbfgg)
	}
	if _adgaf.Green != nil {
		_cfbfde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0065\u0065\u006e"}}
		e.EncodeElement(_adgaf.Green, _cfbfde)
	}
	if _adgaf.GreenOff != nil {
		_gfage := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}}
		e.EncodeElement(_adgaf.GreenOff, _gfage)
	}
	if _adgaf.GreenMod != nil {
		_ggded := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}}
		e.EncodeElement(_adgaf.GreenMod, _ggded)
	}
	if _adgaf.Blue != nil {
		_cbgda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0065"}}
		e.EncodeElement(_adgaf.Blue, _cbgda)
	}
	if _adgaf.BlueOff != nil {
		_fecec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004f\u0066f"}}
		e.EncodeElement(_adgaf.BlueOff, _fecec)
	}
	if _adgaf.BlueMod != nil {
		_aeeaf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0075\u0065\u004d\u006fd"}}
		e.EncodeElement(_adgaf.BlueMod, _aeeaf)
	}
	if _adgaf.Gamma != nil {
		_bebef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_adgaf.Gamma, _bebef)
	}
	if _adgaf.InvGamma != nil {
		_aaeba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}}
		e.EncodeElement(_adgaf.InvGamma, _aaeba)
	}
	return nil
}
func (_bbaaf ST_SchemeColorVal) Validate() error { return _bbaaf.ValidateWithPath("") }
func NewCT_ColorReplaceEffect() *CT_ColorReplaceEffect {
	_adfc := &CT_ColorReplaceEffect{}
	return _adfc
}
func NewCT_GvmlGraphicFrameNonVisual() *CT_GvmlGraphicFrameNonVisual {
	_dbce := &CT_GvmlGraphicFrameNonVisual{}
	_dbce.CNvPr = NewCT_NonVisualDrawingProps()
	_dbce.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
	return _dbce
}

const (
	ST_TextFontAlignTypeUnset ST_TextFontAlignType = 0
	ST_TextFontAlignTypeAuto  ST_TextFontAlignType = 1
	ST_TextFontAlignTypeT     ST_TextFontAlignType = 2
	ST_TextFontAlignTypeCtr   ST_TextFontAlignType = 3
	ST_TextFontAlignTypeBase  ST_TextFontAlignType = 4
	ST_TextFontAlignTypeB     ST_TextFontAlignType = 5
)

func (_abcddd *EG_Media) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abcddd.AudioCd != nil {
		_feea := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0075\u0064\u0069\u006f\u0043d"}}
		e.EncodeElement(_abcddd.AudioCd, _feea)
	}
	if _abcddd.WavAudioFile != nil {
		_eddg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0077\u0061\u0076\u0041\u0075\u0064\u0069o\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_abcddd.WavAudioFile, _eddg)
	}
	if _abcddd.AudioFile != nil {
		_gfcad := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_abcddd.AudioFile, _gfcad)
	}
	if _abcddd.VideoFile != nil {
		_bafbdf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_abcddd.VideoFile, _bafbdf)
	}
	if _abcddd.QuickTimeFile != nil {
		_aeacb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0071u\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}}
		e.EncodeElement(_abcddd.QuickTimeFile, _aeacb)
	}
	return nil
}
func NewCT_ColorSchemeAndMapping() *CT_ColorSchemeAndMapping {
	_dbgcg := &CT_ColorSchemeAndMapping{}
	_dbgcg.ClrScheme = NewCT_ColorScheme()
	return _dbgcg
}
func (_abbc ST_TextAlignType) Validate() error { return _abbc.ValidateWithPath("") }

type ST_TextVerticalType byte

func (_abcdd *CT_InverseGammaTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_fbeafg, _bbcac := d.Token()
		if _bbcac != nil {
			return _e.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0049nve\u0072se\u0047\u0061\u006d\u006d\u0061\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u003a\u0020%\u0073", _bbcac)
		}
		if _eggg, _fbdef := _fbeafg.(_d.EndElement); _fbdef && _eggg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_Path2DClose struct{}

// Validate validates the CT_QuickTimeFile and its children
func (_fgafd *CT_QuickTimeFile) Validate() error {
	return _fgafd.ValidateWithPath("\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065")
}
func NewCT_GeomGuideList() *CT_GeomGuideList { _cgdag := &CT_GeomGuideList{}; return _cgdag }
func (_aedd *CT_GvmlGroupShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aedd.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_aedd.GrpSpPr = NewCT_GroupShapeProperties()
_adac:
	for {
		_gdedg, _geedb := d.Token()
		if _geedb != nil {
			return _geedb
		}
		switch _ddbeg := _gdedg.(type) {
		case _d.StartElement:
			switch _ddbeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0047\u0072\u0070\u0053\u0070\u0050r"}:
				if _ccaef := d.DecodeElement(_aedd.NvGrpSpPr, &_ddbeg); _ccaef != nil {
					return _ccaef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0053\u0070\u0050\u0072"}:
				if _ceef := d.DecodeElement(_aedd.GrpSpPr, &_ddbeg); _ceef != nil {
					return _ceef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_dccbd := NewCT_GvmlGroupShapeChoice()
				if _dcdeg := d.DecodeElement(&_dccbd.TxSp, &_ddbeg); _dcdeg != nil {
					return _dcdeg
				}
				_aedd.Choice = append(_aedd.Choice, _dccbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_dfbg := NewCT_GvmlGroupShapeChoice()
				if _aeaf := d.DecodeElement(&_dfbg.Sp, &_ddbeg); _aeaf != nil {
					return _aeaf
				}
				_aedd.Choice = append(_aedd.Choice, _dfbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_dbaf := NewCT_GvmlGroupShapeChoice()
				if _aebd := d.DecodeElement(&_dbaf.CxnSp, &_ddbeg); _aebd != nil {
					return _aebd
				}
				_aedd.Choice = append(_aedd.Choice, _dbaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_dfcff := NewCT_GvmlGroupShapeChoice()
				if _cbab := d.DecodeElement(&_dfcff.Pic, &_ddbeg); _cbab != nil {
					return _cbab
				}
				_aedd.Choice = append(_aedd.Choice, _dfcff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_ebfg := NewCT_GvmlGroupShapeChoice()
				if _ecfg := d.DecodeElement(&_ebfg.GraphicFrame, &_ddbeg); _ecfg != nil {
					return _ecfg
				}
				_aedd.Choice = append(_aedd.Choice, _ebfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_gdaed := NewCT_GvmlGroupShapeChoice()
				if _gecd := d.DecodeElement(&_gdaed.GrpSp, &_ddbeg); _gecd != nil {
					return _gecd
				}
				_aedd.Choice = append(_aedd.Choice, _gdaed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aedd.ExtLst = NewCT_OfficeArtExtensionList()
				if _faee := d.DecodeElement(_aedd.ExtLst, &_ddbeg); _faee != nil {
					return _faee
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _ddbeg.Name)
				if _feabc := d.Skip(); _feabc != nil {
					return _feabc
				}
			}
		case _d.EndElement:
			break _adac
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the EG_Text3D and its children
func (_ecbega *EG_Text3D) Validate() error {
	return _ecbega.ValidateWithPath("\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D")
}

// ValidateWithPath validates the CT_GvmlPictureNonVisual and its children, prefixing error messages with path
func (_ddcfd *CT_GvmlPictureNonVisual) ValidateWithPath(path string) error {
	if _cfcec := _ddcfd.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _cfcec != nil {
		return _cfcec
	}
	if _cfaed := _ddcfd.CNvPicPr.ValidateWithPath(path + "\u002fC\u004e\u0076\u0050\u0069\u0063\u0050r"); _cfaed != nil {
		return _cfaed
	}
	return nil
}
func (_cdbbd *CT_EffectReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egeb := range start.Attr {
		if _egeb.Name.Local == "\u0072\u0065\u0066" {
			_ecdedg, _bcecb := _egeb.Value, error(nil)
			if _bcecb != nil {
				return _bcecb
			}
			_cdbbd.RefAttr = _ecdedg
			continue
		}
	}
	for {
		_fdbfc, _efgd := d.Token()
		if _efgd != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0045\u0066\u0066\u0065\u0063\u0074\u0052e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u003a\u0020\u0025\u0073", _efgd)
		}
		if _gdafd, _aebcg := _fdbfc.(_d.EndElement); _aebcg && _gdafd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TextParagraph() *CT_TextParagraph { _bacc := &CT_TextParagraph{}; return _bacc }

type CT_GvmlConnectorNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvCxnSpPr *CT_NonVisualConnectorProperties
}

func NewCT_DashStopList() *CT_DashStopList { _gefc := &CT_DashStopList{}; return _gefc }

// Validate validates the CT_Camera and its children
func (_eaeb *CT_Camera) Validate() error {
	return _eaeb.ValidateWithPath("\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a")
}
func (_fcdg *CT_GvmlUseShapeRectangle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Shape3D and its children
func (_agfb *CT_Shape3D) Validate() error {
	return _agfb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044")
}

// Validate validates the CT_Path2DClose and its children
func (_bcba *CT_Path2DClose) Validate() error {
	return _bcba.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065")
}

type ST_PresetShadowVal byte

// Validate validates the CT_NonVisualDrawingShapeProps and its children
func (_effb *CT_NonVisualDrawingShapeProps) Validate() error {
	return _effb.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073")
}
func (_gedb *CT_Shape3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gedb.ZAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _e.Sprintf("\u0025\u0076", *_gedb.ZAttr)})
	}
	if _gedb.ExtrusionHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048"}, Value: _e.Sprintf("\u0025\u0076", *_gedb.ExtrusionHAttr)})
	}
	if _gedb.ContourWAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057"}, Value: _e.Sprintf("\u0025\u0076", *_gedb.ContourWAttr)})
	}
	if _gedb.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_ccaeb, _aegga := _gedb.PrstMaterialAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _aegga != nil {
			return _aegga
		}
		start.Attr = append(start.Attr, _ccaeb)
	}
	e.EncodeToken(start)
	if _gedb.BevelT != nil {
		_ecbdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0054"}}
		e.EncodeElement(_gedb.BevelT, _ecbdb)
	}
	if _gedb.BevelB != nil {
		_eaada := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0065\u0076\u0065\u006c\u0042"}}
		e.EncodeElement(_gedb.BevelB, _eaada)
	}
	if _gedb.ExtrusionClr != nil {
		_gbdfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u0072\u0075\u0073\u0069o\u006e\u0043\u006c\u0072"}}
		e.EncodeElement(_gedb.ExtrusionClr, _gbdfc)
	}
	if _gedb.ContourClr != nil {
		_gbgac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063o\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}}
		e.EncodeElement(_gedb.ContourClr, _gbgac)
	}
	if _gedb.ExtLst != nil {
		_aeagb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gedb.ExtLst, _aeagb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Path2DLineTo and its children, prefixing error messages with path
func (_ffff *CT_Path2DLineTo) ValidateWithPath(path string) error {
	if _cfaef := _ffff.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _cfaef != nil {
		return _cfaef
	}
	return nil
}
func (_baecd ST_ChartBuildStep) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_baecd.String(), start)
}
func NewCT_PathShadeProperties() *CT_PathShadeProperties {
	_ddfea := &CT_PathShadeProperties{}
	return _ddfea
}
func NewCT_HSLEffect() *CT_HSLEffect { _bcfaf := &CT_HSLEffect{}; return _bcfaf }

// ValidateWithPath validates the CT_TableProperties and its children, prefixing error messages with path
func (_daaea *CT_TableProperties) ValidateWithPath(path string) error {
	if _daaea.NoFill != nil {
		if _aagfb := _daaea.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _aagfb != nil {
			return _aagfb
		}
	}
	if _daaea.SolidFill != nil {
		if _fbeg := _daaea.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fbeg != nil {
			return _fbeg
		}
	}
	if _daaea.GradFill != nil {
		if _daggc := _daaea.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _daggc != nil {
			return _daggc
		}
	}
	if _daaea.BlipFill != nil {
		if _cecfc := _daaea.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _cecfc != nil {
			return _cecfc
		}
	}
	if _daaea.PattFill != nil {
		if _fcfda := _daaea.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fcfda != nil {
			return _fcfda
		}
	}
	if _daaea.GrpFill != nil {
		if _gggcc := _daaea.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gggcc != nil {
			return _gggcc
		}
	}
	if _daaea.EffectLst != nil {
		if _cecea := _daaea.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _cecea != nil {
			return _cecea
		}
	}
	if _daaea.EffectDag != nil {
		if _fdfcd := _daaea.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _fdfcd != nil {
			return _fdfcd
		}
	}
	if _daaea.Choice != nil {
		if _cbabg := _daaea.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _cbabg != nil {
			return _cbabg
		}
	}
	if _daaea.ExtLst != nil {
		if _acdgb := _daaea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdgb != nil {
			return _acdgb
		}
	}
	return nil
}
func (_efafc *CT_TextBulletSizeFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_dcbee, _dcaaag := d.Token()
		if _dcaaag != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065x\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078t\u003a\u0020\u0025\u0073", _dcaaag)
		}
		if _dcbdb, _ddee := _dcbee.(_d.EndElement); _ddee && _dcbdb.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaInverseEffect and its children, prefixing error messages with path
func (_bfc *CT_AlphaInverseEffect) ValidateWithPath(path string) error {
	if _bfc.ScrgbClr != nil {
		if _gag := _bfc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gag != nil {
			return _gag
		}
	}
	if _bfc.SrgbClr != nil {
		if _fea := _bfc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fea != nil {
			return _fea
		}
	}
	if _bfc.HslClr != nil {
		if _bbbe := _bfc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _bbbe != nil {
			return _bbbe
		}
	}
	if _bfc.SysClr != nil {
		if _ddfe := _bfc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ddfe != nil {
			return _ddfe
		}
	}
	if _bfc.SchemeClr != nil {
		if _fcaf := _bfc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fcaf != nil {
			return _fcaf
		}
	}
	if _bfc.PrstClr != nil {
		if _gfb := _bfc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gfb != nil {
			return _gfb
		}
	}
	return nil
}
func (_egaae ST_AnimationBuildType) String() string {
	switch _egaae {
	case 0:
		return ""
	case 1:
		return "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}
func NewCT_XYAdjustHandle() *CT_XYAdjustHandle {
	_gbgab := &CT_XYAdjustHandle{}
	_gbgab.Pos = NewCT_AdjPoint2D()
	return _gbgab
}
func (_cadff *CT_EffectContainer) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cadff.TypeAttr != ST_EffectContainerTypeUnset {
		_dbbg, _bbce := _cadff.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _bbce != nil {
			return _bbce
		}
		start.Attr = append(start.Attr, _dbbg)
	}
	if _cadff.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cadff.NameAttr)})
	}
	e.EncodeToken(start)
	if _cadff.Cont != nil {
		_dccgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_cadff.Cont, _dccgd)
	}
	if _cadff.Effect != nil {
		_ecef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_cadff.Effect, _ecef)
	}
	if _cadff.AlphaBiLevel != nil {
		_afdcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_cadff.AlphaBiLevel, _afdcf)
	}
	if _cadff.AlphaCeiling != nil {
		_ccfff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_cadff.AlphaCeiling, _ccfff)
	}
	if _cadff.AlphaFloor != nil {
		_bfdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_cadff.AlphaFloor, _bfdc)
	}
	if _cadff.AlphaInv != nil {
		_cgca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_cadff.AlphaInv, _cgca)
	}
	if _cadff.AlphaMod != nil {
		_becf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_cadff.AlphaMod, _becf)
	}
	if _cadff.AlphaModFix != nil {
		_bgfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_cadff.AlphaModFix, _bgfb)
	}
	if _cadff.AlphaOutset != nil {
		_dcba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_cadff.AlphaOutset, _dcba)
	}
	if _cadff.AlphaRepl != nil {
		_eacd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_cadff.AlphaRepl, _eacd)
	}
	if _cadff.BiLevel != nil {
		_bada := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_cadff.BiLevel, _bada)
	}
	if _cadff.Blend != nil {
		_bbed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_cadff.Blend, _bbed)
	}
	if _cadff.Blur != nil {
		_ccbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_cadff.Blur, _ccbg)
	}
	if _cadff.ClrChange != nil {
		_cfebc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_cadff.ClrChange, _cfebc)
	}
	if _cadff.ClrRepl != nil {
		_febb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_cadff.ClrRepl, _febb)
	}
	if _cadff.Duotone != nil {
		_edfef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_cadff.Duotone, _edfef)
	}
	if _cadff.Fill != nil {
		_cdca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cadff.Fill, _cdca)
	}
	if _cadff.FillOverlay != nil {
		_eaaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_cadff.FillOverlay, _eaaf)
	}
	if _cadff.Glow != nil {
		_gddbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_cadff.Glow, _gddbc)
	}
	if _cadff.Grayscl != nil {
		_afead := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_cadff.Grayscl, _afead)
	}
	if _cadff.Hsl != nil {
		_cfbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_cadff.Hsl, _cfbb)
	}
	if _cadff.InnerShdw != nil {
		_ccffge := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cadff.InnerShdw, _ccffge)
	}
	if _cadff.Lum != nil {
		_bbcg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_cadff.Lum, _bbcg)
	}
	if _cadff.OuterShdw != nil {
		_cedg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cadff.OuterShdw, _cedg)
	}
	if _cadff.PrstShdw != nil {
		_eagd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_cadff.PrstShdw, _eagd)
	}
	if _cadff.Reflection != nil {
		_aeceb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_cadff.Reflection, _aeceb)
	}
	if _cadff.RelOff != nil {
		_ggfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_cadff.RelOff, _ggfb)
	}
	if _cadff.SoftEdge != nil {
		_cbdaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_cadff.SoftEdge, _cbdaa)
	}
	if _cadff.Tint != nil {
		_cbggf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_cadff.Tint, _cbggf)
	}
	if _cadff.Xfrm != nil {
		_cfdab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_cadff.Xfrm, _cfdab)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgbfc *CT_Path2DLineTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgbfc.Pt = NewCT_AdjPoint2D()
_egaac:
	for {
		_ebdg, _cabe := d.Token()
		if _cabe != nil {
			return _cabe
		}
		switch _fefbg := _ebdg.(type) {
		case _d.StartElement:
			switch _fefbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _aebaa := d.DecodeElement(_bgbfc.Pt, &_fefbg); _aebaa != nil {
					return _aebaa
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f\u0020\u0025\u0076", _fefbg.Name)
				if _fdfbc := d.Skip(); _fdfbc != nil {
					return _fdfbc
				}
			}
		case _d.EndElement:
			break _egaac
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableRow and its children, prefixing error messages with path
func (_efae *CT_TableRow) ValidateWithPath(path string) error {
	if _ffdec := _efae.HAttr.ValidateWithPath(path + "\u002f\u0048\u0041\u0074\u0074\u0072"); _ffdec != nil {
		return _ffdec
	}
	for _cgede, _ffbfg := range _efae.Tc {
		if _cfadd := _ffbfg.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0054\u0063\u005b\u0025\u0064]", path, _cgede)); _cfadd != nil {
			return _cfadd
		}
	}
	if _efae.ExtLst != nil {
		if _eaagc := _efae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _eaagc != nil {
			return _eaagc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupTransform2D and its children, prefixing error messages with path
func (_fffeb *CT_GroupTransform2D) ValidateWithPath(path string) error {
	if _fffeb.Off != nil {
		if _ggdaa := _fffeb.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _ggdaa != nil {
			return _ggdaa
		}
	}
	if _fffeb.Ext != nil {
		if _dbec := _fffeb.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _dbec != nil {
			return _dbec
		}
	}
	if _fffeb.ChOff != nil {
		if _geba := _fffeb.ChOff.ValidateWithPath(path + "\u002f\u0043\u0068\u004f\u0066\u0066"); _geba != nil {
			return _geba
		}
	}
	if _fffeb.ChExt != nil {
		if _ecefc := _fffeb.ChExt.ValidateWithPath(path + "\u002f\u0043\u0068\u0045\u0078\u0074"); _ecefc != nil {
			return _ecefc
		}
	}
	return nil
}
func (_ecbabf *ST_TextWrappingType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ecbabf = 0
	case "\u006e\u006f\u006e\u0065":
		*_ecbabf = 1
	case "\u0073\u0071\u0075\u0061\u0072\u0065":
		*_ecbabf = 2
	}
	return nil
}
func (_eg *Blip) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eg.CT_Blip = *NewCT_Blip()
	for _, _fd := range start.Attr {
		if _fd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fd.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_ge, _be := _fd.Value, error(nil)
			if _be != nil {
				return _be
			}
			_eg.EmbedAttr = &_ge
			continue
		}
		if _fd.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fd.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cdbf, _efd := _fd.Value, error(nil)
			if _efd != nil {
				return _efd
			}
			_eg.LinkAttr = &_cdbf
			continue
		}
		if _fd.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_eg.CstateAttr.UnmarshalXMLAttr(_fd)
			continue
		}
	}
_aca:
	for {
		_dae, _dee := d.Token()
		if _dee != nil {
			return _dee
		}
		switch _beg := _dae.(type) {
		case _d.StartElement:
			switch _beg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_ec := NewCT_BlipChoice()
				if _ee := d.DecodeElement(&_ec.AlphaBiLevel, &_beg); _ee != nil {
					return _ee
				}
				_eg.Choice = append(_eg.Choice, _ec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_fcga := NewCT_BlipChoice()
				if _gee := d.DecodeElement(&_fcga.AlphaCeiling, &_beg); _gee != nil {
					return _gee
				}
				_eg.Choice = append(_eg.Choice, _fcga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_bb := NewCT_BlipChoice()
				if _ega := d.DecodeElement(&_bb.AlphaFloor, &_beg); _ega != nil {
					return _ega
				}
				_eg.Choice = append(_eg.Choice, _bb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_ecg := NewCT_BlipChoice()
				if _fe := d.DecodeElement(&_ecg.AlphaInv, &_beg); _fe != nil {
					return _fe
				}
				_eg.Choice = append(_eg.Choice, _ecg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_dcb := NewCT_BlipChoice()
				if _acf := d.DecodeElement(&_dcb.AlphaMod, &_beg); _acf != nil {
					return _acf
				}
				_eg.Choice = append(_eg.Choice, _dcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_fca := NewCT_BlipChoice()
				if _fba := d.DecodeElement(&_fca.AlphaModFix, &_beg); _fba != nil {
					return _fba
				}
				_eg.Choice = append(_eg.Choice, _fca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fee := NewCT_BlipChoice()
				if _def := d.DecodeElement(&_fee.AlphaRepl, &_beg); _def != nil {
					return _def
				}
				_eg.Choice = append(_eg.Choice, _fee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_bce := NewCT_BlipChoice()
				if _dff := d.DecodeElement(&_bce.BiLevel, &_beg); _dff != nil {
					return _dff
				}
				_eg.Choice = append(_eg.Choice, _bce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_dbg := NewCT_BlipChoice()
				if _cbe := d.DecodeElement(&_dbg.Blur, &_beg); _cbe != nil {
					return _cbe
				}
				_eg.Choice = append(_eg.Choice, _dbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_dac := NewCT_BlipChoice()
				if _bg := d.DecodeElement(&_dac.ClrChange, &_beg); _bg != nil {
					return _bg
				}
				_eg.Choice = append(_eg.Choice, _dac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_ecd := NewCT_BlipChoice()
				if _ffdf := d.DecodeElement(&_ecd.ClrRepl, &_beg); _ffdf != nil {
					return _ffdf
				}
				_eg.Choice = append(_eg.Choice, _ecd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_fbe := NewCT_BlipChoice()
				if _dbba := d.DecodeElement(&_fbe.Duotone, &_beg); _dbba != nil {
					return _dbba
				}
				_eg.Choice = append(_eg.Choice, _fbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_fbb := NewCT_BlipChoice()
				if _ab := d.DecodeElement(&_fbb.FillOverlay, &_beg); _ab != nil {
					return _ab
				}
				_eg.Choice = append(_eg.Choice, _fbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_bgc := NewCT_BlipChoice()
				if _fdg := d.DecodeElement(&_bgc.Grayscl, &_beg); _fdg != nil {
					return _fdg
				}
				_eg.Choice = append(_eg.Choice, _bgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_dce := NewCT_BlipChoice()
				if _bf := d.DecodeElement(&_dce.Hsl, &_beg); _bf != nil {
					return _bf
				}
				_eg.Choice = append(_eg.Choice, _dce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_bca := NewCT_BlipChoice()
				if _fdc := d.DecodeElement(&_bca.Lum, &_beg); _fdc != nil {
					return _fdc
				}
				_eg.Choice = append(_eg.Choice, _bca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gge := NewCT_BlipChoice()
				if _dd := d.DecodeElement(&_gge.Tint, &_beg); _dd != nil {
					return _dd
				}
				_eg.Choice = append(_eg.Choice, _gge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ggd := d.DecodeElement(_eg.ExtLst, &_beg); _ggd != nil {
					return _ggd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0042\u006ci\u0070\u0020\u0025\u0076", _beg.Name)
				if _ece := d.Skip(); _ece != nil {
					return _ece
				}
			}
		case _d.EndElement:
			break _aca
		case _d.CharData:
		}
	}
	return nil
}
func (_fcgfda *ST_FontCollectionIndex) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcfad, _dgaggd := d.Token()
	if _dgaggd != nil {
		return _dgaggd
	}
	if _fdbgf, _feffd := _gcfad.(_d.EndElement); _feffd && _fdbgf.Name == start.Name {
		*_fcgfda = 1
		return nil
	}
	if _bdfbd, _eeede := _gcfad.(_d.CharData); !_eeede {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcfad)
	} else {
		switch string(_bdfbd) {
		case "":
			*_fcgfda = 0
		case "\u006d\u0061\u006ao\u0072":
			*_fcgfda = 1
		case "\u006d\u0069\u006eo\u0072":
			*_fcgfda = 2
		case "\u006e\u006f\u006e\u0065":
			*_fcgfda = 3
		}
	}
	_gcfad, _dgaggd = d.Token()
	if _dgaggd != nil {
		return _dgaggd
	}
	if _ggedag, _aaaffc := _gcfad.(_d.EndElement); _aaaffc && _ggedag.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcfad)
}
func (_caagbc ST_ShapeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_caagbc.String(), start)
}
func (_dgg *CT_CustomColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddafc := range start.Attr {
		if _ddafc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_cced, _effc := _ddafc.Value, error(nil)
			if _effc != nil {
				return _effc
			}
			_dgg.NameAttr = &_cced
			continue
		}
	}
_cdda:
	for {
		_ebgc, _fabgb := d.Token()
		if _fabgb != nil {
			return _fabgb
		}
		switch _geacc := _ebgc.(type) {
		case _d.StartElement:
			switch _geacc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgg.ScrgbClr = NewCT_ScRgbColor()
				if _gfab := d.DecodeElement(_dgg.ScrgbClr, &_geacc); _gfab != nil {
					return _gfab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dgg.SrgbClr = NewCT_SRgbColor()
				if _egef := d.DecodeElement(_dgg.SrgbClr, &_geacc); _egef != nil {
					return _egef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dgg.HslClr = NewCT_HslColor()
				if _ddadg := d.DecodeElement(_dgg.HslClr, &_geacc); _ddadg != nil {
					return _ddadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dgg.SysClr = NewCT_SystemColor()
				if _gbcac := d.DecodeElement(_dgg.SysClr, &_geacc); _gbcac != nil {
					return _gbcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dgg.SchemeClr = NewCT_SchemeColor()
				if _bagdc := d.DecodeElement(_dgg.SchemeClr, &_geacc); _bagdc != nil {
					return _bagdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dgg.PrstClr = NewCT_PresetColor()
				if _deeda := d.DecodeElement(_dgg.PrstClr, &_geacc); _deeda != nil {
					return _deeda
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _geacc.Name)
				if _edeb := d.Skip(); _edeb != nil {
					return _edeb
				}
			}
		case _d.EndElement:
			break _cdda
		case _d.CharData:
		}
	}
	return nil
}

type CT_GvmlPictureNonVisual struct {
	CNvPr    *CT_NonVisualDrawingProps
	CNvPicPr *CT_NonVisualPictureProperties
}

func NewCT_GraphicalObjectFrameLocking() *CT_GraphicalObjectFrameLocking {
	_gbgf := &CT_GraphicalObjectFrameLocking{}
	return _gbgf
}

// ValidateWithPath validates the ThemeOverride and its children, prefixing error messages with path
func (_bgabd *ThemeOverride) ValidateWithPath(path string) error {
	if _cgcfc := _bgabd.CT_BaseStylesOverride.ValidateWithPath(path); _cgcfc != nil {
		return _cgcfc
	}
	return nil
}

type CT_LineJoinMiterProperties struct{ LimAttr *ST_PositivePercentage }

func (_fdacg *CT_GroupLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdacg.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoGrpAttr))})
	}
	if _fdacg.NoUngrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0055\u006e\u0067\u0072\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoUngrpAttr))})
	}
	if _fdacg.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoSelectAttr))})
	}
	if _fdacg.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoRotAttr))})
	}
	if _fdacg.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoChangeAspectAttr))})
	}
	if _fdacg.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoMoveAttr))})
	}
	if _fdacg.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fdacg.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _fdacg.ExtLst != nil {
		_geebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdacg.ExtLst, _geebf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_BevelPresetType byte
type CT_GeomGuideList struct{ Gd []*CT_GeomGuide }

func NewCT_BiLevelEffect() *CT_BiLevelEffect { _feac := &CT_BiLevelEffect{}; return _feac }
func NewCT_TextSpacingPercent() *CT_TextSpacingPercent {
	_egcae := &CT_TextSpacingPercent{}
	return _egcae
}
func (_ccdf *CT_GradientStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ebccf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0073"}}
	for _, _gdgdb := range _ccdf.Gs {
		e.EncodeElement(_gdgdb, _ebccf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_facfb ST_TextWrappingType) String() string {
	switch _facfb {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return ""
}

// ValidateWithPath validates the CT_EmptyElement and its children, prefixing error messages with path
func (_cbfg *CT_EmptyElement) ValidateWithPath(path string) error { return nil }

type CT_Scene3D struct {
	Camera   *CT_Camera
	LightRig *CT_LightRig
	Backdrop *CT_Backdrop
	ExtLst   *CT_OfficeArtExtensionList
}

func NewCT_EffectStyleList() *CT_EffectStyleList { _fcac := &CT_EffectStyleList{}; return _fcac }
func (_dbfa *CT_DuotoneEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_acafe:
	for {
		_fccc, _cgfa := d.Token()
		if _cgfa != nil {
			return _cgfa
		}
		switch _edcb := _fccc.(type) {
		case _d.StartElement:
			switch _edcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_fddb := NewEG_ColorChoice()
				_fddb.ScrgbClr = NewCT_ScRgbColor()
				if _gdfed := d.DecodeElement(_fddb.ScrgbClr, &_edcb); _gdfed != nil {
					return _gdfed
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _fddb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dbge := NewEG_ColorChoice()
				_dbge.SrgbClr = NewCT_SRgbColor()
				if _abafa := d.DecodeElement(_dbge.SrgbClr, &_edcb); _abafa != nil {
					return _abafa
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _dbge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ccgcf := NewEG_ColorChoice()
				_ccgcf.HslClr = NewCT_HslColor()
				if _agbe := d.DecodeElement(_ccgcf.HslClr, &_edcb); _agbe != nil {
					return _agbe
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _ccgcf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gddb := NewEG_ColorChoice()
				_gddb.SysClr = NewCT_SystemColor()
				if _ccdb := d.DecodeElement(_gddb.SysClr, &_edcb); _ccdb != nil {
					return _ccdb
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _gddb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gdcg := NewEG_ColorChoice()
				_gdcg.SchemeClr = NewCT_SchemeColor()
				if _cfab := d.DecodeElement(_gdcg.SchemeClr, &_edcb); _cfab != nil {
					return _cfab
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _gdcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ecbbf := NewEG_ColorChoice()
				_ecbbf.PrstClr = NewCT_PresetColor()
				if _gedga := d.DecodeElement(_ecbbf.PrstClr, &_edcb); _gedga != nil {
					return _gedga
				}
				_dbfa.EG_ColorChoice = append(_dbfa.EG_ColorChoice, _ecbbf)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0075\u006f\u0074\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025v", _edcb.Name)
				if _fbcg := d.Skip(); _fbcg != nil {
					return _fbcg
				}
			}
		case _d.EndElement:
			break _acafe
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextField and its children
func (_agedd *CT_TextField) Validate() error {
	return _agedd.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064")
}

type CT_AlphaModulateEffect struct{ Cont *CT_EffectContainer }

func (_cdgba ST_ShapeType) String() string {
	switch _cdgba {
	case 0:
		return ""
	case 1:
		return "\u006c\u0069\u006e\u0065"
	case 2:
		return "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case 3:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 4:
		return "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "\u0072\u0065\u0063\u0074"
	case 6:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 7:
		return "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case 8:
		return "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case 9:
		return "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case 10:
		return "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case 11:
		return "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case 12:
		return "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case 13:
		return "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case 14:
		return "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case 15:
		return "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case 16:
		return "\u0073\u0074\u0061r\u0034"
	case 17:
		return "\u0073\u0074\u0061r\u0035"
	case 18:
		return "\u0073\u0074\u0061r\u0036"
	case 19:
		return "\u0073\u0074\u0061r\u0037"
	case 20:
		return "\u0073\u0074\u0061r\u0038"
	case 21:
		return "\u0073\u0074\u0061\u0072\u0031\u0030"
	case 22:
		return "\u0073\u0074\u0061\u0072\u0031\u0032"
	case 23:
		return "\u0073\u0074\u0061\u0072\u0031\u0036"
	case 24:
		return "\u0073\u0074\u0061\u0072\u0032\u0034"
	case 25:
		return "\u0073\u0074\u0061\u0072\u0033\u0032"
	case 26:
		return "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case 27:
		return "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case 28:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case 29:
		return "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case 30:
		return "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case 31:
		return "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case 32:
		return "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case 33:
		return "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case 34:
		return "\u0070\u006c\u0061\u0071\u0075\u0065"
	case 35:
		return "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case 36:
		return "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case 37:
		return "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case 38:
		return "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case 39:
		return "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case 40:
		return "\u0070\u0069\u0065"
	case 41:
		return "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case 42:
		return "\u0064\u006f\u006eu\u0074"
	case 43:
		return "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case 44:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 45:
		return "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case 46:
		return "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case 47:
		return "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case 48:
		return "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 49:
		return "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 50:
		return "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 51:
		return "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case 52:
		return "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 53:
		return "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 54:
		return "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 55:
		return "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case 56:
		return "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 57:
		return "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 58:
		return "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case 59:
		return "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 60:
		return "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 61:
		return "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case 62:
		return "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 63:
		return "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case 64:
		return "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case 65:
		return "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case 66:
		return "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case 67:
		return "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case 68:
		return "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case 69:
		return "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case 70:
		return "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case 71:
		return "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case 72:
		return "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case 73:
		return "\u0063\u0075\u0062\u0065"
	case 74:
		return "\u0063\u0061\u006e"
	case 75:
		return "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case 76:
		return "\u0068\u0065\u0061r\u0074"
	case 77:
		return "\u0073\u0075\u006e"
	case 78:
		return "\u006d\u006f\u006f\u006e"
	case 79:
		return "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case 80:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case 81:
		return "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case 82:
		return "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case 83:
		return "\u0062\u0065\u0076e\u006c"
	case 84:
		return "\u0066\u0072\u0061m\u0065"
	case 85:
		return "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case 86:
		return "\u0063\u006f\u0072\u006e\u0065\u0072"
	case 87:
		return "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case 88:
		return "\u0063\u0068\u006fr\u0064"
	case 89:
		return "\u0061\u0072\u0063"
	case 90:
		return "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 91:
		return "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case 92:
		return "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case 93:
		return "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case 94:
		return "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case 95:
		return "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case 96:
		return "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case 97:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case 98:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case 99:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case 100:
		return "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case 101:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case 102:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case 103:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case 104:
		return "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case 105:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case 106:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case 107:
		return "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case 108:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 109:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 110:
		return "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 111:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case 112:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case 113:
		return "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case 114:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case 115:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case 116:
		return "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case 117:
		return "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 118:
		return "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case 119:
		return "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 120:
		return "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case 121:
		return "\u0063\u006c\u006fu\u0064"
	case 122:
		return "\u0072\u0069\u0062\u0062\u006f\u006e"
	case 123:
		return "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case 124:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case 125:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case 126:
		return "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case 127:
		return "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case 128:
		return "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case 129:
		return "\u0077\u0061\u0076\u0065"
	case 130:
		return "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case 131:
		return "\u0070\u006c\u0075\u0073"
	case 132:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case 133:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case 134:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case 135:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case 136:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 137:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case 138:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case 139:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case 140:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case 141:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case 142:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case 143:
		return "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case 144:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case 145:
		return "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case 146:
		return "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case 147:
		return "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case 148:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case 149:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case 150:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case 151:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case 152:
		return "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case 153:
		return "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case 154:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case 155:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case 156:
		return "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case 157:
		return "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case 158:
		return "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case 159:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case 160:
		return "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case 161:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case 162:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case 163:
		return "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case 164:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case 165:
		return "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case 166:
		return "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case 167:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case 168:
		return "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case 169:
		return "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case 170:
		return "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case 171:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case 172:
		return "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case 173:
		return "\u0067\u0065\u0061r\u0036"
	case 174:
		return "\u0067\u0065\u0061r\u0039"
	case 175:
		return "\u0066\u0075\u006e\u006e\u0065\u006c"
	case 176:
		return "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case 177:
		return "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case 178:
		return "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case 179:
		return "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case 180:
		return "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case 181:
		return "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case 182:
		return "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case 183:
		return "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case 184:
		return "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case 185:
		return "\u0063\u0068\u0061\u0072\u0074\u0058"
	case 186:
		return "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case 187:
		return "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return ""
}

type CT_ShapeStyle struct {
	LnRef     *CT_StyleMatrixReference
	FillRef   *CT_StyleMatrixReference
	EffectRef *CT_StyleMatrixReference
	FontRef   *CT_FontReference
}

const (
	ST_PresetMaterialTypeUnset             ST_PresetMaterialType = 0
	ST_PresetMaterialTypeLegacyMatte       ST_PresetMaterialType = 1
	ST_PresetMaterialTypeLegacyPlastic     ST_PresetMaterialType = 2
	ST_PresetMaterialTypeLegacyMetal       ST_PresetMaterialType = 3
	ST_PresetMaterialTypeLegacyWireframe   ST_PresetMaterialType = 4
	ST_PresetMaterialTypeMatte             ST_PresetMaterialType = 5
	ST_PresetMaterialTypePlastic           ST_PresetMaterialType = 6
	ST_PresetMaterialTypeMetal             ST_PresetMaterialType = 7
	ST_PresetMaterialTypeWarmMatte         ST_PresetMaterialType = 8
	ST_PresetMaterialTypeTranslucentPowder ST_PresetMaterialType = 9
	ST_PresetMaterialTypePowder            ST_PresetMaterialType = 10
	ST_PresetMaterialTypeDkEdge            ST_PresetMaterialType = 11
	ST_PresetMaterialTypeSoftEdge          ST_PresetMaterialType = 12
	ST_PresetMaterialTypeClear             ST_PresetMaterialType = 13
	ST_PresetMaterialTypeFlat              ST_PresetMaterialType = 14
	ST_PresetMaterialTypeSoftmetal         ST_PresetMaterialType = 15
)

func (_cgbb *CT_GlowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gcga := range start.Attr {
		if _gcga.Name.Local == "\u0072\u0061\u0064" {
			_dcebe, _baaff := _cd.ParseInt(_gcga.Value, 10, 64)
			if _baaff != nil {
				return _baaff
			}
			_cgbb.RadAttr = &_dcebe
			continue
		}
	}
_fgaag:
	for {
		_bgde, _gcfe := d.Token()
		if _gcfe != nil {
			return _gcfe
		}
		switch _ecfee := _bgde.(type) {
		case _d.StartElement:
			switch _ecfee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cgbb.ScrgbClr = NewCT_ScRgbColor()
				if _egaad := d.DecodeElement(_cgbb.ScrgbClr, &_ecfee); _egaad != nil {
					return _egaad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cgbb.SrgbClr = NewCT_SRgbColor()
				if _ccfdc := d.DecodeElement(_cgbb.SrgbClr, &_ecfee); _ccfdc != nil {
					return _ccfdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cgbb.HslClr = NewCT_HslColor()
				if _cbcgd := d.DecodeElement(_cgbb.HslClr, &_ecfee); _cbcgd != nil {
					return _cbcgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cgbb.SysClr = NewCT_SystemColor()
				if _ebda := d.DecodeElement(_cgbb.SysClr, &_ecfee); _ebda != nil {
					return _ebda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cgbb.SchemeClr = NewCT_SchemeColor()
				if _abcb := d.DecodeElement(_cgbb.SchemeClr, &_ecfee); _abcb != nil {
					return _abcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cgbb.PrstClr = NewCT_PresetColor()
				if _aggf := d.DecodeElement(_cgbb.PrstClr, &_ecfee); _aggf != nil {
					return _aggf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047l\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _ecfee.Name)
				if _bfabf := d.Skip(); _bfabf != nil {
					return _bfabf
				}
			}
		case _d.EndElement:
			break _fgaag
		case _d.CharData:
		}
	}
	return nil
}
func (_dfege ST_ColorSchemeIndex) String() string {
	switch _dfege {
	case 0:
		return ""
	case 1:
		return "\u0064\u006b\u0031"
	case 2:
		return "\u006c\u0074\u0031"
	case 3:
		return "\u0064\u006b\u0032"
	case 4:
		return "\u006c\u0074\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return ""
}

// ValidateWithPath validates the CT_AnimationElementChoice and its children, prefixing error messages with path
func (_gac *CT_AnimationElementChoice) ValidateWithPath(path string) error {
	if _gac.Dgm != nil {
		if _eaac := _gac.Dgm.ValidateWithPath(path + "\u002f\u0044\u0067\u006d"); _eaac != nil {
			return _eaac
		}
	}
	if _gac.Chart != nil {
		if _gbecc := _gac.Chart.ValidateWithPath(path + "\u002f\u0043\u0068\u0061\u0072\u0074"); _gbecc != nil {
			return _gbecc
		}
	}
	return nil
}

const (
	ST_LineCapUnset ST_LineCap = 0
	ST_LineCapRnd   ST_LineCap = 1
	ST_LineCapSq    ST_LineCap = 2
	ST_LineCapFlat  ST_LineCap = 3
)

type CT_TextUnderlineFillGroupWrapper struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_ddcff *CT_TextNormalAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddcff.FontScaleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce"}, Value: _e.Sprintf("\u0025\u0076", *_ddcff.FontScaleAttr)})
	}
	if _ddcff.LnSpcReductionAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e"}, Value: _e.Sprintf("\u0025\u0076", *_ddcff.LnSpcReductionAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ST_TextPoint is a union type
type ST_TextPoint struct {
	ST_TextPointUnqualified *int32
	ST_UniversalMeasure     *string
}
type CT_TextNoAutofit struct{}

func NewCT_DefaultShapeDefinition() *CT_DefaultShapeDefinition {
	_adcead := &CT_DefaultShapeDefinition{}
	_adcead.SpPr = NewCT_ShapeProperties()
	_adcead.BodyPr = NewCT_TextBodyProperties()
	_adcead.LstStyle = NewCT_TextListStyle()
	return _adcead
}

// Validate validates the CT_Connection and its children
func (_ccbf *CT_Connection) Validate() error {
	return _ccbf.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e")
}

type ST_TextWrappingType byte
type CT_HSLEffect struct {
	HueAttr *int32
	SatAttr *ST_FixedPercentage
	LumAttr *ST_FixedPercentage
}

// Validate validates the CT_LineProperties and its children
func (_gcafb *CT_LineProperties) Validate() error {
	return _gcafb.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func NewCT_TableStyleList() *CT_TableStyleList {
	_afgbb := &CT_TableStyleList{}
	_afgbb.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _afgbb
}

// Validate validates the CT_TableCol and its children
func (_aeeaa *CT_TableCol) Validate() error {
	return _aeeaa.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c")
}

// Validate validates the CT_OfficeArtExtension and its children
func (_dggbde *CT_OfficeArtExtension) Validate() error {
	return _dggbde.ValidateWithPath("C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e")
}
func (_bbdc *CT_PositiveFixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _bbdc.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AnimationGraphicalObjectBuildProperties and its children, prefixing error messages with path
func (_egb *CT_AnimationGraphicalObjectBuildProperties) ValidateWithPath(path string) error {
	if _egb.BldDgm != nil {
		if _cfdf := _egb.BldDgm.ValidateWithPath(path + "\u002fB\u006c\u0064\u0044\u0067\u006d"); _cfdf != nil {
			return _cfdf
		}
	}
	if _egb.BldChart != nil {
		if _aegc := _egb.BldChart.ValidateWithPath(path + "\u002fB\u006c\u0064\u0043\u0068\u0061\u0072t"); _aegc != nil {
			return _aegc
		}
	}
	return nil
}

type CT_TableStyleTextStyle struct {
	BAttr     ST_OnOffStyleType
	IAttr     ST_OnOffStyleType
	Font      *CT_FontCollection
	FontRef   *CT_FontReference
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
	ExtLst    *CT_OfficeArtExtensionList
}

// Validate validates the CT_FillStyleList and its children
func (_eace *CT_FillStyleList) Validate() error {
	return _eace.ValidateWithPath("\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}
func (_eeec *CT_Bevel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eeec.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _e.Sprintf("\u0025\u0076", *_eeec.WAttr)})
	}
	if _eeec.HAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _e.Sprintf("\u0025\u0076", *_eeec.HAttr)})
	}
	if _eeec.PrstAttr != ST_BevelPresetTypeUnset {
		_eabd, _fbbg := _eeec.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _fbbg != nil {
			return _fbbg
		}
		start.Attr = append(start.Attr, _eabd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GammaTransform() *CT_GammaTransform { _gdee := &CT_GammaTransform{}; return _gdee }

type CT_TableStyle struct {
	StyleIdAttr   string
	StyleNameAttr string
	TblBg         *CT_TableBackgroundStyle
	WholeTbl      *CT_TablePartStyle
	Band1H        *CT_TablePartStyle
	Band2H        *CT_TablePartStyle
	Band1V        *CT_TablePartStyle
	Band2V        *CT_TablePartStyle
	LastCol       *CT_TablePartStyle
	FirstCol      *CT_TablePartStyle
	LastRow       *CT_TablePartStyle
	SeCell        *CT_TablePartStyle
	SwCell        *CT_TablePartStyle
	FirstRow      *CT_TablePartStyle
	NeCell        *CT_TablePartStyle
	NwCell        *CT_TablePartStyle
	ExtLst        *CT_OfficeArtExtensionList
}

func (_gceba ST_TextHorzOverflowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gceba.String(), start)
}
func (_fbafe *EG_Geometry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbafe.CustGeom != nil {
		_cdeaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fbafe.CustGeom, _cdeaa)
	}
	if _fbafe.PrstGeom != nil {
		_ecefbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_fbafe.PrstGeom, _ecefbc)
	}
	return nil
}

type CT_LineProperties struct {
	WAttr     *int32
	CapAttr   ST_LineCap
	CmpdAttr  ST_CompoundLine
	AlgnAttr  ST_PenAlignment
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
	PrstDash  *CT_PresetLineDashProperties
	CustDash  *CT_DashStopList
	Round     *CT_LineJoinRound
	Bevel     *CT_LineJoinBevel
	Miter     *CT_LineJoinMiterProperties
	HeadEnd   *CT_LineEndProperties
	TailEnd   *CT_LineEndProperties
	ExtLst    *CT_OfficeArtExtensionList
}

func (_fadaeg *CT_Ratio) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e"}, Value: _e.Sprintf("\u0025\u0076", _fadaeg.NAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064"}, Value: _e.Sprintf("\u0025\u0076", _fadaeg.DAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_RectAlignmentUnset ST_RectAlignment = 0
	ST_RectAlignmentTl    ST_RectAlignment = 1
	ST_RectAlignmentT     ST_RectAlignment = 2
	ST_RectAlignmentTr    ST_RectAlignment = 3
	ST_RectAlignmentL     ST_RectAlignment = 4
	ST_RectAlignmentCtr   ST_RectAlignment = 5
	ST_RectAlignmentR     ST_RectAlignment = 6
	ST_RectAlignmentBl    ST_RectAlignment = 7
	ST_RectAlignmentB     ST_RectAlignment = 8
	ST_RectAlignmentBr    ST_RectAlignment = 9
)

// Validate validates the CT_CustomColor and its children
func (_dgbd *CT_CustomColor) Validate() error {
	return _dgbd.ValidateWithPath("\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_GvmlGraphicFrameNonVisual and its children
func (_abebe *CT_GvmlGraphicFrameNonVisual) Validate() error {
	return _abebe.ValidateWithPath("\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c")
}

// Validate validates the EG_TextGeometry and its children
func (_bgeec *EG_TextGeometry) Validate() error {
	return _bgeec.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}
func NewCT_TableCell() *CT_TableCell { _cgfgd := &CT_TableCell{}; return _cgfgd }

// Validate validates the CT_AnimationDgmElement and its children
func (_cfba *CT_AnimationDgmElement) Validate() error {
	return _cfba.ValidateWithPath("\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074")
}
func (_geffa *ST_PositiveFixedPercentage) ValidateWithPath(path string) error {
	_bcdf := []string{}
	if _geffa.ST_PositiveFixedPercentageDecimal != nil {
		_bcdf = append(_bcdf, "\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063e\u006e\u0074\u0061\u0067\u0065\u0044\u0065c\u0069\u006d\u0061\u006c")
	}
	if _geffa.ST_PositiveFixedPercentage != nil {
		if _bgebe := _geffa.ST_PositiveFixedPercentage.ValidateWithPath(path + "/\u0053\u0054\u005f\u0050\u006f\u0073i\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063e\u006et\u0061\u0067\u0065"); _bgebe != nil {
			return _bgebe
		}
		_bcdf = append(_bcdf, "\u0053\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
	}
	if len(_bcdf) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bcdf)
	}
	return nil
}

// Validate validates the CT_TextAutonumberBullet and its children
func (_fcgae *CT_TextAutonumberBullet) Validate() error {
	return _fcgae.ValidateWithPath("\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074")
}
func (_dgac *CT_InverseGammaTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextAutofit and its children, prefixing error messages with path
func (_aedad *EG_TextAutofit) ValidateWithPath(path string) error {
	if _aedad.NoAutofit != nil {
		if _eefdgd := _aedad.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _eefdgd != nil {
			return _eefdgd
		}
	}
	if _aedad.NormAutofit != nil {
		if _fgfgd := _aedad.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _fgfgd != nil {
			return _fgfgd
		}
	}
	if _aedad.SpAutoFit != nil {
		if _cgdeg := _aedad.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _cgdeg != nil {
			return _cgdeg
		}
	}
	return nil
}

// Validate validates the CT_GvmlConnectorNonVisual and its children
func (_feggg *CT_GvmlConnectorNonVisual) Validate() error {
	return _feggg.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l")
}
func (_cegca *CT_PresetShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cegca.PrstAttr = ST_PresetShadowVal(1)
	for _, _begee := range start.Attr {
		if _begee.Name.Local == "\u0070\u0072\u0073\u0074" {
			_cegca.PrstAttr.UnmarshalXMLAttr(_begee)
			continue
		}
		if _begee.Name.Local == "\u0064\u0069\u0073\u0074" {
			_dfeg, _bcdc := _cd.ParseInt(_begee.Value, 10, 64)
			if _bcdc != nil {
				return _bcdc
			}
			_cegca.DistAttr = &_dfeg
			continue
		}
		if _begee.Name.Local == "\u0064\u0069\u0072" {
			_ccagca, _fagdc := _cd.ParseInt(_begee.Value, 10, 32)
			if _fagdc != nil {
				return _fagdc
			}
			_fgbea := int32(_ccagca)
			_cegca.DirAttr = &_fgbea
			continue
		}
	}
_gcacca:
	for {
		_cbfa, _bbdbe := d.Token()
		if _bbdbe != nil {
			return _bbdbe
		}
		switch _bfbd := _cbfa.(type) {
		case _d.StartElement:
			switch _bfbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cegca.ScrgbClr = NewCT_ScRgbColor()
				if _cdddg := d.DecodeElement(_cegca.ScrgbClr, &_bfbd); _cdddg != nil {
					return _cdddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cegca.SrgbClr = NewCT_SRgbColor()
				if _dbdbd := d.DecodeElement(_cegca.SrgbClr, &_bfbd); _dbdbd != nil {
					return _dbdbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cegca.HslClr = NewCT_HslColor()
				if _fcdcg := d.DecodeElement(_cegca.HslClr, &_bfbd); _fcdcg != nil {
					return _fcdcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cegca.SysClr = NewCT_SystemColor()
				if _deeaa := d.DecodeElement(_cegca.SysClr, &_bfbd); _deeaa != nil {
					return _deeaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cegca.SchemeClr = NewCT_SchemeColor()
				if _aabe := d.DecodeElement(_cegca.SchemeClr, &_bfbd); _aabe != nil {
					return _aabe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cegca.PrstClr = NewCT_PresetColor()
				if _abed := d.DecodeElement(_cegca.PrstClr, &_bfbd); _abed != nil {
					return _abed
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _bfbd.Name)
				if _gaedg := d.Skip(); _gaedg != nil {
					return _gaedg
				}
			}
		case _d.EndElement:
			break _gcacca
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Table() *CT_Table {
	_cedfca := &CT_Table{}
	_cedfca.TblGrid = NewCT_TableGrid()
	return _cedfca
}
func (_gfbgg ST_LightRigType) Validate() error { return _gfbgg.ValidateWithPath("") }

type EG_TextBulletSize struct {
	BuSzTx  *CT_TextBulletSizeFollowText
	BuSzPct *CT_TextBulletSizePercent
	BuSzPts *CT_TextBulletSizePoint
}

// ValidateWithPath validates the CT_ShapeStyle and its children, prefixing error messages with path
func (_aede *CT_ShapeStyle) ValidateWithPath(path string) error {
	if _bafaa := _aede.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _bafaa != nil {
		return _bafaa
	}
	if _aeceg := _aede.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _aeceg != nil {
		return _aeceg
	}
	if _gaaba := _aede.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _gaaba != nil {
		return _gaaba
	}
	if _ccfc := _aede.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _ccfc != nil {
		return _ccfc
	}
	return nil
}
func (_gacf *CT_LineStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cfcgf:
	for {
		_efbg, _bcadf := d.Token()
		if _bcadf != nil {
			return _bcadf
		}
		switch _fgfg := _efbg.(type) {
		case _d.StartElement:
			switch _fgfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_fdee := NewCT_LineProperties()
				if _fcedd := d.DecodeElement(_fdee, &_fgfg); _fcedd != nil {
					return _fcedd
				}
				_gacf.Ln = append(_gacf.Ln, _fdee)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _fgfg.Name)
				if _eeed := d.Skip(); _eeed != nil {
					return _eeed
				}
			}
		case _d.EndElement:
			break _cfcgf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_GradientFillProperties() *CT_GradientFillProperties {
	_cfgdb := &CT_GradientFillProperties{}
	return _cfgdb
}

type CT_BlipChoice struct {
	AlphaBiLevel []*CT_AlphaBiLevelEffect
	AlphaCeiling []*CT_AlphaCeilingEffect
	AlphaFloor   []*CT_AlphaFloorEffect
	AlphaInv     []*CT_AlphaInverseEffect
	AlphaMod     []*CT_AlphaModulateEffect
	AlphaModFix  []*CT_AlphaModulateFixedEffect
	AlphaRepl    []*CT_AlphaReplaceEffect
	BiLevel      []*CT_BiLevelEffect
	Blur         []*CT_BlurEffect
	ClrChange    []*CT_ColorChangeEffect
	ClrRepl      []*CT_ColorReplaceEffect
	Duotone      []*CT_DuotoneEffect
	FillOverlay  []*CT_FillOverlayEffect
	Grayscl      []*CT_GrayscaleEffect
	Hsl          []*CT_HSLEffect
	Lum          []*CT_LuminanceEffect
	Tint         []*CT_TintEffect
}

const (
	ST_DgmBuildStepUnset ST_DgmBuildStep = 0
	ST_DgmBuildStepSp    ST_DgmBuildStep = 1
	ST_DgmBuildStepBg    ST_DgmBuildStep = 2
)

type CT_GroupTransform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
	ChOff     *CT_Point2D
	ChExt     *CT_PositiveSize2D
}

func (_bbbfg *ST_AnimationBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bbbfg = 0
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_bbbfg = 1
	}
	return nil
}
func (_ffa *CT_ColorMRU) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ffa.EG_ColorChoice != nil {
		for _, _cedc := range _ffa.EG_ColorChoice {
			_cedc.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShape and its children, prefixing error messages with path
func (_fgeaf *CT_GvmlGroupShape) ValidateWithPath(path string) error {
	if _cafdc := _fgeaf.NvGrpSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _cafdc != nil {
		return _cafdc
	}
	if _gecad := _fgeaf.GrpSpPr.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _gecad != nil {
		return _gecad
	}
	for _afbbb, _gffac := range _fgeaf.Choice {
		if _caade := _gffac.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _afbbb)); _caade != nil {
			return _caade
		}
	}
	if _fgeaf.ExtLst != nil {
		if _babda := _fgeaf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _babda != nil {
			return _babda
		}
	}
	return nil
}

// ST_Coordinate32 is a union type
type ST_Coordinate32 struct {
	ST_Coordinate32Unqualified *int32
	ST_UniversalMeasure        *string
}

func (_beefbd *ThemeOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_beefbd.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
_cccbc:
	for {
		_ggbcb, _ebfdd := d.Token()
		if _ebfdd != nil {
			return _ebfdd
		}
		switch _agbdb := _ggbcb.(type) {
		case _d.StartElement:
			switch _agbdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_beefbd.ClrScheme = NewCT_ColorScheme()
				if _ebfdde := d.DecodeElement(_beefbd.ClrScheme, &_agbdb); _ebfdde != nil {
					return _ebfdde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_beefbd.FontScheme = NewCT_FontScheme()
				if _cdcbb := d.DecodeElement(_beefbd.FontScheme, &_agbdb); _cdcbb != nil {
					return _cdcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_beefbd.FmtScheme = NewCT_StyleMatrix()
				if _fgdfgbg := d.DecodeElement(_beefbd.FmtScheme, &_agbdb); _fgdfgbg != nil {
					return _fgdfgbg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0068\u0065\u006de\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065 \u0025\u0076", _agbdb.Name)
				if _cgaee := d.Skip(); _cgaee != nil {
					return _cgaee
				}
			}
		case _d.EndElement:
			break _cccbc
		case _d.CharData:
		}
	}
	return nil
}
func (_ceb *CT_AlphaModulateFixedEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ceb.AmtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006d\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_ceb.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Headers struct{ Header []string }

func (_cbggg *EG_EffectProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ccaed:
	for {
		_cfggb, _gbeeca := d.Token()
		if _gbeeca != nil {
			return _gbeeca
		}
		switch _gebcgb := _cfggb.(type) {
		case _d.StartElement:
			switch _gebcgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_cbggg.EffectLst = NewCT_EffectList()
				if _fabgd := d.DecodeElement(_cbggg.EffectLst, &_gebcgb); _fabgd != nil {
					return _fabgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_cbggg.EffectDag = NewCT_EffectContainer()
				if _dcfec := d.DecodeElement(_cbggg.EffectDag, &_gebcgb); _dcfec != nil {
					return _dcfec
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u0047\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gebcgb.Name)
				if _eeffe := d.Skip(); _eeffe != nil {
					return _eeffe
				}
			}
		case _d.EndElement:
			break _ccaed
		case _d.CharData:
		}
	}
	return nil
}
func NewEG_ThemeableFillStyle() *EG_ThemeableFillStyle {
	_ffbecf := &EG_ThemeableFillStyle{}
	return _ffbecf
}
func (_aefdg *CT_CustomGeometry2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aefdg.PathLst = NewCT_Path2DList()
_cgfe:
	for {
		_dcbbc, _ceceg := d.Token()
		if _ceceg != nil {
			return _ceceg
		}
		switch _adgca := _dcbbc.(type) {
		case _d.StartElement:
			switch _adgca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_aefdg.AvLst = NewCT_GeomGuideList()
				if _ccagc := d.DecodeElement(_aefdg.AvLst, &_adgca); _ccagc != nil {
					return _ccagc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064\u004cs\u0074"}:
				_aefdg.GdLst = NewCT_GeomGuideList()
				if _abgf := d.DecodeElement(_aefdg.GdLst, &_adgca); _abgf != nil {
					return _abgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u004cs\u0074"}:
				_aefdg.AhLst = NewCT_AdjustHandleList()
				if _gcfa := d.DecodeElement(_aefdg.AhLst, &_adgca); _gcfa != nil {
					return _gcfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u004c\u0073\u0074"}:
				_aefdg.CxnLst = NewCT_ConnectionSiteList()
				if _ceda := d.DecodeElement(_aefdg.CxnLst, &_adgca); _ceda != nil {
					return _ceda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0063\u0074"}:
				_aefdg.Rect = NewCT_GeomRect()
				if _bbbc := d.DecodeElement(_aefdg.Rect, &_adgca); _bbbc != nil {
					return _bbbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070a\u0074\u0068\u004c\u0073\u0074"}:
				if _cggg := d.DecodeElement(_aefdg.PathLst, &_adgca); _cggg != nil {
					return _cggg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006d\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _adgca.Name)
				if _bdbf := d.Skip(); _bdbf != nil {
					return _bdbf
				}
			}
		case _d.EndElement:
			break _cgfe
		case _d.CharData:
		}
	}
	return nil
}
func (_abeda ST_PresetShadowVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_abeda.String(), start)
}

// ValidateWithPath validates the CT_PolarAdjustHandle and its children, prefixing error messages with path
func (_aeagd *CT_PolarAdjustHandle) ValidateWithPath(path string) error {
	if _aeagd.MinRAttr != nil {
		if _ecaaf := _aeagd.MinRAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0052\u0041\u0074\u0074r"); _ecaaf != nil {
			return _ecaaf
		}
	}
	if _aeagd.MaxRAttr != nil {
		if _fdafg := _aeagd.MaxRAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0052\u0041\u0074\u0074r"); _fdafg != nil {
			return _fdafg
		}
	}
	if _aeagd.MinAngAttr != nil {
		if _aafa := _aeagd.MinAngAttr.ValidateWithPath(path + "/\u004d\u0069\u006e\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _aafa != nil {
			return _aafa
		}
	}
	if _aeagd.MaxAngAttr != nil {
		if _efgca := _aeagd.MaxAngAttr.ValidateWithPath(path + "/\u004d\u0061\u0078\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _efgca != nil {
			return _efgca
		}
	}
	if _bbcacg := _aeagd.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _bbcacg != nil {
		return _bbcacg
	}
	return nil
}

// Validate validates the CT_AnimationChartBuildProperties and its children
func (_fcd *CT_AnimationChartBuildProperties) Validate() error {
	return _fcd.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_TableBackgroundStyle() *CT_TableBackgroundStyle {
	_addaeb := &CT_TableBackgroundStyle{}
	return _addaeb
}

// ValidateWithPath validates the CT_TextNormalAutofit and its children, prefixing error messages with path
func (_ecbac *CT_TextNormalAutofit) ValidateWithPath(path string) error {
	if _ecbac.FontScaleAttr != nil {
		if _ededf := _ecbac.FontScaleAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006ce\u0041\u0074\u0074\u0072"); _ededf != nil {
			return _ededf
		}
	}
	if _ecbac.LnSpcReductionAttr != nil {
		if _edcab := _ecbac.LnSpcReductionAttr.ValidateWithPath(path + "\u002f\u004c\u006e\u0053pc\u0052\u0065\u0064\u0075\u0063\u0074\u0069\u006f\u006e\u0041\u0074\u0074\u0072"); _edcab != nil {
			return _edcab
		}
	}
	return nil
}

type CT_PositivePercentage struct{ ValAttr ST_PositivePercentage }

func NewCT_TextLineBreak() *CT_TextLineBreak { _dbdff := &CT_TextLineBreak{}; return _dbdff }
func NewCT_GvmlShapeNonVisual() *CT_GvmlShapeNonVisual {
	_bcfge := &CT_GvmlShapeNonVisual{}
	_bcfge.CNvPr = NewCT_NonVisualDrawingProps()
	_bcfge.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
	return _bcfge
}
func (_fggd *CT_GvmlTextShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cdeae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
	e.EncodeElement(_fggd.TxBody, _cdeae)
	if _fggd.Choice != nil {
		_fggd.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _fggd.ExtLst != nil {
		_affb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fggd.ExtLst, _affb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GroupShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_GroupTransform2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	ExtLst     *CT_OfficeArtExtensionList
}
type CT_BiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

func (_gagfb *CT_BlipChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gagfb.AlphaBiLevel != nil {
		_ggac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		for _, _cbgad := range _gagfb.AlphaBiLevel {
			e.EncodeElement(_cbgad, _ggac)
		}
	}
	if _gagfb.AlphaCeiling != nil {
		_dgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		for _, _bedg := range _gagfb.AlphaCeiling {
			e.EncodeElement(_bedg, _dgb)
		}
	}
	if _gagfb.AlphaFloor != nil {
		_feeff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		for _, _eae := range _gagfb.AlphaFloor {
			e.EncodeElement(_eae, _feeff)
		}
	}
	if _gagfb.AlphaInv != nil {
		_ddfee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		for _, _ffda := range _gagfb.AlphaInv {
			e.EncodeElement(_ffda, _ddfee)
		}
	}
	if _gagfb.AlphaMod != nil {
		_ecdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		for _, _ccccb := range _gagfb.AlphaMod {
			e.EncodeElement(_ccccb, _ecdd)
		}
	}
	if _gagfb.AlphaModFix != nil {
		_dbbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		for _, _bccc := range _gagfb.AlphaModFix {
			e.EncodeElement(_bccc, _dbbb)
		}
	}
	if _gagfb.AlphaRepl != nil {
		_bcfg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		for _, _bedc := range _gagfb.AlphaRepl {
			e.EncodeElement(_bedc, _bcfg)
		}
	}
	if _gagfb.BiLevel != nil {
		_dcdbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		for _, _bfec := range _gagfb.BiLevel {
			e.EncodeElement(_bfec, _dcdbc)
		}
	}
	if _gagfb.Blur != nil {
		_fad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		for _, _cgb := range _gagfb.Blur {
			e.EncodeElement(_cgb, _fad)
		}
	}
	if _gagfb.ClrChange != nil {
		_fdab := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		for _, _fece := range _gagfb.ClrChange {
			e.EncodeElement(_fece, _fdab)
		}
	}
	if _gagfb.ClrRepl != nil {
		_defb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		for _, _baed := range _gagfb.ClrRepl {
			e.EncodeElement(_baed, _defb)
		}
	}
	if _gagfb.Duotone != nil {
		_fbfc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		for _, _aggd := range _gagfb.Duotone {
			e.EncodeElement(_aggd, _fbfc)
		}
	}
	if _gagfb.FillOverlay != nil {
		_fgea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		for _, _cede := range _gagfb.FillOverlay {
			e.EncodeElement(_cede, _fgea)
		}
	}
	if _gagfb.Grayscl != nil {
		_afgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		for _, _gfa := range _gagfb.Grayscl {
			e.EncodeElement(_gfa, _afgb)
		}
	}
	if _gagfb.Hsl != nil {
		_gbdde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		for _, _bgfg := range _gagfb.Hsl {
			e.EncodeElement(_bgfg, _gbdde)
		}
	}
	if _gagfb.Lum != nil {
		_gdgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		for _, _acafa := range _gagfb.Lum {
			e.EncodeElement(_acafa, _gdgd)
		}
	}
	if _gagfb.Tint != nil {
		_cggf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		for _, _eef := range _gagfb.Tint {
			e.EncodeElement(_eef, _cggf)
		}
	}
	return nil
}
func NewCT_ColorMRU() *CT_ColorMRU { _debe := &CT_ColorMRU{}; return _debe }
func (_fdagcd *CT_TextTabStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fdagcd.Tab != nil {
		_eggca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074a\u0062"}}
		for _, _adefce := range _fdagcd.Tab {
			e.EncodeElement(_adefce, _eggca)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextCharacterProperties and its children
func (_agegf *CT_TextCharacterProperties) Validate() error {
	return _agegf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

// Validate validates the CT_Path2DArcTo and its children
func (_bcbfg *CT_Path2DArcTo) Validate() error {
	return _bcbfg.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f")
}

type CT_GvmlGroupShapeChoice struct {
	TxSp         []*CT_GvmlTextShape
	Sp           []*CT_GvmlShape
	CxnSp        []*CT_GvmlConnector
	Pic          []*CT_GvmlPicture
	GraphicFrame []*CT_GvmlGraphicalObjectFrame
	GrpSp        []*CT_GvmlGroupShape
}

// ValidateWithPath validates the CT_AdjustHandleList and its children, prefixing error messages with path
func (_ccb *CT_AdjustHandleList) ValidateWithPath(path string) error {
	for _dfd, _dad := range _ccb.AhXY {
		if _cca := _dad.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0041\u0068\u0058\u0059\u005b\u0025\u0064\u005d", path, _dfd)); _cca != nil {
			return _cca
		}
	}
	for _cdg, _ggf := range _ccb.AhPolar {
		if _cg := _ggf.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0041\u0068\u0050\u006f\u006c\u0061r\u005b\u0025\u0064\u005d", path, _cdg)); _cg != nil {
			return _cg
		}
	}
	return nil
}

// Validate validates the CT_NonVisualContentPartProperties and its children
func (_egaede *CT_NonVisualContentPartProperties) Validate() error {
	return _egaede.ValidateWithPath("\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}
func ParseUnionST_AdjCoordinate(s string) (ST_AdjCoordinate, error) {
	_cabbd := ST_AdjCoordinate{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_cabbd.ST_Coordinate = &ST_Coordinate{}
		_cabbd.ST_Coordinate.ST_UniversalMeasure = &s
	} else {
		_fedcf, _dccbee := _cd.ParseInt(s, 10, 64)
		if _dccbee != nil {
			_cabbd.ST_GeomGuideName = &s
		} else {
			_cabbd.ST_Coordinate = &ST_Coordinate{}
			_cabbd.ST_Coordinate.ST_CoordinateUnqualified = &_fedcf
		}
	}
	return _cabbd, nil
}

// Validate validates the ThemeManager and its children
func (_bbcgcg *ThemeManager) Validate() error {
	return _bbcgcg.ValidateWithPath("\u0054\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072")
}

const (
	ST_CompoundLineUnset     ST_CompoundLine = 0
	ST_CompoundLineSng       ST_CompoundLine = 1
	ST_CompoundLineDbl       ST_CompoundLine = 2
	ST_CompoundLineThickThin ST_CompoundLine = 3
	ST_CompoundLineThinThick ST_CompoundLine = 4
	ST_CompoundLineTri       ST_CompoundLine = 5
)

// Validate validates the CT_Table and its children
func (_caceg *CT_Table) Validate() error {
	return _caceg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065")
}

// Validate validates the CT_GvmlUseShapeRectangle and its children
func (_bbef *CT_GvmlUseShapeRectangle) Validate() error {
	return _bbef.ValidateWithPath("\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065")
}
func (_gacdbc ST_Coordinate) String() string {
	if _gacdbc.ST_CoordinateUnqualified != nil {
		return _e.Sprintf("\u0025\u0076", *_gacdbc.ST_CoordinateUnqualified)
	}
	if _gacdbc.ST_UniversalMeasure != nil {
		return _e.Sprintf("\u0025\u0076", *_gacdbc.ST_UniversalMeasure)
	}
	return ""
}
func NewCT_NonVisualContentPartProperties() *CT_NonVisualContentPartProperties {
	_bgfd := &CT_NonVisualContentPartProperties{}
	return _bgfd
}
func NewCT_TextSpacing() *CT_TextSpacing { _ebaaf := &CT_TextSpacing{}; return _ebaaf }

// Validate validates the CT_TextBody and its children
func (_caff *CT_TextBody) Validate() error {
	return _caff.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079")
}

type CT_PresetLineDashProperties struct{ ValAttr ST_PresetLineDashVal }

func (_bbbb *CT_Transform2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gbbdb := range start.Attr {
		if _gbbdb.Name.Local == "\u0072\u006f\u0074" {
			_fcceb, _gdbbc := _cd.ParseInt(_gbbdb.Value, 10, 32)
			if _gdbbc != nil {
				return _gdbbc
			}
			_ccgbb := int32(_fcceb)
			_bbbb.RotAttr = &_ccgbb
			continue
		}
		if _gbbdb.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_aaace, _febcb := _cd.ParseBool(_gbbdb.Value)
			if _febcb != nil {
				return _febcb
			}
			_bbbb.FlipHAttr = &_aaace
			continue
		}
		if _gbbdb.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_eegaf, _eaaee := _cd.ParseBool(_gbbdb.Value)
			if _eaaee != nil {
				return _eaaee
			}
			_bbbb.FlipVAttr = &_eegaf
			continue
		}
	}
_dafe:
	for {
		_fedbe, _gbagf := d.Token()
		if _gbagf != nil {
			return _gbagf
		}
		switch _dedfg := _fedbe.(type) {
		case _d.StartElement:
			switch _dedfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_bbbb.Off = NewCT_Point2D()
				if _fdbgg := d.DecodeElement(_bbbb.Off, &_dedfg); _fdbgg != nil {
					return _fdbgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_bbbb.Ext = NewCT_PositiveSize2D()
				if _eabde := d.DecodeElement(_bbbb.Ext, &_dedfg); _eabde != nil {
					return _eabde
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d2\u0044\u0020\u0025\u0076", _dedfg.Name)
				if _gafe := d.Skip(); _gafe != nil {
					return _gafe
				}
			}
		case _d.EndElement:
			break _dafe
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_BackgroundFormatting() *CT_BackgroundFormatting {
	_caee := &CT_BackgroundFormatting{}
	return _caee
}

type CT_GlowEffect struct {
	RadAttr   *int64
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// Validate validates the CT_Scale2D and its children
func (_abbda *CT_Scale2D) Validate() error {
	return _abbda.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044")
}

type ST_PresetLineDashVal byte

func (_fabeg *CT_EffectContainer) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdgf := range start.Attr {
		if _fdgf.Name.Local == "\u0074\u0079\u0070\u0065" {
			_fabeg.TypeAttr.UnmarshalXMLAttr(_fdgf)
			continue
		}
		if _fdgf.Name.Local == "\u006e\u0061\u006d\u0065" {
			_dgec, _dbbd := _fdgf.Value, error(nil)
			if _dbbd != nil {
				return _dbbd
			}
			_fabeg.NameAttr = &_dgec
			continue
		}
	}
_bfba:
	for {
		_efbdb, _fbgeb := d.Token()
		if _fbgeb != nil {
			return _fbgeb
		}
		switch _daacf := _efbdb.(type) {
		case _d.StartElement:
			switch _daacf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_fabeg.Cont = NewCT_EffectContainer()
				if _bgaea := d.DecodeElement(_fabeg.Cont, &_daacf); _bgaea != nil {
					return _bgaea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_fabeg.Effect = NewCT_EffectReference()
				if _eebf := d.DecodeElement(_fabeg.Effect, &_daacf); _eebf != nil {
					return _eebf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_fabeg.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _caac := d.DecodeElement(_fabeg.AlphaBiLevel, &_daacf); _caac != nil {
					return _caac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_fabeg.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _bdab := d.DecodeElement(_fabeg.AlphaCeiling, &_daacf); _bdab != nil {
					return _bdab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_fabeg.AlphaFloor = NewCT_AlphaFloorEffect()
				if _afbf := d.DecodeElement(_fabeg.AlphaFloor, &_daacf); _afbf != nil {
					return _afbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_fabeg.AlphaInv = NewCT_AlphaInverseEffect()
				if _bbdf := d.DecodeElement(_fabeg.AlphaInv, &_daacf); _bbdf != nil {
					return _bbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fabeg.AlphaMod = NewCT_AlphaModulateEffect()
				if _gbac := d.DecodeElement(_fabeg.AlphaMod, &_daacf); _gbac != nil {
					return _gbac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_fabeg.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _facc := d.DecodeElement(_fabeg.AlphaModFix, &_daacf); _facc != nil {
					return _facc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_fabeg.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _bade := d.DecodeElement(_fabeg.AlphaOutset, &_daacf); _bade != nil {
					return _bade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fabeg.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _fedb := d.DecodeElement(_fabeg.AlphaRepl, &_daacf); _fedb != nil {
					return _fedb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_fabeg.BiLevel = NewCT_BiLevelEffect()
				if _dbab := d.DecodeElement(_fabeg.BiLevel, &_daacf); _dbab != nil {
					return _dbab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_fabeg.Blend = NewCT_BlendEffect()
				if _abafe := d.DecodeElement(_fabeg.Blend, &_daacf); _abafe != nil {
					return _abafe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_fabeg.Blur = NewCT_BlurEffect()
				if _dbfb := d.DecodeElement(_fabeg.Blur, &_daacf); _dbfb != nil {
					return _dbfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_fabeg.ClrChange = NewCT_ColorChangeEffect()
				if _ddbfb := d.DecodeElement(_fabeg.ClrChange, &_daacf); _ddbfb != nil {
					return _ddbfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_fabeg.ClrRepl = NewCT_ColorReplaceEffect()
				if _ffdba := d.DecodeElement(_fabeg.ClrRepl, &_daacf); _ffdba != nil {
					return _ffdba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_fabeg.Duotone = NewCT_DuotoneEffect()
				if _fffb := d.DecodeElement(_fabeg.Duotone, &_daacf); _fffb != nil {
					return _fffb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fabeg.Fill = NewCT_FillEffect()
				if _dggb := d.DecodeElement(_fabeg.Fill, &_daacf); _dggb != nil {
					return _dggb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_fabeg.FillOverlay = NewCT_FillOverlayEffect()
				if _gcde := d.DecodeElement(_fabeg.FillOverlay, &_daacf); _gcde != nil {
					return _gcde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_fabeg.Glow = NewCT_GlowEffect()
				if _aebfa := d.DecodeElement(_fabeg.Glow, &_daacf); _aebfa != nil {
					return _aebfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_fabeg.Grayscl = NewCT_GrayscaleEffect()
				if _cbff := d.DecodeElement(_fabeg.Grayscl, &_daacf); _cbff != nil {
					return _cbff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_fabeg.Hsl = NewCT_HSLEffect()
				if _begc := d.DecodeElement(_fabeg.Hsl, &_daacf); _begc != nil {
					return _begc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_fabeg.InnerShdw = NewCT_InnerShadowEffect()
				if _gcbe := d.DecodeElement(_fabeg.InnerShdw, &_daacf); _gcbe != nil {
					return _gcbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fabeg.Lum = NewCT_LuminanceEffect()
				if _aadge := d.DecodeElement(_fabeg.Lum, &_daacf); _aadge != nil {
					return _aadge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_fabeg.OuterShdw = NewCT_OuterShadowEffect()
				if _abbd := d.DecodeElement(_fabeg.OuterShdw, &_daacf); _abbd != nil {
					return _abbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_fabeg.PrstShdw = NewCT_PresetShadowEffect()
				if _bbac := d.DecodeElement(_fabeg.PrstShdw, &_daacf); _bbac != nil {
					return _bbac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_fabeg.Reflection = NewCT_ReflectionEffect()
				if _gdec := d.DecodeElement(_fabeg.Reflection, &_daacf); _gdec != nil {
					return _gdec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_fabeg.RelOff = NewCT_RelativeOffsetEffect()
				if _adgb := d.DecodeElement(_fabeg.RelOff, &_daacf); _adgb != nil {
					return _adgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_fabeg.SoftEdge = NewCT_SoftEdgesEffect()
				if _gcda := d.DecodeElement(_fabeg.SoftEdge, &_daacf); _gcda != nil {
					return _gcda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fabeg.Tint = NewCT_TintEffect()
				if _ecedf := d.DecodeElement(_fabeg.Tint, &_daacf); _ecedf != nil {
					return _ecedf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_fabeg.Xfrm = NewCT_TransformEffect()
				if _feba := d.DecodeElement(_fabeg.Xfrm, &_daacf); _feba != nil {
					return _feba
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025\u0076", _daacf.Name)
				if _ddbc := d.Skip(); _ddbc != nil {
					return _ddbc
				}
			}
		case _d.EndElement:
			break _bfba
		case _d.CharData:
		}
	}
	return nil
}

type CT_AlphaCeilingEffect struct{}

func (_gga *CT_AlphaModulateEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gga.Cont = NewCT_EffectContainer()
_fcadf:
	for {
		_cgc, _bd := d.Token()
		if _bd != nil {
			return _bd
		}
		switch _cbea := _cgc.(type) {
		case _d.StartElement:
			switch _cbea.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _gce := d.DecodeElement(_gga.Cont, &_cbea); _gce != nil {
					return _gce
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cbea.Name)
				if _fge := d.Skip(); _fge != nil {
					return _fge
				}
			}
		case _d.EndElement:
			break _fcadf
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Percentage() *CT_Percentage { _ddcca := &CT_Percentage{}; return _ddcca }
func NewBlip() *Blip                   { _cdb := &Blip{}; _cdb.CT_Blip = *NewCT_Blip(); return _cdb }
func (_bccff *CT_NoFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Point3D() *CT_Point3D { _cedfc := &CT_Point3D{}; return _cedfc }

// Validate validates the EG_FillProperties and its children
func (_cggcc *EG_FillProperties) Validate() error {
	return _cggcc.ValidateWithPath("\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

const (
	ST_PresetColorValUnset                ST_PresetColorVal = 0
	ST_PresetColorValAliceBlue            ST_PresetColorVal = 1
	ST_PresetColorValAntiqueWhite         ST_PresetColorVal = 2
	ST_PresetColorValAqua                 ST_PresetColorVal = 3
	ST_PresetColorValAquamarine           ST_PresetColorVal = 4
	ST_PresetColorValAzure                ST_PresetColorVal = 5
	ST_PresetColorValBeige                ST_PresetColorVal = 6
	ST_PresetColorValBisque               ST_PresetColorVal = 7
	ST_PresetColorValBlack                ST_PresetColorVal = 8
	ST_PresetColorValBlanchedAlmond       ST_PresetColorVal = 9
	ST_PresetColorValBlue                 ST_PresetColorVal = 10
	ST_PresetColorValBlueViolet           ST_PresetColorVal = 11
	ST_PresetColorValBrown                ST_PresetColorVal = 12
	ST_PresetColorValBurlyWood            ST_PresetColorVal = 13
	ST_PresetColorValCadetBlue            ST_PresetColorVal = 14
	ST_PresetColorValChartreuse           ST_PresetColorVal = 15
	ST_PresetColorValChocolate            ST_PresetColorVal = 16
	ST_PresetColorValCoral                ST_PresetColorVal = 17
	ST_PresetColorValCornflowerBlue       ST_PresetColorVal = 18
	ST_PresetColorValCornsilk             ST_PresetColorVal = 19
	ST_PresetColorValCrimson              ST_PresetColorVal = 20
	ST_PresetColorValCyan                 ST_PresetColorVal = 21
	ST_PresetColorValDarkBlue             ST_PresetColorVal = 22
	ST_PresetColorValDarkCyan             ST_PresetColorVal = 23
	ST_PresetColorValDarkGoldenrod        ST_PresetColorVal = 24
	ST_PresetColorValDarkGray             ST_PresetColorVal = 25
	ST_PresetColorValDarkGrey             ST_PresetColorVal = 26
	ST_PresetColorValDarkGreen            ST_PresetColorVal = 27
	ST_PresetColorValDarkKhaki            ST_PresetColorVal = 28
	ST_PresetColorValDarkMagenta          ST_PresetColorVal = 29
	ST_PresetColorValDarkOliveGreen       ST_PresetColorVal = 30
	ST_PresetColorValDarkOrange           ST_PresetColorVal = 31
	ST_PresetColorValDarkOrchid           ST_PresetColorVal = 32
	ST_PresetColorValDarkRed              ST_PresetColorVal = 33
	ST_PresetColorValDarkSalmon           ST_PresetColorVal = 34
	ST_PresetColorValDarkSeaGreen         ST_PresetColorVal = 35
	ST_PresetColorValDarkSlateBlue        ST_PresetColorVal = 36
	ST_PresetColorValDarkSlateGray        ST_PresetColorVal = 37
	ST_PresetColorValDarkSlateGrey        ST_PresetColorVal = 38
	ST_PresetColorValDarkTurquoise        ST_PresetColorVal = 39
	ST_PresetColorValDarkViolet           ST_PresetColorVal = 40
	ST_PresetColorValDkBlue               ST_PresetColorVal = 41
	ST_PresetColorValDkCyan               ST_PresetColorVal = 42
	ST_PresetColorValDkGoldenrod          ST_PresetColorVal = 43
	ST_PresetColorValDkGray               ST_PresetColorVal = 44
	ST_PresetColorValDkGrey               ST_PresetColorVal = 45
	ST_PresetColorValDkGreen              ST_PresetColorVal = 46
	ST_PresetColorValDkKhaki              ST_PresetColorVal = 47
	ST_PresetColorValDkMagenta            ST_PresetColorVal = 48
	ST_PresetColorValDkOliveGreen         ST_PresetColorVal = 49
	ST_PresetColorValDkOrange             ST_PresetColorVal = 50
	ST_PresetColorValDkOrchid             ST_PresetColorVal = 51
	ST_PresetColorValDkRed                ST_PresetColorVal = 52
	ST_PresetColorValDkSalmon             ST_PresetColorVal = 53
	ST_PresetColorValDkSeaGreen           ST_PresetColorVal = 54
	ST_PresetColorValDkSlateBlue          ST_PresetColorVal = 55
	ST_PresetColorValDkSlateGray          ST_PresetColorVal = 56
	ST_PresetColorValDkSlateGrey          ST_PresetColorVal = 57
	ST_PresetColorValDkTurquoise          ST_PresetColorVal = 58
	ST_PresetColorValDkViolet             ST_PresetColorVal = 59
	ST_PresetColorValDeepPink             ST_PresetColorVal = 60
	ST_PresetColorValDeepSkyBlue          ST_PresetColorVal = 61
	ST_PresetColorValDimGray              ST_PresetColorVal = 62
	ST_PresetColorValDimGrey              ST_PresetColorVal = 63
	ST_PresetColorValDodgerBlue           ST_PresetColorVal = 64
	ST_PresetColorValFirebrick            ST_PresetColorVal = 65
	ST_PresetColorValFloralWhite          ST_PresetColorVal = 66
	ST_PresetColorValForestGreen          ST_PresetColorVal = 67
	ST_PresetColorValFuchsia              ST_PresetColorVal = 68
	ST_PresetColorValGainsboro            ST_PresetColorVal = 69
	ST_PresetColorValGhostWhite           ST_PresetColorVal = 70
	ST_PresetColorValGold                 ST_PresetColorVal = 71
	ST_PresetColorValGoldenrod            ST_PresetColorVal = 72
	ST_PresetColorValGray                 ST_PresetColorVal = 73
	ST_PresetColorValGrey                 ST_PresetColorVal = 74
	ST_PresetColorValGreen                ST_PresetColorVal = 75
	ST_PresetColorValGreenYellow          ST_PresetColorVal = 76
	ST_PresetColorValHoneydew             ST_PresetColorVal = 77
	ST_PresetColorValHotPink              ST_PresetColorVal = 78
	ST_PresetColorValIndianRed            ST_PresetColorVal = 79
	ST_PresetColorValIndigo               ST_PresetColorVal = 80
	ST_PresetColorValIvory                ST_PresetColorVal = 81
	ST_PresetColorValKhaki                ST_PresetColorVal = 82
	ST_PresetColorValLavender             ST_PresetColorVal = 83
	ST_PresetColorValLavenderBlush        ST_PresetColorVal = 84
	ST_PresetColorValLawnGreen            ST_PresetColorVal = 85
	ST_PresetColorValLemonChiffon         ST_PresetColorVal = 86
	ST_PresetColorValLightBlue            ST_PresetColorVal = 87
	ST_PresetColorValLightCoral           ST_PresetColorVal = 88
	ST_PresetColorValLightCyan            ST_PresetColorVal = 89
	ST_PresetColorValLightGoldenrodYellow ST_PresetColorVal = 90
	ST_PresetColorValLightGray            ST_PresetColorVal = 91
	ST_PresetColorValLightGrey            ST_PresetColorVal = 92
	ST_PresetColorValLightGreen           ST_PresetColorVal = 93
	ST_PresetColorValLightPink            ST_PresetColorVal = 94
	ST_PresetColorValLightSalmon          ST_PresetColorVal = 95
	ST_PresetColorValLightSeaGreen        ST_PresetColorVal = 96
	ST_PresetColorValLightSkyBlue         ST_PresetColorVal = 97
	ST_PresetColorValLightSlateGray       ST_PresetColorVal = 98
	ST_PresetColorValLightSlateGrey       ST_PresetColorVal = 99
	ST_PresetColorValLightSteelBlue       ST_PresetColorVal = 100
	ST_PresetColorValLightYellow          ST_PresetColorVal = 101
	ST_PresetColorValLtBlue               ST_PresetColorVal = 102
	ST_PresetColorValLtCoral              ST_PresetColorVal = 103
	ST_PresetColorValLtCyan               ST_PresetColorVal = 104
	ST_PresetColorValLtGoldenrodYellow    ST_PresetColorVal = 105
	ST_PresetColorValLtGray               ST_PresetColorVal = 106
	ST_PresetColorValLtGrey               ST_PresetColorVal = 107
	ST_PresetColorValLtGreen              ST_PresetColorVal = 108
	ST_PresetColorValLtPink               ST_PresetColorVal = 109
	ST_PresetColorValLtSalmon             ST_PresetColorVal = 110
	ST_PresetColorValLtSeaGreen           ST_PresetColorVal = 111
	ST_PresetColorValLtSkyBlue            ST_PresetColorVal = 112
	ST_PresetColorValLtSlateGray          ST_PresetColorVal = 113
	ST_PresetColorValLtSlateGrey          ST_PresetColorVal = 114
	ST_PresetColorValLtSteelBlue          ST_PresetColorVal = 115
	ST_PresetColorValLtYellow             ST_PresetColorVal = 116
	ST_PresetColorValLime                 ST_PresetColorVal = 117
	ST_PresetColorValLimeGreen            ST_PresetColorVal = 118
	ST_PresetColorValLinen                ST_PresetColorVal = 119
	ST_PresetColorValMagenta              ST_PresetColorVal = 120
	ST_PresetColorValMaroon               ST_PresetColorVal = 121
	ST_PresetColorValMedAquamarine        ST_PresetColorVal = 122
	ST_PresetColorValMedBlue              ST_PresetColorVal = 123
	ST_PresetColorValMedOrchid            ST_PresetColorVal = 124
	ST_PresetColorValMedPurple            ST_PresetColorVal = 125
	ST_PresetColorValMedSeaGreen          ST_PresetColorVal = 126
	ST_PresetColorValMedSlateBlue         ST_PresetColorVal = 127
	ST_PresetColorValMedSpringGreen       ST_PresetColorVal = 128
	ST_PresetColorValMedTurquoise         ST_PresetColorVal = 129
	ST_PresetColorValMedVioletRed         ST_PresetColorVal = 130
	ST_PresetColorValMediumAquamarine     ST_PresetColorVal = 131
	ST_PresetColorValMediumBlue           ST_PresetColorVal = 132
	ST_PresetColorValMediumOrchid         ST_PresetColorVal = 133
	ST_PresetColorValMediumPurple         ST_PresetColorVal = 134
	ST_PresetColorValMediumSeaGreen       ST_PresetColorVal = 135
	ST_PresetColorValMediumSlateBlue      ST_PresetColorVal = 136
	ST_PresetColorValMediumSpringGreen    ST_PresetColorVal = 137
	ST_PresetColorValMediumTurquoise      ST_PresetColorVal = 138
	ST_PresetColorValMediumVioletRed      ST_PresetColorVal = 139
	ST_PresetColorValMidnightBlue         ST_PresetColorVal = 140
	ST_PresetColorValMintCream            ST_PresetColorVal = 141
	ST_PresetColorValMistyRose            ST_PresetColorVal = 142
	ST_PresetColorValMoccasin             ST_PresetColorVal = 143
	ST_PresetColorValNavajoWhite          ST_PresetColorVal = 144
	ST_PresetColorValNavy                 ST_PresetColorVal = 145
	ST_PresetColorValOldLace              ST_PresetColorVal = 146
	ST_PresetColorValOlive                ST_PresetColorVal = 147
	ST_PresetColorValOliveDrab            ST_PresetColorVal = 148
	ST_PresetColorValOrange               ST_PresetColorVal = 149
	ST_PresetColorValOrangeRed            ST_PresetColorVal = 150
	ST_PresetColorValOrchid               ST_PresetColorVal = 151
	ST_PresetColorValPaleGoldenrod        ST_PresetColorVal = 152
	ST_PresetColorValPaleGreen            ST_PresetColorVal = 153
	ST_PresetColorValPaleTurquoise        ST_PresetColorVal = 154
	ST_PresetColorValPaleVioletRed        ST_PresetColorVal = 155
	ST_PresetColorValPapayaWhip           ST_PresetColorVal = 156
	ST_PresetColorValPeachPuff            ST_PresetColorVal = 157
	ST_PresetColorValPeru                 ST_PresetColorVal = 158
	ST_PresetColorValPink                 ST_PresetColorVal = 159
	ST_PresetColorValPlum                 ST_PresetColorVal = 160
	ST_PresetColorValPowderBlue           ST_PresetColorVal = 161
	ST_PresetColorValPurple               ST_PresetColorVal = 162
	ST_PresetColorValRed                  ST_PresetColorVal = 163
	ST_PresetColorValRosyBrown            ST_PresetColorVal = 164
	ST_PresetColorValRoyalBlue            ST_PresetColorVal = 165
	ST_PresetColorValSaddleBrown          ST_PresetColorVal = 166
	ST_PresetColorValSalmon               ST_PresetColorVal = 167
	ST_PresetColorValSandyBrown           ST_PresetColorVal = 168
	ST_PresetColorValSeaGreen             ST_PresetColorVal = 169
	ST_PresetColorValSeaShell             ST_PresetColorVal = 170
	ST_PresetColorValSienna               ST_PresetColorVal = 171
	ST_PresetColorValSilver               ST_PresetColorVal = 172
	ST_PresetColorValSkyBlue              ST_PresetColorVal = 173
	ST_PresetColorValSlateBlue            ST_PresetColorVal = 174
	ST_PresetColorValSlateGray            ST_PresetColorVal = 175
	ST_PresetColorValSlateGrey            ST_PresetColorVal = 176
	ST_PresetColorValSnow                 ST_PresetColorVal = 177
	ST_PresetColorValSpringGreen          ST_PresetColorVal = 178
	ST_PresetColorValSteelBlue            ST_PresetColorVal = 179
	ST_PresetColorValTan                  ST_PresetColorVal = 180
	ST_PresetColorValTeal                 ST_PresetColorVal = 181
	ST_PresetColorValThistle              ST_PresetColorVal = 182
	ST_PresetColorValTomato               ST_PresetColorVal = 183
	ST_PresetColorValTurquoise            ST_PresetColorVal = 184
	ST_PresetColorValViolet               ST_PresetColorVal = 185
	ST_PresetColorValWheat                ST_PresetColorVal = 186
	ST_PresetColorValWhite                ST_PresetColorVal = 187
	ST_PresetColorValWhiteSmoke           ST_PresetColorVal = 188
	ST_PresetColorValYellow               ST_PresetColorVal = 189
	ST_PresetColorValYellowGreen          ST_PresetColorVal = 190
)

// Validate validates the CT_ReflectionEffect and its children
func (_ffcgc *CT_ReflectionEffect) Validate() error {
	return _ffcgc.ValidateWithPath("\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_InnerShadowEffect and its children
func (_cedag *CT_InnerShadowEffect) Validate() error {
	return _cedag.ValidateWithPath("C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

// Validate validates the CT_TextUnderlineLineFollowText and its children
func (_cecae *CT_TextUnderlineLineFollowText) Validate() error {
	return _cecae.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

type CT_LineStyleList struct{ Ln []*CT_LineProperties }

func NewCT_TableStyle() *CT_TableStyle {
	_dgdde := &CT_TableStyle{}
	_dgdde.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _dgdde
}
func (_acgdd *ST_SystemColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcaff, _cfeff := d.Token()
	if _cfeff != nil {
		return _cfeff
	}
	if _feagc, _dagde := _fcaff.(_d.EndElement); _dagde && _feagc.Name == start.Name {
		*_acgdd = 1
		return nil
	}
	if _bccab, _facaea := _fcaff.(_d.CharData); !_facaea {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcaff)
	} else {
		switch string(_bccab) {
		case "":
			*_acgdd = 0
		case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
			*_acgdd = 1
		case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
			*_acgdd = 2
		case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_acgdd = 3
		case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_acgdd = 4
		case "\u006d\u0065\u006e\u0075":
			*_acgdd = 5
		case "\u0077\u0069\u006e\u0064\u006f\u0077":
			*_acgdd = 6
		case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
			*_acgdd = 7
		case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
			*_acgdd = 8
		case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
			*_acgdd = 9
		case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_acgdd = 10
		case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
			*_acgdd = 11
		case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
			*_acgdd = 12
		case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
			*_acgdd = 13
		case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
			*_acgdd = 14
		case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
			*_acgdd = 15
		case "\u0062t\u006e\u0046\u0061\u0063\u0065":
			*_acgdd = 16
		case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
			*_acgdd = 17
		case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
			*_acgdd = 18
		case "\u0062t\u006e\u0054\u0065\u0078\u0074":
			*_acgdd = 19
		case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
			*_acgdd = 20
		case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_acgdd = 21
		case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
			*_acgdd = 22
		case "\u0033d\u004c\u0069\u0067\u0068\u0074":
			*_acgdd = 23
		case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
			*_acgdd = 24
		case "\u0069\u006e\u0066\u006f\u0042\u006b":
			*_acgdd = 25
		case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
			*_acgdd = 26
		case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
			*_acgdd = 27
		case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
			*_acgdd = 28
		case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
			*_acgdd = 29
		case "\u006de\u006e\u0075\u0042\u0061\u0072":
			*_acgdd = 30
		}
	}
	_fcaff, _cfeff = d.Token()
	if _cfeff != nil {
		return _cfeff
	}
	if _aeacd, _gcdfe := _fcaff.(_d.EndElement); _gcdfe && _aeacd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcaff)
}
func (_ggfbag *CT_PathShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ggfbag.PathAttr != ST_PathShadeTypeUnset {
		_efcac, _dgaag := _ggfbag.PathAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0061\u0074\u0068"})
		if _dgaag != nil {
			return _dgaag
		}
		start.Attr = append(start.Attr, _efcac)
	}
	e.EncodeToken(start)
	if _ggfbag.FillToRect != nil {
		_bdcbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066i\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_ggfbag.FillToRect, _bdcbb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dedef *CT_GvmlShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dedef.CNvPr = NewCT_NonVisualDrawingProps()
	_dedef.CNvSpPr = NewCT_NonVisualDrawingShapeProps()
_bbgb:
	for {
		_fgbca, _dcab := d.Token()
		if _dcab != nil {
			return _dcab
		}
		switch _fadeg := _fgbca.(type) {
		case _d.StartElement:
			switch _fadeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _agfc := d.DecodeElement(_dedef.CNvPr, &_fadeg); _agfc != nil {
					return _agfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063N\u0076\u0053\u0070\u0050\u0072"}:
				if _dbad := d.DecodeElement(_dedef.CNvSpPr, &_fadeg); _dbad != nil {
					return _dbad
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0047\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _fadeg.Name)
				if _dcdgf := d.Skip(); _dcdgf != nil {
					return _dcdgf
				}
			}
		case _d.EndElement:
			break _bbgb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_InnerShadowEffect() *CT_InnerShadowEffect { _acea := &CT_InnerShadowEffect{}; return _acea }

// Validate validates the CT_EffectReference and its children
func (_dbgge *CT_EffectReference) Validate() error {
	return _dbgge.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065")
}
func NewCT_OfficeArtExtensionList() *CT_OfficeArtExtensionList {
	_bcffb := &CT_OfficeArtExtensionList{}
	return _bcffb
}
func (_dcbba ST_BevelPresetType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_acebd := _d.Attr{}
	_acebd.Name = name
	switch _dcbba {
	case ST_BevelPresetTypeUnset:
		_acebd.Value = ""
	case ST_BevelPresetTypeRelaxedInset:
		_acebd.Value = "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case ST_BevelPresetTypeCircle:
		_acebd.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_BevelPresetTypeSlope:
		_acebd.Value = "\u0073\u006c\u006fp\u0065"
	case ST_BevelPresetTypeCross:
		_acebd.Value = "\u0063\u0072\u006fs\u0073"
	case ST_BevelPresetTypeAngle:
		_acebd.Value = "\u0061\u006e\u0067l\u0065"
	case ST_BevelPresetTypeSoftRound:
		_acebd.Value = "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case ST_BevelPresetTypeConvex:
		_acebd.Value = "\u0063\u006f\u006e\u0076\u0065\u0078"
	case ST_BevelPresetTypeCoolSlant:
		_acebd.Value = "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case ST_BevelPresetTypeDivot:
		_acebd.Value = "\u0064\u0069\u0076o\u0074"
	case ST_BevelPresetTypeRiblet:
		_acebd.Value = "\u0072\u0069\u0062\u006c\u0065\u0074"
	case ST_BevelPresetTypeHardEdge:
		_acebd.Value = "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case ST_BevelPresetTypeArtDeco:
		_acebd.Value = "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return _acebd, nil
}
func (_bgacd *CT_Percentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _bgacd.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fffa *CT_GvmlGraphicalObjectFrame) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cabdda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_fffa.NvGraphicFramePr, _cabdda)
	_adaa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0070\u0068\u0069c"}}
	e.EncodeElement(_fffa.Graphic, _adaa)
	_cegb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
	e.EncodeElement(_fffa.Xfrm, _cegb)
	if _fffa.ExtLst != nil {
		_afce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fffa.ExtLst, _afce)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupShapeProperties() *CT_GroupShapeProperties {
	_bedfe := &CT_GroupShapeProperties{}
	return _bedfe
}
func (_faca *CT_AudioCD) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0074"}}
	e.EncodeElement(_faca.St, _gae)
	_ebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065n\u0064"}}
	e.EncodeElement(_faca.End, _ebb)
	if _faca.ExtLst != nil {
		_fff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faca.ExtLst, _fff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ColorSchemeIndexUnset    ST_ColorSchemeIndex = 0
	ST_ColorSchemeIndexDk1      ST_ColorSchemeIndex = 1
	ST_ColorSchemeIndexLt1      ST_ColorSchemeIndex = 2
	ST_ColorSchemeIndexDk2      ST_ColorSchemeIndex = 3
	ST_ColorSchemeIndexLt2      ST_ColorSchemeIndex = 4
	ST_ColorSchemeIndexAccent1  ST_ColorSchemeIndex = 5
	ST_ColorSchemeIndexAccent2  ST_ColorSchemeIndex = 6
	ST_ColorSchemeIndexAccent3  ST_ColorSchemeIndex = 7
	ST_ColorSchemeIndexAccent4  ST_ColorSchemeIndex = 8
	ST_ColorSchemeIndexAccent5  ST_ColorSchemeIndex = 9
	ST_ColorSchemeIndexAccent6  ST_ColorSchemeIndex = 10
	ST_ColorSchemeIndexHlink    ST_ColorSchemeIndex = 11
	ST_ColorSchemeIndexFolHlink ST_ColorSchemeIndex = 12
)

func (_dcgacd *ST_AnimationBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffbaf, _gfcgf := d.Token()
	if _gfcgf != nil {
		return _gfcgf
	}
	if _gfbdeg, _ceefgc := _ffbaf.(_d.EndElement); _ceefgc && _gfbdeg.Name == start.Name {
		*_dcgacd = 1
		return nil
	}
	if _deddd, _gcggc := _ffbaf.(_d.CharData); !_gcggc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffbaf)
	} else {
		switch string(_deddd) {
		case "":
			*_dcgacd = 0
		case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_dcgacd = 1
		}
	}
	_ffbaf, _gfcgf = d.Token()
	if _gfcgf != nil {
		return _gfcgf
	}
	if _adged, _faedd := _ffbaf.(_d.EndElement); _faedd && _adged.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffbaf)
}
func (_ddad *CT_Camera) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ddad.PrstAttr = ST_PresetCameraType(1)
	for _, _aafb := range start.Attr {
		if _aafb.Name.Local == "\u0070\u0072\u0073\u0074" {
			_ddad.PrstAttr.UnmarshalXMLAttr(_aafb)
			continue
		}
		if _aafb.Name.Local == "\u0066\u006f\u0076" {
			_adce, _fefg := _cd.ParseInt(_aafb.Value, 10, 32)
			if _fefg != nil {
				return _fefg
			}
			_dbef := int32(_adce)
			_ddad.FovAttr = &_dbef
			continue
		}
		if _aafb.Name.Local == "\u007a\u006f\u006f\u006d" {
			_fefe, _cdefg := ParseUnionST_PositivePercentage(_aafb.Value)
			if _cdefg != nil {
				return _cdefg
			}
			_ddad.ZoomAttr = &_fefe
			continue
		}
	}
_ecbb:
	for {
		_ggec, _fcef := d.Token()
		if _fcef != nil {
			return _fcef
		}
		switch _agcg := _ggec.(type) {
		case _d.StartElement:
			switch _agcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_ddad.Rot = NewCT_SphereCoords()
				if _ebcg := d.DecodeElement(_ddad.Rot, &_agcg); _ebcg != nil {
					return _ebcg
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0061\u006de\u0072\u0061 \u0025\u0076", _agcg.Name)
				if _ggad := d.Skip(); _ggad != nil {
					return _ggad
				}
			}
		case _d.EndElement:
			break _ecbb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GeomGuide and its children, prefixing error messages with path
func (_efcfg *CT_GeomGuide) ValidateWithPath(path string) error { return nil }

type ST_TextStrikeType byte

// ValidateWithPath validates the EG_ColorChoice and its children, prefixing error messages with path
func (_efagfa *EG_ColorChoice) ValidateWithPath(path string) error {
	if _efagfa.ScrgbClr != nil {
		if _fbgb := _efagfa.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _fbgb != nil {
			return _fbgb
		}
	}
	if _efagfa.SrgbClr != nil {
		if _fabgg := _efagfa.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fabgg != nil {
			return _fabgg
		}
	}
	if _efagfa.HslClr != nil {
		if _afdcfe := _efagfa.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _afdcfe != nil {
			return _afdcfe
		}
	}
	if _efagfa.SysClr != nil {
		if _fecdf := _efagfa.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fecdf != nil {
			return _fecdf
		}
	}
	if _efagfa.SchemeClr != nil {
		if _ggdbe := _efagfa.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ggdbe != nil {
			return _ggdbe
		}
	}
	if _efagfa.PrstClr != nil {
		if _gcccc := _efagfa.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gcccc != nil {
			return _gcccc
		}
	}
	return nil
}
func (_afbd *CT_ColorSchemeList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _afbd.ExtraClrScheme != nil {
		_bcbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ae\u0078\u0074\u0072a\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		for _, _eggf := range _afbd.ExtraClrScheme {
			e.EncodeElement(_eggf, _bcbe)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ggdfb ST_BlackWhiteMode) Validate() error { return _ggdfb.ValidateWithPath("") }
func NewEG_ColorChoice() *EG_ColorChoice         { _fddg := &EG_ColorChoice{}; return _fddg }
func (_bfcbc *EG_ThemeableEffectStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cebe:
	for {
		_cfdda, _aeacbf := d.Token()
		if _aeacbf != nil {
			return _aeacbf
		}
		switch _bgcgg := _cfdda.(type) {
		case _d.StartElement:
			switch _bgcgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_bfcbc.Effect = NewCT_EffectProperties()
				if _efced := d.DecodeElement(_bfcbc.Effect, &_bgcgg); _efced != nil {
					return _efced
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_bfcbc.EffectRef = NewCT_StyleMatrixReference()
				if _ffeefd := d.DecodeElement(_bfcbc.EffectRef, &_bgcgg); _ffeefd != nil {
					return _ffeefd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0045\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065E\u0066\u0066\u0065\u0063\u0074\u0053t\u0079\u006c\u0065 \u0025\u0076", _bgcgg.Name)
				if _egdbge := d.Skip(); _egdbge != nil {
					return _egdbge
				}
			}
		case _d.EndElement:
			break _cebe
		case _d.CharData:
		}
	}
	return nil
}
func (_fgge *CT_ShapeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _accd := range start.Attr {
		if _accd.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_fgge.BwModeAttr.UnmarshalXMLAttr(_accd)
			continue
		}
	}
_dbggb:
	for {
		_cgdge, _dgfed := d.Token()
		if _dgfed != nil {
			return _dgfed
		}
		switch _ecage := _cgdge.(type) {
		case _d.StartElement:
			switch _ecage.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_fgge.Xfrm = NewCT_Transform2D()
				if _abgfc := d.DecodeElement(_fgge.Xfrm, &_ecage); _abgfc != nil {
					return _abgfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_fgge.CustGeom = NewCT_CustomGeometry2D()
				if _cbada := d.DecodeElement(_fgge.CustGeom, &_ecage); _cbada != nil {
					return _cbada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_fgge.PrstGeom = NewCT_PresetGeometry2D()
				if _daagg := d.DecodeElement(_fgge.PrstGeom, &_ecage); _daagg != nil {
					return _daagg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fgge.NoFill = NewCT_NoFillProperties()
				if _ddcg := d.DecodeElement(_fgge.NoFill, &_ecage); _ddcg != nil {
					return _ddcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fgge.SolidFill = NewCT_SolidColorFillProperties()
				if _eefcb := d.DecodeElement(_fgge.SolidFill, &_ecage); _eefcb != nil {
					return _eefcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fgge.GradFill = NewCT_GradientFillProperties()
				if _cgaff := d.DecodeElement(_fgge.GradFill, &_ecage); _cgaff != nil {
					return _cgaff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_fgge.BlipFill = NewCT_BlipFillProperties()
				if _aecfdb := d.DecodeElement(_fgge.BlipFill, &_ecage); _aecfdb != nil {
					return _aecfdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fgge.PattFill = NewCT_PatternFillProperties()
				if _bgege := d.DecodeElement(_fgge.PattFill, &_ecage); _bgege != nil {
					return _bgege
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_fgge.GrpFill = NewCT_GroupFillProperties()
				if _fcbef := d.DecodeElement(_fgge.GrpFill, &_ecage); _fcbef != nil {
					return _fcbef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_fgge.Ln = NewCT_LineProperties()
				if _ebdad := d.DecodeElement(_fgge.Ln, &_ecage); _ebdad != nil {
					return _ebdad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_fgge.EffectLst = NewCT_EffectList()
				if _gceee := d.DecodeElement(_fgge.EffectLst, &_ecage); _gceee != nil {
					return _gceee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_fgge.EffectDag = NewCT_EffectContainer()
				if _gdaec := d.DecodeElement(_fgge.EffectDag, &_ecage); _gdaec != nil {
					return _gdaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_fgge.Scene3d = NewCT_Scene3D()
				if _bgaaa := d.DecodeElement(_fgge.Scene3d, &_ecage); _bgaaa != nil {
					return _bgaaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_fgge.Sp3d = NewCT_Shape3D()
				if _bbeaa := d.DecodeElement(_fgge.Sp3d, &_ecage); _bbeaa != nil {
					return _bbeaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fgge.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbgd := d.DecodeElement(_fgge.ExtLst, &_ecage); _fbgd != nil {
					return _fbgd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ecage.Name)
				if _adga := d.Skip(); _adga != nil {
					return _adga
				}
			}
		case _d.EndElement:
			break _dbggb
		case _d.CharData:
		}
	}
	return nil
}
func (_gecgfe *CT_Path2DClose) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ccgce, _fdaef := d.Token()
		if _fdaef != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0043\u006c\u006f\u0073\u0065:\u0020\u0025\u0073", _fdaef)
		}
		if _cfdfa, _faecg := _ccgce.(_d.EndElement); _faecg && _cfdfa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgcee *ST_TextVertOverflowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cafga, _cgfdb := d.Token()
	if _cgfdb != nil {
		return _cgfdb
	}
	if _dcddd, _gafcf := _cafga.(_d.EndElement); _gafcf && _dcddd.Name == start.Name {
		*_cgcee = 1
		return nil
	}
	if _ffbfgf, _bgegfe := _cafga.(_d.CharData); !_bgegfe {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cafga)
	} else {
		switch string(_ffbfgf) {
		case "":
			*_cgcee = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_cgcee = 1
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
			*_cgcee = 2
		case "\u0063\u006c\u0069\u0070":
			*_cgcee = 3
		}
	}
	_cafga, _cgfdb = d.Token()
	if _cgfdb != nil {
		return _cgfdb
	}
	if _adade, _cabfb := _cafga.(_d.EndElement); _cabfb && _adade.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cafga)
}
func (_fafde *CT_LineJoinRound) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ThemeableFillStyle and its children, prefixing error messages with path
func (_bfebd *EG_ThemeableFillStyle) ValidateWithPath(path string) error {
	if _bfebd.Fill != nil {
		if _dbfad := _bfebd.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _dbfad != nil {
			return _dbfad
		}
	}
	if _bfebd.FillRef != nil {
		if _bggde := _bfebd.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _bggde != nil {
			return _bggde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeRect and its children, prefixing error messages with path
func (_cdae *CT_RelativeRect) ValidateWithPath(path string) error {
	if _cdae.LAttr != nil {
		if _deffg := _cdae.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _deffg != nil {
			return _deffg
		}
	}
	if _cdae.TAttr != nil {
		if _bdcfcf := _cdae.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _bdcfcf != nil {
			return _bdcfcf
		}
	}
	if _cdae.RAttr != nil {
		if _aaffd := _cdae.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _aaffd != nil {
			return _aaffd
		}
	}
	if _cdae.BAttr != nil {
		if _cded := _cdae.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _cded != nil {
			return _cded
		}
	}
	return nil
}

type CT_TextFont struct {
	TypefaceAttr    string
	PanoseAttr      *string
	PitchFamilyAttr ST_PitchFamily
	CharsetAttr     *int8
}

func (_egbd *CT_EffectReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0066"}, Value: _e.Sprintf("\u0025\u0076", _egbd.RefAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GlowEffect and its children, prefixing error messages with path
func (_fbda *CT_GlowEffect) ValidateWithPath(path string) error {
	if _fbda.RadAttr != nil {
		if *_fbda.RadAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fbda.RadAttr)
		}
		if *_fbda.RadAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_fbda.RadAttr)
		}
	}
	if _fbda.ScrgbClr != nil {
		if _ecdbd := _fbda.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ecdbd != nil {
			return _ecdbd
		}
	}
	if _fbda.SrgbClr != nil {
		if _edeag := _fbda.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _edeag != nil {
			return _edeag
		}
	}
	if _fbda.HslClr != nil {
		if _addg := _fbda.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _addg != nil {
			return _addg
		}
	}
	if _fbda.SysClr != nil {
		if _ecdac := _fbda.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ecdac != nil {
			return _ecdac
		}
	}
	if _fbda.SchemeClr != nil {
		if _fagbd := _fbda.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fagbd != nil {
			return _fagbd
		}
	}
	if _fbda.PrstClr != nil {
		if _efaa := _fbda.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _efaa != nil {
			return _efaa
		}
	}
	return nil
}

// Validate validates the CT_AudioCD and its children
func (_agag *CT_AudioCD) Validate() error {
	return _agag.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044")
}

// ValidateWithPath validates the VideoFile and its children, prefixing error messages with path
func (_fabcd *VideoFile) ValidateWithPath(path string) error {
	if _cddca := _fabcd.CT_VideoFile.ValidateWithPath(path); _cddca != nil {
		return _cddca
	}
	return nil
}
func (_bgcdda *CT_WholeE2oFormatting) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bgcdda.Ln != nil {
		_fdbbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_bgcdda.Ln, _fdbbb)
	}
	if _bgcdda.EffectLst != nil {
		_gcgbag := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bgcdda.EffectLst, _gcgbag)
	}
	if _bgcdda.EffectDag != nil {
		_acabe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bgcdda.EffectDag, _acabe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbdgd ST_TextAnchoringType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gbdgd.String(), start)
}

const (
	ST_PathShadeTypeUnset  ST_PathShadeType = 0
	ST_PathShadeTypeShape  ST_PathShadeType = 1
	ST_PathShadeTypeCircle ST_PathShadeType = 2
	ST_PathShadeTypeRect   ST_PathShadeType = 3
)

// ValidateWithPath validates the CT_NoFillProperties and its children, prefixing error messages with path
func (_decgc *CT_NoFillProperties) ValidateWithPath(path string) error { return nil }
func (_gebfb *CT_TablePropertiesChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gebfb.TableStyle != nil {
		_edacg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_gebfb.TableStyle, _edacg)
	}
	if _gebfb.TableStyleId != nil {
		_gddfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u006c\u0065\u0053\u0074y\u006c\u0065\u0049\u0064"}}
		_ff.AddPreserveSpaceAttr(&_gddfe, *_gebfb.TableStyleId)
		e.EncodeElement(_gebfb.TableStyleId, _gddfe)
	}
	return nil
}
func (_abae *CT_EffectProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dbff:
	for {
		_bgdbg, _bgeg := d.Token()
		if _bgeg != nil {
			return _bgeg
		}
		switch _edce := _bgdbg.(type) {
		case _d.StartElement:
			switch _edce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_abae.EffectLst = NewCT_EffectList()
				if _fdga := d.DecodeElement(_abae.EffectLst, &_edce); _fdga != nil {
					return _fdga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_abae.EffectDag = NewCT_EffectContainer()
				if _edgfd := d.DecodeElement(_abae.EffectDag, &_edce); _edgfd != nil {
					return _edgfd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u0050ro\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _edce.Name)
				if _cebdc := d.Skip(); _cebdc != nil {
					return _cebdc
				}
			}
		case _d.EndElement:
			break _dbff
		case _d.CharData:
		}
	}
	return nil
}

type CT_TableCell struct {
	RowSpanAttr  *int32
	GridSpanAttr *int32
	HMergeAttr   *bool
	VMergeAttr   *bool
	IdAttr       *string
	TxBody       *CT_TextBody
	TcPr         *CT_TableCellProperties
	ExtLst       *CT_OfficeArtExtensionList
}

func (_egeea *CT_ShapeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _egeea.BwModeAttr != ST_BlackWhiteModeUnset {
		_fbeac, _cbbbe := _egeea.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cbbbe != nil {
			return _cbbbe
		}
		start.Attr = append(start.Attr, _fbeac)
	}
	e.EncodeToken(start)
	if _egeea.Xfrm != nil {
		_effag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_egeea.Xfrm, _effag)
	}
	if _egeea.CustGeom != nil {
		_abfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_egeea.CustGeom, _abfd)
	}
	if _egeea.PrstGeom != nil {
		_ffcgbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_egeea.PrstGeom, _ffcgbf)
	}
	if _egeea.NoFill != nil {
		_gdcfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egeea.NoFill, _gdcfd)
	}
	if _egeea.SolidFill != nil {
		_cgfbd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egeea.SolidFill, _cgfbd)
	}
	if _egeea.GradFill != nil {
		_aggdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egeea.GradFill, _aggdg)
	}
	if _egeea.BlipFill != nil {
		_ddabb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egeea.BlipFill, _ddabb)
	}
	if _egeea.PattFill != nil {
		_feggd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_egeea.PattFill, _feggd)
	}
	if _egeea.GrpFill != nil {
		_ccde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_egeea.GrpFill, _ccde)
	}
	if _egeea.Ln != nil {
		_gdddf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_egeea.Ln, _gdddf)
	}
	if _egeea.EffectLst != nil {
		_gcdba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egeea.EffectLst, _gcdba)
	}
	if _egeea.EffectDag != nil {
		_gdfcc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_egeea.EffectDag, _gdfcc)
	}
	if _egeea.Scene3d != nil {
		_efegd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_egeea.Scene3d, _efegd)
	}
	if _egeea.Sp3d != nil {
		_bfgcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_egeea.Sp3d, _bfgcb)
	}
	if _egeea.ExtLst != nil {
		_dgbga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_egeea.ExtLst, _dgbga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afge *CT_NonVisualContentPartProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggacf := range start.Attr {
		if _ggacf.Name.Local == "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et" {
			_dafff, _cdbff := _cd.ParseBool(_ggacf.Value)
			if _cdbff != nil {
				return _cdbff
			}
			_afge.IsCommentAttr = &_dafff
			continue
		}
	}
_ebdee:
	for {
		_acgfde, _bbcgc := d.Token()
		if _bbcgc != nil {
			return _bbcgc
		}
		switch _bbaf := _acgfde.(type) {
		case _d.StartElement:
			switch _bbaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063p\u004c\u006f\u0063\u006b\u0073"}:
				_afge.CpLocks = NewCT_ContentPartLocking()
				if _ffab := d.DecodeElement(_afge.CpLocks, &_bbaf); _ffab != nil {
					return _ffab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_afge.ExtLst = NewCT_OfficeArtExtensionList()
				if _ddcae := d.DecodeElement(_afge.ExtLst, &_bbaf); _ddcae != nil {
					return _ddcae
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075a\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u0050\u0072o\u0070\u0065\u0072t\u0069\u0065\u0073\u0020\u0025\u0076", _bbaf.Name)
				if _eceed := d.Skip(); _eceed != nil {
					return _eceed
				}
			}
		case _d.EndElement:
			break _ebdee
		case _d.CharData:
		}
	}
	return nil
}

type CT_LineJoinRound struct{}

// ValidateWithPath validates the CT_ColorSchemeAndMapping and its children, prefixing error messages with path
func (_affg *CT_ColorSchemeAndMapping) ValidateWithPath(path string) error {
	if _ccfga := _affg.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _ccfga != nil {
		return _ccfga
	}
	if _affg.ClrMap != nil {
		if _ecdb := _affg.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _ecdb != nil {
			return _ecdb
		}
	}
	return nil
}

// Validate validates the CT_PositiveSize2D and its children
func (_cgace *CT_PositiveSize2D) Validate() error {
	return _cgace.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044")
}
func (_eccg *CT_NonVisualContentPartProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eccg.IsCommentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069s\u0043\u006f\u006d\u006d\u0065\u006et"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccg.IsCommentAttr))})
	}
	e.EncodeToken(start)
	if _eccg.CpLocks != nil {
		_decca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_eccg.CpLocks, _decca)
	}
	if _eccg.ExtLst != nil {
		_dadff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eccg.ExtLst, _dadff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbda *CT_DefaultShapeDefinition) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cbgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cbda.SpPr, _cbgg)
	_fcbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_cbda.BodyPr, _fcbd)
	_cbbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
	e.EncodeElement(_cbda.LstStyle, _cbbc)
	if _cbda.Style != nil {
		_bfdba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cbda.Style, _bfdba)
	}
	if _cbda.ExtLst != nil {
		_fecc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbda.ExtLst, _fecc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_beefcg *EG_Effect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _beefcg.Cont != nil {
		_geebc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
		e.EncodeElement(_beefcg.Cont, _geebc)
	}
	if _beefcg.Effect != nil {
		_agab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_beefcg.Effect, _agab)
	}
	if _beefcg.AlphaBiLevel != nil {
		_edecf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0042\u0069L\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_beefcg.AlphaBiLevel, _edecf)
	}
	if _beefcg.AlphaCeiling != nil {
		_facdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0043\u0065i\u006c\u0069\u006e\u0067"}}
		e.EncodeElement(_beefcg.AlphaCeiling, _facdg)
	}
	if _beefcg.AlphaFloor != nil {
		_afdda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061l\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}}
		e.EncodeElement(_beefcg.AlphaFloor, _afdda)
	}
	if _beefcg.AlphaInv != nil {
		_acbac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}}
		e.EncodeElement(_beefcg.AlphaInv, _acbac)
	}
	if _beefcg.AlphaMod != nil {
		_cgfad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}}
		e.EncodeElement(_beefcg.AlphaMod, _cgfad)
	}
	if _beefcg.AlphaModFix != nil {
		_aaaccc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}}
		e.EncodeElement(_beefcg.AlphaModFix, _aaaccc)
	}
	if _beefcg.AlphaOutset != nil {
		_cbfec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}}
		e.EncodeElement(_beefcg.AlphaOutset, _cbfec)
	}
	if _beefcg.AlphaRepl != nil {
		_ebfgc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0061\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"}}
		e.EncodeElement(_beefcg.AlphaRepl, _ebfgc)
	}
	if _beefcg.BiLevel != nil {
		_bfeed := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0069\u004c\u0065\u0076\u0065l"}}
		e.EncodeElement(_beefcg.BiLevel, _bfeed)
	}
	if _beefcg.Blend != nil {
		_afegff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u006c\u0065\u006e\u0064"}}
		e.EncodeElement(_beefcg.Blend, _afegff)
	}
	if _beefcg.Blur != nil {
		_agecf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_beefcg.Blur, _agecf)
	}
	if _beefcg.ClrChange != nil {
		_beabca := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"}}
		e.EncodeElement(_beefcg.ClrChange, _beabca)
	}
	if _beefcg.ClrRepl != nil {
		_dggdb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0052\u0065\u0070l"}}
		e.EncodeElement(_beefcg.ClrRepl, _dggdb)
	}
	if _beefcg.Duotone != nil {
		_eagac := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0064\u0075\u006f\u0074\u006f\u006ee"}}
		e.EncodeElement(_beefcg.Duotone, _eagac)
	}
	if _beefcg.Fill != nil {
		_gfgea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_beefcg.Fill, _gfgea)
	}
	if _beefcg.FillOverlay != nil {
		_cgbgde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_beefcg.FillOverlay, _cgbgde)
	}
	if _beefcg.Glow != nil {
		_dccfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_beefcg.Glow, _dccfc)
	}
	if _beefcg.Grayscl != nil {
		_bcced := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0061\u0079\u0073\u0063l"}}
		e.EncodeElement(_beefcg.Grayscl, _bcced)
	}
	if _beefcg.Hsl != nil {
		_dfeac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068s\u006c"}}
		e.EncodeElement(_beefcg.Hsl, _dfeac)
	}
	if _beefcg.InnerShdw != nil {
		_fbbee := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_beefcg.InnerShdw, _fbbee)
	}
	if _beefcg.Lum != nil {
		_addfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cu\u006d"}}
		e.EncodeElement(_beefcg.Lum, _addfc)
	}
	if _beefcg.OuterShdw != nil {
		_bcegc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_beefcg.OuterShdw, _bcegc)
	}
	if _beefcg.PrstShdw != nil {
		_aedeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_beefcg.PrstShdw, _aedeb)
	}
	if _beefcg.Reflection != nil {
		_fdeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_beefcg.Reflection, _fdeb)
	}
	if _beefcg.RelOff != nil {
		_ebfgf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u006c\u004f\u0066\u0066"}}
		e.EncodeElement(_beefcg.RelOff, _ebfgf)
	}
	if _beefcg.SoftEdge != nil {
		_cagd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_beefcg.SoftEdge, _cagd)
	}
	if _beefcg.Tint != nil {
		_bceca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006e\u0074"}}
		e.EncodeElement(_beefcg.Tint, _bceca)
	}
	if _beefcg.Xfrm != nil {
		_gbdfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_beefcg.Xfrm, _gbdfe)
	}
	return nil
}
func (_gebda ST_PenAlignment) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_addba := _d.Attr{}
	_addba.Name = name
	switch _gebda {
	case ST_PenAlignmentUnset:
		_addba.Value = ""
	case ST_PenAlignmentCtr:
		_addba.Value = "\u0063\u0074\u0072"
	case ST_PenAlignmentIn:
		_addba.Value = "\u0069\u006e"
	}
	return _addba, nil
}

// ValidateWithPath validates the CT_ReflectionEffect and its children, prefixing error messages with path
func (_daaac *CT_ReflectionEffect) ValidateWithPath(path string) error {
	if _daaac.BlurRadAttr != nil {
		if *_daaac.BlurRadAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daaac.BlurRadAttr)
		}
		if *_daaac.BlurRadAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_daaac.BlurRadAttr)
		}
	}
	if _daaac.StAAttr != nil {
		if _daceb := _daaac.StAAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u0041\u0074\u0074\u0072"); _daceb != nil {
			return _daceb
		}
	}
	if _daaac.StPosAttr != nil {
		if _ccabc := _daaac.StPosAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _ccabc != nil {
			return _ccabc
		}
	}
	if _daaac.EndAAttr != nil {
		if _cfadb := _daaac.EndAAttr.ValidateWithPath(path + "\u002fE\u006e\u0064\u0041\u0041\u0074\u0074r"); _cfadb != nil {
			return _cfadb
		}
	}
	if _daaac.EndPosAttr != nil {
		if _edefg := _daaac.EndPosAttr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _edefg != nil {
			return _edefg
		}
	}
	if _daaac.DistAttr != nil {
		if *_daaac.DistAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_daaac.DistAttr)
		}
		if *_daaac.DistAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_daaac.DistAttr)
		}
	}
	if _daaac.DirAttr != nil {
		if *_daaac.DirAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_daaac.DirAttr)
		}
		if *_daaac.DirAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_daaac.DirAttr)
		}
	}
	if _daaac.FadeDirAttr != nil {
		if *_daaac.FadeDirAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0046\u0061\u0064\u0065\u0044\u0069\u0072\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daaac.FadeDirAttr)
		}
		if *_daaac.FadeDirAttr >= 21600000 {
			return _e.Errorf("\u0025s\u002f\u006d.\u0046\u0061\u0064e\u0044\u0069\u0072\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_daaac.FadeDirAttr)
		}
	}
	if _daaac.SxAttr != nil {
		if _cdbd := _daaac.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cdbd != nil {
			return _cdbd
		}
	}
	if _daaac.SyAttr != nil {
		if _cebce := _daaac.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _cebce != nil {
			return _cebce
		}
	}
	if _daaac.KxAttr != nil {
		if *_daaac.KxAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_daaac.KxAttr)
		}
		if *_daaac.KxAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daaac.KxAttr)
		}
	}
	if _daaac.KyAttr != nil {
		if *_daaac.KyAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_daaac.KyAttr)
		}
		if *_daaac.KyAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_daaac.KyAttr)
		}
	}
	if _afae := _daaac.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _afae != nil {
		return _afae
	}
	return nil
}

type CT_TextField struct {
	IdAttr   string
	TypeAttr *string
	RPr      *CT_TextCharacterProperties
	PPr      *CT_TextParagraphProperties
	T        *string
}

func NewCT_TransformEffect() *CT_TransformEffect { _dcabg := &CT_TransformEffect{}; return _dcabg }

// Validate validates the CT_GeomGuideList and its children
func (_accbc *CT_GeomGuideList) Validate() error {
	return _accbc.ValidateWithPath("\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_QuickTimeFile and its children, prefixing error messages with path
func (_gbecg *CT_QuickTimeFile) ValidateWithPath(path string) error {
	if _gbecg.ExtLst != nil {
		if _agfce := _gbecg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _agfce != nil {
			return _agfce
		}
	}
	return nil
}

// Validate validates the CT_LineJoinRound and its children
func (_bgca *CT_LineJoinRound) Validate() error {
	return _bgca.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064")
}

type CT_ConnectionSiteList struct{ Cxn []*CT_ConnectionSite }
type ST_RectAlignment byte

// Validate validates the CT_TextNormalAutofit and its children
func (_dgfedb *CT_TextNormalAutofit) Validate() error {
	return _dgfedb.ValidateWithPath("C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074")
}

type CT_TextSpacing struct {
	SpcPct *CT_TextSpacingPercent
	SpcPts *CT_TextSpacingPoint
}

// Validate validates the CT_TableStyle and its children
func (_gfgga *CT_TableStyle) Validate() error {
	return _gfgga.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_aafac ST_PresetLineDashVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffebde := _d.Attr{}
	_ffebde.Name = name
	switch _aafac {
	case ST_PresetLineDashValUnset:
		_ffebde.Value = ""
	case ST_PresetLineDashValSolid:
		_ffebde.Value = "\u0073\u006f\u006ci\u0064"
	case ST_PresetLineDashValDot:
		_ffebde.Value = "\u0064\u006f\u0074"
	case ST_PresetLineDashValDash:
		_ffebde.Value = "\u0064\u0061\u0073\u0068"
	case ST_PresetLineDashValLgDash:
		_ffebde.Value = "\u006c\u0067\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValDashDot:
		_ffebde.Value = "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValLgDashDot:
		_ffebde.Value = "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case ST_PresetLineDashValLgDashDotDot:
		_ffebde.Value = "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDash:
		_ffebde.Value = "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case ST_PresetLineDashValSysDot:
		_ffebde.Value = "\u0073\u0079\u0073\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDot:
		_ffebde.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case ST_PresetLineDashValSysDashDotDot:
		_ffebde.Value = "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return _ffebde, nil
}
func (_cfdabf *CT_OfficeArtExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfdabf.Ext != nil {
		_bgef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _defgg := range _cfdabf.Ext {
			e.EncodeElement(_defgg, _bgef)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type AG_Blob struct {
	EmbedAttr *string
	LinkAttr  *string
}

// ValidateWithPath validates the CT_FillStyleList and its children, prefixing error messages with path
func (_fbcaf *CT_FillStyleList) ValidateWithPath(path string) error {
	for _ecdde, _bfea := range _fbcaf.EG_FillProperties {
		if _cagc := _bfea.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _ecdde)); _cagc != nil {
			return _cagc
		}
	}
	return nil
}
func (_degfa *CT_NonVisualDrawingShapeProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebdaf := range start.Attr {
		if _ebdaf.Name.Local == "\u0074\u0078\u0042o\u0078" {
			_gbdegf, _dbfaf := _cd.ParseBool(_ebdaf.Value)
			if _dbfaf != nil {
				return _dbfaf
			}
			_degfa.TxBoxAttr = &_gbdegf
			continue
		}
	}
_bbffd:
	for {
		_abecg, _fbaaa := d.Token()
		if _fbaaa != nil {
			return _fbaaa
		}
		switch _gaedf := _abecg.(type) {
		case _d.StartElement:
			switch _gaedf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u004c\u006f\u0063\u006b\u0073"}:
				_degfa.SpLocks = NewCT_ShapeLocking()
				if _fecae := d.DecodeElement(_degfa.SpLocks, &_gaedf); _fecae != nil {
					return _fecae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_degfa.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcaag := d.DecodeElement(_degfa.ExtLst, &_gaedf); _gcaag != nil {
					return _gcaag
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061w\u0069\u006e\u0067\u0053\u0068\u0061p\u0065\u0050r\u006f\u0070s\u0020%\u0076", _gaedf.Name)
				if _acge := d.Skip(); _acge != nil {
					return _acge
				}
			}
		case _d.EndElement:
			break _bbffd
		case _d.CharData:
		}
	}
	return nil
}
func (_gbc *CT_AnimationElementChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gbc.Dgm != nil {
		_ffe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064g\u006d"}}
		e.EncodeElement(_gbc.Dgm, _ffe)
	}
	if _gbc.Chart != nil {
		_efe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_gbc.Chart, _efe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlShape() *CT_GvmlShape {
	_bage := &CT_GvmlShape{}
	_bage.NvSpPr = NewCT_GvmlShapeNonVisual()
	_bage.SpPr = NewCT_ShapeProperties()
	return _bage
}

type CT_Angle struct{ ValAttr int32 }

func (_dfbec *CT_SchemeColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfbec.ValAttr = ST_SchemeColorVal(1)
	for _, _eaeabf := range start.Attr {
		if _eaeabf.Name.Local == "\u0076\u0061\u006c" {
			_dfbec.ValAttr.UnmarshalXMLAttr(_eaeabf)
			continue
		}
	}
_gafg:
	for {
		_geadg, _gcaed := d.Token()
		if _gcaed != nil {
			return _gcaed
		}
		switch _fabde := _geadg.(type) {
		case _d.StartElement:
			switch _fabde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ecfb := NewEG_ColorTransform()
				_ecfb.Tint = NewCT_PositiveFixedPercentage()
				if _ababb := d.DecodeElement(_ecfb.Tint, &_fabde); _ababb != nil {
					return _ababb
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _ecfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cabgc := NewEG_ColorTransform()
				_cabgc.Shade = NewCT_PositiveFixedPercentage()
				if _ddagd := d.DecodeElement(_cabgc.Shade, &_fabde); _ddagd != nil {
					return _ddagd
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _cabgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_aagf := NewEG_ColorTransform()
				_aagf.Comp = NewCT_ComplementTransform()
				if _eabaa := d.DecodeElement(_aagf.Comp, &_fabde); _eabaa != nil {
					return _eabaa
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _aagf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_dbfab := NewEG_ColorTransform()
				_dbfab.Inv = NewCT_InverseTransform()
				if _gaaeg := d.DecodeElement(_dbfab.Inv, &_fabde); _gaaeg != nil {
					return _gaaeg
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _dbfab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_gfcg := NewEG_ColorTransform()
				_gfcg.Gray = NewCT_GrayscaleTransform()
				if _gafcea := d.DecodeElement(_gfcg.Gray, &_fabde); _gafcea != nil {
					return _gafcea
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _gfcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bbebg := NewEG_ColorTransform()
				_bbebg.Alpha = NewCT_PositiveFixedPercentage()
				if _aacb := d.DecodeElement(_bbebg.Alpha, &_fabde); _aacb != nil {
					return _aacb
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bbebg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_cfbed := NewEG_ColorTransform()
				_cfbed.AlphaOff = NewCT_FixedPercentage()
				if _gbgaf := d.DecodeElement(_cfbed.AlphaOff, &_fabde); _gbgaf != nil {
					return _gbgaf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _cfbed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_bfcg := NewEG_ColorTransform()
				_bfcg.AlphaMod = NewCT_PositivePercentage()
				if _efdaa := d.DecodeElement(_bfcg.AlphaMod, &_fabde); _efdaa != nil {
					return _efdaa
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bfcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_dcaae := NewEG_ColorTransform()
				_dcaae.Hue = NewCT_PositiveFixedAngle()
				if _bdeaf := d.DecodeElement(_dcaae.Hue, &_fabde); _bdeaf != nil {
					return _bdeaf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _dcaae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_bdgaf := NewEG_ColorTransform()
				_bdgaf.HueOff = NewCT_Angle()
				if _cfccb := d.DecodeElement(_bdgaf.HueOff, &_fabde); _cfccb != nil {
					return _cfccb
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bdgaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_ffgbb := NewEG_ColorTransform()
				_ffgbb.HueMod = NewCT_PositivePercentage()
				if _bdbca := d.DecodeElement(_ffgbb.HueMod, &_fabde); _bdbca != nil {
					return _bdbca
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _ffgbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_cedce := NewEG_ColorTransform()
				_cedce.Sat = NewCT_Percentage()
				if _bedab := d.DecodeElement(_cedce.Sat, &_fabde); _bedab != nil {
					return _bedab
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _cedce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_dcecc := NewEG_ColorTransform()
				_dcecc.SatOff = NewCT_Percentage()
				if _efdgg := d.DecodeElement(_dcecc.SatOff, &_fabde); _efdgg != nil {
					return _efdgg
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _dcecc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_edefa := NewEG_ColorTransform()
				_edefa.SatMod = NewCT_Percentage()
				if _dacge := d.DecodeElement(_edefa.SatMod, &_fabde); _dacge != nil {
					return _dacge
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _edefa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_gabege := NewEG_ColorTransform()
				_gabege.Lum = NewCT_Percentage()
				if _acggc := d.DecodeElement(_gabege.Lum, &_fabde); _acggc != nil {
					return _acggc
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _gabege)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ffadd := NewEG_ColorTransform()
				_ffadd.LumOff = NewCT_Percentage()
				if _egfea := d.DecodeElement(_ffadd.LumOff, &_fabde); _egfea != nil {
					return _egfea
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _ffadd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_bdeda := NewEG_ColorTransform()
				_bdeda.LumMod = NewCT_Percentage()
				if _cfagf := d.DecodeElement(_bdeda.LumMod, &_fabde); _cfagf != nil {
					return _cfagf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bdeda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bcbdf := NewEG_ColorTransform()
				_bcbdf.Red = NewCT_Percentage()
				if _ebgac := d.DecodeElement(_bcbdf.Red, &_fabde); _ebgac != nil {
					return _ebgac
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bcbdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_acaed := NewEG_ColorTransform()
				_acaed.RedOff = NewCT_Percentage()
				if _agbgbf := d.DecodeElement(_acaed.RedOff, &_fabde); _agbgbf != nil {
					return _agbgbf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _acaed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dadgaa := NewEG_ColorTransform()
				_dadgaa.RedMod = NewCT_Percentage()
				if _ccegc := d.DecodeElement(_dadgaa.RedMod, &_fabde); _ccegc != nil {
					return _ccegc
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _dadgaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_eeeg := NewEG_ColorTransform()
				_eeeg.Green = NewCT_Percentage()
				if _cgdad := d.DecodeElement(_eeeg.Green, &_fabde); _cgdad != nil {
					return _cgdad
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _eeeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_agcge := NewEG_ColorTransform()
				_agcge.GreenOff = NewCT_Percentage()
				if _bbcgg := d.DecodeElement(_agcge.GreenOff, &_fabde); _bbcgg != nil {
					return _bbcgg
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _agcge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_dfaff := NewEG_ColorTransform()
				_dfaff.GreenMod = NewCT_Percentage()
				if _aeabd := d.DecodeElement(_dfaff.GreenMod, &_fabde); _aeabd != nil {
					return _aeabd
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _dfaff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_bbgfa := NewEG_ColorTransform()
				_bbgfa.Blue = NewCT_Percentage()
				if _aaagd := d.DecodeElement(_bbgfa.Blue, &_fabde); _aaagd != nil {
					return _aaagd
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _bbgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_gbbaa := NewEG_ColorTransform()
				_gbbaa.BlueOff = NewCT_Percentage()
				if _ddfc := d.DecodeElement(_gbbaa.BlueOff, &_fabde); _ddfc != nil {
					return _ddfc
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _gbbaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_facad := NewEG_ColorTransform()
				_facad.BlueMod = NewCT_Percentage()
				if _cbedf := d.DecodeElement(_facad.BlueMod, &_fabde); _cbedf != nil {
					return _cbedf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _facad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_baad := NewEG_ColorTransform()
				_baad.Gamma = NewCT_GammaTransform()
				if _accbf := d.DecodeElement(_baad.Gamma, &_fabde); _accbf != nil {
					return _accbf
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _baad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_fbbad := NewEG_ColorTransform()
				_fbbad.InvGamma = NewCT_InverseGammaTransform()
				if _dfceb := d.DecodeElement(_fbbad.InvGamma, &_fabde); _dfceb != nil {
					return _dfceb
				}
				_dfbec.EG_ColorTransform = append(_dfbec.EG_ColorTransform, _fbbad)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065\u0043o\u006co\u0072\u0020\u0025\u0076", _fabde.Name)
				if _cecgb := d.Skip(); _cecgb != nil {
					return _cecgb
				}
			}
		case _d.EndElement:
			break _gafg
		case _d.CharData:
		}
	}
	return nil
}
func (_cddcg *ST_FixedPercentage) ValidateWithPath(path string) error {
	_cdede := []string{}
	if _cddcg.ST_FixedPercentageDecimal != nil {
		_cdede = append(_cdede, "\u0053T\u005f\u0046\u0069\u0078e\u0064\u0050\u0065\u0072\u0063e\u006et\u0061g\u0065\u0044\u0065\u0063\u0069\u006d\u0061l")
	}
	if _cddcg.ST_FixedPercentage != nil {
		if _bbcfc := _cddcg.ST_FixedPercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fFi\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065"); _bbcfc != nil {
			return _bbcfc
		}
		_cdede = append(_cdede, "\u0053T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_cdede) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _cdede)
	}
	return nil
}
func (_aacab ST_LineCap) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aacab.String(), start)
}
func NewCT_PolarAdjustHandle() *CT_PolarAdjustHandle {
	_gdefe := &CT_PolarAdjustHandle{}
	_gdefe.Pos = NewCT_AdjPoint2D()
	return _gdefe
}

// Validate validates the CT_ComplementTransform and its children
func (_afcb *CT_ComplementTransform) Validate() error {
	return _afcb.ValidateWithPath("\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d")
}

// ValidateWithPath validates the CT_PresetTextShape and its children, prefixing error messages with path
func (_dcggg *CT_PresetTextShape) ValidateWithPath(path string) error {
	if _dcggg.PrstAttr == ST_TextShapeTypeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _edda := _dcggg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _edda != nil {
		return _edda
	}
	if _dcggg.AvLst != nil {
		if _abggaa := _dcggg.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _abggaa != nil {
			return _abggaa
		}
	}
	return nil
}
func NewCT_LineStyleList() *CT_LineStyleList { _aaabd := &CT_LineStyleList{}; return _aaabd }

// Validate validates the CT_ContentPartLocking and its children
func (_fgfcg *CT_ContentPartLocking) Validate() error {
	return _fgfcg.ValidateWithPath("C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_fage *ST_TextAutonumberScheme) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fage = 0
	case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 1
	case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 2
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 3
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 4
	case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 5
	case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 6
	case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 7
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 8
	case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 9
	case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
		*_fage = 10
	case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 11
	case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 12
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 13
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 14
	case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 15
	case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 16
	case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_fage = 17
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
		*_fage = 18
	case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
		*_fage = 19
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_fage = 20
	case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
		*_fage = 21
	case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 22
	case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
		*_fage = 23
	case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 24
	case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
		*_fage = 25
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
		*_fage = 26
	case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
		*_fage = 27
	case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 28
	case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
		*_fage = 29
	case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
		*_fage = 30
	case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
		*_fage = 31
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 32
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 33
	case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
		*_fage = 34
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 35
	case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
		*_fage = 36
	case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
		*_fage = 37
	case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
		*_fage = 38
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
		*_fage = 39
	case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
		*_fage = 40
	case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
		*_fage = 41
	}
	return nil
}
func (_ccee *CT_ContentPartLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgge := range start.Attr {
		if _cgge.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_bdga, _dbea := _cd.ParseBool(_cgge.Value)
			if _dbea != nil {
				return _dbea
			}
			_ccee.NoGrpAttr = &_bdga
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_daadf, _acfd := _cd.ParseBool(_cgge.Value)
			if _acfd != nil {
				return _acfd
			}
			_ccee.NoSelectAttr = &_daadf
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_ggca, _gdff := _cd.ParseBool(_cgge.Value)
			if _gdff != nil {
				return _gdff
			}
			_ccee.NoRotAttr = &_ggca
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_acfg, _egea := _cd.ParseBool(_cgge.Value)
			if _egea != nil {
				return _egea
			}
			_ccee.NoChangeAspectAttr = &_acfg
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_edga, _fbeeb := _cd.ParseBool(_cgge.Value)
			if _fbeeb != nil {
				return _fbeeb
			}
			_ccee.NoMoveAttr = &_edga
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gdfdd, _gaag := _cd.ParseBool(_cgge.Value)
			if _gaag != nil {
				return _gaag
			}
			_ccee.NoResizeAttr = &_gdfdd
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_bgae, _ffgd := _cd.ParseBool(_cgge.Value)
			if _ffgd != nil {
				return _ffgd
			}
			_ccee.NoEditPointsAttr = &_bgae
			continue
		}
		if _cgge.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ggcc, _abee := _cd.ParseBool(_cgge.Value)
			if _abee != nil {
				return _abee
			}
			_ccee.NoAdjustHandlesAttr = &_ggcc
			continue
		}
		if _cgge.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_aace, _aecb := _cd.ParseBool(_cgge.Value)
			if _aecb != nil {
				return _aecb
			}
			_ccee.NoChangeArrowheadsAttr = &_aace
			continue
		}
		if _cgge.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_fdffb, _cdfg := _cd.ParseBool(_cgge.Value)
			if _cdfg != nil {
				return _cdfg
			}
			_ccee.NoChangeShapeTypeAttr = &_fdffb
			continue
		}
	}
_bgdda:
	for {
		_dadd, _bfgae := d.Token()
		if _bfgae != nil {
			return _bfgae
		}
		switch _gbeg := _dadd.(type) {
		case _d.StartElement:
			switch _gbeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccee.ExtLst = NewCT_OfficeArtExtensionList()
				if _ggbdc := d.DecodeElement(_ccee.ExtLst, &_gbeg); _ggbdc != nil {
					return _ggbdc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050\u0061\u0072\u0074\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gbeg.Name)
				if _bfaad := d.Skip(); _bfaad != nil {
					return _bfaad
				}
			}
		case _d.EndElement:
			break _bgdda
		case _d.CharData:
		}
	}
	return nil
}

type CT_ReflectionEffect struct {
	BlurRadAttr      *int64
	StAAttr          *ST_PositiveFixedPercentage
	StPosAttr        *ST_PositiveFixedPercentage
	EndAAttr         *ST_PositiveFixedPercentage
	EndPosAttr       *ST_PositiveFixedPercentage
	DistAttr         *int64
	DirAttr          *int32
	FadeDirAttr      *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
}

// ValidateWithPath validates the CT_EffectProperties and its children, prefixing error messages with path
func (_baff *CT_EffectProperties) ValidateWithPath(path string) error {
	if _baff.EffectLst != nil {
		if _ebbcb := _baff.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ebbcb != nil {
			return _ebbcb
		}
	}
	if _baff.EffectDag != nil {
		if _agbgf := _baff.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _agbgf != nil {
			return _agbgf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualDrawingShapeProps and its children, prefixing error messages with path
func (_gcecg *CT_NonVisualDrawingShapeProps) ValidateWithPath(path string) error {
	if _gcecg.SpLocks != nil {
		if _edec := _gcecg.SpLocks.ValidateWithPath(path + "\u002f\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _edec != nil {
			return _edec
		}
	}
	if _gcecg.ExtLst != nil {
		if _gbbab := _gcecg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gbbab != nil {
			return _gbbab
		}
	}
	return nil
}

type CT_PositiveSize2D struct {
	CxAttr int64
	CyAttr int64
}

func _ggfdf(_facbe bool) uint8 {
	if _facbe {
		return 1
	}
	return 0
}

// ValidateWithPath validates the CT_TextField and its children, prefixing error messages with path
func (_eebge *CT_TextField) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_eebge.IdAttr) {
		return _e.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _eebge.IdAttr)
	}
	if _eebge.RPr != nil {
		if _gbeef := _eebge.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _gbeef != nil {
			return _gbeef
		}
	}
	if _eebge.PPr != nil {
		if _degbe := _eebge.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _degbe != nil {
			return _degbe
		}
	}
	return nil
}
func NewCT_TableStyleCellStyle() *CT_TableStyleCellStyle {
	_ebdca := &CT_TableStyleCellStyle{}
	return _ebdca
}
func NewCT_Blip() *CT_Blip { _gdgf := &CT_Blip{}; return _gdgf }
func (_egcdf *EG_LineDashProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gadg:
	for {
		_cfedea, _bddec := d.Token()
		if _bddec != nil {
			return _bddec
		}
		switch _ebeed := _cfedea.(type) {
		case _d.StartElement:
			switch _ebeed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_egcdf.PrstDash = NewCT_PresetLineDashProperties()
				if _ecbba := d.DecodeElement(_egcdf.PrstDash, &_ebeed); _ecbba != nil {
					return _ecbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_egcdf.CustDash = NewCT_DashStopList()
				if _cdacc := d.DecodeElement(_egcdf.CustDash, &_ebeed); _cdacc != nil {
					return _cdacc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ebeed.Name)
				if _baedcf := d.Skip(); _baedcf != nil {
					return _baedcf
				}
			}
		case _d.EndElement:
			break _gadg
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PositiveFixedPercentage() *CT_PositiveFixedPercentage {
	_ggcda := &CT_PositiveFixedPercentage{}
	return _ggcda
}

// ValidateWithPath validates the CT_GraphicalObjectData and its children, prefixing error messages with path
func (_bgeaa *CT_GraphicalObjectData) ValidateWithPath(path string) error { return nil }
func (_cggfa ST_PresetColorVal) ValidateWithPath(path string) error {
	switch _cggfa {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggfa))
	}
	return nil
}

// Validate validates the CT_ScRgbColor and its children
func (_ggafe *CT_ScRgbColor) Validate() error {
	return _ggafe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func (_eafa *ST_OnOffStyleType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_effffa, _abddb := d.Token()
	if _abddb != nil {
		return _abddb
	}
	if _bfdae, _fbeee := _effffa.(_d.EndElement); _fbeee && _bfdae.Name == start.Name {
		*_eafa = 1
		return nil
	}
	if _cdeaab, _aagdf := _effffa.(_d.CharData); !_aagdf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _effffa)
	} else {
		switch string(_cdeaab) {
		case "":
			*_eafa = 0
		case "\u006f\u006e":
			*_eafa = 1
		case "\u006f\u0066\u0066":
			*_eafa = 2
		case "\u0064\u0065\u0066":
			*_eafa = 3
		}
	}
	_effffa, _abddb = d.Token()
	if _abddb != nil {
		return _abddb
	}
	if _cggdeb, _fggba := _effffa.(_d.EndElement); _fggba && _cggdeb.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _effffa)
}
func NewCT_AlphaInverseEffect() *CT_AlphaInverseEffect { _gdf := &CT_AlphaInverseEffect{}; return _gdf }

// ValidateWithPath validates the CT_Hyperlink and its children, prefixing error messages with path
func (_gaaa *CT_Hyperlink) ValidateWithPath(path string) error {
	if _gaaa.Snd != nil {
		if _cdegef := _gaaa.Snd.ValidateWithPath(path + "\u002f\u0053\u006e\u0064"); _cdegef != nil {
			return _cdegef
		}
	}
	if _gaaa.ExtLst != nil {
		if _gccac := _gaaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gccac != nil {
			return _gccac
		}
	}
	return nil
}

// ValidateWithPath validates the CT_NonVisualPictureProperties and its children, prefixing error messages with path
func (_abeg *CT_NonVisualPictureProperties) ValidateWithPath(path string) error {
	if _abeg.PicLocks != nil {
		if _fgcbb := _abeg.PicLocks.ValidateWithPath(path + "\u002fP\u0069\u0063\u004c\u006f\u0063\u006bs"); _fgcbb != nil {
			return _fgcbb
		}
	}
	if _abeg.ExtLst != nil {
		if _dcaaa := _abeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcaaa != nil {
			return _dcaaa
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ScRgbColor and its children, prefixing error messages with path
func (_fdfg *CT_ScRgbColor) ValidateWithPath(path string) error {
	if _ffbfc := _fdfg.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _ffbfc != nil {
		return _ffbfc
	}
	if _bebfd := _fdfg.GAttr.ValidateWithPath(path + "\u002f\u0047\u0041\u0074\u0074\u0072"); _bebfd != nil {
		return _bebfd
	}
	if _agebd := _fdfg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _agebd != nil {
		return _agebd
	}
	for _gadcb, _cfbce := range _fdfg.EG_ColorTransform {
		if _dbadg := _cfbce.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gadcb)); _dbadg != nil {
			return _dbadg
		}
	}
	return nil
}

// Validate validates the CT_ConnectionSite and its children
func (_gedec *CT_ConnectionSite) Validate() error {
	return _gedec.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065")
}
func (_dggdf *CT_Path2DCubicBezierTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_cfced := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _cgeac := range _dggdf.Pt {
		e.EncodeElement(_cgeac, _cfced)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the Blip and its children
func (_gde *Blip) Validate() error { return _gde.ValidateWithPath("\u0042\u006c\u0069\u0070") }

// Validate validates the CT_DashStop and its children
func (_fegce *CT_DashStop) Validate() error {
	return _fegce.ValidateWithPath("C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070")
}

// ValidateWithPath validates the CT_Connection and its children, prefixing error messages with path
func (_bgff *CT_Connection) ValidateWithPath(path string) error { return nil }
func NewCT_GvmlConnector() *CT_GvmlConnector {
	_beef := &CT_GvmlConnector{}
	_beef.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_beef.SpPr = NewCT_ShapeProperties()
	return _beef
}
func (_gab *CT_AlphaFloorEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ccbgd ST_TextUnderlineType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aegeg := _d.Attr{}
	_aegeg.Name = name
	switch _ccbgd {
	case ST_TextUnderlineTypeUnset:
		_aegeg.Value = ""
	case ST_TextUnderlineTypeNone:
		_aegeg.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextUnderlineTypeWords:
		_aegeg.Value = "\u0077\u006f\u0072d\u0073"
	case ST_TextUnderlineTypeSng:
		_aegeg.Value = "\u0073\u006e\u0067"
	case ST_TextUnderlineTypeDbl:
		_aegeg.Value = "\u0064\u0062\u006c"
	case ST_TextUnderlineTypeHeavy:
		_aegeg.Value = "\u0068\u0065\u0061v\u0079"
	case ST_TextUnderlineTypeDotted:
		_aegeg.Value = "\u0064\u006f\u0074\u0074\u0065\u0064"
	case ST_TextUnderlineTypeDottedHeavy:
		_aegeg.Value = "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDash:
		_aegeg.Value = "\u0064\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDashHeavy:
		_aegeg.Value = "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeDashLong:
		_aegeg.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case ST_TextUnderlineTypeDashLongHeavy:
		_aegeg.Value = "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDash:
		_aegeg.Value = "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDashHeavy:
		_aegeg.Value = "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeDotDotDash:
		_aegeg.Value = "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case ST_TextUnderlineTypeDotDotDashHeavy:
		_aegeg.Value = "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavy:
		_aegeg.Value = "\u0077\u0061\u0076\u0079"
	case ST_TextUnderlineTypeWavyHeavy:
		_aegeg.Value = "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case ST_TextUnderlineTypeWavyDbl:
		_aegeg.Value = "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return _aegeg, nil
}
func ParseUnionST_AnimationChartBuildType(s string) (ST_AnimationChartBuildType, error) {
	_ecfdba := ST_AnimationChartBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_ecfdba.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		_ecfdba.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeries
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		_ecfdba.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategory
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		_ecfdba.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeSeriesEl
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		_ecfdba.ST_AnimationChartOnlyBuildType = ST_AnimationChartOnlyBuildTypeCategoryEl
	}
	return _ecfdba, nil
}

// ValidateWithPath validates the CT_ShapeLocking and its children, prefixing error messages with path
func (_fafef *CT_ShapeLocking) ValidateWithPath(path string) error {
	if _fafef.ExtLst != nil {
		if _efefab := _fafef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _efefab != nil {
			return _efefab
		}
	}
	return nil
}
func (_cbcfe ST_PresetColorVal) Validate() error { return _cbcfe.ValidateWithPath("") }
func (_eecb *CT_ConnectionSite) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eecb.Pos = NewCT_AdjPoint2D()
	for _, _aagd := range start.Attr {
		if _aagd.Name.Local == "\u0061\u006e\u0067" {
			_dfeef, _abcf := ParseUnionST_AdjAngle(_aagd.Value)
			if _abcf != nil {
				return _abcf
			}
			_eecb.AngAttr = _dfeef
			continue
		}
	}
_bcbc:
	for {
		_efba, _abcg := d.Token()
		if _abcg != nil {
			return _abcg
		}
		switch _aebc := _efba.(type) {
		case _d.StartElement:
			switch _aebc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _gefg := d.DecodeElement(_eecb.Pos, &_aebc); _gefg != nil {
					return _gefg
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u0020\u0025\u0076", _aebc.Name)
				if _fafe := d.Skip(); _fafe != nil {
					return _fafe
				}
			}
		case _d.EndElement:
			break _bcbc
		case _d.CharData:
		}
	}
	return nil
}

type CT_GvmlGraphicFrameNonVisual struct {
	CNvPr             *CT_NonVisualDrawingProps
	CNvGraphicFramePr *CT_NonVisualGraphicFrameProperties
}

// Validate validates the CT_ColorMappingOverrideChoice and its children
func (_bgga *CT_ColorMappingOverrideChoice) Validate() error {
	return _bgga.ValidateWithPath("\u0043\u0054_\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043\u0068oi\u0063\u0065")
}

// ValidateWithPath validates the CT_PositiveFixedPercentage and its children, prefixing error messages with path
func (_fcebd *CT_PositiveFixedPercentage) ValidateWithPath(path string) error {
	if _cagbb := _fcebd.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cagbb != nil {
		return _cagbb
	}
	return nil
}

// ValidateWithPath validates the EG_LineDashProperties and its children, prefixing error messages with path
func (_gcgbe *EG_LineDashProperties) ValidateWithPath(path string) error {
	if _gcgbe.PrstDash != nil {
		if _eadbe := _gcgbe.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _eadbe != nil {
			return _eadbe
		}
	}
	if _gcgbe.CustDash != nil {
		if _gebcb := _gcgbe.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _gebcb != nil {
			return _gebcb
		}
	}
	return nil
}

// Validate validates the CT_GroupShapeProperties and its children
func (_bgebf *CT_GroupShapeProperties) Validate() error {
	return _bgebf.ValidateWithPath("\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// Validate validates the AG_Locking and its children
func (_faa *AG_Locking) Validate() error {
	return _faa.ValidateWithPath("\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// Validate validates the CT_BlipChoice and its children
func (_bcgb *CT_BlipChoice) Validate() error {
	return _bcgb.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065")
}
func (_ebcdd *Tbl) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074b\u006c"
	return _ebcdd.CT_Table.MarshalXML(e, start)
}
func (_bfcge *CT_TextBulletColorFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextShapeAutofit and its children
func (_cdbfa *CT_TextShapeAutofit) Validate() error {
	return _cdbfa.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}

// Validate validates the CT_NonVisualPictureProperties and its children
func (_eade *CT_NonVisualPictureProperties) Validate() error {
	return _eade.ValidateWithPath("\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073")
}
func (_beggg *Theme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074\u0068\u0065\u006d\u0065"
	return _beggg.CT_OfficeStyleSheet.MarshalXML(e, start)
}
func (_affaf *CT_TextUnderlineFillFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcggbab *EG_ThemeableFontStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcggbab.Font != nil {
		_aececb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_dcggbab.Font, _aececb)
	}
	if _dcggbab.FontRef != nil {
		_ceabb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_dcggbab.FontRef, _ceabb)
	}
	return nil
}

type CT_AnimationGraphicalObjectBuildProperties struct {
	BldDgm   *CT_AnimationDgmBuildProperties
	BldChart *CT_AnimationChartBuildProperties
}

func (_efbe *CT_ColorSchemeAndMapping) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eagf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_efbe.ClrScheme, _eagf)
	if _efbe.ClrMap != nil {
		_geac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
		e.EncodeElement(_efbe.ClrMap, _geac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_acfgf *CT_TableStyleTextStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acfgf.BAttr != ST_OnOffStyleTypeUnset {
		_efcb, _gaabf := _acfgf.BAttr.MarshalXMLAttr(_d.Name{Local: "\u0062"})
		if _gaabf != nil {
			return _gaabf
		}
		start.Attr = append(start.Attr, _efcb)
	}
	if _acfgf.IAttr != ST_OnOffStyleTypeUnset {
		_ecfbc, _ebfbg := _acfgf.IAttr.MarshalXMLAttr(_d.Name{Local: "\u0069"})
		if _ebfbg != nil {
			return _ebfbg
		}
		start.Attr = append(start.Attr, _ecfbc)
	}
	e.EncodeToken(start)
	if _acfgf.Font != nil {
		_fggbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		e.EncodeElement(_acfgf.Font, _fggbf)
	}
	if _acfgf.FontRef != nil {
		_abfbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
		e.EncodeElement(_acfgf.FontRef, _abfbe)
	}
	if _acfgf.ScrgbClr != nil {
		_cefef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgf.ScrgbClr, _cefef)
	}
	if _acfgf.SrgbClr != nil {
		_afebg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_acfgf.SrgbClr, _afebg)
	}
	if _acfgf.HslClr != nil {
		_daebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgf.HslClr, _daebf)
	}
	if _acfgf.SysClr != nil {
		_bcadg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgf.SysClr, _bcadg)
	}
	if _acfgf.SchemeClr != nil {
		_fegba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgf.SchemeClr, _fegba)
	}
	if _acfgf.PrstClr != nil {
		_dfgfbb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_acfgf.PrstClr, _dfgfbb)
	}
	if _acfgf.ExtLst != nil {
		_adccdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acfgf.ExtLst, _adccdg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_LineEndWidth byte

func (_gggfb *CT_StyleMatrix) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gggfb.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_gggfb.NameAttr)})
	}
	e.EncodeToken(start)
	_cebge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gggfb.FillStyleLst, _cebge)
	_ecgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gggfb.LnStyleLst, _ecgg)
	_bfdfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ae\u0066\u0066\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gggfb.EffectStyleLst, _bfdfe)
	_faded := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ab\u0067\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}}
	e.EncodeElement(_gggfb.BgFillStyleLst, _faded)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_AlphaInverseEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_egbdd *CT_TextNormalAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bcadb := range start.Attr {
		if _bcadb.Name.Local == "\u0066o\u006e\u0074\u0053\u0063\u0061\u006ce" {
			_cdbee, _gedacd := ParseUnionST_TextFontScalePercentOrPercentString(_bcadb.Value)
			if _gedacd != nil {
				return _gedacd
			}
			_egbdd.FontScaleAttr = &_cdbee
			continue
		}
		if _bcadb.Name.Local == "\u006c\u006e\u0053\u0070\u0063\u0052\u0065\u0064\u0075c\u0074\u0069\u006f\u006e" {
			_fdbfca, _adcbd := ParseUnionST_TextSpacingPercentOrPercentString(_bcadb.Value)
			if _adcbd != nil {
				return _adcbd
			}
			_egbdd.LnSpcReductionAttr = &_fdbfca
			continue
		}
	}
	for {
		_fbfga, _gffgb := d.Token()
		if _gffgb != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fr\u006d\u0061\u006c\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _gffgb)
		}
		if _cdcgb, _adaeg := _fbfga.(_d.EndElement); _adaeg && _cdcgb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextUnderlineLineFollowText struct{}

func (_abdbac ST_AnimationChartBuildType) String() string {
	if _abdbac.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _abdbac.ST_AnimationBuildType.String()
	}
	if _abdbac.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		return _abdbac.ST_AnimationChartOnlyBuildType.String()
	}
	return ""
}

// ValidateWithPath validates the EG_Geometry and its children, prefixing error messages with path
func (_cfbab *EG_Geometry) ValidateWithPath(path string) error {
	if _cfbab.CustGeom != nil {
		if _degge := _cfbab.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _degge != nil {
			return _degge
		}
	}
	if _cfbab.PrstGeom != nil {
		if _deade := _cfbab.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _deade != nil {
			return _deade
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BlipChoice and its children, prefixing error messages with path
func (_ggeaf *CT_BlipChoice) ValidateWithPath(path string) error {
	for _gaafc, _acae := range _ggeaf.AlphaBiLevel {
		if _cfad := _acae.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c\u005b\u0025\u0064\u005d", path, _gaafc)); _cfad != nil {
			return _cfad
		}
	}
	for _gaf, _dcdg := range _ggeaf.AlphaCeiling {
		if _gcb := _dcdg.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0041lp\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067\u005b\u0025\u0064\u005d", path, _gaf)); _gcb != nil {
			return _gcb
		}
	}
	for _fdade, _ccaa := range _ggeaf.AlphaFloor {
		if _eefc := _ccaa.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006fr\u005b\u0025\u0064\u005d", path, _fdade)); _eefc != nil {
			return _eefc
		}
	}
	for _bcae, _feca := range _ggeaf.AlphaInv {
		if _begd := _feca.ValidateWithPath(_e.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u005b\u0025\u0064\u005d", path, _bcae)); _begd != nil {
			return _begd
		}
	}
	for _edbd, _bfab := range _ggeaf.AlphaMod {
		if _ebfa := _bfab.ValidateWithPath(_e.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u005b\u0025\u0064\u005d", path, _edbd)); _ebfa != nil {
			return _ebfa
		}
	}
	for _bcgc, _bbbeg := range _ggeaf.AlphaModFix {
		if _daad := _bbbeg.ValidateWithPath(_e.Sprintf("\u0025s\u002fA\u006c\u0070\u0068\u0061\u004do\u0064\u0046i\u0078\u005b\u0025\u0064\u005d", path, _bcgc)); _daad != nil {
			return _daad
		}
	}
	for _fecg, _beb := range _ggeaf.AlphaRepl {
		if _baf := _beb.ValidateWithPath(_e.Sprintf("\u0025\u0073/\u0041\u006c\u0070h\u0061\u0052\u0065\u0070\u006c\u005b\u0025\u0064\u005d", path, _fecg)); _baf != nil {
			return _baf
		}
	}
	for _cdeg, _geag := range _ggeaf.BiLevel {
		if _ecae := _geag.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0042\u0069\u004c\u0065\u0076\u0065l\u005b\u0025\u0064\u005d", path, _cdeg)); _ecae != nil {
			return _ecae
		}
	}
	for _fefac, _bfdec := range _ggeaf.Blur {
		if _ddfb := _bfdec.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0042\u006c\u0075\u0072\u005b\u0025\u0064\u005d", path, _fefac)); _ddfb != nil {
			return _ddfb
		}
	}
	for _efcf, _fecb := range _ggeaf.ClrChange {
		if _beed := _fecb.ValidateWithPath(_e.Sprintf("\u0025\u0073/\u0043\u006c\u0072C\u0068\u0061\u006e\u0067\u0065\u005b\u0025\u0064\u005d", path, _efcf)); _beed != nil {
			return _beed
		}
	}
	for _bcfcb, _cff := range _ggeaf.ClrRepl {
		if _eeg := _cff.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u006c\u0072\u0052\u0065\u0070l\u005b\u0025\u0064\u005d", path, _bcfcb)); _eeg != nil {
			return _eeg
		}
	}
	for _facg, _gfc := range _ggeaf.Duotone {
		if _bbbd := _gfc.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0044\u0075\u006f\u0074\u006f\u006ee\u005b\u0025\u0064\u005d", path, _facg)); _bbbd != nil {
			return _bbbd
		}
	}
	for _gbg, _ccec := range _ggeaf.FillOverlay {
		if _dgcf := _ccec.ValidateWithPath(_e.Sprintf("\u0025s\u002fF\u0069\u006c\u006c\u004f\u0076e\u0072\u006ca\u0079\u005b\u0025\u0064\u005d", path, _gbg)); _dgcf != nil {
			return _dgcf
		}
	}
	for _ecc, _fbbbd := range _ggeaf.Grayscl {
		if _cgcbd := _fbbbd.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0061\u0079\u0073\u0063l\u005b\u0025\u0064\u005d", path, _ecc)); _cgcbd != nil {
			return _cgcbd
		}
	}
	for _ecaf, _gaab := range _ggeaf.Hsl {
		if _bgaa := _gaab.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0048\u0073\u006c\u005b\u0025\u0064\u005d", path, _ecaf)); _bgaa != nil {
			return _bgaa
		}
	}
	for _gaef, _abfa := range _ggeaf.Lum {
		if _aff := _abfa.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u004c\u0075\u006d\u005b\u0025\u0064\u005d", path, _gaef)); _aff != nil {
			return _aff
		}
	}
	for _cbf, _egdf := range _ggeaf.Tint {
		if _gabf := _egdf.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0054\u0069\u006e\u0074\u005b\u0025\u0064\u005d", path, _cbf)); _gabf != nil {
			return _gabf
		}
	}
	return nil
}

type EG_TextGeometry struct {
	CustGeom   *CT_CustomGeometry2D
	PrstTxWarp *CT_PresetTextShape
}

func (_agdg *CT_ConnectorLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _agdg.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoGrpAttr))})
	}
	if _agdg.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoSelectAttr))})
	}
	if _agdg.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoRotAttr))})
	}
	if _agdg.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoChangeAspectAttr))})
	}
	if _agdg.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoMoveAttr))})
	}
	if _agdg.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoResizeAttr))})
	}
	if _agdg.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoEditPointsAttr))})
	}
	if _agdg.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoAdjustHandlesAttr))})
	}
	if _agdg.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoChangeArrowheadsAttr))})
	}
	if _agdg.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_agdg.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _agdg.ExtLst != nil {
		_fbaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_agdg.ExtLst, _fbaa)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_NonVisualContentPartProperties and its children, prefixing error messages with path
func (_fegfg *CT_NonVisualContentPartProperties) ValidateWithPath(path string) error {
	if _fegfg.CpLocks != nil {
		if _cebcg := _fegfg.CpLocks.ValidateWithPath(path + "\u002f\u0043\u0070\u004c\u006f\u0063\u006b\u0073"); _cebcg != nil {
			return _cebcg
		}
	}
	if _fegfg.ExtLst != nil {
		if _bdggfe := _fegfg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bdggfe != nil {
			return _bdggfe
		}
	}
	return nil
}

// Validate validates the CT_TableStyleList and its children
func (_fgegge *CT_TableStyleList) Validate() error {
	return _fgegge.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074")
}

type EG_ThemeableFillStyle struct {
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
}

// Validate validates the EG_ShadeProperties and its children
func (_bcdba *EG_ShadeProperties) Validate() error {
	return _bcdba.ValidateWithPath("\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}

type ST_TextAnchoringType byte

func (_cgfcf *CT_Path2DMoveTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bdaef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_cgfcf.Pt, _bdaef)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bccg *CT_ColorMappingOverrideChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bccg.MasterClrMapping != nil {
		_bedaf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006da\u0073\u0074\u0065\u0072\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}}
		e.EncodeElement(_bccg.MasterClrMapping, _bedaf)
	}
	if _bccg.OverrideClrMapping != nil {
		_adcfg := _d.StartElement{Name: _d.Name{Local: "a\u003ao\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0043l\u0072\u004d\u0061\u0070pi\u006e\u0067"}}
		e.EncodeElement(_bccg.OverrideClrMapping, _adcfg)
	}
	return nil
}

// Validate validates the CT_TextSpacingPoint and its children
func (_fbegf *CT_TextSpacingPoint) Validate() error {
	return _fbegf.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074")
}
func (_edagb ST_LineEndWidth) Validate() error { return _edagb.ValidateWithPath("") }
func NewCT_GvmlGroupShapeNonVisual() *CT_GvmlGroupShapeNonVisual {
	_fbeaf := &CT_GvmlGroupShapeNonVisual{}
	_fbeaf.CNvPr = NewCT_NonVisualDrawingProps()
	_fbeaf.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
	return _fbeaf
}

type CT_TableGrid struct{ GridCol []*CT_TableCol }

func NewCT_QuickTimeFile() *CT_QuickTimeFile { _egefg := &CT_QuickTimeFile{}; return _egefg }
func (_agcd *CT_Connection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", _agcd.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _e.Sprintf("\u0025\u0076", _agcd.IdxAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TablePartStyle and its children, prefixing error messages with path
func (_fdfca *CT_TablePartStyle) ValidateWithPath(path string) error {
	if _fdfca.TcTxStyle != nil {
		if _bfgeb := _fdfca.TcTxStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"); _bfgeb != nil {
			return _bfgeb
		}
	}
	if _fdfca.TcStyle != nil {
		if _efbca := _fdfca.TcStyle.ValidateWithPath(path + "\u002f\u0054\u0063\u0053\u0074\u0079\u006c\u0065"); _efbca != nil {
			return _efbca
		}
	}
	return nil
}

type ST_AnimationBuildType byte

func (_bgagf ST_TextAnchoringType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ddbef := _d.Attr{}
	_ddbef.Name = name
	switch _bgagf {
	case ST_TextAnchoringTypeUnset:
		_ddbef.Value = ""
	case ST_TextAnchoringTypeT:
		_ddbef.Value = "\u0074"
	case ST_TextAnchoringTypeCtr:
		_ddbef.Value = "\u0063\u0074\u0072"
	case ST_TextAnchoringTypeB:
		_ddbef.Value = "\u0062"
	case ST_TextAnchoringTypeJust:
		_ddbef.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAnchoringTypeDist:
		_ddbef.Value = "\u0064\u0069\u0073\u0074"
	}
	return _ddbef, nil
}

// Validate validates the CT_TextCharBullet and its children
func (_cddedc *CT_TextCharBullet) Validate() error {
	return _cddedc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074")
}

// ValidateWithPath validates the CT_DefaultShapeDefinition and its children, prefixing error messages with path
func (_dcfd *CT_DefaultShapeDefinition) ValidateWithPath(path string) error {
	if _cegfb := _dcfd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _cegfb != nil {
		return _cegfb
	}
	if _gfec := _dcfd.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _gfec != nil {
		return _gfec
	}
	if _bbege := _dcfd.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _bbege != nil {
		return _bbege
	}
	if _dcfd.Style != nil {
		if _aaag := _dcfd.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _aaag != nil {
			return _aaag
		}
	}
	if _dcfd.ExtLst != nil {
		if _geece := _dcfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _geece != nil {
			return _geece
		}
	}
	return nil
}
func (_agbaa *CT_InverseTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_begdb, _gfede := d.Token()
		if _gfede != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0049\u006e\u0076\u0065\u0072s\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _gfede)
		}
		if _abgad, _fdfe := _begdb.(_d.EndElement); _fdfe && _abgad.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_NonVisualDrawingProps struct {
	IdAttr     uint32
	NameAttr   string
	DescrAttr  *string
	HiddenAttr *bool
	TitleAttr  *string
	HlinkClick *CT_Hyperlink
	HlinkHover *CT_Hyperlink
	ExtLst     *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the EG_OfficeArtExtensionList and its children, prefixing error messages with path
func (_bbcc *EG_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _cggdd, _ggacb := range _bbcc.Ext {
		if _adabe := _ggacb.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _cggdd)); _adabe != nil {
			return _adabe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LinearShadeProperties and its children, prefixing error messages with path
func (_gdcf *CT_LinearShadeProperties) ValidateWithPath(path string) error {
	if _gdcf.AngAttr != nil {
		if *_gdcf.AngAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0041\u006eg\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gdcf.AngAttr)
		}
		if *_gdcf.AngAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eA\u006e\u0067\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gdcf.AngAttr)
		}
	}
	return nil
}
func NewCT_GeomRect() *CT_GeomRect { _gaac := &CT_GeomRect{}; return _gaac }
func (_egefc *CT_GvmlConnectorNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_egefc.CNvPr = NewCT_NonVisualDrawingProps()
	_egefc.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
_ecfcd:
	for {
		_dbbfb, _bdcd := d.Token()
		if _bdcd != nil {
			return _bdcd
		}
		switch _eeee := _dbbfb.(type) {
		case _d.StartElement:
			switch _eeee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _ebcgf := d.DecodeElement(_egefc.CNvPr, &_eeee); _ebcgf != nil {
					return _ebcgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}:
				if _gbdag := d.DecodeElement(_egefc.CNvCxnSpPr, &_eeee); _gbdag != nil {
					return _gbdag
				}
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006ee\u0063t\u006f\u0072\u004e\u006f\u006e\u0056\u0069\u0073u\u0061l\u0020\u0025v", _eeee.Name)
				if _afded := d.Skip(); _afded != nil {
					return _afded
				}
			}
		case _d.EndElement:
			break _ecfcd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the EG_TextRun and its children
func (_bcegbf *EG_TextRun) Validate() error {
	return _bcegbf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e")
}
func (_beabg ST_LightRigDirection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_beabg.String(), start)
}
func (_fecfe ST_PositiveFixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fecfe.ST_PositiveFixedPercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_fecfe.ST_PositiveFixedPercentageDecimal)))
	}
	if _fecfe.ST_PositiveFixedPercentage != nil {
		e.Encode(_fecfe.ST_PositiveFixedPercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func NewCT_ColorSchemeList() *CT_ColorSchemeList { _agcgb := &CT_ColorSchemeList{}; return _agcgb }
func (_ffdfc *ST_TextCapsType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ffdfc = 0
	case "\u006e\u006f\u006e\u0065":
		*_ffdfc = 1
	case "\u0073\u006d\u0061l\u006c":
		*_ffdfc = 2
	case "\u0061\u006c\u006c":
		*_ffdfc = 3
	}
	return nil
}
func NewCT_ClipboardStyleSheet() *CT_ClipboardStyleSheet {
	_bddg := &CT_ClipboardStyleSheet{}
	_bddg.ThemeElements = NewCT_BaseStyles()
	_bddg.ClrMap = NewCT_ColorMapping()
	return _bddg
}

// Validate validates the CT_GvmlShape and its children
func (_eedfe *CT_GvmlShape) Validate() error {
	return _eedfe.ValidateWithPath("\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_TextParagraphProperties and its children
func (_fcfcc *CT_TextParagraphProperties) Validate() error {
	return _fcfcc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}
func (_egcgf *CT_SupplementalFont) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0063\u0072\u0069\u0070\u0074"}, Value: _e.Sprintf("\u0025\u0076", _egcgf.ScriptAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _e.Sprintf("\u0025\u0076", _egcgf.TypefaceAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AudioFile and its children, prefixing error messages with path
func (_caeb *CT_AudioFile) ValidateWithPath(path string) error {
	if _caeb.ExtLst != nil {
		if _afdf := _caeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afdf != nil {
			return _afdf
		}
	}
	return nil
}
func (_eacde *CT_TextBulletSizeFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GvmlTextShape and its children
func (_dafbc *CT_GvmlTextShape) Validate() error {
	return _dafbc.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_SoftEdgesEffect and its children
func (_fgfcgf *CT_SoftEdgesEffect) Validate() error {
	return _fgfcgf.ValidateWithPath("\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_EffectList and its children
func (_ggda *CT_EffectList) Validate() error {
	return _ggda.ValidateWithPath("\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074")
}
func (_ggbgb ST_LightRigDirection) ValidateWithPath(path string) error {
	switch _ggbgb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggbgb))
	}
	return nil
}

// ValidateWithPath validates the CT_ClipboardStyleSheet and its children, prefixing error messages with path
func (_efdcc *CT_ClipboardStyleSheet) ValidateWithPath(path string) error {
	if _bagd := _efdcc.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _bagd != nil {
		return _bagd
	}
	if _abbbf := _efdcc.ClrMap.ValidateWithPath(path + "\u002fC\u006c\u0072\u004d\u0061\u0070"); _abbbf != nil {
		return _abbbf
	}
	return nil
}
func NewCT_Ratio() *CT_Ratio { _gcgag := &CT_Ratio{}; return _gcgag }
func NewCT_PresetColor() *CT_PresetColor {
	_dgbbg := &CT_PresetColor{}
	_dgbbg.ValAttr = ST_PresetColorVal(1)
	return _dgbbg
}

// Validate validates the CT_TextNoBullet and its children
func (_cbdbd *CT_TextNoBullet) Validate() error {
	return _cbdbd.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074")
}
func (_bebd *CT_OfficeArtExtension) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _acbf := range start.Attr {
		if _acbf.Name.Local == "\u0075\u0072\u0069" {
			_bbedd, _ffafc := _acbf.Value, error(nil)
			if _ffafc != nil {
				return _ffafc
			}
			_bebd.UriAttr = _bbedd
			continue
		}
	}
_gcgba:
	for {
		_fbfae, _bfggd := d.Token()
		if _bfggd != nil {
			return _bfggd
		}
		switch _dbfbf := _fbfae.(type) {
		case _d.StartElement:
			switch _dbfbf.Name {
			default:
				if _fffbe, _eded := _ff.CreateElement(_dbfbf); _eded != nil {
					return _eded
				} else {
					if _cedb := d.DecodeElement(_fffbe, &_dbfbf); _cedb != nil {
						return _cedb
					}
					_bebd.Any = append(_bebd.Any, _fffbe)
				}
			}
		case _d.EndElement:
			break _gcgba
		case _d.CharData:
		}
	}
	return nil
}

type CT_EffectContainer struct {
	TypeAttr     ST_EffectContainerType
	NameAttr     *string
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}
type CT_TextLineBreak struct{ RPr *CT_TextCharacterProperties }

func (_afg *CT_Angle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _afg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextBody and its children, prefixing error messages with path
func (_adceab *CT_TextBody) ValidateWithPath(path string) error {
	if _deab := _adceab.BodyPr.ValidateWithPath(path + "\u002fB\u006f\u0064\u0079\u0050\u0072"); _deab != nil {
		return _deab
	}
	if _adceab.LstStyle != nil {
		if _afeac := _adceab.LstStyle.ValidateWithPath(path + "\u002fL\u0073\u0074\u0053\u0074\u0079\u006ce"); _afeac != nil {
			return _afeac
		}
	}
	for _cfcgg, _ebafe := range _adceab.P {
		if _bdffb := _ebafe.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0050\u005b\u0025\u0064\u005d", path, _cfcgg)); _bdffb != nil {
			return _bdffb
		}
	}
	return nil
}
func (_gcgfg *CT_SolidColorFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbfcf:
	for {
		_edegf, _dbbfbb := d.Token()
		if _dbbfbb != nil {
			return _dbbfbb
		}
		switch _cdag := _edegf.(type) {
		case _d.StartElement:
			switch _cdag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_gcgfg.ScrgbClr = NewCT_ScRgbColor()
				if _adbae := d.DecodeElement(_gcgfg.ScrgbClr, &_cdag); _adbae != nil {
					return _adbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_gcgfg.SrgbClr = NewCT_SRgbColor()
				if _aaega := d.DecodeElement(_gcgfg.SrgbClr, &_cdag); _aaega != nil {
					return _aaega
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_gcgfg.HslClr = NewCT_HslColor()
				if _acgag := d.DecodeElement(_gcgfg.HslClr, &_cdag); _acgag != nil {
					return _acgag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_gcgfg.SysClr = NewCT_SystemColor()
				if _cggea := d.DecodeElement(_gcgfg.SysClr, &_cdag); _cggea != nil {
					return _cggea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gcgfg.SchemeClr = NewCT_SchemeColor()
				if _fgaab := d.DecodeElement(_gcgfg.SchemeClr, &_cdag); _fgaab != nil {
					return _fgaab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_gcgfg.PrstClr = NewCT_PresetColor()
				if _ddcfdb := d.DecodeElement(_gcgfg.PrstClr, &_cdag); _ddcfdb != nil {
					return _ddcfdb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0053\u006f\u006c\u0069\u0064\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _cdag.Name)
				if _badgb := d.Skip(); _badgb != nil {
					return _badgb
				}
			}
		case _d.EndElement:
			break _cbfcf
		case _d.CharData:
		}
	}
	return nil
}
func (_bdb *CT_AnimationDgmBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebc := range start.Attr {
		if _ebc.Name.Local == "\u0062\u006c\u0064" {
			_fgg, _adg := ParseUnionST_AnimationDgmBuildType(_ebc.Value)
			if _adg != nil {
				return _adg
			}
			_bdb.BldAttr = &_fgg
			continue
		}
		if _ebc.Name.Local == "\u0072\u0065\u0076" {
			_bfa, _degc := _cd.ParseBool(_ebc.Value)
			if _degc != nil {
				return _degc
			}
			_bdb.RevAttr = &_bfa
			continue
		}
	}
	for {
		_cae, _ecdc := d.Token()
		if _ecdc != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0042\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _ecdc)
		}
		if _gdb, _fce := _cae.(_d.EndElement); _fce && _gdb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccbdgb ST_PresetShadowVal) String() string {
	switch _ccbdgb {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0064w\u0031"
	case 2:
		return "\u0073\u0068\u0064w\u0032"
	case 3:
		return "\u0073\u0068\u0064w\u0033"
	case 4:
		return "\u0073\u0068\u0064w\u0034"
	case 5:
		return "\u0073\u0068\u0064w\u0035"
	case 6:
		return "\u0073\u0068\u0064w\u0036"
	case 7:
		return "\u0073\u0068\u0064w\u0037"
	case 8:
		return "\u0073\u0068\u0064w\u0038"
	case 9:
		return "\u0073\u0068\u0064w\u0039"
	case 10:
		return "\u0073\u0068\u0064\u0077\u0031\u0030"
	case 11:
		return "\u0073\u0068\u0064\u0077\u0031\u0031"
	case 12:
		return "\u0073\u0068\u0064\u0077\u0031\u0032"
	case 13:
		return "\u0073\u0068\u0064\u0077\u0031\u0033"
	case 14:
		return "\u0073\u0068\u0064\u0077\u0031\u0034"
	case 15:
		return "\u0073\u0068\u0064\u0077\u0031\u0035"
	case 16:
		return "\u0073\u0068\u0064\u0077\u0031\u0036"
	case 17:
		return "\u0073\u0068\u0064\u0077\u0031\u0037"
	case 18:
		return "\u0073\u0068\u0064\u0077\u0031\u0038"
	case 19:
		return "\u0073\u0068\u0064\u0077\u0031\u0039"
	case 20:
		return "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return ""
}

type CT_TextListStyle struct {
	DefPPr  *CT_TextParagraphProperties
	Lvl1pPr *CT_TextParagraphProperties
	Lvl2pPr *CT_TextParagraphProperties
	Lvl3pPr *CT_TextParagraphProperties
	Lvl4pPr *CT_TextParagraphProperties
	Lvl5pPr *CT_TextParagraphProperties
	Lvl6pPr *CT_TextParagraphProperties
	Lvl7pPr *CT_TextParagraphProperties
	Lvl8pPr *CT_TextParagraphProperties
	Lvl9pPr *CT_TextParagraphProperties
	ExtLst  *CT_OfficeArtExtensionList
}
type CT_TablePropertiesChoice struct {
	TableStyle   *CT_TableStyle
	TableStyleId *string
}

// ValidateWithPath validates the CT_ColorMappingOverride and its children, prefixing error messages with path
func (_gfce *CT_ColorMappingOverride) ValidateWithPath(path string) error {
	if _fagb := _gfce.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _fagb != nil {
		return _fagb
	}
	return nil
}

type EG_FillModeProperties struct {
	Tile    *CT_TileInfoProperties
	Stretch *CT_StretchInfoProperties
}

func (_fcdfcg *CT_Path2DArcTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077\u0052"}, Value: _e.Sprintf("\u0025\u0076", _fcdfcg.WRAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0052"}, Value: _e.Sprintf("\u0025\u0076", _fcdfcg.HRAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0041n\u0067"}, Value: _e.Sprintf("\u0025\u0076", _fcdfcg.StAngAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0077\u0041n\u0067"}, Value: _e.Sprintf("\u0025\u0076", _fcdfcg.SwAngAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebgda ST_TextAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ebgda.String(), start)
}
func NewCT_FontCollection() *CT_FontCollection {
	_eagc := &CT_FontCollection{}
	_eagc.Latin = NewCT_TextFont()
	_eagc.Ea = NewCT_TextFont()
	_eagc.Cs = NewCT_TextFont()
	return _eagc
}
func (_cfbae *CT_SphereCoords) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u0074"}, Value: _e.Sprintf("\u0025\u0076", _cfbae.LatAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u006f\u006e"}, Value: _e.Sprintf("\u0025\u0076", _cfbae.LonAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _e.Sprintf("\u0025\u0076", _cfbae.RevAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TableBackgroundStyle and its children, prefixing error messages with path
func (_bafg *CT_TableBackgroundStyle) ValidateWithPath(path string) error {
	if _bafg.Fill != nil {
		if _gcbd := _bafg.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _gcbd != nil {
			return _gcbd
		}
	}
	if _bafg.FillRef != nil {
		if _dagedd := _bafg.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _dagedd != nil {
			return _dagedd
		}
	}
	if _bafg.Effect != nil {
		if _cddad := _bafg.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _cddad != nil {
			return _cddad
		}
	}
	if _bafg.EffectRef != nil {
		if _ggcfg := _bafg.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _ggcfg != nil {
			return _ggcfg
		}
	}
	return nil
}
func (_bdcgb *CT_GvmlPictureNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gffc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_bdcgb.CNvPr, _gffc)
	_caec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}}
	e.EncodeElement(_bdcgb.CNvPicPr, _caec)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bafdf *CT_ShapeStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gfedf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
	e.EncodeElement(_bafdf.LnRef, _gfedf)
	_dfbdd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
	e.EncodeElement(_bafdf.FillRef, _dfbdd)
	_acaef := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
	e.EncodeElement(_bafdf.EffectRef, _acaef)
	_edbff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u006f\u006e\u0074\u0052\u0065f"}}
	e.EncodeElement(_bafdf.FontRef, _edbff)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ObjectStyleDefaults and its children, prefixing error messages with path
func (_bgdc *CT_ObjectStyleDefaults) ValidateWithPath(path string) error {
	if _bgdc.SpDef != nil {
		if _gedd := _bgdc.SpDef.ValidateWithPath(path + "\u002f\u0053\u0070\u0044\u0065\u0066"); _gedd != nil {
			return _gedd
		}
	}
	if _bgdc.LnDef != nil {
		if _ggagd := _bgdc.LnDef.ValidateWithPath(path + "\u002f\u004c\u006e\u0044\u0065\u0066"); _ggagd != nil {
			return _ggagd
		}
	}
	if _bgdc.TxDef != nil {
		if _ceefe := _bgdc.TxDef.ValidateWithPath(path + "\u002f\u0054\u0078\u0044\u0065\u0066"); _ceefe != nil {
			return _ceefe
		}
	}
	if _bgdc.ExtLst != nil {
		if _aeff := _bgdc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aeff != nil {
			return _aeff
		}
	}
	return nil
}
func (_efega *ST_ShapeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ggcgb, _dddea := d.Token()
	if _dddea != nil {
		return _dddea
	}
	if _cgddc, _ebbga := _ggcgb.(_d.EndElement); _ebbga && _cgddc.Name == start.Name {
		*_efega = 1
		return nil
	}
	if _fcbcb, _daaaca := _ggcgb.(_d.CharData); !_daaaca {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ggcgb)
	} else {
		switch string(_fcbcb) {
		case "":
			*_efega = 0
		case "\u006c\u0069\u006e\u0065":
			*_efega = 1
		case "\u006ci\u006e\u0065\u0049\u006e\u0076":
			*_efega = 2
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_efega = 3
		case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_efega = 4
		case "\u0072\u0065\u0063\u0074":
			*_efega = 5
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_efega = 6
		case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
			*_efega = 7
		case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
			*_efega = 8
		case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
			*_efega = 9
		case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
			*_efega = 10
		case "\u0068e\u0078\u0061\u0067\u006f\u006e":
			*_efega = 11
		case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
			*_efega = 12
		case "\u006fc\u0074\u0061\u0067\u006f\u006e":
			*_efega = 13
		case "\u0064e\u0063\u0061\u0067\u006f\u006e":
			*_efega = 14
		case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
			*_efega = 15
		case "\u0073\u0074\u0061r\u0034":
			*_efega = 16
		case "\u0073\u0074\u0061r\u0035":
			*_efega = 17
		case "\u0073\u0074\u0061r\u0036":
			*_efega = 18
		case "\u0073\u0074\u0061r\u0037":
			*_efega = 19
		case "\u0073\u0074\u0061r\u0038":
			*_efega = 20
		case "\u0073\u0074\u0061\u0072\u0031\u0030":
			*_efega = 21
		case "\u0073\u0074\u0061\u0072\u0031\u0032":
			*_efega = 22
		case "\u0073\u0074\u0061\u0072\u0031\u0036":
			*_efega = 23
		case "\u0073\u0074\u0061\u0072\u0032\u0034":
			*_efega = 24
		case "\u0073\u0074\u0061\u0072\u0033\u0032":
			*_efega = 25
		case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
			*_efega = 26
		case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
			*_efega = 27
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
			*_efega = 28
		case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
			*_efega = 29
		case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
			*_efega = 30
		case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
			*_efega = 31
		case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
			*_efega = 32
		case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
			*_efega = 33
		case "\u0070\u006c\u0061\u0071\u0075\u0065":
			*_efega = 34
		case "\u0065l\u006c\u0069\u0070\u0073\u0065":
			*_efega = 35
		case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
			*_efega = 36
		case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
			*_efega = 37
		case "\u0063h\u0065\u0076\u0072\u006f\u006e":
			*_efega = 38
		case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
			*_efega = 39
		case "\u0070\u0069\u0065":
			*_efega = 40
		case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
			*_efega = 41
		case "\u0064\u006f\u006eu\u0074":
			*_efega = 42
		case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
			*_efega = 43
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_efega = 44
		case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
			*_efega = 45
		case "\u0075p\u0041\u0072\u0072\u006f\u0077":
			*_efega = 46
		case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
			*_efega = 47
		case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_efega = 48
		case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_efega = 49
		case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_efega = 50
		case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
			*_efega = 51
		case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_efega = 52
		case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_efega = 53
		case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_efega = 54
		case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
			*_efega = 55
		case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 56
		case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_efega = 57
		case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
			*_efega = 58
		case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 59
		case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 60
		case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
			*_efega = 61
		case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 62
		case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
			*_efega = 63
		case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
			*_efega = 64
		case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
			*_efega = 65
		case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
			*_efega = 66
		case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
			*_efega = 67
		case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
			*_efega = 68
		case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
			*_efega = 69
		case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
			*_efega = 70
		case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
			*_efega = 71
		case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
			*_efega = 72
		case "\u0063\u0075\u0062\u0065":
			*_efega = 73
		case "\u0063\u0061\u006e":
			*_efega = 74
		case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
			*_efega = 75
		case "\u0068\u0065\u0061r\u0074":
			*_efega = 76
		case "\u0073\u0075\u006e":
			*_efega = 77
		case "\u006d\u006f\u006f\u006e":
			*_efega = 78
		case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
			*_efega = 79
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
			*_efega = 80
		case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
			*_efega = 81
		case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
			*_efega = 82
		case "\u0062\u0065\u0076e\u006c":
			*_efega = 83
		case "\u0066\u0072\u0061m\u0065":
			*_efega = 84
		case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
			*_efega = 85
		case "\u0063\u006f\u0072\u006e\u0065\u0072":
			*_efega = 86
		case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
			*_efega = 87
		case "\u0063\u0068\u006fr\u0064":
			*_efega = 88
		case "\u0061\u0072\u0063":
			*_efega = 89
		case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_efega = 90
		case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
			*_efega = 91
		case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
			*_efega = 92
		case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
			*_efega = 93
		case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
			*_efega = 94
		case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
			*_efega = 95
		case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
			*_efega = 96
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
			*_efega = 97
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
			*_efega = 98
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
			*_efega = 99
		case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
			*_efega = 100
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
			*_efega = 101
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
			*_efega = 102
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
			*_efega = 103
		case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
			*_efega = 104
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
			*_efega = 105
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
			*_efega = 106
		case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
			*_efega = 107
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_efega = 108
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_efega = 109
		case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_efega = 110
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
			*_efega = 111
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
			*_efega = 112
		case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
			*_efega = 113
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
			*_efega = 114
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
			*_efega = 115
		case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
			*_efega = 116
		case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 117
		case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 118
		case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 119
		case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
			*_efega = 120
		case "\u0063\u006c\u006fu\u0064":
			*_efega = 121
		case "\u0072\u0069\u0062\u0062\u006f\u006e":
			*_efega = 122
		case "\u0072i\u0062\u0062\u006f\u006e\u0032":
			*_efega = 123
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
			*_efega = 124
		case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
			*_efega = 125
		case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
			*_efega = 126
		case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
			*_efega = 127
		case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
			*_efega = 128
		case "\u0077\u0061\u0076\u0065":
			*_efega = 129
		case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
			*_efega = 130
		case "\u0070\u006c\u0075\u0073":
			*_efega = 131
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
			*_efega = 132
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
			*_efega = 133
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
			*_efega = 134
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
			*_efega = 135
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_efega = 136
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
			*_efega = 137
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
			*_efega = 138
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
			*_efega = 139
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
			*_efega = 140
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
			*_efega = 141
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
			*_efega = 142
		case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
			*_efega = 143
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
			*_efega = 144
		case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
			*_efega = 145
		case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
			*_efega = 146
		case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
			*_efega = 147
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
			*_efega = 148
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
			*_efega = 149
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
			*_efega = 150
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
			*_efega = 151
		case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
			*_efega = 152
		case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
			*_efega = 153
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
			*_efega = 154
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
			*_efega = 155
		case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
			*_efega = 156
		case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
			*_efega = 157
		case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
			*_efega = 158
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
			*_efega = 159
		case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
			*_efega = 160
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
			*_efega = 161
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
			*_efega = 162
		case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
			*_efega = 163
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
			*_efega = 164
		case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
			*_efega = 165
		case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
			*_efega = 166
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
			*_efega = 167
		case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
			*_efega = 168
		case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
			*_efega = 169
		case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
			*_efega = 170
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
			*_efega = 171
		case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
			*_efega = 172
		case "\u0067\u0065\u0061r\u0036":
			*_efega = 173
		case "\u0067\u0065\u0061r\u0039":
			*_efega = 174
		case "\u0066\u0075\u006e\u006e\u0065\u006c":
			*_efega = 175
		case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
			*_efega = 176
		case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
			*_efega = 177
		case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
			*_efega = 178
		case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
			*_efega = 179
		case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
			*_efega = 180
		case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
			*_efega = 181
		case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
			*_efega = 182
		case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
			*_efega = 183
		case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
			*_efega = 184
		case "\u0063\u0068\u0061\u0072\u0074\u0058":
			*_efega = 185
		case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
			*_efega = 186
		case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
			*_efega = 187
		}
	}
	_ggcgb, _dddea = d.Token()
	if _dddea != nil {
		return _dddea
	}
	if _efbbf, _bgaaae := _ggcgb.(_d.EndElement); _bgaaae && _efbbf.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ggcgb)
}

// ValidateWithPath validates the CT_InverseTransform and its children, prefixing error messages with path
func (_bfeg *CT_InverseTransform) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_StyleMatrix and its children, prefixing error messages with path
func (_feeedf *CT_StyleMatrix) ValidateWithPath(path string) error {
	if _bfdbea := _feeedf.FillStyleLst.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _bfdbea != nil {
		return _bfdbea
	}
	if _gdfea := _feeedf.LnStyleLst.ValidateWithPath(path + "/\u004c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _gdfea != nil {
		return _gdfea
	}
	if _eage := _feeedf.EffectStyleLst.ValidateWithPath(path + "\u002fE\u0066f\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _eage != nil {
		return _eage
	}
	if _ccdad := _feeedf.BgFillStyleLst.ValidateWithPath(path + "\u002fB\u0067F\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"); _ccdad != nil {
		return _ccdad
	}
	return nil
}
func ParseUnionST_FixedPercentage(s string) (ST_FixedPercentage, error) {
	_fddeb := ST_FixedPercentage{}
	if _a.ST_FixedPercentagePatternRe.MatchString(s) {
		_fddeb.ST_FixedPercentage = &ST_Percentage{}
		_fddeb.ST_FixedPercentage.ST_Percentage = &s
	} else {
		_ebbeb, _caca := _cd.ParseInt(s, 10, 64)
		if _caca != nil {
			return _fddeb, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _caca)
		}
		_cgcgb := int32(_ebbeb)
		_fddeb.ST_FixedPercentageDecimal = &_cgcgb
	}
	return _fddeb, nil
}

// ValidateWithPath validates the CT_TileInfoProperties and its children, prefixing error messages with path
func (_eefdd *CT_TileInfoProperties) ValidateWithPath(path string) error {
	if _eefdd.TxAttr != nil {
		if _fdfge := _eefdd.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _fdfge != nil {
			return _fdfge
		}
	}
	if _eefdd.TyAttr != nil {
		if _fdaed := _eefdd.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _fdaed != nil {
			return _fdaed
		}
	}
	if _eefdd.SxAttr != nil {
		if _ebgg := _eefdd.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _ebgg != nil {
			return _ebgg
		}
	}
	if _eefdd.SyAttr != nil {
		if _geaaf := _eefdd.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _geaaf != nil {
			return _geaaf
		}
	}
	if _ffbfcd := _eefdd.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _ffbfcd != nil {
		return _ffbfcd
	}
	if _gggef := _eefdd.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gggef != nil {
		return _gggef
	}
	return nil
}
func (_bfefba ST_OnOffStyleType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bfefba.String(), start)
}

// ValidateWithPath validates the CT_NonVisualGraphicFrameProperties and its children, prefixing error messages with path
func (_cgdfd *CT_NonVisualGraphicFrameProperties) ValidateWithPath(path string) error {
	if _cgdfd.GraphicFrameLocks != nil {
		if _efac := _cgdfd.GraphicFrameLocks.ValidateWithPath(path + "\u002fG\u0072a\u0070\u0068\u0069\u0063\u0046r\u0061\u006de\u004c\u006f\u0063\u006b\u0073"); _efac != nil {
			return _efac
		}
	}
	if _cgdfd.ExtLst != nil {
		if _dcdgb := _cgdfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcdgb != nil {
			return _dcdgb
		}
	}
	return nil
}
func (_baeae *CT_PresetLineDashProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _baeae.ValAttr != ST_PresetLineDashValUnset {
		_gbbccc, _fdgbe := _baeae.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
		if _fdgbe != nil {
			return _fdgbe
		}
		start.Attr = append(start.Attr, _gbbccc)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_edgfbb ST_TextTabAlignType) Validate() error { return _edgfbb.ValidateWithPath("") }
func (_cdedc ST_SystemColorVal) String() string {
	switch _cdedc {
	case 0:
		return ""
	case 1:
		return "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case 2:
		return "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case 3:
		return "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 4:
		return "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 5:
		return "\u006d\u0065\u006e\u0075"
	case 6:
		return "\u0077\u0069\u006e\u0064\u006f\u0077"
	case 7:
		return "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case 8:
		return "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case 9:
		return "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case 10:
		return "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 11:
		return "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case 12:
		return "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case 13:
		return "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case 14:
		return "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case 15:
		return "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case 16:
		return "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case 17:
		return "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case 18:
		return "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case 19:
		return "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case 20:
		return "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case 21:
		return "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 22:
		return "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case 23:
		return "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case 24:
		return "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case 25:
		return "\u0069\u006e\u0066\u006f\u0042\u006b"
	case 26:
		return "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case 27:
		return "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case 28:
		return "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case 29:
		return "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case 30:
		return "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return ""
}

// ST_PositivePercentage is a union type
type ST_PositivePercentage struct {
	ST_PositivePercentageDecimal *int32
	ST_PositivePercentage        *ST_Percentage
}

func (_eeaea *CT_TextTabStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_geafb:
	for {
		_gfabbb, _fegdc := d.Token()
		if _fegdc != nil {
			return _fegdc
		}
		switch _fgfb := _gfabbb.(type) {
		case _d.StartElement:
			switch _fgfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062"}:
				_bdfea := NewCT_TextTabStop()
				if _eeag := d.DecodeElement(_bdfea, &_fgfb); _eeag != nil {
					return _eeag
				}
				_eeaea.Tab = append(_eeaea.Tab, _bdfea)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _fgfb.Name)
				if _cafbgc := d.Skip(); _cafbgc != nil {
					return _cafbgc
				}
			}
		case _d.EndElement:
			break _geafb
		case _d.CharData:
		}
	}
	return nil
}
func (_bdeb *CT_FillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dafb:
	for {
		_facae, _dgbcd := d.Token()
		if _dgbcd != nil {
			return _dgbcd
		}
		switch _ebff := _facae.(type) {
		case _d.StartElement:
			switch _ebff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bdeb.NoFill = NewCT_NoFillProperties()
				if _afgd := d.DecodeElement(_bdeb.NoFill, &_ebff); _afgd != nil {
					return _afgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bdeb.SolidFill = NewCT_SolidColorFillProperties()
				if _gfeaf := d.DecodeElement(_bdeb.SolidFill, &_ebff); _gfeaf != nil {
					return _gfeaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bdeb.GradFill = NewCT_GradientFillProperties()
				if _dfdf := d.DecodeElement(_bdeb.GradFill, &_ebff); _dfdf != nil {
					return _dfdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bdeb.BlipFill = NewCT_BlipFillProperties()
				if _egdbd := d.DecodeElement(_bdeb.BlipFill, &_ebff); _egdbd != nil {
					return _egdbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bdeb.PattFill = NewCT_PatternFillProperties()
				if _gcca := d.DecodeElement(_bdeb.PattFill, &_ebff); _gcca != nil {
					return _gcca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bdeb.GrpFill = NewCT_GroupFillProperties()
				if _bbdfg := d.DecodeElement(_bdeb.GrpFill, &_ebff); _bbdfg != nil {
					return _bbdfg
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ebff.Name)
				if _gfcc := d.Skip(); _gfcc != nil {
					return _gfcc
				}
			}
		case _d.EndElement:
			break _dafb
		case _d.CharData:
		}
	}
	return nil
}

type ST_BlipCompression byte

const (
	ST_PitchFamilyUnset ST_PitchFamily = 0
	ST_PitchFamily00    ST_PitchFamily = 1
	ST_PitchFamily01    ST_PitchFamily = 2
	ST_PitchFamily02    ST_PitchFamily = 3
	ST_PitchFamily16    ST_PitchFamily = 4
	ST_PitchFamily17    ST_PitchFamily = 5
	ST_PitchFamily18    ST_PitchFamily = 6
	ST_PitchFamily32    ST_PitchFamily = 7
	ST_PitchFamily33    ST_PitchFamily = 8
	ST_PitchFamily34    ST_PitchFamily = 9
	ST_PitchFamily48    ST_PitchFamily = 10
	ST_PitchFamily49    ST_PitchFamily = 11
	ST_PitchFamily50    ST_PitchFamily = 12
	ST_PitchFamily64    ST_PitchFamily = 13
	ST_PitchFamily65    ST_PitchFamily = 14
	ST_PitchFamily66    ST_PitchFamily = 15
	ST_PitchFamily80    ST_PitchFamily = 16
	ST_PitchFamily81    ST_PitchFamily = 17
	ST_PitchFamily82    ST_PitchFamily = 18
)

func NewCT_NonVisualGroupDrawingShapeProps() *CT_NonVisualGroupDrawingShapeProps {
	_fbecg := &CT_NonVisualGroupDrawingShapeProps{}
	return _fbecg
}

// Validate validates the CT_GvmlGroupShape and its children
func (_dccgb *CT_GvmlGroupShape) Validate() error {
	return _dccgb.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065")
}

// Validate validates the CT_TableCellBorderStyle and its children
func (_dbefb *CT_TableCellBorderStyle) Validate() error {
	return _dbefb.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065")
}

// ValidateWithPath validates the CT_TextTabStopList and its children, prefixing error messages with path
func (_eeafb *CT_TextTabStopList) ValidateWithPath(path string) error {
	for _aggff, _fbagf := range _eeafb.Tab {
		if _ddff := _fbagf.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0054\u0061\u0062\u005b\u0025\u0064\u005d", path, _aggff)); _ddff != nil {
			return _ddff
		}
	}
	return nil
}
func (_ccfd *CT_Connection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffga := range start.Attr {
		if _ffga.Name.Local == "\u0069\u0064" {
			_fecga, _ffgb := _cd.ParseUint(_ffga.Value, 10, 32)
			if _ffgb != nil {
				return _ffgb
			}
			_ccfd.IdAttr = uint32(_fecga)
			continue
		}
		if _ffga.Name.Local == "\u0069\u0064\u0078" {
			_egdfa, _cacg := _cd.ParseUint(_ffga.Value, 10, 32)
			if _cacg != nil {
				return _cacg
			}
			_ccfd.IdxAttr = uint32(_egdfa)
			continue
		}
	}
	for {
		_cdfcc, _ecdfa := d.Token()
		if _ecdfa != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0043o\u006en\u0065c\u0074\u0069\u006f\u006e\u003a\u0020\u0025s", _ecdfa)
		}
		if _ecbae, _bfdeg := _cdfcc.(_d.EndElement); _bfdeg && _ecbae.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ConnectorLocking and its children
func (_eebc *CT_ConnectorLocking) Validate() error {
	return _eebc.ValidateWithPath("\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

type CT_NonVisualPictureProperties struct {
	PreferRelativeResizeAttr *bool
	PicLocks                 *CT_PictureLocking
	ExtLst                   *CT_OfficeArtExtensionList
}

// Validate validates the CT_GvmlShapeNonVisual and its children
func (_fccde *CT_GvmlShapeNonVisual) Validate() error {
	return _fccde.ValidateWithPath("C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_eecded ST_AnimationChartBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eecded.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_d.CharData(_eecded.ST_AnimationBuildType.String()))
	}
	if _eecded.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		e.EncodeToken(_d.CharData(_eecded.ST_AnimationChartOnlyBuildType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// Validate validates the CT_FillProperties and its children
func (_eedf *CT_FillProperties) Validate() error {
	return _eedf.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073")
}

// Validate validates the CT_GvmlGroupShapeNonVisual and its children
func (_fcfad *CT_GvmlGroupShapeNonVisual) Validate() error {
	return _fcfad.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c")
}
func NewCT_GvmlUseShapeRectangle() *CT_GvmlUseShapeRectangle {
	_afef := &CT_GvmlUseShapeRectangle{}
	return _afef
}

// ValidateWithPath validates the CT_ConnectionSiteList and its children, prefixing error messages with path
func (_gabfa *CT_ConnectionSiteList) ValidateWithPath(path string) error {
	for _cgdd, _efa := range _gabfa.Cxn {
		if _bbeg := _efa.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u0078\u006e\u005b\u0025\u0064\u005d", path, _cgdd)); _bbeg != nil {
			return _bbeg
		}
	}
	return nil
}

// ST_FixedPercentage is a union type
type ST_FixedPercentage struct {
	ST_FixedPercentageDecimal *int32
	ST_FixedPercentage        *ST_Percentage
}

func (_dbfced ST_PresetMaterialType) String() string {
	switch _dbfced {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case 2:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case 4:
		return "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case 5:
		return "\u006d\u0061\u0074t\u0065"
	case 6:
		return "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case 7:
		return "\u006d\u0065\u0074a\u006c"
	case 8:
		return "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case 9:
		return "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case 10:
		return "\u0070\u006f\u0077\u0064\u0065\u0072"
	case 11:
		return "\u0064\u006b\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case 13:
		return "\u0063\u006c\u0065a\u0072"
	case 14:
		return "\u0066\u006c\u0061\u0074"
	case 15:
		return "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return ""
}
func NewCT_TextParagraphProperties() *CT_TextParagraphProperties {
	_aebba := &CT_TextParagraphProperties{}
	return _aebba
}
func (_gded *CT_ClipboardStyleSheet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gded.ThemeElements = NewCT_BaseStyles()
	_gded.ClrMap = NewCT_ColorMapping()
_cgfb:
	for {
		_dfafb, _fcbb := d.Token()
		if _fcbb != nil {
			return _fcbb
		}
		switch _dbae := _dfafb.(type) {
		case _d.StartElement:
			switch _dbae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _dfee := d.DecodeElement(_gded.ThemeElements, &_dbae); _dfee != nil {
					return _dfee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				if _geda := d.DecodeElement(_gded.ClrMap, &_dbae); _geda != nil {
					return _geda
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0043\u006c\u0069\u0070b\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _dbae.Name)
				if _feced := d.Skip(); _feced != nil {
					return _feced
				}
			}
		case _d.EndElement:
			break _cgfb
		case _d.CharData:
		}
	}
	return nil
}
func (_fecab ST_TextStrikeType) ValidateWithPath(path string) error {
	switch _fecab {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fecab))
	}
	return nil
}
func (_cfbdd ST_LightRigDirection) String() string {
	switch _cfbdd {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0072"
	case 6:
		return "\u0062\u006c"
	case 7:
		return "\u0062"
	case 8:
		return "\u0062\u0072"
	}
	return ""
}

// Validate validates the CT_GvmlTextShapeChoice and its children
func (_caadf *CT_GvmlTextShapeChoice) Validate() error {
	return _caadf.ValidateWithPath("\u0043\u0054\u005f\u0047vm\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069c\u0065")
}

// ValidateWithPath validates the CT_Vector3D and its children, prefixing error messages with path
func (_badgf *CT_Vector3D) ValidateWithPath(path string) error {
	if _gabfef := _badgf.DxAttr.ValidateWithPath(path + "\u002fD\u0078\u0041\u0074\u0074\u0072"); _gabfef != nil {
		return _gabfef
	}
	if _bdac := _badgf.DyAttr.ValidateWithPath(path + "\u002fD\u0079\u0041\u0074\u0074\u0072"); _bdac != nil {
		return _bdac
	}
	if _ecaee := _badgf.DzAttr.ValidateWithPath(path + "\u002fD\u007a\u0041\u0074\u0074\u0072"); _ecaee != nil {
		return _ecaee
	}
	return nil
}
func (_gage *CT_ColorMapping) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_beeb, _affe := _gage.Bg1Attr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0067\u0031"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Tx1Attr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0078\u0031"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Bg2Attr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0067\u0032"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Tx2Attr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0078\u0032"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent1Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent2Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent3Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent4Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent5Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.Accent6Attr.MarshalXMLAttr(_d.Name{Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.HlinkAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006c\u0069n\u006b"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	_beeb, _affe = _gage.FolHlinkAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"})
	if _affe != nil {
		return _affe
	}
	start.Attr = append(start.Attr, _beeb)
	e.EncodeToken(start)
	if _gage.ExtLst != nil {
		_bgac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gage.ExtLst, _bgac)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bccad *CT_TextParagraphProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abfef := range start.Attr {
		if _abfef.Name.Local == "\u006d\u0061\u0072\u004c" {
			_egagc, _dfgca := _cd.ParseInt(_abfef.Value, 10, 32)
			if _dfgca != nil {
				return _dfgca
			}
			_bfdbd := int32(_egagc)
			_bccad.MarLAttr = &_bfdbd
			continue
		}
		if _abfef.Name.Local == "\u006c\u0076\u006c" {
			_cbgf, _dacc := _cd.ParseInt(_abfef.Value, 10, 32)
			if _dacc != nil {
				return _dacc
			}
			_adfca := int32(_cbgf)
			_bccad.LvlAttr = &_adfca
			continue
		}
		if _abfef.Name.Local == "\u0061\u006c\u0067\u006e" {
			_bccad.AlgnAttr.UnmarshalXMLAttr(_abfef)
			continue
		}
		if _abfef.Name.Local == "\u0072\u0074\u006c" {
			_eccbfbf, _fbfdd := _cd.ParseBool(_abfef.Value)
			if _fbfdd != nil {
				return _fbfdd
			}
			_bccad.RtlAttr = &_eccbfbf
			continue
		}
		if _abfef.Name.Local == "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e" {
			_bccad.FontAlgnAttr.UnmarshalXMLAttr(_abfef)
			continue
		}
		if _abfef.Name.Local == "\u006d\u0061\u0072\u0052" {
			_dgdg, _fafdd := _cd.ParseInt(_abfef.Value, 10, 32)
			if _fafdd != nil {
				return _fafdd
			}
			_eebcd := int32(_dgdg)
			_bccad.MarRAttr = &_eebcd
			continue
		}
		if _abfef.Name.Local == "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b" {
			_afdbf, _cgec := _cd.ParseBool(_abfef.Value)
			if _cgec != nil {
				return _cgec
			}
			_bccad.LatinLnBrkAttr = &_afdbf
			continue
		}
		if _abfef.Name.Local == "\u0069\u006e\u0064\u0065\u006e\u0074" {
			_gdaae, _ebaeb := _cd.ParseInt(_abfef.Value, 10, 32)
			if _ebaeb != nil {
				return _ebaeb
			}
			_fefada := int32(_gdaae)
			_bccad.IndentAttr = &_fefada
			continue
		}
		if _abfef.Name.Local == "\u0065a\u004c\u006e\u0042\u0072\u006b" {
			_gbecf, _edefe := _cd.ParseBool(_abfef.Value)
			if _edefe != nil {
				return _edefe
			}
			_bccad.EaLnBrkAttr = &_gbecf
			continue
		}
		if _abfef.Name.Local == "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074" {
			_decdd, _agggf := _cd.ParseBool(_abfef.Value)
			if _agggf != nil {
				return _agggf
			}
			_bccad.HangingPunctAttr = &_decdd
			continue
		}
		if _abfef.Name.Local == "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a" {
			_adffb, _fgacg := ParseUnionST_Coordinate32(_abfef.Value)
			if _fgacg != nil {
				return _fgacg
			}
			_bccad.DefTabSzAttr = &_adffb
			continue
		}
	}
_dgdaed:
	for {
		_gegba, _bagf := d.Token()
		if _bagf != nil {
			return _bagf
		}
		switch _gggab := _gegba.(type) {
		case _d.StartElement:
			switch _gggab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053p\u0063"}:
				_bccad.LnSpc = NewCT_TextSpacing()
				if _fecafb := d.DecodeElement(_bccad.LnSpc, &_gggab); _fecafb != nil {
					return _fecafb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0042\u0065\u0066"}:
				_bccad.SpcBef = NewCT_TextSpacing()
				if _daefc := d.DecodeElement(_bccad.SpcBef, &_gggab); _daefc != nil {
					return _daefc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0041\u0066\u0074"}:
				_bccad.SpcAft = NewCT_TextSpacing()
				if _deegc := d.DecodeElement(_bccad.SpcAft, &_gggab); _deegc != nil {
					return _deegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_bccad.BuClrTx = NewCT_TextBulletColorFollowText()
				if _ddbecf := d.DecodeElement(_bccad.BuClrTx, &_gggab); _ddbecf != nil {
					return _ddbecf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_bccad.BuClr = NewCT_Color()
				if _aacaa := d.DecodeElement(_bccad.BuClr, &_gggab); _aacaa != nil {
					return _aacaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_bccad.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _febbcc := d.DecodeElement(_bccad.BuSzTx, &_gggab); _febbcc != nil {
					return _febbcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_bccad.BuSzPct = NewCT_TextBulletSizePercent()
				if _gdbdgb := d.DecodeElement(_bccad.BuSzPct, &_gggab); _gdbdgb != nil {
					return _gdbdgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_bccad.BuSzPts = NewCT_TextBulletSizePoint()
				if _dadacb := d.DecodeElement(_bccad.BuSzPts, &_gggab); _dadacb != nil {
					return _dadacb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_bccad.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _ebddg := d.DecodeElement(_bccad.BuFontTx, &_gggab); _ebddg != nil {
					return _ebddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_bccad.BuFont = NewCT_TextFont()
				if _ebbdf := d.DecodeElement(_bccad.BuFont, &_gggab); _ebbdf != nil {
					return _ebbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_bccad.BuNone = NewCT_TextNoBullet()
				if _aabgd := d.DecodeElement(_bccad.BuNone, &_gggab); _aabgd != nil {
					return _aabgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_bccad.BuAutoNum = NewCT_TextAutonumberBullet()
				if _beabf := d.DecodeElement(_bccad.BuAutoNum, &_gggab); _beabf != nil {
					return _beabf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_bccad.BuChar = NewCT_TextCharBullet()
				if _gffbd := d.DecodeElement(_bccad.BuChar, &_gggab); _gffbd != nil {
					return _gffbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_bccad.BuBlip = NewCT_TextBlipBullet()
				if _bbcab := d.DecodeElement(_bccad.BuBlip, &_gggab); _bbcab != nil {
					return _bbcab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u004c\u0073\u0074"}:
				_bccad.TabLst = NewCT_TextTabStopList()
				if _gfagf := d.DecodeElement(_bccad.TabLst, &_gggab); _gfagf != nil {
					return _gfagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0052\u0050\u0072"}:
				_bccad.DefRPr = NewCT_TextCharacterProperties()
				if _fadbb := d.DecodeElement(_bccad.DefRPr, &_gggab); _fadbb != nil {
					return _fadbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bccad.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbaa := d.DecodeElement(_bccad.ExtLst, &_gggab); _gbaa != nil {
					return _gbaa
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _gggab.Name)
				if _gddad := d.Skip(); _gddad != nil {
					return _gddad
				}
			}
		case _d.EndElement:
			break _dgdaed
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextParagraph struct {
	PPr        *CT_TextParagraphProperties
	EG_TextRun []*EG_TextRun
	EndParaRPr *CT_TextCharacterProperties
}

func (_fcgb *CT_ColorMRU) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dacg:
	for {
		_ecbcf, _adegc := d.Token()
		if _adegc != nil {
			return _adegc
		}
		switch _ffcc := _ecbcf.(type) {
		case _d.StartElement:
			switch _ffcc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_aecf := NewEG_ColorChoice()
				_aecf.ScrgbClr = NewCT_ScRgbColor()
				if _dfcd := d.DecodeElement(_aecf.ScrgbClr, &_ffcc); _dfcd != nil {
					return _dfcd
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _aecf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_agbg := NewEG_ColorChoice()
				_agbg.SrgbClr = NewCT_SRgbColor()
				if _bcfb := d.DecodeElement(_agbg.SrgbClr, &_ffcc); _bcfb != nil {
					return _bcfb
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _agbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_efcfa := NewEG_ColorChoice()
				_efcfa.HslClr = NewCT_HslColor()
				if _dgba := d.DecodeElement(_efcfa.HslClr, &_ffcc); _dgba != nil {
					return _dgba
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _efcfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_aggc := NewEG_ColorChoice()
				_aggc.SysClr = NewCT_SystemColor()
				if _gaad := d.DecodeElement(_aggc.SysClr, &_ffcc); _gaad != nil {
					return _gaad
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _aggc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_gefe := NewEG_ColorChoice()
				_gefe.SchemeClr = NewCT_SchemeColor()
				if _dcfa := d.DecodeElement(_gefe.SchemeClr, &_ffcc); _dcfa != nil {
					return _dcfa
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _gefe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_bdee := NewEG_ColorChoice()
				_bdee.PrstClr = NewCT_PresetColor()
				if _gegd := d.DecodeElement(_bdee.PrstClr, &_ffcc); _gegd != nil {
					return _gegd
				}
				_fcgb.EG_ColorChoice = append(_fcgb.EG_ColorChoice, _bdee)
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055\u0020\u0025\u0076", _ffcc.Name)
				if _caf := d.Skip(); _caf != nil {
					return _caf
				}
			}
		case _d.EndElement:
			break _dacg
		case _d.CharData:
		}
	}
	return nil
}

type EG_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_ddffd *ST_PathShadeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ddffd = 0
	case "\u0073\u0068\u0061p\u0065":
		*_ddffd = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_ddffd = 2
	case "\u0072\u0065\u0063\u0074":
		*_ddffd = 3
	}
	return nil
}
func (_fcdcf *CT_Headers) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cgaga:
	for {
		_ebfbf, _dbbce := d.Token()
		if _dbbce != nil {
			return _dbbce
		}
		switch _bgedc := _ebfbf.(type) {
		case _d.StartElement:
			switch _bgedc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0065\u0061\u0064\u0065\u0072"}:
				var _daebg string
				if _dgag := d.DecodeElement(&_daebg, &_bgedc); _dgag != nil {
					return _dgag
				}
				_fcdcf.Header = append(_fcdcf.Header, _daebg)
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fH\u0065\u0061\u0064\u0065\u0072\u0073\u0020\u0025\u0076", _bgedc.Name)
				if _bedff := d.Skip(); _bedff != nil {
					return _bedff
				}
			}
		case _d.EndElement:
			break _cgaga
		case _d.CharData:
		}
	}
	return nil
}
func (_abagf *EG_ThemeableFontStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cadbgb:
	for {
		_gdeee, _edbdbf := d.Token()
		if _edbdbf != nil {
			return _edbdbf
		}
		switch _gaecb := _gdeee.(type) {
		case _d.StartElement:
			switch _gaecb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_abagf.Font = NewCT_FontCollection()
				if _bfdfa := d.DecodeElement(_abagf.Font, &_gaecb); _bfdfa != nil {
					return _bfdfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_abagf.FontRef = NewCT_FontReference()
				if _fceef := d.DecodeElement(_abagf.FontRef, &_gaecb); _fceef != nil {
					return _fceef
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045G\u005f\u0054\u0068\u0065\u006de\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006c\u0065\u0073\u0020\u0025\u0076", _gaecb.Name)
				if _beefea := d.Skip(); _beefea != nil {
					return _beefea
				}
			}
		case _d.EndElement:
			break _cadbgb
		case _d.CharData:
		}
	}
	return nil
}

type ST_TextVertOverflowType byte

func (_egfe *CT_GvmlGraphicFrameNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_egfe.CNvPr = NewCT_NonVisualDrawingProps()
	_egfe.CNvGraphicFramePr = NewCT_NonVisualGraphicFrameProperties()
_fbcb:
	for {
		_aadd, _bgbaa := d.Token()
		if _bgbaa != nil {
			return _bgbaa
		}
		switch _debf := _aadd.(type) {
		case _d.StartElement:
			switch _debf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _gedf := d.DecodeElement(_egfe.CNvPr, &_debf); _gedf != nil {
					return _gedf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"}:
				if _agfg := d.DecodeElement(_egfe.CNvGraphicFramePr, &_debf); _agfg != nil {
					return _agfg
				}
			default:
				_ff.Log("\u0073k\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074 \u006f\u006e\u0020C\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061m\u0065\u004eon\u0056\u0069\u0073u\u0061\u006c\u0020\u0025\u0076", _debf.Name)
				if _cfge := d.Skip(); _cfge != nil {
					return _cfge
				}
			}
		case _d.EndElement:
			break _fbcb
		case _d.CharData:
		}
	}
	return nil
}
func (_cefbb ST_Percentage) String() string {
	if _cefbb.ST_PercentageDecimal != nil {
		return _e.Sprintf("\u0025\u0076", *_cefbb.ST_PercentageDecimal)
	}
	if _cefbb.ST_Percentage != nil {
		return _e.Sprintf("\u0025\u0076", *_cefbb.ST_Percentage)
	}
	return ""
}
func (_eacae ST_TileFlipMode) Validate() error { return _eacae.ValidateWithPath("") }
func (_gaabc *CT_PolarAdjustHandle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gaabc.Pos = NewCT_AdjPoint2D()
	for _, _daacae := range start.Attr {
		if _daacae.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0052" {
			_bagaa, _gbcdc := _daacae.Value, error(nil)
			if _gbcdc != nil {
				return _gbcdc
			}
			_gaabc.GdRefRAttr = &_bagaa
			continue
		}
		if _daacae.Name.Local == "\u006d\u0069\u006e\u0052" {
			_dacbf, _cbfc := ParseUnionST_AdjCoordinate(_daacae.Value)
			if _cbfc != nil {
				return _cbfc
			}
			_gaabc.MinRAttr = &_dacbf
			continue
		}
		if _daacae.Name.Local == "\u006d\u0061\u0078\u0052" {
			_cddcc, _edgfbc := ParseUnionST_AdjCoordinate(_daacae.Value)
			if _edgfbc != nil {
				return _edgfbc
			}
			_gaabc.MaxRAttr = &_cddcc
			continue
		}
		if _daacae.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067" {
			_ageaa, _fadcb := _daacae.Value, error(nil)
			if _fadcb != nil {
				return _fadcb
			}
			_gaabc.GdRefAngAttr = &_ageaa
			continue
		}
		if _daacae.Name.Local == "\u006d\u0069\u006e\u0041\u006e\u0067" {
			_eefeg, _aegee := ParseUnionST_AdjAngle(_daacae.Value)
			if _aegee != nil {
				return _aegee
			}
			_gaabc.MinAngAttr = &_eefeg
			continue
		}
		if _daacae.Name.Local == "\u006d\u0061\u0078\u0041\u006e\u0067" {
			_bbgf, _agaee := ParseUnionST_AdjAngle(_daacae.Value)
			if _agaee != nil {
				return _agaee
			}
			_gaabc.MaxAngAttr = &_bbgf
			continue
		}
	}
_gaagb:
	for {
		_bceb, _degbg := d.Token()
		if _degbg != nil {
			return _degbg
		}
		switch _gfeg := _bceb.(type) {
		case _d.StartElement:
			switch _gfeg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _ffbf := d.DecodeElement(_gaabc.Pos, &_gfeg); _ffbf != nil {
					return _ffbf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _gfeg.Name)
				if _fcacg := d.Skip(); _fcacg != nil {
					return _fcacg
				}
			}
		case _d.EndElement:
			break _gaagb
		case _d.CharData:
		}
	}
	return nil
}
func (_eggc *CT_Path2DList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eggc.Path != nil {
		_adff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		for _, _cfga := range _eggc.Path {
			e.EncodeElement(_cfga, _adff)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_GradientFillProperties and its children
func (_ggdc *CT_GradientFillProperties) Validate() error {
	return _ggdc.ValidateWithPath("\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s")
}

// ValidateWithPath validates the CT_Path2DQuadBezierTo and its children, prefixing error messages with path
func (_gcbg *CT_Path2DQuadBezierTo) ValidateWithPath(path string) error {
	for _dbcde, _fadd := range _gcbg.Pt {
		if _aedgf := _fadd.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _dbcde)); _aedgf != nil {
			return _aedgf
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextGeometry and its children, prefixing error messages with path
func (_gefa *EG_TextGeometry) ValidateWithPath(path string) error {
	if _gefa.CustGeom != nil {
		if _efeef := _gefa.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _efeef != nil {
			return _efeef
		}
	}
	if _gefa.PrstTxWarp != nil {
		if _abbed := _gefa.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _abbed != nil {
			return _abbed
		}
	}
	return nil
}
func (_fbabcc *ST_Percentage) ValidateWithPath(path string) error {
	_abgdc := []string{}
	if _fbabcc.ST_PercentageDecimal != nil {
		_abgdc = append(_abgdc, "S\u0054_\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065\u0044\u0065\u0063im\u0061\u006c")
	}
	if _fbabcc.ST_Percentage != nil {
		_abgdc = append(_abgdc, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_abgdc) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _abgdc)
	}
	return nil
}

// ValidateWithPath validates the CT_BlendEffect and its children, prefixing error messages with path
func (_adde *CT_BlendEffect) ValidateWithPath(path string) error {
	if _adde.BlendAttr == ST_BlendModeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _aaab := _adde.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _aaab != nil {
		return _aaab
	}
	if _edbg := _adde.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _edbg != nil {
		return _edbg
	}
	return nil
}

// Validate validates the CT_GvmlGroupShapeChoice and its children
func (_cfce *CT_GvmlGroupShapeChoice) Validate() error {
	return _cfce.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_Path2DQuadBezierTo() *CT_Path2DQuadBezierTo {
	_abbfc := &CT_Path2DQuadBezierTo{}
	return _abbfc
}
func (_afdef *CT_XYAdjustHandle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afdef.GdRefXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0058"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.GdRefXAttr)})
	}
	if _afdef.MinXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0058"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.MinXAttr)})
	}
	if _afdef.MaxXAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0058"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.MaxXAttr)})
	}
	if _afdef.GdRefYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0059"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.GdRefYAttr)})
	}
	if _afdef.MinYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0059"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.MinYAttr)})
	}
	if _afdef.MaxYAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0059"}, Value: _e.Sprintf("\u0025\u0076", *_afdef.MaxYAttr)})
	}
	e.EncodeToken(start)
	_ggeff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_afdef.Pos, _ggeff)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_FontCollectionIndexUnset ST_FontCollectionIndex = 0
	ST_FontCollectionIndexMajor ST_FontCollectionIndex = 1
	ST_FontCollectionIndexMinor ST_FontCollectionIndex = 2
	ST_FontCollectionIndexNone  ST_FontCollectionIndex = 3
)

func (_cadd *CT_LinearShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecgda := range start.Attr {
		if _ecgda.Name.Local == "\u0061\u006e\u0067" {
			_fbfe, _fabea := _cd.ParseInt(_ecgda.Value, 10, 32)
			if _fabea != nil {
				return _fabea
			}
			_agea := int32(_fbfe)
			_cadd.AngAttr = &_agea
			continue
		}
		if _ecgda.Name.Local == "\u0073\u0063\u0061\u006c\u0065\u0064" {
			_dcgb, _fbdca := _cd.ParseBool(_ecgda.Value)
			if _fbdca != nil {
				return _fbdca
			}
			_cadd.ScaledAttr = &_dcgb
			continue
		}
	}
	for {
		_geaagf, _eefa := d.Token()
		if _eefa != nil {
			return _e.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u004cine\u0061rS\u0068\u0061\u0064\u0065\u0050\u0072\u006fpe\u0072\u0074\u0069\u0065\u0073\u003a\u0020%\u0073", _eefa)
		}
		if _egfff, _bdff := _geaagf.(_d.EndElement); _bdff && _egfff.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cbdce *CT_TextBulletTypefaceFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcf *CT_AlphaCeilingEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_bbe, _fbf := d.Token()
		if _fbf != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006ci\u006e\u0067\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _fbf)
		}
		if _cga, _cee := _bbe.(_d.EndElement); _cee && _cga.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_ThemeableEffectStyle() *EG_ThemeableEffectStyle {
	_ddbeab := &EG_ThemeableEffectStyle{}
	return _ddbeab
}

type CT_GvmlGroupShape struct {
	NvGrpSpPr *CT_GvmlGroupShapeNonVisual
	GrpSpPr   *CT_GroupShapeProperties
	Choice    []*CT_GvmlGroupShapeChoice
	ExtLst    *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_PresetShadowEffect and its children, prefixing error messages with path
func (_cecbc *CT_PresetShadowEffect) ValidateWithPath(path string) error {
	if _cecbc.PrstAttr == ST_PresetShadowValUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dcccf := _cecbc.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _dcccf != nil {
		return _dcccf
	}
	if _cecbc.DistAttr != nil {
		if *_cecbc.DistAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cecbc.DistAttr)
		}
		if *_cecbc.DistAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_cecbc.DistAttr)
		}
	}
	if _cecbc.DirAttr != nil {
		if *_cecbc.DirAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cecbc.DirAttr)
		}
		if *_cecbc.DirAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cecbc.DirAttr)
		}
	}
	if _cecbc.ScrgbClr != nil {
		if _cbag := _cecbc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cbag != nil {
			return _cbag
		}
	}
	if _cecbc.SrgbClr != nil {
		if _ebae := _cecbc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ebae != nil {
			return _ebae
		}
	}
	if _cecbc.HslClr != nil {
		if _dcgdge := _cecbc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dcgdge != nil {
			return _dcgdge
		}
	}
	if _cecbc.SysClr != nil {
		if _dgedg := _cecbc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _dgedg != nil {
			return _dgedg
		}
	}
	if _cecbc.SchemeClr != nil {
		if _gebff := _cecbc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gebff != nil {
			return _gebff
		}
	}
	if _cecbc.PrstClr != nil {
		if _defad := _cecbc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _defad != nil {
			return _defad
		}
	}
	return nil
}

type CT_GrayscaleTransform struct{}

const (
	ST_LineEndLengthUnset ST_LineEndLength = 0
	ST_LineEndLengthSm    ST_LineEndLength = 1
	ST_LineEndLengthMed   ST_LineEndLength = 2
	ST_LineEndLengthLg    ST_LineEndLength = 3
)

func NewCT_GvmlGroupShapeChoice() *CT_GvmlGroupShapeChoice {
	_bbdg := &CT_GvmlGroupShapeChoice{}
	return _bbdg
}

// ValidateWithPath validates the CT_Headers and its children, prefixing error messages with path
func (_dbbfe *CT_Headers) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_HslColor and its children
func (_agcgd *CT_HslColor) Validate() error {
	return _agcgd.ValidateWithPath("C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072")
}
func (_edfb ST_LightRigType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_edfb.String(), start)
}
func (_ccc *CT_AlphaReplaceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061"}, Value: _e.Sprintf("\u0025\u0076", _ccc.AAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_deaae *CT_TextFont) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cgeaeg := range start.Attr {
		if _cgeaeg.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_cabaf, _edddfc := _cgeaeg.Value, error(nil)
			if _edddfc != nil {
				return _edddfc
			}
			_deaae.TypefaceAttr = _cabaf
			continue
		}
		if _cgeaeg.Name.Local == "\u0070\u0061\u006e\u006f\u0073\u0065" {
			_deccc, _edgeg := _cgeaeg.Value, error(nil)
			if _edgeg != nil {
				return _edgeg
			}
			_deaae.PanoseAttr = &_deccc
			continue
		}
		if _cgeaeg.Name.Local == "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079" {
			_deaae.PitchFamilyAttr.UnmarshalXMLAttr(_cgeaeg)
			continue
		}
		if _cgeaeg.Name.Local == "\u0063h\u0061\u0072\u0073\u0065\u0074" {
			_adcbad, _bfage := _cd.ParseInt(_cgeaeg.Value, 10, 8)
			if _bfage != nil {
				return _bfage
			}
			_dfbea := int8(_adcbad)
			_deaae.CharsetAttr = &_dfbea
			continue
		}
	}
	for {
		_bfeabb, _acfef := d.Token()
		if _acfef != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _acfef)
		}
		if _dfdfa, _gdbgg := _bfeabb.(_d.EndElement); _gdbgg && _dfdfa.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationDgmElement and its children, prefixing error messages with path
func (_gcc *CT_AnimationDgmElement) ValidateWithPath(path string) error {
	if _gcc.IdAttr != nil {
		if !_a.ST_GuidPatternRe.MatchString(*_gcc.IdAttr) {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0049\u0064A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061t\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, *_gcc.IdAttr)
		}
	}
	if _ffg := _gcc.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _ffg != nil {
		return _ffg
	}
	return nil
}
func (_aebe *CT_BaseStylesOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aadc:
	for {
		_cgf, _aecg := d.Token()
		if _aecg != nil {
			return _aecg
		}
		switch _gagf := _cgf.(type) {
		case _d.StartElement:
			switch _gagf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				_aebe.ClrScheme = NewCT_ColorScheme()
				if _gea := d.DecodeElement(_aebe.ClrScheme, &_gagf); _gea != nil {
					return _gea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				_aebe.FontScheme = NewCT_FontScheme()
				if _gaca := d.DecodeElement(_aebe.FontScheme, &_gagf); _gaca != nil {
					return _gaca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				_aebe.FmtScheme = NewCT_StyleMatrix()
				if _bfbb := d.DecodeElement(_aebe.FmtScheme, &_gagf); _bfbb != nil {
					return _bfbb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0020\u0025\u0076", _gagf.Name)
				if _eacf := d.Skip(); _eacf != nil {
					return _eacf
				}
			}
		case _d.EndElement:
			break _aadc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_FixedPercentage() *CT_FixedPercentage { _bbff := &CT_FixedPercentage{}; return _bbff }
func (_bccb *CT_LineEndProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gefec := range start.Attr {
		if _gefec.Name.Local == "\u0074\u0079\u0070\u0065" {
			_bccb.TypeAttr.UnmarshalXMLAttr(_gefec)
			continue
		}
		if _gefec.Name.Local == "\u0077" {
			_bccb.WAttr.UnmarshalXMLAttr(_gefec)
			continue
		}
		if _gefec.Name.Local == "\u006c\u0065\u006e" {
			_bccb.LenAttr.UnmarshalXMLAttr(_gefec)
			continue
		}
	}
	for {
		_aedfd, _dbfaa := d.Token()
		if _dbfaa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065E\u006ed\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _dbfaa)
		}
		if _bedgd, _fcbcc := _aedfd.(_d.EndElement); _fcbcc && _bedgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adeeb ST_LineEndType) ValidateWithPath(path string) error {
	switch _adeeb {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_adeeb))
	}
	return nil
}
func NewEG_TextBulletTypeface() *EG_TextBulletTypeface {
	_gebga := &EG_TextBulletTypeface{}
	return _gebga
}

// ValidateWithPath validates the CT_OfficeArtExtension and its children, prefixing error messages with path
func (_bccgb *CT_OfficeArtExtension) ValidateWithPath(path string) error { return nil }
func (_ebaff *CT_Path2DQuadBezierTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ggaec:
	for {
		_cbef, _afbbee := d.Token()
		if _afbbee != nil {
			return _afbbee
		}
		switch _eaafg := _cbef.(type) {
		case _d.StartElement:
			switch _eaafg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_dfbgb := NewCT_AdjPoint2D()
				if _fagg := d.DecodeElement(_dfbgb, &_eaafg); _fagg != nil {
					return _fagg
				}
				_ebaff.Pt = append(_ebaff.Pt, _dfbgb)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u0051\u0075\u0061\u0064\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _eaafg.Name)
				if _adbd := d.Skip(); _adbd != nil {
					return _adbd
				}
			}
		case _d.EndElement:
			break _ggaec
		case _d.CharData:
		}
	}
	return nil
}
func (_fgdba *CT_PictureLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgdba.NoCropAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0072\u006f\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoCropAttr))})
	}
	if _fgdba.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoGrpAttr))})
	}
	if _fgdba.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoSelectAttr))})
	}
	if _fgdba.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoRotAttr))})
	}
	if _fgdba.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoChangeAspectAttr))})
	}
	if _fgdba.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoMoveAttr))})
	}
	if _fgdba.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoResizeAttr))})
	}
	if _fgdba.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoEditPointsAttr))})
	}
	if _fgdba.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoAdjustHandlesAttr))})
	}
	if _fgdba.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoChangeArrowheadsAttr))})
	}
	if _fgdba.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgdba.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _fgdba.ExtLst != nil {
		_degde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgdba.ExtLst, _degde)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TableCellBorderStyle() *CT_TableCellBorderStyle {
	_acgaa := &CT_TableCellBorderStyle{}
	return _acgaa
}

// ValidateWithPath validates the CT_TextBulletSizePercent and its children, prefixing error messages with path
func (_cabceg *CT_TextBulletSizePercent) ValidateWithPath(path string) error {
	if !ST_TextBulletSizePercentPatternRe.MatchString(_cabceg.ValAttr) {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, ST_TextBulletSizePercentPatternRe, _cabceg.ValAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_RelativeOffsetEffect and its children, prefixing error messages with path
func (_fdggg *CT_RelativeOffsetEffect) ValidateWithPath(path string) error {
	if _fdggg.TxAttr != nil {
		if _agee := _fdggg.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _agee != nil {
			return _agee
		}
	}
	if _fdggg.TyAttr != nil {
		if _cbaba := _fdggg.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _cbaba != nil {
			return _cbaba
		}
	}
	return nil
}
func (_deaeg *ST_PresetPatternVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdggc, _adgaad := d.Token()
	if _adgaad != nil {
		return _adgaad
	}
	if _fgfdf, _ccagb := _cdggc.(_d.EndElement); _ccagb && _fgfdf.Name == start.Name {
		*_deaeg = 1
		return nil
	}
	if _acaa, _ecccc := _cdggc.(_d.CharData); !_ecccc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdggc)
	} else {
		switch string(_acaa) {
		case "":
			*_deaeg = 0
		case "\u0070\u0063\u0074\u0035":
			*_deaeg = 1
		case "\u0070\u0063\u00741\u0030":
			*_deaeg = 2
		case "\u0070\u0063\u00742\u0030":
			*_deaeg = 3
		case "\u0070\u0063\u00742\u0035":
			*_deaeg = 4
		case "\u0070\u0063\u00743\u0030":
			*_deaeg = 5
		case "\u0070\u0063\u00744\u0030":
			*_deaeg = 6
		case "\u0070\u0063\u00745\u0030":
			*_deaeg = 7
		case "\u0070\u0063\u00746\u0030":
			*_deaeg = 8
		case "\u0070\u0063\u00747\u0030":
			*_deaeg = 9
		case "\u0070\u0063\u00747\u0035":
			*_deaeg = 10
		case "\u0070\u0063\u00748\u0030":
			*_deaeg = 11
		case "\u0070\u0063\u00749\u0030":
			*_deaeg = 12
		case "\u0068\u006f\u0072\u007a":
			*_deaeg = 13
		case "\u0076\u0065\u0072\u0074":
			*_deaeg = 14
		case "\u006c\u0074\u0048\u006f\u0072\u007a":
			*_deaeg = 15
		case "\u006c\u0074\u0056\u0065\u0072\u0074":
			*_deaeg = 16
		case "\u0064\u006b\u0048\u006f\u0072\u007a":
			*_deaeg = 17
		case "\u0064\u006b\u0056\u0065\u0072\u0074":
			*_deaeg = 18
		case "\u006ea\u0072\u0048\u006f\u0072\u007a":
			*_deaeg = 19
		case "\u006ea\u0072\u0056\u0065\u0072\u0074":
			*_deaeg = 20
		case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
			*_deaeg = 21
		case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
			*_deaeg = 22
		case "\u0063\u0072\u006fs\u0073":
			*_deaeg = 23
		case "\u0064\u006e\u0044\u0069\u0061\u0067":
			*_deaeg = 24
		case "\u0075\u0070\u0044\u0069\u0061\u0067":
			*_deaeg = 25
		case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
			*_deaeg = 26
		case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
			*_deaeg = 27
		case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
			*_deaeg = 28
		case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
			*_deaeg = 29
		case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
			*_deaeg = 30
		case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
			*_deaeg = 31
		case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
			*_deaeg = 32
		case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
			*_deaeg = 33
		case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
			*_deaeg = 34
		case "\u0073m\u0043\u0068\u0065\u0063\u006b":
			*_deaeg = 35
		case "\u006cg\u0043\u0068\u0065\u0063\u006b":
			*_deaeg = 36
		case "\u0073\u006d\u0047\u0072\u0069\u0064":
			*_deaeg = 37
		case "\u006c\u0067\u0047\u0072\u0069\u0064":
			*_deaeg = 38
		case "\u0064o\u0074\u0047\u0072\u0069\u0064":
			*_deaeg = 39
		case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_deaeg = 40
		case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
			*_deaeg = 41
		case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
			*_deaeg = 42
		case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
			*_deaeg = 43
		case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
			*_deaeg = 44
		case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
			*_deaeg = 45
		case "\u0064o\u0074\u0044\u006d\u006e\u0064":
			*_deaeg = 46
		case "\u0070\u006c\u0061i\u0064":
			*_deaeg = 47
		case "\u0073\u0070\u0068\u0065\u0072\u0065":
			*_deaeg = 48
		case "\u0077\u0065\u0061v\u0065":
			*_deaeg = 49
		case "\u0064\u0069\u0076o\u0074":
			*_deaeg = 50
		case "\u0073h\u0069\u006e\u0067\u006c\u0065":
			*_deaeg = 51
		case "\u0077\u0061\u0076\u0065":
			*_deaeg = 52
		case "\u0074r\u0065\u006c\u006c\u0069\u0073":
			*_deaeg = 53
		case "\u007a\u0069\u0067\u005a\u0061\u0067":
			*_deaeg = 54
		}
	}
	_cdggc, _adgaad = d.Token()
	if _adgaad != nil {
		return _adgaad
	}
	if _fagga, _gbfgdf := _cdggc.(_d.EndElement); _gbfgdf && _fagga.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdggc)
}

type CT_NonVisualDrawingShapeProps struct {
	TxBoxAttr *bool
	SpLocks   *CT_ShapeLocking
	ExtLst    *CT_OfficeArtExtensionList
}

const (
	ST_TextUnderlineTypeUnset           ST_TextUnderlineType = 0
	ST_TextUnderlineTypeNone            ST_TextUnderlineType = 1
	ST_TextUnderlineTypeWords           ST_TextUnderlineType = 2
	ST_TextUnderlineTypeSng             ST_TextUnderlineType = 3
	ST_TextUnderlineTypeDbl             ST_TextUnderlineType = 4
	ST_TextUnderlineTypeHeavy           ST_TextUnderlineType = 5
	ST_TextUnderlineTypeDotted          ST_TextUnderlineType = 6
	ST_TextUnderlineTypeDottedHeavy     ST_TextUnderlineType = 7
	ST_TextUnderlineTypeDash            ST_TextUnderlineType = 8
	ST_TextUnderlineTypeDashHeavy       ST_TextUnderlineType = 9
	ST_TextUnderlineTypeDashLong        ST_TextUnderlineType = 10
	ST_TextUnderlineTypeDashLongHeavy   ST_TextUnderlineType = 11
	ST_TextUnderlineTypeDotDash         ST_TextUnderlineType = 12
	ST_TextUnderlineTypeDotDashHeavy    ST_TextUnderlineType = 13
	ST_TextUnderlineTypeDotDotDash      ST_TextUnderlineType = 14
	ST_TextUnderlineTypeDotDotDashHeavy ST_TextUnderlineType = 15
	ST_TextUnderlineTypeWavy            ST_TextUnderlineType = 16
	ST_TextUnderlineTypeWavyHeavy       ST_TextUnderlineType = 17
	ST_TextUnderlineTypeWavyDbl         ST_TextUnderlineType = 18
)

// Validate validates the CT_TextBulletSizePercent and its children
func (_dbeca *CT_TextBulletSizePercent) Validate() error {
	return _dbeca.ValidateWithPath("\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
}
func NewCT_TextBulletSizePercent() *CT_TextBulletSizePercent {
	_bfad := &CT_TextBulletSizePercent{}
	_bfad.ValAttr = "\u0031\u0030\u0030\u0025"
	return _bfad
}
func NewCT_TextField() *CT_TextField {
	_cecdb := &CT_TextField{}
	_cecdb.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	return _cecdb
}

type CT_OfficeArtExtension struct {
	UriAttr string
	Any     []_ff.Any
}

func (_eaae *CT_GammaTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gace, _eabgg := d.Token()
		if _eabgg != nil {
			return _e.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d: \u0025\u0073", _eabgg)
		}
		if _ddaeg, _baede := _gace.(_d.EndElement); _baede && _ddaeg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_PictureLocking() *CT_PictureLocking { _gfdaad := &CT_PictureLocking{}; return _gfdaad }
func (_cgcfa *CT_GrayscaleEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_eaad, _eeabb := d.Token()
		if _eeabb != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0047\u0072\u0061\u0079\u0073\u0063\u0061l\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _eeabb)
		}
		if _ccce, _ebgf := _eaad.(_d.EndElement); _ebgf && _ccce.Name == start.Name {
			break
		}
	}
	return nil
}
func NewTheme() *Theme {
	_geccb := &Theme{}
	_geccb.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	return _geccb
}

type CT_SRgbColor struct {
	ValAttr           string
	EG_ColorTransform []*EG_ColorTransform
}

func (_eddc *CT_BaseStyles) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eddc.ClrScheme = NewCT_ColorScheme()
	_eddc.FontScheme = NewCT_FontScheme()
	_eddc.FmtScheme = NewCT_StyleMatrix()
_dab:
	for {
		_bgbd, _dadfc := d.Token()
		if _dadfc != nil {
			return _dadfc
		}
		switch _egf := _bgbd.(type) {
		case _d.StartElement:
			switch _egf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _edba := d.DecodeElement(_eddc.ClrScheme, &_egf); _edba != nil {
					return _edba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}:
				if _bdefb := d.DecodeElement(_eddc.FontScheme, &_egf); _bdefb != nil {
					return _bdefb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066m\u0074\u0053\u0063\u0068\u0065\u006de"}:
				if _cfag := d.DecodeElement(_eddc.FmtScheme, &_egf); _cfag != nil {
					return _cfag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eddc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bcbb := d.DecodeElement(_eddc.ExtLst, &_egf); _bcbb != nil {
					return _bcbb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042a\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073 \u0025\u0076", _egf.Name)
				if _efeb := d.Skip(); _efeb != nil {
					return _efeb
				}
			}
		case _d.EndElement:
			break _dab
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_ColorMapping() *CT_ColorMapping {
	_cgbf := &CT_ColorMapping{}
	_cgbf.Bg1Attr = ST_ColorSchemeIndex(1)
	_cgbf.Tx1Attr = ST_ColorSchemeIndex(1)
	_cgbf.Bg2Attr = ST_ColorSchemeIndex(1)
	_cgbf.Tx2Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent1Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent2Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent3Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent4Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent5Attr = ST_ColorSchemeIndex(1)
	_cgbf.Accent6Attr = ST_ColorSchemeIndex(1)
	_cgbf.HlinkAttr = ST_ColorSchemeIndex(1)
	_cgbf.FolHlinkAttr = ST_ColorSchemeIndex(1)
	return _cgbf
}

type CT_GraphicalObject struct{ GraphicData *CT_GraphicalObjectData }

func NewEG_OfficeArtExtensionList() *EG_OfficeArtExtensionList {
	_gcfcc := &EG_OfficeArtExtensionList{}
	return _gcfcc
}
func (_acfgge *CT_PresetShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_fecfg, _bebf := _acfgge.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _bebf != nil {
		return _bebf
	}
	start.Attr = append(start.Attr, _fecfg)
	if _acfgge.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_acfgge.DistAttr)})
	}
	if _acfgge.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_acfgge.DirAttr)})
	}
	e.EncodeToken(start)
	if _acfgge.ScrgbClr != nil {
		_gdbea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgge.ScrgbClr, _gdbea)
	}
	if _acfgge.SrgbClr != nil {
		_dcff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_acfgge.SrgbClr, _dcff)
	}
	if _acfgge.HslClr != nil {
		_fdfea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgge.HslClr, _fdfea)
	}
	if _acfgge.SysClr != nil {
		_eaafd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgge.SysClr, _eaafd)
	}
	if _acfgge.SchemeClr != nil {
		_fabeag := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_acfgge.SchemeClr, _fabeag)
	}
	if _acfgge.PrstClr != nil {
		_fcbae := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_acfgge.PrstClr, _fcbae)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_FillProperties() *EG_FillProperties { _dffaa := &EG_FillProperties{}; return _dffaa }

type CT_EffectStyleList struct{ EffectStyle []*CT_EffectStyleItem }

const (
	ST_LightRigTypeUnset         ST_LightRigType = 0
	ST_LightRigTypeLegacyFlat1   ST_LightRigType = 1
	ST_LightRigTypeLegacyFlat2   ST_LightRigType = 2
	ST_LightRigTypeLegacyFlat3   ST_LightRigType = 3
	ST_LightRigTypeLegacyFlat4   ST_LightRigType = 4
	ST_LightRigTypeLegacyNormal1 ST_LightRigType = 5
	ST_LightRigTypeLegacyNormal2 ST_LightRigType = 6
	ST_LightRigTypeLegacyNormal3 ST_LightRigType = 7
	ST_LightRigTypeLegacyNormal4 ST_LightRigType = 8
	ST_LightRigTypeLegacyHarsh1  ST_LightRigType = 9
	ST_LightRigTypeLegacyHarsh2  ST_LightRigType = 10
	ST_LightRigTypeLegacyHarsh3  ST_LightRigType = 11
	ST_LightRigTypeLegacyHarsh4  ST_LightRigType = 12
	ST_LightRigTypeThreePt       ST_LightRigType = 13
	ST_LightRigTypeBalanced      ST_LightRigType = 14
	ST_LightRigTypeSoft          ST_LightRigType = 15
	ST_LightRigTypeHarsh         ST_LightRigType = 16
	ST_LightRigTypeFlood         ST_LightRigType = 17
	ST_LightRigTypeContrasting   ST_LightRigType = 18
	ST_LightRigTypeMorning       ST_LightRigType = 19
	ST_LightRigTypeSunrise       ST_LightRigType = 20
	ST_LightRigTypeSunset        ST_LightRigType = 21
	ST_LightRigTypeChilly        ST_LightRigType = 22
	ST_LightRigTypeFreezing      ST_LightRigType = 23
	ST_LightRigTypeFlat          ST_LightRigType = 24
	ST_LightRigTypeTwoPt         ST_LightRigType = 25
	ST_LightRigTypeGlow          ST_LightRigType = 26
	ST_LightRigTypeBrightRoom    ST_LightRigType = 27
)

func (_dbgdd *CT_TextBlipBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbgdd.Blip = NewCT_Blip()
_fcffg:
	for {
		_dbefec, _dbaaa := d.Token()
		if _dbaaa != nil {
			return _dbaaa
		}
		switch _gcgbc := _dbefec.(type) {
		case _d.StartElement:
			switch _gcgbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				if _baeee := d.DecodeElement(_dbgdd.Blip, &_gcgbc); _baeee != nil {
					return _baeee
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042\u0075\u006c\u006c\u0065\u0074\u0020\u0025\u0076", _gcgbc.Name)
				if _bdgc := d.Skip(); _bdgc != nil {
					return _bdgc
				}
			}
		case _d.EndElement:
			break _fcffg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextFont and its children
func (_bbdbb *CT_TextFont) Validate() error {
	return _bbdbb.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074")
}
func (_acac *CT_AnimationDgmBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acac.BldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_acac.BldAttr)})
	}
	if _acac.RevAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0065\u0076"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_acac.RevAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextCharBullet and its children, prefixing error messages with path
func (_gegb *CT_TextCharBullet) ValidateWithPath(path string) error { return nil }
func (_cbeb ST_BlendMode) ValidateWithPath(path string) error {
	switch _cbeb {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbeb))
	}
	return nil
}
func (_ggbe *CT_Color) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ggbe.ScrgbClr != nil {
		_egec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ggbe.ScrgbClr, _egec)
	}
	if _ggbe.SrgbClr != nil {
		_gbba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ggbe.SrgbClr, _gbba)
	}
	if _ggbe.HslClr != nil {
		_dacf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ggbe.HslClr, _dacf)
	}
	if _ggbe.SysClr != nil {
		_cba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ggbe.SysClr, _cba)
	}
	if _ggbe.SchemeClr != nil {
		_cbd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ggbe.SchemeClr, _cbd)
	}
	if _ggbe.PrstClr != nil {
		_fbgg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ggbe.PrstClr, _fbgg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bacae ST_TextSpacingPercentOrPercentString) String() string {
	if _bacae.ST_TextSpacingPercent != nil {
		return _e.Sprintf("\u0025\u0076", *_bacae.ST_TextSpacingPercent)
	}
	if _bacae.ST_Percentage != nil {
		return _e.Sprintf("\u0025\u0076", *_bacae.ST_Percentage)
	}
	return ""
}

// ST_PositiveFixedPercentage is a union type
type ST_PositiveFixedPercentage struct {
	ST_PositiveFixedPercentageDecimal *int32
	ST_PositiveFixedPercentage        *ST_Percentage
}

// Validate validates the CT_SupplementalFont and its children
func (_dgadd *CT_SupplementalFont) Validate() error {
	return _dgadd.ValidateWithPath("\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074")
}
func (_gbade ST_PathFillMode) ValidateWithPath(path string) error {
	switch _gbade {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbade))
	}
	return nil
}

type EG_TextRun struct {
	R   *CT_RegularTextRun
	Br  *CT_TextLineBreak
	Fld *CT_TextField
}

// ValidateWithPath validates the CT_LuminanceEffect and its children, prefixing error messages with path
func (_fdgag *CT_LuminanceEffect) ValidateWithPath(path string) error {
	if _fdgag.BrightAttr != nil {
		if _gfga := _fdgag.BrightAttr.ValidateWithPath(path + "/\u0042\u0072\u0069\u0067\u0068\u0074\u0041\u0074\u0074\u0072"); _gfga != nil {
			return _gfga
		}
	}
	if _fdgag.ContrastAttr != nil {
		if _bcgcg := _fdgag.ContrastAttr.ValidateWithPath(path + "\u002f\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0041\u0074\u0074\u0072"); _bcgcg != nil {
			return _bcgcg
		}
	}
	return nil
}

// Validate validates the CT_DashStopList and its children
func (_bdgg *CT_DashStopList) Validate() error {
	return _bdgg.ValidateWithPath("\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}
func (_bfg *CT_AlphaOutsetEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bfg.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_bfg.RadAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gaba *CT_TextParagraph) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gaba.PPr != nil {
		_aececg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_gaba.PPr, _aececg)
	}
	if _gaba.EG_TextRun != nil {
		for _, _dbabd := range _gaba.EG_TextRun {
			_dbabd.MarshalXML(e, _d.StartElement{})
		}
	}
	if _gaba.EndParaRPr != nil {
		_dffb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065n\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}}
		e.EncodeElement(_gaba.EndParaRPr, _dffb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the AG_Locking and its children, prefixing error messages with path
func (_gf *AG_Locking) ValidateWithPath(path string) error { return nil }
func (_aedac ST_BlendMode) String() string {
	switch _aedac {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072"
	case 2:
		return "\u006d\u0075\u006c\u0074"
	case 3:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 4:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 5:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return ""
}
func (_efdfa ST_AdjCoordinate) String() string {
	if _efdfa.ST_Coordinate != nil {
		return _efdfa.ST_Coordinate.String()
	}
	if _efdfa.ST_GeomGuideName != nil {
		return _e.Sprintf("\u0025\u0076", *_efdfa.ST_GeomGuideName)
	}
	return ""
}
func NewCT_SchemeColor() *CT_SchemeColor {
	_acacg := &CT_SchemeColor{}
	_acacg.ValAttr = ST_SchemeColorVal(1)
	return _acacg
}

// ValidateWithPath validates the CT_OuterShadowEffect and its children, prefixing error messages with path
func (_gbdf *CT_OuterShadowEffect) ValidateWithPath(path string) error {
	if _gbdf.BlurRadAttr != nil {
		if *_gbdf.BlurRadAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbdf.BlurRadAttr)
		}
		if *_gbdf.BlurRadAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbdf.BlurRadAttr)
		}
	}
	if _gbdf.DistAttr != nil {
		if *_gbdf.DistAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbdf.DistAttr)
		}
		if *_gbdf.DistAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_gbdf.DistAttr)
		}
	}
	if _gbdf.DirAttr != nil {
		if *_gbdf.DirAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_gbdf.DirAttr)
		}
		if *_gbdf.DirAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_gbdf.DirAttr)
		}
	}
	if _gbdf.SxAttr != nil {
		if _cccb := _gbdf.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _cccb != nil {
			return _cccb
		}
	}
	if _gbdf.SyAttr != nil {
		if _fegd := _gbdf.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _fegd != nil {
			return _fegd
		}
	}
	if _gbdf.KxAttr != nil {
		if *_gbdf.KxAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gbdf.KxAttr)
		}
		if *_gbdf.KxAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbdf.KxAttr)
		}
	}
	if _gbdf.KyAttr != nil {
		if *_gbdf.KyAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_gbdf.KyAttr)
		}
		if *_gbdf.KyAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gbdf.KyAttr)
		}
	}
	if _gfceb := _gbdf.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _gfceb != nil {
		return _gfceb
	}
	if _gbdf.ScrgbClr != nil {
		if _cbcf := _gbdf.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cbcf != nil {
			return _cbcf
		}
	}
	if _gbdf.SrgbClr != nil {
		if _fdagc := _gbdf.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fdagc != nil {
			return _fdagc
		}
	}
	if _gbdf.HslClr != nil {
		if _faec := _gbdf.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _faec != nil {
			return _faec
		}
	}
	if _gbdf.SysClr != nil {
		if _adaga := _gbdf.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _adaga != nil {
			return _adaga
		}
	}
	if _gbdf.SchemeClr != nil {
		if _gbbbg := _gbdf.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gbbbg != nil {
			return _gbbbg
		}
	}
	if _gbdf.PrstClr != nil {
		if _fbdb := _gbdf.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _fbdb != nil {
			return _fbdb
		}
	}
	return nil
}

type CT_GvmlGroupShapeNonVisual struct {
	CNvPr      *CT_NonVisualDrawingProps
	CNvGrpSpPr *CT_NonVisualGroupDrawingShapeProps
}
type ST_ChartBuildStep byte

// Validate validates the CT_FillOverlayEffect and its children
func (_bedb *CT_FillOverlayEffect) Validate() error {
	return _bedb.ValidateWithPath("C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074")
}
func (_bcb *CT_AnimationChartElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcb.BldStepAttr = ST_ChartBuildStep(1)
	for _, _aage := range start.Attr {
		if _aage.Name.Local == "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x" {
			_agff, _fbab := _cd.ParseInt(_aage.Value, 10, 32)
			if _fbab != nil {
				return _fbab
			}
			_eebb := int32(_agff)
			_bcb.SeriesIdxAttr = &_eebb
			continue
		}
		if _aage.Name.Local == "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078" {
			_eed, _ege := _cd.ParseInt(_aage.Value, 10, 32)
			if _ege != nil {
				return _ege
			}
			_feaa := int32(_eed)
			_bcb.CategoryIdxAttr = &_feaa
			continue
		}
		if _aage.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_bcb.BldStepAttr.UnmarshalXMLAttr(_aage)
			continue
		}
	}
	for {
		_ggc, _cea := d.Token()
		if _cea != nil {
			return _e.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0041nim\u0061ti\u006f\u006e\u0043\u0068\u0061\u0072\u0074El\u0065\u006d\u0065\u006e\u0074\u003a\u0020%\u0073", _cea)
		}
		if _bgd, _dfg := _ggc.(_d.EndElement); _dfg && _bgd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ebed *CT_ColorMapping) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebed.Bg1Attr = ST_ColorSchemeIndex(1)
	_ebed.Tx1Attr = ST_ColorSchemeIndex(1)
	_ebed.Bg2Attr = ST_ColorSchemeIndex(1)
	_ebed.Tx2Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent1Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent2Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent3Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent4Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent5Attr = ST_ColorSchemeIndex(1)
	_ebed.Accent6Attr = ST_ColorSchemeIndex(1)
	_ebed.HlinkAttr = ST_ColorSchemeIndex(1)
	_ebed.FolHlinkAttr = ST_ColorSchemeIndex(1)
	for _, _bbca := range start.Attr {
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0033" {
			_ebed.Accent3Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0074\u0078\u0031" {
			_ebed.Tx1Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0062\u0067\u0032" {
			_ebed.Bg2Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0074\u0078\u0032" {
			_ebed.Tx2Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0031" {
			_ebed.Accent1Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0032" {
			_ebed.Accent2Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0062\u0067\u0031" {
			_ebed.Bg1Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0034" {
			_ebed.Accent4Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0035" {
			_ebed.Accent5Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0061c\u0063\u0065\u006e\u0074\u0036" {
			_ebed.Accent6Attr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0068\u006c\u0069n\u006b" {
			_ebed.HlinkAttr.UnmarshalXMLAttr(_bbca)
			continue
		}
		if _bbca.Name.Local == "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b" {
			_ebed.FolHlinkAttr.UnmarshalXMLAttr(_bbca)
			continue
		}
	}
_bgba:
	for {
		_efga, _adf := d.Token()
		if _adf != nil {
			return _adf
		}
		switch _ffaf := _efga.(type) {
		case _d.StartElement:
			switch _ffaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebed.ExtLst = NewCT_OfficeArtExtensionList()
				if _fcce := d.DecodeElement(_ebed.ExtLst, &_ffaf); _fcce != nil {
					return _fcce
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006co\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u0020\u0025\u0076", _ffaf.Name)
				if _bbfg := d.Skip(); _bbfg != nil {
					return _bbfg
				}
			}
		case _d.EndElement:
			break _bgba
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the EG_ThemeableFontStyles and its children
func (_debcg *EG_ThemeableFontStyles) Validate() error {
	return _debcg.ValidateWithPath("\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073")
}
func (_gccfgc *ST_DgmBuildStep) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfafg, _bbeac := d.Token()
	if _bbeac != nil {
		return _bbeac
	}
	if _edgfg, _dbfgc := _dfafg.(_d.EndElement); _dbfgc && _edgfg.Name == start.Name {
		*_gccfgc = 1
		return nil
	}
	if _facbef, _ggdcc := _dfafg.(_d.CharData); !_ggdcc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfafg)
	} else {
		switch string(_facbef) {
		case "":
			*_gccfgc = 0
		case "\u0073\u0070":
			*_gccfgc = 1
		case "\u0062\u0067":
			*_gccfgc = 2
		}
	}
	_dfafg, _bbeac = d.Token()
	if _bbeac != nil {
		return _bbeac
	}
	if _bdcega, _eecbc := _dfafg.(_d.EndElement); _eecbc && _bdcega.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfafg)
}
func (_fabaf *CT_ObjectStyleDefaults) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fabaf.SpDef != nil {
		_bbegeb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0070\u0044\u0065\u0066"}}
		e.EncodeElement(_fabaf.SpDef, _bbegeb)
	}
	if _fabaf.LnDef != nil {
		_baage := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0044\u0065\u0066"}}
		e.EncodeElement(_fabaf.LnDef, _baage)
	}
	if _fabaf.TxDef != nil {
		_ebbda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0078\u0044\u0065\u0066"}}
		e.EncodeElement(_fabaf.TxDef, _ebbda)
	}
	if _fabaf.ExtLst != nil {
		_fgcd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fabaf.ExtLst, _fgcd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abag *CT_GradientFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abag.FlipAttr != ST_TileFlipModeUnset {
		_edeg, _ccegg := _abag.FlipAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _ccegg != nil {
			return _ccegg
		}
		start.Attr = append(start.Attr, _edeg)
	}
	if _abag.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abag.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _abag.GsLst != nil {
		_fcbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0073\u004c\u0073\u0074"}}
		e.EncodeElement(_abag.GsLst, _fcbe)
	}
	if _abag.Lin != nil {
		_ffeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_abag.Lin, _ffeb)
	}
	if _abag.Path != nil {
		_cgea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_abag.Path, _cgea)
	}
	if _abag.TileRect != nil {
		_acce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_abag.TileRect, _acce)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbfe *CT_GradientStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _e.Sprintf("\u0025\u0076", _cbfe.PosAttr)})
	e.EncodeToken(start)
	if _cbfe.ScrgbClr != nil {
		_cfbba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cbfe.ScrgbClr, _cfbba)
	}
	if _cbfe.SrgbClr != nil {
		_egbac := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_cbfe.SrgbClr, _egbac)
	}
	if _cbfe.HslClr != nil {
		_bcfbbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_cbfe.HslClr, _bcfbbd)
	}
	if _cbfe.SysClr != nil {
		_afcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_cbfe.SysClr, _afcc)
	}
	if _cbfe.SchemeClr != nil {
		_cagfd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cbfe.SchemeClr, _cagfd)
	}
	if _cbfe.PrstClr != nil {
		_afde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_cbfe.PrstClr, _afde)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_ColorSchemeList struct{ ExtraClrScheme []*CT_ColorSchemeAndMapping }

func (_gdecc *CT_PresetLineDashProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebbbg := range start.Attr {
		if _ebbbg.Name.Local == "\u0076\u0061\u006c" {
			_gdecc.ValAttr.UnmarshalXMLAttr(_ebbbg)
			continue
		}
	}
	for {
		_ebaac, _ebfcdd := d.Token()
		if _ebfcdd != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u0072e\u0073\u0065\u0074\u004c\u0069\u006ee\u0044\u0061\u0073\u0068\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _ebfcdd)
		}
		if _bccgd, _dcbfc := _ebaac.(_d.EndElement); _dcbfc && _bccgd.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_SchemeColorVal byte

func (_bagef *CT_TablePropertiesChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bfcgc:
	for {
		_aeeea, _ffef := d.Token()
		if _ffef != nil {
			return _ffef
		}
		switch _gbgfg := _aeeea.(type) {
		case _d.StartElement:
			switch _gbgfg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_bagef.TableStyle = NewCT_TableStyle()
				if _baedg := d.DecodeElement(_bagef.TableStyle, &_gbgfg); _baedg != nil {
					return _baedg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_bagef.TableStyleId = new(string)
				if _fefeb := d.DecodeElement(_bagef.TableStyleId, &_gbgfg); _fefeb != nil {
					return _fefeb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0043h\u006f\u0069\u0063\u0065\u0020%\u0076", _gbgfg.Name)
				if _fgcbe := d.Skip(); _fgcbe != nil {
					return _fgcbe
				}
			}
		case _d.EndElement:
			break _bfcgc
		case _d.CharData:
		}
	}
	return nil
}
func (_cfdae *CT_BaseStylesOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfdae.ClrScheme != nil {
		_gbee := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_cfdae.ClrScheme, _gbee)
	}
	if _cfdae.FontScheme != nil {
		_efc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_cfdae.FontScheme, _efc)
	}
	if _cfdae.FmtScheme != nil {
		_age := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
		e.EncodeElement(_cfdae.FmtScheme, _age)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_NonVisualGroupDrawingShapeProps struct {
	GrpSpLocks *CT_GroupLocking
	ExtLst     *CT_OfficeArtExtensionList
}

func NewCT_Path2DClose() *CT_Path2DClose { _dfaba := &CT_Path2DClose{}; return _dfaba }
func NewCT_WholeE2oFormatting() *CT_WholeE2oFormatting {
	_ffbec := &CT_WholeE2oFormatting{}
	return _ffbec
}
func (_dacce ST_LightRigType) String() string {
	switch _dacce {
	case 0:
		return ""
	case 1:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case 2:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case 3:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case 4:
		return "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case 5:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case 6:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case 7:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case 8:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case 9:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case 10:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case 11:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case 12:
		return "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case 13:
		return "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case 14:
		return "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case 15:
		return "\u0073\u006f\u0066\u0074"
	case 16:
		return "\u0068\u0061\u0072s\u0068"
	case 17:
		return "\u0066\u006c\u006fo\u0064"
	case 18:
		return "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case 19:
		return "\u006do\u0072\u006e\u0069\u006e\u0067"
	case 20:
		return "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case 21:
		return "\u0073\u0075\u006e\u0073\u0065\u0074"
	case 22:
		return "\u0063\u0068\u0069\u006c\u006c\u0079"
	case 23:
		return "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case 24:
		return "\u0066\u006c\u0061\u0074"
	case 25:
		return "\u0074\u0077\u006fP\u0074"
	case 26:
		return "\u0067\u006c\u006f\u0077"
	case 27:
		return "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return ""
}
func (_gadcc ST_PathShadeType) Validate() error { return _gadcc.ValidateWithPath("") }
func (_bfgaeb ST_DgmBuildStep) ValidateWithPath(path string) error {
	switch _bfgaeb {
	case 0, 1, 2:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bfgaeb))
	}
	return nil
}
func (_agagb *CT_ComplementTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gccbf, _egba := d.Token()
		if _egba != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0043\u006f\u006dp\u006ce\u006de\u006et\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u0073", _egba)
		}
		if _cfbe, _afaac := _gccbf.(_d.EndElement); _afaac && _cfbe.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dfbcb *CT_GraphicalObjectData) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _e.Sprintf("\u0025\u0076", _dfbcb.UriAttr)})
	e.EncodeToken(start)
	if _dfbcb.Any != nil {
		for _, _eaca := range _dfbcb.Any {
			_eaca.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_ThemeableEffectStyle and its children, prefixing error messages with path
func (_daced *EG_ThemeableEffectStyle) ValidateWithPath(path string) error {
	if _daced.Effect != nil {
		if _ffeed := _daced.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _ffeed != nil {
			return _ffeed
		}
	}
	if _daced.EffectRef != nil {
		if _fgaee := _daced.EffectRef.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"); _fgaee != nil {
			return _fgaee
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Boolean and its children, prefixing error messages with path
func (_deffc *CT_Boolean) ValidateWithPath(path string) error {
	if _deffc.ValAttr != nil {
		if _aceg := _deffc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _aceg != nil {
			return _aceg
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PictureLocking and its children, prefixing error messages with path
func (_caacd *CT_PictureLocking) ValidateWithPath(path string) error {
	if _caacd.ExtLst != nil {
		if _aedc := _caacd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aedc != nil {
			return _aedc
		}
	}
	return nil
}
func (_dbgff *ST_PitchFamily) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dbgff = 0
	case "\u0030\u0030":
		*_dbgff = 1
	case "\u0030\u0031":
		*_dbgff = 2
	case "\u0030\u0032":
		*_dbgff = 3
	case "\u0031\u0036":
		*_dbgff = 4
	case "\u0031\u0037":
		*_dbgff = 5
	case "\u0031\u0038":
		*_dbgff = 6
	case "\u0033\u0032":
		*_dbgff = 7
	case "\u0033\u0033":
		*_dbgff = 8
	case "\u0033\u0034":
		*_dbgff = 9
	case "\u0034\u0038":
		*_dbgff = 10
	case "\u0034\u0039":
		*_dbgff = 11
	case "\u0035\u0030":
		*_dbgff = 12
	case "\u0036\u0034":
		*_dbgff = 13
	case "\u0036\u0035":
		*_dbgff = 14
	case "\u0036\u0036":
		*_dbgff = 15
	case "\u0038\u0030":
		*_dbgff = 16
	case "\u0038\u0031":
		*_dbgff = 17
	case "\u0038\u0032":
		*_dbgff = 18
	}
	return nil
}
func (_gdbg *CT_Point2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _eaeg := range start.Attr {
		if _eaeg.Name.Local == "\u0078" {
			_ddgbd, _ebadb := ParseUnionST_Coordinate(_eaeg.Value)
			if _ebadb != nil {
				return _ebadb
			}
			_gdbg.XAttr = _ddgbd
			continue
		}
		if _eaeg.Name.Local == "\u0079" {
			_edgfb, _cccgd := ParseUnionST_Coordinate(_eaeg.Value)
			if _cccgd != nil {
				return _cccgd
			}
			_gdbg.YAttr = _edgfb
			continue
		}
	}
	for {
		_cfbfc, _fcfaa := d.Token()
		if _fcfaa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044\u003a\u0020%\u0073", _fcfaa)
		}
		if _caadd, _abad := _cfbfc.(_d.EndElement); _abad && _caadd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdeaa *CT_LineStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_caga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
	for _, _agda := range _bdeaa.Ln {
		e.EncodeElement(_agda, _caga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_ChartBuildStepUnset        ST_ChartBuildStep = 0
	ST_ChartBuildStepCategory     ST_ChartBuildStep = 1
	ST_ChartBuildStepPtInCategory ST_ChartBuildStep = 2
	ST_ChartBuildStepSeries       ST_ChartBuildStep = 3
	ST_ChartBuildStepPtInSeries   ST_ChartBuildStep = 4
	ST_ChartBuildStepAllPts       ST_ChartBuildStep = 5
	ST_ChartBuildStepGridLegend   ST_ChartBuildStep = 6
)

func (_cddbgb *ST_TileFlipMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aadfb, _deaaf := d.Token()
	if _deaaf != nil {
		return _deaaf
	}
	if _ffgbg, _adagc := _aadfb.(_d.EndElement); _adagc && _ffgbg.Name == start.Name {
		*_cddbgb = 1
		return nil
	}
	if _ddfgg, _fdffbc := _aadfb.(_d.CharData); !_fdffbc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aadfb)
	} else {
		switch string(_ddfgg) {
		case "":
			*_cddbgb = 0
		case "\u006e\u006f\u006e\u0065":
			*_cddbgb = 1
		case "\u0078":
			*_cddbgb = 2
		case "\u0079":
			*_cddbgb = 3
		case "\u0078\u0079":
			*_cddbgb = 4
		}
	}
	_aadfb, _deaaf = d.Token()
	if _deaaf != nil {
		return _deaaf
	}
	if _eagbd, _gfaf := _aadfb.(_d.EndElement); _gfaf && _eagbd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aadfb)
}
func (_cad *CT_AudioCDTime) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0072\u0061c\u006b"}, Value: _e.Sprintf("\u0025\u0076", _cad.TrackAttr)})
	if _cad.TimeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cad.TimeAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextNoBullet() *CT_TextNoBullet { _cddbc := &CT_TextNoBullet{}; return _cddbc }
func (_gadbe ST_TextShapeType) String() string {
	switch _gadbe {
	case 0:
		return ""
	case 1:
		return "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case 2:
		return "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case 3:
		return "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case 4:
		return "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 5:
		return "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case 6:
		return "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case 7:
		return "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case 8:
		return "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case 9:
		return "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case 10:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case 11:
		return "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case 12:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case 13:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case 14:
		return "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case 15:
		return "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case 16:
		return "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case 17:
		return "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case 18:
		return "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case 19:
		return "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case 20:
		return "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case 21:
		return "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case 23:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case 24:
		return "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case 25:
		return "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case 26:
		return "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case 27:
		return "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case 28:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 29:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case 30:
		return "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 31:
		return "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case 32:
		return "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case 33:
		return "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case 34:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case 35:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case 36:
		return "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case 37:
		return "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case 38:
		return "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case 39:
		return "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case 40:
		return "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case 41:
		return "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return ""
}

type CT_StretchInfoProperties struct{ FillRect *CT_RelativeRect }
type CT_NoFillProperties struct{}

func NewCT_SystemColor() *CT_SystemColor {
	_adccd := &CT_SystemColor{}
	_adccd.ValAttr = ST_SystemColorVal(1)
	return _adccd
}

type CT_SchemeColor struct {
	ValAttr           ST_SchemeColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func NewCT_Path2D() *CT_Path2D { _addae := &CT_Path2D{}; return _addae }
func (_ebcae *CT_FillOverlayEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_bdcf, _bcea := _ebcae.BlendAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _bcea != nil {
		return _bcea
	}
	start.Attr = append(start.Attr, _bdcf)
	e.EncodeToken(start)
	if _ebcae.NoFill != nil {
		_fddbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebcae.NoFill, _fddbe)
	}
	if _ebcae.SolidFill != nil {
		_aaed := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebcae.SolidFill, _aaed)
	}
	if _ebcae.GradFill != nil {
		_gfag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebcae.GradFill, _gfag)
	}
	if _ebcae.BlipFill != nil {
		_gcgcc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebcae.BlipFill, _gcgcc)
	}
	if _ebcae.PattFill != nil {
		_gfaaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_ebcae.PattFill, _gfaaa)
	}
	if _ebcae.GrpFill != nil {
		_gbcb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_ebcae.GrpFill, _gbcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_InverseGammaTransform and its children
func (_eebfd *CT_InverseGammaTransform) Validate() error {
	return _eebfd.ValidateWithPath("\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

// ST_AnimationChartBuildType is a union type
type ST_AnimationChartBuildType struct {
	ST_AnimationBuildType          ST_AnimationBuildType
	ST_AnimationChartOnlyBuildType ST_AnimationChartOnlyBuildType
}

func (_cabb *CT_NonVisualConnectorProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cabb.CxnSpLocks != nil {
		_dfeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063x\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_cabb.CxnSpLocks, _dfeb)
	}
	if _cabb.StCxn != nil {
		_debc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0043\u0078\u006e"}}
		e.EncodeElement(_cabb.StCxn, _debc)
	}
	if _cabb.EndCxn != nil {
		_fdfba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u006e\u0064\u0043\u0078\u006e"}}
		e.EncodeElement(_cabb.EndCxn, _fdfba)
	}
	if _cabb.ExtLst != nil {
		_fabdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cabb.ExtLst, _fabdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eda *CT_Backdrop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eda.Anchor = NewCT_Point3D()
	_eda.Norm = NewCT_Vector3D()
	_eda.Up = NewCT_Vector3D()
_cgg:
	for {
		_cbb, _daaf := d.Token()
		if _daaf != nil {
			return _daaf
		}
		switch _badg := _cbb.(type) {
		case _d.StartElement:
			switch _badg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006e\u0063\u0068\u006f\u0072"}:
				if _cfa := d.DecodeElement(_eda.Anchor, &_badg); _cfa != nil {
					return _cfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0072\u006d"}:
				if _feg := d.DecodeElement(_eda.Norm, &_badg); _feg != nil {
					return _feg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0070"}:
				if _deff := d.DecodeElement(_eda.Up, &_badg); _deff != nil {
					return _deff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eda.ExtLst = NewCT_OfficeArtExtensionList()
				if _gadf := d.DecodeElement(_eda.ExtLst, &_badg); _gadf != nil {
					return _gadf
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070\u0020\u0025\u0076", _badg.Name)
				if _cgcb := d.Skip(); _cgcb != nil {
					return _cgcb
				}
			}
		case _d.EndElement:
			break _cgg
		case _d.CharData:
		}
	}
	return nil
}
func (_ffea *CT_GvmlShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bbab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_ffea.CNvPr, _bbab)
	_gbefb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0053\u0070\u0050r"}}
	e.EncodeElement(_ffea.CNvSpPr, _gbefb)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SolidColorFillProperties and its children
func (_fdcee *CT_SolidColorFillProperties) Validate() error {
	return _fdcee.ValidateWithPath("C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}

// ValidateWithPath validates the AG_Blob and its children, prefixing error messages with path
func (_gg *AG_Blob) ValidateWithPath(path string) error { return nil }
func (_ecbfa ST_PresetPatternVal) String() string {
	switch _ecbfa {
	case 0:
		return ""
	case 1:
		return "\u0070\u0063\u0074\u0035"
	case 2:
		return "\u0070\u0063\u00741\u0030"
	case 3:
		return "\u0070\u0063\u00742\u0030"
	case 4:
		return "\u0070\u0063\u00742\u0035"
	case 5:
		return "\u0070\u0063\u00743\u0030"
	case 6:
		return "\u0070\u0063\u00744\u0030"
	case 7:
		return "\u0070\u0063\u00745\u0030"
	case 8:
		return "\u0070\u0063\u00746\u0030"
	case 9:
		return "\u0070\u0063\u00747\u0030"
	case 10:
		return "\u0070\u0063\u00747\u0035"
	case 11:
		return "\u0070\u0063\u00748\u0030"
	case 12:
		return "\u0070\u0063\u00749\u0030"
	case 13:
		return "\u0068\u006f\u0072\u007a"
	case 14:
		return "\u0076\u0065\u0072\u0074"
	case 15:
		return "\u006c\u0074\u0048\u006f\u0072\u007a"
	case 16:
		return "\u006c\u0074\u0056\u0065\u0072\u0074"
	case 17:
		return "\u0064\u006b\u0048\u006f\u0072\u007a"
	case 18:
		return "\u0064\u006b\u0056\u0065\u0072\u0074"
	case 19:
		return "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case 20:
		return "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case 21:
		return "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case 22:
		return "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case 23:
		return "\u0063\u0072\u006fs\u0073"
	case 24:
		return "\u0064\u006e\u0044\u0069\u0061\u0067"
	case 25:
		return "\u0075\u0070\u0044\u0069\u0061\u0067"
	case 26:
		return "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case 27:
		return "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case 28:
		return "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case 29:
		return "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case 30:
		return "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case 31:
		return "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case 32:
		return "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case 33:
		return "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case 34:
		return "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case 35:
		return "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case 36:
		return "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case 37:
		return "\u0073\u006d\u0047\u0072\u0069\u0064"
	case 38:
		return "\u006c\u0067\u0047\u0072\u0069\u0064"
	case 39:
		return "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case 40:
		return "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 41:
		return "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case 42:
		return "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case 43:
		return "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case 44:
		return "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case 45:
		return "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case 46:
		return "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case 47:
		return "\u0070\u006c\u0061i\u0064"
	case 48:
		return "\u0073\u0070\u0068\u0065\u0072\u0065"
	case 49:
		return "\u0077\u0065\u0061v\u0065"
	case 50:
		return "\u0064\u0069\u0076o\u0074"
	case 51:
		return "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case 52:
		return "\u0077\u0061\u0076\u0065"
	case 53:
		return "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case 54:
		return "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return ""
}

// ValidateWithPath validates the CT_PresetLineDashProperties and its children, prefixing error messages with path
func (_aageg *CT_PresetLineDashProperties) ValidateWithPath(path string) error {
	if _caebf := _aageg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _caebf != nil {
		return _caebf
	}
	return nil
}
func (_bfca *CT_GraphicalObjectFrameLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bfca.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoGrpAttr))})
	}
	if _bfca.NoDrilldownAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoDrilldownAttr))})
	}
	if _bfca.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoSelectAttr))})
	}
	if _bfca.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoChangeAspectAttr))})
	}
	if _bfca.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoMoveAttr))})
	}
	if _bfca.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bfca.NoResizeAttr))})
	}
	e.EncodeToken(start)
	if _bfca.ExtLst != nil {
		_eedeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfca.ExtLst, _eedeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddebg *CT_Vector3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebbac := range start.Attr {
		if _ebbac.Name.Local == "\u0064\u0078" {
			_gbgg, _caaf := ParseUnionST_Coordinate(_ebbac.Value)
			if _caaf != nil {
				return _caaf
			}
			_ddebg.DxAttr = _gbgg
			continue
		}
		if _ebbac.Name.Local == "\u0064\u0079" {
			_bcbfda, _dbeeg := ParseUnionST_Coordinate(_ebbac.Value)
			if _dbeeg != nil {
				return _dbeeg
			}
			_ddebg.DyAttr = _bcbfda
			continue
		}
		if _ebbac.Name.Local == "\u0064\u007a" {
			_agded, _facfa := ParseUnionST_Coordinate(_ebbac.Value)
			if _facfa != nil {
				return _facfa
			}
			_ddebg.DzAttr = _agded
			continue
		}
	}
	for {
		_geeceg, _bggag := d.Token()
		if _bggag != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044\u003a\u0020\u0025\u0073", _bggag)
		}
		if _fegfgb, _edde := _geeceg.(_d.EndElement); _edde && _fegfgb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cgcd *CT_TextBody) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_aecff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0064\u0079\u0050\u0072"}}
	e.EncodeElement(_cgcd.BodyPr, _aecff)
	if _cgcd.LstStyle != nil {
		_cgdca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cgcd.LstStyle, _cgdca)
	}
	_cafbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070"}}
	for _, _gcagf := range _cgcd.P {
		e.EncodeElement(_gcagf, _cafbb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcgeg ST_DgmBuildStep) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bccec := _d.Attr{}
	_bccec.Name = name
	switch _dcgeg {
	case ST_DgmBuildStepUnset:
		_bccec.Value = ""
	case ST_DgmBuildStepSp:
		_bccec.Value = "\u0073\u0070"
	case ST_DgmBuildStepBg:
		_bccec.Value = "\u0062\u0067"
	}
	return _bccec, nil
}
func (_egdgb ST_AdjCoordinate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _egdgb.ST_Coordinate != nil {
		e.Encode(_egdgb.ST_Coordinate)
	}
	if _egdgb.ST_GeomGuideName != nil {
		e.EncodeToken(_d.CharData(*_egdgb.ST_GeomGuideName))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_aceb ST_DgmBuildStep) Validate() error { return _aceb.ValidateWithPath("") }
func (_dgcd *CT_AnimationChartBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgf := range start.Attr {
		if _bgf.Name.Local == "\u0062\u006c\u0064" {
			_aaga, _bgbf := ParseUnionST_AnimationChartBuildType(_bgf.Value)
			if _bgbf != nil {
				return _bgbf
			}
			_dgcd.BldAttr = &_aaga
			continue
		}
		if _bgf.Name.Local == "\u0061\u006e\u0069\u006d\u0042\u0067" {
			_bbec, _beaa := _cd.ParseBool(_bgf.Value)
			if _beaa != nil {
				return _beaa
			}
			_dgcd.AnimBgAttr = &_bbec
			continue
		}
	}
	for {
		_acc, _eecf := d.Token()
		if _eecf != nil {
			return _e.Errorf("\u0070a\u0072\u0073i\u006e\u0067\u0020\u0043T\u005f\u0041\u006ei\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061rt\u0042\u0075\u0069l\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069e\u0073\u003a \u0025\u0073", _eecf)
		}
		if _dcbd, _adda := _acc.(_d.EndElement); _adda && _dcbd.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Point2D() *CT_Point2D { _ebabc := &CT_Point2D{}; return _ebabc }

// ValidateWithPath validates the CT_InnerShadowEffect and its children, prefixing error messages with path
func (_abab *CT_InnerShadowEffect) ValidateWithPath(path string) error {
	if _abab.BlurRadAttr != nil {
		if *_abab.BlurRadAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0042\u006c\u0075\u0072\u0052\u0061\u0064\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_abab.BlurRadAttr)
		}
		if *_abab.BlurRadAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0042\u006c\u0075r\u0052\u0061\u0064\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_abab.BlurRadAttr)
		}
	}
	if _abab.DistAttr != nil {
		if *_abab.DistAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u0044\u0069s\u0074\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_abab.DistAttr)
		}
		if *_abab.DistAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044i\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u00372\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068a\u0076e\u0020\u0025\u0076\u0029", path, *_abab.DistAttr)
		}
	}
	if _abab.DirAttr != nil {
		if *_abab.DirAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0044\u0069r\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_abab.DirAttr)
		}
		if *_abab.DirAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eD\u0069\u0072\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_abab.DirAttr)
		}
	}
	if _abab.ScrgbClr != nil {
		if _aeae := _abab.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _aeae != nil {
			return _aeae
		}
	}
	if _abab.SrgbClr != nil {
		if _eeadd := _abab.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _eeadd != nil {
			return _eeadd
		}
	}
	if _abab.HslClr != nil {
		if _ebcag := _abab.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _ebcag != nil {
			return _ebcag
		}
	}
	if _abab.SysClr != nil {
		if _gdab := _abab.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _gdab != nil {
			return _gdab
		}
	}
	if _abab.SchemeClr != nil {
		if _ddab := _abab.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ddab != nil {
			return _ddab
		}
	}
	if _abab.PrstClr != nil {
		if _gfgg := _abab.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gfgg != nil {
			return _gfgg
		}
	}
	return nil
}
func (_agebbe *CT_TintEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebcef := range start.Attr {
		if _ebcef.Name.Local == "\u0068\u0075\u0065" {
			_ffaa, _gbbag := _cd.ParseInt(_ebcef.Value, 10, 32)
			if _gbbag != nil {
				return _gbbag
			}
			_cfgec := int32(_ffaa)
			_agebbe.HueAttr = &_cfgec
			continue
		}
		if _ebcef.Name.Local == "\u0061\u006d\u0074" {
			_afege, _feddc := ParseUnionST_FixedPercentage(_ebcef.Value)
			if _feddc != nil {
				return _feddc
			}
			_agebbe.AmtAttr = &_afege
			continue
		}
	}
	for {
		_cdcga, _bcbca := d.Token()
		if _bcbca != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054i\u006et\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _bcbca)
		}
		if _ggfcb, _deecb := _cdcga.(_d.EndElement); _deecb && _ggfcb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_GeomGuide() *CT_GeomGuide { _afbbe := &CT_GeomGuide{}; return _afbbe }
func NewCT_FontScheme() *CT_FontScheme {
	_aefe := &CT_FontScheme{}
	_aefe.MajorFont = NewCT_FontCollection()
	_aefe.MinorFont = NewCT_FontCollection()
	return _aefe
}

// ValidateWithPath validates the CT_InverseGammaTransform and its children, prefixing error messages with path
func (_eggdb *CT_InverseGammaTransform) ValidateWithPath(path string) error { return nil }
func (_dcdad *CT_BlurEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcdad.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_dcdad.RadAttr)})
	}
	if _dcdad.GrowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u006f\u0077"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_dcdad.GrowAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Backdrop and its children, prefixing error messages with path
func (_fcgc *CT_Backdrop) ValidateWithPath(path string) error {
	if _dadf := _fcgc.Anchor.ValidateWithPath(path + "\u002fA\u006e\u0063\u0068\u006f\u0072"); _dadf != nil {
		return _dadf
	}
	if _aegdf := _fcgc.Norm.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d"); _aegdf != nil {
		return _aegdf
	}
	if _dea := _fcgc.Up.ValidateWithPath(path + "\u002f\u0055\u0070"); _dea != nil {
		return _dea
	}
	if _fcgc.ExtLst != nil {
		if _acafc := _fcgc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acafc != nil {
			return _acafc
		}
	}
	return nil
}
func (_dgedc *EG_ColorChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aedcg:
	for {
		_defdc, _ffeee := d.Token()
		if _ffeee != nil {
			return _ffeee
		}
		switch _cfdga := _defdc.(type) {
		case _d.StartElement:
			switch _cfdga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgedc.ScrgbClr = NewCT_ScRgbColor()
				if _fcfggd := d.DecodeElement(_dgedc.ScrgbClr, &_cfdga); _fcfggd != nil {
					return _fcfggd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dgedc.SrgbClr = NewCT_SRgbColor()
				if _gacdc := d.DecodeElement(_dgedc.SrgbClr, &_cfdga); _gacdc != nil {
					return _gacdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dgedc.HslClr = NewCT_HslColor()
				if _fedcb := d.DecodeElement(_dgedc.HslClr, &_cfdga); _fedcb != nil {
					return _fedcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dgedc.SysClr = NewCT_SystemColor()
				if _gfca := d.DecodeElement(_dgedc.SysClr, &_cfdga); _gfca != nil {
					return _gfca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dgedc.SchemeClr = NewCT_SchemeColor()
				if _ebfe := d.DecodeElement(_dgedc.SchemeClr, &_cfdga); _ebfe != nil {
					return _ebfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dgedc.PrstClr = NewCT_PresetColor()
				if _dfaccg := d.DecodeElement(_dgedc.PrstClr, &_cfdga); _dfaccg != nil {
					return _dfaccg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068o\u0069c\u0065\u0020\u0025\u0076", _cfdga.Name)
				if _dbfg := d.Skip(); _dbfg != nil {
					return _dbfg
				}
			}
		case _d.EndElement:
			break _aedcg
		case _d.CharData:
		}
	}
	return nil
}
func (_bebggf *EG_Geometry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bgab:
	for {
		_ebcfc, _daefe := d.Token()
		if _daefe != nil {
			return _daefe
		}
		switch _dbaed := _ebcfc.(type) {
		case _d.StartElement:
			switch _dbaed.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_bebggf.CustGeom = NewCT_CustomGeometry2D()
				if _efgga := d.DecodeElement(_bebggf.CustGeom, &_dbaed); _efgga != nil {
					return _efgga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_bebggf.PrstGeom = NewCT_PresetGeometry2D()
				if _bgcebd := d.DecodeElement(_bebggf.PrstGeom, &_dbaed); _bgcebd != nil {
					return _bgcebd
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _dbaed.Name)
				if _ccffd := d.Skip(); _ccffd != nil {
					return _ccffd
				}
			}
		case _d.EndElement:
			break _bgab
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_CustomColorList() *CT_CustomColorList { _fdd := &CT_CustomColorList{}; return _fdd }
func (_abaff ST_LineCap) ValidateWithPath(path string) error {
	switch _abaff {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abaff))
	}
	return nil
}

// ST_Coordinate is a union type
type ST_Coordinate struct {
	ST_CoordinateUnqualified *int64
	ST_UniversalMeasure      *string
}

func (_bgade ST_ShapeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gbfd := _d.Attr{}
	_gbfd.Name = name
	switch _bgade {
	case ST_ShapeTypeUnset:
		_gbfd.Value = ""
	case ST_ShapeTypeLine:
		_gbfd.Value = "\u006c\u0069\u006e\u0065"
	case ST_ShapeTypeLineInv:
		_gbfd.Value = "\u006ci\u006e\u0065\u0049\u006e\u0076"
	case ST_ShapeTypeTriangle:
		_gbfd.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRtTriangle:
		_gbfd.Value = "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_ShapeTypeRect:
		_gbfd.Value = "\u0072\u0065\u0063\u0074"
	case ST_ShapeTypeDiamond:
		_gbfd.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_ShapeTypeParallelogram:
		_gbfd.Value = "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d"
	case ST_ShapeTypeTrapezoid:
		_gbfd.Value = "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d"
	case ST_ShapeTypeNonIsoscelesTrapezoid:
		_gbfd.Value = "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064"
	case ST_ShapeTypePentagon:
		_gbfd.Value = "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHexagon:
		_gbfd.Value = "\u0068e\u0078\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeHeptagon:
		_gbfd.Value = "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeOctagon:
		_gbfd.Value = "\u006fc\u0074\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDecagon:
		_gbfd.Value = "\u0064e\u0063\u0061\u0067\u006f\u006e"
	case ST_ShapeTypeDodecagon:
		_gbfd.Value = "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn"
	case ST_ShapeTypeStar4:
		_gbfd.Value = "\u0073\u0074\u0061r\u0034"
	case ST_ShapeTypeStar5:
		_gbfd.Value = "\u0073\u0074\u0061r\u0035"
	case ST_ShapeTypeStar6:
		_gbfd.Value = "\u0073\u0074\u0061r\u0036"
	case ST_ShapeTypeStar7:
		_gbfd.Value = "\u0073\u0074\u0061r\u0037"
	case ST_ShapeTypeStar8:
		_gbfd.Value = "\u0073\u0074\u0061r\u0038"
	case ST_ShapeTypeStar10:
		_gbfd.Value = "\u0073\u0074\u0061\u0072\u0031\u0030"
	case ST_ShapeTypeStar12:
		_gbfd.Value = "\u0073\u0074\u0061\u0072\u0031\u0032"
	case ST_ShapeTypeStar16:
		_gbfd.Value = "\u0073\u0074\u0061\u0072\u0031\u0036"
	case ST_ShapeTypeStar24:
		_gbfd.Value = "\u0073\u0074\u0061\u0072\u0032\u0034"
	case ST_ShapeTypeStar32:
		_gbfd.Value = "\u0073\u0074\u0061\u0072\u0033\u0032"
	case ST_ShapeTypeRoundRect:
		_gbfd.Value = "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t"
	case ST_ShapeTypeRound1Rect:
		_gbfd.Value = "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2SameRect:
		_gbfd.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeRound2DiagRect:
		_gbfd.Value = "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnipRoundRect:
		_gbfd.Value = "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip1Rect:
		_gbfd.Value = "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t"
	case ST_ShapeTypeSnip2SameRect:
		_gbfd.Value = "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074"
	case ST_ShapeTypeSnip2DiagRect:
		_gbfd.Value = "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074"
	case ST_ShapeTypePlaque:
		_gbfd.Value = "\u0070\u006c\u0061\u0071\u0075\u0065"
	case ST_ShapeTypeEllipse:
		_gbfd.Value = "\u0065l\u006c\u0069\u0070\u0073\u0065"
	case ST_ShapeTypeTeardrop:
		_gbfd.Value = "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070"
	case ST_ShapeTypeHomePlate:
		_gbfd.Value = "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e"
	case ST_ShapeTypeChevron:
		_gbfd.Value = "\u0063h\u0065\u0076\u0072\u006f\u006e"
	case ST_ShapeTypePieWedge:
		_gbfd.Value = "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065"
	case ST_ShapeTypePie:
		_gbfd.Value = "\u0070\u0069\u0065"
	case ST_ShapeTypeBlockArc:
		_gbfd.Value = "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063"
	case ST_ShapeTypeDonut:
		_gbfd.Value = "\u0064\u006f\u006eu\u0074"
	case ST_ShapeTypeNoSmoking:
		_gbfd.Value = "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg"
	case ST_ShapeTypeRightArrow:
		_gbfd.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftArrow:
		_gbfd.Value = "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUpArrow:
		_gbfd.Value = "\u0075p\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeDownArrow:
		_gbfd.Value = "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeStripedRightArrow:
		_gbfd.Value = "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeNotchedRightArrow:
		_gbfd.Value = "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeBentUpArrow:
		_gbfd.Value = "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightArrow:
		_gbfd.Value = "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeUpDownArrow:
		_gbfd.Value = "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftUpArrow:
		_gbfd.Value = "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightUpArrow:
		_gbfd.Value = "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeQuadArrow:
		_gbfd.Value = "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeLeftArrowCallout:
		_gbfd.Value = "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeRightArrowCallout:
		_gbfd.Value = "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpArrowCallout:
		_gbfd.Value = "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeDownArrowCallout:
		_gbfd.Value = "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeLeftRightArrowCallout:
		_gbfd.Value = "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeUpDownArrowCallout:
		_gbfd.Value = "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeQuadArrowCallout:
		_gbfd.Value = "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeBentArrow:
		_gbfd.Value = "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw"
	case ST_ShapeTypeUturnArrow:
		_gbfd.Value = "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCircularArrow:
		_gbfd.Value = "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftCircularArrow:
		_gbfd.Value = "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeLeftRightCircularArrow:
		_gbfd.Value = "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077"
	case ST_ShapeTypeCurvedRightArrow:
		_gbfd.Value = "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedLeftArrow:
		_gbfd.Value = "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedUpArrow:
		_gbfd.Value = "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCurvedDownArrow:
		_gbfd.Value = "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeSwooshArrow:
		_gbfd.Value = "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077"
	case ST_ShapeTypeCube:
		_gbfd.Value = "\u0063\u0075\u0062\u0065"
	case ST_ShapeTypeCan:
		_gbfd.Value = "\u0063\u0061\u006e"
	case ST_ShapeTypeLightningBolt:
		_gbfd.Value = "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074"
	case ST_ShapeTypeHeart:
		_gbfd.Value = "\u0068\u0065\u0061r\u0074"
	case ST_ShapeTypeSun:
		_gbfd.Value = "\u0073\u0075\u006e"
	case ST_ShapeTypeMoon:
		_gbfd.Value = "\u006d\u006f\u006f\u006e"
	case ST_ShapeTypeSmileyFace:
		_gbfd.Value = "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065"
	case ST_ShapeTypeIrregularSeal1:
		_gbfd.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031"
	case ST_ShapeTypeIrregularSeal2:
		_gbfd.Value = "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032"
	case ST_ShapeTypeFoldedCorner:
		_gbfd.Value = "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeBevel:
		_gbfd.Value = "\u0062\u0065\u0076e\u006c"
	case ST_ShapeTypeFrame:
		_gbfd.Value = "\u0066\u0072\u0061m\u0065"
	case ST_ShapeTypeHalfFrame:
		_gbfd.Value = "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de"
	case ST_ShapeTypeCorner:
		_gbfd.Value = "\u0063\u006f\u0072\u006e\u0065\u0072"
	case ST_ShapeTypeDiagStripe:
		_gbfd.Value = "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065"
	case ST_ShapeTypeChord:
		_gbfd.Value = "\u0063\u0068\u006fr\u0064"
	case ST_ShapeTypeArc:
		_gbfd.Value = "\u0061\u0072\u0063"
	case ST_ShapeTypeLeftBracket:
		_gbfd.Value = "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeRightBracket:
		_gbfd.Value = "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074"
	case ST_ShapeTypeLeftBrace:
		_gbfd.Value = "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e"
	case ST_ShapeTypeRightBrace:
		_gbfd.Value = "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065"
	case ST_ShapeTypeBracketPair:
		_gbfd.Value = "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072"
	case ST_ShapeTypeBracePair:
		_gbfd.Value = "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r"
	case ST_ShapeTypeStraightConnector1:
		_gbfd.Value = "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031"
	case ST_ShapeTypeBentConnector2:
		_gbfd.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeBentConnector3:
		_gbfd.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeBentConnector4:
		_gbfd.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeBentConnector5:
		_gbfd.Value = "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCurvedConnector2:
		_gbfd.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032"
	case ST_ShapeTypeCurvedConnector3:
		_gbfd.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033"
	case ST_ShapeTypeCurvedConnector4:
		_gbfd.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034"
	case ST_ShapeTypeCurvedConnector5:
		_gbfd.Value = "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035"
	case ST_ShapeTypeCallout1:
		_gbfd.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeCallout2:
		_gbfd.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeCallout3:
		_gbfd.Value = "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentCallout1:
		_gbfd.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeAccentCallout2:
		_gbfd.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeAccentCallout3:
		_gbfd.Value = "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeBorderCallout1:
		_gbfd.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031"
	case ST_ShapeTypeBorderCallout2:
		_gbfd.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032"
	case ST_ShapeTypeBorderCallout3:
		_gbfd.Value = "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033"
	case ST_ShapeTypeAccentBorderCallout1:
		_gbfd.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031"
	case ST_ShapeTypeAccentBorderCallout2:
		_gbfd.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032"
	case ST_ShapeTypeAccentBorderCallout3:
		_gbfd.Value = "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033"
	case ST_ShapeTypeWedgeRectCallout:
		_gbfd.Value = "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeRoundRectCallout:
		_gbfd.Value = "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeWedgeEllipseCallout:
		_gbfd.Value = "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloudCallout:
		_gbfd.Value = "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074"
	case ST_ShapeTypeCloud:
		_gbfd.Value = "\u0063\u006c\u006fu\u0064"
	case ST_ShapeTypeRibbon:
		_gbfd.Value = "\u0072\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeRibbon2:
		_gbfd.Value = "\u0072i\u0062\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeEllipseRibbon:
		_gbfd.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeEllipseRibbon2:
		_gbfd.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032"
	case ST_ShapeTypeLeftRightRibbon:
		_gbfd.Value = "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e"
	case ST_ShapeTypeVerticalScroll:
		_gbfd.Value = "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeHorizontalScroll:
		_gbfd.Value = "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c"
	case ST_ShapeTypeWave:
		_gbfd.Value = "\u0077\u0061\u0076\u0065"
	case ST_ShapeTypeDoubleWave:
		_gbfd.Value = "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065"
	case ST_ShapeTypePlus:
		_gbfd.Value = "\u0070\u006c\u0075\u0073"
	case ST_ShapeTypeFlowChartProcess:
		_gbfd.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartDecision:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartInputOutput:
		_gbfd.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074"
	case ST_ShapeTypeFlowChartPredefinedProcess:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073"
	case ST_ShapeTypeFlowChartInternalStorage:
		_gbfd.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartDocument:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074"
	case ST_ShapeTypeFlowChartMultidocument:
		_gbfd.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074"
	case ST_ShapeTypeFlowChartTerminator:
		_gbfd.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPreparation:
		_gbfd.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e"
	case ST_ShapeTypeFlowChartManualInput:
		_gbfd.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074"
	case ST_ShapeTypeFlowChartManualOperation:
		_gbfd.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartConnector:
		_gbfd.Value = "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072"
	case ST_ShapeTypeFlowChartPunchedCard:
		_gbfd.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064"
	case ST_ShapeTypeFlowChartPunchedTape:
		_gbfd.Value = "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065"
	case ST_ShapeTypeFlowChartSummingJunction:
		_gbfd.Value = "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeFlowChartOr:
		_gbfd.Value = "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072"
	case ST_ShapeTypeFlowChartCollate:
		_gbfd.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065"
	case ST_ShapeTypeFlowChartSort:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074"
	case ST_ShapeTypeFlowChartExtract:
		_gbfd.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074"
	case ST_ShapeTypeFlowChartMerge:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065"
	case ST_ShapeTypeFlowChartOfflineStorage:
		_gbfd.Value = "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065"
	case ST_ShapeTypeFlowChartOnlineStorage:
		_gbfd.Value = "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065"
	case ST_ShapeTypeFlowChartMagneticTape:
		_gbfd.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065"
	case ST_ShapeTypeFlowChartMagneticDisk:
		_gbfd.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b"
	case ST_ShapeTypeFlowChartMagneticDrum:
		_gbfd.Value = "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d"
	case ST_ShapeTypeFlowChartDisplay:
		_gbfd.Value = "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartDelay:
		_gbfd.Value = "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079"
	case ST_ShapeTypeFlowChartAlternateProcess:
		_gbfd.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s"
	case ST_ShapeTypeFlowChartOffpageConnector:
		_gbfd.Value = "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr"
	case ST_ShapeTypeActionButtonBlank:
		_gbfd.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b"
	case ST_ShapeTypeActionButtonHome:
		_gbfd.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065"
	case ST_ShapeTypeActionButtonHelp:
		_gbfd.Value = "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070"
	case ST_ShapeTypeActionButtonInformation:
		_gbfd.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e"
	case ST_ShapeTypeActionButtonForwardNext:
		_gbfd.Value = "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074"
	case ST_ShapeTypeActionButtonBackPrevious:
		_gbfd.Value = "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073"
	case ST_ShapeTypeActionButtonEnd:
		_gbfd.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064"
	case ST_ShapeTypeActionButtonBeginning:
		_gbfd.Value = "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067"
	case ST_ShapeTypeActionButtonReturn:
		_gbfd.Value = "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e"
	case ST_ShapeTypeActionButtonDocument:
		_gbfd.Value = "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074"
	case ST_ShapeTypeActionButtonSound:
		_gbfd.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064"
	case ST_ShapeTypeActionButtonMovie:
		_gbfd.Value = "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065"
	case ST_ShapeTypeGear6:
		_gbfd.Value = "\u0067\u0065\u0061r\u0036"
	case ST_ShapeTypeGear9:
		_gbfd.Value = "\u0067\u0065\u0061r\u0039"
	case ST_ShapeTypeFunnel:
		_gbfd.Value = "\u0066\u0075\u006e\u006e\u0065\u006c"
	case ST_ShapeTypeMathPlus:
		_gbfd.Value = "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073"
	case ST_ShapeTypeMathMinus:
		_gbfd.Value = "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s"
	case ST_ShapeTypeMathMultiply:
		_gbfd.Value = "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079"
	case ST_ShapeTypeMathDivide:
		_gbfd.Value = "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065"
	case ST_ShapeTypeMathEqual:
		_gbfd.Value = "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l"
	case ST_ShapeTypeMathNotEqual:
		_gbfd.Value = "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c"
	case ST_ShapeTypeCornerTabs:
		_gbfd.Value = "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeSquareTabs:
		_gbfd.Value = "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypePlaqueTabs:
		_gbfd.Value = "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073"
	case ST_ShapeTypeChartX:
		_gbfd.Value = "\u0063\u0068\u0061\u0072\u0074\u0058"
	case ST_ShapeTypeChartStar:
		_gbfd.Value = "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r"
	case ST_ShapeTypeChartPlus:
		_gbfd.Value = "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s"
	}
	return _gbfd, nil
}
func (_daceae ST_PitchFamily) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_afcd := _d.Attr{}
	_afcd.Name = name
	switch _daceae {
	case ST_PitchFamilyUnset:
		_afcd.Value = ""
	case ST_PitchFamily00:
		_afcd.Value = "\u0030\u0030"
	case ST_PitchFamily01:
		_afcd.Value = "\u0030\u0031"
	case ST_PitchFamily02:
		_afcd.Value = "\u0030\u0032"
	case ST_PitchFamily16:
		_afcd.Value = "\u0031\u0036"
	case ST_PitchFamily17:
		_afcd.Value = "\u0031\u0037"
	case ST_PitchFamily18:
		_afcd.Value = "\u0031\u0038"
	case ST_PitchFamily32:
		_afcd.Value = "\u0033\u0032"
	case ST_PitchFamily33:
		_afcd.Value = "\u0033\u0033"
	case ST_PitchFamily34:
		_afcd.Value = "\u0033\u0034"
	case ST_PitchFamily48:
		_afcd.Value = "\u0034\u0038"
	case ST_PitchFamily49:
		_afcd.Value = "\u0034\u0039"
	case ST_PitchFamily50:
		_afcd.Value = "\u0035\u0030"
	case ST_PitchFamily64:
		_afcd.Value = "\u0036\u0034"
	case ST_PitchFamily65:
		_afcd.Value = "\u0036\u0035"
	case ST_PitchFamily66:
		_afcd.Value = "\u0036\u0036"
	case ST_PitchFamily80:
		_afcd.Value = "\u0038\u0030"
	case ST_PitchFamily81:
		_afcd.Value = "\u0038\u0031"
	case ST_PitchFamily82:
		_afcd.Value = "\u0038\u0032"
	}
	return _afcd, nil
}
func (_efefa *CT_InnerShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfgdb := range start.Attr {
		if _dfgdb.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_ddcfe, _bcge := _cd.ParseInt(_dfgdb.Value, 10, 64)
			if _bcge != nil {
				return _bcge
			}
			_efefa.BlurRadAttr = &_ddcfe
			continue
		}
		if _dfgdb.Name.Local == "\u0064\u0069\u0073\u0074" {
			_dafc, _fdffe := _cd.ParseInt(_dfgdb.Value, 10, 64)
			if _fdffe != nil {
				return _fdffe
			}
			_efefa.DistAttr = &_dafc
			continue
		}
		if _dfgdb.Name.Local == "\u0064\u0069\u0072" {
			_ffgg, _gdeea := _cd.ParseInt(_dfgdb.Value, 10, 32)
			if _gdeea != nil {
				return _gdeea
			}
			_cfbcc := int32(_ffgg)
			_efefa.DirAttr = &_cfbcc
			continue
		}
	}
_eegbc:
	for {
		_eccf, _fcfd := d.Token()
		if _fcfd != nil {
			return _fcfd
		}
		switch _abdd := _eccf.(type) {
		case _d.StartElement:
			switch _abdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_efefa.ScrgbClr = NewCT_ScRgbColor()
				if _gcea := d.DecodeElement(_efefa.ScrgbClr, &_abdd); _gcea != nil {
					return _gcea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_efefa.SrgbClr = NewCT_SRgbColor()
				if _cgdgc := d.DecodeElement(_efefa.SrgbClr, &_abdd); _cgdgc != nil {
					return _cgdgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_efefa.HslClr = NewCT_HslColor()
				if _fegfb := d.DecodeElement(_efefa.HslClr, &_abdd); _fegfb != nil {
					return _fegfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_efefa.SysClr = NewCT_SystemColor()
				if _eeea := d.DecodeElement(_efefa.SysClr, &_abdd); _eeea != nil {
					return _eeea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_efefa.SchemeClr = NewCT_SchemeColor()
				if _feaag := d.DecodeElement(_efefa.SchemeClr, &_abdd); _feaag != nil {
					return _feaag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_efefa.PrstClr = NewCT_PresetColor()
				if _dbdgd := d.DecodeElement(_efefa.PrstClr, &_abdd); _dbdgd != nil {
					return _dbdgd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _abdd.Name)
				if _gbfb := d.Skip(); _gbfb != nil {
					return _gbfb
				}
			}
		case _d.EndElement:
			break _eegbc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableGrid and its children, prefixing error messages with path
func (_gcfab *CT_TableGrid) ValidateWithPath(path string) error {
	for _gfcfe, _efagf := range _gcfab.GridCol {
		if _bddge := _efagf.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0047\u0072\u0069\u0064\u0043\u006fl\u005b\u0025\u0064\u005d", path, _gfcfe)); _bddge != nil {
			return _bddge
		}
	}
	return nil
}

type ST_FontCollectionIndex byte
type CT_LightRig struct {
	RigAttr ST_LightRigType
	DirAttr ST_LightRigDirection
	Rot     *CT_SphereCoords
}

// ValidateWithPath validates the CT_TextBulletColorFollowText and its children, prefixing error messages with path
func (_bgdbe *CT_TextBulletColorFollowText) ValidateWithPath(path string) error { return nil }
func (_decb *CT_AudioFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cab := range start.Attr {
		if _cab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _cab.Name.Local == "\u006c\u0069\u006e\u006b" || _cab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _cab.Name.Local == "\u006c\u0069\u006e\u006b" {
			_cccf, _fcc := _cab.Value, error(nil)
			if _fcc != nil {
				return _fcc
			}
			_decb.LinkAttr = _cccf
			continue
		}
		if _cab.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_cfeb, _ccab := _cab.Value, error(nil)
			if _ccab != nil {
				return _ccab
			}
			_decb.ContentTypeAttr = &_cfeb
			continue
		}
	}
_cdfc:
	for {
		_eab, _fbfa := d.Token()
		if _fbfa != nil {
			return _fbfa
		}
		switch _fcde := _eab.(type) {
		case _d.StartElement:
			switch _fcde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_decb.ExtLst = NewCT_OfficeArtExtensionList()
				if _eaf := d.DecodeElement(_decb.ExtLst, &_fcde); _eaf != nil {
					return _eaf
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_A\u0075\u0064i\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _fcde.Name)
				if _bae := d.Skip(); _bae != nil {
					return _bae
				}
			}
		case _d.EndElement:
			break _cdfc
		case _d.CharData:
		}
	}
	return nil
}
func (_fgfgdc ST_OnOffStyleType) ValidateWithPath(path string) error {
	switch _fgfgdc {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgfgdc))
	}
	return nil
}
func (_cffbg ST_TextCapsType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cffbg.String(), start)
}

type CT_TableStyleCellStyle struct {
	TcBdr   *CT_TableCellBorderStyle
	Fill    *CT_FillProperties
	FillRef *CT_StyleMatrixReference
	Cell3D  *CT_Cell3D
}

// ValidateWithPath validates the CT_ColorMappingOverrideChoice and its children, prefixing error messages with path
func (_afea *CT_ColorMappingOverrideChoice) ValidateWithPath(path string) error {
	if _afea.MasterClrMapping != nil {
		if _fcca := _afea.MasterClrMapping.ValidateWithPath(path + "\u002f\u004d\u0061\u0073\u0074\u0065\u0072\u0043\u006c\u0072\u004d\u0061p\u0070\u0069\u006e\u0067"); _fcca != nil {
			return _fcca
		}
	}
	if _afea.OverrideClrMapping != nil {
		if _afaa := _afea.OverrideClrMapping.ValidateWithPath(path + "\u002f\u004f\u0076\u0065rr\u0069\u0064\u0065\u0043\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"); _afaa != nil {
			return _afaa
		}
	}
	return nil
}

const (
	ST_TextStrikeTypeUnset     ST_TextStrikeType = 0
	ST_TextStrikeTypeNoStrike  ST_TextStrikeType = 1
	ST_TextStrikeTypeSngStrike ST_TextStrikeType = 2
	ST_TextStrikeTypeDblStrike ST_TextStrikeType = 3
)

func NewCT_TableGrid() *CT_TableGrid { _dabdd := &CT_TableGrid{}; return _dabdd }
func NewCT_TextBlipBullet() *CT_TextBlipBullet {
	_egaeb := &CT_TextBlipBullet{}
	_egaeb.Blip = NewCT_Blip()
	return _egaeb
}
func (_gffbg *CT_PolarAdjustHandle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gffbg.GdRefRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0052"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.GdRefRAttr)})
	}
	if _gffbg.MinRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0052"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.MinRAttr)})
	}
	if _gffbg.MaxRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0052"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.MaxRAttr)})
	}
	if _gffbg.GdRefAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0064\u0052\u0065\u0066\u0041\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.GdRefAngAttr)})
	}
	if _gffbg.MinAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0069\u006e\u0041\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.MinAngAttr)})
	}
	if _gffbg.MaxAngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0078\u0041\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_gffbg.MaxAngAttr)})
	}
	e.EncodeToken(start)
	_cgffa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_gffbg.Pos, _cgffa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_BlendEffect struct {
	BlendAttr ST_BlendMode
	Cont      *CT_EffectContainer
}

// ValidateWithPath validates the CT_WholeE2oFormatting and its children, prefixing error messages with path
func (_ffdcfe *CT_WholeE2oFormatting) ValidateWithPath(path string) error {
	if _ffdcfe.Ln != nil {
		if _bfeadc := _ffdcfe.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bfeadc != nil {
			return _bfeadc
		}
	}
	if _ffdcfe.EffectLst != nil {
		if _dffcae := _ffdcfe.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _dffcae != nil {
			return _dffcae
		}
	}
	if _ffdcfe.EffectDag != nil {
		if _cgaac := _ffdcfe.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _cgaac != nil {
			return _cgaac
		}
	}
	return nil
}
func (_cdded *CT_TableCol) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _e.Sprintf("\u0025\u0076", _cdded.WAttr)})
	e.EncodeToken(start)
	if _cdded.ExtLst != nil {
		_fgeff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdded.ExtLst, _fgeff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_StyleMatrixReference() *CT_StyleMatrixReference {
	_cedaee := &CT_StyleMatrixReference{}
	return _cedaee
}

type CT_PathShadeProperties struct {
	PathAttr   ST_PathShadeType
	FillToRect *CT_RelativeRect
}

func (_acgda ST_TextWrappingType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_abbeec := _d.Attr{}
	_abbeec.Name = name
	switch _acgda {
	case ST_TextWrappingTypeUnset:
		_abbeec.Value = ""
	case ST_TextWrappingTypeNone:
		_abbeec.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextWrappingTypeSquare:
		_abbeec.Value = "\u0073\u0071\u0075\u0061\u0072\u0065"
	}
	return _abbeec, nil
}
func (_ddfcc *CT_TextBulletTypefaceFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_bagcf, _badcf := d.Token()
		if _badcf != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _badcf)
		}
		if _cbcfg, _afdadd := _bagcf.(_d.EndElement); _afdadd && _cbcfg.Name == start.Name {
			break
		}
	}
	return nil
}
func NewEG_LineFillProperties() *EG_LineFillProperties {
	_fcaaa := &EG_LineFillProperties{}
	return _fcaaa
}
func NewCT_FillOverlayEffect() *CT_FillOverlayEffect {
	_ddgd := &CT_FillOverlayEffect{}
	_ddgd.BlendAttr = ST_BlendMode(1)
	return _ddgd
}
func (_dcgdgg *CT_SolidColorFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dcgdgg.ScrgbClr != nil {
		_dgda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_dcgdgg.ScrgbClr, _dgda)
	}
	if _dcgdgg.SrgbClr != nil {
		_ebaba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_dcgdgg.SrgbClr, _ebaba)
	}
	if _dcgdgg.HslClr != nil {
		_febc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_dcgdgg.HslClr, _febc)
	}
	if _dcgdgg.SysClr != nil {
		_fgeab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_dcgdgg.SysClr, _fgeab)
	}
	if _dcgdgg.SchemeClr != nil {
		_caed := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_dcgdgg.SchemeClr, _caed)
	}
	if _dcgdgg.PrstClr != nil {
		_ccefb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_dcgdgg.PrstClr, _ccefb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Cell3D and its children
func (_dfaf *CT_Cell3D) Validate() error {
	return _dfaf.ValidateWithPath("\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D")
}
func NewCT_GvmlGraphicalObjectFrame() *CT_GvmlGraphicalObjectFrame {
	_cbdca := &CT_GvmlGraphicalObjectFrame{}
	_cbdca.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_cbdca.Graphic = NewGraphic()
	_cbdca.Xfrm = NewCT_Transform2D()
	return _cbdca
}
func NewCT_NoFillProperties() *CT_NoFillProperties { _becg := &CT_NoFillProperties{}; return _becg }

// ValidateWithPath validates the EG_TextBulletColor and its children, prefixing error messages with path
func (_aeddb *EG_TextBulletColor) ValidateWithPath(path string) error {
	if _aeddb.BuClrTx != nil {
		if _fefce := _aeddb.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _fefce != nil {
			return _fefce
		}
	}
	if _aeddb.BuClr != nil {
		if _dbgf := _aeddb.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _dbgf != nil {
			return _dbgf
		}
	}
	return nil
}
func NewCT_NonVisualPictureProperties() *CT_NonVisualPictureProperties {
	_ecefb := &CT_NonVisualPictureProperties{}
	return _ecefb
}
func (_beged *CT_GvmlUseShapeRectangle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_agac, _fbff := d.Token()
		if _fbff != nil {
			return _e.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0047vml\u0055se\u0053\u0068\u0061\u0070\u0065\u0052\u0065ct\u0061\u006e\u0067\u006c\u0065\u003a\u0020%\u0073", _fbff)
		}
		if _cafb, _effcf := _agac.(_d.EndElement); _effcf && _cafb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_AnimationDgmElement() *CT_AnimationDgmElement {
	_ccdc := &CT_AnimationDgmElement{}
	return _ccdc
}

type CT_RegularTextRun struct {
	RPr *CT_TextCharacterProperties
	T   string
}

func (_acbb *CT_TextBulletSizePoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_acbb.ValAttr = 100
	for _, _daaee := range start.Attr {
		if _daaee.Name.Local == "\u0076\u0061\u006c" {
			_agfge, _acgbbg := _cd.ParseInt(_daaee.Value, 10, 32)
			if _acgbbg != nil {
				return _acgbbg
			}
			_acbb.ValAttr = int32(_agfge)
			continue
		}
	}
	for {
		_acbfg, _ccbdg := d.Token()
		if _ccbdg != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0042u\u006cl\u0065t\u0053\u0069\u007a\u0065\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _ccbdg)
		}
		if _bgegg, _cbfeb := _acbfg.(_d.EndElement); _cbfeb && _bgegg.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_TextBulletTypefaceFollowText struct{}

// ValidateWithPath validates the EG_Effect and its children, prefixing error messages with path
func (_egeda *EG_Effect) ValidateWithPath(path string) error {
	if _egeda.Cont != nil {
		if _ecafd := _egeda.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _ecafd != nil {
			return _ecafd
		}
	}
	if _egeda.Effect != nil {
		if _ggeag := _egeda.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _ggeag != nil {
			return _ggeag
		}
	}
	if _egeda.AlphaBiLevel != nil {
		if _eeaba := _egeda.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _eeaba != nil {
			return _eeaba
		}
	}
	if _egeda.AlphaCeiling != nil {
		if _bgegfg := _egeda.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _bgegfg != nil {
			return _bgegfg
		}
	}
	if _egeda.AlphaFloor != nil {
		if _gcagab := _egeda.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _gcagab != nil {
			return _gcagab
		}
	}
	if _egeda.AlphaInv != nil {
		if _fgfbe := _egeda.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _fgfbe != nil {
			return _fgfbe
		}
	}
	if _egeda.AlphaMod != nil {
		if _cgbc := _egeda.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _cgbc != nil {
			return _cgbc
		}
	}
	if _egeda.AlphaModFix != nil {
		if _cdfd := _egeda.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _cdfd != nil {
			return _cdfd
		}
	}
	if _egeda.AlphaOutset != nil {
		if _dbccfdg := _egeda.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _dbccfdg != nil {
			return _dbccfdg
		}
	}
	if _egeda.AlphaRepl != nil {
		if _bfcdga := _egeda.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _bfcdga != nil {
			return _bfcdga
		}
	}
	if _egeda.BiLevel != nil {
		if _ddgbfg := _egeda.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _ddgbfg != nil {
			return _ddgbfg
		}
	}
	if _egeda.Blend != nil {
		if _dgecg := _egeda.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _dgecg != nil {
			return _dgecg
		}
	}
	if _egeda.Blur != nil {
		if _effae := _egeda.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _effae != nil {
			return _effae
		}
	}
	if _egeda.ClrChange != nil {
		if _cedgdf := _egeda.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _cedgdf != nil {
			return _cedgdf
		}
	}
	if _egeda.ClrRepl != nil {
		if _befeg := _egeda.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _befeg != nil {
			return _befeg
		}
	}
	if _egeda.Duotone != nil {
		if _ebbdgg := _egeda.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _ebbdgg != nil {
			return _ebbdgg
		}
	}
	if _egeda.Fill != nil {
		if _gdbae := _egeda.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _gdbae != nil {
			return _gdbae
		}
	}
	if _egeda.FillOverlay != nil {
		if _dagbbb := _egeda.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _dagbbb != nil {
			return _dagbbb
		}
	}
	if _egeda.Glow != nil {
		if _bbggf := _egeda.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _bbggf != nil {
			return _bbggf
		}
	}
	if _egeda.Grayscl != nil {
		if _ebefed := _egeda.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _ebefed != nil {
			return _ebefed
		}
	}
	if _egeda.Hsl != nil {
		if _eegdgc := _egeda.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _eegdgc != nil {
			return _eegdgc
		}
	}
	if _egeda.InnerShdw != nil {
		if _cfef := _egeda.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _cfef != nil {
			return _cfef
		}
	}
	if _egeda.Lum != nil {
		if _gaeged := _egeda.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _gaeged != nil {
			return _gaeged
		}
	}
	if _egeda.OuterShdw != nil {
		if _adcef := _egeda.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _adcef != nil {
			return _adcef
		}
	}
	if _egeda.PrstShdw != nil {
		if _fgdbdc := _egeda.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _fgdbdc != nil {
			return _fgdbdc
		}
	}
	if _egeda.Reflection != nil {
		if _cagba := _egeda.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _cagba != nil {
			return _cagba
		}
	}
	if _egeda.RelOff != nil {
		if _edegc := _egeda.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _edegc != nil {
			return _edegc
		}
	}
	if _egeda.SoftEdge != nil {
		if _eagbf := _egeda.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _eagbf != nil {
			return _eagbf
		}
	}
	if _egeda.Tint != nil {
		if _fgcbag := _egeda.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _fgcbag != nil {
			return _fgcbag
		}
	}
	if _egeda.Xfrm != nil {
		if _dbfce := _egeda.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _dbfce != nil {
			return _dbfce
		}
	}
	return nil
}
func (_efdc *CT_Blip) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _efdc.CstateAttr != ST_BlipCompressionUnset {
		_afbe, _gaae := _efdc.CstateAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0073\u0074\u0061\u0074\u0065"})
		if _gaae != nil {
			return _gaae
		}
		start.Attr = append(start.Attr, _afbe)
	}
	if _efdc.EmbedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_efdc.EmbedAttr)})
	}
	if _efdc.LinkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _e.Sprintf("\u0025\u0076", *_efdc.LinkAttr)})
	}
	e.EncodeToken(start)
	if _efdc.Choice != nil {
		for _, _bgcd := range _efdc.Choice {
			_bgcd.MarshalXML(e, _d.StartElement{})
		}
	}
	if _efdc.ExtLst != nil {
		_gfeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_efdc.ExtLst, _gfeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_RelativeOffsetEffect and its children
func (_ebaec *CT_RelativeOffsetEffect) Validate() error {
	return _ebaec.ValidateWithPath("\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

type CT_AdjPoint2D struct {
	XAttr ST_AdjCoordinate
	YAttr ST_AdjCoordinate
}

// ValidateWithPath validates the CT_DashStop and its children, prefixing error messages with path
func (_ffdg *CT_DashStop) ValidateWithPath(path string) error {
	if _eeadg := _ffdg.DAttr.ValidateWithPath(path + "\u002f\u0044\u0041\u0074\u0074\u0072"); _eeadg != nil {
		return _eeadg
	}
	if _gbdg := _ffdg.SpAttr.ValidateWithPath(path + "\u002fS\u0070\u0041\u0074\u0074\u0072"); _gbdg != nil {
		return _gbdg
	}
	return nil
}

const (
	ST_AnimationBuildTypeUnset     ST_AnimationBuildType = 0
	ST_AnimationBuildTypeAllAtOnce ST_AnimationBuildType = 1
)

func (_dgeeb *CT_Ratio) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dbgdf := range start.Attr {
		if _dbgdf.Name.Local == "\u006e" {
			_fgeggd, _dafab := _cd.ParseInt(_dbgdf.Value, 10, 64)
			if _dafab != nil {
				return _dafab
			}
			_dgeeb.NAttr = _fgeggd
			continue
		}
		if _dbgdf.Name.Local == "\u0064" {
			_cbbcd, _fbcdf := _cd.ParseInt(_dbgdf.Value, 10, 64)
			if _fbcdf != nil {
				return _fbcdf
			}
			_dgeeb.DAttr = _cbbcd
			continue
		}
	}
	for {
		_eefdg, _adbb := d.Token()
		if _adbb != nil {
			return _e.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fR\u0061\u0074\u0069\u006f: \u0025\u0073", _adbb)
		}
		if _aagg, _afdb := _eefdg.(_d.EndElement); _afdb && _aagg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aaggd *ST_TextShapeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aaggd = 0
	case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
		*_aaggd = 1
	case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
		*_aaggd = 2
	case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
		*_aaggd = 3
	case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_aaggd = 4
	case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
		*_aaggd = 5
	case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
		*_aaggd = 6
	case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
		*_aaggd = 7
	case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
		*_aaggd = 8
	case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
		*_aaggd = 9
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
		*_aaggd = 10
	case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
		*_aaggd = 11
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
		*_aaggd = 12
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
		*_aaggd = 13
	case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
		*_aaggd = 14
	case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
		*_aaggd = 15
	case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
		*_aaggd = 16
	case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
		*_aaggd = 17
	case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
		*_aaggd = 18
	case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
		*_aaggd = 19
	case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
		*_aaggd = 20
	case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
		*_aaggd = 21
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
		*_aaggd = 22
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
		*_aaggd = 23
	case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
		*_aaggd = 24
	case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
		*_aaggd = 25
	case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
		*_aaggd = 26
	case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
		*_aaggd = 27
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_aaggd = 28
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
		*_aaggd = 29
	case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_aaggd = 30
	case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
		*_aaggd = 31
	case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
		*_aaggd = 32
	case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
		*_aaggd = 33
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
		*_aaggd = 34
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
		*_aaggd = 35
	case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
		*_aaggd = 36
	case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_aaggd = 37
	case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
		*_aaggd = 38
	case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
		*_aaggd = 39
	case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
		*_aaggd = 40
	case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
		*_aaggd = 41
	}
	return nil
}

type CT_GeomRect struct {
	LAttr ST_AdjCoordinate
	TAttr ST_AdjCoordinate
	RAttr ST_AdjCoordinate
	BAttr ST_AdjCoordinate
}

// Validate validates the CT_ColorReplaceEffect and its children
func (_aafc *CT_ColorReplaceEffect) Validate() error {
	return _aafc.ValidateWithPath("C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_fagfg *CT_TextParagraphProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fagfg.MarLAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _e.Sprintf("\u0025\u0076", *_fagfg.MarLAttr)})
	}
	if _fagfg.MarRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _e.Sprintf("\u0025\u0076", *_fagfg.MarRAttr)})
	}
	if _fagfg.LvlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0076\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_fagfg.LvlAttr)})
	}
	if _fagfg.IndentAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0064\u0065\u006e\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_fagfg.IndentAttr)})
	}
	if _fagfg.AlgnAttr != ST_TextAlignTypeUnset {
		_ebfbd, _cbfeba := _fagfg.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _cbfeba != nil {
			return _cbfeba
		}
		start.Attr = append(start.Attr, _ebfbd)
	}
	if _fagfg.DefTabSzAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0066\u0054\u0061\u0062\u0053\u007a"}, Value: _e.Sprintf("\u0025\u0076", *_fagfg.DefTabSzAttr)})
	}
	if _fagfg.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fagfg.RtlAttr))})
	}
	if _fagfg.EaLnBrkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065a\u004c\u006e\u0042\u0072\u006b"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fagfg.EaLnBrkAttr))})
	}
	if _fagfg.FontAlgnAttr != ST_TextFontAlignTypeUnset {
		_ccbb, _fcaef := _fagfg.FontAlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006f\u006e\u0074\u0041\u006c\u0067\u006e"})
		if _fcaef != nil {
			return _fcaef
		}
		start.Attr = append(start.Attr, _ccbb)
	}
	if _fagfg.LatinLnBrkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u0074\u0069\u006e\u004c\u006e\u0042\u0072\u006b"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fagfg.LatinLnBrkAttr))})
	}
	if _fagfg.HangingPunctAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0061\u006eg\u0069\u006e\u0067\u0050\u0075\u006e\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fagfg.HangingPunctAttr))})
	}
	e.EncodeToken(start)
	if _fagfg.LnSpc != nil {
		_adgab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0053\u0070\u0063"}}
		e.EncodeElement(_fagfg.LnSpc, _adgab)
	}
	if _fagfg.SpcBef != nil {
		_gffbgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0042\u0065\u0066"}}
		e.EncodeElement(_fagfg.SpcBef, _gffbgd)
	}
	if _fagfg.SpcAft != nil {
		_aaaed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0041\u0066\u0074"}}
		e.EncodeElement(_fagfg.SpcAft, _aaaed)
	}
	if _fagfg.BuClrTx != nil {
		_eccba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_fagfg.BuClrTx, _eccba)
	}
	if _fagfg.BuClr != nil {
		_dcdcf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_fagfg.BuClr, _dcdcf)
	}
	if _fagfg.BuSzTx != nil {
		_fggbfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_fagfg.BuSzTx, _fggbfe)
	}
	if _fagfg.BuSzPct != nil {
		_gdgaa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_fagfg.BuSzPct, _gdgaa)
	}
	if _fagfg.BuSzPts != nil {
		_dgdca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_fagfg.BuSzPts, _dgdca)
	}
	if _fagfg.BuFontTx != nil {
		_aagdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_fagfg.BuFontTx, _aagdb)
	}
	if _fagfg.BuFont != nil {
		_aafff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_fagfg.BuFont, _aafff)
	}
	if _fagfg.BuNone != nil {
		_cfcggf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_fagfg.BuNone, _cfcggf)
	}
	if _fagfg.BuAutoNum != nil {
		_cdbcd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_fagfg.BuAutoNum, _cdbcd)
	}
	if _fagfg.BuChar != nil {
		_agdaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_fagfg.BuChar, _agdaa)
	}
	if _fagfg.BuBlip != nil {
		_ebgcec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_fagfg.BuBlip, _ebgcec)
	}
	if _fagfg.TabLst != nil {
		_aeddd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0061\u0062\u004c\u0073\u0074"}}
		e.EncodeElement(_fagfg.TabLst, _aeddd)
	}
	if _fagfg.DefRPr != nil {
		_afbed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0052\u0050\u0072"}}
		e.EncodeElement(_fagfg.DefRPr, _afbed)
	}
	if _fagfg.ExtLst != nil {
		_bbbgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fagfg.ExtLst, _bbbgg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_GraphicalObjectFrameLocking and its children, prefixing error messages with path
func (_aedga *CT_GraphicalObjectFrameLocking) ValidateWithPath(path string) error {
	if _aedga.ExtLst != nil {
		if _ffccc := _aedga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ffccc != nil {
			return _ffccc
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlUseShapeRectangle and its children, prefixing error messages with path
func (_eeaa *CT_GvmlUseShapeRectangle) ValidateWithPath(path string) error { return nil }

type CT_PresetTextShape struct {
	PrstAttr ST_TextShapeType
	AvLst    *CT_GeomGuideList
}

func (_dbccfd *CT_ConnectorLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _edgfc := range start.Attr {
		if _edgfc.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_fafc, _bedac := _cd.ParseBool(_edgfc.Value)
			if _bedac != nil {
				return _bedac
			}
			_dbccfd.NoGrpAttr = &_fafc
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_acdd, _fede := _cd.ParseBool(_edgfc.Value)
			if _fede != nil {
				return _fede
			}
			_dbccfd.NoSelectAttr = &_acdd
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_bdde, _faacf := _cd.ParseBool(_edgfc.Value)
			if _faacf != nil {
				return _faacf
			}
			_dbccfd.NoRotAttr = &_bdde
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_aadg, _bcgbe := _cd.ParseBool(_edgfc.Value)
			if _bcgbe != nil {
				return _bcgbe
			}
			_dbccfd.NoChangeAspectAttr = &_aadg
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_fgeg, _ggbd := _cd.ParseBool(_edgfc.Value)
			if _ggbd != nil {
				return _ggbd
			}
			_dbccfd.NoMoveAttr = &_fgeg
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gacb, _ddga := _cd.ParseBool(_edgfc.Value)
			if _ddga != nil {
				return _ddga
			}
			_dbccfd.NoResizeAttr = &_gacb
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_caab, _gaafd := _cd.ParseBool(_edgfc.Value)
			if _gaafd != nil {
				return _gaafd
			}
			_dbccfd.NoEditPointsAttr = &_caab
			continue
		}
		if _edgfc.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ecede, _bfdgf := _cd.ParseBool(_edgfc.Value)
			if _bfdgf != nil {
				return _bfdgf
			}
			_dbccfd.NoAdjustHandlesAttr = &_ecede
			continue
		}
		if _edgfc.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_dbcg, _bcbg := _cd.ParseBool(_edgfc.Value)
			if _bcbg != nil {
				return _bcbg
			}
			_dbccfd.NoChangeArrowheadsAttr = &_dbcg
			continue
		}
		if _edgfc.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_gdgc, _fdff := _cd.ParseBool(_edgfc.Value)
			if _fdff != nil {
				return _fdff
			}
			_dbccfd.NoChangeShapeTypeAttr = &_gdgc
			continue
		}
	}
_ebbb:
	for {
		_adgd, _gfed := d.Token()
		if _gfed != nil {
			return _gfed
		}
		switch _dcega := _adgd.(type) {
		case _d.StartElement:
			switch _dcega.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbccfd.ExtLst = NewCT_OfficeArtExtensionList()
				if _edfeg := d.DecodeElement(_dbccfd.ExtLst, &_dcega); _edfeg != nil {
					return _edfeg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074or\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _dcega.Name)
				if _fggc := d.Skip(); _fggc != nil {
					return _fggc
				}
			}
		case _d.EndElement:
			break _ebbb
		case _d.CharData:
		}
	}
	return nil
}
func (_gcagbg ST_TextFontAlignType) Validate() error { return _gcagbg.ValidateWithPath("") }
func NewCT_AdjustHandleList() *CT_AdjustHandleList   { _bcc := &CT_AdjustHandleList{}; return _bcc }
func NewCT_Path2DMoveTo() *CT_Path2DMoveTo {
	_ebcbf := &CT_Path2DMoveTo{}
	_ebcbf.Pt = NewCT_AdjPoint2D()
	return _ebcbf
}
func (_ffdgf ST_SchemeColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ffdgf.String(), start)
}

// Validate validates the CT_TableStyleCellStyle and its children
func (_gcfddc *CT_TableStyleCellStyle) Validate() error {
	return _gcfddc.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065")
}
func (_cfcbf *EG_TextGeometry) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bddfg:
	for {
		_bgefg, _adgce := d.Token()
		if _adgce != nil {
			return _adgce
		}
		switch _cbgabe := _bgefg.(type) {
		case _d.StartElement:
			switch _cbgabe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}:
				_cfcbf.CustGeom = NewCT_CustomGeometry2D()
				if _dedb := d.DecodeElement(_cfcbf.CustGeom, &_cbgabe); _dedb != nil {
					return _dedb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_cfcbf.PrstTxWarp = NewCT_PresetTextShape()
				if _cfgbbg := d.DecodeElement(_cfcbf.PrstTxWarp, &_cbgabe); _cfgbbg != nil {
					return _cfgbbg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078t\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0020\u0025\u0076", _cbgabe.Name)
				if _deddf := d.Skip(); _deddf != nil {
					return _deddf
				}
			}
		case _d.EndElement:
			break _bddfg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ConnectionSiteList and its children
func (_cfaff *CT_ConnectionSiteList) Validate() error {
	return _cfaff.ValidateWithPath("C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074")
}
func (_agcgfg ST_TextVerticalType) String() string {
	switch _agcgfg {
	case 0:
		return ""
	case 1:
		return "\u0068\u006f\u0072\u007a"
	case 2:
		return "\u0076\u0065\u0072\u0074"
	case 3:
		return "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case 4:
		return "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case 5:
		return "\u0065\u0061\u0056\u0065\u0072\u0074"
	case 6:
		return "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case 7:
		return "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return ""
}

type CT_ColorMappingOverrideChoice struct {
	MasterClrMapping   *CT_EmptyElement
	OverrideClrMapping *CT_ColorMapping
}

func (_cfff *CT_GeomGuideList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gcba:
	for {
		_ceba, _defg := d.Token()
		if _defg != nil {
			return _defg
		}
		switch _ebgd := _ceba.(type) {
		case _d.StartElement:
			switch _ebgd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0064"}:
				_ddaa := NewCT_GeomGuide()
				if _fdcgc := d.DecodeElement(_ddaa, &_ebgd); _fdcgc != nil {
					return _fdcgc
				}
				_cfff.Gd = append(_cfff.Gd, _ddaa)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _ebgd.Name)
				if _ffed := d.Skip(); _ffed != nil {
					return _ffed
				}
			}
		case _d.EndElement:
			break _gcba
		case _d.CharData:
		}
	}
	return nil
}
func (_ccedcf ST_TextAnchoringType) ValidateWithPath(path string) error {
	switch _ccedcf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccedcf))
	}
	return nil
}
func (_agafe ST_TextVertOverflowType) Validate() error { return _agafe.ValidateWithPath("") }
func ParseUnionST_Coordinate(s string) (ST_Coordinate, error) {
	_aeabfd := ST_Coordinate{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_aeabfd.ST_UniversalMeasure = &s
	} else {
		_daba, _efebeg := _cd.ParseInt(s, 10, 64)
		if _efebeg != nil {
			return _aeabfd, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _efebeg)
		}
		_aeabfd.ST_CoordinateUnqualified = &_daba
	}
	return _aeabfd, nil
}

// Validate validates the CT_XYAdjustHandle and its children
func (_fafdea *CT_XYAdjustHandle) Validate() error {
	return _fafdea.ValidateWithPath("\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065")
}

type EG_ThemeableFontStyles struct {
	Font    *CT_FontCollection
	FontRef *CT_FontReference
}

func (_bebff *ST_EffectContainerType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bebff = 0
	case "\u0073\u0069\u0062":
		*_bebff = 1
	case "\u0074\u0072\u0065\u0065":
		*_bebff = 2
	}
	return nil
}
func NewCT_PositiveSize2D() *CT_PositiveSize2D {
	_dcag := &CT_PositiveSize2D{}
	_dcag.CxAttr = 0
	_dcag.CyAttr = 0
	return _dcag
}
func (_aefef *CT_ThemeableLineStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfcce:
	for {
		_gbff, _bafbd := d.Token()
		if _bafbd != nil {
			return _bafbd
		}
		switch _dgbgc := _gbff.(type) {
		case _d.StartElement:
			switch _dgbgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_aefef.Ln = NewCT_LineProperties()
				if _effdb := d.DecodeElement(_aefef.Ln, &_dgbgc); _effdb != nil {
					return _effdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				_aefef.LnRef = NewCT_StyleMatrixReference()
				if _edbba := d.DecodeElement(_aefef.LnRef, &_dgbgc); _edbba != nil {
					return _edbba
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u004c\u0069\u006e\u0065\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _dgbgc.Name)
				if _bcfcdd := d.Skip(); _bcfcdd != nil {
					return _bcfcdd
				}
			}
		case _d.EndElement:
			break _gfcce
		case _d.CharData:
		}
	}
	return nil
}
func (_cbefg *ST_PresetLineDashVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcggb, _febe := d.Token()
	if _febe != nil {
		return _febe
	}
	if _aeabbc, _abcbf := _fcggb.(_d.EndElement); _abcbf && _aeabbc.Name == start.Name {
		*_cbefg = 1
		return nil
	}
	if _dfadf, _gcbae := _fcggb.(_d.CharData); !_gcbae {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcggb)
	} else {
		switch string(_dfadf) {
		case "":
			*_cbefg = 0
		case "\u0073\u006f\u006ci\u0064":
			*_cbefg = 1
		case "\u0064\u006f\u0074":
			*_cbefg = 2
		case "\u0064\u0061\u0073\u0068":
			*_cbefg = 3
		case "\u006c\u0067\u0044\u0061\u0073\u0068":
			*_cbefg = 4
		case "\u0064a\u0073\u0068\u0044\u006f\u0074":
			*_cbefg = 5
		case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
			*_cbefg = 6
		case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cbefg = 7
		case "\u0073y\u0073\u0044\u0061\u0073\u0068":
			*_cbefg = 8
		case "\u0073\u0079\u0073\u0044\u006f\u0074":
			*_cbefg = 9
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
			*_cbefg = 10
		case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
			*_cbefg = 11
		}
	}
	_fcggb, _febe = d.Token()
	if _febe != nil {
		return _febe
	}
	if _dggga, _egced := _fcggb.(_d.EndElement); _egced && _dggga.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcggb)
}
func (_gbgaga ST_EffectContainerType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gbgaga.String(), start)
}
func (_bbg *CT_GammaTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dgdfcg ST_LineEndLength) Validate() error { return _dgdfcg.ValidateWithPath("") }

const (
	ST_BlendModeUnset   ST_BlendMode = 0
	ST_BlendModeOver    ST_BlendMode = 1
	ST_BlendModeMult    ST_BlendMode = 2
	ST_BlendModeScreen  ST_BlendMode = 3
	ST_BlendModeDarken  ST_BlendMode = 4
	ST_BlendModeLighten ST_BlendMode = 5
)

func (_eecef *ST_BlackWhiteMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eecef = 0
	case "\u0063\u006c\u0072":
		*_eecef = 1
	case "\u0061\u0075\u0074\u006f":
		*_eecef = 2
	case "\u0067\u0072\u0061\u0079":
		*_eecef = 3
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_eecef = 4
	case "\u0069n\u0076\u0047\u0072\u0061\u0079":
		*_eecef = 5
	case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
		*_eecef = 6
	case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
		*_eecef = 7
	case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
		*_eecef = 8
	case "\u0062\u006c\u0061c\u006b":
		*_eecef = 9
	case "\u0077\u0068\u0069t\u0065":
		*_eecef = 10
	case "\u0068\u0069\u0064\u0064\u0065\u006e":
		*_eecef = 11
	}
	return nil
}

// Validate validates the CT_FontCollection and its children
func (_gcfag *CT_FontCollection) Validate() error {
	return _gcfag.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e")
}
func (_feed *CT_TileInfoProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffbga := range start.Attr {
		if _ffbga.Name.Local == "\u0074\u0078" {
			_bbceb, _fabc := ParseUnionST_Coordinate(_ffbga.Value)
			if _fabc != nil {
				return _fabc
			}
			_feed.TxAttr = &_bbceb
			continue
		}
		if _ffbga.Name.Local == "\u0074\u0079" {
			_aebae, _afgedc := ParseUnionST_Coordinate(_ffbga.Value)
			if _afgedc != nil {
				return _afgedc
			}
			_feed.TyAttr = &_aebae
			continue
		}
		if _ffbga.Name.Local == "\u0073\u0078" {
			_bcaad, _caede := ParseUnionST_Percentage(_ffbga.Value)
			if _caede != nil {
				return _caede
			}
			_feed.SxAttr = &_bcaad
			continue
		}
		if _ffbga.Name.Local == "\u0073\u0079" {
			_dbdfd, _gbeca := ParseUnionST_Percentage(_ffbga.Value)
			if _gbeca != nil {
				return _gbeca
			}
			_feed.SyAttr = &_dbdfd
			continue
		}
		if _ffbga.Name.Local == "\u0066\u006c\u0069\u0070" {
			_feed.FlipAttr.UnmarshalXMLAttr(_ffbga)
			continue
		}
		if _ffbga.Name.Local == "\u0061\u006c\u0067\u006e" {
			_feed.AlgnAttr.UnmarshalXMLAttr(_ffbga)
			continue
		}
	}
	for {
		_gbadg, _ddecf := d.Token()
		if _ddecf != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0069\u006c\u0065\u0049\u006e\u0066\u006f\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s\u003a\u0020\u0025\u0073", _ddecf)
		}
		if _eeegf, _gbfgd := _gbadg.(_d.EndElement); _gbfgd && _eeegf.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextLineBreak and its children, prefixing error messages with path
func (_efacd *CT_TextLineBreak) ValidateWithPath(path string) error {
	if _efacd.RPr != nil {
		if _bgge := _efacd.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _bgge != nil {
			return _bgge
		}
	}
	return nil
}
func (_bgg *CT_Blip) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agaf := range start.Attr {
		if _agaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agaf.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_egff, _ebbd := _agaf.Value, error(nil)
			if _ebbd != nil {
				return _ebbd
			}
			_bgg.EmbedAttr = &_egff
			continue
		}
		if _agaf.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _agaf.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dbe, _fbcc := _agaf.Value, error(nil)
			if _fbcc != nil {
				return _fbcc
			}
			_bgg.LinkAttr = &_dbe
			continue
		}
		if _agaf.Name.Local == "\u0063\u0073\u0074\u0061\u0074\u0065" {
			_bgg.CstateAttr.UnmarshalXMLAttr(_agaf)
			continue
		}
	}
_bec:
	for {
		_cadb, _eca := d.Token()
		if _eca != nil {
			return _eca
		}
		switch _abca := _cadb.(type) {
		case _d.StartElement:
			switch _abca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_dgad := NewCT_BlipChoice()
				if _ebd := d.DecodeElement(&_dgad.AlphaBiLevel, &_abca); _ebd != nil {
					return _ebd
				}
				_bgg.Choice = append(_bgg.Choice, _dgad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_decg := NewCT_BlipChoice()
				if _egbf := d.DecodeElement(&_decg.AlphaCeiling, &_abca); _egbf != nil {
					return _egbf
				}
				_bgg.Choice = append(_bgg.Choice, _decg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_bga := NewCT_BlipChoice()
				if _bgdd := d.DecodeElement(&_bga.AlphaFloor, &_abca); _bgdd != nil {
					return _bgdd
				}
				_bgg.Choice = append(_bgg.Choice, _bga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_cebg := NewCT_BlipChoice()
				if _dgfe := d.DecodeElement(&_cebg.AlphaInv, &_abca); _dgfe != nil {
					return _dgfe
				}
				_bgg.Choice = append(_bgg.Choice, _cebg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_gaddg := NewCT_BlipChoice()
				if _fgff := d.DecodeElement(&_gaddg.AlphaMod, &_abca); _fgff != nil {
					return _fgff
				}
				_bgg.Choice = append(_bgg.Choice, _gaddg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_abea := NewCT_BlipChoice()
				if _dcdag := d.DecodeElement(&_abea.AlphaModFix, &_abca); _dcdag != nil {
					return _dcdag
				}
				_bgg.Choice = append(_bgg.Choice, _abea)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_bdfd := NewCT_BlipChoice()
				if _acee := d.DecodeElement(&_bdfd.AlphaRepl, &_abca); _acee != nil {
					return _acee
				}
				_bgg.Choice = append(_bgg.Choice, _bdfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_cgag := NewCT_BlipChoice()
				if _dcca := d.DecodeElement(&_cgag.BiLevel, &_abca); _dcca != nil {
					return _dcca
				}
				_bgg.Choice = append(_bgg.Choice, _cgag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_geb := NewCT_BlipChoice()
				if _cdd := d.DecodeElement(&_geb.Blur, &_abca); _cdd != nil {
					return _cdd
				}
				_bgg.Choice = append(_bgg.Choice, _geb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_gcedb := NewCT_BlipChoice()
				if _ggea := d.DecodeElement(&_gcedb.ClrChange, &_abca); _ggea != nil {
					return _ggea
				}
				_bgg.Choice = append(_bgg.Choice, _gcedb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_befc := NewCT_BlipChoice()
				if _ffbe := d.DecodeElement(&_befc.ClrRepl, &_abca); _ffbe != nil {
					return _ffbe
				}
				_bgg.Choice = append(_bgg.Choice, _befc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_faagc := NewCT_BlipChoice()
				if _ccag := d.DecodeElement(&_faagc.Duotone, &_abca); _ccag != nil {
					return _ccag
				}
				_bgg.Choice = append(_bgg.Choice, _faagc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_cadf := NewCT_BlipChoice()
				if _faff := d.DecodeElement(&_cadf.FillOverlay, &_abca); _faff != nil {
					return _faff
				}
				_bgg.Choice = append(_bgg.Choice, _cadf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_ffbb := NewCT_BlipChoice()
				if _bdfbe := d.DecodeElement(&_ffbb.Grayscl, &_abca); _bdfbe != nil {
					return _bdfbe
				}
				_bgg.Choice = append(_bgg.Choice, _ffbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_cabd := NewCT_BlipChoice()
				if _gaee := d.DecodeElement(&_cabd.Hsl, &_abca); _gaee != nil {
					return _gaee
				}
				_bgg.Choice = append(_bgg.Choice, _cabd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_eacg := NewCT_BlipChoice()
				if _egbg := d.DecodeElement(&_eacg.Lum, &_abca); _egbg != nil {
					return _egbg
				}
				_bgg.Choice = append(_bgg.Choice, _eacg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fgee := NewCT_BlipChoice()
				if _eagb := d.DecodeElement(&_fgee.Tint, &_abca); _eagb != nil {
					return _eagb
				}
				_bgg.Choice = append(_bgg.Choice, _fgee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ffce := d.DecodeElement(_bgg.ExtLst, &_abca); _ffce != nil {
					return _ffce
				}
			default:
				_ff.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0042\u006c\u0069\u0070\u0020\u0025\u0076", _abca.Name)
				if _abb := d.Skip(); _abb != nil {
					return _abb
				}
			}
		case _d.EndElement:
			break _bec
		case _d.CharData:
		}
	}
	return nil
}

type ST_TextCapsType byte

func (_gbfc *CT_PresetColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbfc.ValAttr = ST_PresetColorVal(1)
	for _, _caecb := range start.Attr {
		if _caecb.Name.Local == "\u0076\u0061\u006c" {
			_gbfc.ValAttr.UnmarshalXMLAttr(_caecb)
			continue
		}
	}
_eedb:
	for {
		_geefea, _cfgbb := d.Token()
		if _cfgbb != nil {
			return _cfgbb
		}
		switch _caddf := _geefea.(type) {
		case _d.StartElement:
			switch _caddf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aada := NewEG_ColorTransform()
				_aada.Tint = NewCT_PositiveFixedPercentage()
				if _efda := d.DecodeElement(_aada.Tint, &_caddf); _efda != nil {
					return _efda
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _aada)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_eegac := NewEG_ColorTransform()
				_eegac.Shade = NewCT_PositiveFixedPercentage()
				if _bgfdc := d.DecodeElement(_eegac.Shade, &_caddf); _bgfdc != nil {
					return _bgfdc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _eegac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_acgbb := NewEG_ColorTransform()
				_acgbb.Comp = NewCT_ComplementTransform()
				if _bcfcc := d.DecodeElement(_acgbb.Comp, &_caddf); _bcfcc != nil {
					return _bcfcc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _acgbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_gfagg := NewEG_ColorTransform()
				_gfagg.Inv = NewCT_InverseTransform()
				if _gebac := d.DecodeElement(_gfagg.Inv, &_caddf); _gebac != nil {
					return _gebac
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _gfagg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aefa := NewEG_ColorTransform()
				_aefa.Gray = NewCT_GrayscaleTransform()
				if _fbddcc := d.DecodeElement(_aefa.Gray, &_caddf); _fbddcc != nil {
					return _fbddcc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _aefa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bdbdd := NewEG_ColorTransform()
				_bdbdd.Alpha = NewCT_PositiveFixedPercentage()
				if _bdbg := d.DecodeElement(_bdbdd.Alpha, &_caddf); _bdbg != nil {
					return _bdbg
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _bdbdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_gegf := NewEG_ColorTransform()
				_gegf.AlphaOff = NewCT_FixedPercentage()
				if _fcda := d.DecodeElement(_gegf.AlphaOff, &_caddf); _fcda != nil {
					return _fcda
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _gegf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_fedeg := NewEG_ColorTransform()
				_fedeg.AlphaMod = NewCT_PositivePercentage()
				if _dcbfd := d.DecodeElement(_fedeg.AlphaMod, &_caddf); _dcbfd != nil {
					return _dcbfd
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _fedeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_dacgga := NewEG_ColorTransform()
				_dacgga.Hue = NewCT_PositiveFixedAngle()
				if _dcdea := d.DecodeElement(_dacgga.Hue, &_caddf); _dcdea != nil {
					return _dcdea
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _dacgga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_fgbd := NewEG_ColorTransform()
				_fgbd.HueOff = NewCT_Angle()
				if _fcfc := d.DecodeElement(_fgbd.HueOff, &_caddf); _fcfc != nil {
					return _fcfc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _fgbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_cefb := NewEG_ColorTransform()
				_cefb.HueMod = NewCT_PositivePercentage()
				if _bfgc := d.DecodeElement(_cefb.HueMod, &_caddf); _bfgc != nil {
					return _bfgc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _cefb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_bddbf := NewEG_ColorTransform()
				_bddbf.Sat = NewCT_Percentage()
				if _feddg := d.DecodeElement(_bddbf.Sat, &_caddf); _feddg != nil {
					return _feddg
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _bddbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_ddfeb := NewEG_ColorTransform()
				_ddfeb.SatOff = NewCT_Percentage()
				if _ecegc := d.DecodeElement(_ddfeb.SatOff, &_caddf); _ecegc != nil {
					return _ecegc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _ddfeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_effcg := NewEG_ColorTransform()
				_effcg.SatMod = NewCT_Percentage()
				if _gbcea := d.DecodeElement(_effcg.SatMod, &_caddf); _gbcea != nil {
					return _gbcea
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _effcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_cbbab := NewEG_ColorTransform()
				_cbbab.Lum = NewCT_Percentage()
				if _egdag := d.DecodeElement(_cbbab.Lum, &_caddf); _egdag != nil {
					return _egdag
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _cbbab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_bccaa := NewEG_ColorTransform()
				_bccaa.LumOff = NewCT_Percentage()
				if _deacc := d.DecodeElement(_bccaa.LumOff, &_caddf); _deacc != nil {
					return _deacc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _bccaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_geegf := NewEG_ColorTransform()
				_geegf.LumMod = NewCT_Percentage()
				if _dbccd := d.DecodeElement(_geegf.LumMod, &_caddf); _dbccd != nil {
					return _dbccd
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _geegf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bgeddb := NewEG_ColorTransform()
				_bgeddb.Red = NewCT_Percentage()
				if _eefg := d.DecodeElement(_bgeddb.Red, &_caddf); _eefg != nil {
					return _eefg
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _bgeddb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_gbdec := NewEG_ColorTransform()
				_gbdec.RedOff = NewCT_Percentage()
				if _ebacb := d.DecodeElement(_gbdec.RedOff, &_caddf); _ebacb != nil {
					return _ebacb
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _gbdec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_fbaba := NewEG_ColorTransform()
				_fbaba.RedMod = NewCT_Percentage()
				if _cgfdc := d.DecodeElement(_fbaba.RedMod, &_caddf); _cgfdc != nil {
					return _cgfdc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _fbaba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gacgb := NewEG_ColorTransform()
				_gacgb.Green = NewCT_Percentage()
				if _aacfe := d.DecodeElement(_gacgb.Green, &_caddf); _aacfe != nil {
					return _aacfe
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _gacgb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_abeeff := NewEG_ColorTransform()
				_abeeff.GreenOff = NewCT_Percentage()
				if _gegc := d.DecodeElement(_abeeff.GreenOff, &_caddf); _gegc != nil {
					return _gegc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _abeeff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fbced := NewEG_ColorTransform()
				_fbced.GreenMod = NewCT_Percentage()
				if _bdcbc := d.DecodeElement(_fbced.GreenMod, &_caddf); _bdcbc != nil {
					return _bdcbc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _fbced)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_bafde := NewEG_ColorTransform()
				_bafde.Blue = NewCT_Percentage()
				if _eecde := d.DecodeElement(_bafde.Blue, &_caddf); _eecde != nil {
					return _eecde
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _bafde)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_febg := NewEG_ColorTransform()
				_febg.BlueOff = NewCT_Percentage()
				if _dagfgd := d.DecodeElement(_febg.BlueOff, &_caddf); _dagfgd != nil {
					return _dagfgd
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _febg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_ecaac := NewEG_ColorTransform()
				_ecaac.BlueMod = NewCT_Percentage()
				if _aceffc := d.DecodeElement(_ecaac.BlueMod, &_caddf); _aceffc != nil {
					return _aceffc
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _ecaac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_efcea := NewEG_ColorTransform()
				_efcea.Gamma = NewCT_GammaTransform()
				if _faceg := d.DecodeElement(_efcea.Gamma, &_caddf); _faceg != nil {
					return _faceg
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _efcea)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_afcgg := NewEG_ColorTransform()
				_afcgg.InvGamma = NewCT_InverseGammaTransform()
				if _dbfcg := d.DecodeElement(_afcgg.InvGamma, &_caddf); _dbfcg != nil {
					return _dbfcg
				}
				_gbfc.EG_ColorTransform = append(_gbfc.EG_ColorTransform, _afcgg)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0043o\u006co\u0072\u0020\u0025\u0076", _caddf.Name)
				if _gcbb := d.Skip(); _gcbb != nil {
					return _gcbb
				}
			}
		case _d.EndElement:
			break _eedb
		case _d.CharData:
		}
	}
	return nil
}
func (_gebab *CT_RelativeOffsetEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ffbge := range start.Attr {
		if _ffbge.Name.Local == "\u0074\u0078" {
			_ccdbg, _eebcf := ParseUnionST_Percentage(_ffbge.Value)
			if _eebcf != nil {
				return _eebcf
			}
			_gebab.TxAttr = &_ccdbg
			continue
		}
		if _ffbge.Name.Local == "\u0074\u0079" {
			_edgb, _adcd := ParseUnionST_Percentage(_ffbge.Value)
			if _adcd != nil {
				return _adcd
			}
			_gebab.TyAttr = &_edgb
			continue
		}
	}
	for {
		_bbgad, _ebeg := d.Token()
		if _ebeg != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006ca\u0074\u0069\u0076\u0065\u004f\u0066\u0066s\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020%\u0073", _ebeg)
		}
		if _ddgba, _dacdc := _bbgad.(_d.EndElement); _dacdc && _ddgba.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bbcge *CT_Point2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _e.Sprintf("\u0025\u0076", _bbcge.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _e.Sprintf("\u0025\u0076", _bbcge.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgfba ST_PathShadeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cgfba.String(), start)
}

type CT_NonVisualContentPartProperties struct {
	IsCommentAttr *bool
	CpLocks       *CT_ContentPartLocking
	ExtLst        *CT_OfficeArtExtensionList
}

func (_dcfff *EG_EffectProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcfff.EffectLst != nil {
		_feaaa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_dcfff.EffectLst, _feaaa)
	}
	if _dcfff.EffectDag != nil {
		_fcdda := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_dcfff.EffectDag, _fcdda)
	}
	return nil
}
func (_eebcgf *CT_TableCellProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecege := range start.Attr {
		if _ecege.Name.Local == "\u006d\u0061\u0072\u0052" {
			_eaacd, _afbdf := ParseUnionST_Coordinate32(_ecege.Value)
			if _afbdf != nil {
				return _afbdf
			}
			_eebcgf.MarRAttr = &_eaacd
			continue
		}
		if _ecege.Name.Local == "\u006d\u0061\u0072\u0042" {
			_acfff, _ddbec := ParseUnionST_Coordinate32(_ecege.Value)
			if _ddbec != nil {
				return _ddbec
			}
			_eebcgf.MarBAttr = &_acfff
			continue
		}
		if _ecege.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_eebcgf.AnchorAttr.UnmarshalXMLAttr(_ecege)
			continue
		}
		if _ecege.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_eebcgf.HorzOverflowAttr.UnmarshalXMLAttr(_ecege)
			continue
		}
		if _ecege.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_dgccf, _fdeeg := _cd.ParseBool(_ecege.Value)
			if _fdeeg != nil {
				return _fdeeg
			}
			_eebcgf.AnchorCtrAttr = &_dgccf
			continue
		}
		if _ecege.Name.Local == "\u0076\u0065\u0072\u0074" {
			_eebcgf.VertAttr.UnmarshalXMLAttr(_ecege)
			continue
		}
		if _ecege.Name.Local == "\u006d\u0061\u0072\u004c" {
			_bagaf, _fceda := ParseUnionST_Coordinate32(_ecege.Value)
			if _fceda != nil {
				return _fceda
			}
			_eebcgf.MarLAttr = &_bagaf
			continue
		}
		if _ecege.Name.Local == "\u006d\u0061\u0072\u0054" {
			_cdagc, _gbgeb := ParseUnionST_Coordinate32(_ecege.Value)
			if _gbgeb != nil {
				return _gbgeb
			}
			_eebcgf.MarTAttr = &_cdagc
			continue
		}
	}
_dgbbd:
	for {
		_dbcded, _gfggg := d.Token()
		if _gfggg != nil {
			return _gfggg
		}
		switch _bddbc := _dbcded.(type) {
		case _d.StartElement:
			switch _bddbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u004c"}:
				_eebcgf.LnL = NewCT_LineProperties()
				if _fceeb := d.DecodeElement(_eebcgf.LnL, &_bddbc); _fceeb != nil {
					return _fceeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052"}:
				_eebcgf.LnR = NewCT_LineProperties()
				if _ecce := d.DecodeElement(_eebcgf.LnR, &_bddbc); _ecce != nil {
					return _ecce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054"}:
				_eebcgf.LnT = NewCT_LineProperties()
				if _afbcg := d.DecodeElement(_eebcgf.LnT, &_bddbc); _afbcg != nil {
					return _afbcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042"}:
				_eebcgf.LnB = NewCT_LineProperties()
				if _faefe := d.DecodeElement(_eebcgf.LnB, &_bddbc); _faefe != nil {
					return _faefe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}:
				_eebcgf.LnTlToBr = NewCT_LineProperties()
				if _eeada := d.DecodeElement(_eebcgf.LnTlToBr, &_bddbc); _eeada != nil {
					return _eeada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}:
				_eebcgf.LnBlToTr = NewCT_LineProperties()
				if _bgafc := d.DecodeElement(_eebcgf.LnBlToTr, &_bddbc); _bgafc != nil {
					return _bgafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_eebcgf.Cell3D = NewCT_Cell3D()
				if _ggbg := d.DecodeElement(_eebcgf.Cell3D, &_bddbc); _ggbg != nil {
					return _ggbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_eebcgf.NoFill = NewCT_NoFillProperties()
				if _deeba := d.DecodeElement(_eebcgf.NoFill, &_bddbc); _deeba != nil {
					return _deeba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_eebcgf.SolidFill = NewCT_SolidColorFillProperties()
				if _ecfdg := d.DecodeElement(_eebcgf.SolidFill, &_bddbc); _ecfdg != nil {
					return _ecfdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_eebcgf.GradFill = NewCT_GradientFillProperties()
				if _bacad := d.DecodeElement(_eebcgf.GradFill, &_bddbc); _bacad != nil {
					return _bacad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_eebcgf.BlipFill = NewCT_BlipFillProperties()
				if _dgcgdf := d.DecodeElement(_eebcgf.BlipFill, &_bddbc); _dgcgdf != nil {
					return _dgcgdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_eebcgf.PattFill = NewCT_PatternFillProperties()
				if _abdag := d.DecodeElement(_eebcgf.PattFill, &_bddbc); _abdag != nil {
					return _abdag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_eebcgf.GrpFill = NewCT_GroupFillProperties()
				if _gfgcc := d.DecodeElement(_eebcgf.GrpFill, &_bddbc); _gfgcc != nil {
					return _gfgcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0065\u0072\u0073"}:
				_eebcgf.Headers = NewCT_Headers()
				if _dgbbe := d.DecodeElement(_eebcgf.Headers, &_bddbc); _dgbbe != nil {
					return _dgbbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eebcgf.ExtLst = NewCT_OfficeArtExtensionList()
				if _bccgf := d.DecodeElement(_eebcgf.ExtLst, &_bddbc); _bccgf != nil {
					return _bccgf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bddbc.Name)
				if _ffffa := d.Skip(); _ffffa != nil {
					return _ffffa
				}
			}
		case _d.EndElement:
			break _dgbbd
		case _d.CharData:
		}
	}
	return nil
}
func (_egbec *CT_StretchInfoProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_beccg:
	for {
		_ecbaa, _acdgc := d.Token()
		if _acdgc != nil {
			return _acdgc
		}
		switch _faacae := _ecbaa.(type) {
		case _d.StartElement:
			switch _faacae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}:
				_egbec.FillRect = NewCT_RelativeRect()
				if _eaega := d.DecodeElement(_egbec.FillRect, &_faacae); _eaega != nil {
					return _eaega
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066\u006f\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _faacae.Name)
				if _ggacg := d.Skip(); _ggacg != nil {
					return _ggacg
				}
			}
		case _d.EndElement:
			break _beccg
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_PathFillModeUnset       ST_PathFillMode = 0
	ST_PathFillModeNone        ST_PathFillMode = 1
	ST_PathFillModeNorm        ST_PathFillMode = 2
	ST_PathFillModeLighten     ST_PathFillMode = 3
	ST_PathFillModeLightenLess ST_PathFillMode = 4
	ST_PathFillModeDarken      ST_PathFillMode = 5
	ST_PathFillModeDarkenLess  ST_PathFillMode = 6
)

func NewCT_PresetTextShape() *CT_PresetTextShape {
	_cccd := &CT_PresetTextShape{}
	_cccd.PrstAttr = ST_TextShapeType(1)
	return _cccd
}

type CT_OfficeStyleSheet struct {
	NameAttr          *string
	ThemeElements     *CT_BaseStyles
	ObjectDefaults    *CT_ObjectStyleDefaults
	ExtraClrSchemeLst *CT_ColorSchemeList
	CustClrLst        *CT_CustomColorList
	ExtLst            *CT_OfficeArtExtensionList
}

func (_agbgc *ST_Coordinate) ValidateWithPath(path string) error {
	_ggbeg := []string{}
	if _agbgc.ST_CoordinateUnqualified != nil {
		_ggbeg = append(_ggbeg, "\u0053T\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065U\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _agbgc.ST_UniversalMeasure != nil {
		_ggbeg = append(_ggbeg, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_ggbeg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ggbeg)
	}
	return nil
}

// Validate validates the CT_GraphicalObjectData and its children
func (_abgd *CT_GraphicalObjectData) Validate() error {
	return _abgd.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061")
}
func (_ccfed *EG_TextBulletColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ccfed.BuClrTx != nil {
		_bdcbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072\u0054x"}}
		e.EncodeElement(_ccfed.BuClrTx, _bdcbg)
	}
	if _ccfed.BuClr != nil {
		_ccebb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0043\u006c\u0072"}}
		e.EncodeElement(_ccfed.BuClr, _ccebb)
	}
	return nil
}
func (_ggega ST_PresetPatternVal) Validate() error { return _ggega.ValidateWithPath("") }

// ValidateWithPath validates the CT_GraphicalObject and its children, prefixing error messages with path
func (_bbbca *CT_GraphicalObject) ValidateWithPath(path string) error {
	if _gefd := _bbbca.GraphicData.ValidateWithPath(path + "\u002f\u0047\u0072a\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"); _gefd != nil {
		return _gefd
	}
	return nil
}

type CT_ShapeLocking struct {
	NoTextEditAttr         *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_bdfdg *CT_GradientFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _egegc := range start.Attr {
		if _egegc.Name.Local == "\u0066\u006c\u0069\u0070" {
			_bdfdg.FlipAttr.UnmarshalXMLAttr(_egegc)
			continue
		}
		if _egegc.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_fggg, _dgbe := _cd.ParseBool(_egegc.Value)
			if _dgbe != nil {
				return _dgbe
			}
			_bdfdg.RotWithShapeAttr = &_fggg
			continue
		}
	}
_dbbda:
	for {
		_defda, _dgabf := d.Token()
		if _dgabf != nil {
			return _dgabf
		}
		switch _ebefe := _defda.(type) {
		case _d.StartElement:
			switch _ebefe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073\u004cs\u0074"}:
				_bdfdg.GsLst = NewCT_GradientStopList()
				if _gabff := d.DecodeElement(_bdfdg.GsLst, &_ebefe); _gabff != nil {
					return _gabff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_bdfdg.Lin = NewCT_LinearShadeProperties()
				if _ffdgb := d.DecodeElement(_bdfdg.Lin, &_ebefe); _ffdgb != nil {
					return _ffdgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_bdfdg.Path = NewCT_PathShadeProperties()
				if _baga := d.DecodeElement(_bdfdg.Path, &_ebefe); _baga != nil {
					return _baga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065\u0052\u0065\u0063\u0074"}:
				_bdfdg.TileRect = NewCT_RelativeRect()
				if _bcdg := d.DecodeElement(_bdfdg.TileRect, &_ebefe); _bcdg != nil {
					return _bcdg
				}
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006e\u0074F\u0069l\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074i\u0065s\u0020\u0025v", _ebefe.Name)
				if _gbae := d.Skip(); _gbae != nil {
					return _gbae
				}
			}
		case _d.EndElement:
			break _dbbda
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BlurEffect and its children, prefixing error messages with path
func (_ebdc *CT_BlurEffect) ValidateWithPath(path string) error {
	if _ebdc.RadAttr != nil {
		if *_ebdc.RadAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_ebdc.RadAttr)
		}
		if *_ebdc.RadAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, *_ebdc.RadAttr)
		}
	}
	return nil
}

type CT_SupplementalFont struct {
	ScriptAttr   string
	TypefaceAttr string
}

func (_decag *CT_ConnectionSiteList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gdfd:
	for {
		_deac, _ffgbc := d.Token()
		if _ffgbc != nil {
			return _ffgbc
		}
		switch _eggfb := _deac.(type) {
		case _d.StartElement:
			switch _eggfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e"}:
				_gcbc := NewCT_ConnectionSite()
				if _gbga := d.DecodeElement(_gcbc, &_eggfb); _gbga != nil {
					return _gbga
				}
				_decag.Cxn = append(_decag.Cxn, _gcbc)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e\u0053\u0069\u0074\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _eggfb.Name)
				if _fadae := d.Skip(); _fadae != nil {
					return _fadae
				}
			}
		case _d.EndElement:
			break _gdfd
		case _d.CharData:
		}
	}
	return nil
}
func (_dbdfb *CT_WholeE2oFormatting) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dbabcf:
	for {
		_bccbe, _dfgfbbe := d.Token()
		if _dfgfbbe != nil {
			return _dfgfbbe
		}
		switch _debfba := _bccbe.(type) {
		case _d.StartElement:
			switch _debfba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_dbdfb.Ln = NewCT_LineProperties()
				if _eafdfd := d.DecodeElement(_dbdfb.Ln, &_debfba); _eafdfd != nil {
					return _eafdfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dbdfb.EffectLst = NewCT_EffectList()
				if _gfbfc := d.DecodeElement(_dbdfb.EffectLst, &_debfba); _gfbfc != nil {
					return _gfbfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dbdfb.EffectDag = NewCT_EffectContainer()
				if _fgbgb := d.DecodeElement(_dbdfb.EffectDag, &_debfba); _fgbgb != nil {
					return _fgbgb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0057\u0068\u006f\u006c\u0065\u0045\u0032\u006f\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067\u0020\u0025\u0076", _debfba.Name)
				if _gabec := d.Skip(); _gabec != nil {
					return _gabec
				}
			}
		case _d.EndElement:
			break _dbabcf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeArtExtensionList and its children, prefixing error messages with path
func (_ggab *CT_OfficeArtExtensionList) ValidateWithPath(path string) error {
	for _fdbee, _cffgd := range _ggab.Ext {
		if _gacd := _cffgd.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0045\u0078\u0074\u005b\u0025\u0064\u005d", path, _fdbee)); _gacd != nil {
			return _gacd
		}
	}
	return nil
}

type CT_LineEndProperties struct {
	TypeAttr ST_LineEndType
	WAttr    ST_LineEndWidth
	LenAttr  ST_LineEndLength
}

// Validate validates the CT_EmptyElement and its children
func (_bbeca *CT_EmptyElement) Validate() error {
	return _bbeca.ValidateWithPath("\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

// Validate validates the CT_Color and its children
func (_aadfc *CT_Color) Validate() error {
	return _aadfc.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_AlphaModulateEffect and its children
func (_fbga *CT_AlphaModulateEffect) Validate() error {
	return _fbga.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074")
}
func (_dbecb *CT_TableStyleCellStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dbecb.TcBdr != nil {
		_efegdc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0063\u0042\u0064\u0072"}}
		e.EncodeElement(_dbecb.TcBdr, _efegdc)
	}
	if _dbecb.Fill != nil {
		_daeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_dbecb.Fill, _daeg)
	}
	if _dbecb.FillRef != nil {
		_cbffb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_dbecb.FillRef, _cbffb)
	}
	if _dbecb.Cell3D != nil {
		_bddda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_dbecb.Cell3D, _bddda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_AlphaOutsetEffect() *CT_AlphaOutsetEffect { _deg := &CT_AlphaOutsetEffect{}; return _deg }

// Validate validates the CT_Backdrop and its children
func (_cfda *CT_Backdrop) Validate() error {
	return _cfda.ValidateWithPath("C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070")
}

type Any interface {
	MarshalXML(_abcga *_d.Encoder, _dfedb _d.StartElement) error
	UnmarshalXML(_dcaaf *_d.Decoder, _efad _d.StartElement) error
}

func (_dcgd *CT_DuotoneEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _fbde := range _dcgd.EG_ColorChoice {
		_fbde.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TextSpacingPercent struct {
	ValAttr ST_TextSpacingPercentOrPercentString
}

func NewCT_ReflectionEffect() *CT_ReflectionEffect { _bbfga := &CT_ReflectionEffect{}; return _bbfga }
func (_fgfcgb ST_BlackWhiteMode) String() string {
	switch _fgfcgb {
	case 0:
		return ""
	case 1:
		return "\u0063\u006c\u0072"
	case 2:
		return "\u0061\u0075\u0074\u006f"
	case 3:
		return "\u0067\u0072\u0061\u0079"
	case 4:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 5:
		return "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case 6:
		return "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case 7:
		return "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case 8:
		return "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case 9:
		return "\u0062\u006c\u0061c\u006b"
	case 10:
		return "\u0077\u0068\u0069t\u0065"
	case 11:
		return "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return ""
}

// Validate validates the CT_TextTabStop and its children
func (_dbgbd *CT_TextTabStop) Validate() error {
	return _dbgbd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070")
}

// Validate validates the CT_OfficeStyleSheet and its children
func (_fbggdg *CT_OfficeStyleSheet) Validate() error {
	return _fbggdg.ValidateWithPath("\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074")
}
func NewCT_TableCellProperties() *CT_TableCellProperties {
	_bageb := &CT_TableCellProperties{}
	return _bageb
}

// Validate validates the CT_PresetShadowEffect and its children
func (_aaba *CT_PresetShadowEffect) Validate() error {
	return _aaba.ValidateWithPath("C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_daafg *ST_AdjCoordinate) ValidateWithPath(path string) error {
	_eeadfg := []string{}
	if _daafg.ST_Coordinate != nil {
		if _egdef := _daafg.ST_Coordinate.ValidateWithPath(path + "\u002f\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065"); _egdef != nil {
			return _egdef
		}
		_eeadfg = append(_eeadfg, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065")
	}
	if _daafg.ST_GeomGuideName != nil {
		_eeadfg = append(_eeadfg, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_eeadfg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _eeadfg)
	}
	return nil
}
func (_bcace ST_AnimationBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bcace.String(), start)
}

// ValidateWithPath validates the CT_TableStyleCellStyle and its children, prefixing error messages with path
func (_decbb *CT_TableStyleCellStyle) ValidateWithPath(path string) error {
	if _decbb.TcBdr != nil {
		if _afbgb := _decbb.TcBdr.ValidateWithPath(path + "\u002f\u0054\u0063\u0042\u0064\u0072"); _afbgb != nil {
			return _afbgb
		}
	}
	if _decbb.Fill != nil {
		if _cefd := _decbb.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _cefd != nil {
			return _cefd
		}
	}
	if _decbb.FillRef != nil {
		if _ggffb := _decbb.FillRef.ValidateWithPath(path + "\u002f\u0046\u0069\u006c\u006c\u0052\u0065\u0066"); _ggffb != nil {
			return _ggffb
		}
	}
	if _decbb.Cell3D != nil {
		if _ebdef := _decbb.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _ebdef != nil {
			return _ebdef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GeomGuideList and its children, prefixing error messages with path
func (_ceee *CT_GeomGuideList) ValidateWithPath(path string) error {
	for _aeecg, _baee := range _ceee.Gd {
		if _fbddc := _baee.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0047\u0064\u005b\u0025\u0064]", path, _aeecg)); _fbddc != nil {
			return _fbddc
		}
	}
	return nil
}
func (_bgcce *CT_TableCol) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddagdb := range start.Attr {
		if _ddagdb.Name.Local == "\u0077" {
			_defbg, _aaee := ParseUnionST_Coordinate(_ddagdb.Value)
			if _aaee != nil {
				return _aaee
			}
			_bgcce.WAttr = _defbg
			continue
		}
	}
_fbbdc:
	for {
		_ccfcf, _abdbb := d.Token()
		if _abdbb != nil {
			return _abdbb
		}
		switch _ccgd := _ccfcf.(type) {
		case _d.StartElement:
			switch _ccgd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgcce.ExtLst = NewCT_OfficeArtExtensionList()
				if _eedg := d.DecodeElement(_bgcce.ExtLst, &_ccgd); _eedg != nil {
					return _eedg
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c\u0020\u0025\u0076", _ccgd.Name)
				if _aacde := d.Skip(); _aacde != nil {
					return _aacde
				}
			}
		case _d.EndElement:
			break _fbbdc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlPicture and its children, prefixing error messages with path
func (_adeb *CT_GvmlPicture) ValidateWithPath(path string) error {
	if _aaaff := _adeb.NvPicPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0050\u0069\u0063\u0050\u0072"); _aaaff != nil {
		return _aaaff
	}
	if _gbfae := _adeb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gbfae != nil {
		return _gbfae
	}
	if _ecdbg := _adeb.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _ecdbg != nil {
		return _ecdbg
	}
	if _adeb.Style != nil {
		if _ffedd := _adeb.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ffedd != nil {
			return _ffedd
		}
	}
	if _adeb.ExtLst != nil {
		if _accaf := _adeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _accaf != nil {
			return _accaf
		}
	}
	return nil
}
func (_dcfba *ST_EffectContainerType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffdbb, _cceec := d.Token()
	if _cceec != nil {
		return _cceec
	}
	if _bgbcg, _gcbgdf := _ffdbb.(_d.EndElement); _gcbgdf && _bgbcg.Name == start.Name {
		*_dcfba = 1
		return nil
	}
	if _beafg, _debdgb := _ffdbb.(_d.CharData); !_debdgb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffdbb)
	} else {
		switch string(_beafg) {
		case "":
			*_dcfba = 0
		case "\u0073\u0069\u0062":
			*_dcfba = 1
		case "\u0074\u0072\u0065\u0065":
			*_dcfba = 2
		}
	}
	_ffdbb, _cceec = d.Token()
	if _cceec != nil {
		return _cceec
	}
	if _daaae, _agaaf := _ffdbb.(_d.EndElement); _agaaf && _daaae.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffdbb)
}
func NewCT_AlphaModulateFixedEffect() *CT_AlphaModulateFixedEffect {
	_bee := &CT_AlphaModulateFixedEffect{}
	return _bee
}
func (_fbba *CT_Cell3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbba.PrstMaterialAttr != ST_PresetMaterialTypeUnset {
		_faae, _badc := _fbba.PrstMaterialAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c"})
		if _badc != nil {
			return _badc
		}
		start.Attr = append(start.Attr, _faae)
	}
	e.EncodeToken(start)
	_eeae := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
	e.EncodeElement(_fbba.Bevel, _eeae)
	if _fbba.LightRig != nil {
		_abge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
		e.EncodeElement(_fbba.LightRig, _abge)
	}
	if _fbba.ExtLst != nil {
		_bebg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbba.ExtLst, _bebg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gbecfa ST_TextVerticalType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gbecfa.String(), start)
}
func (_dfacd ST_LineEndLength) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_facbd := _d.Attr{}
	_facbd.Name = name
	switch _dfacd {
	case ST_LineEndLengthUnset:
		_facbd.Value = ""
	case ST_LineEndLengthSm:
		_facbd.Value = "\u0073\u006d"
	case ST_LineEndLengthMed:
		_facbd.Value = "\u006d\u0065\u0064"
	case ST_LineEndLengthLg:
		_facbd.Value = "\u006c\u0067"
	}
	return _facbd, nil
}

// ValidateWithPath validates the CT_GvmlConnector and its children, prefixing error messages with path
func (_dgcge *CT_GvmlConnector) ValidateWithPath(path string) error {
	if _dcegaa := _dgcge.NvCxnSpPr.ValidateWithPath(path + "\u002f\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _dcegaa != nil {
		return _dcegaa
	}
	if _dage := _dgcge.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _dage != nil {
		return _dage
	}
	if _dgcge.Style != nil {
		if _adfg := _dgcge.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _adfg != nil {
			return _adfg
		}
	}
	if _dgcge.ExtLst != nil {
		if _dfaa := _dgcge.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfaa != nil {
			return _dfaa
		}
	}
	return nil
}

const (
	ST_TextWrappingTypeUnset  ST_TextWrappingType = 0
	ST_TextWrappingTypeNone   ST_TextWrappingType = 1
	ST_TextWrappingTypeSquare ST_TextWrappingType = 2
)

func (_cdefac *ST_PresetShadowVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cdefac = 0
	case "\u0073\u0068\u0064w\u0031":
		*_cdefac = 1
	case "\u0073\u0068\u0064w\u0032":
		*_cdefac = 2
	case "\u0073\u0068\u0064w\u0033":
		*_cdefac = 3
	case "\u0073\u0068\u0064w\u0034":
		*_cdefac = 4
	case "\u0073\u0068\u0064w\u0035":
		*_cdefac = 5
	case "\u0073\u0068\u0064w\u0036":
		*_cdefac = 6
	case "\u0073\u0068\u0064w\u0037":
		*_cdefac = 7
	case "\u0073\u0068\u0064w\u0038":
		*_cdefac = 8
	case "\u0073\u0068\u0064w\u0039":
		*_cdefac = 9
	case "\u0073\u0068\u0064\u0077\u0031\u0030":
		*_cdefac = 10
	case "\u0073\u0068\u0064\u0077\u0031\u0031":
		*_cdefac = 11
	case "\u0073\u0068\u0064\u0077\u0031\u0032":
		*_cdefac = 12
	case "\u0073\u0068\u0064\u0077\u0031\u0033":
		*_cdefac = 13
	case "\u0073\u0068\u0064\u0077\u0031\u0034":
		*_cdefac = 14
	case "\u0073\u0068\u0064\u0077\u0031\u0035":
		*_cdefac = 15
	case "\u0073\u0068\u0064\u0077\u0031\u0036":
		*_cdefac = 16
	case "\u0073\u0068\u0064\u0077\u0031\u0037":
		*_cdefac = 17
	case "\u0073\u0068\u0064\u0077\u0031\u0038":
		*_cdefac = 18
	case "\u0073\u0068\u0064\u0077\u0031\u0039":
		*_cdefac = 19
	case "\u0073\u0068\u0064\u0077\u0032\u0030":
		*_cdefac = 20
	}
	return nil
}
func NewEG_TextAutofit() *EG_TextAutofit { _cafc := &EG_TextAutofit{}; return _cafc }
func (_bcgfg *CT_TextSpacingPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _bcgfg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgefc *CT_TextSpacingPoint) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cgefc.ValAttr = 0
	for _, _eeeee := range start.Attr {
		if _eeeee.Name.Local == "\u0076\u0061\u006c" {
			_fefed, _egcad := _cd.ParseInt(_eeeee.Value, 10, 32)
			if _egcad != nil {
				return _egcad
			}
			_cgefc.ValAttr = int32(_fefed)
			continue
		}
	}
	for {
		_cadad, _fbdda := d.Token()
		if _fbdda != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053p\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074\u003a\u0020\u0025\u0073", _fbdda)
		}
		if _ccdbbg, _afgce := _cadad.(_d.EndElement); _afgce && _ccdbbg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gcgd *ST_PitchFamily) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_deccg, _fceaf := d.Token()
	if _fceaf != nil {
		return _fceaf
	}
	if _egeef, _bbagb := _deccg.(_d.EndElement); _bbagb && _egeef.Name == start.Name {
		*_gcgd = 1
		return nil
	}
	if _dfeec, _fcgeg := _deccg.(_d.CharData); !_fcgeg {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _deccg)
	} else {
		switch string(_dfeec) {
		case "":
			*_gcgd = 0
		case "\u0030\u0030":
			*_gcgd = 1
		case "\u0030\u0031":
			*_gcgd = 2
		case "\u0030\u0032":
			*_gcgd = 3
		case "\u0031\u0036":
			*_gcgd = 4
		case "\u0031\u0037":
			*_gcgd = 5
		case "\u0031\u0038":
			*_gcgd = 6
		case "\u0033\u0032":
			*_gcgd = 7
		case "\u0033\u0033":
			*_gcgd = 8
		case "\u0033\u0034":
			*_gcgd = 9
		case "\u0034\u0038":
			*_gcgd = 10
		case "\u0034\u0039":
			*_gcgd = 11
		case "\u0035\u0030":
			*_gcgd = 12
		case "\u0036\u0034":
			*_gcgd = 13
		case "\u0036\u0035":
			*_gcgd = 14
		case "\u0036\u0036":
			*_gcgd = 15
		case "\u0038\u0030":
			*_gcgd = 16
		case "\u0038\u0031":
			*_gcgd = 17
		case "\u0038\u0032":
			*_gcgd = 18
		}
	}
	_deccg, _fceaf = d.Token()
	if _fceaf != nil {
		return _fceaf
	}
	if _dbdfeg, _cacbe := _deccg.(_d.EndElement); _cacbe && _dbdfeg.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _deccg)
}
func NewCT_ColorMappingOverride() *CT_ColorMappingOverride {
	_baac := &CT_ColorMappingOverride{}
	_baac.Choice = NewCT_ColorMappingOverrideChoice()
	return _baac
}
func (_dgaf *CT_FontReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgaf.IdxAttr = ST_FontCollectionIndex(1)
	for _, _gfdaa := range start.Attr {
		if _gfdaa.Name.Local == "\u0069\u0064\u0078" {
			_dgaf.IdxAttr.UnmarshalXMLAttr(_gfdaa)
			continue
		}
	}
_bdcg:
	for {
		_cbeda, _fddbg := d.Token()
		if _fddbg != nil {
			return _fddbg
		}
		switch _eege := _cbeda.(type) {
		case _d.StartElement:
			switch _eege.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dgaf.ScrgbClr = NewCT_ScRgbColor()
				if _ggga := d.DecodeElement(_dgaf.ScrgbClr, &_eege); _ggga != nil {
					return _ggga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dgaf.SrgbClr = NewCT_SRgbColor()
				if _eede := d.DecodeElement(_dgaf.SrgbClr, &_eege); _eede != nil {
					return _eede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dgaf.HslClr = NewCT_HslColor()
				if _ddbee := d.DecodeElement(_dgaf.HslClr, &_eege); _ddbee != nil {
					return _ddbee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dgaf.SysClr = NewCT_SystemColor()
				if _ddceg := d.DecodeElement(_dgaf.SysClr, &_eege); _ddceg != nil {
					return _ddceg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dgaf.SchemeClr = NewCT_SchemeColor()
				if _ggde := d.DecodeElement(_dgaf.SchemeClr, &_eege); _ggde != nil {
					return _ggde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dgaf.PrstClr = NewCT_PresetColor()
				if _fdadb := d.DecodeElement(_dgaf.PrstClr, &_eege); _fdadb != nil {
					return _fdadb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0025v", _eege.Name)
				if _dbbac := d.Skip(); _dbbac != nil {
					return _dbbac
				}
			}
		case _d.EndElement:
			break _bdcg
		case _d.CharData:
		}
	}
	return nil
}
func (_cggbfb ST_SystemColorVal) ValidateWithPath(path string) error {
	switch _cggbfb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cggbfb))
	}
	return nil
}
func (_fdgaf *CT_StyleMatrix) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdgaf.FillStyleLst = NewCT_FillStyleList()
	_fdgaf.LnStyleLst = NewCT_LineStyleList()
	_fdgaf.EffectStyleLst = NewCT_EffectStyleList()
	_fdgaf.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	for _, _aagga := range start.Attr {
		if _aagga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_aggee, _dfdb := _aagga.Value, error(nil)
			if _dfdb != nil {
				return _dfdb
			}
			_fdgaf.NameAttr = &_aggee
			continue
		}
	}
_bbded:
	for {
		_cfdg, _afcba := d.Token()
		if _afcba != nil {
			return _afcba
		}
		switch _ebfaf := _cfdg.(type) {
		case _d.StartElement:
			switch _ebfaf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _ddfgf := d.DecodeElement(_fdgaf.FillStyleLst, &_ebfaf); _ddfgf != nil {
					return _ddfgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"}:
				if _dbdcd := d.DecodeElement(_fdgaf.LnStyleLst, &_ebfaf); _dbdcd != nil {
					return _dbdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _efgfdb := d.DecodeElement(_fdgaf.EffectStyleLst, &_ebfaf); _efgfdb != nil {
					return _efgfdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0046\u0069\u006c\u006c\u0053\u0074\u0079l\u0065\u004c\u0073\u0074"}:
				if _fgecd := d.DecodeElement(_fdgaf.BgFillStyleLst, &_ebfaf); _fgecd != nil {
					return _fgecd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061t\u0072i\u0078\u0020\u0025\u0076", _ebfaf.Name)
				if _fefee := d.Skip(); _fefee != nil {
					return _fefee
				}
			}
		case _d.EndElement:
			break _bbded
		case _d.CharData:
		}
	}
	return nil
}

type CT_TableStyleList struct {
	DefAttr  string
	TblStyle []*CT_TableStyle
}

func (_gaaec *Theme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gaaec.CT_OfficeStyleSheet = *NewCT_OfficeStyleSheet()
	for _, _dddef := range start.Attr {
		if _dddef.Name.Local == "\u006e\u0061\u006d\u0065" {
			_agggb, _cdccgf := _dddef.Value, error(nil)
			if _cdccgf != nil {
				return _cdccgf
			}
			_gaaec.NameAttr = &_agggb
			continue
		}
	}
_cagab:
	for {
		_egeag, _ffeage := d.Token()
		if _ffeage != nil {
			return _ffeage
		}
		switch _bffdb := _egeag.(type) {
		case _d.StartElement:
			switch _bffdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _faaac := d.DecodeElement(_gaaec.ThemeElements, &_bffdb); _faaac != nil {
					return _faaac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_gaaec.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _adcaf := d.DecodeElement(_gaaec.ObjectDefaults, &_bffdb); _adcaf != nil {
					return _adcaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_gaaec.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _dfcffb := d.DecodeElement(_gaaec.ExtraClrSchemeLst, &_bffdb); _dfcffb != nil {
					return _dfcffb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_gaaec.CustClrLst = NewCT_CustomColorList()
				if _fbfea := d.DecodeElement(_gaaec.CustClrLst, &_bffdb); _fbfea != nil {
					return _fbfea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gaaec.ExtLst = NewCT_OfficeArtExtensionList()
				if _dcef := d.DecodeElement(_gaaec.ExtLst, &_bffdb); _dcef != nil {
					return _dcef
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn \u0054\u0068\u0065m\u0065 \u0025\u0076", _bffdb.Name)
				if _ecega := d.Skip(); _ecega != nil {
					return _ecega
				}
			}
		case _d.EndElement:
			break _cagab
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_OfficeStyleSheet() *CT_OfficeStyleSheet {
	_gaeg := &CT_OfficeStyleSheet{}
	_gaeg.ThemeElements = NewCT_BaseStyles()
	return _gaeg
}

// Validate validates the CT_SphereCoords and its children
func (_eece *CT_SphereCoords) Validate() error {
	return _eece.ValidateWithPath("\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073")
}
func (_bcagg *EG_TextRun) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_deggd:
	for {
		_aaeag, _ebfef := d.Token()
		if _ebfef != nil {
			return _ebfef
		}
		switch _cacegd := _aaeag.(type) {
		case _d.StartElement:
			switch _cacegd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_bcagg.R = NewCT_RegularTextRun()
				if _dbadd := d.DecodeElement(_bcagg.R, &_cacegd); _dbadd != nil {
					return _dbadd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_bcagg.Br = NewCT_TextLineBreak()
				if _fdcba := d.DecodeElement(_bcagg.Br, &_cacegd); _fdcba != nil {
					return _fdcba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_bcagg.Fld = NewCT_TextField()
				if _gdgag := d.DecodeElement(_bcagg.Fld, &_cacegd); _gdgag != nil {
					return _gdgag
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005fT\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _cacegd.Name)
				if _bdedac := d.Skip(); _bdedac != nil {
					return _bdedac
				}
			}
		case _d.EndElement:
			break _deggd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_RelativeOffsetEffect() *CT_RelativeOffsetEffect {
	_abacb := &CT_RelativeOffsetEffect{}
	return _abacb
}
func (_cfgbba *ST_TextAnchoringType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bggdad, _geafg := d.Token()
	if _geafg != nil {
		return _geafg
	}
	if _eccdb, _ggfac := _bggdad.(_d.EndElement); _ggfac && _eccdb.Name == start.Name {
		*_cfgbba = 1
		return nil
	}
	if _ddfbg, _gafd := _bggdad.(_d.CharData); !_gafd {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bggdad)
	} else {
		switch string(_ddfbg) {
		case "":
			*_cfgbba = 0
		case "\u0074":
			*_cfgbba = 1
		case "\u0063\u0074\u0072":
			*_cfgbba = 2
		case "\u0062":
			*_cfgbba = 3
		case "\u006a\u0075\u0073\u0074":
			*_cfgbba = 4
		case "\u0064\u0069\u0073\u0074":
			*_cfgbba = 5
		}
	}
	_bggdad, _geafg = d.Token()
	if _geafg != nil {
		return _geafg
	}
	if _eaabd, _eegcg := _bggdad.(_d.EndElement); _eegcg && _eaabd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bggdad)
}
func (_ecabbg *EG_ThemeableEffectStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ecabbg.Effect != nil {
		_adfdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_ecabbg.Effect, _adfdd)
	}
	if _ecabbg.EffectRef != nil {
		_decde := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_ecabbg.EffectRef, _decde)
	}
	return nil
}

// Validate validates the CT_OuterShadowEffect and its children
func (_cbcdc *CT_OuterShadowEffect) Validate() error {
	return _cbcdc.ValidateWithPath("C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074")
}

type EG_TextUnderlineLine struct {
	ULnTx *CT_TextUnderlineLineFollowText
	ULn   *CT_LineProperties
}

func (_bffb ST_PitchFamily) String() string {
	switch _bffb {
	case 0:
		return ""
	case 1:
		return "\u0030\u0030"
	case 2:
		return "\u0030\u0031"
	case 3:
		return "\u0030\u0032"
	case 4:
		return "\u0031\u0036"
	case 5:
		return "\u0031\u0037"
	case 6:
		return "\u0031\u0038"
	case 7:
		return "\u0033\u0032"
	case 8:
		return "\u0033\u0033"
	case 9:
		return "\u0033\u0034"
	case 10:
		return "\u0034\u0038"
	case 11:
		return "\u0034\u0039"
	case 12:
		return "\u0035\u0030"
	case 13:
		return "\u0036\u0034"
	case 14:
		return "\u0036\u0035"
	case 15:
		return "\u0036\u0036"
	case 16:
		return "\u0038\u0030"
	case 17:
		return "\u0038\u0031"
	case 18:
		return "\u0038\u0032"
	}
	return ""
}
func NewCT_OfficeArtExtension() *CT_OfficeArtExtension {
	_egfc := &CT_OfficeArtExtension{}
	return _egfc
}

const (
	ST_PresetShadowValUnset  ST_PresetShadowVal = 0
	ST_PresetShadowValShdw1  ST_PresetShadowVal = 1
	ST_PresetShadowValShdw2  ST_PresetShadowVal = 2
	ST_PresetShadowValShdw3  ST_PresetShadowVal = 3
	ST_PresetShadowValShdw4  ST_PresetShadowVal = 4
	ST_PresetShadowValShdw5  ST_PresetShadowVal = 5
	ST_PresetShadowValShdw6  ST_PresetShadowVal = 6
	ST_PresetShadowValShdw7  ST_PresetShadowVal = 7
	ST_PresetShadowValShdw8  ST_PresetShadowVal = 8
	ST_PresetShadowValShdw9  ST_PresetShadowVal = 9
	ST_PresetShadowValShdw10 ST_PresetShadowVal = 10
	ST_PresetShadowValShdw11 ST_PresetShadowVal = 11
	ST_PresetShadowValShdw12 ST_PresetShadowVal = 12
	ST_PresetShadowValShdw13 ST_PresetShadowVal = 13
	ST_PresetShadowValShdw14 ST_PresetShadowVal = 14
	ST_PresetShadowValShdw15 ST_PresetShadowVal = 15
	ST_PresetShadowValShdw16 ST_PresetShadowVal = 16
	ST_PresetShadowValShdw17 ST_PresetShadowVal = 17
	ST_PresetShadowValShdw18 ST_PresetShadowVal = 18
	ST_PresetShadowValShdw19 ST_PresetShadowVal = 19
	ST_PresetShadowValShdw20 ST_PresetShadowVal = 20
)

func (_fefd *CT_PositiveFixedPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfcfd := range start.Attr {
		if _bfcfd.Name.Local == "\u0076\u0061\u006c" {
			_ggbdfe, _gaeaf := ParseUnionST_PositiveFixedPercentage(_bfcfd.Value)
			if _gaeaf != nil {
				return _gaeaf
			}
			_fefd.ValAttr = _ggbdfe
			continue
		}
	}
	for {
		_dfba, _adefc := d.Token()
		if _adefc != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046\u0069\u0078\u0065\u0064P\u0065\u0072\u0063\u0065\u006et\u0061\u0067e\u003a\u0020\u0025\u0073", _adefc)
		}
		if _efgf, _dfge := _dfba.(_d.EndElement); _dfge && _efgf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cacga *CT_TableStyleCellStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcag:
	for {
		_fagge, _fegab := d.Token()
		if _fegab != nil {
			return _fegab
		}
		switch _dagbg := _fagge.(type) {
		case _d.StartElement:
			switch _dagbg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0042d\u0072"}:
				_cacga.TcBdr = NewCT_TableCellBorderStyle()
				if _bbbae := d.DecodeElement(_cacga.TcBdr, &_dagbg); _bbbae != nil {
					return _bbbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_cacga.Fill = NewCT_FillProperties()
				if _beegf := d.DecodeElement(_cacga.Fill, &_dagbg); _beegf != nil {
					return _beegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_cacga.FillRef = NewCT_StyleMatrixReference()
				if _bdfgd := d.DecodeElement(_cacga.FillRef, &_dagbg); _bdfgd != nil {
					return _bdfgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0065\u006c\u006c\u0033\u0044"}:
				_cacga.Cell3D = NewCT_Cell3D()
				if _gfbde := d.DecodeElement(_cacga.Cell3D, &_dagbg); _gfbde != nil {
					return _gfbde
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _dagbg.Name)
				if _faccg := d.Skip(); _faccg != nil {
					return _faccg
				}
			}
		case _d.EndElement:
			break _fcag
		case _d.CharData:
		}
	}
	return nil
}
func (_eedad ST_TextUnderlineType) Validate() error { return _eedad.ValidateWithPath("") }

// Validate validates the CT_NonVisualDrawingProps and its children
func (_acfda *CT_NonVisualDrawingProps) Validate() error {
	return _acfda.ValidateWithPath("\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073")
}

type CT_VideoFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}

func (_fceab *ThemeOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061:\u0074h\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065"
	return _fceab.CT_BaseStylesOverride.MarshalXML(e, start)
}

type CT_NonVisualConnectorProperties struct {
	CxnSpLocks *CT_ConnectorLocking
	StCxn      *CT_Connection
	EndCxn     *CT_Connection
	ExtLst     *CT_OfficeArtExtensionList
}
type CT_PresetColor struct {
	ValAttr           ST_PresetColorVal
	EG_ColorTransform []*EG_ColorTransform
}

func (_dagdb ST_SystemColorVal) Validate() error { return _dagdb.ValidateWithPath("") }
func (_ddcag *EG_OfficeArtExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_agdbb:
	for {
		_cgdbb, _eceae := d.Token()
		if _eceae != nil {
			return _eceae
		}
		switch _eecbb := _cgdbb.(type) {
		case _d.StartElement:
			switch _eecbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_agcfd := NewCT_OfficeArtExtension()
				if _becbg := d.DecodeElement(_agcfd, &_eecbb); _becbg != nil {
					return _becbg
				}
				_ddcag.Ext = append(_ddcag.Ext, _agcfd)
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _eecbb.Name)
				if _bfcca := d.Skip(); _bfcca != nil {
					return _bfcca
				}
			}
		case _d.EndElement:
			break _agdbb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_GradientStop() *CT_GradientStop { _dcbgf := &CT_GradientStop{}; return _dcbgf }
func NewCT_BackgroundFillStyleList() *CT_BackgroundFillStyleList {
	_cdgd := &CT_BackgroundFillStyleList{}
	return _cdgd
}

type ST_TextFontAlignType byte
type ThemeOverride struct{ CT_BaseStylesOverride }

// Validate validates the CT_TextSpacingPercent and its children
func (_eedcg *CT_TextSpacingPercent) Validate() error {
	return _eedcg.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
}
func (_cddd *CT_GvmlGraphicFrameNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_adbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_cddd.CNvPr, _adbc)
	_dedcg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u004evG\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}}
	e.EncodeElement(_cddd.CNvGraphicFramePr, _dedcg)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbeff *EG_LineFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbeff.NoFill != nil {
		_ggfcbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fbeff.NoFill, _ggfcbe)
	}
	if _fbeff.SolidFill != nil {
		_adefe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fbeff.SolidFill, _adefe)
	}
	if _fbeff.GradFill != nil {
		_ddbcgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fbeff.GradFill, _ddbcgc)
	}
	if _fbeff.PattFill != nil {
		_gfgae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_fbeff.PattFill, _gfgae)
	}
	return nil
}
func (_gecb *CT_InverseTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdcda *CT_ObjectStyleDefaults) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gfagc:
	for {
		_aebaf, _aabf := d.Token()
		if _aabf != nil {
			return _aabf
		}
		switch _ebgcg := _aebaf.(type) {
		case _d.StartElement:
			switch _ebgcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0044e\u0066"}:
				_cdcda.SpDef = NewCT_DefaultShapeDefinition()
				if _fedd := d.DecodeElement(_cdcda.SpDef, &_ebgcg); _fedd != nil {
					return _fedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0044e\u0066"}:
				_cdcda.LnDef = NewCT_DefaultShapeDefinition()
				if _becb := d.DecodeElement(_cdcda.LnDef, &_ebgcg); _becb != nil {
					return _becb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0044e\u0066"}:
				_cdcda.TxDef = NewCT_DefaultShapeDefinition()
				if _dbddg := d.DecodeElement(_cdcda.TxDef, &_ebgcg); _dbddg != nil {
					return _dbddg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdcda.ExtLst = NewCT_OfficeArtExtensionList()
				if _aeag := d.DecodeElement(_cdcda.ExtLst, &_ebgcg); _aeag != nil {
					return _aeag
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u004f\u0062\u006a\u0065c\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073\u0020\u0025\u0076", _ebgcg.Name)
				if _dcfdg := d.Skip(); _dcfdg != nil {
					return _dcfdg
				}
			}
		case _d.EndElement:
			break _gfagc
		case _d.CharData:
		}
	}
	return nil
}

type CT_Blip struct {
	CstateAttr ST_BlipCompression
	Choice     []*CT_BlipChoice
	ExtLst     *CT_OfficeArtExtensionList
	EmbedAttr  *string
	LinkAttr   *string
}

// Validate validates the CT_LuminanceEffect and its children
func (_cggga *CT_LuminanceEffect) Validate() error {
	return _cggga.ValidateWithPath("\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074")
}
func (_aacf *CT_PatternFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fffd := range start.Attr {
		if _fffd.Name.Local == "\u0070\u0072\u0073\u0074" {
			_aacf.PrstAttr.UnmarshalXMLAttr(_fffd)
			continue
		}
	}
_gefb:
	for {
		_ddbfd, _ddcdd := d.Token()
		if _ddcdd != nil {
			return _ddcdd
		}
		switch _acgbe := _ddbfd.(type) {
		case _d.StartElement:
			switch _acgbe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0067\u0043l\u0072"}:
				_aacf.FgClr = NewCT_Color()
				if _ddbaa := d.DecodeElement(_aacf.FgClr, &_acgbe); _ddbaa != nil {
					return _ddbaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0067\u0043l\u0072"}:
				_aacf.BgClr = NewCT_Color()
				if _cdbgg := d.DecodeElement(_aacf.BgClr, &_acgbe); _cdbgg != nil {
					return _cdbgg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020%\u0076", _acgbe.Name)
				if _dccc := d.Skip(); _dccc != nil {
					return _dccc
				}
			}
		case _d.EndElement:
			break _gefb
		case _d.CharData:
		}
	}
	return nil
}

type CT_AnimationElementChoice struct {
	Dgm   *CT_AnimationDgmElement
	Chart *CT_AnimationChartElement
}

func (_ccge *CT_EffectStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ceccb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}}
	for _, _dbccc := range _ccge.EffectStyle {
		e.EncodeElement(_dbccc, _ceccb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextBulletSizeFollowText and its children
func (_gbeeb *CT_TextBulletSizeFollowText) Validate() error {
	return _gbeeb.ValidateWithPath("C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074")
}
func (_eccbg *CT_FillStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _efgcf := range _eccbg.EG_FillProperties {
		_efgcf.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_agacb *ST_PathShadeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_geadgg, _addbc := d.Token()
	if _addbc != nil {
		return _addbc
	}
	if _fffbb, _abecf := _geadgg.(_d.EndElement); _abecf && _fffbb.Name == start.Name {
		*_agacb = 1
		return nil
	}
	if _gcdc, _ccecf := _geadgg.(_d.CharData); !_ccecf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _geadgg)
	} else {
		switch string(_gcdc) {
		case "":
			*_agacb = 0
		case "\u0073\u0068\u0061p\u0065":
			*_agacb = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_agacb = 2
		case "\u0072\u0065\u0063\u0074":
			*_agacb = 3
		}
	}
	_geadgg, _addbc = d.Token()
	if _addbc != nil {
		return _addbc
	}
	if _bagced, _fdfgef := _geadgg.(_d.EndElement); _fdfgef && _bagced.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _geadgg)
}
func (_dfegg *ST_PathFillMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbgeg, _ggdgd := d.Token()
	if _ggdgd != nil {
		return _ggdgd
	}
	if _adaad, _ccdae := _dbgeg.(_d.EndElement); _ccdae && _adaad.Name == start.Name {
		*_dfegg = 1
		return nil
	}
	if _ebgfcd, _aaeagg := _dbgeg.(_d.CharData); !_aaeagg {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dbgeg)
	} else {
		switch string(_ebgfcd) {
		case "":
			*_dfegg = 0
		case "\u006e\u006f\u006e\u0065":
			*_dfegg = 1
		case "\u006e\u006f\u0072\u006d":
			*_dfegg = 2
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_dfegg = 3
		case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
			*_dfegg = 4
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_dfegg = 5
		case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
			*_dfegg = 6
		}
	}
	_dbgeg, _ggdgd = d.Token()
	if _ggdgd != nil {
		return _ggdgd
	}
	if _fgafde, _acgca := _dbgeg.(_d.EndElement); _acgca && _fgafde.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dbgeg)
}
func (_aeeadb *ST_LineEndType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aeeadb = 0
	case "\u006e\u006f\u006e\u0065":
		*_aeeadb = 1
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_aeeadb = 2
	case "\u0073t\u0065\u0061\u006c\u0074\u0068":
		*_aeeadb = 3
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_aeeadb = 4
	case "\u006f\u0076\u0061\u006c":
		*_aeeadb = 5
	case "\u0061\u0072\u0072o\u0077":
		*_aeeadb = 6
	}
	return nil
}
func (_bgfgfe ST_PenAlignment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bgfgfe.String(), start)
}
func (_dbage *ST_PresetColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agbga, _ffbgg := d.Token()
	if _ffbgg != nil {
		return _ffbgg
	}
	if _gddbe, _gbbce := _agbga.(_d.EndElement); _gbbce && _gddbe.Name == start.Name {
		*_dbage = 1
		return nil
	}
	if _bfddc, _cbbff := _agbga.(_d.CharData); !_cbbff {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agbga)
	} else {
		switch string(_bfddc) {
		case "":
			*_dbage = 0
		case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
			*_dbage = 1
		case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
			*_dbage = 2
		case "\u0061\u0071\u0075\u0061":
			*_dbage = 3
		case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dbage = 4
		case "\u0061\u007a\u0075r\u0065":
			*_dbage = 5
		case "\u0062\u0065\u0069g\u0065":
			*_dbage = 6
		case "\u0062\u0069\u0073\u0071\u0075\u0065":
			*_dbage = 7
		case "\u0062\u006c\u0061c\u006b":
			*_dbage = 8
		case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
			*_dbage = 9
		case "\u0062\u006c\u0075\u0065":
			*_dbage = 10
		case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dbage = 11
		case "\u0062\u0072\u006fw\u006e":
			*_dbage = 12
		case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
			*_dbage = 13
		case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
			*_dbage = 14
		case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
			*_dbage = 15
		case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
			*_dbage = 16
		case "\u0063\u006f\u0072a\u006c":
			*_dbage = 17
		case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
			*_dbage = 18
		case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
			*_dbage = 19
		case "\u0063r\u0069\u006d\u0073\u006f\u006e":
			*_dbage = 20
		case "\u0063\u0079\u0061\u006e":
			*_dbage = 21
		case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
			*_dbage = 22
		case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
			*_dbage = 23
		case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dbage = 24
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
			*_dbage = 25
		case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
			*_dbage = 26
		case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
			*_dbage = 27
		case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
			*_dbage = 28
		case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
			*_dbage = 29
		case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
			*_dbage = 30
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_dbage = 31
		case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dbage = 32
		case "\u0064a\u0072\u006b\u0052\u0065\u0064":
			*_dbage = 33
		case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dbage = 34
		case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 35
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dbage = 36
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dbage = 37
		case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dbage = 38
		case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dbage = 39
		case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dbage = 40
		case "\u0064\u006b\u0042\u006c\u0075\u0065":
			*_dbage = 41
		case "\u0064\u006b\u0043\u0079\u0061\u006e":
			*_dbage = 42
		case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dbage = 43
		case "\u0064\u006b\u0047\u0072\u0061\u0079":
			*_dbage = 44
		case "\u0064\u006b\u0047\u0072\u0065\u0079":
			*_dbage = 45
		case "\u0064k\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 46
		case "\u0064k\u004b\u0068\u0061\u006b\u0069":
			*_dbage = 47
		case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
			*_dbage = 48
		case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 49
		case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
			*_dbage = 50
		case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dbage = 51
		case "\u0064\u006b\u0052e\u0064":
			*_dbage = 52
		case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dbage = 53
		case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 54
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dbage = 55
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dbage = 56
		case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dbage = 57
		case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dbage = 58
		case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
			*_dbage = 59
		case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
			*_dbage = 60
		case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_dbage = 61
		case "\u0064i\u006d\u0047\u0072\u0061\u0079":
			*_dbage = 62
		case "\u0064i\u006d\u0047\u0072\u0065\u0079":
			*_dbage = 63
		case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
			*_dbage = 64
		case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
			*_dbage = 65
		case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
			*_dbage = 66
		case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 67
		case "\u0066u\u0063\u0068\u0073\u0069\u0061":
			*_dbage = 68
		case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
			*_dbage = 69
		case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
			*_dbage = 70
		case "\u0067\u006f\u006c\u0064":
			*_dbage = 71
		case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
			*_dbage = 72
		case "\u0067\u0072\u0061\u0079":
			*_dbage = 73
		case "\u0067\u0072\u0065\u0079":
			*_dbage = 74
		case "\u0067\u0072\u0065e\u006e":
			*_dbage = 75
		case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dbage = 76
		case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
			*_dbage = 77
		case "\u0068o\u0074\u0050\u0069\u006e\u006b":
			*_dbage = 78
		case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
			*_dbage = 79
		case "\u0069\u006e\u0064\u0069\u0067\u006f":
			*_dbage = 80
		case "\u0069\u0076\u006fr\u0079":
			*_dbage = 81
		case "\u006b\u0068\u0061k\u0069":
			*_dbage = 82
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
			*_dbage = 83
		case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
			*_dbage = 84
		case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
			*_dbage = 85
		case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
			*_dbage = 86
		case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
			*_dbage = 87
		case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
			*_dbage = 88
		case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
			*_dbage = 89
		case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
			*_dbage = 90
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
			*_dbage = 91
		case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
			*_dbage = 92
		case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 93
		case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
			*_dbage = 94
		case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dbage = 95
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 96
		case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
			*_dbage = 97
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
			*_dbage = 98
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
			*_dbage = 99
		case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
			*_dbage = 100
		case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dbage = 101
		case "\u006c\u0074\u0042\u006c\u0075\u0065":
			*_dbage = 102
		case "\u006ct\u0043\u006f\u0072\u0061\u006c":
			*_dbage = 103
		case "\u006c\u0074\u0043\u0079\u0061\u006e":
			*_dbage = 104
		case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
			*_dbage = 105
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_dbage = 106
		case "\u006c\u0074\u0047\u0072\u0065\u0079":
			*_dbage = 107
		case "\u006ct\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 108
		case "\u006c\u0074\u0050\u0069\u006e\u006b":
			*_dbage = 109
		case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
			*_dbage = 110
		case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 111
		case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
			*_dbage = 112
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
			*_dbage = 113
		case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
			*_dbage = 114
		case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
			*_dbage = 115
		case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
			*_dbage = 116
		case "\u006c\u0069\u006d\u0065":
			*_dbage = 117
		case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
			*_dbage = 118
		case "\u006c\u0069\u006ee\u006e":
			*_dbage = 119
		case "\u006da\u0067\u0065\u006e\u0074\u0061":
			*_dbage = 120
		case "\u006d\u0061\u0072\u006f\u006f\u006e":
			*_dbage = 121
		case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dbage = 122
		case "\u006de\u0064\u0042\u006c\u0075\u0065":
			*_dbage = 123
		case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
			*_dbage = 124
		case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
			*_dbage = 125
		case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 126
		case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dbage = 127
		case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_dbage = 128
		case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dbage = 129
		case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dbage = 130
		case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
			*_dbage = 131
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
			*_dbage = 132
		case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
			*_dbage = 133
		case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
			*_dbage = 134
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
			*_dbage = 135
		case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
			*_dbage = 136
		case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
			*_dbage = 137
		case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dbage = 138
		case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dbage = 139
		case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
			*_dbage = 140
		case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
			*_dbage = 141
		case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
			*_dbage = 142
		case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
			*_dbage = 143
		case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
			*_dbage = 144
		case "\u006e\u0061\u0076\u0079":
			*_dbage = 145
		case "\u006fl\u0064\u004c\u0061\u0063\u0065":
			*_dbage = 146
		case "\u006f\u006c\u0069v\u0065":
			*_dbage = 147
		case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
			*_dbage = 148
		case "\u006f\u0072\u0061\u006e\u0067\u0065":
			*_dbage = 149
		case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
			*_dbage = 150
		case "\u006f\u0072\u0063\u0068\u0069\u0064":
			*_dbage = 151
		case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
			*_dbage = 152
		case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
			*_dbage = 153
		case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
			*_dbage = 154
		case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
			*_dbage = 155
		case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
			*_dbage = 156
		case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
			*_dbage = 157
		case "\u0070\u0065\u0072\u0075":
			*_dbage = 158
		case "\u0070\u0069\u006e\u006b":
			*_dbage = 159
		case "\u0070\u006c\u0075\u006d":
			*_dbage = 160
		case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
			*_dbage = 161
		case "\u0070\u0075\u0072\u0070\u006c\u0065":
			*_dbage = 162
		case "\u0072\u0065\u0064":
			*_dbage = 163
		case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
			*_dbage = 164
		case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
			*_dbage = 165
		case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
			*_dbage = 166
		case "\u0073\u0061\u006c\u006d\u006f\u006e":
			*_dbage = 167
		case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
			*_dbage = 168
		case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 169
		case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
			*_dbage = 170
		case "\u0073\u0069\u0065\u006e\u006e\u0061":
			*_dbage = 171
		case "\u0073\u0069\u006c\u0076\u0065\u0072":
			*_dbage = 172
		case "\u0073k\u0079\u0042\u006c\u0075\u0065":
			*_dbage = 173
		case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
			*_dbage = 174
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
			*_dbage = 175
		case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
			*_dbage = 176
		case "\u0073\u006e\u006f\u0077":
			*_dbage = 177
		case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 178
		case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
			*_dbage = 179
		case "\u0074\u0061\u006e":
			*_dbage = 180
		case "\u0074\u0065\u0061\u006c":
			*_dbage = 181
		case "\u0074h\u0069\u0073\u0074\u006c\u0065":
			*_dbage = 182
		case "\u0074\u006f\u006d\u0061\u0074\u006f":
			*_dbage = 183
		case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
			*_dbage = 184
		case "\u0076\u0069\u006f\u006c\u0065\u0074":
			*_dbage = 185
		case "\u0077\u0068\u0065a\u0074":
			*_dbage = 186
		case "\u0077\u0068\u0069t\u0065":
			*_dbage = 187
		case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
			*_dbage = 188
		case "\u0079\u0065\u006c\u006c\u006f\u0077":
			*_dbage = 189
		case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
			*_dbage = 190
		}
	}
	_agbga, _ffbgg = d.Token()
	if _ffbgg != nil {
		return _ffbgg
	}
	if _bcfccc, _cfbge := _agbga.(_d.EndElement); _cfbge && _bcfccc.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agbga)
}
func (_fbfaec ST_TextStrikeType) String() string {
	switch _fbfaec {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case 2:
		return "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case 3:
		return "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return ""
}

type CT_EmbeddedWAVAudioFile struct {
	EmbedAttr string
	NameAttr  *string
}

// Validate validates the CT_BackgroundFillStyleList and its children
func (_cfeg *CT_BackgroundFillStyleList) Validate() error {
	return _cfeg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074")
}
func (_affca *CT_OfficeArtExtension) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0072\u0069"}, Value: _e.Sprintf("\u0025\u0076", _affca.UriAttr)})
	e.EncodeToken(start)
	if _affca.Any != nil {
		for _, _gdafa := range _affca.Any {
			_gdafa.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_ShapeType byte
type CT_GvmlTextShape struct {
	TxBody *CT_TextBody
	Choice *CT_GvmlTextShapeChoice
	ExtLst *CT_OfficeArtExtensionList
}

func (_fbggfb *CT_GrayscaleTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_faga, _afff := d.Token()
		if _afff != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0079\u0073\u0063\u0061\u006c\u0065T\u0072\u0061\u006e\u0073\u0066\u006f\u0072m\u003a\u0020\u0025\u0073", _afff)
		}
		if _fefb, _bfdce := _faga.(_d.EndElement); _bfdce && _fefb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_egdab *CT_LineJoinRound) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_ggecae, _bgdee := d.Token()
		if _bgdee != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0052\u006f\u0075\u006e\u0064\u003a \u0025\u0073", _bgdee)
		}
		if _geefe, _fceg := _ggecae.(_d.EndElement); _fceg && _geefe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PatternFillProperties and its children, prefixing error messages with path
func (_ebgce *CT_PatternFillProperties) ValidateWithPath(path string) error {
	if _cddge := _ebgce.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _cddge != nil {
		return _cddge
	}
	if _ebgce.FgClr != nil {
		if _cbgdb := _ebgce.FgClr.ValidateWithPath(path + "\u002f\u0046\u0067\u0043\u006c\u0072"); _cbgdb != nil {
			return _cbgdb
		}
	}
	if _ebgce.BgClr != nil {
		if _bffg := _ebgce.BgClr.ValidateWithPath(path + "\u002f\u0042\u0067\u0043\u006c\u0072"); _bffg != nil {
			return _bffg
		}
	}
	return nil
}

type ThemeManager struct{ CT_EmptyElement }

func (_degf *CT_GvmlGroupShapeNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_degf.CNvPr = NewCT_NonVisualDrawingProps()
	_degf.CNvGrpSpPr = NewCT_NonVisualGroupDrawingShapeProps()
_fgde:
	for {
		_adegce, _bfebg := d.Token()
		if _bfebg != nil {
			return _bfebg
		}
		switch _ggae := _adegce.(type) {
		case _d.StartElement:
			switch _ggae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _afbba := d.DecodeElement(_degf.CNvPr, &_ggae); _afbba != nil {
					return _afbba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}:
				if _fabb := d.DecodeElement(_degf.CNvGrpSpPr, &_ggae); _fabb != nil {
					return _fabb
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0047\u0076m\u006c\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0020\u0025\u0076", _ggae.Name)
				if _gecgf := d.Skip(); _gecgf != nil {
					return _gecgf
				}
			}
		case _d.EndElement:
			break _fgde
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Cell3D and its children, prefixing error messages with path
func (_ddda *CT_Cell3D) ValidateWithPath(path string) error {
	if _fbcf := _ddda.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _fbcf != nil {
		return _fbcf
	}
	if _gafc := _ddda.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _gafc != nil {
		return _gafc
	}
	if _ddda.LightRig != nil {
		if _cegg := _ddda.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _cegg != nil {
			return _cegg
		}
	}
	if _ddda.ExtLst != nil {
		if _gfcd := _ddda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfcd != nil {
			return _gfcd
		}
	}
	return nil
}
func (_bggb *CT_NonVisualDrawingProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgedd := range start.Attr {
		if _bgedd.Name.Local == "\u0069\u0064" {
			_fbdcaa, _ggcab := _cd.ParseUint(_bgedd.Value, 10, 32)
			if _ggcab != nil {
				return _ggcab
			}
			_bggb.IdAttr = uint32(_fbdcaa)
			continue
		}
		if _bgedd.Name.Local == "\u006e\u0061\u006d\u0065" {
			_efbeb, _bcgafb := _bgedd.Value, error(nil)
			if _bcgafb != nil {
				return _bcgafb
			}
			_bggb.NameAttr = _efbeb
			continue
		}
		if _bgedd.Name.Local == "\u0064\u0065\u0073c\u0072" {
			_dbccg, _gdbd := _bgedd.Value, error(nil)
			if _gdbd != nil {
				return _gdbd
			}
			_bggb.DescrAttr = &_dbccg
			continue
		}
		if _bgedd.Name.Local == "\u0068\u0069\u0064\u0064\u0065\u006e" {
			_gfgad, _cdce := _cd.ParseBool(_bgedd.Value)
			if _cdce != nil {
				return _cdce
			}
			_bggb.HiddenAttr = &_gfgad
			continue
		}
		if _bgedd.Name.Local == "\u0074\u0069\u0074l\u0065" {
			_dgcgd, _caaeg := _bgedd.Value, error(nil)
			if _caaeg != nil {
				return _caaeg
			}
			_bggb.TitleAttr = &_dgcgd
			continue
		}
	}
_ageb:
	for {
		_cgfc, _acaff := d.Token()
		if _acaff != nil {
			return _acaff
		}
		switch _dcggd := _cgfc.(type) {
		case _d.StartElement:
			switch _dcggd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_bggb.HlinkClick = NewCT_Hyperlink()
				if _ffgfa := d.DecodeElement(_bggb.HlinkClick, &_dcggd); _ffgfa != nil {
					return _ffgfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}:
				_bggb.HlinkHover = NewCT_Hyperlink()
				if _fdda := d.DecodeElement(_bggb.HlinkHover, &_dcggd); _fdda != nil {
					return _fdda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bggb.ExtLst = NewCT_OfficeArtExtensionList()
				if _abda := d.DecodeElement(_bggb.ExtLst, &_dcggd); _abda != nil {
					return _abda
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067P\u0072\u006f\u0070\u0073\u0020%\u0076", _dcggd.Name)
				if _ccdg := d.Skip(); _ccdg != nil {
					return _ccdg
				}
			}
		case _d.EndElement:
			break _ageb
		case _d.CharData:
		}
	}
	return nil
}
func (_bcgaf *CT_EmptyElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_acab *CT_PathShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ceade := range start.Attr {
		if _ceade.Name.Local == "\u0070\u0061\u0074\u0068" {
			_acab.PathAttr.UnmarshalXMLAttr(_ceade)
			continue
		}
	}
_begdg:
	for {
		_ebdgf, _eccff := d.Token()
		if _eccff != nil {
			return _eccff
		}
		switch _agcgf := _ebdgf.(type) {
		case _d.StartElement:
			switch _agcgf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"}:
				_acab.FillToRect = NewCT_RelativeRect()
				if _gccgd := d.DecodeElement(_acab.FillToRect, &_agcgf); _gccgd != nil {
					return _gccgd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u0068S\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _agcgf.Name)
				if _fdffd := d.Skip(); _fdffd != nil {
					return _fdffd
				}
			}
		case _d.EndElement:
			break _begdg
		case _d.CharData:
		}
	}
	return nil
}
func (_gfba *CT_AlphaModulateEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ecfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_gfba.Cont, _ecfe)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableBackgroundStyle and its children
func (_ccfaa *CT_TableBackgroundStyle) Validate() error {
	return _ccfaa.ValidateWithPath("\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065")
}
func (_eacaf *CT_Scale2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dgcagc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0078"}}
	e.EncodeElement(_eacaf.Sx, _dgcagc)
	_befa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079"}}
	e.EncodeElement(_eacaf.Sy, _befa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_StretchInfoProperties and its children
func (_fbbaa *CT_StretchInfoProperties) Validate() error {
	return _fbbaa.ValidateWithPath("\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_PositiveFixedAngle() *CT_PositiveFixedAngle {
	_bbgbe := &CT_PositiveFixedAngle{}
	_bbgbe.ValAttr = 0
	return _bbgbe
}

// ValidateWithPath validates the CT_AudioCDTime and its children, prefixing error messages with path
func (_eeda *CT_AudioCDTime) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_Headers and its children
func (_dcac *CT_Headers) Validate() error {
	return _dcac.ValidateWithPath("\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073")
}
func NewCT_ShapeLocking() *CT_ShapeLocking { _ddaag := &CT_ShapeLocking{}; return _ddaag }

// ST_TextBulletSize is a union type
type ST_TextBulletSize struct {
	ST_TextBulletSizePercent *string
	ST_TextBulletSizeDecimal *int32
}

func (_bafb *CT_TableCellBorderStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bafb.Left != nil {
		_efggc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0065\u0066\u0074"}}
		e.EncodeElement(_bafb.Left, _efggc)
	}
	if _bafb.Right != nil {
		_abdbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_bafb.Right, _abdbf)
	}
	if _bafb.Top != nil {
		_becfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074o\u0070"}}
		e.EncodeElement(_bafb.Top, _becfc)
	}
	if _bafb.Bottom != nil {
		_agdec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006f\u0074\u0074\u006f\u006d"}}
		e.EncodeElement(_bafb.Bottom, _agdec)
	}
	if _bafb.InsideH != nil {
		_cegee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065H"}}
		e.EncodeElement(_bafb.InsideH, _cegee)
	}
	if _bafb.InsideV != nil {
		_aecga := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0069\u006e\u0073\u0069\u0064\u0065V"}}
		e.EncodeElement(_bafb.InsideV, _aecga)
	}
	if _bafb.Tl2br != nil {
		_cacfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u006c\u0032\u0062\u0072"}}
		e.EncodeElement(_bafb.Tl2br, _cacfg)
	}
	if _bafb.Tr2bl != nil {
		_fagf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0072\u0032\u0062\u006c"}}
		e.EncodeElement(_bafb.Tr2bl, _fagf)
	}
	if _bafb.ExtLst != nil {
		_dfgdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bafb.ExtLst, _dfgdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_Path2DClose and its children, prefixing error messages with path
func (_cacfe *CT_Path2DClose) ValidateWithPath(path string) error { return nil }
func (_dbd *CT_AlphaCeilingEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gabbd *CT_TileInfoProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gabbd.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_gabbd.TxAttr)})
	}
	if _gabbd.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_gabbd.TyAttr)})
	}
	if _gabbd.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_gabbd.SxAttr)})
	}
	if _gabbd.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_gabbd.SyAttr)})
	}
	if _gabbd.FlipAttr != ST_TileFlipModeUnset {
		_deead, _facegc := _gabbd.FlipAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u006c\u0069\u0070"})
		if _facegc != nil {
			return _facegc
		}
		start.Attr = append(start.Attr, _deead)
	}
	if _gabbd.AlgnAttr != ST_RectAlignmentUnset {
		_cgfagf, _dcdgff := _gabbd.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _dcdgff != nil {
			return _dcdgff
		}
		start.Attr = append(start.Attr, _cgfagf)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextParagraph and its children, prefixing error messages with path
func (_gbacc *CT_TextParagraph) ValidateWithPath(path string) error {
	if _gbacc.PPr != nil {
		if _gefdfd := _gbacc.PPr.ValidateWithPath(path + "\u002f\u0050\u0050\u0072"); _gefdfd != nil {
			return _gefdfd
		}
	}
	for _ecab, _afdd := range _gbacc.EG_TextRun {
		if _dege := _afdd.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075n\u005b\u0025\u0064\u005d", path, _ecab)); _dege != nil {
			return _dege
		}
	}
	if _gbacc.EndParaRPr != nil {
		if _fbadd := _gbacc.EndParaRPr.ValidateWithPath(path + "/\u0045\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"); _fbadd != nil {
			return _fbadd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_OfficeStyleSheet and its children, prefixing error messages with path
func (_ggedd *CT_OfficeStyleSheet) ValidateWithPath(path string) error {
	if _febag := _ggedd.ThemeElements.ValidateWithPath(path + "\u002f\u0054\u0068\u0065\u006d\u0065\u0045\u006c\u0065m\u0065\u006e\u0074\u0073"); _febag != nil {
		return _febag
	}
	if _ggedd.ObjectDefaults != nil {
		if _gaedd := _ggedd.ObjectDefaults.ValidateWithPath(path + "\u002fO\u0062j\u0065\u0063\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"); _gaedd != nil {
			return _gaedd
		}
	}
	if _ggedd.ExtraClrSchemeLst != nil {
		if _fbgee := _ggedd.ExtraClrSchemeLst.ValidateWithPath(path + "\u002fE\u0078t\u0072\u0061\u0043\u006c\u0072S\u0063\u0068e\u006d\u0065\u004c\u0073\u0074"); _fbgee != nil {
			return _fbgee
		}
	}
	if _ggedd.CustClrLst != nil {
		if _abgga := _ggedd.CustClrLst.ValidateWithPath(path + "/\u0043\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"); _abgga != nil {
			return _abgga
		}
	}
	if _ggedd.ExtLst != nil {
		if _dafbd := _ggedd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dafbd != nil {
			return _dafbd
		}
	}
	return nil
}
func NewCT_AnimationChartBuildProperties() *CT_AnimationChartBuildProperties {
	_fab := &CT_AnimationChartBuildProperties{}
	return _fab
}
func NewCT_TextBodyProperties() *CT_TextBodyProperties {
	_edddb := &CT_TextBodyProperties{}
	return _edddb
}
func NewEG_TextBulletColor() *EG_TextBulletColor { _acda := &EG_TextBulletColor{}; return _acda }
func NewCT_LineJoinMiterProperties() *CT_LineJoinMiterProperties {
	_dgggg := &CT_LineJoinMiterProperties{}
	return _dgggg
}
func (_bfdbe *CT_RegularTextRun) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dcddf:
	for {
		_aegdc, _gece := d.Token()
		if _gece != nil {
			return _gece
		}
		switch _cbbb := _aegdc.(type) {
		case _d.StartElement:
			switch _cbbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_bfdbe.RPr = NewCT_TextCharacterProperties()
				if _cbbae := d.DecodeElement(_bfdbe.RPr, &_cbbb); _cbbae != nil {
					return _cbbae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				if _faeb := d.DecodeElement(&_bfdbe.T, &_cbbb); _faeb != nil {
					return _faeb
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065\u0078\u0074\u0052\u0075\u006e\u0020\u0025\u0076", _cbbb.Name)
				if _ebbdab := d.Skip(); _ebbdab != nil {
					return _ebbdab
				}
			}
		case _d.EndElement:
			break _dcddf
		case _d.CharData:
		}
	}
	return nil
}
func (_bgdeeb *CT_TextUnderlineFillGroupWrapper) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bgdeeb.NoFill != nil {
		_bdfgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgdeeb.NoFill, _bdfgg)
	}
	if _bgdeeb.SolidFill != nil {
		_decf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgdeeb.SolidFill, _decf)
	}
	if _bgdeeb.GradFill != nil {
		_afgbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgdeeb.GradFill, _afgbf)
	}
	if _bgdeeb.BlipFill != nil {
		_eddbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgdeeb.BlipFill, _eddbe)
	}
	if _bgdeeb.PattFill != nil {
		_efbfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_bgdeeb.PattFill, _efbfc)
	}
	if _bgdeeb.GrpFill != nil {
		_eedd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_bgdeeb.GrpFill, _eedd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_EffectContainer and its children
func (_efgc *CT_EffectContainer) Validate() error {
	return _efgc.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072")
}

// ValidateWithPath validates the EG_TextRun and its children, prefixing error messages with path
func (_faada *EG_TextRun) ValidateWithPath(path string) error {
	if _faada.R != nil {
		if _eefde := _faada.R.ValidateWithPath(path + "\u002f\u0052"); _eefde != nil {
			return _eefde
		}
	}
	if _faada.Br != nil {
		if _gadfa := _faada.Br.ValidateWithPath(path + "\u002f\u0042\u0072"); _gadfa != nil {
			return _gadfa
		}
	}
	if _faada.Fld != nil {
		if _dgdac := _faada.Fld.ValidateWithPath(path + "\u002f\u0046\u006c\u0064"); _dgdac != nil {
			return _dgdac
		}
	}
	return nil
}
func (_adafb ST_PresetCameraType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aeffd := _d.Attr{}
	_aeffd.Name = name
	switch _adafb {
	case ST_PresetCameraTypeUnset:
		_aeffd.Value = ""
	case ST_PresetCameraTypeLegacyObliqueTopLeft:
		_aeffd.Value = "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueTop:
		_aeffd.Value = "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeLegacyObliqueTopRight:
		_aeffd.Value = "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueLeft:
		_aeffd.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueFront:
		_aeffd.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeLegacyObliqueRight:
		_aeffd.Value = "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottomLeft:
		_aeffd.Value = "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyObliqueBottom:
		_aeffd.Value = "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyObliqueBottomRight:
		_aeffd.Value = "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTopLeft:
		_aeffd.Value = "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveTop:
		_aeffd.Value = "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case ST_PresetCameraTypeLegacyPerspectiveTopRight:
		_aeffd.Value = "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case ST_PresetCameraTypeLegacyPerspectiveLeft:
		_aeffd.Value = "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveFront:
		_aeffd.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveRight:
		_aeffd.Value = "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottomLeft:
		_aeffd.Value = "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case ST_PresetCameraTypeLegacyPerspectiveBottom:
		_aeffd.Value = "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeLegacyPerspectiveBottomRight:
		_aeffd.Value = "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case ST_PresetCameraTypeOrthographicFront:
		_aeffd.Value = "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypeIsometricTopUp:
		_aeffd.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case ST_PresetCameraTypeIsometricTopDown:
		_aeffd.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricBottomUp:
		_aeffd.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case ST_PresetCameraTypeIsometricBottomDown:
		_aeffd.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricLeftUp:
		_aeffd.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricLeftDown:
		_aeffd.Value = "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricRightUp:
		_aeffd.Value = "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case ST_PresetCameraTypeIsometricRightDown:
		_aeffd.Value = "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case ST_PresetCameraTypeIsometricOffAxis1Left:
		_aeffd.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Right:
		_aeffd.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis1Top:
		_aeffd.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis2Left:
		_aeffd.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Right:
		_aeffd.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis2Top:
		_aeffd.Value = "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case ST_PresetCameraTypeIsometricOffAxis3Left:
		_aeffd.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Right:
		_aeffd.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis3Bottom:
		_aeffd.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeIsometricOffAxis4Left:
		_aeffd.Value = "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Right:
		_aeffd.Value = "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case ST_PresetCameraTypeIsometricOffAxis4Bottom:
		_aeffd.Value = "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueTopLeft:
		_aeffd.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueTop:
		_aeffd.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case ST_PresetCameraTypeObliqueTopRight:
		_aeffd.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueLeft:
		_aeffd.Value = "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueRight:
		_aeffd.Value = "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypeObliqueBottomLeft:
		_aeffd.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypeObliqueBottom:
		_aeffd.Value = "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case ST_PresetCameraTypeObliqueBottomRight:
		_aeffd.Value = "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveFront:
		_aeffd.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case ST_PresetCameraTypePerspectiveLeft:
		_aeffd.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case ST_PresetCameraTypePerspectiveRight:
		_aeffd.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_PresetCameraTypePerspectiveAbove:
		_aeffd.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case ST_PresetCameraTypePerspectiveBelow:
		_aeffd.Value = "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case ST_PresetCameraTypePerspectiveAboveLeftFacing:
		_aeffd.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveAboveRightFacing:
		_aeffd.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingLeftFacing:
		_aeffd.Value = "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveContrastingRightFacing:
		_aeffd.Value = "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicLeftFacing:
		_aeffd.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicRightFacing:
		_aeffd.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing:
		_aeffd.Value = "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing:
		_aeffd.Value = "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case ST_PresetCameraTypePerspectiveRelaxed:
		_aeffd.Value = "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case ST_PresetCameraTypePerspectiveRelaxedModerately:
		_aeffd.Value = "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return _aeffd, nil
}

// ValidateWithPath validates the CT_LightRig and its children, prefixing error messages with path
func (_gggee *CT_LightRig) ValidateWithPath(path string) error {
	if _gggee.RigAttr == ST_LightRigTypeUnset {
		return _e.Errorf("\u0025\u0073\u002fR\u0069\u0067\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gbgd := _gggee.RigAttr.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0041\u0074\u0074\u0072"); _gbgd != nil {
		return _gbgd
	}
	if _gggee.DirAttr == ST_LightRigDirectionUnset {
		return _e.Errorf("\u0025\u0073\u002fD\u0069\u0072\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ggeca := _gggee.DirAttr.ValidateWithPath(path + "\u002f\u0044\u0069\u0072\u0041\u0074\u0074\u0072"); _ggeca != nil {
		return _ggeca
	}
	if _gggee.Rot != nil {
		if _fabf := _gggee.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _fabf != nil {
			return _fabf
		}
	}
	return nil
}
func (_cdac *CT_GvmlPicture) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fgdbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006e\u0076\u0050\u0069\u0063\u0050r"}}
	e.EncodeElement(_cdac.NvPicPr, _fgdbg)
	_bcdae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
	e.EncodeElement(_cdac.BlipFill, _bcdae)
	_dgca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_cdac.SpPr, _dgca)
	if _cdac.Style != nil {
		_fdddb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_cdac.Style, _fdddb)
	}
	if _cdac.ExtLst != nil {
		_edgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cdac.ExtLst, _edgc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgdbf ST_AnimationDgmOnlyBuildType) Validate() error { return _bgdbf.ValidateWithPath("") }
func (_aefbc ST_BlipCompression) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aefbc.String(), start)
}
func (_gbfcf *CT_SRgbColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cabddd := range start.Attr {
		if _cabddd.Name.Local == "\u0076\u0061\u006c" {
			_fbgab, _gebd := _cabddd.Value, error(nil)
			if _gebd != nil {
				return _gebd
			}
			_gbfcf.ValAttr = _fbgab
			continue
		}
	}
_cfegb:
	for {
		_acfaf, _bfabfb := d.Token()
		if _bfabfb != nil {
			return _bfabfb
		}
		switch _ffdbf := _acfaf.(type) {
		case _d.StartElement:
			switch _ffdbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_cbagc := NewEG_ColorTransform()
				_cbagc.Tint = NewCT_PositiveFixedPercentage()
				if _dgege := d.DecodeElement(_cbagc.Tint, &_ffdbf); _dgege != nil {
					return _dgege
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _cbagc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_cbfab := NewEG_ColorTransform()
				_cbfab.Shade = NewCT_PositiveFixedPercentage()
				if _gcbcfe := d.DecodeElement(_cbfab.Shade, &_ffdbf); _gcbcfe != nil {
					return _gcbcfe
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _cbfab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_bbgga := NewEG_ColorTransform()
				_bbgga.Comp = NewCT_ComplementTransform()
				if _dfdgg := d.DecodeElement(_bbgga.Comp, &_ffdbf); _dfdgg != nil {
					return _dfdgg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _bbgga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_gcbgd := NewEG_ColorTransform()
				_gcbgd.Inv = NewCT_InverseTransform()
				if _ffgdg := d.DecodeElement(_gcbgd.Inv, &_ffdbf); _ffgdg != nil {
					return _ffgdg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _gcbgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_fbgabc := NewEG_ColorTransform()
				_fbgabc.Gray = NewCT_GrayscaleTransform()
				if _agacd := d.DecodeElement(_fbgabc.Gray, &_ffdbf); _agacd != nil {
					return _agacd
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _fbgabc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_agdd := NewEG_ColorTransform()
				_agdd.Alpha = NewCT_PositiveFixedPercentage()
				if _bbfae := d.DecodeElement(_agdd.Alpha, &_ffdbf); _bbfae != nil {
					return _bbfae
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _agdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_gbedd := NewEG_ColorTransform()
				_gbedd.AlphaOff = NewCT_FixedPercentage()
				if _eabefb := d.DecodeElement(_gbedd.AlphaOff, &_ffdbf); _eabefb != nil {
					return _eabefb
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _gbedd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_egaga := NewEG_ColorTransform()
				_egaga.AlphaMod = NewCT_PositivePercentage()
				if _ggcac := d.DecodeElement(_egaga.AlphaMod, &_ffdbf); _ggcac != nil {
					return _ggcac
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _egaga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gaddgd := NewEG_ColorTransform()
				_gaddgd.Hue = NewCT_PositiveFixedAngle()
				if _afebe := d.DecodeElement(_gaddgd.Hue, &_ffdbf); _afebe != nil {
					return _afebe
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _gaddgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_gadad := NewEG_ColorTransform()
				_gadad.HueOff = NewCT_Angle()
				if _fafg := d.DecodeElement(_gadad.HueOff, &_ffdbf); _fafg != nil {
					return _fafg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _gadad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_afeff := NewEG_ColorTransform()
				_afeff.HueMod = NewCT_PositivePercentage()
				if _adfe := d.DecodeElement(_afeff.HueMod, &_ffdbf); _adfe != nil {
					return _adfe
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _afeff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_aafbc := NewEG_ColorTransform()
				_aafbc.Sat = NewCT_Percentage()
				if _fdccd := d.DecodeElement(_aafbc.Sat, &_ffdbf); _fdccd != nil {
					return _fdccd
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _aafbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_decd := NewEG_ColorTransform()
				_decd.SatOff = NewCT_Percentage()
				if _geagbc := d.DecodeElement(_decd.SatOff, &_ffdbf); _geagbc != nil {
					return _geagbc
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _decd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bfead := NewEG_ColorTransform()
				_bfead.SatMod = NewCT_Percentage()
				if _gggb := d.DecodeElement(_bfead.SatMod, &_ffdbf); _gggb != nil {
					return _gggb
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _bfead)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_adaed := NewEG_ColorTransform()
				_adaed.Lum = NewCT_Percentage()
				if _fgdg := d.DecodeElement(_adaed.Lum, &_ffdbf); _fgdg != nil {
					return _fgdg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _adaed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_dfcdb := NewEG_ColorTransform()
				_dfcdb.LumOff = NewCT_Percentage()
				if _cegfdcg := d.DecodeElement(_dfcdb.LumOff, &_ffdbf); _cegfdcg != nil {
					return _cegfdcg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _dfcdb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_deeb := NewEG_ColorTransform()
				_deeb.LumMod = NewCT_Percentage()
				if _caegc := d.DecodeElement(_deeb.LumMod, &_ffdbf); _caegc != nil {
					return _caegc
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _deeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_bfefca := NewEG_ColorTransform()
				_bfefca.Red = NewCT_Percentage()
				if _abdc := d.DecodeElement(_bfefca.Red, &_ffdbf); _abdc != nil {
					return _abdc
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _bfefca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_dagbb := NewEG_ColorTransform()
				_dagbb.RedOff = NewCT_Percentage()
				if _cegd := d.DecodeElement(_dagbb.RedOff, &_ffdbf); _cegd != nil {
					return _cegd
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _dagbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_efcdc := NewEG_ColorTransform()
				_efcdc.RedMod = NewCT_Percentage()
				if _fgfcf := d.DecodeElement(_efcdc.RedMod, &_ffdbf); _fgfcf != nil {
					return _fgfcf
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _efcdc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_aabcd := NewEG_ColorTransform()
				_aabcd.Green = NewCT_Percentage()
				if _acfc := d.DecodeElement(_aabcd.Green, &_ffdbf); _acfc != nil {
					return _acfc
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _aabcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_ccabd := NewEG_ColorTransform()
				_ccabd.GreenOff = NewCT_Percentage()
				if _fcfgg := d.DecodeElement(_ccabd.GreenOff, &_ffdbf); _fcfgg != nil {
					return _fcfgg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _ccabd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_fcgd := NewEG_ColorTransform()
				_fcgd.GreenMod = NewCT_Percentage()
				if _daffg := d.DecodeElement(_fcgd.GreenMod, &_ffdbf); _daffg != nil {
					return _daffg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _fcgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dfccfc := NewEG_ColorTransform()
				_dfccfc.Blue = NewCT_Percentage()
				if _fcaaf := d.DecodeElement(_dfccfc.Blue, &_ffdbf); _fcaaf != nil {
					return _fcaaf
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _dfccfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_cbfae := NewEG_ColorTransform()
				_cbfae.BlueOff = NewCT_Percentage()
				if _bdaad := d.DecodeElement(_cbfae.BlueOff, &_ffdbf); _bdaad != nil {
					return _bdaad
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _cbfae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_gcafd := NewEG_ColorTransform()
				_gcafd.BlueMod = NewCT_Percentage()
				if _agbfg := d.DecodeElement(_gcafd.BlueMod, &_ffdbf); _agbfg != nil {
					return _agbfg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _gcafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_egcbb := NewEG_ColorTransform()
				_egcbb.Gamma = NewCT_GammaTransform()
				if _dbcb := d.DecodeElement(_egcbb.Gamma, &_ffdbf); _dbcb != nil {
					return _dbcb
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _egcbb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_addf := NewEG_ColorTransform()
				_addf.InvGamma = NewCT_InverseGammaTransform()
				if _aebeg := d.DecodeElement(_addf.InvGamma, &_ffdbf); _aebeg != nil {
					return _aebeg
				}
				_gbfcf.EG_ColorTransform = append(_gbfcf.EG_ColorTransform, _addf)
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_S\u0052\u0067b\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _ffdbf.Name)
				if _agccc := d.Skip(); _agccc != nil {
					return _agccc
				}
			}
		case _d.EndElement:
			break _cfegb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositiveFixedAngle and its children, prefixing error messages with path
func (_gcagb *CT_PositiveFixedAngle) ValidateWithPath(path string) error {
	if _gcagb.ValAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _gcagb.ValAttr)
	}
	if _gcagb.ValAttr >= 21600000 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002eV\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _gcagb.ValAttr)
	}
	return nil
}
func (_dggf *CT_GvmlPictureNonVisual) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dggf.CNvPr = NewCT_NonVisualDrawingProps()
	_dggf.CNvPicPr = NewCT_NonVisualPictureProperties()
_badgd:
	for {
		_cfafab, _addc := d.Token()
		if _addc != nil {
			return _addc
		}
		switch _bdebd := _cfafab.(type) {
		case _d.StartElement:
			switch _bdebd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076P\u0072"}:
				if _cgacd := d.DecodeElement(_dggf.CNvPr, &_bdebd); _cgacd != nil {
					return _cgacd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u004e\u0076\u0050\u0069\u0063\u0050\u0072"}:
				if _effdd := d.DecodeElement(_dggf.CNvPicPr, &_bdebd); _effdd != nil {
					return _effdd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063\u0074\u0075r\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c \u0025\u0076", _bdebd.Name)
				if _fceac := d.Skip(); _fceac != nil {
					return _fceac
				}
			}
		case _d.EndElement:
			break _badgd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_BaseStyles and its children
func (_gadfc *CT_BaseStyles) Validate() error {
	return _gadfc.ValidateWithPath("\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073")
}

// ValidateWithPath validates the CT_FillProperties and its children, prefixing error messages with path
func (_aaacc *CT_FillProperties) ValidateWithPath(path string) error {
	if _aaacc.NoFill != nil {
		if _fgdf := _aaacc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fgdf != nil {
			return _fgdf
		}
	}
	if _aaacc.SolidFill != nil {
		if _aegda := _aaacc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _aegda != nil {
			return _aegda
		}
	}
	if _aaacc.GradFill != nil {
		if _baedc := _aaacc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _baedc != nil {
			return _baedc
		}
	}
	if _aaacc.BlipFill != nil {
		if _eaec := _aaacc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eaec != nil {
			return _eaec
		}
	}
	if _aaacc.PattFill != nil {
		if _cegc := _aaacc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cegc != nil {
			return _cegc
		}
	}
	if _aaacc.GrpFill != nil {
		if _cebc := _aaacc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _cebc != nil {
			return _cebc
		}
	}
	return nil
}
func (_afd *CT_AlphaFloorEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_afc, _dgc := d.Token()
		if _dgc != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0041\u006c\u0070\u0068\u0061F\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _dgc)
		}
		if _ged, _bege := _afc.(_d.EndElement); _bege && _ged.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBlipBullet and its children, prefixing error messages with path
func (_fcdec *CT_TextBlipBullet) ValidateWithPath(path string) error {
	if _dbga := _fcdec.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _dbga != nil {
		return _dbga
	}
	return nil
}
func NewCT_FillProperties() *CT_FillProperties      { _gcdf := &CT_FillProperties{}; return _gcdf }
func (_debccg ST_ColorSchemeIndex) Validate() error { return _debccg.ValidateWithPath("") }
func (_gbgaeg ST_ShapeType) Validate() error        { return _gbgaeg.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextBulletSizeFollowText and its children, prefixing error messages with path
func (_aaaae *CT_TextBulletSizeFollowText) ValidateWithPath(path string) error { return nil }

type CT_ScRgbColor struct {
	RAttr             ST_Percentage
	GAttr             ST_Percentage
	BAttr             ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}
type CT_InverseGammaTransform struct{}

func (_adgefg *ST_SystemColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_adgefg = 0
	case "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r":
		*_adgefg = 1
	case "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064":
		*_adgefg = 2
	case "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_adgefg = 3
	case "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_adgefg = 4
	case "\u006d\u0065\u006e\u0075":
		*_adgefg = 5
	case "\u0077\u0069\u006e\u0064\u006f\u0077":
		*_adgefg = 6
	case "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065":
		*_adgefg = 7
	case "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074":
		*_adgefg = 8
	case "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074":
		*_adgefg = 9
	case "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_adgefg = 10
	case "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072":
		*_adgefg = 11
	case "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072":
		*_adgefg = 12
	case "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065":
		*_adgefg = 13
	case "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t":
		*_adgefg = 14
	case "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074":
		*_adgefg = 15
	case "\u0062t\u006e\u0046\u0061\u0063\u0065":
		*_adgefg = 16
	case "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw":
		*_adgefg = 17
	case "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074":
		*_adgefg = 18
	case "\u0062t\u006e\u0054\u0065\u0078\u0074":
		*_adgefg = 19
	case "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074":
		*_adgefg = 20
	case "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_adgefg = 21
	case "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077":
		*_adgefg = 22
	case "\u0033d\u004c\u0069\u0067\u0068\u0074":
		*_adgefg = 23
	case "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074":
		*_adgefg = 24
	case "\u0069\u006e\u0066\u006f\u0042\u006b":
		*_adgefg = 25
	case "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074":
		*_adgefg = 26
	case "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e":
		*_adgefg = 27
	case "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e":
		*_adgefg = 28
	case "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074":
		*_adgefg = 29
	case "\u006de\u006e\u0075\u0042\u0061\u0072":
		*_adgefg = 30
	}
	return nil
}

type CT_FontReference struct {
	IdxAttr   ST_FontCollectionIndex
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_defdb *CT_RelativeRect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _defdb.LAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_defdb.LAttr)})
	}
	if _defdb.TAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_defdb.TAttr)})
	}
	if _defdb.RAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_defdb.RAttr)})
	}
	if _defdb.BAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _e.Sprintf("\u0025\u0076", *_defdb.BAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GradientStopList struct{ Gs []*CT_GradientStop }

func (_eaed *CT_TextBody) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eaed.BodyPr = NewCT_TextBodyProperties()
_fcacd:
	for {
		_adafg, _ggece := d.Token()
		if _ggece != nil {
			return _ggece
		}
		switch _fgecc := _adafg.(type) {
		case _d.StartElement:
			switch _fgecc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _fgbef := d.DecodeElement(_eaed.BodyPr, &_fgecc); _fgbef != nil {
					return _fgbef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_eaed.LstStyle = NewCT_TextListStyle()
				if _acggcg := d.DecodeElement(_eaed.LstStyle, &_fgecc); _acggcg != nil {
					return _acggcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070"}:
				_dddfg := NewCT_TextParagraph()
				if _bdeff := d.DecodeElement(_dddfg, &_fgecc); _bdeff != nil {
					return _bdeff
				}
				_eaed.P = append(_eaed.P, _dddfg)
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0020\u0025\u0076", _fgecc.Name)
				if _gaefcc := d.Skip(); _gaefcc != nil {
					return _gaefcc
				}
			}
		case _d.EndElement:
			break _fcacd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PatternFillProperties and its children
func (_afacf *CT_PatternFillProperties) Validate() error {
	return _afacf.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewCT_AlphaModulateEffect() *CT_AlphaModulateEffect {
	_eadg := &CT_AlphaModulateEffect{}
	_eadg.Cont = NewCT_EffectContainer()
	return _eadg
}

// ValidateWithPath validates the Graphic and its children, prefixing error messages with path
func (_bdceg *Graphic) ValidateWithPath(path string) error {
	if _gbabd := _bdceg.CT_GraphicalObject.ValidateWithPath(path); _gbabd != nil {
		return _gbabd
	}
	return nil
}
func (_gbeed ST_TextFontAlignType) String() string {
	switch _gbeed {
	case 0:
		return ""
	case 1:
		return "\u0061\u0075\u0074\u006f"
	case 2:
		return "\u0074"
	case 3:
		return "\u0063\u0074\u0072"
	case 4:
		return "\u0062\u0061\u0073\u0065"
	case 5:
		return "\u0062"
	}
	return ""
}
func NewCT_AudioCDTime() *CT_AudioCDTime { _dfbe := &CT_AudioCDTime{}; return _dfbe }
func (_gdcge *CT_PatternFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gdcge.PrstAttr != ST_PresetPatternValUnset {
		_fdfa, _dffc := _gdcge.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
		if _dffc != nil {
			return _dffc
		}
		start.Attr = append(start.Attr, _fdfa)
	}
	e.EncodeToken(start)
	if _gdcge.FgClr != nil {
		_ffdcb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_gdcge.FgClr, _ffdcb)
	}
	if _gdcge.BgClr != nil {
		_edaggf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0067\u0043\u006c\u0072"}}
		e.EncodeElement(_gdcge.BgClr, _edaggf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ebdefb ST_SchemeColorVal) String() string {
	switch _ebdefb {
	case 0:
		return ""
	case 1:
		return "\u0062\u0067\u0031"
	case 2:
		return "\u0074\u0078\u0031"
	case 3:
		return "\u0062\u0067\u0032"
	case 4:
		return "\u0074\u0078\u0032"
	case 5:
		return "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case 6:
		return "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case 7:
		return "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case 8:
		return "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case 9:
		return "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case 10:
		return "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case 11:
		return "\u0068\u006c\u0069n\u006b"
	case 12:
		return "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case 13:
		return "\u0070\u0068\u0043l\u0072"
	case 14:
		return "\u0064\u006b\u0031"
	case 15:
		return "\u006c\u0074\u0031"
	case 16:
		return "\u0064\u006b\u0032"
	case 17:
		return "\u006c\u0074\u0032"
	}
	return ""
}

type CT_InnerShadowEffect struct {
	BlurRadAttr *int64
	DistAttr    *int64
	DirAttr     *int32
	ScrgbClr    *CT_ScRgbColor
	SrgbClr     *CT_SRgbColor
	HslClr      *CT_HslColor
	SysClr      *CT_SystemColor
	SchemeClr   *CT_SchemeColor
	PrstClr     *CT_PresetColor
}

func (_beaf *CT_Color) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cage:
	for {
		_fbdc, _eead := d.Token()
		if _eead != nil {
			return _eead
		}
		switch _edag := _fbdc.(type) {
		case _d.StartElement:
			switch _edag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_beaf.ScrgbClr = NewCT_ScRgbColor()
				if _fecd := d.DecodeElement(_beaf.ScrgbClr, &_edag); _fecd != nil {
					return _fecd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_beaf.SrgbClr = NewCT_SRgbColor()
				if _eegcd := d.DecodeElement(_beaf.SrgbClr, &_edag); _eegcd != nil {
					return _eegcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_beaf.HslClr = NewCT_HslColor()
				if _agb := d.DecodeElement(_beaf.HslClr, &_edag); _agb != nil {
					return _agb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_beaf.SysClr = NewCT_SystemColor()
				if _fgbf := d.DecodeElement(_beaf.SysClr, &_edag); _fgbf != nil {
					return _fgbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_beaf.SchemeClr = NewCT_SchemeColor()
				if _bgbg := d.DecodeElement(_beaf.SchemeClr, &_edag); _bgbg != nil {
					return _bgbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_beaf.PrstClr = NewCT_PresetColor()
				if _gbccf := d.DecodeElement(_beaf.PrstClr, &_edag); _gbccf != nil {
					return _gbccf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _edag.Name)
				if _edfe := d.Skip(); _edfe != nil {
					return _edfe
				}
			}
		case _d.EndElement:
			break _cage
		case _d.CharData:
		}
	}
	return nil
}
func (_bedea *CT_TableStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bedea.StyleIdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _ggbad := range start.Attr {
		if _ggbad.Name.Local == "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de" {
			_deecf, _afgdg := _ggbad.Value, error(nil)
			if _afgdg != nil {
				return _afgdg
			}
			_bedea.StyleNameAttr = _deecf
			continue
		}
		if _ggbad.Name.Local == "\u0073t\u0079\u006c\u0065\u0049\u0064" {
			_ccfde, _geacd := _ggbad.Value, error(nil)
			if _geacd != nil {
				return _geacd
			}
			_bedea.StyleIdAttr = _ccfde
			continue
		}
	}
_cdddgd:
	for {
		_baafb, _bfebb := d.Token()
		if _bfebb != nil {
			return _bfebb
		}
		switch _ffdfb := _baafb.(type) {
		case _d.StartElement:
			switch _ffdfb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cB\u0067"}:
				_bedea.TblBg = NewCT_TableBackgroundStyle()
				if _fdbdf := d.DecodeElement(_bedea.TblBg, &_ffdfb); _fdbdf != nil {
					return _fdbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}:
				_bedea.WholeTbl = NewCT_TablePartStyle()
				if _edbdba := d.DecodeElement(_bedea.WholeTbl, &_ffdfb); _edbdba != nil {
					return _edbdba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0048"}:
				_bedea.Band1H = NewCT_TablePartStyle()
				if _fgfab := d.DecodeElement(_bedea.Band1H, &_ffdfb); _fgfab != nil {
					return _fgfab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0048"}:
				_bedea.Band2H = NewCT_TablePartStyle()
				if _bbgbcf := d.DecodeElement(_bedea.Band2H, &_ffdfb); _bbgbcf != nil {
					return _bbgbcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0031\u0056"}:
				_bedea.Band1V = NewCT_TablePartStyle()
				if _cbaga := d.DecodeElement(_bedea.Band1V, &_ffdfb); _cbaga != nil {
					return _cbaga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u006e\u0064\u0032\u0056"}:
				_bedea.Band2V = NewCT_TablePartStyle()
				if _bfagd := d.DecodeElement(_bedea.Band2V, &_ffdfb); _bfagd != nil {
					return _bfagd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}:
				_bedea.LastCol = NewCT_TablePartStyle()
				if _defcd := d.DecodeElement(_bedea.LastCol, &_ffdfb); _defcd != nil {
					return _defcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}:
				_bedea.FirstCol = NewCT_TablePartStyle()
				if _eecgc := d.DecodeElement(_bedea.FirstCol, &_ffdfb); _eecgc != nil {
					return _eecgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}:
				_bedea.LastRow = NewCT_TablePartStyle()
				if _ebadbc := d.DecodeElement(_bedea.LastRow, &_ffdfb); _ebadbc != nil {
					return _ebadbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0065\u0043\u0065\u006c\u006c"}:
				_bedea.SeCell = NewCT_TablePartStyle()
				if _egdbea := d.DecodeElement(_bedea.SeCell, &_ffdfb); _egdbea != nil {
					return _egdbea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0077\u0043\u0065\u006c\u006c"}:
				_bedea.SwCell = NewCT_TablePartStyle()
				if _eccgc := d.DecodeElement(_bedea.SwCell, &_ffdfb); _eccgc != nil {
					return _eccgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}:
				_bedea.FirstRow = NewCT_TablePartStyle()
				if _efbaf := d.DecodeElement(_bedea.FirstRow, &_ffdfb); _efbaf != nil {
					return _efbaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0065\u0043\u0065\u006c\u006c"}:
				_bedea.NeCell = NewCT_TablePartStyle()
				if _ddedf := d.DecodeElement(_bedea.NeCell, &_ffdfb); _ddedf != nil {
					return _ddedf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0077\u0043\u0065\u006c\u006c"}:
				_bedea.NwCell = NewCT_TablePartStyle()
				if _cbagf := d.DecodeElement(_bedea.NwCell, &_ffdfb); _cbagf != nil {
					return _cbagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bedea.ExtLst = NewCT_OfficeArtExtensionList()
				if _cdcfb := d.DecodeElement(_bedea.ExtLst, &_ffdfb); _cdcfb != nil {
					return _cdcfb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054a\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _ffdfb.Name)
				if _ecfgb := d.Skip(); _ecfgb != nil {
					return _ecfgb
				}
			}
		case _d.EndElement:
			break _cdddgd
		case _d.CharData:
		}
	}
	return nil
}
func (_aebeed ST_BlendMode) Validate() error { return _aebeed.ValidateWithPath("") }
func (_dafaad *ST_TextStrikeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edeefe, _agbfgd := d.Token()
	if _agbfgd != nil {
		return _agbfgd
	}
	if _ebfea, _fdegg := _edeefe.(_d.EndElement); _fdegg && _ebfea.Name == start.Name {
		*_dafaad = 1
		return nil
	}
	if _gbcg, _cbcbf := _edeefe.(_d.CharData); !_cbcbf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edeefe)
	} else {
		switch string(_gbcg) {
		case "":
			*_dafaad = 0
		case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
			*_dafaad = 1
		case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
			*_dafaad = 2
		case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
			*_dafaad = 3
		}
	}
	_edeefe, _agbfgd = d.Token()
	if _agbfgd != nil {
		return _agbfgd
	}
	if _gfccb, _ggdeg := _edeefe.(_d.EndElement); _ggdeg && _gfccb.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edeefe)
}

// Validate validates the CT_TransformEffect and its children
func (_gaec *CT_TransformEffect) Validate() error {
	return _gaec.ValidateWithPath("\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_GrayscaleEffect and its children, prefixing error messages with path
func (_gbgae *CT_GrayscaleEffect) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_WholeE2oFormatting and its children
func (_bgaee *CT_WholeE2oFormatting) Validate() error {
	return _bgaee.ValidateWithPath("C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067")
}

type CT_Cell3D struct {
	PrstMaterialAttr ST_PresetMaterialType
	Bevel            *CT_Bevel
	LightRig         *CT_LightRig
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_ShapeProperties() *CT_ShapeProperties { _dfdeg := &CT_ShapeProperties{}; return _dfdeg }

// Validate validates the CT_TextListStyle and its children
func (_begfb *CT_TextListStyle) Validate() error {
	return _begfb.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065")
}

// Validate validates the CT_GrayscaleEffect and its children
func (_fccag *CT_GrayscaleEffect) Validate() error {
	return _fccag.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074")
}

const (
	ST_LightRigDirectionUnset ST_LightRigDirection = 0
	ST_LightRigDirectionTl    ST_LightRigDirection = 1
	ST_LightRigDirectionT     ST_LightRigDirection = 2
	ST_LightRigDirectionTr    ST_LightRigDirection = 3
	ST_LightRigDirectionL     ST_LightRigDirection = 4
	ST_LightRigDirectionR     ST_LightRigDirection = 5
	ST_LightRigDirectionBl    ST_LightRigDirection = 6
	ST_LightRigDirectionB     ST_LightRigDirection = 7
	ST_LightRigDirectionBr    ST_LightRigDirection = 8
)

// ValidateWithPath validates the CT_GvmlShapeNonVisual and its children, prefixing error messages with path
func (_daade *CT_GvmlShapeNonVisual) ValidateWithPath(path string) error {
	if _ccgae := _daade.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ccgae != nil {
		return _ccgae
	}
	if _bfebf := _daade.CNvSpPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0053\u0070\u0050\u0072"); _bfebf != nil {
		return _bfebf
	}
	return nil
}
func (_ddgbf *CT_TransformEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddgbf.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.SxAttr)})
	}
	if _ddgbf.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.SyAttr)})
	}
	if _ddgbf.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.KxAttr)})
	}
	if _ddgbf.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.KyAttr)})
	}
	if _ddgbf.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.TxAttr)})
	}
	if _ddgbf.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_ddgbf.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbdd *CT_AlphaReplaceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agf := range start.Attr {
		if _agf.Name.Local == "\u0061" {
			_ffc, _eee := ParseUnionST_PositiveFixedPercentage(_agf.Value)
			if _eee != nil {
				return _eee
			}
			_fbdd.AAttr = _ffc
			continue
		}
	}
	for {
		_gff, _bdf := d.Token()
		if _bdf != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006ca\u0063\u0065\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _bdf)
		}
		if _cec, _eff := _gff.(_d.EndElement); _eff && _cec.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCellProperties and its children, prefixing error messages with path
func (_afgae *CT_TableCellProperties) ValidateWithPath(path string) error {
	if _afgae.MarLAttr != nil {
		if _dcagf := _afgae.MarLAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u004c\u0041\u0074\u0074r"); _dcagf != nil {
			return _dcagf
		}
	}
	if _afgae.MarRAttr != nil {
		if _ggaea := _afgae.MarRAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0052\u0041\u0074\u0074r"); _ggaea != nil {
			return _ggaea
		}
	}
	if _afgae.MarTAttr != nil {
		if _bcffg := _afgae.MarTAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0054\u0041\u0074\u0074r"); _bcffg != nil {
			return _bcffg
		}
	}
	if _afgae.MarBAttr != nil {
		if _dgafc := _afgae.MarBAttr.ValidateWithPath(path + "\u002fM\u0061\u0072\u0042\u0041\u0074\u0074r"); _dgafc != nil {
			return _dgafc
		}
	}
	if _dcdef := _afgae.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _dcdef != nil {
		return _dcdef
	}
	if _efafd := _afgae.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _efafd != nil {
		return _efafd
	}
	if _egebc := _afgae.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _egebc != nil {
		return _egebc
	}
	if _afgae.LnL != nil {
		if _eada := _afgae.LnL.ValidateWithPath(path + "\u002f\u004c\u006e\u004c"); _eada != nil {
			return _eada
		}
	}
	if _afgae.LnR != nil {
		if _decdf := _afgae.LnR.ValidateWithPath(path + "\u002f\u004c\u006e\u0052"); _decdf != nil {
			return _decdf
		}
	}
	if _afgae.LnT != nil {
		if _fbdde := _afgae.LnT.ValidateWithPath(path + "\u002f\u004c\u006e\u0054"); _fbdde != nil {
			return _fbdde
		}
	}
	if _afgae.LnB != nil {
		if _agfgc := _afgae.LnB.ValidateWithPath(path + "\u002f\u004c\u006e\u0042"); _agfgc != nil {
			return _agfgc
		}
	}
	if _afgae.LnTlToBr != nil {
		if _ggdg := _afgae.LnTlToBr.ValidateWithPath(path + "\u002fL\u006e\u0054\u006c\u0054\u006f\u0042r"); _ggdg != nil {
			return _ggdg
		}
	}
	if _afgae.LnBlToTr != nil {
		if _ecafc := _afgae.LnBlToTr.ValidateWithPath(path + "\u002fL\u006e\u0042\u006c\u0054\u006f\u0054r"); _ecafc != nil {
			return _ecafc
		}
	}
	if _afgae.Cell3D != nil {
		if _aaacb := _afgae.Cell3D.ValidateWithPath(path + "\u002fC\u0065\u006c\u006c\u0033\u0044"); _aaacb != nil {
			return _aaacb
		}
	}
	if _afgae.NoFill != nil {
		if _efbge := _afgae.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _efbge != nil {
			return _efbge
		}
	}
	if _afgae.SolidFill != nil {
		if _fgceb := _afgae.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fgceb != nil {
			return _fgceb
		}
	}
	if _afgae.GradFill != nil {
		if _bcebd := _afgae.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _bcebd != nil {
			return _bcebd
		}
	}
	if _afgae.BlipFill != nil {
		if _ddabc := _afgae.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ddabc != nil {
			return _ddabc
		}
	}
	if _afgae.PattFill != nil {
		if _dfgge := _afgae.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dfgge != nil {
			return _dfgge
		}
	}
	if _afgae.GrpFill != nil {
		if _dceeeg := _afgae.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dceeeg != nil {
			return _dceeeg
		}
	}
	if _afgae.Headers != nil {
		if _cdcfc := _afgae.Headers.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0065\u0072\u0073"); _cdcfc != nil {
			return _cdcfc
		}
	}
	if _afgae.ExtLst != nil {
		if _fdde := _afgae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fdde != nil {
			return _fdde
		}
	}
	return nil
}
func NewCT_AnimationDgmBuildProperties() *CT_AnimationDgmBuildProperties {
	_daed := &CT_AnimationDgmBuildProperties{}
	return _daed
}
func NewCT_FillEffect() *CT_FillEffect { _ggdbg := &CT_FillEffect{}; return _ggdbg }
func (_cfaa *CT_FillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cfaa.NoFill != nil {
		_gddff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaa.NoFill, _gddff)
	}
	if _cfaa.SolidFill != nil {
		_afdg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaa.SolidFill, _afdg)
	}
	if _cfaa.GradFill != nil {
		_bbcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaa.GradFill, _bbcb)
	}
	if _cfaa.BlipFill != nil {
		_fcbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaa.BlipFill, _fcbg)
	}
	if _cfaa.PattFill != nil {
		_fbea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_cfaa.PattFill, _fbea)
	}
	if _cfaa.GrpFill != nil {
		_fgdaf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_cfaa.GrpFill, _fgdaf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adada ST_TextHorzOverflowType) Validate() error { return _adada.ValidateWithPath("") }
func (_ggag *CT_BaseStyles) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gagb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0063\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ggag.ClrScheme, _gagb)
	_bdef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ggag.FontScheme, _bdef)
	_aebf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0066\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"}}
	e.EncodeElement(_ggag.FmtScheme, _aebf)
	if _ggag.ExtLst != nil {
		_ebe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggag.ExtLst, _ebe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_GradientFillProperties struct {
	FlipAttr         ST_TileFlipMode
	RotWithShapeAttr *bool
	GsLst            *CT_GradientStopList
	Lin              *CT_LinearShadeProperties
	Path             *CT_PathShadeProperties
	TileRect         *CT_RelativeRect
}

func (_ccgf ST_TileFlipMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ccgf.String(), start)
}

const (
	ST_AnimationChartOnlyBuildTypeUnset      ST_AnimationChartOnlyBuildType = 0
	ST_AnimationChartOnlyBuildTypeSeries     ST_AnimationChartOnlyBuildType = 1
	ST_AnimationChartOnlyBuildTypeCategory   ST_AnimationChartOnlyBuildType = 2
	ST_AnimationChartOnlyBuildTypeSeriesEl   ST_AnimationChartOnlyBuildType = 3
	ST_AnimationChartOnlyBuildTypeCategoryEl ST_AnimationChartOnlyBuildType = 4
)

func (_gdedb ST_PresetLineDashVal) String() string {
	switch _gdedb {
	case 0:
		return ""
	case 1:
		return "\u0073\u006f\u006ci\u0064"
	case 2:
		return "\u0064\u006f\u0074"
	case 3:
		return "\u0064\u0061\u0073\u0068"
	case 4:
		return "\u006c\u0067\u0044\u0061\u0073\u0068"
	case 5:
		return "\u0064a\u0073\u0068\u0044\u006f\u0074"
	case 6:
		return "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft"
	case 7:
		return "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	case 8:
		return "\u0073y\u0073\u0044\u0061\u0073\u0068"
	case 9:
		return "\u0073\u0079\u0073\u0044\u006f\u0074"
	case 10:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074"
	case 11:
		return "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074"
	}
	return ""
}

type CT_TileInfoProperties struct {
	TxAttr   *ST_Coordinate
	TyAttr   *ST_Coordinate
	SxAttr   *ST_Percentage
	SyAttr   *ST_Percentage
	FlipAttr ST_TileFlipMode
	AlgnAttr ST_RectAlignment
}

func (_aafg *CT_Path2DQuadBezierTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_egcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	for _, _ggebc := range _aafg.Pt {
		e.EncodeElement(_ggebc, _egcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dadef *ST_ChartBuildStep) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ccecg, _egcag := d.Token()
	if _egcag != nil {
		return _egcag
	}
	if _gcbee, _eaggg := _ccecg.(_d.EndElement); _eaggg && _gcbee.Name == start.Name {
		*_dadef = 1
		return nil
	}
	if _efgcg, _cceae := _ccecg.(_d.CharData); !_cceae {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ccecg)
	} else {
		switch string(_efgcg) {
		case "":
			*_dadef = 0
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dadef = 1
		case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_dadef = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_dadef = 3
		case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
			*_dadef = 4
		case "\u0061\u006c\u006c\u0050\u0074\u0073":
			*_dadef = 5
		case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
			*_dadef = 6
		}
	}
	_ccecg, _egcag = d.Token()
	if _egcag != nil {
		return _egcag
	}
	if _begea, _adfffc := _ccecg.(_d.EndElement); _adfffc && _begea.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ccecg)
}

// Validate validates the CT_TablePartStyle and its children
func (_bbffdf *CT_TablePartStyle) Validate() error {
	return _bbffdf.ValidateWithPath("\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065")
}
func (_adefa *ST_TextAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fddbce, _eaacbc := d.Token()
	if _eaacbc != nil {
		return _eaacbc
	}
	if _fgcdd, _edeeg := _fddbce.(_d.EndElement); _edeeg && _fgcdd.Name == start.Name {
		*_adefa = 1
		return nil
	}
	if _gbdc, _eedae := _fddbce.(_d.CharData); !_eedae {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fddbce)
	} else {
		switch string(_gbdc) {
		case "":
			*_adefa = 0
		case "\u006c":
			*_adefa = 1
		case "\u0063\u0074\u0072":
			*_adefa = 2
		case "\u0072":
			*_adefa = 3
		case "\u006a\u0075\u0073\u0074":
			*_adefa = 4
		case "\u006au\u0073\u0074\u004c\u006f\u0077":
			*_adefa = 5
		case "\u0064\u0069\u0073\u0074":
			*_adefa = 6
		case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
			*_adefa = 7
		}
	}
	_fddbce, _eaacbc = d.Token()
	if _eaacbc != nil {
		return _eaacbc
	}
	if _cgbae, _caege := _fddbce.(_d.EndElement); _caege && _cgbae.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fddbce)
}
func (_eeeca ST_FontCollectionIndex) ValidateWithPath(path string) error {
	switch _eeeca {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eeeca))
	}
	return nil
}

// Validate validates the CT_TablePropertiesChoice and its children
func (_dbggbb *CT_TablePropertiesChoice) Validate() error {
	return _dbggbb.ValidateWithPath("\u0043T\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0043\u0068\u006f\u0069\u0063\u0065")
}
func NewCT_Boolean() *CT_Boolean { _bfeb := &CT_Boolean{}; return _bfeb }
func (_fffcd *EG_LineFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fcadd:
	for {
		_cdebc, _bdba := d.Token()
		if _bdba != nil {
			return _bdba
		}
		switch _aeda := _cdebc.(type) {
		case _d.StartElement:
			switch _aeda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_fffcd.NoFill = NewCT_NoFillProperties()
				if _fadade := d.DecodeElement(_fffcd.NoFill, &_aeda); _fadade != nil {
					return _fadade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_fffcd.SolidFill = NewCT_SolidColorFillProperties()
				if _ffbdd := d.DecodeElement(_fffcd.SolidFill, &_aeda); _ffbdd != nil {
					return _ffbdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_fffcd.GradFill = NewCT_GradientFillProperties()
				if _cggcea := d.DecodeElement(_fffcd.GradFill, &_aeda); _cggcea != nil {
					return _cggcea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_fffcd.PattFill = NewCT_PatternFillProperties()
				if _cgfgdb := d.DecodeElement(_fffcd.PattFill, &_aeda); _cgfgdb != nil {
					return _cgfgdb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _aeda.Name)
				if _dcecg := d.Skip(); _dcecg != nil {
					return _dcecg
				}
			}
		case _d.EndElement:
			break _fcadd
		case _d.CharData:
		}
	}
	return nil
}
func (_fgbdf *Graphic) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fgbdf.CT_GraphicalObject = *NewCT_GraphicalObject()
_cbdea:
	for {
		_fegfgd, _cgeaeb := d.Token()
		if _cgeaeb != nil {
			return _cgeaeb
		}
		switch _gbabe := _fegfgd.(type) {
		case _d.StartElement:
			switch _gbabe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _dgccb := d.DecodeElement(_fgbdf.GraphicData, &_gbabe); _dgccb != nil {
					return _dgccb
				}
			default:
				_ff.Log("\u0073\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0047r\u0061\u0070\u0068\u0069\u0063\u0020\u0025\u0076", _gbabe.Name)
				if _abcfe := d.Skip(); _abcfe != nil {
					return _abcfe
				}
			}
		case _d.EndElement:
			break _cbdea
		case _d.CharData:
		}
	}
	return nil
}
func (_fbcef *CT_TableStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0079\u006c\u0065\u0049\u0064"}, Value: _e.Sprintf("\u0025\u0076", _fbcef.StyleIdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0079\u006c\u0065\u004e\u0061\u006de"}, Value: _e.Sprintf("\u0025\u0076", _fbcef.StyleNameAttr)})
	e.EncodeToken(start)
	if _fbcef.TblBg != nil {
		_ffeag := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0042\u0067"}}
		e.EncodeElement(_fbcef.TblBg, _ffeag)
	}
	if _fbcef.WholeTbl != nil {
		_gfcee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0077\u0068\u006f\u006c\u0065\u0054\u0062\u006c"}}
		e.EncodeElement(_fbcef.WholeTbl, _gfcee)
	}
	if _fbcef.Band1H != nil {
		_cggce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0048"}}
		e.EncodeElement(_fbcef.Band1H, _cggce)
	}
	if _fbcef.Band2H != nil {
		_bdgef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0048"}}
		e.EncodeElement(_fbcef.Band2H, _bdgef)
	}
	if _fbcef.Band1V != nil {
		_ebbbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0031\u0056"}}
		e.EncodeElement(_fbcef.Band1V, _ebbbe)
	}
	if _fbcef.Band2V != nil {
		_gcebf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u006e\u0064\u0032\u0056"}}
		e.EncodeElement(_fbcef.Band2V, _gcebf)
	}
	if _fbcef.LastCol != nil {
		_cafgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0043\u006fl"}}
		e.EncodeElement(_fbcef.LastCol, _cafgf)
	}
	if _fbcef.FirstCol != nil {
		_bffac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}}
		e.EncodeElement(_fbcef.FirstCol, _bffac)
	}
	if _fbcef.LastRow != nil {
		_dbfcc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0073\u0074\u0052\u006fw"}}
		e.EncodeElement(_fbcef.LastRow, _dbfcc)
	}
	if _fbcef.SeCell != nil {
		_ebfab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fbcef.SeCell, _ebfab)
	}
	if _fbcef.SwCell != nil {
		_beada := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fbcef.SwCell, _beada)
	}
	if _fbcef.FirstRow != nil {
		_efddd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}}
		e.EncodeElement(_fbcef.FirstRow, _efddd)
	}
	if _fbcef.NeCell != nil {
		_gbebb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0065\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fbcef.NeCell, _gbebb)
	}
	if _fbcef.NwCell != nil {
		_eabda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0077\u0043\u0065\u006c\u006c"}}
		e.EncodeElement(_fbcef.NwCell, _eabda)
	}
	if _fbcef.ExtLst != nil {
		_dead := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fbcef.ExtLst, _dead)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdgb *CT_GvmlConnector) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dbdd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_fdgb.NvCxnSpPr, _dbdd)
	_gfcfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_fdgb.SpPr, _gfcfd)
	if _fdgb.Style != nil {
		_efdee := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_fdgb.Style, _efdee)
	}
	if _fdgb.ExtLst != nil {
		_aefdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fdgb.ExtLst, _aefdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_LineFillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	PattFill  *CT_PatternFillProperties
}

// Validate validates the CT_PresetLineDashProperties and its children
func (_dcggba *CT_PresetLineDashProperties) Validate() error {
	return _dcggba.ValidateWithPath("C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073")
}
func (_bdbbb *CT_TextBulletSizePercent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _bdbbb.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_TintEffect struct {
	HueAttr *int32
	AmtAttr *ST_FixedPercentage
}
type CT_TableBackgroundStyle struct {
	Fill      *CT_FillProperties
	FillRef   *CT_StyleMatrixReference
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

func (_cge *CT_EmbeddedWAVAudioFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _e.Sprintf("\u0025\u0076", _cge.EmbedAttr)})
	if _cge.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cge.NameAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ddbege ST_LineEndLength) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ddbege.String(), start)
}
func (_dgabge ST_TextWrappingType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dgabge.String(), start)
}

// ST_TextSpacingPercentOrPercentString is a union type
type ST_TextSpacingPercentOrPercentString struct {
	ST_TextSpacingPercent *int32
	ST_Percentage         *string
}

func NewCT_NonVisualDrawingShapeProps() *CT_NonVisualDrawingShapeProps {
	_daae := &CT_NonVisualDrawingShapeProps{}
	return _daae
}

// Validate validates the CT_GraphicalObjectFrameLocking and its children
func (_bdaa *CT_GraphicalObjectFrameLocking) Validate() error {
	return _bdaa.ValidateWithPath("\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func NewCT_GvmlTextShapeChoice() *CT_GvmlTextShapeChoice {
	_caeeb := &CT_GvmlTextShapeChoice{}
	return _caeeb
}
func (_ggagf *CT_QuickTimeFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _e.Sprintf("\u0025\u0076", _ggagf.LinkAttr)})
	e.EncodeToken(start)
	if _ggagf.ExtLst != nil {
		_bcdag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ggagf.ExtLst, _bcdag)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FontCollection and its children, prefixing error messages with path
func (_bcde *CT_FontCollection) ValidateWithPath(path string) error {
	if _cbggc := _bcde.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _cbggc != nil {
		return _cbggc
	}
	if _gcaf := _bcde.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _gcaf != nil {
		return _gcaf
	}
	if _dcbcb := _bcde.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _dcbcb != nil {
		return _dcbcb
	}
	for _eagfb, _bddae := range _bcde.Font {
		if _cdgaf := _bddae.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0046\u006f\u006e\u0074\u005b\u0025\u0064\u005d", path, _eagfb)); _cdgaf != nil {
			return _cdgaf
		}
	}
	if _bcde.ExtLst != nil {
		if _defed := _bcde.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _defed != nil {
			return _defed
		}
	}
	return nil
}
func (_eadcb *CT_PositivePercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dfgg := range start.Attr {
		if _dfgg.Name.Local == "\u0076\u0061\u006c" {
			_bcaaa, _ggccc := ParseUnionST_PositivePercentage(_dfgg.Value)
			if _ggccc != nil {
				return _ggccc
			}
			_eadcb.ValAttr = _bcaaa
			continue
		}
	}
	for {
		_gabeg, _gafcb := d.Token()
		if _gafcb != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0050e\u0072\u0063\u0065\u006e\u0074\u0061\u0067e\u003a\u0020\u0025\u0073", _gafcb)
		}
		if _gfabb, _ffcgb := _gabeg.(_d.EndElement); _ffcgb && _gfabb.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_NonVisualDrawingProps() *CT_NonVisualDrawingProps {
	_cdeaf := &CT_NonVisualDrawingProps{}
	return _cdeaf
}

type CT_AnimationDgmElement struct {
	IdAttr      *string
	BldStepAttr ST_DgmBuildStep
}
type ST_TextHorzOverflowType byte
type CT_WholeE2oFormatting struct {
	Ln        *CT_LineProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func NewEG_Geometry() *EG_Geometry { _befbb := &EG_Geometry{}; return _befbb }

const (
	ST_LineEndTypeUnset    ST_LineEndType = 0
	ST_LineEndTypeNone     ST_LineEndType = 1
	ST_LineEndTypeTriangle ST_LineEndType = 2
	ST_LineEndTypeStealth  ST_LineEndType = 3
	ST_LineEndTypeDiamond  ST_LineEndType = 4
	ST_LineEndTypeOval     ST_LineEndType = 5
	ST_LineEndTypeArrow    ST_LineEndType = 6
)

func (_cfaf *CT_Boolean) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cfaf.ValAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_cfaf.ValAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableCell and its children
func (_ffdaf *CT_TableCell) Validate() error {
	return _ffdaf.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c")
}
func (_geadga *EG_ThemeableFillStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _geadga.Fill != nil {
		_eggad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_geadga.Fill, _eggad)
	}
	if _geadga.FillRef != nil {
		_cgeaf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_geadga.FillRef, _cgeaf)
	}
	return nil
}
func (_gfac *CT_TextListStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddbea:
	for {
		_cacfgg, _fgabc := d.Token()
		if _fgabc != nil {
			return _fgabc
		}
		switch _ecfgd := _cacfgg.(type) {
		case _d.StartElement:
			switch _ecfgd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0065\u0066\u0050\u0050\u0072"}:
				_gfac.DefPPr = NewCT_TextParagraphProperties()
				if _fdcd := d.DecodeElement(_gfac.DefPPr, &_ecfgd); _fdcd != nil {
					return _fdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0031\u0070\u0050\u0072"}:
				_gfac.Lvl1pPr = NewCT_TextParagraphProperties()
				if _ffbef := d.DecodeElement(_gfac.Lvl1pPr, &_ecfgd); _ffbef != nil {
					return _ffbef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0032\u0070\u0050\u0072"}:
				_gfac.Lvl2pPr = NewCT_TextParagraphProperties()
				if _affbg := d.DecodeElement(_gfac.Lvl2pPr, &_ecfgd); _affbg != nil {
					return _affbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0033\u0070\u0050\u0072"}:
				_gfac.Lvl3pPr = NewCT_TextParagraphProperties()
				if _cdegf := d.DecodeElement(_gfac.Lvl3pPr, &_ecfgd); _cdegf != nil {
					return _cdegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0034\u0070\u0050\u0072"}:
				_gfac.Lvl4pPr = NewCT_TextParagraphProperties()
				if _ggbgc := d.DecodeElement(_gfac.Lvl4pPr, &_ecfgd); _ggbgc != nil {
					return _ggbgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0035\u0070\u0050\u0072"}:
				_gfac.Lvl5pPr = NewCT_TextParagraphProperties()
				if _fgbcdf := d.DecodeElement(_gfac.Lvl5pPr, &_ecfgd); _fgbcdf != nil {
					return _fgbcdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0036\u0070\u0050\u0072"}:
				_gfac.Lvl6pPr = NewCT_TextParagraphProperties()
				if _dbeffd := d.DecodeElement(_gfac.Lvl6pPr, &_ecfgd); _dbeffd != nil {
					return _dbeffd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0037\u0070\u0050\u0072"}:
				_gfac.Lvl7pPr = NewCT_TextParagraphProperties()
				if _adfag := d.DecodeElement(_gfac.Lvl7pPr, &_ecfgd); _adfag != nil {
					return _adfag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0038\u0070\u0050\u0072"}:
				_gfac.Lvl8pPr = NewCT_TextParagraphProperties()
				if _eadf := d.DecodeElement(_gfac.Lvl8pPr, &_ecfgd); _eadf != nil {
					return _eadf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006cv\u006c\u0039\u0070\u0050\u0072"}:
				_gfac.Lvl9pPr = NewCT_TextParagraphProperties()
				if _dbgda := d.DecodeElement(_gfac.Lvl9pPr, &_ecfgd); _dbgda != nil {
					return _dbgda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfac.ExtLst = NewCT_OfficeArtExtensionList()
				if _bccd := d.DecodeElement(_gfac.ExtLst, &_ecfgd); _bccd != nil {
					return _bccd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025v", _ecfgd.Name)
				if _gfbff := d.Skip(); _gfbff != nil {
					return _gfbff
				}
			}
		case _d.EndElement:
			break _ddbea
		case _d.CharData:
		}
	}
	return nil
}
func (_dggd *CT_DefaultShapeDefinition) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dggd.SpPr = NewCT_ShapeProperties()
	_dggd.BodyPr = NewCT_TextBodyProperties()
	_dggd.LstStyle = NewCT_TextListStyle()
_bbbg:
	for {
		_fde, _ffdc := d.Token()
		if _ffdc != nil {
			return _ffdc
		}
		switch _eabb := _fde.(type) {
		case _d.StartElement:
			switch _eabb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _agbgb := d.DecodeElement(_dggd.SpPr, &_eabb); _agbgb != nil {
					return _agbgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0064\u0079\u0050\u0072"}:
				if _cfee := d.DecodeElement(_dggd.BodyPr, &_eabb); _cfee != nil {
					return _cfee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0073\u0074\u0053\u0074\u0079\u006c\u0065"}:
				if _daac := d.DecodeElement(_dggd.LstStyle, &_eabb); _daac != nil {
					return _daac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_dggd.Style = NewCT_ShapeStyle()
				if _deef := d.DecodeElement(_dggd.Style, &_eabb); _deef != nil {
					return _deef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dggd.ExtLst = NewCT_OfficeArtExtensionList()
				if _ccgb := d.DecodeElement(_dggd.ExtLst, &_eabb); _ccgb != nil {
					return _ccgb
				}
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0053h\u0061p\u0065\u0044\u0065\u0066\u0069\u006e\u0069\u0074i\u006fn\u0020\u0025v", _eabb.Name)
				if _ceaaf := d.Skip(); _ceaaf != nil {
					return _ceaaf
				}
			}
		case _d.EndElement:
			break _bbbg
		case _d.CharData:
		}
	}
	return nil
}

type CT_Table struct {
	TblPr   *CT_TableProperties
	TblGrid *CT_TableGrid
	Tr      []*CT_TableRow
}

func (_ebbefe *VideoFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ebbefe.CT_VideoFile = *NewCT_VideoFile()
	for _, _dfabea := range start.Attr {
		if _dfabea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dfabea.Name.Local == "\u006c\u0069\u006e\u006b" || _dfabea.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dfabea.Name.Local == "\u006c\u0069\u006e\u006b" {
			_abcgdg, _deaaa := _dfabea.Value, error(nil)
			if _deaaa != nil {
				return _deaaa
			}
			_ebbefe.LinkAttr = _abcgdg
			continue
		}
		if _dfabea.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_eedgd, _fedgc := _dfabea.Value, error(nil)
			if _fedgc != nil {
				return _fedgc
			}
			_ebbefe.ContentTypeAttr = &_eedgd
			continue
		}
	}
_ecbge:
	for {
		_bccge, _fbfeff := d.Token()
		if _fbfeff != nil {
			return _fbfeff
		}
		switch _abbee := _bccge.(type) {
		case _d.StartElement:
			switch _abbee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebbefe.ExtLst = NewCT_OfficeArtExtensionList()
				if _bfecd := d.DecodeElement(_ebbefe.ExtLst, &_abbee); _bfecd != nil {
					return _bfecd
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0056\u0069\u0064\u0065\u006f\u0046i\u006c\u0065 \u0025\u0076", _abbee.Name)
				if _eggb := d.Skip(); _eggb != nil {
					return _eggb
				}
			}
		case _d.EndElement:
			break _ecbge
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TextBulletColorFollowText() *CT_TextBulletColorFollowText {
	_bggcf := &CT_TextBulletColorFollowText{}
	return _bggcf
}
func (_fgdeed *ST_TextFontScalePercentOrPercentString) ValidateWithPath(path string) error {
	_dbgbg := []string{}
	if _fgdeed.ST_TextFontScalePercent != nil {
		_dbgbg = append(_dbgbg, "\u0053\u0054\u005fTe\u0078\u0074\u0046\u006f\u006e\u0074\u0053\u0063\u0061\u006c\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _fgdeed.ST_Percentage != nil {
		_dbgbg = append(_dbgbg, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_dbgbg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _dbgbg)
	}
	return nil
}
func NewCT_EffectList() *CT_EffectList { _ccbd := &CT_EffectList{}; return _ccbd }

// Validate validates the CT_GlowEffect and its children
func (_gccde *CT_GlowEffect) Validate() error {
	return _gccde.ValidateWithPath("\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_FillEffect and its children, prefixing error messages with path
func (_ebbf *CT_FillEffect) ValidateWithPath(path string) error {
	if _ebbf.NoFill != nil {
		if _egdbg := _ebbf.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _egdbg != nil {
			return _egdbg
		}
	}
	if _ebbf.SolidFill != nil {
		if _deec := _ebbf.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _deec != nil {
			return _deec
		}
	}
	if _ebbf.GradFill != nil {
		if _gbeeg := _ebbf.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _gbeeg != nil {
			return _gbeeg
		}
	}
	if _ebbf.BlipFill != nil {
		if _acca := _ebbf.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _acca != nil {
			return _acca
		}
	}
	if _ebbf.PattFill != nil {
		if _fcba := _ebbf.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fcba != nil {
			return _fcba
		}
	}
	if _ebbf.GrpFill != nil {
		if _dfae := _ebbf.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dfae != nil {
			return _dfae
		}
	}
	return nil
}

// Validate validates the CT_ShapeStyle and its children
func (_fdafe *CT_ShapeStyle) Validate() error {
	return _fdafe.ValidateWithPath("\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_cegbe *ST_TextHorzOverflowType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cegbe = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_cegbe = 1
	case "\u0063\u006c\u0069\u0070":
		*_cegbe = 2
	}
	return nil
}

// Validate validates the CT_LineEndProperties and its children
func (_daffc *CT_LineEndProperties) Validate() error {
	return _daffc.ValidateWithPath("C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073")
}

type CT_TextBulletSizeFollowText struct{}

func (_agegfe ST_TextShapeType) Validate() error { return _agegfe.ValidateWithPath("") }

type CT_Transform2D struct {
	RotAttr   *int32
	FlipHAttr *bool
	FlipVAttr *bool
	Off       *CT_Point2D
	Ext       *CT_PositiveSize2D
}

func NewGraphic() *Graphic {
	_fffee := &Graphic{}
	_fffee.CT_GraphicalObject = *NewCT_GraphicalObject()
	return _fffee
}
func (_gfbad *EG_TextBulletSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gfbad.BuSzTx != nil {
		_egadf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0053\u007a\u0054\u0078"}}
		e.EncodeElement(_gfbad.BuSzTx, _egadf)
	}
	if _gfbad.BuSzPct != nil {
		_fedce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0063t"}}
		e.EncodeElement(_gfbad.BuSzPct, _fedce)
	}
	if _gfbad.BuSzPts != nil {
		_dbeb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0075\u0053\u007a\u0050\u0074s"}}
		e.EncodeElement(_gfbad.BuSzPts, _dbeb)
	}
	return nil
}

type CT_SphereCoords struct {
	LatAttr int32
	LonAttr int32
	RevAttr int32
}
type CT_EffectList struct {
	Blur        *CT_BlurEffect
	FillOverlay *CT_FillOverlayEffect
	Glow        *CT_GlowEffect
	InnerShdw   *CT_InnerShadowEffect
	OuterShdw   *CT_OuterShadowEffect
	PrstShdw    *CT_PresetShadowEffect
	Reflection  *CT_ReflectionEffect
	SoftEdge    *CT_SoftEdgesEffect
}

const ST_TextBulletSizePercentPattern = "\u0030\u002a\u0028\u0028\u0032\u005b\u0035\u002d9\u005d\u0029\u007c([\u0033\u002d\u0039\u005d\u005b\u0030-\u0039\u005d\u0029\u007c\u0028\u005b\u0031\u002d\u0033\u005d\u005b\u0030\u002d\u0039\u005d[\u0030\u002d\u0039\u005d\u0029\u007c\u0034\u00300\u0029\u0025"

func (_gcfae *CT_GroupFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eaff *ST_TextVerticalType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eaff = 0
	case "\u0068\u006f\u0072\u007a":
		*_eaff = 1
	case "\u0076\u0065\u0072\u0074":
		*_eaff = 2
	case "\u0076e\u0072\u0074\u0032\u0037\u0030":
		*_eaff = 3
	case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
		*_eaff = 4
	case "\u0065\u0061\u0056\u0065\u0072\u0074":
		*_eaff = 5
	case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
		*_eaff = 6
	case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
		*_eaff = 7
	}
	return nil
}
func (_gddgca ST_PathFillMode) String() string {
	switch _gddgca {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u006e\u006f\u0072\u006d"
	case 3:
		return "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case 4:
		return "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case 5:
		return "\u0064\u0061\u0072\u006b\u0065\u006e"
	case 6:
		return "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return ""
}

// Validate validates the CT_StyleMatrix and its children
func (_dfddg *CT_StyleMatrix) Validate() error {
	return _dfddg.ValidateWithPath("\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078")
}

// Validate validates the CT_Bevel and its children
func (_afcg *CT_Bevel) Validate() error {
	return _afcg.ValidateWithPath("\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c")
}

// ValidateWithPath validates the CT_ConnectionSite and its children, prefixing error messages with path
func (_fbef *CT_ConnectionSite) ValidateWithPath(path string) error {
	if _bac := _fbef.AngAttr.ValidateWithPath(path + "\u002f\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _bac != nil {
		return _bac
	}
	if _agbc := _fbef.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _agbc != nil {
		return _agbc
	}
	return nil
}
func (_bgeaae *CT_TextShapeAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextShapeTypeUnset                     ST_TextShapeType = 0
	ST_TextShapeTypeTextNoShape               ST_TextShapeType = 1
	ST_TextShapeTypeTextPlain                 ST_TextShapeType = 2
	ST_TextShapeTypeTextStop                  ST_TextShapeType = 3
	ST_TextShapeTypeTextTriangle              ST_TextShapeType = 4
	ST_TextShapeTypeTextTriangleInverted      ST_TextShapeType = 5
	ST_TextShapeTypeTextChevron               ST_TextShapeType = 6
	ST_TextShapeTypeTextChevronInverted       ST_TextShapeType = 7
	ST_TextShapeTypeTextRingInside            ST_TextShapeType = 8
	ST_TextShapeTypeTextRingOutside           ST_TextShapeType = 9
	ST_TextShapeTypeTextArchUp                ST_TextShapeType = 10
	ST_TextShapeTypeTextArchDown              ST_TextShapeType = 11
	ST_TextShapeTypeTextCircle                ST_TextShapeType = 12
	ST_TextShapeTypeTextButton                ST_TextShapeType = 13
	ST_TextShapeTypeTextArchUpPour            ST_TextShapeType = 14
	ST_TextShapeTypeTextArchDownPour          ST_TextShapeType = 15
	ST_TextShapeTypeTextCirclePour            ST_TextShapeType = 16
	ST_TextShapeTypeTextButtonPour            ST_TextShapeType = 17
	ST_TextShapeTypeTextCurveUp               ST_TextShapeType = 18
	ST_TextShapeTypeTextCurveDown             ST_TextShapeType = 19
	ST_TextShapeTypeTextCanUp                 ST_TextShapeType = 20
	ST_TextShapeTypeTextCanDown               ST_TextShapeType = 21
	ST_TextShapeTypeTextWave1                 ST_TextShapeType = 22
	ST_TextShapeTypeTextWave2                 ST_TextShapeType = 23
	ST_TextShapeTypeTextDoubleWave1           ST_TextShapeType = 24
	ST_TextShapeTypeTextWave4                 ST_TextShapeType = 25
	ST_TextShapeTypeTextInflate               ST_TextShapeType = 26
	ST_TextShapeTypeTextDeflate               ST_TextShapeType = 27
	ST_TextShapeTypeTextInflateBottom         ST_TextShapeType = 28
	ST_TextShapeTypeTextDeflateBottom         ST_TextShapeType = 29
	ST_TextShapeTypeTextInflateTop            ST_TextShapeType = 30
	ST_TextShapeTypeTextDeflateTop            ST_TextShapeType = 31
	ST_TextShapeTypeTextDeflateInflate        ST_TextShapeType = 32
	ST_TextShapeTypeTextDeflateInflateDeflate ST_TextShapeType = 33
	ST_TextShapeTypeTextFadeRight             ST_TextShapeType = 34
	ST_TextShapeTypeTextFadeLeft              ST_TextShapeType = 35
	ST_TextShapeTypeTextFadeUp                ST_TextShapeType = 36
	ST_TextShapeTypeTextFadeDown              ST_TextShapeType = 37
	ST_TextShapeTypeTextSlantUp               ST_TextShapeType = 38
	ST_TextShapeTypeTextSlantDown             ST_TextShapeType = 39
	ST_TextShapeTypeTextCascadeUp             ST_TextShapeType = 40
	ST_TextShapeTypeTextCascadeDown           ST_TextShapeType = 41
)

// ValidateWithPath validates the CT_StretchInfoProperties and its children, prefixing error messages with path
func (_gcade *CT_StretchInfoProperties) ValidateWithPath(path string) error {
	if _gcade.FillRect != nil {
		if _ccece := _gcade.FillRect.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0052\u0065\u0063t"); _ccece != nil {
			return _ccece
		}
	}
	return nil
}

// Validate validates the CT_AlphaInverseEffect and its children
func (_bea *CT_AlphaInverseEffect) Validate() error {
	return _bea.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bbfgab ST_AnimationDgmOnlyBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gacff := _d.Attr{}
	_gacff.Name = name
	switch _bbfgab {
	case ST_AnimationDgmOnlyBuildTypeUnset:
		_gacff.Value = ""
	case ST_AnimationDgmOnlyBuildTypeOne:
		_gacff.Value = "\u006f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlOne:
		_gacff.Value = "\u006c\u0076\u006c\u004f\u006e\u0065"
	case ST_AnimationDgmOnlyBuildTypeLvlAtOnce:
		_gacff.Value = "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _gacff, nil
}
func (_fafeb ST_CompoundLine) Validate() error { return _fafeb.ValidateWithPath("") }

type CT_TableProperties struct {
	RtlAttr      *bool
	FirstRowAttr *bool
	FirstColAttr *bool
	LastRowAttr  *bool
	LastColAttr  *bool
	BandRowAttr  *bool
	BandColAttr  *bool
	NoFill       *CT_NoFillProperties
	SolidFill    *CT_SolidColorFillProperties
	GradFill     *CT_GradientFillProperties
	BlipFill     *CT_BlipFillProperties
	PattFill     *CT_PatternFillProperties
	GrpFill      *CT_GroupFillProperties
	EffectLst    *CT_EffectList
	EffectDag    *CT_EffectContainer
	Choice       *CT_TablePropertiesChoice
	ExtLst       *CT_OfficeArtExtensionList
}

func (_gbeab *CT_TextSpacing) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cdged:
	for {
		_ccdge, _ecfaeg := d.Token()
		if _ecfaeg != nil {
			return _ecfaeg
		}
		switch _dbafe := _ccdge.(type) {
		case _d.StartElement:
			switch _dbafe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0063\u0074"}:
				_gbeab.SpcPct = NewCT_TextSpacingPercent()
				if _adbef := d.DecodeElement(_gbeab.SpcPct, &_dbafe); _adbef != nil {
					return _adbef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0063\u0050\u0074\u0073"}:
				_gbeab.SpcPts = NewCT_TextSpacingPoint()
				if _dfbfe := d.DecodeElement(_gbeab.SpcPts, &_dbafe); _dfbfe != nil {
					return _dfbfe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061c\u0069n\u0067\u0020\u0025\u0076", _dbafe.Name)
				if _abebb := d.Skip(); _abebb != nil {
					return _abebb
				}
			}
		case _d.EndElement:
			break _cdged
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextCharacterProperties struct {
	KumimojiAttr   *bool
	LangAttr       *string
	AltLangAttr    *string
	SzAttr         *int32
	BAttr          *bool
	IAttr          *bool
	UAttr          ST_TextUnderlineType
	StrikeAttr     ST_TextStrikeType
	KernAttr       *int32
	CapAttr        ST_TextCapsType
	SpcAttr        *ST_TextPoint
	NormalizeHAttr *bool
	BaselineAttr   *ST_Percentage
	NoProofAttr    *bool
	DirtyAttr      *bool
	ErrAttr        *bool
	SmtCleanAttr   *bool
	SmtIdAttr      *uint32
	BmkAttr        *string
	Ln             *CT_LineProperties
	NoFill         *CT_NoFillProperties
	SolidFill      *CT_SolidColorFillProperties
	GradFill       *CT_GradientFillProperties
	BlipFill       *CT_BlipFillProperties
	PattFill       *CT_PatternFillProperties
	GrpFill        *CT_GroupFillProperties
	EffectLst      *CT_EffectList
	EffectDag      *CT_EffectContainer
	Highlight      *CT_Color
	ULnTx          *CT_TextUnderlineLineFollowText
	ULn            *CT_LineProperties
	UFillTx        *CT_TextUnderlineFillFollowText
	UFill          *CT_TextUnderlineFillGroupWrapper
	Latin          *CT_TextFont
	Ea             *CT_TextFont
	Cs             *CT_TextFont
	Sym            *CT_TextFont
	HlinkClick     *CT_Hyperlink
	HlinkMouseOver *CT_Hyperlink
	Rtl            *CT_Boolean
	ExtLst         *CT_OfficeArtExtensionList
}

func (_ceggf *ST_RectAlignment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcdgf, _acefac := d.Token()
	if _acefac != nil {
		return _acefac
	}
	if _gbfba, _gcegb := _fcdgf.(_d.EndElement); _gcegb && _gbfba.Name == start.Name {
		*_ceggf = 1
		return nil
	}
	if _bggca, _gcecb := _fcdgf.(_d.CharData); !_gcecb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcdgf)
	} else {
		switch string(_bggca) {
		case "":
			*_ceggf = 0
		case "\u0074\u006c":
			*_ceggf = 1
		case "\u0074":
			*_ceggf = 2
		case "\u0074\u0072":
			*_ceggf = 3
		case "\u006c":
			*_ceggf = 4
		case "\u0063\u0074\u0072":
			*_ceggf = 5
		case "\u0072":
			*_ceggf = 6
		case "\u0062\u006c":
			*_ceggf = 7
		case "\u0062":
			*_ceggf = 8
		case "\u0062\u0072":
			*_ceggf = 9
		}
	}
	_fcdgf, _acefac = d.Token()
	if _acefac != nil {
		return _acefac
	}
	if _fgceg, _ffaca := _fcdgf.(_d.EndElement); _ffaca && _fgceg.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcdgf)
}
func (_cdbad ST_TextUnderlineType) ValidateWithPath(path string) error {
	switch _cdbad {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdbad))
	}
	return nil
}

type CT_FlatText struct{ ZAttr *ST_Coordinate }

func (_dced *ST_TextUnderlineType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dced = 0
	case "\u006e\u006f\u006e\u0065":
		*_dced = 1
	case "\u0077\u006f\u0072d\u0073":
		*_dced = 2
	case "\u0073\u006e\u0067":
		*_dced = 3
	case "\u0064\u0062\u006c":
		*_dced = 4
	case "\u0068\u0065\u0061v\u0079":
		*_dced = 5
	case "\u0064\u006f\u0074\u0074\u0065\u0064":
		*_dced = 6
	case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
		*_dced = 7
	case "\u0064\u0061\u0073\u0068":
		*_dced = 8
	case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
		*_dced = 9
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
		*_dced = 10
	case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
		*_dced = 11
	case "\u0064o\u0074\u0044\u0061\u0073\u0068":
		*_dced = 12
	case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_dced = 13
	case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
		*_dced = 14
	case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
		*_dced = 15
	case "\u0077\u0061\u0076\u0079":
		*_dced = 16
	case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
		*_dced = 17
	case "\u0077a\u0076\u0079\u0044\u0062\u006c":
		*_dced = 18
	}
	return nil
}
func NewEG_EffectProperties() *EG_EffectProperties { _gbfcdf := &EG_EffectProperties{}; return _gbfcdf }
func (_aeaad *CT_GvmlShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_bgfbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u0076\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_aeaad.NvSpPr, _bgfbf)
	_fefc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0050\u0072"}}
	e.EncodeElement(_aeaad.SpPr, _fefc)
	if _aeaad.TxSp != nil {
		_agbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		e.EncodeElement(_aeaad.TxSp, _agbd)
	}
	if _aeaad.Style != nil {
		_gcad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aeaad.Style, _gcad)
	}
	if _aeaad.ExtLst != nil {
		_feff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aeaad.ExtLst, _feff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cege *CT_GvmlTextShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_effa:
	for {
		_bedbe, _aacd := d.Token()
		if _aacd != nil {
			return _aacd
		}
		switch _ebeb := _bedbe.(type) {
		case _d.StartElement:
			switch _ebeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_cege.UseSpRect = NewCT_GvmlUseShapeRectangle()
				if _abbga := d.DecodeElement(_cege.UseSpRect, &_ebeb); _abbga != nil {
					return _abbga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_cege.Xfrm = NewCT_Transform2D()
				if _efdef := d.DecodeElement(_cege.Xfrm, &_ebeb); _efdef != nil {
					return _efdef
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0076\u006d\u006cT\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076", _ebeb.Name)
				if _gdag := d.Skip(); _gdag != nil {
					return _gdag
				}
			}
		case _d.EndElement:
			break _effa
		case _d.CharData:
		}
	}
	return nil
}
func (_gecbd *ST_BlackWhiteMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_efaag, _eccge := d.Token()
	if _eccge != nil {
		return _eccge
	}
	if _dcfc, _dagae := _efaag.(_d.EndElement); _dagae && _dcfc.Name == start.Name {
		*_gecbd = 1
		return nil
	}
	if _aefed, _accda := _efaag.(_d.CharData); !_accda {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _efaag)
	} else {
		switch string(_aefed) {
		case "":
			*_gecbd = 0
		case "\u0063\u006c\u0072":
			*_gecbd = 1
		case "\u0061\u0075\u0074\u006f":
			*_gecbd = 2
		case "\u0067\u0072\u0061\u0079":
			*_gecbd = 3
		case "\u006c\u0074\u0047\u0072\u0061\u0079":
			*_gecbd = 4
		case "\u0069n\u0076\u0047\u0072\u0061\u0079":
			*_gecbd = 5
		case "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e":
			*_gecbd = 6
		case "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y":
			*_gecbd = 7
		case "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065":
			*_gecbd = 8
		case "\u0062\u006c\u0061c\u006b":
			*_gecbd = 9
		case "\u0077\u0068\u0069t\u0065":
			*_gecbd = 10
		case "\u0068\u0069\u0064\u0064\u0065\u006e":
			*_gecbd = 11
		}
	}
	_efaag, _eccge = d.Token()
	if _eccge != nil {
		return _eccge
	}
	if _dbdaf, _ddagda := _efaag.(_d.EndElement); _ddagda && _dbdaf.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _efaag)
}
func (_abfc ST_FontCollectionIndex) Validate() error { return _abfc.ValidateWithPath("") }

// Validate validates the CT_PositiveFixedPercentage and its children
func (_gbfec *CT_PositiveFixedPercentage) Validate() error {
	return _gbfec.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065")
}

// ValidateWithPath validates the CT_PositivePercentage and its children, prefixing error messages with path
func (_fbbae *CT_PositivePercentage) ValidateWithPath(path string) error {
	if _baeff := _fbbae.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _baeff != nil {
		return _baeff
	}
	return nil
}

type CT_ContentPartLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func (_ddada *CT_Path2DCubicBezierTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_abeeb:
	for {
		_fddfa, _cbbdf := d.Token()
		if _cbbdf != nil {
			return _cbbdf
		}
		switch _fagd := _fddfa.(type) {
		case _d.StartElement:
			switch _fagd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				_feacg := NewCT_AdjPoint2D()
				if _fbebf := d.DecodeElement(_feacg, &_fagd); _fbebf != nil {
					return _fbebf
				}
				_ddada.Pt = append(_ddada.Pt, _feacg)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0050\u0061\u0074\u00682\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072\u0054\u006f\u0020\u0025\u0076", _fagd.Name)
				if _abcae := d.Skip(); _abcae != nil {
					return _abcae
				}
			}
		case _d.EndElement:
			break _abeeb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ThemeableLineStyle and its children, prefixing error messages with path
func (_cbdbb *CT_ThemeableLineStyle) ValidateWithPath(path string) error {
	if _cbdbb.Ln != nil {
		if _gcfc := _cbdbb.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _gcfc != nil {
			return _gcfc
		}
	}
	if _cbdbb.LnRef != nil {
		if _cfbcf := _cbdbb.LnRef.ValidateWithPath(path + "\u002f\u004c\u006e\u0052\u0065\u0066"); _cfbcf != nil {
			return _cfbcf
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextNoAutofit and its children, prefixing error messages with path
func (_gdgdf *CT_TextNoAutofit) ValidateWithPath(path string) error { return nil }
func (_ddgeb *ST_PresetLineDashVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ddgeb = 0
	case "\u0073\u006f\u006ci\u0064":
		*_ddgeb = 1
	case "\u0064\u006f\u0074":
		*_ddgeb = 2
	case "\u0064\u0061\u0073\u0068":
		*_ddgeb = 3
	case "\u006c\u0067\u0044\u0061\u0073\u0068":
		*_ddgeb = 4
	case "\u0064a\u0073\u0068\u0044\u006f\u0074":
		*_ddgeb = 5
	case "\u006cg\u0044\u0061\u0073\u0068\u0044\u006ft":
		*_ddgeb = 6
	case "\u006c\u0067\u0044a\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_ddgeb = 7
	case "\u0073y\u0073\u0044\u0061\u0073\u0068":
		*_ddgeb = 8
	case "\u0073\u0079\u0073\u0044\u006f\u0074":
		*_ddgeb = 9
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074":
		*_ddgeb = 10
	case "\u0073\u0079\u0073\u0044\u0061\u0073\u0068\u0044\u006f\u0074\u0044\u006f\u0074":
		*_ddgeb = 11
	}
	return nil
}
func (_gdbcg ST_TextPoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gdbcg.ST_TextPointUnqualified != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_gdbcg.ST_TextPointUnqualified)))
	}
	if _gdbcg.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_gdbcg.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_bfgffa *ST_LightRigDirection) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bfgffa = 0
	case "\u0074\u006c":
		*_bfgffa = 1
	case "\u0074":
		*_bfgffa = 2
	case "\u0074\u0072":
		*_bfgffa = 3
	case "\u006c":
		*_bfgffa = 4
	case "\u0072":
		*_bfgffa = 5
	case "\u0062\u006c":
		*_bfgffa = 6
	case "\u0062":
		*_bfgffa = 7
	case "\u0062\u0072":
		*_bfgffa = 8
	}
	return nil
}
func (_gdca *CT_TextBlipBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ggfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
	e.EncodeElement(_gdca.Blip, _ggfc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_agga *CT_LuminanceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dace := range start.Attr {
		if _dace.Name.Local == "\u0062\u0072\u0069\u0067\u0068\u0074" {
			_beagd, _ddfab := ParseUnionST_FixedPercentage(_dace.Value)
			if _ddfab != nil {
				return _ddfab
			}
			_agga.BrightAttr = &_beagd
			continue
		}
		if _dace.Name.Local == "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074" {
			_addef, _egeaa := ParseUnionST_FixedPercentage(_dace.Value)
			if _egeaa != nil {
				return _egeaa
			}
			_agga.ContrastAttr = &_addef
			continue
		}
	}
	for {
		_ffagf, _bcbfa := d.Token()
		if _bcbfa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u004c\u0075\u006d\u0069\u006e\u0061\u006ec\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _bcbfa)
		}
		if _gebe, _gggc := _ffagf.(_d.EndElement); _gggc && _gebe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_DuotoneEffect and its children, prefixing error messages with path
func (_aege *CT_DuotoneEffect) ValidateWithPath(path string) error {
	for _cbge, _aagc := range _aege.EG_ColorChoice {
		if _bgeee := _aagc.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _cbge)); _bgeee != nil {
			return _bgeee
		}
	}
	return nil
}

type CT_Scale2D struct {
	Sx *CT_Ratio
	Sy *CT_Ratio
}

func (_gccfg *EG_OfficeArtExtensionList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gccfg.Ext != nil {
		_cbgfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		for _, _ggfbc := range _gccfg.Ext {
			e.EncodeElement(_ggfbc, _cbgfe)
		}
	}
	return nil
}

// Validate validates the CT_TableRow and its children
func (_aegcb *CT_TableRow) Validate() error {
	return _aegcb.ValidateWithPath("C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077")
}
func (_dgbde *CT_TableStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dgbde.DefAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _deegf := range start.Attr {
		if _deegf.Name.Local == "\u0064\u0065\u0066" {
			_ecgga, _aagag := _deegf.Value, error(nil)
			if _aagag != nil {
				return _aagag
			}
			_dgbde.DefAttr = _ecgga
			continue
		}
	}
_egaf:
	for {
		_cgabd, _gacdb := d.Token()
		if _gacdb != nil {
			return _gacdb
		}
		switch _aeddag := _cgabd.(type) {
		case _d.StartElement:
			switch _aeddag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_adadb := NewCT_TableStyle()
				if _ffdcga := d.DecodeElement(_adadb, &_aeddag); _ffdcga != nil {
					return _ffdcga
				}
				_dgbde.TblStyle = append(_dgbde.TblStyle, _adadb)
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aeddag.Name)
				if _efccd := d.Skip(); _efccd != nil {
					return _efccd
				}
			}
		case _d.EndElement:
			break _egaf
		case _d.CharData:
		}
	}
	return nil
}

type CT_DashStopList struct{ Ds []*CT_DashStop }

func NewCT_ColorChangeEffect() *CT_ColorChangeEffect {
	_gbcf := &CT_ColorChangeEffect{}
	_gbcf.ClrFrom = NewCT_Color()
	_gbcf.ClrTo = NewCT_Color()
	return _gbcf
}
func (_dcdf *CT_TextBodyProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _edgff := range start.Attr {
		if _edgff.Name.Local == "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074" {
			_gddab, _edefb := _cd.ParseBool(_edgff.Value)
			if _edefb != nil {
				return _edefb
			}
			_dcdf.FromWordArtAttr = &_gddab
			continue
		}
		if _edgff.Name.Local == "\u0061\u006e\u0063\u0068\u006f\u0072" {
			_dcdf.AnchorAttr.UnmarshalXMLAttr(_edgff)
			continue
		}
		if _edgff.Name.Local == "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061" {
			_fbdba, _dcaga := _cd.ParseBool(_edgff.Value)
			if _dcaga != nil {
				return _dcaga
			}
			_dcdf.SpcFirstLastParaAttr = &_fbdba
			continue
		}
		if _edgff.Name.Local == "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r" {
			_bcccfc, _gdccb := _cd.ParseBool(_edgff.Value)
			if _gdccb != nil {
				return _gdccb
			}
			_dcdf.AnchorCtrAttr = &_bcccfc
			continue
		}
		if _edgff.Name.Local == "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_dcdf.HorzOverflowAttr.UnmarshalXMLAttr(_edgff)
			continue
		}
		if _edgff.Name.Local == "\u0066o\u0072\u0063\u0065\u0041\u0041" {
			_fgggd, _ffebd := _cd.ParseBool(_edgff.Value)
			if _ffebd != nil {
				return _ffebd
			}
			_dcdf.ForceAAAttr = &_fgggd
			continue
		}
		if _edgff.Name.Local == "\u0077\u0072\u0061\u0070" {
			_dcdf.WrapAttr.UnmarshalXMLAttr(_edgff)
			continue
		}
		if _edgff.Name.Local == "\u0075p\u0072\u0069\u0067\u0068\u0074" {
			_bgadb, _cgaag := _cd.ParseBool(_edgff.Value)
			if _cgaag != nil {
				return _cgaag
			}
			_dcdf.UprightAttr = &_bgadb
			continue
		}
		if _edgff.Name.Local == "\u0074\u0049\u006e\u0073" {
			_caebef, _eeded := ParseUnionST_Coordinate32(_edgff.Value)
			if _eeded != nil {
				return _eeded
			}
			_dcdf.TInsAttr = &_caebef
			continue
		}
		if _edgff.Name.Local == "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063" {
			_agdgg, _cggdc := _cd.ParseBool(_edgff.Value)
			if _cggdc != nil {
				return _cggdc
			}
			_dcdf.CompatLnSpcAttr = &_agdgg
			continue
		}
		if _edgff.Name.Local == "\u0062\u0049\u006e\u0073" {
			_cgdfg, _bdfdc := ParseUnionST_Coordinate32(_edgff.Value)
			if _bdfdc != nil {
				return _bdfdc
			}
			_dcdf.BInsAttr = &_cgdfg
			continue
		}
		if _edgff.Name.Local == "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077" {
			_dcdf.VertOverflowAttr.UnmarshalXMLAttr(_edgff)
			continue
		}
		if _edgff.Name.Local == "\u0072\u006f\u0074" {
			_bdbdf, _bebe := _cd.ParseInt(_edgff.Value, 10, 32)
			if _bebe != nil {
				return _bebe
			}
			_edbgd := int32(_bdbdf)
			_dcdf.RotAttr = &_edbgd
			continue
		}
		if _edgff.Name.Local == "\u0073\u0070\u0063\u0043\u006f\u006c" {
			_ddeca, _bcgfbg := _cd.ParseInt(_edgff.Value, 10, 32)
			if _bcgfbg != nil {
				return _bcgfbg
			}
			_fffba := int32(_ddeca)
			_dcdf.SpcColAttr = &_fffba
			continue
		}
		if _edgff.Name.Local == "\u0076\u0065\u0072\u0074" {
			_dcdf.VertAttr.UnmarshalXMLAttr(_edgff)
			continue
		}
		if _edgff.Name.Local == "\u0072\u0049\u006e\u0073" {
			_fadad, _bfda := ParseUnionST_Coordinate32(_edgff.Value)
			if _bfda != nil {
				return _bfda
			}
			_dcdf.RInsAttr = &_fadad
			continue
		}
		if _edgff.Name.Local == "\u006e\u0075\u006d\u0043\u006f\u006c" {
			_cfcca, _aefg := _cd.ParseInt(_edgff.Value, 10, 32)
			if _aefg != nil {
				return _aefg
			}
			_cefea := int32(_cfcca)
			_dcdf.NumColAttr = &_cefea
			continue
		}
		if _edgff.Name.Local == "\u0072\u0074\u006c\u0043\u006f\u006c" {
			_edfec, _caagb := _cd.ParseBool(_edgff.Value)
			if _caagb != nil {
				return _caagb
			}
			_dcdf.RtlColAttr = &_edfec
			continue
		}
		if _edgff.Name.Local == "\u006c\u0049\u006e\u0073" {
			_dfcg, _aceac := ParseUnionST_Coordinate32(_edgff.Value)
			if _aceac != nil {
				return _aceac
			}
			_dcdf.LInsAttr = &_dfcg
			continue
		}
	}
_adddb:
	for {
		_fgfff, _fbfde := d.Token()
		if _fbfde != nil {
			return _fbfde
		}
		switch _dgabg := _fgfff.(type) {
		case _d.StartElement:
			switch _dgabg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}:
				_dcdf.PrstTxWarp = NewCT_PresetTextShape()
				if _ffdbc := d.DecodeElement(_dcdf.PrstTxWarp, &_dgabg); _ffdbc != nil {
					return _ffdbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_dcdf.NoAutofit = NewCT_TextNoAutofit()
				if _cgcg := d.DecodeElement(_dcdf.NoAutofit, &_dgabg); _cgcg != nil {
					return _cgcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_dcdf.NormAutofit = NewCT_TextNormalAutofit()
				if _cdagg := d.DecodeElement(_dcdf.NormAutofit, &_dgabg); _cdagg != nil {
					return _cdagg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_dcdf.SpAutoFit = NewCT_TextShapeAutofit()
				if _gggeb := d.DecodeElement(_dcdf.SpAutoFit, &_dgabg); _gggeb != nil {
					return _gggeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_dcdf.Scene3d = NewCT_Scene3D()
				if _fcfe := d.DecodeElement(_dcdf.Scene3d, &_dgabg); _fcfe != nil {
					return _fcfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_dcdf.Sp3d = NewCT_Shape3D()
				if _bdcgf := d.DecodeElement(_dcdf.Sp3d, &_dgabg); _bdcgf != nil {
					return _bdcgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_dcdf.FlatTx = NewCT_FlatText()
				if _bbbgf := d.DecodeElement(_dcdf.FlatTx, &_dgabg); _bbbgf != nil {
					return _bbbgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcdf.ExtLst = NewCT_OfficeArtExtensionList()
				if _bgacf := d.DecodeElement(_dcdf.ExtLst, &_dgabg); _bgacf != nil {
					return _bgacf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dgabg.Name)
				if _eeeac := d.Skip(); _eeeac != nil {
					return _eeeac
				}
			}
		case _d.EndElement:
			break _adddb
		case _d.CharData:
		}
	}
	return nil
}
func (_eedea *CT_GroupTransform2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eedea.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_eedea.RotAttr)})
	}
	if _eedea.FlipHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eedea.FlipHAttr))})
	}
	if _eedea.FlipVAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eedea.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _eedea.Off != nil {
		_fcebe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_eedea.Off, _fcebe)
	}
	if _eedea.Ext != nil {
		_faefd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_eedea.Ext, _faefd)
	}
	if _eedea.ChOff != nil {
		_afffc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u004f\u0066\u0066"}}
		e.EncodeElement(_eedea.ChOff, _afffc)
	}
	if _eedea.ChExt != nil {
		_cfbfd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0068\u0045\u0078\u0074"}}
		e.EncodeElement(_eedea.ChExt, _cfbfd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextAlignTypeUnset    ST_TextAlignType = 0
	ST_TextAlignTypeL        ST_TextAlignType = 1
	ST_TextAlignTypeCtr      ST_TextAlignType = 2
	ST_TextAlignTypeR        ST_TextAlignType = 3
	ST_TextAlignTypeJust     ST_TextAlignType = 4
	ST_TextAlignTypeJustLow  ST_TextAlignType = 5
	ST_TextAlignTypeDist     ST_TextAlignType = 6
	ST_TextAlignTypeThaiDist ST_TextAlignType = 7
)

type CT_EmptyElement struct{}

func (_agagfd ST_FontCollectionIndex) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_agagfd.String(), start)
}

const (
	ST_PresetCameraTypeUnset                               ST_PresetCameraType = 0
	ST_PresetCameraTypeLegacyObliqueTopLeft                ST_PresetCameraType = 1
	ST_PresetCameraTypeLegacyObliqueTop                    ST_PresetCameraType = 2
	ST_PresetCameraTypeLegacyObliqueTopRight               ST_PresetCameraType = 3
	ST_PresetCameraTypeLegacyObliqueLeft                   ST_PresetCameraType = 4
	ST_PresetCameraTypeLegacyObliqueFront                  ST_PresetCameraType = 5
	ST_PresetCameraTypeLegacyObliqueRight                  ST_PresetCameraType = 6
	ST_PresetCameraTypeLegacyObliqueBottomLeft             ST_PresetCameraType = 7
	ST_PresetCameraTypeLegacyObliqueBottom                 ST_PresetCameraType = 8
	ST_PresetCameraTypeLegacyObliqueBottomRight            ST_PresetCameraType = 9
	ST_PresetCameraTypeLegacyPerspectiveTopLeft            ST_PresetCameraType = 10
	ST_PresetCameraTypeLegacyPerspectiveTop                ST_PresetCameraType = 11
	ST_PresetCameraTypeLegacyPerspectiveTopRight           ST_PresetCameraType = 12
	ST_PresetCameraTypeLegacyPerspectiveLeft               ST_PresetCameraType = 13
	ST_PresetCameraTypeLegacyPerspectiveFront              ST_PresetCameraType = 14
	ST_PresetCameraTypeLegacyPerspectiveRight              ST_PresetCameraType = 15
	ST_PresetCameraTypeLegacyPerspectiveBottomLeft         ST_PresetCameraType = 16
	ST_PresetCameraTypeLegacyPerspectiveBottom             ST_PresetCameraType = 17
	ST_PresetCameraTypeLegacyPerspectiveBottomRight        ST_PresetCameraType = 18
	ST_PresetCameraTypeOrthographicFront                   ST_PresetCameraType = 19
	ST_PresetCameraTypeIsometricTopUp                      ST_PresetCameraType = 20
	ST_PresetCameraTypeIsometricTopDown                    ST_PresetCameraType = 21
	ST_PresetCameraTypeIsometricBottomUp                   ST_PresetCameraType = 22
	ST_PresetCameraTypeIsometricBottomDown                 ST_PresetCameraType = 23
	ST_PresetCameraTypeIsometricLeftUp                     ST_PresetCameraType = 24
	ST_PresetCameraTypeIsometricLeftDown                   ST_PresetCameraType = 25
	ST_PresetCameraTypeIsometricRightUp                    ST_PresetCameraType = 26
	ST_PresetCameraTypeIsometricRightDown                  ST_PresetCameraType = 27
	ST_PresetCameraTypeIsometricOffAxis1Left               ST_PresetCameraType = 28
	ST_PresetCameraTypeIsometricOffAxis1Right              ST_PresetCameraType = 29
	ST_PresetCameraTypeIsometricOffAxis1Top                ST_PresetCameraType = 30
	ST_PresetCameraTypeIsometricOffAxis2Left               ST_PresetCameraType = 31
	ST_PresetCameraTypeIsometricOffAxis2Right              ST_PresetCameraType = 32
	ST_PresetCameraTypeIsometricOffAxis2Top                ST_PresetCameraType = 33
	ST_PresetCameraTypeIsometricOffAxis3Left               ST_PresetCameraType = 34
	ST_PresetCameraTypeIsometricOffAxis3Right              ST_PresetCameraType = 35
	ST_PresetCameraTypeIsometricOffAxis3Bottom             ST_PresetCameraType = 36
	ST_PresetCameraTypeIsometricOffAxis4Left               ST_PresetCameraType = 37
	ST_PresetCameraTypeIsometricOffAxis4Right              ST_PresetCameraType = 38
	ST_PresetCameraTypeIsometricOffAxis4Bottom             ST_PresetCameraType = 39
	ST_PresetCameraTypeObliqueTopLeft                      ST_PresetCameraType = 40
	ST_PresetCameraTypeObliqueTop                          ST_PresetCameraType = 41
	ST_PresetCameraTypeObliqueTopRight                     ST_PresetCameraType = 42
	ST_PresetCameraTypeObliqueLeft                         ST_PresetCameraType = 43
	ST_PresetCameraTypeObliqueRight                        ST_PresetCameraType = 44
	ST_PresetCameraTypeObliqueBottomLeft                   ST_PresetCameraType = 45
	ST_PresetCameraTypeObliqueBottom                       ST_PresetCameraType = 46
	ST_PresetCameraTypeObliqueBottomRight                  ST_PresetCameraType = 47
	ST_PresetCameraTypePerspectiveFront                    ST_PresetCameraType = 48
	ST_PresetCameraTypePerspectiveLeft                     ST_PresetCameraType = 49
	ST_PresetCameraTypePerspectiveRight                    ST_PresetCameraType = 50
	ST_PresetCameraTypePerspectiveAbove                    ST_PresetCameraType = 51
	ST_PresetCameraTypePerspectiveBelow                    ST_PresetCameraType = 52
	ST_PresetCameraTypePerspectiveAboveLeftFacing          ST_PresetCameraType = 53
	ST_PresetCameraTypePerspectiveAboveRightFacing         ST_PresetCameraType = 54
	ST_PresetCameraTypePerspectiveContrastingLeftFacing    ST_PresetCameraType = 55
	ST_PresetCameraTypePerspectiveContrastingRightFacing   ST_PresetCameraType = 56
	ST_PresetCameraTypePerspectiveHeroicLeftFacing         ST_PresetCameraType = 57
	ST_PresetCameraTypePerspectiveHeroicRightFacing        ST_PresetCameraType = 58
	ST_PresetCameraTypePerspectiveHeroicExtremeLeftFacing  ST_PresetCameraType = 59
	ST_PresetCameraTypePerspectiveHeroicExtremeRightFacing ST_PresetCameraType = 60
	ST_PresetCameraTypePerspectiveRelaxed                  ST_PresetCameraType = 61
	ST_PresetCameraTypePerspectiveRelaxedModerately        ST_PresetCameraType = 62
)

// Validate validates the CT_TableCellProperties and its children
func (_ffde *CT_TableCellProperties) Validate() error {
	return _ffde.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_Point3D and its children, prefixing error messages with path
func (_daged *CT_Point3D) ValidateWithPath(path string) error {
	if _cadfb := _daged.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _cadfb != nil {
		return _cadfb
	}
	if _bcaf := _daged.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _bcaf != nil {
		return _bcaf
	}
	if _dgef := _daged.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _dgef != nil {
		return _dgef
	}
	return nil
}
func NewCT_SupplementalFont() *CT_SupplementalFont { _bfbfc := &CT_SupplementalFont{}; return _bfbfc }
func (_dbbfbd *ST_LineEndType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ddefb, _gcgbg := d.Token()
	if _gcgbg != nil {
		return _gcgbg
	}
	if _adaaa, _dcebd := _ddefb.(_d.EndElement); _dcebd && _adaaa.Name == start.Name {
		*_dbbfbd = 1
		return nil
	}
	if _ecdaf, _afbebg := _ddefb.(_d.CharData); !_afbebg {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ddefb)
	} else {
		switch string(_ecdaf) {
		case "":
			*_dbbfbd = 0
		case "\u006e\u006f\u006e\u0065":
			*_dbbfbd = 1
		case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_dbbfbd = 2
		case "\u0073t\u0065\u0061\u006c\u0074\u0068":
			*_dbbfbd = 3
		case "\u0064i\u0061\u006d\u006f\u006e\u0064":
			*_dbbfbd = 4
		case "\u006f\u0076\u0061\u006c":
			*_dbbfbd = 5
		case "\u0061\u0072\u0072o\u0077":
			*_dbbfbd = 6
		}
	}
	_ddefb, _gcgbg = d.Token()
	if _gcgbg != nil {
		return _gcgbg
	}
	if _afgcg, _edgffb := _ddefb.(_d.EndElement); _edgffb && _afgcg.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ddefb)
}
func NewCT_TableStyleTextStyle() *CT_TableStyleTextStyle {
	_debeb := &CT_TableStyleTextStyle{}
	return _debeb
}
func NewCT_StretchInfoProperties() *CT_StretchInfoProperties {
	_dbacb := &CT_StretchInfoProperties{}
	return _dbacb
}

// Validate validates the CT_EffectStyleItem and its children
func (_gggea *CT_EffectStyleItem) Validate() error {
	return _gggea.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d")
}
func (_bgec *CT_BlipFillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgec.DpiAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0070\u0069"}, Value: _e.Sprintf("\u0025\u0076", *_bgec.DpiAttr)})
	}
	if _bgec.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_bgec.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _bgec.Blip != nil {
		_aeeag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070"}}
		e.EncodeElement(_bgec.Blip, _aeeag)
	}
	if _bgec.SrcRect != nil {
		_abfb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0063\u0052\u0065\u0063t"}}
		e.EncodeElement(_bgec.SrcRect, _abfb)
	}
	if _bgec.Tile != nil {
		_geg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_bgec.Tile, _geg)
	}
	if _bgec.Stretch != nil {
		_dcg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_bgec.Stretch, _dcg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_abeeg *ST_Coordinate) Validate() error { return _abeeg.ValidateWithPath("") }
func (_fbgf *CT_FixedPercentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gdfg := range start.Attr {
		if _gdfg.Name.Local == "\u0076\u0061\u006c" {
			_gbccg, _dccga := ParseUnionST_FixedPercentage(_gdfg.Value)
			if _dccga != nil {
				return _dccga
			}
			_fbgf.ValAttr = _gbccg
			continue
		}
	}
	for {
		_fcfgb, _aadeg := d.Token()
		if _aadeg != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0046\u0069\u0078\u0065\u0064\u0050\u0065r\u0063\u0065\u006e\u0074\u0061\u0067\u0065\u003a\u0020\u0025\u0073", _aadeg)
		}
		if _aadca, _dfca := _fcfgb.(_d.EndElement); _dfca && _aadca.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bccce ST_TextWrappingType) ValidateWithPath(path string) error {
	switch _bccce {
	case 0, 1, 2:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bccce))
	}
	return nil
}
func (_edddd ST_TextAnchoringType) Validate() error { return _edddd.ValidateWithPath("") }
func NewCT_GraphicalObject() *CT_GraphicalObject {
	_dbed := &CT_GraphicalObject{}
	_dbed.GraphicData = NewCT_GraphicalObjectData()
	return _dbed
}
func (_cgagd *CT_TextFont) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065"}, Value: _e.Sprintf("\u0025\u0076", _cgagd.TypefaceAttr)})
	if _cgagd.PanoseAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u0061\u006e\u006f\u0073\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cgagd.PanoseAttr)})
	}
	if _cgagd.PitchFamilyAttr != ST_PitchFamilyUnset {
		_dcdcg, _bedfea := _cgagd.PitchFamilyAttr.MarshalXMLAttr(_d.Name{Local: "p\u0069\u0074\u0063\u0068\u0046\u0061\u006d\u0069\u006c\u0079"})
		if _bedfea != nil {
			return _bedfea
		}
		start.Attr = append(start.Attr, _dcdcg)
	}
	if _cgagd.CharsetAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063h\u0061\u0072\u0073\u0065\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_cgagd.CharsetAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aafaa ST_PositivePercentage) String() string {
	if _aafaa.ST_PositivePercentageDecimal != nil {
		return _e.Sprintf("\u0025\u0076", *_aafaa.ST_PositivePercentageDecimal)
	}
	if _aafaa.ST_PositivePercentage != nil {
		return _aafaa.ST_PositivePercentage.String()
	}
	return ""
}
func (_fffff *CT_ReflectionEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _efcc := range start.Attr {
		if _efcc.Name.Local == "\u0066a\u0064\u0065\u0044\u0069\u0072" {
			_bbfgf, _afged := _cd.ParseInt(_efcc.Value, 10, 32)
			if _afged != nil {
				return _afged
			}
			_gebcg := int32(_bbfgf)
			_fffff.FadeDirAttr = &_gebcg
			continue
		}
		if _efcc.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_ebce, _cbec := _cd.ParseInt(_efcc.Value, 10, 64)
			if _cbec != nil {
				return _cbec
			}
			_fffff.BlurRadAttr = &_ebce
			continue
		}
		if _efcc.Name.Local == "\u0073\u0074\u0050o\u0073" {
			_ccbeg, _dedfc := ParseUnionST_PositiveFixedPercentage(_efcc.Value)
			if _dedfc != nil {
				return _dedfc
			}
			_fffff.StPosAttr = &_ccbeg
			continue
		}
		if _efcc.Name.Local == "\u0065\u006e\u0064\u0041" {
			_gafac, _edadg := ParseUnionST_PositiveFixedPercentage(_efcc.Value)
			if _edadg != nil {
				return _edadg
			}
			_fffff.EndAAttr = &_gafac
			continue
		}
		if _efcc.Name.Local == "\u0065\u006e\u0064\u0050\u006f\u0073" {
			_gcfdd, _fgdfc := ParseUnionST_PositiveFixedPercentage(_efcc.Value)
			if _fgdfc != nil {
				return _fgdfc
			}
			_fffff.EndPosAttr = &_gcfdd
			continue
		}
		if _efcc.Name.Local == "\u0064\u0069\u0073\u0074" {
			_gagaba, _gddfb := _cd.ParseInt(_efcc.Value, 10, 64)
			if _gddfb != nil {
				return _gddfb
			}
			_fffff.DistAttr = &_gagaba
			continue
		}
		if _efcc.Name.Local == "\u0064\u0069\u0072" {
			_fdfc, _abbe := _cd.ParseInt(_efcc.Value, 10, 32)
			if _abbe != nil {
				return _abbe
			}
			_cdeabe := int32(_fdfc)
			_fffff.DirAttr = &_cdeabe
			continue
		}
		if _efcc.Name.Local == "\u0073\u0074\u0041" {
			_gagcb, _acgc := ParseUnionST_PositiveFixedPercentage(_efcc.Value)
			if _acgc != nil {
				return _acgc
			}
			_fffff.StAAttr = &_gagcb
			continue
		}
		if _efcc.Name.Local == "\u0073\u0078" {
			_fbdbd, _fdgba := ParseUnionST_Percentage(_efcc.Value)
			if _fdgba != nil {
				return _fdgba
			}
			_fffff.SxAttr = &_fbdbd
			continue
		}
		if _efcc.Name.Local == "\u0073\u0079" {
			_dafaa, _adbe := ParseUnionST_Percentage(_efcc.Value)
			if _adbe != nil {
				return _adbe
			}
			_fffff.SyAttr = &_dafaa
			continue
		}
		if _efcc.Name.Local == "\u006b\u0078" {
			_bagc, _cgafg := _cd.ParseInt(_efcc.Value, 10, 32)
			if _cgafg != nil {
				return _cgafg
			}
			_egfab := int32(_bagc)
			_fffff.KxAttr = &_egfab
			continue
		}
		if _efcc.Name.Local == "\u006b\u0079" {
			_ffbg, _eccbge := _cd.ParseInt(_efcc.Value, 10, 32)
			if _eccbge != nil {
				return _eccbge
			}
			_cdgae := int32(_ffbg)
			_fffff.KyAttr = &_cdgae
			continue
		}
		if _efcc.Name.Local == "\u0061\u006c\u0067\u006e" {
			_fffff.AlgnAttr.UnmarshalXMLAttr(_efcc)
			continue
		}
		if _efcc.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_bbdca, _fdeg := _cd.ParseBool(_efcc.Value)
			if _fdeg != nil {
				return _fdeg
			}
			_fffff.RotWithShapeAttr = &_bbdca
			continue
		}
	}
	for {
		_bdgd, _bbcd := d.Token()
		if _bbcd != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0052\u0065\u0066\u006c\u0065c\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _bbcd)
		}
		if _beae, _aaff := _bdgd.(_d.EndElement); _aaff && _beae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bdbcaa *ThemeManager) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0068\u0065\u006d\u0065\u004d\u0061n\u0061\u0067\u0065\u0072"
	return _bdbcaa.CT_EmptyElement.MarshalXML(e, start)
}
func NewVideoFile() *VideoFile {
	_efegf := &VideoFile{}
	_efegf.CT_VideoFile = *NewCT_VideoFile()
	return _efegf
}

// Validate validates the EG_TextUnderlineLine and its children
func (_gbacbe *EG_TextUnderlineLine) Validate() error {
	return _gbacbe.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065")
}
func (_gfeag ST_BlackWhiteMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gfeag.String(), start)
}
func (_gbaaf *ST_AdjAngle) Validate() error { return _gbaaf.ValidateWithPath("") }
func NewCT_AdjPoint2D() *CT_AdjPoint2D      { _ced := &CT_AdjPoint2D{}; return _ced }

// ValidateWithPath validates the CT_TableStyle and its children, prefixing error messages with path
func (_dgebbf *CT_TableStyle) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_dgebbf.StyleIdAttr) {
		return _e.Errorf("\u0025\u0073\u002fm\u002e\u0053\u0074\u0079\u006c\u0065\u0049\u0064\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _dgebbf.StyleIdAttr)
	}
	if _dgebbf.TblBg != nil {
		if _beeca := _dgebbf.TblBg.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0042\u0067"); _beeca != nil {
			return _beeca
		}
	}
	if _dgebbf.WholeTbl != nil {
		if _gecc := _dgebbf.WholeTbl.ValidateWithPath(path + "\u002fW\u0068\u006f\u006c\u0065\u0054\u0062l"); _gecc != nil {
			return _gecc
		}
	}
	if _dgebbf.Band1H != nil {
		if _fdffg := _dgebbf.Band1H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0048"); _fdffg != nil {
			return _fdffg
		}
	}
	if _dgebbf.Band2H != nil {
		if _baece := _dgebbf.Band2H.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0048"); _baece != nil {
			return _baece
		}
	}
	if _dgebbf.Band1V != nil {
		if _ceaff := _dgebbf.Band1V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0031\u0056"); _ceaff != nil {
			return _ceaff
		}
	}
	if _dgebbf.Band2V != nil {
		if _deebc := _dgebbf.Band2V.ValidateWithPath(path + "\u002fB\u0061\u006e\u0064\u0032\u0056"); _deebc != nil {
			return _deebc
		}
	}
	if _dgebbf.LastCol != nil {
		if _ageg := _dgebbf.LastCol.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0043\u006f\u006c"); _ageg != nil {
			return _ageg
		}
	}
	if _dgebbf.FirstCol != nil {
		if _dbdfa := _dgebbf.FirstCol.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0043\u006fl"); _dbdfa != nil {
			return _dbdfa
		}
	}
	if _dgebbf.LastRow != nil {
		if _bbbecb := _dgebbf.LastRow.ValidateWithPath(path + "\u002f\u004c\u0061\u0073\u0074\u0052\u006f\u0077"); _bbbecb != nil {
			return _bbbecb
		}
	}
	if _dgebbf.SeCell != nil {
		if _aaebc := _dgebbf.SeCell.ValidateWithPath(path + "\u002fS\u0065\u0043\u0065\u006c\u006c"); _aaebc != nil {
			return _aaebc
		}
	}
	if _dgebbf.SwCell != nil {
		if _cedagb := _dgebbf.SwCell.ValidateWithPath(path + "\u002fS\u0077\u0043\u0065\u006c\u006c"); _cedagb != nil {
			return _cedagb
		}
	}
	if _dgebbf.FirstRow != nil {
		if _bbdedd := _dgebbf.FirstRow.ValidateWithPath(path + "\u002fF\u0069\u0072\u0073\u0074\u0052\u006fw"); _bbdedd != nil {
			return _bbdedd
		}
	}
	if _dgebbf.NeCell != nil {
		if _gggbe := _dgebbf.NeCell.ValidateWithPath(path + "\u002fN\u0065\u0043\u0065\u006c\u006c"); _gggbe != nil {
			return _gggbe
		}
	}
	if _dgebbf.NwCell != nil {
		if _dcecd := _dgebbf.NwCell.ValidateWithPath(path + "\u002fN\u0077\u0043\u0065\u006c\u006c"); _dcecd != nil {
			return _dcecd
		}
	}
	if _dgebbf.ExtLst != nil {
		if _dfda := _dgebbf.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfda != nil {
			return _dfda
		}
	}
	return nil
}
func (_fgbcf ST_ColorSchemeIndex) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffaef := _d.Attr{}
	_ffaef.Name = name
	switch _fgbcf {
	case ST_ColorSchemeIndexUnset:
		_ffaef.Value = ""
	case ST_ColorSchemeIndexDk1:
		_ffaef.Value = "\u0064\u006b\u0031"
	case ST_ColorSchemeIndexLt1:
		_ffaef.Value = "\u006c\u0074\u0031"
	case ST_ColorSchemeIndexDk2:
		_ffaef.Value = "\u0064\u006b\u0032"
	case ST_ColorSchemeIndexLt2:
		_ffaef.Value = "\u006c\u0074\u0032"
	case ST_ColorSchemeIndexAccent1:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_ColorSchemeIndexAccent2:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_ColorSchemeIndexAccent3:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_ColorSchemeIndexAccent4:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_ColorSchemeIndexAccent5:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_ColorSchemeIndexAccent6:
		_ffaef.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_ColorSchemeIndexHlink:
		_ffaef.Value = "\u0068\u006c\u0069n\u006b"
	case ST_ColorSchemeIndexFolHlink:
		_ffaef.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	}
	return _ffaef, nil
}
func (_effcfb ST_TextPoint) String() string {
	if _effcfb.ST_TextPointUnqualified != nil {
		return _e.Sprintf("\u0025\u0076", *_effcfb.ST_TextPointUnqualified)
	}
	if _effcfb.ST_UniversalMeasure != nil {
		return _e.Sprintf("\u0025\u0076", *_effcfb.ST_UniversalMeasure)
	}
	return ""
}
func (_aaeda *ST_SchemeColorVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eggbe, _bgebb := d.Token()
	if _bgebb != nil {
		return _bgebb
	}
	if _fbfff, _cceed := _eggbe.(_d.EndElement); _cceed && _fbfff.Name == start.Name {
		*_aaeda = 1
		return nil
	}
	if _ddged, _gcbff := _eggbe.(_d.CharData); !_gcbff {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eggbe)
	} else {
		switch string(_ddged) {
		case "":
			*_aaeda = 0
		case "\u0062\u0067\u0031":
			*_aaeda = 1
		case "\u0074\u0078\u0031":
			*_aaeda = 2
		case "\u0062\u0067\u0032":
			*_aaeda = 3
		case "\u0074\u0078\u0032":
			*_aaeda = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_aaeda = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_aaeda = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_aaeda = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_aaeda = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_aaeda = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_aaeda = 10
		case "\u0068\u006c\u0069n\u006b":
			*_aaeda = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_aaeda = 12
		case "\u0070\u0068\u0043l\u0072":
			*_aaeda = 13
		case "\u0064\u006b\u0031":
			*_aaeda = 14
		case "\u006c\u0074\u0031":
			*_aaeda = 15
		case "\u0064\u006b\u0032":
			*_aaeda = 16
		case "\u006c\u0074\u0032":
			*_aaeda = 17
		}
	}
	_eggbe, _bgebb = d.Token()
	if _bgebb != nil {
		return _bgebb
	}
	if _ggeab, _cfecg := _eggbe.(_d.EndElement); _cfecg && _ggeab.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eggbe)
}
func (_dccaec *ST_TextBulletSize) ValidateWithPath(path string) error {
	_ffeg := []string{}
	if _dccaec.ST_TextBulletSizePercent != nil {
		_ffeg = append(_ffeg, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _dccaec.ST_TextBulletSizeDecimal != nil {
		_ffeg = append(_ffeg, "\u0053T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0044\u0065\u0063\u0069\u006d\u0061\u006c")
	}
	if len(_ffeg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ffeg)
	}
	return nil
}

// ValidateWithPath validates the ThemeManager and its children, prefixing error messages with path
func (_ggbab *ThemeManager) ValidateWithPath(path string) error {
	if _ccaagg := _ggbab.CT_EmptyElement.ValidateWithPath(path); _ccaagg != nil {
		return _ccaagg
	}
	return nil
}
func (_bfgf *CT_NonVisualGraphicFrameProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bfgf.GraphicFrameLocks != nil {
		_debfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072ap\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_bfgf.GraphicFrameLocks, _debfb)
	}
	if _bfgf.ExtLst != nil {
		_gbfbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bfgf.ExtLst, _gbfbb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ST_Percentage is a union type
type ST_Percentage struct {
	ST_PercentageDecimal *int32
	ST_Percentage        *string
}

func NewEG_TextGeometry() *EG_TextGeometry { _gffe := &EG_TextGeometry{}; return _gffe }

type CT_AlphaModulateFixedEffect struct{ AmtAttr *ST_PositivePercentage }

func (_ffedg *CT_TextParagraph) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ecdcfc:
	for {
		_egbfa, _gffdb := d.Token()
		if _gffdb != nil {
			return _gffdb
		}
		switch _fcebf := _egbfa.(type) {
		case _d.StartElement:
			switch _fcebf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_ffedg.PPr = NewCT_TextParagraphProperties()
				if _aecad := d.DecodeElement(_ffedg.PPr, &_fcebf); _aecad != nil {
					return _aecad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072"}:
				_cdcdf := NewEG_TextRun()
				_cdcdf.R = NewCT_RegularTextRun()
				if _cdccg := d.DecodeElement(_cdcdf.R, &_fcebf); _cdccg != nil {
					return _cdccg
				}
				_ffedg.EG_TextRun = append(_ffedg.EG_TextRun, _cdcdf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0072"}:
				_cgffd := NewEG_TextRun()
				_cgffd.Br = NewCT_TextLineBreak()
				if _affad := d.DecodeElement(_cgffd.Br, &_fcebf); _affad != nil {
					return _affad
				}
				_ffedg.EG_TextRun = append(_ffedg.EG_TextRun, _cgffd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0064"}:
				_edgfbg := NewEG_TextRun()
				_edgfbg.Fld = NewCT_TextField()
				if _cbbfc := d.DecodeElement(_edgfbg.Fld, &_fcebf); _cbbfc != nil {
					return _cbbfc
				}
				_ffedg.EG_TextRun = append(_ffedg.EG_TextRun, _edgfbg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0050\u0061\u0072\u0061\u0052\u0050\u0072"}:
				_ffedg.EndParaRPr = NewCT_TextCharacterProperties()
				if _agbcc := d.DecodeElement(_ffedg.EndParaRPr, &_fcebf); _agbcc != nil {
					return _agbcc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068\u0020\u0025v", _fcebf.Name)
				if _cafed := d.Skip(); _cafed != nil {
					return _cafed
				}
			}
		case _d.EndElement:
			break _ecdcfc
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextBulletColorFollowText struct{}

func (_dbddd *CT_OfficeStyleSheet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dbddd.ThemeElements = NewCT_BaseStyles()
	for _, _fegga := range start.Attr {
		if _fegga.Name.Local == "\u006e\u0061\u006d\u0065" {
			_ebdbf, _cegbg := _fegga.Value, error(nil)
			if _cegbg != nil {
				return _cegbg
			}
			_dbddd.NameAttr = &_ebdbf
			continue
		}
	}
_cbdaab:
	for {
		_ceafg, _cadbg := d.Token()
		if _cadbg != nil {
			return _cadbg
		}
		switch _ddgg := _ceafg.(type) {
		case _d.StartElement:
			switch _ddgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0068\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}:
				if _bcfd := d.DecodeElement(_dbddd.ThemeElements, &_ddgg); _bcfd != nil {
					return _bcfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0062\u006a\u0065\u0063\u0074\u0044\u0065\u0066a\u0075\u006c\u0074\u0073"}:
				_dbddd.ObjectDefaults = NewCT_ObjectStyleDefaults()
				if _dcfac := d.DecodeElement(_dbddd.ObjectDefaults, &_ddgg); _dcfac != nil {
					return _dcfac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065m\u0065\u004c\u0073\u0074"}:
				_dbddd.ExtraClrSchemeLst = NewCT_ColorSchemeList()
				if _fgadg := d.DecodeElement(_dbddd.ExtraClrSchemeLst, &_ddgg); _fgadg != nil {
					return _fgadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}:
				_dbddd.CustClrLst = NewCT_CustomColorList()
				if _bgfgf := d.DecodeElement(_dbddd.CustClrLst, &_ddgg); _bgfgf != nil {
					return _bgfgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dbddd.ExtLst = NewCT_OfficeArtExtensionList()
				if _ecafb := d.DecodeElement(_dbddd.ExtLst, &_ddgg); _ecafb != nil {
					return _ecafb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0053ty\u006c\u0065\u0053\u0068\u0065\u0065\u0074\u0020\u0025\u0076", _ddgg.Name)
				if _bfag := d.Skip(); _bfag != nil {
					return _bfag
				}
			}
		case _d.EndElement:
			break _cbdaab
		case _d.CharData:
		}
	}
	return nil
}
func (_eaaea *CT_GvmlTextShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eaaea.TxBody = NewCT_TextBody()
_dacba:
	for {
		_adgcg, _cbaaa := d.Token()
		if _cbaaa != nil {
			return _cbaaa
		}
		switch _bdggf := _adgcg.(type) {
		case _d.StartElement:
			switch _bdggf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				if _gdce := d.DecodeElement(_eaaea.TxBody, &_bdggf); _gdce != nil {
					return _gdce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075s\u0065\u0053\u0070\u0052\u0065\u0063t"}:
				_eaaea.Choice = NewCT_GvmlTextShapeChoice()
				if _bdbc := d.DecodeElement(&_eaaea.Choice.UseSpRect, &_bdggf); _bdbc != nil {
					return _bdbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_eaaea.Choice = NewCT_GvmlTextShapeChoice()
				if _dgadg := d.DecodeElement(&_eaaea.Choice.Xfrm, &_bdggf); _dgadg != nil {
					return _dgadg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eaaea.ExtLst = NewCT_OfficeArtExtensionList()
				if _bfefe := d.DecodeElement(_eaaea.ExtLst, &_bdggf); _bfefe != nil {
					return _bfefe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025v", _bdggf.Name)
				if _fedg := d.Skip(); _fedg != nil {
					return _fedg
				}
			}
		case _d.EndElement:
			break _dacba
		case _d.CharData:
		}
	}
	return nil
}
func (_daceg *ST_PositiveFixedPercentage) Validate() error { return _daceg.ValidateWithPath("") }

// ValidateWithPath validates the CT_SRgbColor and its children, prefixing error messages with path
func (_dbeee *CT_SRgbColor) ValidateWithPath(path string) error {
	for _gacbd, _dddc := range _dbeee.EG_ColorTransform {
		if _bdge := _dddc.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gacbd)); _bdge != nil {
			return _bdge
		}
	}
	return nil
}
func (_adefg *ST_BlipCompression) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fffce, _abeea := d.Token()
	if _abeea != nil {
		return _abeea
	}
	if _gddfa, _cbgaaf := _fffce.(_d.EndElement); _cbgaaf && _gddfa.Name == start.Name {
		*_adefg = 1
		return nil
	}
	if _eegfa, _cbgac := _fffce.(_d.CharData); !_cbgac {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fffce)
	} else {
		switch string(_eegfa) {
		case "":
			*_adefg = 0
		case "\u0065\u006d\u0061i\u006c":
			*_adefg = 1
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_adefg = 2
		case "\u0070\u0072\u0069n\u0074":
			*_adefg = 3
		case "\u0068q\u0070\u0072\u0069\u006e\u0074":
			*_adefg = 4
		case "\u006e\u006f\u006e\u0065":
			*_adefg = 5
		}
	}
	_fffce, _abeea = d.Token()
	if _abeea != nil {
		return _abeea
	}
	if _fddgd, _cdefc := _fffce.(_d.EndElement); _cdefc && _fddgd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fffce)
}
func NewCT_ContentPartLocking() *CT_ContentPartLocking {
	_agbfa := &CT_ContentPartLocking{}
	return _agbfa
}

type CT_ColorMapping struct {
	Bg1Attr      ST_ColorSchemeIndex
	Tx1Attr      ST_ColorSchemeIndex
	Bg2Attr      ST_ColorSchemeIndex
	Tx2Attr      ST_ColorSchemeIndex
	Accent1Attr  ST_ColorSchemeIndex
	Accent2Attr  ST_ColorSchemeIndex
	Accent3Attr  ST_ColorSchemeIndex
	Accent4Attr  ST_ColorSchemeIndex
	Accent5Attr  ST_ColorSchemeIndex
	Accent6Attr  ST_ColorSchemeIndex
	HlinkAttr    ST_ColorSchemeIndex
	FolHlinkAttr ST_ColorSchemeIndex
	ExtLst       *CT_OfficeArtExtensionList
}

// ValidateWithPath validates the CT_GvmlShape and its children, prefixing error messages with path
func (_cegfd *CT_GvmlShape) ValidateWithPath(path string) error {
	if _eebeb := _cegfd.NvSpPr.ValidateWithPath(path + "\u002fN\u0076\u0053\u0070\u0050\u0072"); _eebeb != nil {
		return _eebeb
	}
	if _afad := _cegfd.SpPr.ValidateWithPath(path + "\u002f\u0053\u0070P\u0072"); _afad != nil {
		return _afad
	}
	if _cegfd.TxSp != nil {
		if _debb := _cegfd.TxSp.ValidateWithPath(path + "\u002f\u0054\u0078S\u0070"); _debb != nil {
			return _debb
		}
	}
	if _cegfd.Style != nil {
		if _ffecg := _cegfd.Style.ValidateWithPath(path + "\u002f\u0053\u0074\u0079\u006c\u0065"); _ffecg != nil {
			return _ffecg
		}
	}
	if _cegfd.ExtLst != nil {
		if _adad := _cegfd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adad != nil {
			return _adad
		}
	}
	return nil
}

const (
	ST_LineEndWidthUnset ST_LineEndWidth = 0
	ST_LineEndWidthSm    ST_LineEndWidth = 1
	ST_LineEndWidthMed   ST_LineEndWidth = 2
	ST_LineEndWidthLg    ST_LineEndWidth = 3
)

func NewCT_PositivePercentage() *CT_PositivePercentage {
	_aaec := &CT_PositivePercentage{}
	return _aaec
}
func (_caedd ST_PitchFamily) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_caedd.String(), start)
}
func (_bccag ST_SystemColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bccag.String(), start)
}

// ValidateWithPath validates the EG_FillModeProperties and its children, prefixing error messages with path
func (_adbfa *EG_FillModeProperties) ValidateWithPath(path string) error {
	if _adbfa.Tile != nil {
		if _ffefg := _adbfa.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _ffefg != nil {
			return _ffefg
		}
	}
	if _adbfa.Stretch != nil {
		if _bgbbb := _adbfa.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _bgbbb != nil {
			return _bgbbb
		}
	}
	return nil
}

type CT_BaseStylesOverride struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
}

func (_geedbe *CT_Table) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _geedbe.TblPr != nil {
		_bbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0050\u0072"}}
		e.EncodeElement(_geedbe.TblPr, _bbbf)
	}
	_cfdfg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0062\u006c\u0047\u0072\u0069d"}}
	e.EncodeElement(_geedbe.TblGrid, _cfdfg)
	if _geedbe.Tr != nil {
		_cdgad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0072"}}
		for _, _fccgf := range _geedbe.Tr {
			e.EncodeElement(_fccgf, _cdgad)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dfag *CT_AnimationElementChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fef:
	for {
		_dda, _gcf := d.Token()
		if _gcf != nil {
			return _gcf
		}
		switch _aab := _dda.(type) {
		case _d.StartElement:
			switch _aab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0067\u006d"}:
				_dfag.Dgm = NewCT_AnimationDgmElement()
				if _abf := d.DecodeElement(_dfag.Dgm, &_aab); _abf != nil {
					return _abf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0061r\u0074"}:
				_dfag.Chart = NewCT_AnimationChartElement()
				if _bde := d.DecodeElement(_dfag.Chart, &_aab); _bde != nil {
					return _bde
				}
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006fn\u0045l\u0065\u006d\u0065\u006e\u0074\u0043\u0068\u006fi\u0063e\u0020\u0025v", _aab.Name)
				if _bbeb := d.Skip(); _bbeb != nil {
					return _bbeb
				}
			}
		case _d.EndElement:
			break _fef
		case _d.CharData:
		}
	}
	return nil
}
func (_edgfbf *CT_XYAdjustHandle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edgfbf.Pos = NewCT_AdjPoint2D()
	for _, _fggee := range start.Attr {
		if _fggee.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0058" {
			_dbaad, _cgfce := _fggee.Value, error(nil)
			if _cgfce != nil {
				return _cgfce
			}
			_edgfbf.GdRefXAttr = &_dbaad
			continue
		}
		if _fggee.Name.Local == "\u006d\u0069\u006e\u0058" {
			_acdeg, _geff := ParseUnionST_AdjCoordinate(_fggee.Value)
			if _geff != nil {
				return _geff
			}
			_edgfbf.MinXAttr = &_acdeg
			continue
		}
		if _fggee.Name.Local == "\u006d\u0061\u0078\u0058" {
			_cgcbb, _aeaee := ParseUnionST_AdjCoordinate(_fggee.Value)
			if _aeaee != nil {
				return _aeaee
			}
			_edgfbf.MaxXAttr = &_cgcbb
			continue
		}
		if _fggee.Name.Local == "\u0067\u0064\u0052\u0065\u0066\u0059" {
			_fbfbc, _bfcc := _fggee.Value, error(nil)
			if _bfcc != nil {
				return _bfcc
			}
			_edgfbf.GdRefYAttr = &_fbfbc
			continue
		}
		if _fggee.Name.Local == "\u006d\u0069\u006e\u0059" {
			_ffge, _cdcb := ParseUnionST_AdjCoordinate(_fggee.Value)
			if _cdcb != nil {
				return _cdcb
			}
			_edgfbf.MinYAttr = &_ffge
			continue
		}
		if _fggee.Name.Local == "\u006d\u0061\u0078\u0059" {
			_cabbg, _cbgabc := ParseUnionST_AdjCoordinate(_fggee.Value)
			if _cbgabc != nil {
				return _cbgabc
			}
			_edgfbf.MaxYAttr = &_cabbg
			continue
		}
	}
_eefea:
	for {
		_ceab, _adgbf := d.Token()
		if _adgbf != nil {
			return _adgbf
		}
		switch _aagegf := _ceab.(type) {
		case _d.StartElement:
			switch _aagegf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u006f\u0073"}:
				if _febgd := d.DecodeElement(_edgfbf.Pos, &_aagegf); _febgd != nil {
					return _febgd
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0020\u0025\u0076", _aagegf.Name)
				if _afgfcb := d.Skip(); _afgfcb != nil {
					return _afgfcb
				}
			}
		case _d.EndElement:
			break _eefea
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GroupLocking and its children
func (_adcb *CT_GroupLocking) Validate() error {
	return _adcb.ValidateWithPath("\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}

// Validate validates the CT_LinearShadeProperties and its children
func (_cfcd *CT_LinearShadeProperties) Validate() error {
	return _cfcd.ValidateWithPath("\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_bbbaff ST_TextAlignType) String() string {
	switch _bbbaff {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u006au\u0073\u0074\u004c\u006f\u0077"
	case 6:
		return "\u0064\u0069\u0073\u0074"
	case 7:
		return "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return ""
}

type CT_PresetGeometry2D struct {
	PrstAttr ST_ShapeType
	AvLst    *CT_GeomGuideList
}

// ValidateWithPath validates the CT_XYAdjustHandle and its children, prefixing error messages with path
func (_bfadg *CT_XYAdjustHandle) ValidateWithPath(path string) error {
	if _bfadg.MinXAttr != nil {
		if _dadgda := _bfadg.MinXAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0058\u0041\u0074\u0074r"); _dadgda != nil {
			return _dadgda
		}
	}
	if _bfadg.MaxXAttr != nil {
		if _fcbcf := _bfadg.MaxXAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0058\u0041\u0074\u0074r"); _fcbcf != nil {
			return _fcbcf
		}
	}
	if _bfadg.MinYAttr != nil {
		if _aaege := _bfadg.MinYAttr.ValidateWithPath(path + "\u002fM\u0069\u006e\u0059\u0041\u0074\u0074r"); _aaege != nil {
			return _aaege
		}
	}
	if _bfadg.MaxYAttr != nil {
		if _dacac := _bfadg.MaxYAttr.ValidateWithPath(path + "\u002fM\u0061\u0078\u0059\u0041\u0074\u0074r"); _dacac != nil {
			return _dacac
		}
	}
	if _fdadg := _bfadg.Pos.ValidateWithPath(path + "\u002f\u0050\u006f\u0073"); _fdadg != nil {
		return _fdadg
	}
	return nil
}

// ValidateWithPath validates the CT_EffectStyleList and its children, prefixing error messages with path
func (_cffd *CT_EffectStyleList) ValidateWithPath(path string) error {
	for _ffdd, _ccae := range _cffd.EffectStyle {
		if _gbea := _ccae.ValidateWithPath(_e.Sprintf("\u0025s\u002fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u005b\u0025\u0064\u005d", path, _ffdd)); _gbea != nil {
			return _gbea
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextCharacterProperties and its children, prefixing error messages with path
func (_dgdae *CT_TextCharacterProperties) ValidateWithPath(path string) error {
	if _dgdae.SzAttr != nil {
		if *_dgdae.SzAttr < 100 {
			return _e.Errorf("\u0025\u0073/m\u002e\u0053\u007aA\u0074\u0074\u0072\u0020mus\u0074 b\u0065\u0020\u003e\u003d\u0020\u0031\u00300 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dgdae.SzAttr)
		}
		if *_dgdae.SzAttr > 400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u007a\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_dgdae.SzAttr)
		}
	}
	if _egcfc := _dgdae.UAttr.ValidateWithPath(path + "\u002f\u0055\u0041\u0074\u0074\u0072"); _egcfc != nil {
		return _egcfc
	}
	if _faaad := _dgdae.StrikeAttr.ValidateWithPath(path + "/\u0053\u0074\u0072\u0069\u006b\u0065\u0041\u0074\u0074\u0072"); _faaad != nil {
		return _faaad
	}
	if _dgdae.KernAttr != nil {
		if *_dgdae.KernAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u004b\u0065r\u006e\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_dgdae.KernAttr)
		}
		if *_dgdae.KernAttr > 400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eK\u0065\u0072\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_dgdae.KernAttr)
		}
	}
	if _cgbgf := _dgdae.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _cgbgf != nil {
		return _cgbgf
	}
	if _dgdae.SpcAttr != nil {
		if _deebe := _dgdae.SpcAttr.ValidateWithPath(path + "\u002f\u0053\u0070\u0063\u0041\u0074\u0074\u0072"); _deebe != nil {
			return _deebe
		}
	}
	if _dgdae.BaselineAttr != nil {
		if _deafb := _dgdae.BaselineAttr.ValidateWithPath(path + "\u002f\u0042\u0061\u0073\u0065\u006c\u0069\u006e\u0065\u0041\u0074\u0074\u0072"); _deafb != nil {
			return _deafb
		}
	}
	if _dgdae.Ln != nil {
		if _bfegd := _dgdae.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _bfegd != nil {
			return _bfegd
		}
	}
	if _dgdae.NoFill != nil {
		if _faggd := _dgdae.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _faggd != nil {
			return _faggd
		}
	}
	if _dgdae.SolidFill != nil {
		if _gabda := _dgdae.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gabda != nil {
			return _gabda
		}
	}
	if _dgdae.GradFill != nil {
		if _cgdff := _dgdae.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _cgdff != nil {
			return _cgdff
		}
	}
	if _dgdae.BlipFill != nil {
		if _eaef := _dgdae.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _eaef != nil {
			return _eaef
		}
	}
	if _dgdae.PattFill != nil {
		if _cabbf := _dgdae.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _cabbf != nil {
			return _cabbf
		}
	}
	if _dgdae.GrpFill != nil {
		if _dgadb := _dgdae.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dgadb != nil {
			return _dgadb
		}
	}
	if _dgdae.EffectLst != nil {
		if _afee := _dgdae.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _afee != nil {
			return _afee
		}
	}
	if _dgdae.EffectDag != nil {
		if _abgdb := _dgdae.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _abgdb != nil {
			return _abgdb
		}
	}
	if _dgdae.Highlight != nil {
		if _egga := _dgdae.Highlight.ValidateWithPath(path + "\u002f\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"); _egga != nil {
			return _egga
		}
	}
	if _dgdae.ULnTx != nil {
		if _becfeg := _dgdae.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _becfeg != nil {
			return _becfeg
		}
	}
	if _dgdae.ULn != nil {
		if _bdgge := _dgdae.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _bdgge != nil {
			return _bdgge
		}
	}
	if _dgdae.UFillTx != nil {
		if _acgef := _dgdae.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _acgef != nil {
			return _acgef
		}
	}
	if _dgdae.UFill != nil {
		if _bcabd := _dgdae.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _bcabd != nil {
			return _bcabd
		}
	}
	if _dgdae.Latin != nil {
		if _gdaab := _dgdae.Latin.ValidateWithPath(path + "\u002f\u004c\u0061\u0074\u0069\u006e"); _gdaab != nil {
			return _gdaab
		}
	}
	if _dgdae.Ea != nil {
		if _abedc := _dgdae.Ea.ValidateWithPath(path + "\u002f\u0045\u0061"); _abedc != nil {
			return _abedc
		}
	}
	if _dgdae.Cs != nil {
		if _eecea := _dgdae.Cs.ValidateWithPath(path + "\u002f\u0043\u0073"); _eecea != nil {
			return _eecea
		}
	}
	if _dgdae.Sym != nil {
		if _cdffe := _dgdae.Sym.ValidateWithPath(path + "\u002f\u0053\u0079\u006d"); _cdffe != nil {
			return _cdffe
		}
	}
	if _dgdae.HlinkClick != nil {
		if _bdged := _dgdae.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _bdged != nil {
			return _bdged
		}
	}
	if _dgdae.HlinkMouseOver != nil {
		if _bfeef := _dgdae.HlinkMouseOver.ValidateWithPath(path + "\u002fH\u006ci\u006e\u006b\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"); _bfeef != nil {
			return _bfeef
		}
	}
	if _dgdae.Rtl != nil {
		if _babbd := _dgdae.Rtl.ValidateWithPath(path + "\u002f\u0052\u0074\u006c"); _babbd != nil {
			return _babbd
		}
	}
	if _dgdae.ExtLst != nil {
		if _feddff := _dgdae.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _feddff != nil {
			return _feddff
		}
	}
	return nil
}
func (_afacg *CT_LinearShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afacg.AngAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_afacg.AngAttr)})
	}
	if _afacg.ScaledAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0063\u0061\u006c\u0065\u0064"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_afacg.ScaledAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AudioCD and its children, prefixing error messages with path
func (_edd *CT_AudioCD) ValidateWithPath(path string) error {
	if _cbcg := _edd.St.ValidateWithPath(path + "\u002f\u0053\u0074"); _cbcg != nil {
		return _cbcg
	}
	if _ccba := _edd.End.ValidateWithPath(path + "\u002f\u0045\u006e\u0064"); _ccba != nil {
		return _ccba
	}
	if _edd.ExtLst != nil {
		if _bcce := _edd.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bcce != nil {
			return _bcce
		}
	}
	return nil
}
func (_aebbab ST_TextFontAlignType) ValidateWithPath(path string) error {
	switch _aebbab {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aebbab))
	}
	return nil
}
func (_ecddc ST_PresetMaterialType) Validate() error { return _ecddc.ValidateWithPath("") }

type CT_TextBodyProperties struct {
	RotAttr              *int32
	SpcFirstLastParaAttr *bool
	VertOverflowAttr     ST_TextVertOverflowType
	HorzOverflowAttr     ST_TextHorzOverflowType
	VertAttr             ST_TextVerticalType
	WrapAttr             ST_TextWrappingType
	LInsAttr             *ST_Coordinate32
	TInsAttr             *ST_Coordinate32
	RInsAttr             *ST_Coordinate32
	BInsAttr             *ST_Coordinate32
	NumColAttr           *int32
	SpcColAttr           *int32
	RtlColAttr           *bool
	FromWordArtAttr      *bool
	AnchorAttr           ST_TextAnchoringType
	AnchorCtrAttr        *bool
	ForceAAAttr          *bool
	UprightAttr          *bool
	CompatLnSpcAttr      *bool
	PrstTxWarp           *CT_PresetTextShape
	NoAutofit            *CT_TextNoAutofit
	NormAutofit          *CT_TextNormalAutofit
	SpAutoFit            *CT_TextShapeAutofit
	Scene3d              *CT_Scene3D
	Sp3d                 *CT_Shape3D
	FlatTx               *CT_FlatText
	ExtLst               *CT_OfficeArtExtensionList
}

func (_aebeee ST_BlipCompression) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_egbff := _d.Attr{}
	_egbff.Name = name
	switch _aebeee {
	case ST_BlipCompressionUnset:
		_egbff.Value = ""
	case ST_BlipCompressionEmail:
		_egbff.Value = "\u0065\u006d\u0061i\u006c"
	case ST_BlipCompressionScreen:
		_egbff.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlipCompressionPrint:
		_egbff.Value = "\u0070\u0072\u0069n\u0074"
	case ST_BlipCompressionHqprint:
		_egbff.Value = "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case ST_BlipCompressionNone:
		_egbff.Value = "\u006e\u006f\u006e\u0065"
	}
	return _egbff, nil
}

// ValidateWithPath validates the CT_TableCellBorderStyle and its children, prefixing error messages with path
func (_aefcba *CT_TableCellBorderStyle) ValidateWithPath(path string) error {
	if _aefcba.Left != nil {
		if _ebdgg := _aefcba.Left.ValidateWithPath(path + "\u002f\u004c\u0065f\u0074"); _ebdgg != nil {
			return _ebdgg
		}
	}
	if _aefcba.Right != nil {
		if _feaf := _aefcba.Right.ValidateWithPath(path + "\u002f\u0052\u0069\u0067\u0068\u0074"); _feaf != nil {
			return _feaf
		}
	}
	if _aefcba.Top != nil {
		if _egcf := _aefcba.Top.ValidateWithPath(path + "\u002f\u0054\u006f\u0070"); _egcf != nil {
			return _egcf
		}
	}
	if _aefcba.Bottom != nil {
		if _edgg := _aefcba.Bottom.ValidateWithPath(path + "\u002fB\u006f\u0074\u0074\u006f\u006d"); _edgg != nil {
			return _edgg
		}
	}
	if _aefcba.InsideH != nil {
		if _ecdg := _aefcba.InsideH.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0048"); _ecdg != nil {
			return _ecdg
		}
	}
	if _aefcba.InsideV != nil {
		if _abgbf := _aefcba.InsideV.ValidateWithPath(path + "\u002f\u0049\u006e\u0073\u0069\u0064\u0065\u0056"); _abgbf != nil {
			return _abgbf
		}
	}
	if _aefcba.Tl2br != nil {
		if _edbgb := _aefcba.Tl2br.ValidateWithPath(path + "\u002f\u0054\u006c\u0032\u0062\u0072"); _edbgb != nil {
			return _edbgb
		}
	}
	if _aefcba.Tr2bl != nil {
		if _ddfdd := _aefcba.Tr2bl.ValidateWithPath(path + "\u002f\u0054\u0072\u0032\u0062\u006c"); _ddfdd != nil {
			return _ddfdd
		}
	}
	if _aefcba.ExtLst != nil {
		if _degfc := _aefcba.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _degfc != nil {
			return _degfc
		}
	}
	return nil
}

const (
	ST_BlackWhiteModeUnset      ST_BlackWhiteMode = 0
	ST_BlackWhiteModeClr        ST_BlackWhiteMode = 1
	ST_BlackWhiteModeAuto       ST_BlackWhiteMode = 2
	ST_BlackWhiteModeGray       ST_BlackWhiteMode = 3
	ST_BlackWhiteModeLtGray     ST_BlackWhiteMode = 4
	ST_BlackWhiteModeInvGray    ST_BlackWhiteMode = 5
	ST_BlackWhiteModeGrayWhite  ST_BlackWhiteMode = 6
	ST_BlackWhiteModeBlackGray  ST_BlackWhiteMode = 7
	ST_BlackWhiteModeBlackWhite ST_BlackWhiteMode = 8
	ST_BlackWhiteModeBlack      ST_BlackWhiteMode = 9
	ST_BlackWhiteModeWhite      ST_BlackWhiteMode = 10
	ST_BlackWhiteModeHidden     ST_BlackWhiteMode = 11
)

func (_begag *CT_TextAutonumberBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_begag.TypeAttr = ST_TextAutonumberScheme(1)
	for _, _gcaea := range start.Attr {
		if _gcaea.Name.Local == "\u0074\u0079\u0070\u0065" {
			_begag.TypeAttr.UnmarshalXMLAttr(_gcaea)
			continue
		}
		if _gcaea.Name.Local == "\u0073t\u0061\u0072\u0074\u0041\u0074" {
			_egcga, _bcgfb := _cd.ParseInt(_gcaea.Value, 10, 32)
			if _bcgfb != nil {
				return _bcgfb
			}
			_cafbc := int32(_egcga)
			_begag.StartAtAttr = &_cafbc
			continue
		}
	}
	for {
		_dgedd, _eegba := d.Token()
		if _eegba != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078t\u0041\u0075\u0074\u006f\u006e\u0075\u006db\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074\u003a\u0020%\u0073", _eegba)
		}
		if _gfgf, _cbgeb := _dgedd.(_d.EndElement); _cbgeb && _gfgf.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_PresetColor and its children
func (_gdeed *CT_PresetColor) Validate() error {
	return _gdeed.ValidateWithPath("\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072")
}

type CT_Backdrop struct {
	Anchor *CT_Point3D
	Norm   *CT_Vector3D
	Up     *CT_Vector3D
	ExtLst *CT_OfficeArtExtensionList
}
type CT_GvmlShapeNonVisual struct {
	CNvPr   *CT_NonVisualDrawingProps
	CNvSpPr *CT_NonVisualDrawingShapeProps
}
type CT_DefaultShapeDefinition struct {
	SpPr     *CT_ShapeProperties
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

// Validate validates the CT_LightRig and its children
func (_abeee *CT_LightRig) Validate() error {
	return _abeee.ValidateWithPath("C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067")
}
func NewCT_HslColor() *CT_HslColor { _bdabf := &CT_HslColor{}; _bdabf.HueAttr = 0; return _bdabf }

// Validate validates the CT_GradientStopList and its children
func (_eaeae *CT_GradientStopList) Validate() error {
	return _eaeae.ValidateWithPath("\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074")
}

type CT_PositiveFixedAngle struct{ ValAttr int32 }
type CT_TablePartStyle struct {
	TcTxStyle *CT_TableStyleTextStyle
	TcStyle   *CT_TableStyleCellStyle
}

func NewCT_CustomColor() *CT_CustomColor { _cgfbb := &CT_CustomColor{}; return _cgfbb }

// Validate validates the CT_ThemeableLineStyle and its children
func (_ccffc *CT_ThemeableLineStyle) Validate() error {
	return _ccffc.ValidateWithPath("C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065")
}
func (_fgdga ST_ColorSchemeIndex) ValidateWithPath(path string) error {
	switch _fgdga {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgdga))
	}
	return nil
}

type CT_GvmlPicture struct {
	NvPicPr  *CT_GvmlPictureNonVisual
	BlipFill *CT_BlipFillProperties
	SpPr     *CT_ShapeProperties
	Style    *CT_ShapeStyle
	ExtLst   *CT_OfficeArtExtensionList
}

func (_dfacc *CT_PositiveFixedAngle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfacc.ValAttr = 0
	for _, _dgdff := range start.Attr {
		if _dgdff.Name.Local == "\u0076\u0061\u006c" {
			_egcg, _ccfab := _cd.ParseInt(_dgdff.Value, 10, 32)
			if _ccfab != nil {
				return _ccfab
			}
			_dfacc.ValAttr = int32(_egcg)
			continue
		}
	}
	for {
		_bgead, _dadac := d.Token()
		if _dadac != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0046i\u0078\u0065\u0064\u0041\u006e\u0067\u006ce\u003a\u0020\u0025\u0073", _dadac)
		}
		if _caaec, _bfdd := _bgead.(_d.EndElement); _bfdd && _caaec.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GvmlUseShapeRectangle struct{}

func (_bfgd ST_TextAutonumberScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bfgd.String(), start)
}

// Validate validates the CT_RegularTextRun and its children
func (_efggd *CT_RegularTextRun) Validate() error {
	return _efggd.ValidateWithPath("\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e")
}
func NewCT_EffectStyleItem() *CT_EffectStyleItem { _dfde := &CT_EffectStyleItem{}; return _dfde }

// Validate validates the CT_FixedPercentage and its children
func (_eaeag *CT_FixedPercentage) Validate() error {
	return _eaeag.ValidateWithPath("\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065")
}

// Validate validates the CT_GrayscaleTransform and its children
func (_faccb *CT_GrayscaleTransform) Validate() error {
	return _faccb.ValidateWithPath("C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d")
}
func (_dbfc *CT_Camera) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_afdfa, _ffcg := _dbfc.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _ffcg != nil {
		return _ffcg
	}
	start.Attr = append(start.Attr, _afdfa)
	if _dbfc.FovAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006f\u0076"}, Value: _e.Sprintf("\u0025\u0076", *_dbfc.FovAttr)})
	}
	if _dbfc.ZoomAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a\u006f\u006f\u006d"}, Value: _e.Sprintf("\u0025\u0076", *_dbfc.ZoomAttr)})
	}
	e.EncodeToken(start)
	if _dbfc.Rot != nil {
		_fdbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_dbfc.Rot, _fdbf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_TextUnderlineFill and its children
func (_cgaced *EG_TextUnderlineFill) Validate() error {
	return _cgaced.ValidateWithPath("E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c")
}
func (_gcfg *CT_TableRow) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _e.Sprintf("\u0025\u0076", _gcfg.HAttr)})
	e.EncodeToken(start)
	if _gcfg.Tc != nil {
		_egfd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0063"}}
		for _, _fdabf := range _gcfg.Tc {
			e.EncodeElement(_fdabf, _egfd)
		}
	}
	if _gcfg.ExtLst != nil {
		_abbeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gcfg.ExtLst, _abbeb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Shape3D() *CT_Shape3D { _fefcg := &CT_Shape3D{}; return _fefcg }
func (_dbedf *ST_TextAnchoringType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dbedf = 0
	case "\u0074":
		*_dbedf = 1
	case "\u0063\u0074\u0072":
		*_dbedf = 2
	case "\u0062":
		*_dbedf = 3
	case "\u006a\u0075\u0073\u0074":
		*_dbedf = 4
	case "\u0064\u0069\u0073\u0074":
		*_dbedf = 5
	}
	return nil
}
func NewCT_EffectProperties() *CT_EffectProperties { _bafe := &CT_EffectProperties{}; return _bafe }

type CT_TextBulletSizePercent struct{ ValAttr string }

func (_ebagd ST_PathShadeType) String() string {
	switch _ebagd {
	case 0:
		return ""
	case 1:
		return "\u0073\u0068\u0061p\u0065"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0072\u0065\u0063\u0074"
	}
	return ""
}

// ValidateWithPath validates the Theme and its children, prefixing error messages with path
func (_feddgd *Theme) ValidateWithPath(path string) error {
	if _egdbb := _feddgd.CT_OfficeStyleSheet.ValidateWithPath(path); _egdbb != nil {
		return _egdbb
	}
	return nil
}
func ParseUnionST_AnimationDgmBuildType(s string) (ST_AnimationDgmBuildType, error) {
	_aecgc := ST_AnimationDgmBuildType{}
	switch s {
	case "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e":
		_aecgc.ST_AnimationBuildType = ST_AnimationBuildTypeAllAtOnce
	case "\u006f\u006e\u0065":
		_aecgc.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeOne
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		_aecgc.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlOne
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		_aecgc.ST_AnimationDgmOnlyBuildType = ST_AnimationDgmOnlyBuildTypeLvlAtOnce
	}
	return _aecgc, nil
}
func (_afdec *CT_HslColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_afdec.HueAttr = 0
	for _, _dbccb := range start.Attr {
		if _dbccb.Name.Local == "\u0068\u0075\u0065" {
			_ebdb, _acgae := _cd.ParseInt(_dbccb.Value, 10, 32)
			if _acgae != nil {
				return _acgae
			}
			_afdec.HueAttr = int32(_ebdb)
			continue
		}
		if _dbccb.Name.Local == "\u0073\u0061\u0074" {
			_afda, _fcbc := ParseUnionST_Percentage(_dbccb.Value)
			if _fcbc != nil {
				return _fcbc
			}
			_afdec.SatAttr = _afda
			continue
		}
		if _dbccb.Name.Local == "\u006c\u0075\u006d" {
			_efbb, _efdcb := ParseUnionST_Percentage(_dbccb.Value)
			if _efdcb != nil {
				return _efdcb
			}
			_afdec.LumAttr = _efbb
			continue
		}
	}
_egce:
	for {
		_fgeed, _adgda := d.Token()
		if _adgda != nil {
			return _adgda
		}
		switch _bcdb := _fgeed.(type) {
		case _d.StartElement:
			switch _bcdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_fagc := NewEG_ColorTransform()
				_fagc.Tint = NewCT_PositiveFixedPercentage()
				if _efdd := d.DecodeElement(_fagc.Tint, &_bcdb); _efdd != nil {
					return _efdd
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _fagc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_fgce := NewEG_ColorTransform()
				_fgce.Shade = NewCT_PositiveFixedPercentage()
				if _geee := d.DecodeElement(_fgce.Shade, &_bcdb); _geee != nil {
					return _geee
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _fgce)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_ebde := NewEG_ColorTransform()
				_ebde.Comp = NewCT_ComplementTransform()
				if _egbb := d.DecodeElement(_ebde.Comp, &_bcdb); _egbb != nil {
					return _egbb
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ebde)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_cfage := NewEG_ColorTransform()
				_cfage.Inv = NewCT_InverseTransform()
				if _ggfeg := d.DecodeElement(_cfage.Inv, &_bcdb); _ggfeg != nil {
					return _ggfeg
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _cfage)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_ffgba := NewEG_ColorTransform()
				_ffgba.Gray = NewCT_GrayscaleTransform()
				if _ggaa := d.DecodeElement(_ffgba.Gray, &_bcdb); _ggaa != nil {
					return _ggaa
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ffgba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_daag := NewEG_ColorTransform()
				_daag.Alpha = NewCT_PositiveFixedPercentage()
				if _cfafb := d.DecodeElement(_daag.Alpha, &_bcdb); _cfafb != nil {
					return _cfafb
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _daag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_babcd := NewEG_ColorTransform()
				_babcd.AlphaOff = NewCT_FixedPercentage()
				if _bbegb := d.DecodeElement(_babcd.AlphaOff, &_bcdb); _bbegb != nil {
					return _bbegb
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _babcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aeecf := NewEG_ColorTransform()
				_aeecf.AlphaMod = NewCT_PositivePercentage()
				if _bfbad := d.DecodeElement(_aeecf.AlphaMod, &_bcdb); _bfbad != nil {
					return _bfbad
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _aeecf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bcdga := NewEG_ColorTransform()
				_bcdga.Hue = NewCT_PositiveFixedAngle()
				if _dafa := d.DecodeElement(_bcdga.Hue, &_bcdb); _dafa != nil {
					return _dafa
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _bcdga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_ecaed := NewEG_ColorTransform()
				_ecaed.HueOff = NewCT_Angle()
				if _cddg := d.DecodeElement(_ecaed.HueOff, &_bcdb); _cddg != nil {
					return _cddg
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ecaed)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_aecfd := NewEG_ColorTransform()
				_aecfd.HueMod = NewCT_PositivePercentage()
				if _agbgd := d.DecodeElement(_aecfd.HueMod, &_bcdb); _agbgd != nil {
					return _agbgd
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _aecfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_gafced := NewEG_ColorTransform()
				_gafced.Sat = NewCT_Percentage()
				if _feag := d.DecodeElement(_gafced.Sat, &_bcdb); _feag != nil {
					return _feag
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _gafced)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_cgadf := NewEG_ColorTransform()
				_cgadf.SatOff = NewCT_Percentage()
				if _eged := d.DecodeElement(_cgadf.SatOff, &_bcdb); _eged != nil {
					return _eged
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _cgadf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_bgcdd := NewEG_ColorTransform()
				_bgcdd.SatMod = NewCT_Percentage()
				if _gcece := d.DecodeElement(_bgcdd.SatMod, &_bcdb); _gcece != nil {
					return _gcece
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _bgcdd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_fegcb := NewEG_ColorTransform()
				_fegcb.Lum = NewCT_Percentage()
				if _geaba := d.DecodeElement(_fegcb.Lum, &_bcdb); _geaba != nil {
					return _geaba
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _fegcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_ccca := NewEG_ColorTransform()
				_ccca.LumOff = NewCT_Percentage()
				if _bgcbe := d.DecodeElement(_ccca.LumOff, &_bcdb); _bgcbe != nil {
					return _bgcbe
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ccca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_afgg := NewEG_ColorTransform()
				_afgg.LumMod = NewCT_Percentage()
				if _ceae := d.DecodeElement(_afgg.LumMod, &_bcdb); _ceae != nil {
					return _ceae
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _afgg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_acdg := NewEG_ColorTransform()
				_acdg.Red = NewCT_Percentage()
				if _ffag := d.DecodeElement(_acdg.Red, &_bcdb); _ffag != nil {
					return _ffag
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _acdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_bddaec := NewEG_ColorTransform()
				_bddaec.RedOff = NewCT_Percentage()
				if _gcfde := d.DecodeElement(_bddaec.RedOff, &_bcdb); _gcfde != nil {
					return _gcfde
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _bddaec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_dgae := NewEG_ColorTransform()
				_dgae.RedMod = NewCT_Percentage()
				if _gcgff := d.DecodeElement(_dgae.RedMod, &_bcdb); _gcgff != nil {
					return _gcgff
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _dgae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_gbbe := NewEG_ColorTransform()
				_gbbe.Green = NewCT_Percentage()
				if _bdbd := d.DecodeElement(_gbbe.Green, &_bcdb); _bdbd != nil {
					return _bdbd
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _gbbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_babbc := NewEG_ColorTransform()
				_babbc.GreenOff = NewCT_Percentage()
				if _gadc := d.DecodeElement(_babbc.GreenOff, &_bcdb); _gadc != nil {
					return _gadc
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _babbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_dbdfe := NewEG_ColorTransform()
				_dbdfe.GreenMod = NewCT_Percentage()
				if _fbccba := d.DecodeElement(_dbdfe.GreenMod, &_bcdb); _fbccba != nil {
					return _fbccba
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _dbdfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_adaag := NewEG_ColorTransform()
				_adaag.Blue = NewCT_Percentage()
				if _degb := d.DecodeElement(_adaag.Blue, &_bcdb); _degb != nil {
					return _degb
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _adaag)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_ebbgf := NewEG_ColorTransform()
				_ebbgf.BlueOff = NewCT_Percentage()
				if _gfgd := d.DecodeElement(_ebbgf.BlueOff, &_bcdb); _gfgd != nil {
					return _gfgd
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ebbgf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_ddcee := NewEG_ColorTransform()
				_ddcee.BlueMod = NewCT_Percentage()
				if _gaacc := d.DecodeElement(_ddcee.BlueMod, &_bcdb); _gaacc != nil {
					return _gaacc
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _ddcee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_bgfa := NewEG_ColorTransform()
				_bgfa.Gamma = NewCT_GammaTransform()
				if _gbged := d.DecodeElement(_bgfa.Gamma, &_bcdb); _gbged != nil {
					return _gbged
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _bgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_gedfe := NewEG_ColorTransform()
				_gedfe.InvGamma = NewCT_InverseGammaTransform()
				if _bcac := d.DecodeElement(_gedfe.InvGamma, &_bcdb); _bcac != nil {
					return _bcac
				}
				_afdec.EG_ColorTransform = append(_afdec.EG_ColorTransform, _gedfe)
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _bcdb.Name)
				if _febbe := d.Skip(); _febbe != nil {
					return _febbe
				}
			}
		case _d.EndElement:
			break _egce
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_LineEndProperties() *CT_LineEndProperties {
	_beefb := &CT_LineEndProperties{}
	return _beefb
}

type CT_AlphaBiLevelEffect struct{ ThreshAttr ST_PositiveFixedPercentage }

// ValidateWithPath validates the CT_TextSpacingPercent and its children, prefixing error messages with path
func (_cefg *CT_TextSpacingPercent) ValidateWithPath(path string) error {
	if _eadea := _cefg.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _eadea != nil {
		return _eadea
	}
	return nil
}
func NewCT_AnimationElementChoice() *CT_AnimationElementChoice {
	_ecbd := &CT_AnimationElementChoice{}
	return _ecbd
}
func (_affa *CT_Shape3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _defc := range start.Attr {
		if _defc.Name.Local == "\u007a" {
			_bcbdg, _begg := ParseUnionST_Coordinate(_defc.Value)
			if _begg != nil {
				return _begg
			}
			_affa.ZAttr = &_bcbdg
			continue
		}
		if _defc.Name.Local == "\u0065\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048" {
			_ddbac, _dgbgf := _cd.ParseInt(_defc.Value, 10, 64)
			if _dgbgf != nil {
				return _dgbgf
			}
			_affa.ExtrusionHAttr = &_ddbac
			continue
		}
		if _defc.Name.Local == "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0057" {
			_bfdf, _dbdad := _cd.ParseInt(_defc.Value, 10, 64)
			if _dbdad != nil {
				return _dbdad
			}
			_affa.ContourWAttr = &_bfdf
			continue
		}
		if _defc.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_affa.PrstMaterialAttr.UnmarshalXMLAttr(_defc)
			continue
		}
	}
_ceaeb:
	for {
		_cafe, _cbccd := d.Token()
		if _cbccd != nil {
			return _cbccd
		}
		switch _fcbfe := _cafe.(type) {
		case _d.StartElement:
			switch _fcbfe.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0054"}:
				_affa.BevelT = NewCT_Bevel()
				if _ggbff := d.DecodeElement(_affa.BevelT, &_fcbfe); _ggbff != nil {
					return _ggbff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076\u0065\u006c\u0042"}:
				_affa.BevelB = NewCT_Bevel()
				if _bbfef := d.DecodeElement(_affa.BevelB, &_fcbfe); _bbfef != nil {
					return _bbfef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074r\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"}:
				_affa.ExtrusionClr = NewCT_Color()
				if _gdgce := d.DecodeElement(_affa.ExtrusionClr, &_fcbfe); _gdgce != nil {
					return _gdgce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"}:
				_affa.ContourClr = NewCT_Color()
				if _deafa := d.DecodeElement(_affa.ContourClr, &_fcbfe); _deafa != nil {
					return _deafa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_affa.ExtLst = NewCT_OfficeArtExtensionList()
				if _beabc := d.DecodeElement(_affa.ExtLst, &_fcbfe); _beabc != nil {
					return _beabc
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0068\u0061\u0070\u0065\u0033\u0044\u0020\u0025\u0076", _fcbfe.Name)
				if _cfaec := d.Skip(); _cfaec != nil {
					return _cfaec
				}
			}
		case _d.EndElement:
			break _ceaeb
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_Boolean and its children
func (_geadf *CT_Boolean) Validate() error {
	return _geadf.ValidateWithPath("\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e")
}

type CT_XYAdjustHandle struct {
	GdRefXAttr *string
	MinXAttr   *ST_AdjCoordinate
	MaxXAttr   *ST_AdjCoordinate
	GdRefYAttr *string
	MinYAttr   *ST_AdjCoordinate
	MaxYAttr   *ST_AdjCoordinate
	Pos        *CT_AdjPoint2D
}

func NewEG_TextRun() *EG_TextRun { _bfcba := &EG_TextRun{}; return _bfcba }

// Validate validates the CT_EffectStyleList and its children
func (_cggd *CT_EffectStyleList) Validate() error {
	return _cggd.ValidateWithPath("\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074")
}
func (_ggaba ST_FixedPercentage) String() string {
	if _ggaba.ST_FixedPercentageDecimal != nil {
		return _e.Sprintf("\u0025\u0076", *_ggaba.ST_FixedPercentageDecimal)
	}
	if _ggaba.ST_FixedPercentage != nil {
		return _ggaba.ST_FixedPercentage.String()
	}
	return ""
}
func (_geec *CT_AnimationChartBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _geec.BldAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006c\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_geec.BldAttr)})
	}
	if _geec.AnimBgAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0069\u006d\u0042\u0067"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_geec.AnimBgAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_SoftEdgesEffect() *CT_SoftEdgesEffect {
	_cgcfd := &CT_SoftEdgesEffect{}
	_cgcfd.RadAttr = 0
	return _cgcfd
}
func NewEG_ShadeProperties() *EG_ShadeProperties { _fffg := &EG_ShadeProperties{}; return _fffg }
func (_dcbgb *CT_QuickTimeFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecbab := range start.Attr {
		if _ecbab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ecbab.Name.Local == "\u006c\u0069\u006e\u006b" || _ecbab.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ecbab.Name.Local == "\u006c\u0069\u006e\u006b" {
			_ecdec, _ebcgb := _ecbab.Value, error(nil)
			if _ebcgb != nil {
				return _ebcgb
			}
			_dcbgb.LinkAttr = _ecdec
			continue
		}
	}
_cfcc:
	for {
		_bdbcg, _accgf := d.Token()
		if _accgf != nil {
			return _accgf
		}
		switch _gggf := _bdbcg.(type) {
		case _d.StartElement:
			switch _gggf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcbgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _fdfbf := d.DecodeElement(_dcbgb.ExtLst, &_gggf); _fdfbf != nil {
					return _fdfbf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065\u0020\u0025v", _gggf.Name)
				if _dcbca := d.Skip(); _dcbca != nil {
					return _dcbca
				}
			}
		case _d.EndElement:
			break _cfcc
		case _d.CharData:
		}
	}
	return nil
}
func (_ccfe *CT_GeomRect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c"}, Value: _e.Sprintf("\u0025\u0076", _ccfe.LAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074"}, Value: _e.Sprintf("\u0025\u0076", _ccfe.TAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _e.Sprintf("\u0025\u0076", _ccfe.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _e.Sprintf("\u0025\u0076", _ccfe.BAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupFillProperties() *CT_GroupFillProperties {
	_gagab := &CT_GroupFillProperties{}
	return _gagab
}

// Validate validates the CT_GeomRect and its children
func (_aabg *CT_GeomRect) Validate() error {
	return _aabg.ValidateWithPath("C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074")
}
func (_faffb *CT_GroupLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aeee := range start.Attr {
		if _aeee.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_abccfd, _efdgd := _cd.ParseBool(_aeee.Value)
			if _efdgd != nil {
				return _efdgd
			}
			_faffb.NoGrpAttr = &_abccfd
			continue
		}
		if _aeee.Name.Local == "\u006eo\u0055\u006e\u0067\u0072\u0070" {
			_feeed, _eeadgb := _cd.ParseBool(_aeee.Value)
			if _eeadgb != nil {
				return _eeadgb
			}
			_faffb.NoUngrpAttr = &_feeed
			continue
		}
		if _aeee.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dacgg, _ceed := _cd.ParseBool(_aeee.Value)
			if _ceed != nil {
				return _ceed
			}
			_faffb.NoSelectAttr = &_dacgg
			continue
		}
		if _aeee.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_dfdfe, _fafa := _cd.ParseBool(_aeee.Value)
			if _fafa != nil {
				return _fafa
			}
			_faffb.NoRotAttr = &_dfdfe
			continue
		}
		if _aeee.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_bbfa, _fcgg := _cd.ParseBool(_aeee.Value)
			if _fcgg != nil {
				return _fcgg
			}
			_faffb.NoChangeAspectAttr = &_bbfa
			continue
		}
		if _aeee.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_ecag, _cbgd := _cd.ParseBool(_aeee.Value)
			if _cbgd != nil {
				return _cbgd
			}
			_faffb.NoMoveAttr = &_ecag
			continue
		}
		if _aeee.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_cfbag, _ffcb := _cd.ParseBool(_aeee.Value)
			if _ffcb != nil {
				return _ffcb
			}
			_faffb.NoResizeAttr = &_cfbag
			continue
		}
	}
_eedaa:
	for {
		_ccagg, _cgfd := d.Token()
		if _cgfd != nil {
			return _cgfd
		}
		switch _cdff := _ccagg.(type) {
		case _d.StartElement:
			switch _cdff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_faffb.ExtLst = NewCT_OfficeArtExtensionList()
				if _fadc := d.DecodeElement(_faffb.ExtLst, &_cdff); _fadc != nil {
					return _fadc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _cdff.Name)
				if _ccfgb := d.Skip(); _ccfgb != nil {
					return _ccfgb
				}
			}
		case _d.EndElement:
			break _eedaa
		case _d.CharData:
		}
	}
	return nil
}
func (_eaagb *EG_TextUnderlineFill) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eaagb.UFillTx != nil {
		_badad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_eaagb.UFillTx, _badad)
	}
	if _eaagb.UFill != nil {
		_eeace := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eaagb.UFill, _eeace)
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStop and its children, prefixing error messages with path
func (_gfgb *CT_GradientStop) ValidateWithPath(path string) error {
	if _bcaa := _gfgb.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _bcaa != nil {
		return _bcaa
	}
	if _gfgb.ScrgbClr != nil {
		if _ebdd := _gfgb.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _ebdd != nil {
			return _ebdd
		}
	}
	if _gfgb.SrgbClr != nil {
		if _cacd := _gfgb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _cacd != nil {
			return _cacd
		}
	}
	if _gfgb.HslClr != nil {
		if _fgbc := _gfgb.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fgbc != nil {
			return _fgbc
		}
	}
	if _gfgb.SysClr != nil {
		if _eebg := _gfgb.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _eebg != nil {
			return _eebg
		}
	}
	if _gfgb.SchemeClr != nil {
		if _afeg := _gfgb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _afeg != nil {
			return _afeg
		}
	}
	if _gfgb.PrstClr != nil {
		if _cgga := _gfgb.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _cgga != nil {
			return _cgga
		}
	}
	return nil
}
func (_ebdeb *CT_StyleMatrixReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064\u0078"}, Value: _e.Sprintf("\u0025\u0076", _ebdeb.IdxAttr)})
	e.EncodeToken(start)
	if _ebdeb.ScrgbClr != nil {
		_gbedda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ebdeb.ScrgbClr, _gbedda)
	}
	if _ebdeb.SrgbClr != nil {
		_beaaa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ebdeb.SrgbClr, _beaaa)
	}
	if _ebdeb.HslClr != nil {
		_edbdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ebdeb.HslClr, _edbdb)
	}
	if _ebdeb.SysClr != nil {
		_bfaac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ebdeb.SysClr, _bfaac)
	}
	if _ebdeb.SchemeClr != nil {
		_eaaa := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ebdeb.SchemeClr, _eaaa)
	}
	if _ebdeb.PrstClr != nil {
		_baggb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ebdeb.PrstClr, _baggb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GvmlGroupShape() *CT_GvmlGroupShape {
	_bcag := &CT_GvmlGroupShape{}
	_bcag.NvGrpSpPr = NewCT_GvmlGroupShapeNonVisual()
	_bcag.GrpSpPr = NewCT_GroupShapeProperties()
	return _bcag
}

// ValidateWithPath validates the Blip and its children, prefixing error messages with path
func (_dca *Blip) ValidateWithPath(path string) error {
	if _abe := _dca.CT_Blip.ValidateWithPath(path); _abe != nil {
		return _abe
	}
	return nil
}

type CT_DuotoneEffect struct{ EG_ColorChoice []*EG_ColorChoice }

func (_dffe *ST_AnimationDgmBuildType) Validate() error { return _dffe.ValidateWithPath("") }
func NewCT_ComplementTransform() *CT_ComplementTransform {
	_gdbc := &CT_ComplementTransform{}
	return _gdbc
}

// Validate validates the CT_GvmlConnector and its children
func (_gedcb *CT_GvmlConnector) Validate() error {
	return _gedcb.ValidateWithPath("\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072")
}
func (_ecbbda ST_ChartBuildStep) Validate() error { return _ecbbda.ValidateWithPath("") }
func (_fcabf *CT_DashStopList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcabf.Ds != nil {
		_gedgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0073"}}
		for _, _egad := range _fcabf.Ds {
			e.EncodeElement(_egad, _gedgb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_LineJoinProperties struct {
	Round *CT_LineJoinRound
	Bevel *CT_LineJoinBevel
	Miter *CT_LineJoinMiterProperties
}

func NewCT_StyleMatrix() *CT_StyleMatrix {
	_gegac := &CT_StyleMatrix{}
	_gegac.FillStyleLst = NewCT_FillStyleList()
	_gegac.LnStyleLst = NewCT_LineStyleList()
	_gegac.EffectStyleLst = NewCT_EffectStyleList()
	_gegac.BgFillStyleLst = NewCT_BackgroundFillStyleList()
	return _gegac
}
func (_eeab *CT_FontReference) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_bcdd, _fgfca := _eeab.IdxAttr.MarshalXMLAttr(_d.Name{Local: "\u0069\u0064\u0078"})
	if _fgfca != nil {
		return _fgfca
	}
	start.Attr = append(start.Attr, _bcdd)
	e.EncodeToken(start)
	if _eeab.ScrgbClr != nil {
		_abba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_eeab.ScrgbClr, _abba)
	}
	if _eeab.SrgbClr != nil {
		_dcbbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_eeab.SrgbClr, _dcbbe)
	}
	if _eeab.HslClr != nil {
		_cdeab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_eeab.HslClr, _cdeab)
	}
	if _eeab.SysClr != nil {
		_gcdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_eeab.SysClr, _gcdg)
	}
	if _eeab.SchemeClr != nil {
		_abgg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_eeab.SchemeClr, _abgg)
	}
	if _eeab.PrstClr != nil {
		_aaaaag := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_eeab.PrstClr, _aaaaag)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Vector3D and its children
func (_eggdf *CT_Vector3D) Validate() error {
	return _eggdf.ValidateWithPath("C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044")
}

// Validate validates the CT_AudioCDTime and its children
func (_bag *CT_AudioCDTime) Validate() error {
	return _bag.ValidateWithPath("\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065")
}

// ValidateWithPath validates the CT_AdjPoint2D and its children, prefixing error messages with path
func (_cfc *CT_AdjPoint2D) ValidateWithPath(path string) error {
	if _ca := _cfc.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _ca != nil {
		return _ca
	}
	if _ccf := _cfc.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _ccf != nil {
		return _ccf
	}
	return nil
}

// ValidateWithPath validates the CT_EffectReference and its children, prefixing error messages with path
func (_ccagcf *CT_EffectReference) ValidateWithPath(path string) error { return nil }
func (_fcbcd ST_CompoundLine) String() string {
	switch _fcbcd {
	case 0:
		return ""
	case 1:
		return "\u0073\u006e\u0067"
	case 2:
		return "\u0064\u0062\u006c"
	case 3:
		return "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case 4:
		return "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case 5:
		return "\u0074\u0072\u0069"
	}
	return ""
}
func NewCT_InverseGammaTransform() *CT_InverseGammaTransform {
	_ecfecc := &CT_InverseGammaTransform{}
	return _ecfecc
}
func (_eba *CT_AdjustHandleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eba.AhXY != nil {
		_cce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u0068\u0058\u0059"}}
		for _, _fac := range _eba.AhXY {
			e.EncodeElement(_fac, _cce)
		}
	}
	if _eba.AhPolar != nil {
		_fdce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0068\u0050\u006f\u006c\u0061r"}}
		for _, _gad := range _eba.AhPolar {
			e.EncodeElement(_gad, _fdce)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextParagraph and its children
func (_eabge *CT_TextParagraph) Validate() error {
	return _eabge.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068")
}
func (_cefdb *EG_ShadeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dcebab:
	for {
		_aedbg, _gfgfa := d.Token()
		if _gfgfa != nil {
			return _gfgfa
		}
		switch _bbfbd := _aedbg.(type) {
		case _d.StartElement:
			switch _bbfbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u006e"}:
				_cefdb.Lin = NewCT_LinearShadeProperties()
				if _cdccb := d.DecodeElement(_cefdb.Lin, &_bbfbd); _cdccb != nil {
					return _cdccb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_cefdb.Path = NewCT_PathShadeProperties()
				if _fcabe := d.DecodeElement(_cefdb.Path, &_bbfbd); _fcabe != nil {
					return _fcabe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0053\u0068\u0061\u0064\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _bbfbd.Name)
				if _ccac := d.Skip(); _ccac != nil {
					return _ccac
				}
			}
		case _d.EndElement:
			break _dcebab
		case _d.CharData:
		}
	}
	return nil
}
func (_ffeafg *CT_TableStyleTextStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _begff := range start.Attr {
		if _begff.Name.Local == "\u0062" {
			_ffeafg.BAttr.UnmarshalXMLAttr(_begff)
			continue
		}
		if _begff.Name.Local == "\u0069" {
			_ffeafg.IAttr.UnmarshalXMLAttr(_begff)
			continue
		}
	}
_fbdgf:
	for {
		_cfdge, _befee := d.Token()
		if _befee != nil {
			return _befee
		}
		switch _dbgba := _cfdge.(type) {
		case _d.StartElement:
			switch _dbgba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_ffeafg.Font = NewCT_FontCollection()
				if _aabd := d.DecodeElement(_ffeafg.Font, &_dbgba); _aabd != nil {
					return _aabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				_ffeafg.FontRef = NewCT_FontReference()
				if _debdg := d.DecodeElement(_ffeafg.FontRef, &_dbgba); _debdg != nil {
					return _debdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_ffeafg.ScrgbClr = NewCT_ScRgbColor()
				if _gceca := d.DecodeElement(_ffeafg.ScrgbClr, &_dbgba); _gceca != nil {
					return _gceca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_ffeafg.SrgbClr = NewCT_SRgbColor()
				if _bcbfgd := d.DecodeElement(_ffeafg.SrgbClr, &_dbgba); _bcbfgd != nil {
					return _bcbfgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_ffeafg.HslClr = NewCT_HslColor()
				if _cddcd := d.DecodeElement(_ffeafg.HslClr, &_dbgba); _cddcd != nil {
					return _cddcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_ffeafg.SysClr = NewCT_SystemColor()
				if _fedc := d.DecodeElement(_ffeafg.SysClr, &_dbgba); _fedc != nil {
					return _fedc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_ffeafg.SchemeClr = NewCT_SchemeColor()
				if _fgcfaa := d.DecodeElement(_ffeafg.SchemeClr, &_dbgba); _fgcfaa != nil {
					return _fgcfaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_ffeafg.PrstClr = NewCT_PresetColor()
				if _eaacb := d.DecodeElement(_ffeafg.PrstClr, &_dbgba); _eaacb != nil {
					return _eaacb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffeafg.ExtLst = NewCT_OfficeArtExtensionList()
				if _ggaab := d.DecodeElement(_ffeafg.ExtLst, &_dbgba); _ggaab != nil {
					return _ggaab
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0054\u0061\u0062\u006ce\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _dbgba.Name)
				if _ebgfca := d.Skip(); _ebgfca != nil {
					return _ebgfca
				}
			}
		case _d.EndElement:
			break _fbdgf
		case _d.CharData:
		}
	}
	return nil
}
func (_aeedc *CT_PositiveSize2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aeedc.CxAttr = 0
	_aeedc.CyAttr = 0
	for _, _dabd := range start.Attr {
		if _dabd.Name.Local == "\u0063\u0078" {
			_dfecb, _dgeg := _cd.ParseInt(_dabd.Value, 10, 64)
			if _dgeg != nil {
				return _dgeg
			}
			_aeedc.CxAttr = _dfecb
			continue
		}
		if _dabd.Name.Local == "\u0063\u0079" {
			_dgcab, _aacaeg := _cd.ParseInt(_dabd.Value, 10, 64)
			if _aacaeg != nil {
				return _aacaeg
			}
			_aeedc.CyAttr = _dgcab
			continue
		}
	}
	for {
		_cbbf, _ddgge := d.Token()
		if _ddgge != nil {
			return _e.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053\u0069\u007a\u0065\u0032\u0044: \u0025\u0073", _ddgge)
		}
		if _fdef, _bdebc := _cbbf.(_d.EndElement); _bdebc && _fdef.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_TextUnderlineFill struct {
	UFillTx *CT_TextUnderlineFillFollowText
	UFill   *CT_TextUnderlineFillGroupWrapper
}

// Validate validates the EG_LineJoinProperties and its children
func (_gefgd *EG_LineJoinProperties) Validate() error {
	return _gefgd.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewEG_TextBullet() *EG_TextBullet { _dbbgd := &EG_TextBullet{}; return _dbbgd }

// ValidateWithPath validates the CT_Path2DMoveTo and its children, prefixing error messages with path
func (_ddcc *CT_Path2DMoveTo) ValidateWithPath(path string) error {
	if _acde := _ddcc.Pt.ValidateWithPath(path + "\u002f\u0050\u0074"); _acde != nil {
		return _acde
	}
	return nil
}

type CT_GroupLocking struct {
	NoGrpAttr          *bool
	NoUngrpAttr        *bool
	NoSelectAttr       *bool
	NoRotAttr          *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func (_effff *CT_Vector3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0078"}, Value: _e.Sprintf("\u0025\u0076", _effff.DxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0079"}, Value: _e.Sprintf("\u0025\u0076", _effff.DyAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u007a"}, Value: _e.Sprintf("\u0025\u0076", _effff.DzAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_AdjustHandleList and its children
func (_ggbf *CT_AdjustHandleList) Validate() error {
	return _ggbf.ValidateWithPath("\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074")
}

type EG_ColorChoice struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

const (
	ST_TextTabAlignTypeUnset ST_TextTabAlignType = 0
	ST_TextTabAlignTypeL     ST_TextTabAlignType = 1
	ST_TextTabAlignTypeCtr   ST_TextTabAlignType = 2
	ST_TextTabAlignTypeR     ST_TextTabAlignType = 3
	ST_TextTabAlignTypeDec   ST_TextTabAlignType = 4
)

func (_efed ST_TextCapsType) String() string {
	switch _efed {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0073\u006d\u0061l\u006c"
	case 3:
		return "\u0061\u006c\u006c"
	}
	return ""
}
func (_eebd *ST_ChartBuildStep) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eebd = 0
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_eebd = 1
	case "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_eebd = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_eebd = 3
	case "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073":
		*_eebd = 4
	case "\u0061\u006c\u006c\u0050\u0074\u0073":
		*_eebd = 5
	case "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064":
		*_eebd = 6
	}
	return nil
}
func (_bceeg *CT_Path2DClose) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_adbccb *CT_PresetTextShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adbccb.PrstAttr = ST_TextShapeType(1)
	for _, _ffeaf := range start.Attr {
		if _ffeaf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_adbccb.PrstAttr.UnmarshalXMLAttr(_ffeaf)
			continue
		}
	}
_afacgb:
	for {
		_ceefdd, _ecbafg := d.Token()
		if _ecbafg != nil {
			return _ecbafg
		}
		switch _gbbd := _ceefdd.(type) {
		case _d.StartElement:
			switch _gbbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_adbccb.AvLst = NewCT_GeomGuideList()
				if _dagfgb := d.DecodeElement(_adbccb.AvLst, &_gbbd); _dagfgb != nil {
					return _dagfgb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074T\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _gbbd.Name)
				if _cfggd := d.Skip(); _cfggd != nil {
					return _cfggd
				}
			}
		case _d.EndElement:
			break _afacgb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TableCol and its children, prefixing error messages with path
func (_dcagg *CT_TableCol) ValidateWithPath(path string) error {
	if _baafd := _dcagg.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _baafd != nil {
		return _baafd
	}
	if _dcagg.ExtLst != nil {
		if _egadc := _dcagg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egadc != nil {
			return _egadc
		}
	}
	return nil
}
func (_dfbef *CT_Path2DList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ecgea:
	for {
		_efce, _gdbbd := d.Token()
		if _gdbbd != nil {
			return _gdbbd
		}
		switch _efceg := _efce.(type) {
		case _d.StartElement:
			switch _efceg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0068"}:
				_cbcdg := NewCT_Path2D()
				if _dgfbc := d.DecodeElement(_cbcdg, &_efceg); _dgfbc != nil {
					return _dgfbc
				}
				_dfbef.Path = append(_dfbef.Path, _cbcdg)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050a\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074 \u0025\u0076", _efceg.Name)
				if _afab := d.Skip(); _afab != nil {
					return _afab
				}
			}
		case _d.EndElement:
			break _ecgea
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_PresetShadowEffect() *CT_PresetShadowEffect {
	_efcde := &CT_PresetShadowEffect{}
	_efcde.PrstAttr = ST_PresetShadowVal(1)
	return _efcde
}

// ValidateWithPath validates the CT_NonVisualGroupDrawingShapeProps and its children, prefixing error messages with path
func (_ebfga *CT_NonVisualGroupDrawingShapeProps) ValidateWithPath(path string) error {
	if _ebfga.GrpSpLocks != nil {
		if _eceg := _ebfga.GrpSpLocks.ValidateWithPath(path + "/\u0047\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _eceg != nil {
			return _eceg
		}
	}
	if _ebfga.ExtLst != nil {
		if _affd := _ebfga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _affd != nil {
			return _affd
		}
	}
	return nil
}
func (_gagdc *ST_BlendMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gagdc = 0
	case "\u006f\u0076\u0065\u0072":
		*_gagdc = 1
	case "\u006d\u0075\u006c\u0074":
		*_gagdc = 2
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_gagdc = 3
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_gagdc = 4
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_gagdc = 5
	}
	return nil
}
func (_ebaa *CT_ColorSchemeList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_abd:
	for {
		_afdc, _dccf := d.Token()
		if _dccf != nil {
			return _dccf
		}
		switch _affc := _afdc.(type) {
		case _d.StartElement:
			switch _affc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u0072\u0061\u0043\u006c\u0072\u0053c\u0068\u0065\u006d\u0065"}:
				_fgdb := NewCT_ColorSchemeAndMapping()
				if _agca := d.DecodeElement(_fgdb, &_affc); _agca != nil {
					return _agca
				}
				_ebaa.ExtraClrScheme = append(_ebaa.ExtraClrScheme, _fgdb)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _affc.Name)
				if _aaabc := d.Skip(); _aaabc != nil {
					return _aaabc
				}
			}
		case _d.EndElement:
			break _abd
		case _d.CharData:
		}
	}
	return nil
}
func (_cfbac *CT_BlurEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abefc := range start.Attr {
		if _abefc.Name.Local == "\u0072\u0061\u0064" {
			_gbb, _geea := _cd.ParseInt(_abefc.Value, 10, 64)
			if _geea != nil {
				return _geea
			}
			_cfbac.RadAttr = &_gbb
			continue
		}
		if _abefc.Name.Local == "\u0067\u0072\u006f\u0077" {
			_ddege, _acgf := _cd.ParseBool(_abefc.Value)
			if _acgf != nil {
				return _acgf
			}
			_cfbac.GrowAttr = &_ddege
			continue
		}
	}
	for {
		_bdgb, _fdac := d.Token()
		if _fdac != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0042l\u0075r\u0045f\u0066\u0065\u0063\u0074\u003a\u0020\u0025s", _fdac)
		}
		if _fbgae, _bbaga := _bdgb.(_d.EndElement); _bbaga && _fbgae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ecddeg *CT_TextSpacingPercent) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _ecddeg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gacdf *ST_ColorSchemeIndex) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gacdf = 0
	case "\u0064\u006b\u0031":
		*_gacdf = 1
	case "\u006c\u0074\u0031":
		*_gacdf = 2
	case "\u0064\u006b\u0032":
		*_gacdf = 3
	case "\u006c\u0074\u0032":
		*_gacdf = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_gacdf = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_gacdf = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_gacdf = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_gacdf = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_gacdf = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_gacdf = 10
	case "\u0068\u006c\u0069n\u006b":
		*_gacdf = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_gacdf = 12
	}
	return nil
}
func (_adacd *CT_NonVisualGraphicFrameProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fafbe:
	for {
		_ggeda, _fgage := d.Token()
		if _fgage != nil {
			return _fgage
		}
		switch _fdgac := _ggeda.(type) {
		case _d.StartElement:
			switch _fdgac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065L\u006f\u0063\u006b\u0073"}:
				_adacd.GraphicFrameLocks = NewCT_GraphicalObjectFrameLocking()
				if _efca := d.DecodeElement(_adacd.GraphicFrameLocks, &_fdgac); _efca != nil {
					return _efca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adacd.ExtLst = NewCT_OfficeArtExtensionList()
				if _efdec := d.DecodeElement(_adacd.ExtLst, &_fdgac); _efdec != nil {
					return _efdec
				}
			default:
				_ff.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006de\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020%\u0076", _fdgac.Name)
				if _ddfec := d.Skip(); _ddfec != nil {
					return _ddfec
				}
			}
		case _d.EndElement:
			break _fafbe
		case _d.CharData:
		}
	}
	return nil
}
func (_fcged *CT_PresetTextShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_fgaf, _abcde := _fcged.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _abcde != nil {
		return _abcde
	}
	start.Attr = append(start.Attr, _fgaf)
	e.EncodeToken(start)
	if _fcged.AvLst != nil {
		_ecdff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_fcged.AvLst, _ecdff)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbdbc ST_PositiveFixedPercentage) String() string {
	if _dbdbc.ST_PositiveFixedPercentageDecimal != nil {
		return _e.Sprintf("\u0025\u0076", *_dbdbc.ST_PositiveFixedPercentageDecimal)
	}
	if _dbdbc.ST_PositiveFixedPercentage != nil {
		return _dbdbc.ST_PositiveFixedPercentage.String()
	}
	return ""
}

const (
	ST_PenAlignmentUnset ST_PenAlignment = 0
	ST_PenAlignmentCtr   ST_PenAlignment = 1
	ST_PenAlignmentIn    ST_PenAlignment = 2
)

// ValidateWithPath validates the EG_Text3D and its children, prefixing error messages with path
func (_cdfgb *EG_Text3D) ValidateWithPath(path string) error {
	if _cdfgb.Sp3d != nil {
		if _dcce := _cdfgb.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _dcce != nil {
			return _dcce
		}
	}
	if _cdfgb.FlatTx != nil {
		if _gaff := _cdfgb.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _gaff != nil {
			return _gaff
		}
	}
	return nil
}
func (_dfggab ST_AnimationDgmOnlyBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dfggab.String(), start)
}
func NewCT_ColorMappingOverrideChoice() *CT_ColorMappingOverrideChoice {
	_fbee := &CT_ColorMappingOverrideChoice{}
	return _fbee
}

// ValidateWithPath validates the CT_FlatText and its children, prefixing error messages with path
func (_cbad *CT_FlatText) ValidateWithPath(path string) error {
	if _cbad.ZAttr != nil {
		if _ddgfd := _cbad.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _ddgfd != nil {
			return _ddgfd
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ShadeProperties and its children, prefixing error messages with path
func (_bcccff *EG_ShadeProperties) ValidateWithPath(path string) error {
	if _bcccff.Lin != nil {
		if _deebcd := _bcccff.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _deebcd != nil {
			return _deebcd
		}
	}
	if _bcccff.Path != nil {
		if _dcfdgd := _bcccff.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _dcfdgd != nil {
			return _dcfdgd
		}
	}
	return nil
}
func (_eeeaca ST_BlackWhiteMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ccdbd := _d.Attr{}
	_ccdbd.Name = name
	switch _eeeaca {
	case ST_BlackWhiteModeUnset:
		_ccdbd.Value = ""
	case ST_BlackWhiteModeClr:
		_ccdbd.Value = "\u0063\u006c\u0072"
	case ST_BlackWhiteModeAuto:
		_ccdbd.Value = "\u0061\u0075\u0074\u006f"
	case ST_BlackWhiteModeGray:
		_ccdbd.Value = "\u0067\u0072\u0061\u0079"
	case ST_BlackWhiteModeLtGray:
		_ccdbd.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeInvGray:
		_ccdbd.Value = "\u0069n\u0076\u0047\u0072\u0061\u0079"
	case ST_BlackWhiteModeGrayWhite:
		_ccdbd.Value = "\u0067r\u0061\u0079\u0057\u0068\u0069\u0074e"
	case ST_BlackWhiteModeBlackGray:
		_ccdbd.Value = "\u0062l\u0061\u0063\u006b\u0047\u0072\u0061y"
	case ST_BlackWhiteModeBlackWhite:
		_ccdbd.Value = "\u0062\u006c\u0061\u0063\u006b\u0057\u0068\u0069\u0074\u0065"
	case ST_BlackWhiteModeBlack:
		_ccdbd.Value = "\u0062\u006c\u0061c\u006b"
	case ST_BlackWhiteModeWhite:
		_ccdbd.Value = "\u0077\u0068\u0069t\u0065"
	case ST_BlackWhiteModeHidden:
		_ccdbd.Value = "\u0068\u0069\u0064\u0064\u0065\u006e"
	}
	return _ccdbd, nil
}

type CT_BlipFillProperties struct {
	DpiAttr          *uint32
	RotWithShapeAttr *bool
	Blip             *CT_Blip
	SrcRect          *CT_RelativeRect
	Tile             *CT_TileInfoProperties
	Stretch          *CT_StretchInfoProperties
}
type EG_ShadeProperties struct {
	Lin  *CT_LinearShadeProperties
	Path *CT_PathShadeProperties
}

func (_eccd *CT_TextNoAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_adcfc, _bgdcc := d.Token()
		if _bgdcc != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074N\u006fA\u0075\u0074\u006f\u0066\u0069\u0074\u003a \u0025\u0073", _bgdcc)
		}
		if _egcc, _ggbdd := _adcfc.(_d.EndElement); _ggbdd && _egcc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_faegg *CT_TextListStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _faegg.DefPPr != nil {
		_edadf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064\u0065\u0066\u0050\u0050\u0072"}}
		e.EncodeElement(_faegg.DefPPr, _edadf)
	}
	if _faegg.Lvl1pPr != nil {
		_ccffa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0031\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl1pPr, _ccffa)
	}
	if _faegg.Lvl2pPr != nil {
		_faeeg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0032\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl2pPr, _faeeg)
	}
	if _faegg.Lvl3pPr != nil {
		_ffbfcc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0033\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl3pPr, _ffbfcc)
	}
	if _faegg.Lvl4pPr != nil {
		_ffcca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0034\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl4pPr, _ffcca)
	}
	if _faegg.Lvl5pPr != nil {
		_deacd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0035\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl5pPr, _deacd)
	}
	if _faegg.Lvl6pPr != nil {
		_aefb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0036\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl6pPr, _aefb)
	}
	if _faegg.Lvl7pPr != nil {
		_accab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0037\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl7pPr, _accab)
	}
	if _faegg.Lvl8pPr != nil {
		_befae := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0038\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl8pPr, _befae)
	}
	if _faegg.Lvl9pPr != nil {
		_dgdaa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0076\u006c\u0039\u0070\u0050r"}}
		e.EncodeElement(_faegg.Lvl9pPr, _dgdaa)
	}
	if _faegg.ExtLst != nil {
		_beccd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_faegg.ExtLst, _beccd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_DashStop() *CT_DashStop { _ggef := &CT_DashStop{}; return _ggef }
func (_ebccbd ST_PresetMaterialType) ValidateWithPath(path string) error {
	switch _ebccbd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebccbd))
	}
	return nil
}

type CT_BackgroundFormatting struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_affgf ST_TileFlipMode) String() string {
	switch _affgf {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0078"
	case 3:
		return "\u0079"
	case 4:
		return "\u0078\u0079"
	}
	return ""
}

type EG_ThemeableEffectStyle struct {
	Effect    *CT_EffectProperties
	EffectRef *CT_StyleMatrixReference
}

func NewEG_Media() *EG_Media { _bgcg := &EG_Media{}; return _bgcg }

type CT_SoftEdgesEffect struct{ RadAttr int64 }

// Validate validates the CT_TileInfoProperties and its children
func (_cbabcb *CT_TileInfoProperties) Validate() error {
	return _cbabcb.ValidateWithPath("C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gfgbd *CT_TextAutonumberBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_fcgcd, _afbca := _gfgbd.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
	if _afbca != nil {
		return _afbca
	}
	start.Attr = append(start.Attr, _fcgcd)
	if _gfgbd.StartAtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073t\u0061\u0072\u0074\u0041\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_gfgbd.StartAtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextBulletTypeface and its children, prefixing error messages with path
func (_fdgfd *EG_TextBulletTypeface) ValidateWithPath(path string) error {
	if _fdgfd.BuFontTx != nil {
		if _dcgbd := _fdgfd.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _dcgbd != nil {
			return _dcgbd
		}
	}
	if _fdgfd.BuFont != nil {
		if _ecfeb := _fdgfd.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _ecfeb != nil {
			return _ecfeb
		}
	}
	return nil
}

type CT_CustomColor struct {
	NameAttr  *string
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_GroupShapeProperties and its children, prefixing error messages with path
func (_bdbb *CT_GroupShapeProperties) ValidateWithPath(path string) error {
	if _cfbca := _bdbb.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _cfbca != nil {
		return _cfbca
	}
	if _bdbb.Xfrm != nil {
		if _egfaf := _bdbb.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _egfaf != nil {
			return _egfaf
		}
	}
	if _bdbb.NoFill != nil {
		if _ddfa := _bdbb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ddfa != nil {
			return _ddfa
		}
	}
	if _bdbb.SolidFill != nil {
		if _befdc := _bdbb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _befdc != nil {
			return _befdc
		}
	}
	if _bdbb.GradFill != nil {
		if _eagfc := _bdbb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _eagfc != nil {
			return _eagfc
		}
	}
	if _bdbb.BlipFill != nil {
		if _dcdd := _bdbb.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dcdd != nil {
			return _dcdd
		}
	}
	if _bdbb.PattFill != nil {
		if _egee := _bdbb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _egee != nil {
			return _egee
		}
	}
	if _bdbb.GrpFill != nil {
		if _dfdd := _bdbb.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dfdd != nil {
			return _dfdd
		}
	}
	if _bdbb.EffectLst != nil {
		if _cffg := _bdbb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _cffg != nil {
			return _cffg
		}
	}
	if _bdbb.EffectDag != nil {
		if _bafcg := _bdbb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _bafcg != nil {
			return _bafcg
		}
	}
	if _bdbb.Scene3d != nil {
		if _dagb := _bdbb.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _dagb != nil {
			return _dagb
		}
	}
	if _bdbb.ExtLst != nil {
		if _gffgd := _bdbb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gffgd != nil {
			return _gffgd
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GroupLocking and its children, prefixing error messages with path
func (_cagee *CT_GroupLocking) ValidateWithPath(path string) error {
	if _cagee.ExtLst != nil {
		if _aefc := _cagee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aefc != nil {
			return _aefc
		}
	}
	return nil
}
func (_eagcc *CT_OuterShadowEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gegdb := range start.Attr {
		if _gegdb.Name.Local == "\u0061\u006c\u0067\u006e" {
			_eagcc.AlgnAttr.UnmarshalXMLAttr(_gegdb)
			continue
		}
		if _gegdb.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_fecgae, _fdcgcd := _cd.ParseBool(_gegdb.Value)
			if _fdcgcd != nil {
				return _fdcgcd
			}
			_eagcc.RotWithShapeAttr = &_fecgae
			continue
		}
		if _gegdb.Name.Local == "\u0064\u0069\u0073\u0074" {
			_gddd, _dfce := _cd.ParseInt(_gegdb.Value, 10, 64)
			if _dfce != nil {
				return _dfce
			}
			_eagcc.DistAttr = &_gddd
			continue
		}
		if _gegdb.Name.Local == "\u0073\u0078" {
			_fcdfc, _caebd := ParseUnionST_Percentage(_gegdb.Value)
			if _caebd != nil {
				return _caebd
			}
			_eagcc.SxAttr = &_fcdfc
			continue
		}
		if _gegdb.Name.Local == "\u0073\u0079" {
			_fdcfe, _fbceg := ParseUnionST_Percentage(_gegdb.Value)
			if _fbceg != nil {
				return _fbceg
			}
			_eagcc.SyAttr = &_fdcfe
			continue
		}
		if _gegdb.Name.Local == "\u006b\u0078" {
			_dadga, _deedg := _cd.ParseInt(_gegdb.Value, 10, 32)
			if _deedg != nil {
				return _deedg
			}
			_febd := int32(_dadga)
			_eagcc.KxAttr = &_febd
			continue
		}
		if _gegdb.Name.Local == "\u006b\u0079" {
			_defge, _accga := _cd.ParseInt(_gegdb.Value, 10, 32)
			if _accga != nil {
				return _accga
			}
			_efbac := int32(_defge)
			_eagcc.KyAttr = &_efbac
			continue
		}
		if _gegdb.Name.Local == "\u0062l\u0075\u0072\u0052\u0061\u0064" {
			_efagb, _fgdee := _cd.ParseInt(_gegdb.Value, 10, 64)
			if _fgdee != nil {
				return _fgdee
			}
			_eagcc.BlurRadAttr = &_efagb
			continue
		}
		if _gegdb.Name.Local == "\u0064\u0069\u0072" {
			_cggfe, _egac := _cd.ParseInt(_gegdb.Value, 10, 32)
			if _egac != nil {
				return _egac
			}
			_afeag := int32(_cggfe)
			_eagcc.DirAttr = &_afeag
			continue
		}
	}
_fdea:
	for {
		_ccdfd, _efacc := d.Token()
		if _efacc != nil {
			return _efacc
		}
		switch _fddbec := _ccdfd.(type) {
		case _d.StartElement:
			switch _fddbec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_eagcc.ScrgbClr = NewCT_ScRgbColor()
				if _abcfd := d.DecodeElement(_eagcc.ScrgbClr, &_fddbec); _abcfd != nil {
					return _abcfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_eagcc.SrgbClr = NewCT_SRgbColor()
				if _dbac := d.DecodeElement(_eagcc.SrgbClr, &_fddbec); _dbac != nil {
					return _dbac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_eagcc.HslClr = NewCT_HslColor()
				if _gaeab := d.DecodeElement(_eagcc.HslClr, &_fddbec); _gaeab != nil {
					return _gaeab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_eagcc.SysClr = NewCT_SystemColor()
				if _ececf := d.DecodeElement(_eagcc.SysClr, &_fddbec); _ececf != nil {
					return _ececf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_eagcc.SchemeClr = NewCT_SchemeColor()
				if _bddac := d.DecodeElement(_eagcc.SchemeClr, &_fddbec); _bddac != nil {
					return _bddac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_eagcc.PrstClr = NewCT_PresetColor()
				if _gdgfdd := d.DecodeElement(_eagcc.PrstClr, &_fddbec); _gdgfdd != nil {
					return _gdgfdd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061\u0064\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _fddbec.Name)
				if _adbcc := d.Skip(); _adbcc != nil {
					return _adbcc
				}
			}
		case _d.EndElement:
			break _fdea
		case _d.CharData:
		}
	}
	return nil
}
func (_fbdgb *CT_TextCharBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0068\u0061\u0072"}, Value: _e.Sprintf("\u0025\u0076", _fbdgb.CharAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_BaseStyles() *CT_BaseStyles {
	_ccgc := &CT_BaseStyles{}
	_ccgc.ClrScheme = NewCT_ColorScheme()
	_ccgc.FontScheme = NewCT_FontScheme()
	_ccgc.FmtScheme = NewCT_StyleMatrix()
	return _ccgc
}

// ValidateWithPath validates the CT_ComplementTransform and its children, prefixing error messages with path
func (_adge *CT_ComplementTransform) ValidateWithPath(path string) error { return nil }
func (_fccbg *CT_LineJoinBevel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_cefe, _adcg := d.Token()
		if _adcg != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065J\u006fi\u006e\u0042\u0065\u0076\u0065\u006c\u003a \u0025\u0073", _adcg)
		}
		if _afccc, _ffeba := _cefe.(_d.EndElement); _ffeba && _afccc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cddba *CT_TextBulletSizePoint) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _cddba.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TextUnderlineFillFollowText and its children
func (_caeaa *CT_TextUnderlineFillFollowText) Validate() error {
	return _caeaa.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}

// Validate validates the EG_ThemeableEffectStyle and its children
func (_ccffag *EG_ThemeableEffectStyle) Validate() error {
	return _ccffag.ValidateWithPath("\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065")
}

type CT_Point3D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
	ZAttr ST_Coordinate
}

func (_aacc *CT_GroupTransform2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _baeec := range start.Attr {
		if _baeec.Name.Local == "\u0072\u006f\u0074" {
			_ggdd, _ddec := _cd.ParseInt(_baeec.Value, 10, 32)
			if _ddec != nil {
				return _ddec
			}
			_bbcgd := int32(_ggdd)
			_aacc.RotAttr = &_bbcgd
			continue
		}
		if _baeec.Name.Local == "\u0066\u006c\u0069p\u0048" {
			_fbagb, _edddf := _cd.ParseBool(_baeec.Value)
			if _edddf != nil {
				return _edddf
			}
			_aacc.FlipHAttr = &_fbagb
			continue
		}
		if _baeec.Name.Local == "\u0066\u006c\u0069p\u0056" {
			_bdfeg, _dggbd := _cd.ParseBool(_baeec.Value)
			if _dggbd != nil {
				return _dggbd
			}
			_aacc.FlipVAttr = &_bdfeg
			continue
		}
	}
_gacag:
	for {
		_aggg, _bbadb := d.Token()
		if _bbadb != nil {
			return _bbadb
		}
		switch _deacf := _aggg.(type) {
		case _d.StartElement:
			switch _deacf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006f\u0066\u0066"}:
				_aacc.Off = NewCT_Point2D()
				if _aegb := d.DecodeElement(_aacc.Off, &_deacf); _aegb != nil {
					return _aegb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_aacc.Ext = NewCT_PositiveSize2D()
				if _bcfa := d.DecodeElement(_aacc.Ext, &_deacf); _bcfa != nil {
					return _bcfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u004ff\u0066"}:
				_aacc.ChOff = NewCT_Point2D()
				if _adccb := d.DecodeElement(_aacc.ChOff, &_deacf); _adccb != nil {
					return _adccb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0068\u0045x\u0074"}:
				_aacc.ChExt = NewCT_PositiveSize2D()
				if _accbcc := d.DecodeElement(_aacc.ChExt, &_deacf); _accbcc != nil {
					return _accbcc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0054\u0072an\u0073\u0066\u006f\u0072\u006d\u0032\u0044\u0020\u0025\u0076", _deacf.Name)
				if _ddbd := d.Skip(); _ddbd != nil {
					return _ddbd
				}
			}
		case _d.EndElement:
			break _gacag
		case _d.CharData:
		}
	}
	return nil
}
func (_cbfda ST_BevelPresetType) String() string {
	switch _cbfda {
	case 0:
		return ""
	case 1:
		return "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074"
	case 2:
		return "\u0063\u0069\u0072\u0063\u006c\u0065"
	case 3:
		return "\u0073\u006c\u006fp\u0065"
	case 4:
		return "\u0063\u0072\u006fs\u0073"
	case 5:
		return "\u0061\u006e\u0067l\u0065"
	case 6:
		return "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed"
	case 7:
		return "\u0063\u006f\u006e\u0076\u0065\u0078"
	case 8:
		return "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et"
	case 9:
		return "\u0064\u0069\u0076o\u0074"
	case 10:
		return "\u0072\u0069\u0062\u006c\u0065\u0074"
	case 11:
		return "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065"
	case 12:
		return "\u0061r\u0074\u0044\u0065\u0063\u006f"
	}
	return ""
}
func (_cbfb *CT_Scale2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbfb.Sx = NewCT_Ratio()
	_cbfb.Sy = NewCT_Ratio()
_gfdbb:
	for {
		_dgdfd, _cafg := d.Token()
		if _cafg != nil {
			return _cafg
		}
		switch _cfafg := _dgdfd.(type) {
		case _d.StartElement:
			switch _cfafg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0078"}:
				if _begbg := d.DecodeElement(_cbfb.Sx, &_cfafg); _begbg != nil {
					return _begbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079"}:
				if _babag := d.DecodeElement(_cbfb.Sy, &_cfafg); _babag != nil {
					return _babag
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0061\u006c\u0065\u0032\u0044\u0020\u0025\u0076", _cfafg.Name)
				if _dcbfa := d.Skip(); _dcbfa != nil {
					return _dcbfa
				}
			}
		case _d.EndElement:
			break _gfdbb
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_Scale2D() *CT_Scale2D {
	_ccgbg := &CT_Scale2D{}
	_ccgbg.Sx = NewCT_Ratio()
	_ccgbg.Sy = NewCT_Ratio()
	return _ccgbg
}
func (_deffd *CT_LineJoinMiterProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _deffd.LimAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0069\u006d"}, Value: _e.Sprintf("\u0025\u0076", *_deffd.LimAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorMapping and its children, prefixing error messages with path
func (_gafa *CT_ColorMapping) ValidateWithPath(path string) error {
	if _gafa.Bg1Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073\u002fB\u0067\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cgff := _gafa.Bg1Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0031\u0041\u0074\u0074\u0072"); _cgff != nil {
		return _cgff
	}
	if _gafa.Tx1Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073\u002fT\u0078\u0031\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _gbca := _gafa.Tx1Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0031\u0041\u0074\u0074\u0072"); _gbca != nil {
		return _gbca
	}
	if _gafa.Bg2Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073\u002fB\u0067\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fegg := _gafa.Bg2Attr.ValidateWithPath(path + "\u002f\u0042\u0067\u0032\u0041\u0074\u0074\u0072"); _fegg != nil {
		return _fegg
	}
	if _gafa.Tx2Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073\u002fT\u0078\u0032\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _fcab := _gafa.Tx2Attr.ValidateWithPath(path + "\u002f\u0054\u0078\u0032\u0041\u0074\u0074\u0072"); _fcab != nil {
		return _fcab
	}
	if _gafa.Accent1Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0031\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gcaee := _gafa.Accent1Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0031\u0041\u0074\u0074\u0072"); _gcaee != nil {
		return _gcaee
	}
	if _gafa.Accent2Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0032\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bgddg := _gafa.Accent2Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0032\u0041\u0074\u0074\u0072"); _bgddg != nil {
		return _bgddg
	}
	if _gafa.Accent3Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0033\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bfga := _gafa.Accent3Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0033\u0041\u0074\u0074\u0072"); _bfga != nil {
		return _bfga
	}
	if _gafa.Accent4Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0034\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _gbbb := _gafa.Accent4Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0034\u0041\u0074\u0074\u0072"); _gbbb != nil {
		return _gbbb
	}
	if _gafa.Accent5Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0035\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _eeaf := _gafa.Accent5Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0035\u0041\u0074\u0074\u0072"); _eeaf != nil {
		return _eeaf
	}
	if _gafa.Accent6Attr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("%\u0073\u002f\u0041\u0063\u0063\u0065n\u0074\u0036\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _abcc := _gafa.Accent6Attr.ValidateWithPath(path + "\u002f\u0041\u0063c\u0065\u006e\u0074\u0036\u0041\u0074\u0074\u0072"); _abcc != nil {
		return _abcc
	}
	if _gafa.HlinkAttr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0048\u006c\u0069n\u006b\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _ebbc := _gafa.HlinkAttr.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _ebbc != nil {
		return _ebbc
	}
	if _gafa.FolHlinkAttr == ST_ColorSchemeIndexUnset {
		return _e.Errorf("\u0025\u0073/F\u006f\u006c\u0048l\u0069\u006e\u006b\u0041ttr\u0020is\u0020\u0061\u0020\u006d\u0061\u006e\u0064at\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _ggdb := _gafa.FolHlinkAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006c\u0048\u006c\u0069\u006e\u006b\u0041\u0074\u0074\u0072"); _ggdb != nil {
		return _ggdb
	}
	if _gafa.ExtLst != nil {
		if _gfea := _gafa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gfea != nil {
			return _gfea
		}
	}
	return nil
}
func (_cega *EG_FillModeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cega.Tile != nil {
		_agcgbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0069\u006c\u0065"}}
		e.EncodeElement(_cega.Tile, _agcgbf)
	}
	if _cega.Stretch != nil {
		_bafab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0074\u0072\u0065\u0074\u0063h"}}
		e.EncodeElement(_cega.Stretch, _bafab)
	}
	return nil
}
func (_abeaf *ThemeManager) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abeaf.CT_EmptyElement = *NewCT_EmptyElement()
	for {
		_cedbc, _gabced := d.Token()
		if _gabced != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0054\u0068\u0065\u006d\u0065M\u0061\u006e\u0061\u0067\u0065\u0072\u003a\u0020\u0025\u0073", _gabced)
		}
		if _cdegc, _gcgbf := _cedbc.(_d.EndElement); _gcgbf && _cdegc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gaabe ST_Coordinate32) String() string {
	if _gaabe.ST_Coordinate32Unqualified != nil {
		return _e.Sprintf("\u0025\u0076", *_gaabe.ST_Coordinate32Unqualified)
	}
	if _gaabe.ST_UniversalMeasure != nil {
		return _e.Sprintf("\u0025\u0076", *_gaabe.ST_UniversalMeasure)
	}
	return ""
}
func NewCT_Color() *CT_Color { _degcd := &CT_Color{}; return _degcd }
func (_bagde *CT_GraphicalObject) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_ggee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}}
	e.EncodeElement(_bagde.GraphicData, _ggee)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ccfef ST_AnimationBuildType) Validate() error { return _ccfef.ValidateWithPath("") }

// ValidateWithPath validates the CT_TransformEffect and its children, prefixing error messages with path
func (_eaead *CT_TransformEffect) ValidateWithPath(path string) error {
	if _eaead.SxAttr != nil {
		if _ebcdg := _eaead.SxAttr.ValidateWithPath(path + "\u002fS\u0078\u0041\u0074\u0074\u0072"); _ebcdg != nil {
			return _ebcdg
		}
	}
	if _eaead.SyAttr != nil {
		if _dcbebd := _eaead.SyAttr.ValidateWithPath(path + "\u002fS\u0079\u0041\u0074\u0074\u0072"); _dcbebd != nil {
			return _dcbebd
		}
	}
	if _eaead.KxAttr != nil {
		if *_eaead.KxAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_eaead.KxAttr)
		}
		if *_eaead.KxAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0078\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_eaead.KxAttr)
		}
	}
	if _eaead.KyAttr != nil {
		if *_eaead.KyAttr <= -5400000 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u003e\u0020\u002d\u0035\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_eaead.KyAttr)
		}
		if *_eaead.KyAttr >= 5400000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004b\u0079\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020<\u0020\u0035\u0034\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_eaead.KyAttr)
		}
	}
	if _eaead.TxAttr != nil {
		if _gcfbf := _eaead.TxAttr.ValidateWithPath(path + "\u002fT\u0078\u0041\u0074\u0074\u0072"); _gcfbf != nil {
			return _gcfbf
		}
	}
	if _eaead.TyAttr != nil {
		if _eadb := _eaead.TyAttr.ValidateWithPath(path + "\u002fT\u0079\u0041\u0074\u0074\u0072"); _eadb != nil {
			return _eadb
		}
	}
	return nil
}
func (_fffadg *CT_TextLineBreak) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fffadg.RPr != nil {
		_edffg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_fffadg.RPr, _edffg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aadacd ST_TextHorzOverflowType) String() string {
	switch _aadacd {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}
func NewCT_GvmlTextShape() *CT_GvmlTextShape {
	_bdabbf := &CT_GvmlTextShape{}
	_bdabbf.TxBody = NewCT_TextBody()
	return _bdabbf
}
func NewCT_TablePartStyle() *CT_TablePartStyle { _deag := &CT_TablePartStyle{}; return _deag }
func (_fdgfa *EG_LineDashProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fdgfa.PrstDash != nil {
		_befbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_fdgfa.PrstDash, _befbd)
	}
	if _fdgfa.CustDash != nil {
		_gdbgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_fdgfa.CustDash, _gdbgd)
	}
	return nil
}
func (_cdfcd ST_Percentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cdfcd.ST_PercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_cdfcd.ST_PercentageDecimal)))
	}
	if _cdfcd.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_cdfcd.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_deebb *EG_TextUnderlineFill) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bfbfg:
	for {
		_adabb, _fbega := d.Token()
		if _fbega != nil {
			return _fbega
		}
		switch _bedadb := _adabb.(type) {
		case _d.StartElement:
			switch _bedadb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_deebb.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _cdega := d.DecodeElement(_deebb.UFillTx, &_bedadb); _cdega != nil {
					return _cdega
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_deebb.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _dbffc := d.DecodeElement(_deebb.UFill, &_bedadb); _dbffc != nil {
					return _dbffc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0020\u0025\u0076", _bedadb.Name)
				if _bgcfc := d.Skip(); _bgcfc != nil {
					return _bgcfc
				}
			}
		case _d.EndElement:
			break _bfbfg
		case _d.CharData:
		}
	}
	return nil
}
func (_egc *CT_GrayscaleTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bdggeb ST_CompoundLine) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bdggeb.String(), start)
}
func (_ecbe *CT_Backdrop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eaace := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0061\u006e\u0063\u0068\u006f\u0072"}}
	e.EncodeElement(_ecbe.Anchor, _eaace)
	_dfab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d"}}
	e.EncodeElement(_ecbe.Norm, _dfab)
	_geed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075\u0070"}}
	e.EncodeElement(_ecbe.Up, _geed)
	if _ecbe.ExtLst != nil {
		_cebd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ecbe.ExtLst, _cebd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextUnderlineFillFollowText and its children, prefixing error messages with path
func (_edcf *CT_TextUnderlineFillFollowText) ValidateWithPath(path string) error { return nil }
func NewCT_BaseStylesOverride() *CT_BaseStylesOverride {
	_bdea := &CT_BaseStylesOverride{}
	return _bdea
}

const (
	ST_PresetLineDashValUnset         ST_PresetLineDashVal = 0
	ST_PresetLineDashValSolid         ST_PresetLineDashVal = 1
	ST_PresetLineDashValDot           ST_PresetLineDashVal = 2
	ST_PresetLineDashValDash          ST_PresetLineDashVal = 3
	ST_PresetLineDashValLgDash        ST_PresetLineDashVal = 4
	ST_PresetLineDashValDashDot       ST_PresetLineDashVal = 5
	ST_PresetLineDashValLgDashDot     ST_PresetLineDashVal = 6
	ST_PresetLineDashValLgDashDotDot  ST_PresetLineDashVal = 7
	ST_PresetLineDashValSysDash       ST_PresetLineDashVal = 8
	ST_PresetLineDashValSysDot        ST_PresetLineDashVal = 9
	ST_PresetLineDashValSysDashDot    ST_PresetLineDashVal = 10
	ST_PresetLineDashValSysDashDotDot ST_PresetLineDashVal = 11
)

func NewCT_TextBulletSizeFollowText() *CT_TextBulletSizeFollowText {
	_eddba := &CT_TextBulletSizeFollowText{}
	return _eddba
}
func (_dbabf *CT_Point3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aedgfd := range start.Attr {
		if _aedgfd.Name.Local == "\u0078" {
			_daaa, _ddadad := ParseUnionST_Coordinate(_aedgfd.Value)
			if _ddadad != nil {
				return _ddadad
			}
			_dbabf.XAttr = _daaa
			continue
		}
		if _aedgfd.Name.Local == "\u0079" {
			_efbfe, _abggd := ParseUnionST_Coordinate(_aedgfd.Value)
			if _abggd != nil {
				return _abggd
			}
			_dbabf.YAttr = _efbfe
			continue
		}
		if _aedgfd.Name.Local == "\u007a" {
			_ddfba, _geegc := ParseUnionST_Coordinate(_aedgfd.Value)
			if _geegc != nil {
				return _geegc
			}
			_dbabf.ZAttr = _ddfba
			continue
		}
	}
	for {
		_gcbcf, _ececd := d.Token()
		if _ececd != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044\u003a\u0020%\u0073", _ececd)
		}
		if _ebfcd, _fbabc := _gcbcf.(_d.EndElement); _fbabc && _ebfcd.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ClipboardStyleSheet and its children
func (_dceg *CT_ClipboardStyleSheet) Validate() error {
	return _dceg.ValidateWithPath("\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074")
}

type ST_PresetPatternVal byte

func NewCT_Angle() *CT_Angle { _gbec := &CT_Angle{}; return _gbec }

type ST_EffectContainerType byte

// ValidateWithPath validates the CT_TablePropertiesChoice and its children, prefixing error messages with path
func (_bddad *CT_TablePropertiesChoice) ValidateWithPath(path string) error {
	if _bddad.TableStyle != nil {
		if _acabg := _bddad.TableStyle.ValidateWithPath(path + "/\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"); _acabg != nil {
			return _acabg
		}
	}
	if _bddad.TableStyleId != nil {
		if !_a.ST_GuidPatternRe.MatchString(*_bddad.TableStyleId) {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0054\u0061b\u006c\u0065\u0053t\u0079\u006c\u0065\u0049d\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020\u0027\u0025\u0073\u0027\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, *_bddad.TableStyleId)
		}
	}
	return nil
}
func (_gbfaea *ST_FixedPercentage) Validate() error { return _gbfaea.ValidateWithPath("") }

type CT_AudioFile struct {
	LinkAttr        string
	ContentTypeAttr *string
	ExtLst          *CT_OfficeArtExtensionList
}
type CT_AlphaReplaceEffect struct{ AAttr ST_PositiveFixedPercentage }

// ValidateWithPath validates the CT_TableCell and its children, prefixing error messages with path
func (_bcdcb *CT_TableCell) ValidateWithPath(path string) error {
	if _bcdcb.TxBody != nil {
		if _eeebe := _bcdcb.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _eeebe != nil {
			return _eeebe
		}
	}
	if _bcdcb.TcPr != nil {
		if _afdcb := _bcdcb.TcPr.ValidateWithPath(path + "\u002f\u0054\u0063P\u0072"); _afdcb != nil {
			return _afdcb
		}
	}
	if _bcdcb.ExtLst != nil {
		if _aedde := _bcdcb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _aedde != nil {
			return _aedde
		}
	}
	return nil
}
func (_agfgd *ST_LineEndWidth) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_agfgd = 0
	case "\u0073\u006d":
		*_agfgd = 1
	case "\u006d\u0065\u0064":
		*_agfgd = 2
	case "\u006c\u0067":
		*_agfgd = 3
	}
	return nil
}

type CT_FillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func NewCT_TextAutonumberBullet() *CT_TextAutonumberBullet {
	_eaab := &CT_TextAutonumberBullet{}
	_eaab.TypeAttr = ST_TextAutonumberScheme(1)
	return _eaab
}

type CT_GvmlShape struct {
	NvSpPr *CT_GvmlShapeNonVisual
	SpPr   *CT_ShapeProperties
	TxSp   *CT_GvmlTextShape
	Style  *CT_ShapeStyle
	ExtLst *CT_OfficeArtExtensionList
}

// Validate validates the CT_AlphaModulateFixedEffect and its children
func (_ceg *CT_AlphaModulateFixedEffect) Validate() error {
	return _ceg.ValidateWithPath("C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074")
}
func (_cdeff *CT_TextUnderlineFillGroupWrapper) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbgfa:
	for {
		_bcgcd, _baeeec := d.Token()
		if _baeeec != nil {
			return _baeeec
		}
		switch _cagfa := _bcgcd.(type) {
		case _d.StartElement:
			switch _cagfa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cdeff.NoFill = NewCT_NoFillProperties()
				if _ecabb := d.DecodeElement(_cdeff.NoFill, &_cagfa); _ecabb != nil {
					return _ecabb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cdeff.SolidFill = NewCT_SolidColorFillProperties()
				if _dfaee := d.DecodeElement(_cdeff.SolidFill, &_cagfa); _dfaee != nil {
					return _dfaee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cdeff.GradFill = NewCT_GradientFillProperties()
				if _gaeeb := d.DecodeElement(_cdeff.GradFill, &_cagfa); _gaeeb != nil {
					return _gaeeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cdeff.BlipFill = NewCT_BlipFillProperties()
				if _aacec := d.DecodeElement(_cdeff.BlipFill, &_cagfa); _aacec != nil {
					return _aacec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cdeff.PattFill = NewCT_PatternFillProperties()
				if _bfcbd := d.DecodeElement(_cdeff.PattFill, &_cagfa); _bfcbd != nil {
					return _bfcbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cdeff.GrpFill = NewCT_GroupFillProperties()
				if _gbgbg := d.DecodeElement(_cdeff.GrpFill, &_cagfa); _gbgbg != nil {
					return _gbgbg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078t\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0047\u0072o\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065r\u0020\u0025\u0076", _cagfa.Name)
				if _aabgcg := d.Skip(); _aabgcg != nil {
					return _aabgcg
				}
			}
		case _d.EndElement:
			break _cbgfa
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_TableProperties() *CT_TableProperties { _cged := &CT_TableProperties{}; return _cged }
func ParseUnionST_AdjAngle(s string) (ST_AdjAngle, error) {
	_bccae := ST_AdjAngle{}
	_bfcad, _dddfgc := _cd.ParseInt(s, 10, 64)
	if _dddfgc != nil {
		_bccae.ST_GeomGuideName = &s
	} else {
		_caeae := int32(_bfcad)
		_bccae.ST_Angle = &_caeae
	}
	return _bccae, nil
}
func (_fbdac *ST_TextFontScalePercentOrPercentString) Validate() error {
	return _fbdac.ValidateWithPath("")
}

// Validate validates the CT_DefaultShapeDefinition and its children
func (_cafd *CT_DefaultShapeDefinition) Validate() error {
	return _cafd.ValidateWithPath("\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn")
}
func (_efg *CT_AlphaModulateFixedEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _edfg := range start.Attr {
		if _edfg.Name.Local == "\u0061\u006d\u0074" {
			_ecec, _bcg := ParseUnionST_PositivePercentage(_edfg.Value)
			if _bcg != nil {
				return _bcg
			}
			_efg.AmtAttr = &_ecec
			continue
		}
	}
	for {
		_adba, _aed := d.Token()
		if _aed != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0075l\u0061\u0074\u0065\u0046\u0069\u0078\u0065\u0064\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _aed)
		}
		if _aee, _bab := _adba.(_d.EndElement); _bab && _aee.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bfebc *CT_ClipboardStyleSheet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Name.Local = "\u0061:\u0043\u0054\u005f\u0043\u006c\u0069\u0070\u0062\u006f\u0061\u0072d\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074"
	e.EncodeToken(start)
	_fdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_bfebc.ThemeElements, _fdf)
	_fgfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006c\u0072\u004d\u0061\u0070"}}
	e.EncodeElement(_bfebc.ClrMap, _fgfe)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AnimationChartBuildProperties and its children, prefixing error messages with path
func (_aec *CT_AnimationChartBuildProperties) ValidateWithPath(path string) error {
	if _aec.BldAttr != nil {
		if _acd := _aec.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _acd != nil {
			return _acd
		}
	}
	return nil
}
func (_aafea *CT_FontCollection) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gafce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
	e.EncodeElement(_aafea.Latin, _gafce)
	_fdcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0061"}}
	e.EncodeElement(_aafea.Ea, _fdcf)
	_dcee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0073"}}
	e.EncodeElement(_aafea.Cs, _dcee)
	if _aafea.Font != nil {
		_gbed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006e\u0074"}}
		for _, _dgcfd := range _aafea.Font {
			e.EncodeElement(_dgcfd, _gbed)
		}
	}
	if _aafea.ExtLst != nil {
		_acfae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_aafea.ExtLst, _acfae)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ggcaa ST_TextTabAlignType) ValidateWithPath(path string) error {
	switch _ggcaa {
	case 0, 1, 2, 3, 4:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ggcaa))
	}
	return nil
}

// Validate validates the CT_PositiveFixedAngle and its children
func (_adfgd *CT_PositiveFixedAngle) Validate() error {
	return _adfgd.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065")
}

// ValidateWithPath validates the CT_PresetColor and its children, prefixing error messages with path
func (_cgfcff *CT_PresetColor) ValidateWithPath(path string) error {
	if _cgfcff.ValAttr == ST_PresetColorValUnset {
		return _e.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _feeg := _cgfcff.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _feeg != nil {
		return _feeg
	}
	for _bbbaf, _fcgf := range _cgfcff.EG_ColorTransform {
		if _fagae := _fcgf.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _bbbaf)); _fagae != nil {
			return _fagae
		}
	}
	return nil
}
func NewCT_ThemeableLineStyle() *CT_ThemeableLineStyle {
	_fcgcb := &CT_ThemeableLineStyle{}
	return _fcgcb
}
func (_egfdg *ST_PathFillMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_egfdg = 0
	case "\u006e\u006f\u006e\u0065":
		*_egfdg = 1
	case "\u006e\u006f\u0072\u006d":
		*_egfdg = 2
	case "\u006ci\u0067\u0068\u0074\u0065\u006e":
		*_egfdg = 3
	case "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073":
		*_egfdg = 4
	case "\u0064\u0061\u0072\u006b\u0065\u006e":
		*_egfdg = 5
	case "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073":
		*_egfdg = 6
	}
	return nil
}
func (_dfeacf *ST_TextHorzOverflowType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fbdcag, _bbafe := d.Token()
	if _bbafe != nil {
		return _bbafe
	}
	if _gdbfc, _cdcgc := _fbdcag.(_d.EndElement); _cdcgc && _gdbfc.Name == start.Name {
		*_dfeacf = 1
		return nil
	}
	if _efdff, _dfcea := _fbdcag.(_d.CharData); !_dfcea {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fbdcag)
	} else {
		switch string(_efdff) {
		case "":
			*_dfeacf = 0
		case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
			*_dfeacf = 1
		case "\u0063\u006c\u0069\u0070":
			*_dfeacf = 2
		}
	}
	_fbdcag, _bbafe = d.Token()
	if _bbafe != nil {
		return _bbafe
	}
	if _fcagc, _fdgd := _fbdcag.(_d.EndElement); _fdgd && _fcagc.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fbdcag)
}

// Validate validates the CT_Point3D and its children
func (_bgceb *CT_Point3D) Validate() error {
	return _bgceb.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044")
}
func (_baedb ST_TextAutonumberScheme) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ccffe := _d.Attr{}
	_ccffe.Name = name
	switch _baedb {
	case ST_TextAutonumberSchemeUnset:
		_ccffe.Value = ""
	case ST_TextAutonumberSchemeAlphaLcParenBoth:
		_ccffe.Value = "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaUcParenBoth:
		_ccffe.Value = "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeAlphaLcParenR:
		_ccffe.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaUcParenR:
		_ccffe.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeAlphaLcPeriod:
		_ccffe.Value = "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeAlphaUcPeriod:
		_ccffe.Value = "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicParenBoth:
		_ccffe.Value = "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeArabicParenR:
		_ccffe.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeArabicPeriod:
		_ccffe.Value = "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicPlain:
		_ccffe.Value = "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeRomanLcParenBoth:
		_ccffe.Value = "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanUcParenBoth:
		_ccffe.Value = "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeRomanLcParenR:
		_ccffe.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanUcParenR:
		_ccffe.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeRomanLcPeriod:
		_ccffe.Value = "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeRomanUcPeriod:
		_ccffe.Value = "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeCircleNumDbPlain:
		_ccffe.Value = "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdBlackPlain:
		_ccffe.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeCircleNumWdWhitePlain:
		_ccffe.Value = "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeArabicDbPeriod:
		_ccffe.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabicDbPlain:
		_ccffe.Value = "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChsPeriod:
		_ccffe.Value = "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChsPlain:
		_ccffe.Value = "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1ChtPeriod:
		_ccffe.Value = "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1ChtPlain:
		_ccffe.Value = "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnChsDbPeriod:
		_ccffe.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeEa1JpnKorPlain:
		_ccffe.Value = "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case ST_TextAutonumberSchemeEa1JpnKorPeriod:
		_ccffe.Value = "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeArabic1Minus:
		_ccffe.Value = "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeArabic2Minus:
		_ccffe.Value = "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeHebrew2Minus:
		_ccffe.Value = "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case ST_TextAutonumberSchemeThaiAlphaPeriod:
		_ccffe.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiAlphaParenR:
		_ccffe.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiAlphaParenBoth:
		_ccffe.Value = "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeThaiNumPeriod:
		_ccffe.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeThaiNumParenR:
		_ccffe.Value = "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeThaiNumParenBoth:
		_ccffe.Value = "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case ST_TextAutonumberSchemeHindiAlphaPeriod:
		_ccffe.Value = "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumPeriod:
		_ccffe.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case ST_TextAutonumberSchemeHindiNumParenR:
		_ccffe.Value = "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case ST_TextAutonumberSchemeHindiAlpha1Period:
		_ccffe.Value = "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return _ccffe, nil
}
func (_add *Blip) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0062\u006c\u0069\u0070"
	return _add.CT_Blip.MarshalXML(e, start)
}

// ST_AnimationDgmBuildType is a union type
type ST_AnimationDgmBuildType struct {
	ST_AnimationBuildType        ST_AnimationBuildType
	ST_AnimationDgmOnlyBuildType ST_AnimationDgmOnlyBuildType
}

func (_bdcga *CT_SoftEdgesEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdcga.RadAttr = 0
	for _, _cdbge := range start.Attr {
		if _cdbge.Name.Local == "\u0072\u0061\u0064" {
			_fbddb, _eegfd := _cd.ParseInt(_cdbge.Value, 10, 64)
			if _eegfd != nil {
				return _eegfd
			}
			_bdcga.RadAttr = _fbddb
			continue
		}
	}
	for {
		_agcce, _fddac := d.Token()
		if _fddac != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0053\u006f\u0066\u0074\u0045\u0064\u0067e\u0073\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _fddac)
		}
		if _dfegb, _aaaad := _agcce.(_d.EndElement); _aaaad && _dfegb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eagde *CT_FlatText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eagde.ZAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _e.Sprintf("\u0025\u0076", *_eagde.ZAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gagbf ST_PresetMaterialType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_adfba := _d.Attr{}
	_adfba.Name = name
	switch _gagbf {
	case ST_PresetMaterialTypeUnset:
		_adfba.Value = ""
	case ST_PresetMaterialTypeLegacyMatte:
		_adfba.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065"
	case ST_PresetMaterialTypeLegacyPlastic:
		_adfba.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeLegacyMetal:
		_adfba.Value = "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c"
	case ST_PresetMaterialTypeLegacyWireframe:
		_adfba.Value = "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065"
	case ST_PresetMaterialTypeMatte:
		_adfba.Value = "\u006d\u0061\u0074t\u0065"
	case ST_PresetMaterialTypePlastic:
		_adfba.Value = "\u0070l\u0061\u0073\u0074\u0069\u0063"
	case ST_PresetMaterialTypeMetal:
		_adfba.Value = "\u006d\u0065\u0074a\u006c"
	case ST_PresetMaterialTypeWarmMatte:
		_adfba.Value = "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e"
	case ST_PresetMaterialTypeTranslucentPowder:
		_adfba.Value = "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypePowder:
		_adfba.Value = "\u0070\u006f\u0077\u0064\u0065\u0072"
	case ST_PresetMaterialTypeDkEdge:
		_adfba.Value = "\u0064\u006b\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeSoftEdge:
		_adfba.Value = "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"
	case ST_PresetMaterialTypeClear:
		_adfba.Value = "\u0063\u006c\u0065a\u0072"
	case ST_PresetMaterialTypeFlat:
		_adfba.Value = "\u0066\u006c\u0061\u0074"
	case ST_PresetMaterialTypeSoftmetal:
		_adfba.Value = "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l"
	}
	return _adfba, nil
}

// Validate validates the EG_LineDashProperties and its children
func (_bacbg *EG_LineDashProperties) Validate() error {
	return _bacbg.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gaege *CT_SupplementalFont) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgcfa := range start.Attr {
		if _bgcfa.Name.Local == "\u0073\u0063\u0072\u0069\u0070\u0074" {
			_egefe, _gecdb := _bgcfa.Value, error(nil)
			if _gecdb != nil {
				return _gecdb
			}
			_gaege.ScriptAttr = _egefe
			continue
		}
		if _bgcfa.Name.Local == "\u0074\u0079\u0070\u0065\u0066\u0061\u0063\u0065" {
			_fgebe, _bcgcgd := _bgcfa.Value, error(nil)
			if _bcgcgd != nil {
				return _bcgcgd
			}
			_gaege.TypefaceAttr = _fgebe
			continue
		}
	}
	for {
		_debga, _faacfe := d.Token()
		if _faacfe != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0053\u0075\u0070\u0070\u006ce\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074\u003a\u0020\u0025\u0073", _faacfe)
		}
		if _bgaed, _geagd := _debga.(_d.EndElement); _geagd && _bgaed.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_TextBulletSizePoint and its children, prefixing error messages with path
func (_abgfb *CT_TextBulletSizePoint) ValidateWithPath(path string) error {
	if _abgfb.ValAttr < 100 {
		return _e.Errorf("\u0025\u0073/\u006d\u002e\u0056\u0061l\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003e\u003d\u0020\u0031\u0030\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, _abgfb.ValAttr)
	}
	if _abgfb.ValAttr > 400000 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0034\u0030\u0030\u0030\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _abgfb.ValAttr)
	}
	return nil
}

type ST_LineCap byte

// ValidateWithPath validates the CT_AlphaOutsetEffect and its children, prefixing error messages with path
func (_gaaf *CT_AlphaOutsetEffect) ValidateWithPath(path string) error {
	if _gaaf.RadAttr != nil {
		if _aeec := _gaaf.RadAttr.ValidateWithPath(path + "\u002f\u0052\u0061\u0064\u0041\u0074\u0074\u0072"); _aeec != nil {
			return _aeec
		}
	}
	return nil
}
func NewCT_TextTabStop() *CT_TextTabStop { _dfdag := &CT_TextTabStop{}; return _dfdag }
func (_dfbcd ST_PositivePercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dfbcd.ST_PositivePercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_dfbcd.ST_PositivePercentageDecimal)))
	}
	if _dfbcd.ST_PositivePercentage != nil {
		e.Encode(_dfbcd.ST_PositivePercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_EffectContainer and its children, prefixing error messages with path
func (_gfbe *CT_EffectContainer) ValidateWithPath(path string) error {
	if _bbfe := _gfbe.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _bbfe != nil {
		return _bbfe
	}
	if _gfbe.Cont != nil {
		if _ggegg := _gfbe.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _ggegg != nil {
			return _ggegg
		}
	}
	if _gfbe.Effect != nil {
		if _gfda := _gfbe.Effect.ValidateWithPath(path + "\u002fE\u0066\u0066\u0065\u0063\u0074"); _gfda != nil {
			return _gfda
		}
	}
	if _gfbe.AlphaBiLevel != nil {
		if _baaf := _gfbe.AlphaBiLevel.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _baaf != nil {
			return _baaf
		}
	}
	if _gfbe.AlphaCeiling != nil {
		if _faba := _gfbe.AlphaCeiling.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"); _faba != nil {
			return _faba
		}
	}
	if _gfbe.AlphaFloor != nil {
		if _ceac := _gfbe.AlphaFloor.ValidateWithPath(path + "/\u0041\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"); _ceac != nil {
			return _ceac
		}
	}
	if _gfbe.AlphaInv != nil {
		if _abebc := _gfbe.AlphaInv.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u0049\u006ev"); _abebc != nil {
			return _abebc
		}
	}
	if _gfbe.AlphaMod != nil {
		if _cdbb := _gfbe.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _cdbb != nil {
			return _cdbb
		}
	}
	if _gfbe.AlphaModFix != nil {
		if _dfeed := _gfbe.AlphaModFix.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"); _dfeed != nil {
			return _dfeed
		}
	}
	if _gfbe.AlphaOutset != nil {
		if _cgcae := _gfbe.AlphaOutset.ValidateWithPath(path + "\u002f\u0041\u006cp\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"); _cgcae != nil {
			return _cgcae
		}
	}
	if _gfbe.AlphaRepl != nil {
		if _fbcec := _gfbe.AlphaRepl.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061\u0052\u0065\u0070\u006c"); _fbcec != nil {
			return _fbcec
		}
	}
	if _gfbe.BiLevel != nil {
		if _bgcf := _gfbe.BiLevel.ValidateWithPath(path + "\u002f\u0042\u0069\u004c\u0065\u0076\u0065\u006c"); _bgcf != nil {
			return _bgcf
		}
	}
	if _gfbe.Blend != nil {
		if _abfed := _gfbe.Blend.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064"); _abfed != nil {
			return _abfed
		}
	}
	if _gfbe.Blur != nil {
		if _fceb := _gfbe.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _fceb != nil {
			return _fceb
		}
	}
	if _gfbe.ClrChange != nil {
		if _aafe := _gfbe.ClrChange.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0043\u0068\u0061\u006e\u0067\u0065"); _aafe != nil {
			return _aafe
		}
	}
	if _gfbe.ClrRepl != nil {
		if _cfgcb := _gfbe.ClrRepl.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0052\u0065\u0070\u006c"); _cfgcb != nil {
			return _cfgcb
		}
	}
	if _gfbe.Duotone != nil {
		if _eddbg := _gfbe.Duotone.ValidateWithPath(path + "\u002f\u0044\u0075\u006f\u0074\u006f\u006e\u0065"); _eddbg != nil {
			return _eddbg
		}
	}
	if _gfbe.Fill != nil {
		if _eadc := _gfbe.Fill.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c"); _eadc != nil {
			return _eadc
		}
	}
	if _gfbe.FillOverlay != nil {
		if _ggcd := _gfbe.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _ggcd != nil {
			return _ggcd
		}
	}
	if _gfbe.Glow != nil {
		if _fadaa := _gfbe.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _fadaa != nil {
			return _fadaa
		}
	}
	if _gfbe.Grayscl != nil {
		if _dfbf := _gfbe.Grayscl.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0079\u0073\u0063\u006c"); _dfbf != nil {
			return _dfbf
		}
	}
	if _gfbe.Hsl != nil {
		if _dddf := _gfbe.Hsl.ValidateWithPath(path + "\u002f\u0048\u0073\u006c"); _dddf != nil {
			return _dddf
		}
	}
	if _gfbe.InnerShdw != nil {
		if _aaaaa := _gfbe.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _aaaaa != nil {
			return _aaaaa
		}
	}
	if _gfbe.Lum != nil {
		if _gdcbf := _gfbe.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _gdcbf != nil {
			return _gdcbf
		}
	}
	if _gfbe.OuterShdw != nil {
		if _cada := _gfbe.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _cada != nil {
			return _cada
		}
	}
	if _gfbe.PrstShdw != nil {
		if _gcbcd := _gfbe.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _gcbcd != nil {
			return _gcbcd
		}
	}
	if _gfbe.Reflection != nil {
		if _aefda := _gfbe.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _aefda != nil {
			return _aefda
		}
	}
	if _gfbe.RelOff != nil {
		if _badf := _gfbe.RelOff.ValidateWithPath(path + "\u002fR\u0065\u006c\u004f\u0066\u0066"); _badf != nil {
			return _badf
		}
	}
	if _gfbe.SoftEdge != nil {
		if _dfefg := _gfbe.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _dfefg != nil {
			return _dfefg
		}
	}
	if _gfbe.Tint != nil {
		if _gfgc := _gfbe.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _gfgc != nil {
			return _gfgc
		}
	}
	if _gfbe.Xfrm != nil {
		if _cedac := _gfbe.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _cedac != nil {
			return _cedac
		}
	}
	return nil
}
func (_fdagb *ST_LineEndLength) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bceac, _adege := d.Token()
	if _adege != nil {
		return _adege
	}
	if _eeeddc, _cfcedf := _bceac.(_d.EndElement); _cfcedf && _eeeddc.Name == start.Name {
		*_fdagb = 1
		return nil
	}
	if _aabbf, _bdcba := _bceac.(_d.CharData); !_bdcba {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bceac)
	} else {
		switch string(_aabbf) {
		case "":
			*_fdagb = 0
		case "\u0073\u006d":
			*_fdagb = 1
		case "\u006d\u0065\u0064":
			*_fdagb = 2
		case "\u006c\u0067":
			*_fdagb = 3
		}
	}
	_bceac, _adege = d.Token()
	if _adege != nil {
		return _adege
	}
	if _dfbbee, _fcgcc := _bceac.(_d.EndElement); _fcgcc && _dfbbee.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bceac)
}
func (_bedgcc *EG_TextBulletTypeface) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bedgcc.BuFontTx != nil {
		_dbbcea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}}
		e.EncodeElement(_bedgcc.BuFontTx, _dbbcea)
	}
	if _bedgcc.BuFont != nil {
		_bbdgge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0046\u006f\u006e\u0074"}}
		e.EncodeElement(_bedgcc.BuFont, _bbdgge)
	}
	return nil
}
func (_beadc ST_AnimationBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_geccc := _d.Attr{}
	_geccc.Name = name
	switch _beadc {
	case ST_AnimationBuildTypeUnset:
		_geccc.Value = ""
	case ST_AnimationBuildTypeAllAtOnce:
		_geccc.Value = "\u0061l\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return _geccc, nil
}
func (_dccdc *ST_RectAlignment) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dccdc = 0
	case "\u0074\u006c":
		*_dccdc = 1
	case "\u0074":
		*_dccdc = 2
	case "\u0074\u0072":
		*_dccdc = 3
	case "\u006c":
		*_dccdc = 4
	case "\u0063\u0074\u0072":
		*_dccdc = 5
	case "\u0072":
		*_dccdc = 6
	case "\u0062\u006c":
		*_dccdc = 7
	case "\u0062":
		*_dccdc = 8
	case "\u0062\u0072":
		*_dccdc = 9
	}
	return nil
}

// Validate validates the CT_GeomGuide and its children
func (_dcbgc *CT_GeomGuide) Validate() error {
	return _dcbgc.ValidateWithPath("\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065")
}
func (_aedce ST_AnimationChartOnlyBuildType) ValidateWithPath(path string) error {
	switch _aedce {
	case 0, 1, 2, 3, 4:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aedce))
	}
	return nil
}

type EG_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

// ValidateWithPath validates the CT_TextUnderlineLineFollowText and its children, prefixing error messages with path
func (_gcfgd *CT_TextUnderlineLineFollowText) ValidateWithPath(path string) error { return nil }
func NewThemeManager() *ThemeManager {
	_dfagf := &ThemeManager{}
	_dfagf.CT_EmptyElement = *NewCT_EmptyElement()
	return _dfagf
}
func NewCT_ScRgbColor() *CT_ScRgbColor { _ebcd := &CT_ScRgbColor{}; return _ebcd }

type ST_AnimationChartOnlyBuildType byte
type CT_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

// Validate validates the EG_TextAutofit and its children
func (_gfbda *EG_TextAutofit) Validate() error {
	return _gfbda.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074")
}

type CT_GraphicalObjectData struct {
	UriAttr string
	Any     []_ff.Any
}

func (_cccdg *EG_TextBulletColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_agadfd:
	for {
		_cgcbc, _fgdc := d.Token()
		if _fgdc != nil {
			return _fgdc
		}
		switch _bacfc := _cgcbc.(type) {
		case _d.StartElement:
			switch _bacfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0043\u006c\u0072\u0054\u0078"}:
				_cccdg.BuClrTx = NewCT_TextBulletColorFollowText()
				if _fgbafa := d.DecodeElement(_cccdg.BuClrTx, &_bacfc); _fgbafa != nil {
					return _fgbafa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043l\u0072"}:
				_cccdg.BuClr = NewCT_Color()
				if _gdbf := d.DecodeElement(_cccdg.BuClr, &_bacfc); _gdbf != nil {
					return _gdbf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075l\u006c\u0065\u0074\u0043\u006f\u006c\u006f\u0072\u0020\u0025\u0076", _bacfc.Name)
				if _fgfbd := d.Skip(); _fgfbd != nil {
					return _fgfbd
				}
			}
		case _d.EndElement:
			break _agadfd
		case _d.CharData:
		}
	}
	return nil
}
func (_dfdde *ST_PresetColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dfdde = 0
	case "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e":
		*_dfdde = 1
	case "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065":
		*_dfdde = 2
	case "\u0061\u0071\u0075\u0061":
		*_dfdde = 3
	case "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfdde = 4
	case "\u0061\u007a\u0075r\u0065":
		*_dfdde = 5
	case "\u0062\u0065\u0069g\u0065":
		*_dfdde = 6
	case "\u0062\u0069\u0073\u0071\u0075\u0065":
		*_dfdde = 7
	case "\u0062\u006c\u0061c\u006b":
		*_dfdde = 8
	case "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064":
		*_dfdde = 9
	case "\u0062\u006c\u0075\u0065":
		*_dfdde = 10
	case "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfdde = 11
	case "\u0062\u0072\u006fw\u006e":
		*_dfdde = 12
	case "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd":
		*_dfdde = 13
	case "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e":
		*_dfdde = 14
	case "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065":
		*_dfdde = 15
	case "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e":
		*_dfdde = 16
	case "\u0063\u006f\u0072a\u006c":
		*_dfdde = 17
	case "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065":
		*_dfdde = 18
	case "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b":
		*_dfdde = 19
	case "\u0063r\u0069\u006d\u0073\u006f\u006e":
		*_dfdde = 20
	case "\u0063\u0079\u0061\u006e":
		*_dfdde = 21
	case "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065":
		*_dfdde = 22
	case "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e":
		*_dfdde = 23
	case "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfdde = 24
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079":
		*_dfdde = 25
	case "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079":
		*_dfdde = 26
	case "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n":
		*_dfdde = 27
	case "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi":
		*_dfdde = 28
	case "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061":
		*_dfdde = 29
	case "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e":
		*_dfdde = 30
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_dfdde = 31
	case "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfdde = 32
	case "\u0064a\u0072\u006b\u0052\u0065\u0064":
		*_dfdde = 33
	case "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfdde = 34
	case "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 35
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfdde = 36
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfdde = 37
	case "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfdde = 38
	case "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfdde = 39
	case "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfdde = 40
	case "\u0064\u006b\u0042\u006c\u0075\u0065":
		*_dfdde = 41
	case "\u0064\u006b\u0043\u0079\u0061\u006e":
		*_dfdde = 42
	case "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfdde = 43
	case "\u0064\u006b\u0047\u0072\u0061\u0079":
		*_dfdde = 44
	case "\u0064\u006b\u0047\u0072\u0065\u0079":
		*_dfdde = 45
	case "\u0064k\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 46
	case "\u0064k\u004b\u0068\u0061\u006b\u0069":
		*_dfdde = 47
	case "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a":
		*_dfdde = 48
	case "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 49
	case "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065":
		*_dfdde = 50
	case "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfdde = 51
	case "\u0064\u006b\u0052e\u0064":
		*_dfdde = 52
	case "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfdde = 53
	case "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 54
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfdde = 55
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfdde = 56
	case "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfdde = 57
	case "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfdde = 58
	case "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074":
		*_dfdde = 59
	case "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b":
		*_dfdde = 60
	case "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_dfdde = 61
	case "\u0064i\u006d\u0047\u0072\u0061\u0079":
		*_dfdde = 62
	case "\u0064i\u006d\u0047\u0072\u0065\u0079":
		*_dfdde = 63
	case "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065":
		*_dfdde = 64
	case "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k":
		*_dfdde = 65
	case "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065":
		*_dfdde = 66
	case "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 67
	case "\u0066u\u0063\u0068\u0073\u0069\u0061":
		*_dfdde = 68
	case "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o":
		*_dfdde = 69
	case "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065":
		*_dfdde = 70
	case "\u0067\u006f\u006c\u0064":
		*_dfdde = 71
	case "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd":
		*_dfdde = 72
	case "\u0067\u0072\u0061\u0079":
		*_dfdde = 73
	case "\u0067\u0072\u0065\u0079":
		*_dfdde = 74
	case "\u0067\u0072\u0065e\u006e":
		*_dfdde = 75
	case "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfdde = 76
	case "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077":
		*_dfdde = 77
	case "\u0068o\u0074\u0050\u0069\u006e\u006b":
		*_dfdde = 78
	case "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d":
		*_dfdde = 79
	case "\u0069\u006e\u0064\u0069\u0067\u006f":
		*_dfdde = 80
	case "\u0069\u0076\u006fr\u0079":
		*_dfdde = 81
	case "\u006b\u0068\u0061k\u0069":
		*_dfdde = 82
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072":
		*_dfdde = 83
	case "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068":
		*_dfdde = 84
	case "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n":
		*_dfdde = 85
	case "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e":
		*_dfdde = 86
	case "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e":
		*_dfdde = 87
	case "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c":
		*_dfdde = 88
	case "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n":
		*_dfdde = 89
	case "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077":
		*_dfdde = 90
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y":
		*_dfdde = 91
	case "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y":
		*_dfdde = 92
	case "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 93
	case "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek":
		*_dfdde = 94
	case "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfdde = 95
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 96
	case "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065":
		*_dfdde = 97
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079":
		*_dfdde = 98
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079":
		*_dfdde = 99
	case "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065":
		*_dfdde = 100
	case "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfdde = 101
	case "\u006c\u0074\u0042\u006c\u0075\u0065":
		*_dfdde = 102
	case "\u006ct\u0043\u006f\u0072\u0061\u006c":
		*_dfdde = 103
	case "\u006c\u0074\u0043\u0079\u0061\u006e":
		*_dfdde = 104
	case "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077":
		*_dfdde = 105
	case "\u006c\u0074\u0047\u0072\u0061\u0079":
		*_dfdde = 106
	case "\u006c\u0074\u0047\u0072\u0065\u0079":
		*_dfdde = 107
	case "\u006ct\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 108
	case "\u006c\u0074\u0050\u0069\u006e\u006b":
		*_dfdde = 109
	case "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e":
		*_dfdde = 110
	case "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 111
	case "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e":
		*_dfdde = 112
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079":
		*_dfdde = 113
	case "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079":
		*_dfdde = 114
	case "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065":
		*_dfdde = 115
	case "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077":
		*_dfdde = 116
	case "\u006c\u0069\u006d\u0065":
		*_dfdde = 117
	case "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n":
		*_dfdde = 118
	case "\u006c\u0069\u006ee\u006e":
		*_dfdde = 119
	case "\u006da\u0067\u0065\u006e\u0074\u0061":
		*_dfdde = 120
	case "\u006d\u0061\u0072\u006f\u006f\u006e":
		*_dfdde = 121
	case "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfdde = 122
	case "\u006de\u0064\u0042\u006c\u0075\u0065":
		*_dfdde = 123
	case "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d":
		*_dfdde = 124
	case "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce":
		*_dfdde = 125
	case "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 126
	case "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfdde = 127
	case "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_dfdde = 128
	case "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfdde = 129
	case "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfdde = 130
	case "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065":
		*_dfdde = 131
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065":
		*_dfdde = 132
	case "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064":
		*_dfdde = 133
	case "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065":
		*_dfdde = 134
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e":
		*_dfdde = 135
	case "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065":
		*_dfdde = 136
	case "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e":
		*_dfdde = 137
	case "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfdde = 138
	case "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfdde = 139
	case "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065":
		*_dfdde = 140
	case "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m":
		*_dfdde = 141
	case "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e":
		*_dfdde = 142
	case "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e":
		*_dfdde = 143
	case "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065":
		*_dfdde = 144
	case "\u006e\u0061\u0076\u0079":
		*_dfdde = 145
	case "\u006fl\u0064\u004c\u0061\u0063\u0065":
		*_dfdde = 146
	case "\u006f\u006c\u0069v\u0065":
		*_dfdde = 147
	case "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b":
		*_dfdde = 148
	case "\u006f\u0072\u0061\u006e\u0067\u0065":
		*_dfdde = 149
	case "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d":
		*_dfdde = 150
	case "\u006f\u0072\u0063\u0068\u0069\u0064":
		*_dfdde = 151
	case "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064":
		*_dfdde = 152
	case "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n":
		*_dfdde = 153
	case "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065":
		*_dfdde = 154
	case "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064":
		*_dfdde = 155
	case "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070":
		*_dfdde = 156
	case "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f":
		*_dfdde = 157
	case "\u0070\u0065\u0072\u0075":
		*_dfdde = 158
	case "\u0070\u0069\u006e\u006b":
		*_dfdde = 159
	case "\u0070\u006c\u0075\u006d":
		*_dfdde = 160
	case "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065":
		*_dfdde = 161
	case "\u0070\u0075\u0072\u0070\u006c\u0065":
		*_dfdde = 162
	case "\u0072\u0065\u0064":
		*_dfdde = 163
	case "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n":
		*_dfdde = 164
	case "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e":
		*_dfdde = 165
	case "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e":
		*_dfdde = 166
	case "\u0073\u0061\u006c\u006d\u006f\u006e":
		*_dfdde = 167
	case "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e":
		*_dfdde = 168
	case "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 169
	case "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c":
		*_dfdde = 170
	case "\u0073\u0069\u0065\u006e\u006e\u0061":
		*_dfdde = 171
	case "\u0073\u0069\u006c\u0076\u0065\u0072":
		*_dfdde = 172
	case "\u0073k\u0079\u0042\u006c\u0075\u0065":
		*_dfdde = 173
	case "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e":
		*_dfdde = 174
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y":
		*_dfdde = 175
	case "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y":
		*_dfdde = 176
	case "\u0073\u006e\u006f\u0077":
		*_dfdde = 177
	case "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 178
	case "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e":
		*_dfdde = 179
	case "\u0074\u0061\u006e":
		*_dfdde = 180
	case "\u0074\u0065\u0061\u006c":
		*_dfdde = 181
	case "\u0074h\u0069\u0073\u0074\u006c\u0065":
		*_dfdde = 182
	case "\u0074\u006f\u006d\u0061\u0074\u006f":
		*_dfdde = 183
	case "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e":
		*_dfdde = 184
	case "\u0076\u0069\u006f\u006c\u0065\u0074":
		*_dfdde = 185
	case "\u0077\u0068\u0065a\u0074":
		*_dfdde = 186
	case "\u0077\u0068\u0069t\u0065":
		*_dfdde = 187
	case "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065":
		*_dfdde = 188
	case "\u0079\u0065\u006c\u006c\u006f\u0077":
		*_dfdde = 189
	case "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e":
		*_dfdde = 190
	}
	return nil
}
func (_ddbff *CT_TextTabStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bggee := range start.Attr {
		if _bggee.Name.Local == "\u0070\u006f\u0073" {
			_feaae, _afgbg := ParseUnionST_Coordinate32(_bggee.Value)
			if _afgbg != nil {
				return _afgbg
			}
			_ddbff.PosAttr = &_feaae
			continue
		}
		if _bggee.Name.Local == "\u0061\u006c\u0067\u006e" {
			_ddbff.AlgnAttr.UnmarshalXMLAttr(_bggee)
			continue
		}
	}
	for {
		_gffcg, _fegec := d.Token()
		if _fegec != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fT\u0065\u0078\u0074\u0054\u0061\u0062\u0053\u0074\u006f\u0070:\u0020\u0025\u0073", _fegec)
		}
		if _bfbafe, _cccce := _gffcg.(_d.EndElement); _cccce && _bfbafe.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseStdlibTime(s string) (_c.Time, error) { return _c.Time{}, nil }

// Validate validates the CT_PictureLocking and its children
func (_cgeab *CT_PictureLocking) Validate() error {
	return _cgeab.ValidateWithPath("\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067")
}
func (_gaggg ST_AdjAngle) String() string {
	if _gaggg.ST_Angle != nil {
		return _e.Sprintf("\u0025\u0076", *_gaggg.ST_Angle)
	}
	if _gaggg.ST_GeomGuideName != nil {
		return _e.Sprintf("\u0025\u0076", *_gaggg.ST_GeomGuideName)
	}
	return ""
}

// Validate validates the VideoFile and its children
func (_fbcea *VideoFile) Validate() error {
	return _fbcea.ValidateWithPath("\u0056i\u0064\u0065\u006f\u0046\u0069\u006ce")
}

type CT_Path2D struct {
	WAttr           *int64
	HAttr           *int64
	FillAttr        ST_PathFillMode
	StrokeAttr      *bool
	ExtrusionOkAttr *bool
	Close           []*CT_Path2DClose
	MoveTo          []*CT_Path2DMoveTo
	LnTo            []*CT_Path2DLineTo
	ArcTo           []*CT_Path2DArcTo
	QuadBezTo       []*CT_Path2DQuadBezierTo
	CubicBezTo      []*CT_Path2DCubicBezierTo
}

// Validate validates the CT_FontScheme and its children
func (_geagb *CT_FontScheme) Validate() error {
	return _geagb.ValidateWithPath("\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065")
}

type CT_Vector3D struct {
	DxAttr ST_Coordinate
	DyAttr ST_Coordinate
	DzAttr ST_Coordinate
}

func (_cbdba *ST_AnimationChartBuildType) ValidateWithPath(path string) error {
	_bdggd := []string{}
	if _cbdba.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_bdggd = append(_bdggd, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _cbdba.ST_AnimationChartOnlyBuildType != ST_AnimationChartOnlyBuildTypeUnset {
		_bdggd = append(_bdggd, "\u0053\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0043\u0068\u0061\u0072\u0074\u004fn\u006c\u0079\u0042\u0075\u0069\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if len(_bdggd) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bdggd)
	}
	return nil
}

// ValidateWithPath validates the CT_LineProperties and its children, prefixing error messages with path
func (_fcdb *CT_LineProperties) ValidateWithPath(path string) error {
	if _fcdb.WAttr != nil {
		if *_fcdb.WAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fcdb.WAttr)
		}
		if *_fcdb.WAttr > 20116800 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020<\u003d\u0020\u0032\u0030\u0031\u0031\u0036\u0038\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_fcdb.WAttr)
		}
	}
	if _bafa := _fcdb.CapAttr.ValidateWithPath(path + "\u002f\u0043\u0061\u0070\u0041\u0074\u0074\u0072"); _bafa != nil {
		return _bafa
	}
	if _cbgab := _fcdb.CmpdAttr.ValidateWithPath(path + "\u002fC\u006d\u0070\u0064\u0041\u0074\u0074r"); _cbgab != nil {
		return _cbgab
	}
	if _bfaf := _fcdb.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bfaf != nil {
		return _bfaf
	}
	if _fcdb.NoFill != nil {
		if _ffdgc := _fcdb.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ffdgc != nil {
			return _ffdgc
		}
	}
	if _fcdb.SolidFill != nil {
		if _fddf := _fcdb.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _fddf != nil {
			return _fddf
		}
	}
	if _fcdb.GradFill != nil {
		if _fdfbd := _fcdb.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _fdfbd != nil {
			return _fdfbd
		}
	}
	if _fcdb.PattFill != nil {
		if _bbge := _fcdb.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bbge != nil {
			return _bbge
		}
	}
	if _fcdb.PrstDash != nil {
		if _bdae := _fcdb.PrstDash.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0044\u0061\u0073h"); _bdae != nil {
			return _bdae
		}
	}
	if _fcdb.CustDash != nil {
		if _bega := _fcdb.CustDash.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0044\u0061\u0073h"); _bega != nil {
			return _bega
		}
	}
	if _fcdb.Round != nil {
		if _eaga := _fcdb.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _eaga != nil {
			return _eaga
		}
	}
	if _fcdb.Bevel != nil {
		if _fecf := _fcdb.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _fecf != nil {
			return _fecf
		}
	}
	if _fcdb.Miter != nil {
		if _bggc := _fcdb.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _bggc != nil {
			return _bggc
		}
	}
	if _fcdb.HeadEnd != nil {
		if _bddga := _fcdb.HeadEnd.ValidateWithPath(path + "\u002f\u0048\u0065\u0061\u0064\u0045\u006e\u0064"); _bddga != nil {
			return _bddga
		}
	}
	if _fcdb.TailEnd != nil {
		if _cdbeg := _fcdb.TailEnd.ValidateWithPath(path + "\u002f\u0054\u0061\u0069\u006c\u0045\u006e\u0064"); _cdbeg != nil {
			return _cdbeg
		}
	}
	if _fcdb.ExtLst != nil {
		if _gebg := _fcdb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gebg != nil {
			return _gebg
		}
	}
	return nil
}

// Validate validates the EG_Effect and its children
func (_geecb *EG_Effect) Validate() error {
	return _geecb.ValidateWithPath("\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t")
}

// Validate validates the CT_GraphicalObject and its children
func (_cabce *CT_GraphicalObject) Validate() error {
	return _cabce.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074")
}
func (_gebca *CT_StretchInfoProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gebca.FillRect != nil {
		_gceb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_gebca.FillRect, _gceb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egcaef ST_PathShadeType) ValidateWithPath(path string) error {
	switch _egcaef {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_egcaef))
	}
	return nil
}

// ValidateWithPath validates the CT_FontReference and its children, prefixing error messages with path
func (_ebadc *CT_FontReference) ValidateWithPath(path string) error {
	if _ebadc.IdxAttr == ST_FontCollectionIndexUnset {
		return _e.Errorf("\u0025\u0073\u002fI\u0064\u0078\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dega := _ebadc.IdxAttr.ValidateWithPath(path + "\u002f\u0049\u0064\u0078\u0041\u0074\u0074\u0072"); _dega != nil {
		return _dega
	}
	if _ebadc.ScrgbClr != nil {
		if _gebf := _ebadc.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gebf != nil {
			return _gebf
		}
	}
	if _ebadc.SrgbClr != nil {
		if _fadb := _ebadc.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fadb != nil {
			return _fadb
		}
	}
	if _ebadc.HslClr != nil {
		if _fceff := _ebadc.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _fceff != nil {
			return _fceff
		}
	}
	if _ebadc.SysClr != nil {
		if _cgda := _ebadc.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _cgda != nil {
			return _cgda
		}
	}
	if _ebadc.SchemeClr != nil {
		if _fgcf := _ebadc.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _fgcf != nil {
			return _fgcf
		}
	}
	if _ebadc.PrstClr != nil {
		if _baea := _ebadc.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _baea != nil {
			return _baea
		}
	}
	return nil
}
func (_cabbgd ST_TextVerticalType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gecgb := _d.Attr{}
	_gecgb.Name = name
	switch _cabbgd {
	case ST_TextVerticalTypeUnset:
		_gecgb.Value = ""
	case ST_TextVerticalTypeHorz:
		_gecgb.Value = "\u0068\u006f\u0072\u007a"
	case ST_TextVerticalTypeVert:
		_gecgb.Value = "\u0076\u0065\u0072\u0074"
	case ST_TextVerticalTypeVert270:
		_gecgb.Value = "\u0076e\u0072\u0074\u0032\u0037\u0030"
	case ST_TextVerticalTypeWordArtVert:
		_gecgb.Value = "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeEaVert:
		_gecgb.Value = "\u0065\u0061\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeMongolianVert:
		_gecgb.Value = "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074"
	case ST_TextVerticalTypeWordArtVertRtl:
		_gecgb.Value = "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c"
	}
	return _gecgb, nil
}
func (_fgdaaa *ST_PresetShadowVal) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dddba, _ccdbc := d.Token()
	if _ccdbc != nil {
		return _ccdbc
	}
	if _dddce, _gbbccg := _dddba.(_d.EndElement); _gbbccg && _dddce.Name == start.Name {
		*_fgdaaa = 1
		return nil
	}
	if _badbac, _bdccd := _dddba.(_d.CharData); !_bdccd {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dddba)
	} else {
		switch string(_badbac) {
		case "":
			*_fgdaaa = 0
		case "\u0073\u0068\u0064w\u0031":
			*_fgdaaa = 1
		case "\u0073\u0068\u0064w\u0032":
			*_fgdaaa = 2
		case "\u0073\u0068\u0064w\u0033":
			*_fgdaaa = 3
		case "\u0073\u0068\u0064w\u0034":
			*_fgdaaa = 4
		case "\u0073\u0068\u0064w\u0035":
			*_fgdaaa = 5
		case "\u0073\u0068\u0064w\u0036":
			*_fgdaaa = 6
		case "\u0073\u0068\u0064w\u0037":
			*_fgdaaa = 7
		case "\u0073\u0068\u0064w\u0038":
			*_fgdaaa = 8
		case "\u0073\u0068\u0064w\u0039":
			*_fgdaaa = 9
		case "\u0073\u0068\u0064\u0077\u0031\u0030":
			*_fgdaaa = 10
		case "\u0073\u0068\u0064\u0077\u0031\u0031":
			*_fgdaaa = 11
		case "\u0073\u0068\u0064\u0077\u0031\u0032":
			*_fgdaaa = 12
		case "\u0073\u0068\u0064\u0077\u0031\u0033":
			*_fgdaaa = 13
		case "\u0073\u0068\u0064\u0077\u0031\u0034":
			*_fgdaaa = 14
		case "\u0073\u0068\u0064\u0077\u0031\u0035":
			*_fgdaaa = 15
		case "\u0073\u0068\u0064\u0077\u0031\u0036":
			*_fgdaaa = 16
		case "\u0073\u0068\u0064\u0077\u0031\u0037":
			*_fgdaaa = 17
		case "\u0073\u0068\u0064\u0077\u0031\u0038":
			*_fgdaaa = 18
		case "\u0073\u0068\u0064\u0077\u0031\u0039":
			*_fgdaaa = 19
		case "\u0073\u0068\u0064\u0077\u0032\u0030":
			*_fgdaaa = 20
		}
	}
	_dddba, _ccdbc = d.Token()
	if _ccdbc != nil {
		return _ccdbc
	}
	if _fggea, _aedfb := _dddba.(_d.EndElement); _aedfb && _fggea.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dddba)
}
func NewCT_ObjectStyleDefaults() *CT_ObjectStyleDefaults {
	_cagceb := &CT_ObjectStyleDefaults{}
	return _cagceb
}
func (_ace *CT_AlphaBiLevelEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dec := range start.Attr {
		if _dec.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_dcd, _aac := ParseUnionST_PositiveFixedPercentage(_dec.Value)
			if _aac != nil {
				return _aac
			}
			_ace.ThreshAttr = _dcd
			continue
		}
	}
	for {
		_fbd, _bcec := d.Token()
		if _bcec != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0042\u0069\u004c\u0065v\u0065\u006c\u0045\u0066\u0066\u0065\u0063t\u003a\u0020\u0025\u0073", _bcec)
		}
		if _eeb, _bbf := _fbd.(_d.EndElement); _bbf && _eeb.Name == start.Name {
			break
		}
	}
	return nil
}
func ParseUnionST_TextSpacingPercentOrPercentString(s string) (ST_TextSpacingPercentOrPercentString, error) {
	_fegfd := ST_TextSpacingPercentOrPercentString{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_fegfd.ST_Percentage = &s
	} else {
		_dbcfa, _ecbbaf := _cd.ParseInt(s, 10, 64)
		if _ecbbaf != nil {
			return _fegfd, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _ecbbaf)
		}
		_bgbce := int32(_dbcfa)
		_fegfd.ST_TextSpacingPercent = &_bgbce
	}
	return _fegfd, nil
}

type CT_ColorScheme struct {
	NameAttr string
	Dk1      *CT_Color
	Lt1      *CT_Color
	Dk2      *CT_Color
	Lt2      *CT_Color
	Accent1  *CT_Color
	Accent2  *CT_Color
	Accent3  *CT_Color
	Accent4  *CT_Color
	Accent5  *CT_Color
	Accent6  *CT_Color
	Hlink    *CT_Color
	FolHlink *CT_Color
	ExtLst   *CT_OfficeArtExtensionList
}

func (_egfb *ST_TextShapeType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dfeeg, _bfdac := d.Token()
	if _bfdac != nil {
		return _bfdac
	}
	if _bafbc, _fggcd := _dfeeg.(_d.EndElement); _fggcd && _bafbc.Name == start.Name {
		*_egfb = 1
		return nil
	}
	if _beabcb, _aebbb := _dfeeg.(_d.CharData); !_aebbb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _dfeeg)
	} else {
		switch string(_beabcb) {
		case "":
			*_egfb = 0
		case "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065":
			*_egfb = 1
		case "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n":
			*_egfb = 2
		case "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070":
			*_egfb = 3
		case "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
			*_egfb = 4
		case "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064":
			*_egfb = 5
		case "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e":
			*_egfb = 6
		case "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064":
			*_egfb = 7
		case "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065":
			*_egfb = 8
		case "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065":
			*_egfb = 9
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070":
			*_egfb = 10
		case "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e":
			*_egfb = 11
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065":
			*_egfb = 12
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e":
			*_egfb = 13
		case "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072":
			*_egfb = 14
		case "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072":
			*_egfb = 15
		case "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072":
			*_egfb = 16
		case "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072":
			*_egfb = 17
		case "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070":
			*_egfb = 18
		case "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e":
			*_egfb = 19
		case "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p":
			*_egfb = 20
		case "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e":
			*_egfb = 21
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651":
			*_egfb = 22
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652":
			*_egfb = 23
		case "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031":
			*_egfb = 24
		case "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654":
			*_egfb = 25
		case "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065":
			*_egfb = 26
		case "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065":
			*_egfb = 27
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_egfb = 28
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d":
			*_egfb = 29
		case "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_egfb = 30
		case "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070":
			*_egfb = 31
		case "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065":
			*_egfb = 32
		case "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e":
			*_egfb = 33
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074":
			*_egfb = 34
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074":
			*_egfb = 35
		case "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070":
			*_egfb = 36
		case "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_egfb = 37
		case "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070":
			*_egfb = 38
		case "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e":
			*_egfb = 39
		case "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070":
			*_egfb = 40
		case "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e":
			*_egfb = 41
		}
	}
	_dfeeg, _bfdac = d.Token()
	if _bfdac != nil {
		return _bfdac
	}
	if _adbaa, _bbcggf := _dfeeg.(_d.EndElement); _bbcggf && _adbaa.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _dfeeg)
}

// Validate validates the EG_TextBulletTypeface and its children
func (_deeae *EG_TextBulletTypeface) Validate() error {
	return _deeae.ValidateWithPath("E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065")
}
func (_babf ST_ChartBuildStep) ValidateWithPath(path string) error {
	switch _babf {
	case 0, 1, 2, 3, 4, 5, 6:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_babf))
	}
	return nil
}

// ValidateWithPath validates the CT_DashStopList and its children, prefixing error messages with path
func (_egdb *CT_DashStopList) ValidateWithPath(path string) error {
	for _dcgg, _gedac := range _egdb.Ds {
		if _efde := _gedac.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0044\u0073\u005b\u0025\u0064]", path, _dcgg)); _efde != nil {
			return _efde
		}
	}
	return nil
}
func (_aegag *CT_NonVisualPictureProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fbfgg := range start.Attr {
		if _fbfgg.Name.Local == "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065" {
			_cacgd, _abfad := _cd.ParseBool(_fbfgg.Value)
			if _abfad != nil {
				return _abfad
			}
			_aegag.PreferRelativeResizeAttr = &_cacgd
			continue
		}
	}
_gfcea:
	for {
		_ecbbe, _aeafc := d.Token()
		if _aeafc != nil {
			return _aeafc
		}
		switch _acfgb := _ecbbe.(type) {
		case _d.StartElement:
			switch _acfgb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}:
				_aegag.PicLocks = NewCT_PictureLocking()
				if _aaae := d.DecodeElement(_aegag.PicLocks, &_acfgb); _aaae != nil {
					return _aaae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aegag.ExtLst = NewCT_OfficeArtExtensionList()
				if _gadfcg := d.DecodeElement(_aegag.ExtLst, &_acfgb); _gadfcg != nil {
					return _gadfcg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063t\u0075\u0072\u0065\u0050\u0072\u006fp\u0065\u0072t\u0069\u0065s\u0020%\u0076", _acfgb.Name)
				if _ecbaf := d.Skip(); _ecbaf != nil {
					return _ecbaf
				}
			}
		case _d.EndElement:
			break _gfcea
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorChangeEffect and its children, prefixing error messages with path
func (_ebcc *CT_ColorChangeEffect) ValidateWithPath(path string) error {
	if _bfef := _ebcc.ClrFrom.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0046\u0072\u006f\u006d"); _bfef != nil {
		return _bfef
	}
	if _cbbd := _ebcc.ClrTo.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0054\u006f"); _cbbd != nil {
		return _cbbd
	}
	return nil
}

type ST_BlendMode byte

func NewCT_BlendEffect() *CT_BlendEffect {
	_dbgc := &CT_BlendEffect{}
	_dbgc.BlendAttr = ST_BlendMode(1)
	_dbgc.Cont = NewCT_EffectContainer()
	return _dbgc
}

type CT_TableCol struct {
	WAttr  ST_Coordinate
	ExtLst *CT_OfficeArtExtensionList
}

func (_bfbac *ST_ShapeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bfbac = 0
	case "\u006c\u0069\u006e\u0065":
		*_bfbac = 1
	case "\u006ci\u006e\u0065\u0049\u006e\u0076":
		*_bfbac = 2
	case "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_bfbac = 3
	case "\u0072\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065":
		*_bfbac = 4
	case "\u0072\u0065\u0063\u0074":
		*_bfbac = 5
	case "\u0064i\u0061\u006d\u006f\u006e\u0064":
		*_bfbac = 6
	case "\u0070\u0061\u0072\u0061\u006c\u006c\u0065\u006c\u006f\u0067\u0072\u0061\u006d":
		*_bfbac = 7
	case "\u0074r\u0061\u0070\u0065\u007a\u006f\u0069d":
		*_bfbac = 8
	case "n\u006f\u006e\u0049\u0073os\u0063e\u006c\u0065\u0073\u0054\u0072a\u0070\u0065\u007a\u006f\u0069\u0064":
		*_bfbac = 9
	case "\u0070\u0065\u006e\u0074\u0061\u0067\u006f\u006e":
		*_bfbac = 10
	case "\u0068e\u0078\u0061\u0067\u006f\u006e":
		*_bfbac = 11
	case "\u0068\u0065\u0070\u0074\u0061\u0067\u006f\u006e":
		*_bfbac = 12
	case "\u006fc\u0074\u0061\u0067\u006f\u006e":
		*_bfbac = 13
	case "\u0064e\u0063\u0061\u0067\u006f\u006e":
		*_bfbac = 14
	case "\u0064o\u0064\u0065\u0063\u0061\u0067\u006fn":
		*_bfbac = 15
	case "\u0073\u0074\u0061r\u0034":
		*_bfbac = 16
	case "\u0073\u0074\u0061r\u0035":
		*_bfbac = 17
	case "\u0073\u0074\u0061r\u0036":
		*_bfbac = 18
	case "\u0073\u0074\u0061r\u0037":
		*_bfbac = 19
	case "\u0073\u0074\u0061r\u0038":
		*_bfbac = 20
	case "\u0073\u0074\u0061\u0072\u0031\u0030":
		*_bfbac = 21
	case "\u0073\u0074\u0061\u0072\u0031\u0032":
		*_bfbac = 22
	case "\u0073\u0074\u0061\u0072\u0031\u0036":
		*_bfbac = 23
	case "\u0073\u0074\u0061\u0072\u0032\u0034":
		*_bfbac = 24
	case "\u0073\u0074\u0061\u0072\u0033\u0032":
		*_bfbac = 25
	case "\u0072o\u0075\u006e\u0064\u0052\u0065\u0063t":
		*_bfbac = 26
	case "\u0072\u006f\u0075\u006e\u0064\u0031\u0052\u0065\u0063\u0074":
		*_bfbac = 27
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0053\u0061\u006de\u0052\u0065\u0063\u0074":
		*_bfbac = 28
	case "\u0072\u006f\u0075\u006e\u0064\u0032\u0044\u0069\u0061g\u0052\u0065\u0063\u0074":
		*_bfbac = 29
	case "\u0073\u006e\u0069\u0070\u0052\u006f\u0075\u006e\u0064\u0052\u0065\u0063\u0074":
		*_bfbac = 30
	case "\u0073n\u0069\u0070\u0031\u0052\u0065\u0063t":
		*_bfbac = 31
	case "\u0073\u006e\u0069\u0070\u0032\u0053\u0061\u006d\u0065\u0052\u0065\u0063\u0074":
		*_bfbac = 32
	case "\u0073\u006e\u0069\u0070\u0032\u0044\u0069\u0061\u0067\u0052\u0065\u0063\u0074":
		*_bfbac = 33
	case "\u0070\u006c\u0061\u0071\u0075\u0065":
		*_bfbac = 34
	case "\u0065l\u006c\u0069\u0070\u0073\u0065":
		*_bfbac = 35
	case "\u0074\u0065\u0061\u0072\u0064\u0072\u006f\u0070":
		*_bfbac = 36
	case "\u0068o\u006d\u0065\u0050\u006c\u0061\u0074e":
		*_bfbac = 37
	case "\u0063h\u0065\u0076\u0072\u006f\u006e":
		*_bfbac = 38
	case "\u0070\u0069\u0065\u0057\u0065\u0064\u0067\u0065":
		*_bfbac = 39
	case "\u0070\u0069\u0065":
		*_bfbac = 40
	case "\u0062\u006c\u006f\u0063\u006b\u0041\u0072\u0063":
		*_bfbac = 41
	case "\u0064\u006f\u006eu\u0074":
		*_bfbac = 42
	case "\u006eo\u0053\u006d\u006f\u006b\u0069\u006eg":
		*_bfbac = 43
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 44
	case "\u006ce\u0066\u0074\u0041\u0072\u0072\u006fw":
		*_bfbac = 45
	case "\u0075p\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 46
	case "\u0064o\u0077\u006e\u0041\u0072\u0072\u006fw":
		*_bfbac = 47
	case "\u0073\u0074\u0072\u0069\u0070\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_bfbac = 48
	case "\u006e\u006f\u0074\u0063\u0068\u0065\u0064\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_bfbac = 49
	case "b\u0065\u006e\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 50
	case "\u006c\u0065\u0066\u0074\u0052\u0069\u0067\u0068\u0074A\u0072\u0072\u006f\u0077":
		*_bfbac = 51
	case "u\u0070\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 52
	case "l\u0065\u0066\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 53
	case "\u006c\u0065f\u0074\u0052\u0069g\u0068\u0074\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 54
	case "\u0071u\u0061\u0064\u0041\u0072\u0072\u006fw":
		*_bfbac = 55
	case "\u006c\u0065f\u0074\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 56
	case "\u0072\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_bfbac = 57
	case "\u0075\u0070\u0041\u0072\u0072\u006f\u0077\u0043\u0061l\u006c\u006f\u0075\u0074":
		*_bfbac = 58
	case "\u0064\u006fw\u006e\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 59
	case "l\u0065\u0066\u0074\u0052ig\u0068t\u0041\u0072\u0072\u006f\u0077C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 60
	case "\u0075p\u0044o\u0077\u006e\u0041\u0072\u0072o\u0077\u0043a\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 61
	case "\u0071\u0075a\u0064\u0041\u0072r\u006f\u0077\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 62
	case "\u0062e\u006e\u0074\u0041\u0072\u0072\u006fw":
		*_bfbac = 63
	case "\u0075\u0074\u0075\u0072\u006e\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 64
	case "\u0063\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 65
	case "\u006c\u0065\u0066\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072A\u0072\u0072\u006f\u0077":
		*_bfbac = 66
	case "\u006c\u0065\u0066\u0074Ri\u0067\u0068\u0074\u0043\u0069\u0072\u0063\u0075\u006c\u0061\u0072\u0041\u0072\u0072o\u0077":
		*_bfbac = 67
	case "\u0063\u0075r\u0076\u0065\u0064R\u0069\u0067\u0068\u0074\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 68
	case "\u0063u\u0072v\u0065\u0064\u004c\u0065\u0066\u0074\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 69
	case "\u0063\u0075\u0072\u0076\u0065\u0064\u0055\u0070\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 70
	case "\u0063u\u0072v\u0065\u0064\u0044\u006f\u0077\u006e\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 71
	case "s\u0077\u006f\u006f\u0073\u0068\u0041\u0072\u0072\u006f\u0077":
		*_bfbac = 72
	case "\u0063\u0075\u0062\u0065":
		*_bfbac = 73
	case "\u0063\u0061\u006e":
		*_bfbac = 74
	case "\u006c\u0069\u0067\u0068\u0074\u006e\u0069\u006e\u0067\u0042\u006f\u006c\u0074":
		*_bfbac = 75
	case "\u0068\u0065\u0061r\u0074":
		*_bfbac = 76
	case "\u0073\u0075\u006e":
		*_bfbac = 77
	case "\u006d\u006f\u006f\u006e":
		*_bfbac = 78
	case "\u0073\u006d\u0069\u006c\u0065\u0079\u0046\u0061\u0063\u0065":
		*_bfbac = 79
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0031":
		*_bfbac = 80
	case "\u0069\u0072\u0072\u0065\u0067\u0075\u006c\u0061\u0072S\u0065\u0061\u006c\u0032":
		*_bfbac = 81
	case "\u0066\u006f\u006cd\u0065\u0064\u0043\u006f\u0072\u006e\u0065\u0072":
		*_bfbac = 82
	case "\u0062\u0065\u0076e\u006c":
		*_bfbac = 83
	case "\u0066\u0072\u0061m\u0065":
		*_bfbac = 84
	case "\u0068a\u006c\u0066\u0046\u0072\u0061\u006de":
		*_bfbac = 85
	case "\u0063\u006f\u0072\u006e\u0065\u0072":
		*_bfbac = 86
	case "\u0064\u0069\u0061\u0067\u0053\u0074\u0072\u0069\u0070\u0065":
		*_bfbac = 87
	case "\u0063\u0068\u006fr\u0064":
		*_bfbac = 88
	case "\u0061\u0072\u0063":
		*_bfbac = 89
	case "l\u0065\u0066\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_bfbac = 90
	case "\u0072\u0069\u0067h\u0074\u0042\u0072\u0061\u0063\u006b\u0065\u0074":
		*_bfbac = 91
	case "\u006ce\u0066\u0074\u0042\u0072\u0061\u0063e":
		*_bfbac = 92
	case "\u0072\u0069\u0067\u0068\u0074\u0042\u0072\u0061\u0063\u0065":
		*_bfbac = 93
	case "b\u0072\u0061\u0063\u006b\u0065\u0074\u0050\u0061\u0069\u0072":
		*_bfbac = 94
	case "\u0062r\u0061\u0063\u0065\u0050\u0061\u0069r":
		*_bfbac = 95
	case "\u0073t\u0072a\u0069\u0067\u0068\u0074\u0043o\u006e\u006ee\u0063\u0074\u006f\u0072\u0031":
		*_bfbac = 96
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0032":
		*_bfbac = 97
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0033":
		*_bfbac = 98
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0034":
		*_bfbac = 99
	case "\u0062\u0065\u006e\u0074\u0043\u006f\u006e\u006e\u0065c\u0074\u006f\u0072\u0035":
		*_bfbac = 100
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0032":
		*_bfbac = 101
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0033":
		*_bfbac = 102
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0034":
		*_bfbac = 103
	case "\u0063\u0075r\u0076\u0065\u0064C\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0035":
		*_bfbac = 104
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0031":
		*_bfbac = 105
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0032":
		*_bfbac = 106
	case "\u0063\u0061\u006c\u006c\u006f\u0075\u0074\u0033":
		*_bfbac = 107
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_bfbac = 108
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_bfbac = 109
	case "\u0061\u0063\u0063\u0065\u006e\u0074\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_bfbac = 110
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0031":
		*_bfbac = 111
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0032":
		*_bfbac = 112
	case "\u0062\u006f\u0072\u0064\u0065\u0072\u0043\u0061\u006cl\u006f\u0075\u0074\u0033":
		*_bfbac = 113
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0031":
		*_bfbac = 114
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0032":
		*_bfbac = 115
	case "a\u0063c\u0065\u006e\u0074\u0042\u006f\u0072\u0064\u0065r\u0043\u0061\u006c\u006cou\u0074\u0033":
		*_bfbac = 116
	case "\u0077\u0065d\u0067\u0065\u0052e\u0063\u0074\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 117
	case "w\u0065\u0064\u0067\u0065Ro\u0075n\u0064\u0052\u0065\u0063\u0074C\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 118
	case "\u0077\u0065\u0064\u0067eE\u006c\u006c\u0069\u0070\u0073\u0065\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 119
	case "\u0063\u006c\u006fu\u0064\u0043\u0061\u006c\u006c\u006f\u0075\u0074":
		*_bfbac = 120
	case "\u0063\u006c\u006fu\u0064":
		*_bfbac = 121
	case "\u0072\u0069\u0062\u0062\u006f\u006e":
		*_bfbac = 122
	case "\u0072i\u0062\u0062\u006f\u006e\u0032":
		*_bfbac = 123
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069\u0062\u0062\u006f\u006e":
		*_bfbac = 124
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0065\u0052\u0069b\u0062\u006f\u006e\u0032":
		*_bfbac = 125
	case "\u006ce\u0066t\u0052\u0069\u0067\u0068\u0074\u0052\u0069\u0062\u0062\u006f\u006e":
		*_bfbac = 126
	case "\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c\u0053c\u0072\u006f\u006c\u006c":
		*_bfbac = 127
	case "\u0068\u006fr\u0069\u007a\u006fn\u0074\u0061\u006c\u0053\u0063\u0072\u006f\u006c\u006c":
		*_bfbac = 128
	case "\u0077\u0061\u0076\u0065":
		*_bfbac = 129
	case "\u0064\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065":
		*_bfbac = 130
	case "\u0070\u006c\u0075\u0073":
		*_bfbac = 131
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0050\u0072\u006f\u0063\u0065\u0073\u0073":
		*_bfbac = 132
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u0065\u0063i\u0073\u0069\u006f\u006e":
		*_bfbac = 133
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006ep\u0075\u0074\u004f\u0075tp\u0075\u0074":
		*_bfbac = 134
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0050\u0072\u006fc\u0065\u0073\u0073":
		*_bfbac = 135
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0049\u006e\u0074\u0065r\u006e\u0061\u006c\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_bfbac = 136
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0044\u006f\u0063u\u006d\u0065\u006e\u0074":
		*_bfbac = 137
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004d\u0075\u006c\u0074\u0069\u0064\u006f\u0063\u0075\u006d\u0065n\u0074":
		*_bfbac = 138
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u0054\u0065\u0072\u006d\u0069\u006e\u0061\u0074\u006f\u0072":
		*_bfbac = 139
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0072e\u0070\u0061\u0072\u0061ti\u006f\u006e":
		*_bfbac = 140
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061n\u0075\u0061\u006c\u0049np\u0075\u0074":
		*_bfbac = 141
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004d\u0061\u006e\u0075a\u006c\u004f\u0070\u0065\u0072\u0061\u0074\u0069\u006f\u006e":
		*_bfbac = 142
	case "\u0066l\u006fw\u0043\u0068\u0061\u0072\u0074C\u006f\u006en\u0065\u0063\u0074\u006f\u0072":
		*_bfbac = 143
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ca\u0072\u0064":
		*_bfbac = 144
	case "f\u006co\u0077\u0043\u0068\u0061\u0072\u0074\u0050\u0075n\u0063\u0068\u0065\u0064Ta\u0070\u0065":
		*_bfbac = 145
	case "\u0066l\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u0075\u006d\u006di\u006e\u0067\u004a\u0075\u006e\u0063\u0074\u0069\u006f\u006e":
		*_bfbac = 146
	case "f\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u004f\u0072":
		*_bfbac = 147
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0043\u006f\u006c\u006c\u0061\u0074\u0065":
		*_bfbac = 148
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074\u0053\u006f\u0072\u0074":
		*_bfbac = 149
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0045\u0078\u0074\u0072\u0061\u0063\u0074":
		*_bfbac = 150
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074M\u0065\u0072\u0067\u0065":
		*_bfbac = 151
	case "\u0066\u006c\u006fwC\u0068\u0061\u0072\u0074\u004f\u0066\u0066\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061\u0067\u0065":
		*_bfbac = 152
	case "\u0066\u006c\u006f\u0077Ch\u0061\u0072\u0074\u004f\u006e\u006c\u0069\u006e\u0065\u0053\u0074\u006f\u0072\u0061g\u0065":
		*_bfbac = 153
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0054\u0061\u0070\u0065":
		*_bfbac = 154
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0069\u0073\u006b":
		*_bfbac = 155
	case "f\u006c\u006f\u0077\u0043ha\u0072t\u004d\u0061\u0067\u006e\u0065t\u0069\u0063\u0044\u0072\u0075\u006d":
		*_bfbac = 156
	case "\u0066\u006co\u0077\u0043\u0068a\u0072\u0074\u0044\u0069\u0073\u0070\u006c\u0061\u0079":
		*_bfbac = 157
	case "\u0066\u006c\u006f\u0077\u0043\u0068\u0061\u0072\u0074D\u0065\u006c\u0061\u0079":
		*_bfbac = 158
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u0041\u006c\u0074e\u0072n\u0061t\u0065\u0050\u0072\u006f\u0063\u0065\u0073s":
		*_bfbac = 159
	case "\u0066l\u006f\u0077\u0043\u0068a\u0072\u0074\u004f\u0066\u0066p\u0061g\u0065C\u006f\u006e\u006e\u0065\u0063\u0074\u006fr":
		*_bfbac = 160
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eB\u006c\u0061\u006e\u006b":
		*_bfbac = 161
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u006f\u006d\u0065":
		*_bfbac = 162
	case "\u0061\u0063t\u0069\u006f\u006eB\u0075\u0074\u0074\u006f\u006e\u0048\u0065\u006c\u0070":
		*_bfbac = 163
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e":
		*_bfbac = 164
	case "\u0061\u0063\u0074io\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0046\u006f\u0072\u0077\u0061\u0072\u0064\u004e\u0065\u0078\u0074":
		*_bfbac = 165
	case "\u0061c\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0042a\u0063\u006b\u0050\u0072\u0065\u0076\u0069\u006f\u0075\u0073":
		*_bfbac = 166
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006e\u0045\u006e\u0064":
		*_bfbac = 167
	case "a\u0063\u0074\u0069\u006fnB\u0075t\u0074\u006f\u006e\u0042\u0065g\u0069\u006e\u006e\u0069\u006e\u0067":
		*_bfbac = 168
	case "\u0061c\u0074i\u006f\u006e\u0042\u0075\u0074t\u006f\u006eR\u0065\u0074\u0075\u0072\u006e":
		*_bfbac = 169
	case "a\u0063t\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006fn\u0044\u006f\u0063\u0075me\u006e\u0074":
		*_bfbac = 170
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eS\u006f\u0075\u006e\u0064":
		*_bfbac = 171
	case "\u0061\u0063\u0074\u0069\u006f\u006e\u0042\u0075\u0074\u0074\u006f\u006eM\u006f\u0076\u0069\u0065":
		*_bfbac = 172
	case "\u0067\u0065\u0061r\u0036":
		*_bfbac = 173
	case "\u0067\u0065\u0061r\u0039":
		*_bfbac = 174
	case "\u0066\u0075\u006e\u006e\u0065\u006c":
		*_bfbac = 175
	case "\u006d\u0061\u0074\u0068\u0050\u006c\u0075\u0073":
		*_bfbac = 176
	case "\u006da\u0074\u0068\u004d\u0069\u006e\u0075s":
		*_bfbac = 177
	case "\u006d\u0061\u0074h\u004d\u0075\u006c\u0074\u0069\u0070\u006c\u0079":
		*_bfbac = 178
	case "\u006d\u0061\u0074\u0068\u0044\u0069\u0076\u0069\u0064\u0065":
		*_bfbac = 179
	case "\u006da\u0074\u0068\u0045\u0071\u0075\u0061l":
		*_bfbac = 180
	case "\u006d\u0061\u0074h\u004e\u006f\u0074\u0045\u0071\u0075\u0061\u006c":
		*_bfbac = 181
	case "\u0063\u006f\u0072\u006e\u0065\u0072\u0054\u0061\u0062\u0073":
		*_bfbac = 182
	case "\u0073\u0071\u0075\u0061\u0072\u0065\u0054\u0061\u0062\u0073":
		*_bfbac = 183
	case "\u0070\u006c\u0061\u0071\u0075\u0065\u0054\u0061\u0062\u0073":
		*_bfbac = 184
	case "\u0063\u0068\u0061\u0072\u0074\u0058":
		*_bfbac = 185
	case "\u0063h\u0061\u0072\u0074\u0053\u0074\u0061r":
		*_bfbac = 186
	case "\u0063h\u0061\u0072\u0074\u0050\u006c\u0075s":
		*_bfbac = 187
	}
	return nil
}

// Validate validates the CT_Path2DMoveTo and its children
func (_cggfb *CT_Path2DMoveTo) Validate() error {
	return _cggfb.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f")
}
func NewCT_LineJoinRound() *CT_LineJoinRound { _dfdfg := &CT_LineJoinRound{}; return _dfdfg }
func (_ebbe *CT_GraphicalObjectFrameLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gabfae := range start.Attr {
		if _gabfae.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_dbfea, _dgccd := _cd.ParseBool(_gabfae.Value)
			if _dgccd != nil {
				return _dgccd
			}
			_ebbe.NoGrpAttr = &_dbfea
			continue
		}
		if _gabfae.Name.Local == "n\u006f\u0044\u0072\u0069\u006c\u006c\u0064\u006f\u0077\u006e" {
			_facd, _ebeac := _cd.ParseBool(_gabfae.Value)
			if _ebeac != nil {
				return _ebeac
			}
			_ebbe.NoDrilldownAttr = &_facd
			continue
		}
		if _gabfae.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_dfabe, _ddbcf := _cd.ParseBool(_gabfae.Value)
			if _ddbcf != nil {
				return _ddbcf
			}
			_ebbe.NoSelectAttr = &_dfabe
			continue
		}
		if _gabfae.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_cfed, _cdege := _cd.ParseBool(_gabfae.Value)
			if _cdege != nil {
				return _cdege
			}
			_ebbe.NoChangeAspectAttr = &_cfed
			continue
		}
		if _gabfae.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_daef, _dbcf := _cd.ParseBool(_gabfae.Value)
			if _dbcf != nil {
				return _dbcf
			}
			_ebbe.NoMoveAttr = &_daef
			continue
		}
		if _gabfae.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fbcd, _edgab := _cd.ParseBool(_gabfae.Value)
			if _edgab != nil {
				return _edgab
			}
			_ebbe.NoResizeAttr = &_fbcd
			continue
		}
	}
_gfde:
	for {
		_beec, _ggeba := d.Token()
		if _ggeba != nil {
			return _ggeba
		}
		switch _gbeb := _beec.(type) {
		case _d.StartElement:
			switch _gbeb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ebbe.ExtLst = NewCT_OfficeArtExtensionList()
				if _beegc := d.DecodeElement(_ebbe.ExtLst, &_gbeb); _beegc != nil {
					return _beegc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006es\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043T\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0046\u0072\u0061\u006d\u0065\u004c\u006f\u0063k\u0069\u006e\u0067\u0020\u0025\u0076", _gbeb.Name)
				if _fgffe := d.Skip(); _fgffe != nil {
					return _fgffe
				}
			}
		case _d.EndElement:
			break _gfde
		case _d.CharData:
		}
	}
	return nil
}

type CT_StyleMatrix struct {
	NameAttr       *string
	FillStyleLst   *CT_FillStyleList
	LnStyleLst     *CT_LineStyleList
	EffectStyleLst *CT_EffectStyleList
	BgFillStyleLst *CT_BackgroundFillStyleList
}
type CT_FillEffect struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}
type ST_CompoundLine byte

// ValidateWithPath validates the EG_TextUnderlineLine and its children, prefixing error messages with path
func (_baafdb *EG_TextUnderlineLine) ValidateWithPath(path string) error {
	if _baafdb.ULnTx != nil {
		if _bgcbb := _baafdb.ULnTx.ValidateWithPath(path + "\u002f\u0055\u004c\u006e\u0054\u0078"); _bgcbb != nil {
			return _bgcbb
		}
	}
	if _baafdb.ULn != nil {
		if _ggfcba := _baafdb.ULn.ValidateWithPath(path + "\u002f\u0055\u004c\u006e"); _ggfcba != nil {
			return _ggfcba
		}
	}
	return nil
}
func NewCT_PatternFillProperties() *CT_PatternFillProperties {
	_cfaffg := &CT_PatternFillProperties{}
	return _cfaffg
}
func NewCT_TextCharBullet() *CT_TextCharBullet { _edgbd := &CT_TextCharBullet{}; return _edgbd }

type CT_OfficeArtExtensionList struct{ Ext []*CT_OfficeArtExtension }

func (_cfegga *ST_AnimationDgmOnlyBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cfegga = 0
	case "\u006f\u006e\u0065":
		*_cfegga = 1
	case "\u006c\u0076\u006c\u004f\u006e\u0065":
		*_cfegga = 2
	case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
		*_cfegga = 3
	}
	return nil
}
func (_acdac ST_DgmBuildStep) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_acdac.String(), start)
}
func (_befdb ST_PresetCameraType) ValidateWithPath(path string) error {
	switch _befdb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_befdb))
	}
	return nil
}
func NewCT_EmptyElement() *CT_EmptyElement { _bcfe := &CT_EmptyElement{}; return _bcfe }
func NewCT_TablePropertiesChoice() *CT_TablePropertiesChoice {
	_cfegf := &CT_TablePropertiesChoice{}
	return _cfegf
}
func (_afaaa *CT_TextField) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", _afaaa.IdAttr)})
	if _afaaa.TypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_afaaa.TypeAttr)})
	}
	e.EncodeToken(start)
	if _afaaa.RPr != nil {
		_abcbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_afaaa.RPr, _abcbc)
	}
	if _afaaa.PPr != nil {
		_abgbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070P\u0072"}}
		e.EncodeElement(_afaaa.PPr, _abgbe)
	}
	if _afaaa.T != nil {
		_ceafb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074"}}
		_ff.AddPreserveSpaceAttr(&_ceafb, *_afaaa.T)
		e.EncodeElement(_afaaa.T, _ceafb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_ColorSchemeList and its children
func (_agbf *CT_ColorSchemeList) Validate() error {
	return _agbf.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074")
}
func (_dfgga *EG_FillProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfgga.NoFill != nil {
		_ggefe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfgga.NoFill, _ggefe)
	}
	if _dfgga.SolidFill != nil {
		_bfece := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfgga.SolidFill, _bfece)
	}
	if _dfgga.GradFill != nil {
		_adcag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfgga.GradFill, _adcag)
	}
	if _dfgga.BlipFill != nil {
		_afdff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfgga.BlipFill, _afdff)
	}
	if _dfgga.PattFill != nil {
		_geegd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_dfgga.PattFill, _geegd)
	}
	if _dfgga.GrpFill != nil {
		_acbbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_dfgga.GrpFill, _acbbg)
	}
	return nil
}
func (_efcdg ST_LineCap) Validate() error { return _efcdg.ValidateWithPath("") }

// ValidateWithPath validates the CT_Point2D and its children, prefixing error messages with path
func (_bdad *CT_Point2D) ValidateWithPath(path string) error {
	if _cgfeea := _bdad.XAttr.ValidateWithPath(path + "\u002f\u0058\u0041\u0074\u0074\u0072"); _cgfeea != nil {
		return _cgfeea
	}
	if _eddbb := _bdad.YAttr.ValidateWithPath(path + "\u002f\u0059\u0041\u0074\u0074\u0072"); _eddbb != nil {
		return _eddbb
	}
	return nil
}
func (_acgcd ST_TextBulletSize) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _acgcd.ST_TextBulletSizePercent != nil {
		e.EncodeToken(_d.CharData(*_acgcd.ST_TextBulletSizePercent))
	}
	if _acgcd.ST_TextBulletSizeDecimal != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_acgcd.ST_TextBulletSizeDecimal)))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_Ratio and its children, prefixing error messages with path
func (_becfe *CT_Ratio) ValidateWithPath(path string) error { return nil }
func (_dgbdg ST_AnimationDgmOnlyBuildType) String() string {
	switch _dgbdg {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e\u0065"
	case 2:
		return "\u006c\u0076\u006c\u004f\u006e\u0065"
	case 3:
		return "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e"
	}
	return ""
}

// Validate validates the CT_Path2DLineTo and its children
func (_fcdfg *CT_Path2DLineTo) Validate() error {
	return _fcdfg.ValidateWithPath("\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f")
}

type ST_TextTabAlignType byte

// ValidateWithPath validates the CT_Scale2D and its children, prefixing error messages with path
func (_bgbgg *CT_Scale2D) ValidateWithPath(path string) error {
	if _dbbeg := _bgbgg.Sx.ValidateWithPath(path + "\u002f\u0053\u0078"); _dbbeg != nil {
		return _dbbeg
	}
	if _ffac := _bgbgg.Sy.ValidateWithPath(path + "\u002f\u0053\u0079"); _ffac != nil {
		return _ffac
	}
	return nil
}
func (_eccc *CT_FontCollection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eccc.Latin = NewCT_TextFont()
	_eccc.Ea = NewCT_TextFont()
	_eccc.Cs = NewCT_TextFont()
_dede:
	for {
		_cgdc, _fcbgb := d.Token()
		if _fcbgb != nil {
			return _fcbgb
		}
		switch _eabdda := _cgdc.(type) {
		case _d.StartElement:
			switch _eabdda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				if _egaa := d.DecodeElement(_eccc.Latin, &_eabdda); _egaa != nil {
					return _egaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				if _ecbec := d.DecodeElement(_eccc.Ea, &_eabdda); _ecbec != nil {
					return _ecbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				if _fdace := d.DecodeElement(_eccc.Cs, &_eabdda); _fdace != nil {
					return _fdace
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006e\u0074"}:
				_adae := NewCT_SupplementalFont()
				if _gcaa := d.DecodeElement(_adae, &_eabdda); _gcaa != nil {
					return _gcaa
				}
				_eccc.Font = append(_eccc.Font, _adae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eccc.ExtLst = NewCT_OfficeArtExtensionList()
				if _ecfaf := d.DecodeElement(_eccc.ExtLst, &_eabdda); _ecfaf != nil {
					return _ecfaf
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076", _eabdda.Name)
				if _fcff := d.Skip(); _fcff != nil {
					return _fcff
				}
			}
		case _d.EndElement:
			break _dede
		case _d.CharData:
		}
	}
	return nil
}
func (_dcgcef *CT_VideoFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcgac := range start.Attr {
		if _dcgac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _dcgac.Name.Local == "\u006c\u0069\u006e\u006b" || _dcgac.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _dcgac.Name.Local == "\u006c\u0069\u006e\u006b" {
			_egefb, _begde := _dcgac.Value, error(nil)
			if _begde != nil {
				return _begde
			}
			_dcgcef.LinkAttr = _egefb
			continue
		}
		if _dcgac.Name.Local == "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065" {
			_agecd, _ddedbd := _dcgac.Value, error(nil)
			if _ddedbd != nil {
				return _ddedbd
			}
			_dcgcef.ContentTypeAttr = &_agecd
			continue
		}
	}
_deacb:
	for {
		_fffadd, _fccf := d.Token()
		if _fccf != nil {
			return _fccf
		}
		switch _dfeag := _fffadd.(type) {
		case _d.StartElement:
			switch _dfeag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_dcgcef.ExtLst = NewCT_OfficeArtExtensionList()
				if _efdbf := d.DecodeElement(_dcgcef.ExtLst, &_dfeag); _efdbf != nil {
					return _efdbf
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_V\u0069\u0064e\u006f\u0046\u0069\u006c\u0065\u0020\u0025\u0076", _dfeag.Name)
				if _gfgcbg := d.Skip(); _gfgcbg != nil {
					return _gfgcbg
				}
			}
		case _d.EndElement:
			break _deacb
		case _d.CharData:
		}
	}
	return nil
}
func (_efeg *CT_Bevel) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aadf := range start.Attr {
		if _aadf.Name.Local == "\u0077" {
			_ebca, _bdefg := _cd.ParseInt(_aadf.Value, 10, 64)
			if _bdefg != nil {
				return _bdefg
			}
			_efeg.WAttr = &_ebca
			continue
		}
		if _aadf.Name.Local == "\u0068" {
			_fdcg, _dacbc := _cd.ParseInt(_aadf.Value, 10, 64)
			if _dacbc != nil {
				return _dacbc
			}
			_efeg.HAttr = &_fdcg
			continue
		}
		if _aadf.Name.Local == "\u0070\u0072\u0073\u0074" {
			_efeg.PrstAttr.UnmarshalXMLAttr(_aadf)
			continue
		}
	}
	for {
		_cfdaf, _aeea := d.Token()
		if _aeea != nil {
			return _e.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fB\u0065\u0076\u0065\u006c: \u0025\u0073", _aeea)
		}
		if _fegc, _fefa := _cfdaf.(_d.EndElement); _fefa && _fegc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aeecbg *CT_LineJoinBevel) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_AudioCDTime struct {
	TrackAttr uint8
	TimeAttr  *uint32
}

// Validate validates the CT_CustomGeometry2D and its children
func (_bdfe *CT_CustomGeometry2D) Validate() error {
	return _bdfe.ValidateWithPath("\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}
func (_fadce *CT_SystemColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_gecge, _egcd := _fadce.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _egcd != nil {
		return _egcd
	}
	start.Attr = append(start.Attr, _gecge)
	if _fadce.LastClrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0043\u006c\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_fadce.LastClrAttr)})
	}
	e.EncodeToken(start)
	if _fadce.EG_ColorTransform != nil {
		for _, _dbdce := range _fadce.EG_ColorTransform {
			_dbdce.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eddd *CT_FillEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eddd.NoFill != nil {
		_aebag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eddd.NoFill, _aebag)
	}
	if _eddd.SolidFill != nil {
		_eebcg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eddd.SolidFill, _eebcg)
	}
	if _eddd.GradFill != nil {
		_dcbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eddd.GradFill, _dcbf)
	}
	if _eddd.BlipFill != nil {
		_eedc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eddd.BlipFill, _eedc)
	}
	if _eddd.PattFill != nil {
		_cgeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eddd.PattFill, _cgeg)
	}
	if _eddd.GrpFill != nil {
		_gfdc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_eddd.GrpFill, _gfdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbbagc ST_RectAlignment) ValidateWithPath(path string) error {
	switch _bbbagc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_bbbagc))
	}
	return nil
}

const (
	ST_OnOffStyleTypeUnset ST_OnOffStyleType = 0
	ST_OnOffStyleTypeOn    ST_OnOffStyleType = 1
	ST_OnOffStyleTypeOff   ST_OnOffStyleType = 2
	ST_OnOffStyleTypeDef   ST_OnOffStyleType = 3
)

func NewCT_AnimationChartElement() *CT_AnimationChartElement {
	_fdag := &CT_AnimationChartElement{}
	_fdag.BldStepAttr = ST_ChartBuildStep(1)
	return _fdag
}
func (_gadef ST_LineEndLength) String() string {
	switch _gadef {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}
func NewCT_NonVisualConnectorProperties() *CT_NonVisualConnectorProperties {
	_aecbg := &CT_NonVisualConnectorProperties{}
	return _aecbg
}
func NewCT_FillStyleList() *CT_FillStyleList { _ebcgd := &CT_FillStyleList{}; return _ebcgd }

// Validate validates the CT_AnimationChartElement and its children
func (_dgd *CT_AnimationChartElement) Validate() error {
	return _dgd.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074")
}

type EG_LineDashProperties struct {
	PrstDash *CT_PresetLineDashProperties
	CustDash *CT_DashStopList
}

func (_efbcb *CT_EmptyElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_cdfge, _bfbc := d.Token()
		if _bfbc != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079\u0045l\u0065\u006d\u0065n\u0074:\u0020\u0025\u0073", _bfbc)
		}
		if _gffb, _egdc := _cdfge.(_d.EndElement); _egdc && _gffb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GradientStop struct {
	PosAttr   ST_PositiveFixedPercentage
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_FillOverlayEffect and its children, prefixing error messages with path
func (_fcee *CT_FillOverlayEffect) ValidateWithPath(path string) error {
	if _fcee.BlendAttr == ST_BlendModeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0042\u006c\u0065n\u0064\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020f\u0069\u0065\u006c\u0064", path)
	}
	if _gceg := _fcee.BlendAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0065\u006e\u0064\u0041\u0074\u0074\u0072"); _gceg != nil {
		return _gceg
	}
	if _fcee.NoFill != nil {
		if _ffdcg := _fcee.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ffdcg != nil {
			return _ffdcg
		}
	}
	if _fcee.SolidFill != nil {
		if _afga := _fcee.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _afga != nil {
			return _afga
		}
	}
	if _fcee.GradFill != nil {
		if _aebada := _fcee.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _aebada != nil {
			return _aebada
		}
	}
	if _fcee.BlipFill != nil {
		if _fdaf := _fcee.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _fdaf != nil {
			return _fdaf
		}
	}
	if _fcee.PattFill != nil {
		if _gbf := _fcee.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _gbf != nil {
			return _gbf
		}
	}
	if _fcee.GrpFill != nil {
		if _gege := _fcee.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _gege != nil {
			return _gege
		}
	}
	return nil
}

type CT_TextTabStop struct {
	PosAttr  *ST_Coordinate32
	AlgnAttr ST_TextTabAlignType
}
type ST_LineEndType byte

func (_cfebcc *CT_LineProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _deced := range start.Attr {
		if _deced.Name.Local == "\u0077" {
			_addb, _afgdb := _cd.ParseInt(_deced.Value, 10, 32)
			if _afgdb != nil {
				return _afgdb
			}
			_dfbbe := int32(_addb)
			_cfebcc.WAttr = &_dfbbe
			continue
		}
		if _deced.Name.Local == "\u0063\u006d\u0070\u0064" {
			_cfebcc.CmpdAttr.UnmarshalXMLAttr(_deced)
			continue
		}
		if _deced.Name.Local == "\u0063\u0061\u0070" {
			_cfebcc.CapAttr.UnmarshalXMLAttr(_deced)
			continue
		}
		if _deced.Name.Local == "\u0061\u006c\u0067\u006e" {
			_cfebcc.AlgnAttr.UnmarshalXMLAttr(_deced)
			continue
		}
	}
_ccdbb:
	for {
		_efbba, _dbag := d.Token()
		if _dbag != nil {
			return _dbag
		}
		switch _dadb := _efbba.(type) {
		case _d.StartElement:
			switch _dadb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cfebcc.NoFill = NewCT_NoFillProperties()
				if _bdce := d.DecodeElement(_cfebcc.NoFill, &_dadb); _bdce != nil {
					return _bdce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cfebcc.SolidFill = NewCT_SolidColorFillProperties()
				if _dcgdg := d.DecodeElement(_cfebcc.SolidFill, &_dadb); _dcgdg != nil {
					return _dcgdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cfebcc.GradFill = NewCT_GradientFillProperties()
				if _ddbdb := d.DecodeElement(_cfebcc.GradFill, &_dadb); _ddbdb != nil {
					return _ddbdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cfebcc.PattFill = NewCT_PatternFillProperties()
				if _dccgf := d.DecodeElement(_cfebcc.PattFill, &_dadb); _dccgf != nil {
					return _dccgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_cfebcc.PrstDash = NewCT_PresetLineDashProperties()
				if _bagea := d.DecodeElement(_cfebcc.PrstDash, &_dadb); _bagea != nil {
					return _bagea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}:
				_cfebcc.CustDash = NewCT_DashStopList()
				if _bead := d.DecodeElement(_cfebcc.CustDash, &_dadb); _bead != nil {
					return _bead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_cfebcc.Round = NewCT_LineJoinRound()
				if _acggd := d.DecodeElement(_cfebcc.Round, &_dadb); _acggd != nil {
					return _acggd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_cfebcc.Bevel = NewCT_LineJoinBevel()
				if _degdc := d.DecodeElement(_cfebcc.Bevel, &_dadb); _degdc != nil {
					return _degdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_cfebcc.Miter = NewCT_LineJoinMiterProperties()
				if _dgcag := d.DecodeElement(_cfebcc.Miter, &_dadb); _dgcag != nil {
					return _dgcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068e\u0061\u0064\u0045\u006e\u0064"}:
				_cfebcc.HeadEnd = NewCT_LineEndProperties()
				if _bdgae := d.DecodeElement(_cfebcc.HeadEnd, &_dadb); _bdgae != nil {
					return _bdgae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074a\u0069\u006c\u0045\u006e\u0064"}:
				_cfebcc.TailEnd = NewCT_LineEndProperties()
				if _bagb := d.DecodeElement(_cfebcc.TailEnd, &_dadb); _bagb != nil {
					return _bagb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cfebcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _edaf := d.DecodeElement(_cfebcc.ExtLst, &_dadb); _edaf != nil {
					return _edaf
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dadb.Name)
				if _aefec := d.Skip(); _aefec != nil {
					return _aefec
				}
			}
		case _d.EndElement:
			break _ccdbb
		case _d.CharData:
		}
	}
	return nil
}
func (_eabgee ST_PresetPatternVal) ValidateWithPath(path string) error {
	switch _eabgee {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eabgee))
	}
	return nil
}
func NewCT_AudioFile() *CT_AudioFile { _dbcc := &CT_AudioFile{}; return _dbcc }

// Validate validates the CT_ColorChangeEffect and its children
func (_acga *CT_ColorChangeEffect) Validate() error {
	return _acga.ValidateWithPath("C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074")
}

// ValidateWithPath validates the CT_Path2DList and its children, prefixing error messages with path
func (_fegeg *CT_Path2DList) ValidateWithPath(path string) error {
	for _dgaee, _caecc := range _fegeg.Path {
		if _aebac := _caecc.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0050\u0061\u0074\u0068\u005b\u0025\u0064\u005d", path, _dgaee)); _aebac != nil {
			return _aebac
		}
	}
	return nil
}
func (_efgfb *CT_ScRgbColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072"}, Value: _e.Sprintf("\u0025\u0076", _efgfb.RAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067"}, Value: _e.Sprintf("\u0025\u0076", _efgfb.GAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _e.Sprintf("\u0025\u0076", _efgfb.BAttr)})
	e.EncodeToken(start)
	if _efgfb.EG_ColorTransform != nil {
		for _, _abgea := range _efgfb.EG_ColorTransform {
			_abgea.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bbbec *CT_BiLevelEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _e.Sprintf("\u0025\u0076", _bbbec.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aacae *CT_GvmlGraphicalObjectFrame) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aacae.NvGraphicFramePr = NewCT_GvmlGraphicFrameNonVisual()
	_aacae.Graphic = NewGraphic()
	_aacae.Xfrm = NewCT_Transform2D()
_dbda:
	for {
		_gdge, _ebfd := d.Token()
		if _ebfd != nil {
			return _ebfd
		}
		switch _edfa := _gdge.(type) {
		case _d.StartElement:
			switch _edfa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076G\u0072\u0061\u0070h\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u0050\u0072"}:
				if _gagag := d.DecodeElement(_aacae.NvGraphicFramePr, &_edfa); _gagag != nil {
					return _gagag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0070\u0068\u0069\u0063"}:
				if _ebgfg := d.DecodeElement(_aacae.Graphic, &_edfa); _ebgfg != nil {
					return _ebgfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				if _edcd := d.DecodeElement(_aacae.Xfrm, &_edfa); _edcd != nil {
					return _edcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aacae.ExtLst = NewCT_OfficeArtExtensionList()
				if _faccf := d.DecodeElement(_aacae.ExtLst, &_edfa); _faccf != nil {
					return _faccf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020e\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_\u0047\u0076\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065c\u0074\u0046\u0072\u0061\u006d\u0065\u0020\u0025\u0076", _edfa.Name)
				if _agfgf := d.Skip(); _agfgf != nil {
					return _agfgf
				}
			}
		case _d.EndElement:
			break _dbda
		case _d.CharData:
		}
	}
	return nil
}
func (_gbad *CT_PositiveSize2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0078"}, Value: _e.Sprintf("\u0025\u0076", _gbad.CxAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u0079"}, Value: _e.Sprintf("\u0025\u0076", _gbad.CyAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_AdjustHandleList struct {
	AhXY    []*CT_XYAdjustHandle
	AhPolar []*CT_PolarAdjustHandle
}

func (_eafc *CT_Path2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _agbge := range start.Attr {
		if _agbge.Name.Local == "\u0077" {
			_afbg, _ggbdf := _cd.ParseInt(_agbge.Value, 10, 64)
			if _ggbdf != nil {
				return _ggbdf
			}
			_eafc.WAttr = &_afbg
			continue
		}
		if _agbge.Name.Local == "\u0068" {
			_efaab, _dedfbc := _cd.ParseInt(_agbge.Value, 10, 64)
			if _dedfbc != nil {
				return _dedfbc
			}
			_eafc.HAttr = &_efaab
			continue
		}
		if _agbge.Name.Local == "\u0066\u0069\u006c\u006c" {
			_eafc.FillAttr.UnmarshalXMLAttr(_agbge)
			continue
		}
		if _agbge.Name.Local == "\u0073\u0074\u0072\u006f\u006b\u0065" {
			_dadgg, _cecge := _cd.ParseBool(_agbge.Value)
			if _cecge != nil {
				return _cecge
			}
			_eafc.StrokeAttr = &_dadgg
			continue
		}
		if _agbge.Name.Local == "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b" {
			_dged, _gadde := _cd.ParseBool(_agbge.Value)
			if _gadde != nil {
				return _gadde
			}
			_eafc.ExtrusionOkAttr = &_dged
			continue
		}
	}
_fffbee:
	for {
		_bcfce, _addd := d.Token()
		if _addd != nil {
			return _addd
		}
		switch _cffac := _bcfce.(type) {
		case _d.StartElement:
			switch _cffac.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u006fs\u0065"}:
				_eeca := NewCT_Path2DClose()
				if _egacc := d.DecodeElement(_eeca, &_cffac); _egacc != nil {
					return _egacc
				}
				_eafc.Close = append(_eafc.Close, _eeca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u006f\u0076\u0065\u0054\u006f"}:
				_caace := NewCT_Path2DMoveTo()
				if _ceeec := d.DecodeElement(_caace, &_cffac); _ceeec != nil {
					return _ceeec
				}
				_eafc.MoveTo = append(_eafc.MoveTo, _caace)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0054\u006f"}:
				_dcec := NewCT_Path2DLineTo()
				if _bgce := d.DecodeElement(_dcec, &_cffac); _bgce != nil {
					return _bgce
				}
				_eafc.LnTo = append(_eafc.LnTo, _dcec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0072\u0063T\u006f"}:
				_abde := NewCT_Path2DArcTo()
				if _afecf := d.DecodeElement(_abde, &_cffac); _afecf != nil {
					return _afecf
				}
				_eafc.ArcTo = append(_eafc.ArcTo, _abde)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071u\u0061\u0064\u0042\u0065\u007a\u0054o"}:
				_fdadc := NewCT_Path2DQuadBezierTo()
				if _ddgc := d.DecodeElement(_fdadc, &_cffac); _ddgc != nil {
					return _ddgc
				}
				_eafc.QuadBezTo = append(_eafc.QuadBezTo, _fdadc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}:
				_gfccg := NewCT_Path2DCubicBezierTo()
				if _aagef := d.DecodeElement(_gfccg, &_cffac); _aagef != nil {
					return _aagef
				}
				_eafc.CubicBezTo = append(_eafc.CubicBezTo, _gfccg)
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044 \u0025\u0076", _cffac.Name)
				if _accbb := d.Skip(); _accbb != nil {
					return _accbb
				}
			}
		case _d.EndElement:
			break _fffbee
		case _d.CharData:
		}
	}
	return nil
}
func (_dadea *CT_StyleMatrixReference) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abdgfg := range start.Attr {
		if _abdgfg.Name.Local == "\u0069\u0064\u0078" {
			_gedfd, _dfafd := _cd.ParseUint(_abdgfg.Value, 10, 32)
			if _dfafd != nil {
				return _dfafd
			}
			_dadea.IdxAttr = uint32(_gedfd)
			continue
		}
	}
_cbgc:
	for {
		_aedea, _fgeb := d.Token()
		if _fgeb != nil {
			return _fgeb
		}
		switch _fafae := _aedea.(type) {
		case _d.StartElement:
			switch _fafae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_dadea.ScrgbClr = NewCT_ScRgbColor()
				if _bagce := d.DecodeElement(_dadea.ScrgbClr, &_fafae); _bagce != nil {
					return _bagce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_dadea.SrgbClr = NewCT_SRgbColor()
				if _cfceeb := d.DecodeElement(_dadea.SrgbClr, &_fafae); _cfceeb != nil {
					return _cfceeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_dadea.HslClr = NewCT_HslColor()
				if _cfgbg := d.DecodeElement(_dadea.HslClr, &_fafae); _cfgbg != nil {
					return _cfgbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_dadea.SysClr = NewCT_SystemColor()
				if _dbbfc := d.DecodeElement(_dadea.SysClr, &_fafae); _dbbfc != nil {
					return _dbbfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_dadea.SchemeClr = NewCT_SchemeColor()
				if _gefce := d.DecodeElement(_dadea.SchemeClr, &_fafae); _gefce != nil {
					return _gefce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_dadea.PrstClr = NewCT_PresetColor()
				if _cecga := d.DecodeElement(_dadea.PrstClr, &_fafae); _cecga != nil {
					return _cecga
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004d\u0061\u0074\u0072i\u0078\u0052\u0065\u0066\u0065\u0072e\u006e\u0063\u0065 \u0025\u0076", _fafae.Name)
				if _bgfe := d.Skip(); _bgfe != nil {
					return _bgfe
				}
			}
		case _d.EndElement:
			break _cbgc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GvmlGroupShapeNonVisual and its children, prefixing error messages with path
func (_edbfg *CT_GvmlGroupShapeNonVisual) ValidateWithPath(path string) error {
	if _fbdf := _edbfg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fbdf != nil {
		return _fbdf
	}
	if _ebfb := _edbfg.CNvGrpSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"); _ebfb != nil {
		return _ebfb
	}
	return nil
}

type CT_BackgroundFillStyleList struct{ EG_FillProperties []*EG_FillProperties }

func (_gabcb *ST_PresetPatternVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gabcb = 0
	case "\u0070\u0063\u0074\u0035":
		*_gabcb = 1
	case "\u0070\u0063\u00741\u0030":
		*_gabcb = 2
	case "\u0070\u0063\u00742\u0030":
		*_gabcb = 3
	case "\u0070\u0063\u00742\u0035":
		*_gabcb = 4
	case "\u0070\u0063\u00743\u0030":
		*_gabcb = 5
	case "\u0070\u0063\u00744\u0030":
		*_gabcb = 6
	case "\u0070\u0063\u00745\u0030":
		*_gabcb = 7
	case "\u0070\u0063\u00746\u0030":
		*_gabcb = 8
	case "\u0070\u0063\u00747\u0030":
		*_gabcb = 9
	case "\u0070\u0063\u00747\u0035":
		*_gabcb = 10
	case "\u0070\u0063\u00748\u0030":
		*_gabcb = 11
	case "\u0070\u0063\u00749\u0030":
		*_gabcb = 12
	case "\u0068\u006f\u0072\u007a":
		*_gabcb = 13
	case "\u0076\u0065\u0072\u0074":
		*_gabcb = 14
	case "\u006c\u0074\u0048\u006f\u0072\u007a":
		*_gabcb = 15
	case "\u006c\u0074\u0056\u0065\u0072\u0074":
		*_gabcb = 16
	case "\u0064\u006b\u0048\u006f\u0072\u007a":
		*_gabcb = 17
	case "\u0064\u006b\u0056\u0065\u0072\u0074":
		*_gabcb = 18
	case "\u006ea\u0072\u0048\u006f\u0072\u007a":
		*_gabcb = 19
	case "\u006ea\u0072\u0056\u0065\u0072\u0074":
		*_gabcb = 20
	case "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a":
		*_gabcb = 21
	case "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074":
		*_gabcb = 22
	case "\u0063\u0072\u006fs\u0073":
		*_gabcb = 23
	case "\u0064\u006e\u0044\u0069\u0061\u0067":
		*_gabcb = 24
	case "\u0075\u0070\u0044\u0069\u0061\u0067":
		*_gabcb = 25
	case "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067":
		*_gabcb = 26
	case "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067":
		*_gabcb = 27
	case "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067":
		*_gabcb = 28
	case "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067":
		*_gabcb = 29
	case "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067":
		*_gabcb = 30
	case "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067":
		*_gabcb = 31
	case "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067":
		*_gabcb = 32
	case "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067":
		*_gabcb = 33
	case "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s":
		*_gabcb = 34
	case "\u0073m\u0043\u0068\u0065\u0063\u006b":
		*_gabcb = 35
	case "\u006cg\u0043\u0068\u0065\u0063\u006b":
		*_gabcb = 36
	case "\u0073\u006d\u0047\u0072\u0069\u0064":
		*_gabcb = 37
	case "\u006c\u0067\u0047\u0072\u0069\u0064":
		*_gabcb = 38
	case "\u0064o\u0074\u0047\u0072\u0069\u0064":
		*_gabcb = 39
	case "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_gabcb = 40
	case "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069":
		*_gabcb = 41
	case "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k":
		*_gabcb = 42
	case "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k":
		*_gabcb = 43
	case "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed":
		*_gabcb = 44
	case "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064":
		*_gabcb = 45
	case "\u0064o\u0074\u0044\u006d\u006e\u0064":
		*_gabcb = 46
	case "\u0070\u006c\u0061i\u0064":
		*_gabcb = 47
	case "\u0073\u0070\u0068\u0065\u0072\u0065":
		*_gabcb = 48
	case "\u0077\u0065\u0061v\u0065":
		*_gabcb = 49
	case "\u0064\u0069\u0076o\u0074":
		*_gabcb = 50
	case "\u0073h\u0069\u006e\u0067\u006c\u0065":
		*_gabcb = 51
	case "\u0077\u0061\u0076\u0065":
		*_gabcb = 52
	case "\u0074r\u0065\u006c\u006c\u0069\u0073":
		*_gabcb = 53
	case "\u007a\u0069\u0067\u005a\u0061\u0067":
		*_gabcb = 54
	}
	return nil
}
func (_dgde *CT_TablePartStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bdfde:
	for {
		_bfee, _cafea := d.Token()
		if _cafea != nil {
			return _cafea
		}
		switch _ebffc := _bfee.(type) {
		case _d.StartElement:
			switch _ebffc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0054\u0078\u0053\u0074\u0079\u006ce"}:
				_dgde.TcTxStyle = NewCT_TableStyleTextStyle()
				if _gdbag := d.DecodeElement(_dgde.TcTxStyle, &_ebffc); _gdbag != nil {
					return _gdbag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074c\u0053\u0074\u0079\u006c\u0065"}:
				_dgde.TcStyle = NewCT_TableStyleCellStyle()
				if _cadfc := d.DecodeElement(_dgde.TcStyle, &_ebffc); _cadfc != nil {
					return _cadfc
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _ebffc.Name)
				if _acgd := d.Skip(); _acgd != nil {
					return _acgd
				}
			}
		case _d.EndElement:
			break _bdfde
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the EG_TextUnderlineFill and its children, prefixing error messages with path
func (_ffffd *EG_TextUnderlineFill) ValidateWithPath(path string) error {
	if _ffffd.UFillTx != nil {
		if _cedaef := _ffffd.UFillTx.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c\u0054\u0078"); _cedaef != nil {
			return _cedaef
		}
	}
	if _ffffd.UFill != nil {
		if _eeadgf := _ffffd.UFill.ValidateWithPath(path + "\u002f\u0055\u0046\u0069\u006c\u006c"); _eeadgf != nil {
			return _eeadgf
		}
	}
	return nil
}

// Validate validates the CT_RelativeRect and its children
func (_gbbbd *CT_RelativeRect) Validate() error {
	return _gbbbd.ValidateWithPath("\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074")
}

type CT_PictureLocking struct {
	NoCropAttr             *bool
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}
type CT_Camera struct {
	PrstAttr ST_PresetCameraType
	FovAttr  *int32
	ZoomAttr *ST_PositivePercentage
	Rot      *CT_SphereCoords
}
type ST_SystemColorVal byte

func (_gcedd *CT_AnimationGraphicalObjectBuildProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cfcf:
	for {
		_caef, _fcae := d.Token()
		if _fcae != nil {
			return _fcae
		}
		switch _dbc := _caef.(type) {
		case _d.StartElement:
			switch _dbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0044\u0067\u006d"}:
				_gcedd.BldDgm = NewCT_AnimationDgmBuildProperties()
				if _fbbe := d.DecodeElement(_gcedd.BldDgm, &_dbc); _fbbe != nil {
					return _fbbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}:
				_gcedd.BldChart = NewCT_AnimationChartBuildProperties()
				if _gcd := d.DecodeElement(_gcedd.BldChart, &_dbc); _gcd != nil {
					return _gcd
				}
			default:
				_ff.Log("sk\u0069\u0070\u0070\u0069\u006e\u0067\u0020un\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061p\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064P\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dbc.Name)
				if _ebag := d.Skip(); _ebag != nil {
					return _ebag
				}
			}
		case _d.EndElement:
			break _cfcf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_HslColor and its children, prefixing error messages with path
func (_cdbg *CT_HslColor) ValidateWithPath(path string) error {
	if _cdbg.HueAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _cdbg.HueAttr)
	}
	if _cdbg.HueAttr >= 21600000 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _cdbg.HueAttr)
	}
	if _deee := _cdbg.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _deee != nil {
		return _deee
	}
	if _dcbeb := _cdbg.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _dcbeb != nil {
		return _dcbeb
	}
	for _gaefc, _fcec := range _cdbg.EG_ColorTransform {
		if _bded := _fcec.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _gaefc)); _bded != nil {
			return _bded
		}
	}
	return nil
}
func (_ebbce *CT_ColorReplaceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ebbce.ScrgbClr != nil {
		_abccf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbce.ScrgbClr, _abccf)
	}
	if _ebbce.SrgbClr != nil {
		_cfbd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_ebbce.SrgbClr, _cfbd)
	}
	if _ebbce.HslClr != nil {
		_ffbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbce.HslClr, _ffbd)
	}
	if _ebbce.SysClr != nil {
		_cceg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbce.SysClr, _cceg)
	}
	if _ebbce.SchemeClr != nil {
		_fccd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_ebbce.SchemeClr, _fccd)
	}
	if _ebbce.PrstClr != nil {
		_ebg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_ebbce.PrstClr, _ebg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdeca *ST_AnimationChartBuildType) Validate() error { return _fdeca.ValidateWithPath("") }
func (_badcg *Tbl) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_badcg.CT_Table = *NewCT_Table()
_bbee:
	for {
		_bgbaac, _dfegbg := d.Token()
		if _dfegbg != nil {
			return _dfegbg
		}
		switch _cdbag := _bgbaac.(type) {
		case _d.StartElement:
			switch _cdbag.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_badcg.TblPr = NewCT_TableProperties()
				if _fbffb := d.DecodeElement(_badcg.TblPr, &_cdbag); _fbffb != nil {
					return _fbffb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _eecce := d.DecodeElement(_badcg.TblGrid, &_cdbag); _eecce != nil {
					return _eecce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_gdbdcf := NewCT_TableRow()
				if _cdfgbb := d.DecodeElement(_gdbdcf, &_cdbag); _cdfgbb != nil {
					return _cdfgbb
				}
				_badcg.Tr = append(_badcg.Tr, _gdbdcf)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006fn\u0020\u0054b\u006c\u0020\u0025\u0076", _cdbag.Name)
				if _gabce := d.Skip(); _gabce != nil {
					return _gabce
				}
			}
		case _d.EndElement:
			break _bbee
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextTabStopList and its children
func (_dcbef *CT_TextTabStopList) Validate() error {
	return _dcbef.ValidateWithPath("\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074")
}

// ValidateWithPath validates the CT_GvmlTextShape and its children, prefixing error messages with path
func (_bgda *CT_GvmlTextShape) ValidateWithPath(path string) error {
	if _cfcff := _bgda.TxBody.ValidateWithPath(path + "\u002fT\u0078\u0042\u006f\u0064\u0079"); _cfcff != nil {
		return _cfcff
	}
	if _bgda.Choice != nil {
		if _agef := _bgda.Choice.ValidateWithPath(path + "\u002fC\u0068\u006f\u0069\u0063\u0065"); _agef != nil {
			return _agef
		}
	}
	if _bgda.ExtLst != nil {
		if _gcabe := _bgda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _gcabe != nil {
			return _gcabe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomGeometry2D and its children, prefixing error messages with path
func (_gbce *CT_CustomGeometry2D) ValidateWithPath(path string) error {
	if _gbce.AvLst != nil {
		if _fdaae := _gbce.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _fdaae != nil {
			return _fdaae
		}
	}
	if _gbce.GdLst != nil {
		if _abbg := _gbce.GdLst.ValidateWithPath(path + "\u002f\u0047\u0064\u004c\u0073\u0074"); _abbg != nil {
			return _abbg
		}
	}
	if _gbce.AhLst != nil {
		if _caaa := _gbce.AhLst.ValidateWithPath(path + "\u002f\u0041\u0068\u004c\u0073\u0074"); _caaa != nil {
			return _caaa
		}
	}
	if _gbce.CxnLst != nil {
		if _cccg := _gbce.CxnLst.ValidateWithPath(path + "\u002fC\u0078\u006e\u004c\u0073\u0074"); _cccg != nil {
			return _cccg
		}
	}
	if _gbce.Rect != nil {
		if _ggfa := _gbce.Rect.ValidateWithPath(path + "\u002f\u0052\u0065c\u0074"); _ggfa != nil {
			return _ggfa
		}
	}
	if _dge := _gbce.PathLst.ValidateWithPath(path + "\u002f\u0050\u0061\u0074\u0068\u004c\u0073\u0074"); _dge != nil {
		return _dge
	}
	return nil
}
func (_bffag ST_TextAnchoringType) String() string {
	switch _bffag {
	case 0:
		return ""
	case 1:
		return "\u0074"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0062"
	case 4:
		return "\u006a\u0075\u0073\u0074"
	case 5:
		return "\u0064\u0069\u0073\u0074"
	}
	return ""
}

type ST_BlackWhiteMode byte

func (_ccbce *CT_RelativeRect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fcfce := range start.Attr {
		if _fcfce.Name.Local == "\u006c" {
			_ggdfd, _agdc := ParseUnionST_Percentage(_fcfce.Value)
			if _agdc != nil {
				return _agdc
			}
			_ccbce.LAttr = &_ggdfd
			continue
		}
		if _fcfce.Name.Local == "\u0074" {
			_caddc, _adgbd := ParseUnionST_Percentage(_fcfce.Value)
			if _adgbd != nil {
				return _adgbd
			}
			_ccbce.TAttr = &_caddc
			continue
		}
		if _fcfce.Name.Local == "\u0072" {
			_bdafa, _gebcd := ParseUnionST_Percentage(_fcfce.Value)
			if _gebcd != nil {
				return _gebcd
			}
			_ccbce.RAttr = &_bdafa
			continue
		}
		if _fcfce.Name.Local == "\u0062" {
			_ecgeac, _eebbb := ParseUnionST_Percentage(_fcfce.Value)
			if _eebbb != nil {
				return _eebbb
			}
			_ccbce.BAttr = &_ecgeac
			continue
		}
	}
	for {
		_ffbbb, _cbecb := d.Token()
		if _cbecb != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0052\u0065\u006c\u0061\u0074\u0069v\u0065\u0052\u0065c\u0074:\u0020\u0025\u0073", _cbecb)
		}
		if _fgbfb, _aefcb := _ffbbb.(_d.EndElement); _aefcb && _fgbfb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_aagee *CT_TablePartStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _aagee.TcTxStyle != nil {
		_gccc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0074\u0063\u0054\u0078\u0053\u0074\u0079\u006c\u0065"}}
		e.EncodeElement(_aagee.TcTxStyle, _gccc)
	}
	if _aagee.TcStyle != nil {
		_cfdgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0063\u0053\u0074\u0079\u006ce"}}
		e.EncodeElement(_aagee.TcStyle, _cfdgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_BlurEffect() *CT_BlurEffect { _gfad := &CT_BlurEffect{}; return _gfad }
func (_fcfcf *CT_TextUnderlineLineFollowText) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_edbe ST_LineEndType) String() string {
	switch _edbe {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case 3:
		return "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case 4:
		return "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case 5:
		return "\u006f\u0076\u0061\u006c"
	case 6:
		return "\u0061\u0072\u0072o\u0077"
	}
	return ""
}
func (_cffc ST_PresetColorVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cffc.String(), start)
}

// Validate validates the CT_NoFillProperties and its children
func (_gaaccd *CT_NoFillProperties) Validate() error {
	return _gaaccd.ValidateWithPath("\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

type CT_ColorSchemeAndMapping struct {
	ClrScheme *CT_ColorScheme
	ClrMap    *CT_ColorMapping
}

func (_eegbe *CT_Path2DMoveTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eegbe.Pt = NewCT_AdjPoint2D()
_ebbfe:
	for {
		_aaccb, _gegef := d.Token()
		if _gegef != nil {
			return _gegef
		}
		switch _caaadb := _aaccb.(type) {
		case _d.StartElement:
			switch _caaadb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0074"}:
				if _cagcd := d.DecodeElement(_eegbe.Pt, &_caaadb); _cagcd != nil {
					return _cagcd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0061\u0074h\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f\u0020\u0025\u0076", _caaadb.Name)
				if _cfceb := d.Skip(); _cfceb != nil {
					return _cfceb
				}
			}
		case _d.EndElement:
			break _ebbfe
		case _d.CharData:
		}
	}
	return nil
}
func (_efafb *CT_TextSpacingPercent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfed := range start.Attr {
		if _bfed.Name.Local == "\u0076\u0061\u006c" {
			_gacda, _dccd := ParseUnionST_TextSpacingPercentOrPercentString(_bfed.Value)
			if _dccd != nil {
				return _dccd
			}
			_efafb.ValAttr = _gacda
			continue
		}
	}
	for {
		_cdeb, _bedgc := d.Token()
		if _bedgc != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070\u0061\u0063\u0069n\u0067\u0050\u0065\u0072\u0063\u0065\u006et\u003a\u0020\u0025\u0073", _bedgc)
		}
		if _fggcad, _affaa := _cdeb.(_d.EndElement); _affaa && _fggcad.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddgfe ST_TextCapsType) Validate() error { return _ddgfe.ValidateWithPath("") }
func (_eccac *EG_TextUnderlineLine) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbdg:
	for {
		_dacbcb, _dddda := d.Token()
		if _dddda != nil {
			return _dddda
		}
		switch _adadbd := _dacbcb.(type) {
		case _d.StartElement:
			switch _adadbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_eccac.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _gbaec := d.DecodeElement(_eccac.ULnTx, &_adadbd); _gbaec != nil {
					return _gbaec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_eccac.ULn = NewCT_LineProperties()
				if _cggcd := d.DecodeElement(_eccac.ULn, &_adadbd); _cggcd != nil {
					return _cggcd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0020\u0025\u0076", _adadbd.Name)
				if _fcdga := d.Skip(); _fcdga != nil {
					return _fcdga
				}
			}
		case _d.EndElement:
			break _cbdg
		case _d.CharData:
		}
	}
	return nil
}
func (_aadce ST_BlipCompression) ValidateWithPath(path string) error {
	switch _aadce {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aadce))
	}
	return nil
}
func (_abeef *CT_InnerShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abeef.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_abeef.BlurRadAttr)})
	}
	if _abeef.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_abeef.DistAttr)})
	}
	if _abeef.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_abeef.DirAttr)})
	}
	e.EncodeToken(start)
	if _abeef.ScrgbClr != nil {
		_cfgdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_abeef.ScrgbClr, _cfgdc)
	}
	if _abeef.SrgbClr != nil {
		_dfecf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_abeef.SrgbClr, _dfecf)
	}
	if _abeef.HslClr != nil {
		_gdgca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_abeef.HslClr, _gdgca)
	}
	if _abeef.SysClr != nil {
		_dgfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_abeef.SysClr, _dgfc)
	}
	if _abeef.SchemeClr != nil {
		_dageg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_abeef.SchemeClr, _dageg)
	}
	if _abeef.PrstClr != nil {
		_gfbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_abeef.PrstClr, _gfbbf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_AlphaFloorEffect struct{}

// ValidateWithPath validates the Tbl and its children, prefixing error messages with path
func (_edeage *Tbl) ValidateWithPath(path string) error {
	if _dccdd := _edeage.CT_Table.ValidateWithPath(path); _dccdd != nil {
		return _dccdd
	}
	return nil
}
func (_debbd *CT_TintEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _debbd.HueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_debbd.HueAttr)})
	}
	if _debbd.AmtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006d\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_debbd.AmtAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gead *CT_BiLevelEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ggfe := range start.Attr {
		if _ggfe.Name.Local == "\u0074\u0068\u0072\u0065\u0073\u0068" {
			_gdg, _dbdb := ParseUnionST_PositiveFixedPercentage(_ggfe.Value)
			if _dbdb != nil {
				return _dbdb
			}
			_gead.ThreshAttr = _gdg
			continue
		}
	}
	for {
		_cdgg, _dcdb := d.Token()
		if _dcdb != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073i\u006e\u0067\u0020\u0043\u0054\u005f\u0042\u0069\u004c\u0065v\u0065l\u0045\u0066\u0066\u0065\u0063\u0074\u003a \u0025\u0073", _dcdb)
		}
		if _gbcc, _acag := _cdgg.(_d.EndElement); _acag && _gbcc.Name == start.Name {
			break
		}
	}
	return nil
}

type ST_PresetCameraType byte

func (_ecca *CT_LightRig) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecca.RigAttr = ST_LightRigType(1)
	_ecca.DirAttr = ST_LightRigDirection(1)
	for _, _fddbc := range start.Attr {
		if _fddbc.Name.Local == "\u0072\u0069\u0067" {
			_ecca.RigAttr.UnmarshalXMLAttr(_fddbc)
			continue
		}
		if _fddbc.Name.Local == "\u0064\u0069\u0072" {
			_ecca.DirAttr.UnmarshalXMLAttr(_fddbc)
			continue
		}
	}
_dgbed:
	for {
		_gadb, _fggb := d.Token()
		if _fggb != nil {
			return _fggb
		}
		switch _gbab := _gadb.(type) {
		case _d.StartElement:
			switch _gbab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0074"}:
				_ecca.Rot = NewCT_SphereCoords()
				if _gcedf := d.DecodeElement(_ecca.Rot, &_gbab); _gcedf != nil {
					return _gcedf
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067\u0020\u0025\u0076", _gbab.Name)
				if _gbdeg := d.Skip(); _gbdeg != nil {
					return _gbdeg
				}
			}
		case _d.EndElement:
			break _dgbed
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_AnimationElementChoice and its children
func (_gedc *CT_AnimationElementChoice) Validate() error {
	return _gedc.ValidateWithPath("\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e")
}

// ValidateWithPath validates the CT_ColorScheme and its children, prefixing error messages with path
func (_geaa *CT_ColorScheme) ValidateWithPath(path string) error {
	if _cafa := _geaa.Dk1.ValidateWithPath(path + "\u002f\u0044\u006b\u0031"); _cafa != nil {
		return _cafa
	}
	if _edcg := _geaa.Lt1.ValidateWithPath(path + "\u002f\u004c\u0074\u0031"); _edcg != nil {
		return _edcg
	}
	if _gdbe := _geaa.Dk2.ValidateWithPath(path + "\u002f\u0044\u006b\u0032"); _gdbe != nil {
		return _gdbe
	}
	if _ddaf := _geaa.Lt2.ValidateWithPath(path + "\u002f\u004c\u0074\u0032"); _ddaf != nil {
		return _ddaf
	}
	if _dbbc := _geaa.Accent1.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0031"); _dbbc != nil {
		return _dbbc
	}
	if _feb := _geaa.Accent2.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0032"); _feb != nil {
		return _feb
	}
	if _bcaeg := _geaa.Accent3.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0033"); _bcaeg != nil {
		return _bcaeg
	}
	if _efgg := _geaa.Accent4.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0034"); _efgg != nil {
		return _efgg
	}
	if _cddc := _geaa.Accent5.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0035"); _cddc != nil {
		return _cddc
	}
	if _ecba := _geaa.Accent6.ValidateWithPath(path + "\u002f\u0041\u0063\u0063\u0065\u006e\u0074\u0036"); _ecba != nil {
		return _ecba
	}
	if _ggce := _geaa.Hlink.ValidateWithPath(path + "\u002f\u0048\u006c\u0069\u006e\u006b"); _ggce != nil {
		return _ggce
	}
	if _ddce := _geaa.FolHlink.ValidateWithPath(path + "\u002fF\u006f\u006c\u0048\u006c\u0069\u006ek"); _ddce != nil {
		return _ddce
	}
	if _geaa.ExtLst != nil {
		if _fccb := _geaa.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fccb != nil {
			return _fccb
		}
	}
	return nil
}
func (_gcdgb *CT_Headers) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_fbcad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0065\u0061\u0064\u0065\u0072"}}
	for _, _egefa := range _gcdgb.Header {
		e.EncodeElement(_egefa, _fbcad)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_DashStop struct {
	DAttr  ST_PositivePercentage
	SpAttr ST_PositivePercentage
}

func (_dgea ST_PresetLineDashVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dgea.String(), start)
}
func NewCT_Headers() *CT_Headers { _edaaf := &CT_Headers{}; return _edaaf }

// Validate validates the CT_Percentage and its children
func (_ecac *CT_Percentage) Validate() error {
	return _ecac.ValidateWithPath("\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
}

type CT_ColorChangeEffect struct {
	UseAAttr *bool
	ClrFrom  *CT_Color
	ClrTo    *CT_Color
}

// Validate validates the CT_NonVisualConnectorProperties and its children
func (_efecf *CT_NonVisualConnectorProperties) Validate() error {
	return _efecf.ValidateWithPath("\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_gffaf ST_LineCap) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bffad := _d.Attr{}
	_bffad.Name = name
	switch _gffaf {
	case ST_LineCapUnset:
		_bffad.Value = ""
	case ST_LineCapRnd:
		_bffad.Value = "\u0072\u006e\u0064"
	case ST_LineCapSq:
		_bffad.Value = "\u0073\u0071"
	case ST_LineCapFlat:
		_bffad.Value = "\u0066\u006c\u0061\u0074"
	}
	return _bffad, nil
}

type CT_GvmlTextShapeChoice struct {
	UseSpRect *CT_GvmlUseShapeRectangle
	Xfrm      *CT_Transform2D
}

// ValidateWithPath validates the CT_AlphaBiLevelEffect and its children, prefixing error messages with path
func (_faf *CT_AlphaBiLevelEffect) ValidateWithPath(path string) error {
	if _fda := _faf.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _fda != nil {
		return _fda
	}
	return nil
}

// ValidateWithPath validates the CT_LineJoinMiterProperties and its children, prefixing error messages with path
func (_fagag *CT_LineJoinMiterProperties) ValidateWithPath(path string) error {
	if _fagag.LimAttr != nil {
		if _ccgaed := _fagag.LimAttr.ValidateWithPath(path + "\u002f\u004c\u0069\u006d\u0041\u0074\u0074\u0072"); _ccgaed != nil {
			return _ccgaed
		}
	}
	return nil
}
func (_becbgg *TblStyleLst) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074"
	return _becbgg.CT_TableStyleList.MarshalXML(e, start)
}

// ValidateWithPath validates the CT_Camera and its children, prefixing error messages with path
func (_cfbad *CT_Camera) ValidateWithPath(path string) error {
	if _cfbad.PrstAttr == ST_PresetCameraTypeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eagg := _cfbad.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _eagg != nil {
		return _eagg
	}
	if _cfbad.FovAttr != nil {
		if *_cfbad.FovAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0046\u006fv\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_cfbad.FovAttr)
		}
		if *_cfbad.FovAttr > 10800000 {
			return _e.Errorf("\u0025\u0073\u002fm\u002e\u0046\u006f\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0030\u0038\u0030\u0030\u0030\u0030\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cfbad.FovAttr)
		}
	}
	if _cfbad.ZoomAttr != nil {
		if _deea := _cfbad.ZoomAttr.ValidateWithPath(path + "\u002fZ\u006f\u006f\u006d\u0041\u0074\u0074r"); _deea != nil {
			return _deea
		}
	}
	if _cfbad.Rot != nil {
		if _cbcb := _cfbad.Rot.ValidateWithPath(path + "\u002f\u0052\u006f\u0074"); _cbcb != nil {
			return _cbcb
		}
	}
	return nil
}
func (_eggadd ST_TextUnderlineType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_eggadd.String(), start)
}

// ValidateWithPath validates the CT_TextShapeAutofit and its children, prefixing error messages with path
func (_gbccb *CT_TextShapeAutofit) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_Path2DArcTo and its children, prefixing error messages with path
func (_cffb *CT_Path2DArcTo) ValidateWithPath(path string) error {
	if _dfabd := _cffb.WRAttr.ValidateWithPath(path + "\u002fW\u0052\u0041\u0074\u0074\u0072"); _dfabd != nil {
		return _dfabd
	}
	if _acfba := _cffb.HRAttr.ValidateWithPath(path + "\u002fH\u0052\u0041\u0074\u0074\u0072"); _acfba != nil {
		return _acfba
	}
	if _fgdaa := _cffb.StAngAttr.ValidateWithPath(path + "\u002f\u0053\u0074\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _fgdaa != nil {
		return _fgdaa
	}
	if _cbbda := _cffb.SwAngAttr.ValidateWithPath(path + "\u002f\u0053\u0077\u0041\u006e\u0067\u0041\u0074\u0074\u0072"); _cbbda != nil {
		return _cbbda
	}
	return nil
}
func (_ebadd *ST_TextVertOverflowType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ebadd = 0
	case "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077":
		*_ebadd = 1
	case "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073":
		*_ebadd = 2
	case "\u0063\u006c\u0069\u0070":
		*_ebadd = 3
	}
	return nil
}
func (_geegcf ST_DgmBuildStep) String() string {
	switch _geegcf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0070"
	case 2:
		return "\u0062\u0067"
	}
	return ""
}
func (_decad ST_OnOffStyleType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ecdbgf := _d.Attr{}
	_ecdbgf.Name = name
	switch _decad {
	case ST_OnOffStyleTypeUnset:
		_ecdbgf.Value = ""
	case ST_OnOffStyleTypeOn:
		_ecdbgf.Value = "\u006f\u006e"
	case ST_OnOffStyleTypeOff:
		_ecdbgf.Value = "\u006f\u0066\u0066"
	case ST_OnOffStyleTypeDef:
		_ecdbgf.Value = "\u0064\u0065\u0066"
	}
	return _ecdbgf, nil
}

type CT_Color struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// ValidateWithPath validates the CT_GvmlGroupShapeChoice and its children, prefixing error messages with path
func (_ggba *CT_GvmlGroupShapeChoice) ValidateWithPath(path string) error {
	for _bfbfe, _cecdc := range _ggba.TxSp {
		if _gfbdg := _cecdc.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0054\u0078\u0053\u0070\u005b\u0025\u0064\u005d", path, _bfbfe)); _gfbdg != nil {
			return _gfbdg
		}
	}
	for _efgcfb, _bged := range _ggba.Sp {
		if _aedgg := _bged.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0053\u0070\u005b\u0025\u0064]", path, _efgcfb)); _aedgg != nil {
			return _aedgg
		}
	}
	for _ccef, _cfdb := range _ggba.CxnSp {
		if _faed := _cfdb.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002fC\u0078\u006e\u0053\u0070\u005b\u0025\u0064\u005d", path, _ccef)); _faed != nil {
			return _faed
		}
	}
	for _ddgag, _feceg := range _ggba.Pic {
		if _cgdgb := _feceg.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0050\u0069\u0063\u005b\u0025\u0064\u005d", path, _ddgag)); _cgdgb != nil {
			return _cgdgb
		}
	}
	for _dbaa, _gfff := range _ggba.GraphicFrame {
		if _eacc := _gfff.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0047ra\u0070\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065\u005b\u0025\u0064\u005d", path, _dbaa)); _eacc != nil {
			return _eacc
		}
	}
	for _dfcc, _gdffc := range _ggba.GrpSp {
		if _dgade := _gdffc.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002fG\u0072\u0070\u0053\u0070\u005b\u0025\u0064\u005d", path, _dfcc)); _dgade != nil {
			return _dgade
		}
	}
	return nil
}
func (_abdage ST_PitchFamily) ValidateWithPath(path string) error {
	switch _abdage {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_abdage))
	}
	return nil
}

type CT_AnimationChartBuildProperties struct {
	BldAttr    *ST_AnimationChartBuildType
	AnimBgAttr *bool
}

// ValidateWithPath validates the CT_SupplementalFont and its children, prefixing error messages with path
func (_cecgg *CT_SupplementalFont) ValidateWithPath(path string) error { return nil }
func (_gcge *CT_NonVisualGroupDrawingShapeProps) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ffcec:
	for {
		_cadc, _cbae := d.Token()
		if _cbae != nil {
			return _cbae
		}
		switch _fcdd := _cadc.(type) {
		case _d.StartElement:
			switch _fcdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_gcge.GrpSpLocks = NewCT_GroupLocking()
				if _fggfb := d.DecodeElement(_gcge.GrpSpLocks, &_fcdd); _fggfb != nil {
					return _fggfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gcge.ExtLst = NewCT_OfficeArtExtensionList()
				if _agdb := d.DecodeElement(_gcge.ExtLst, &_fcdd); _agdb != nil {
					return _agdb
				}
			default:
				_ff.Log("s\u006b\u0069p\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c\u0047\u0072\u006f\u0075\u0070\u0044\u0072\u0061\u0077\u0069\u006eg\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073\u0020%\u0076", _fcdd.Name)
				if _aafca := d.Skip(); _aafca != nil {
					return _aafca
				}
			}
		case _d.EndElement:
			break _ffcec
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_LineJoinBevel and its children
func (_feefb *CT_LineJoinBevel) Validate() error {
	return _feefb.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c")
}
func (_dcbbeg ST_EffectContainerType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_adcfe := _d.Attr{}
	_adcfe.Name = name
	switch _dcbbeg {
	case ST_EffectContainerTypeUnset:
		_adcfe.Value = ""
	case ST_EffectContainerTypeSib:
		_adcfe.Value = "\u0073\u0069\u0062"
	case ST_EffectContainerTypeTree:
		_adcfe.Value = "\u0074\u0072\u0065\u0065"
	}
	return _adcfe, nil
}
func (_fecad *CT_DashStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddgb := range start.Attr {
		if _ddgb.Name.Local == "\u0064" {
			_ebfad, _ebef := ParseUnionST_PositivePercentage(_ddgb.Value)
			if _ebef != nil {
				return _ebef
			}
			_fecad.DAttr = _ebfad
			continue
		}
		if _ddgb.Name.Local == "\u0073\u0070" {
			_eabdd, _fege := ParseUnionST_PositivePercentage(_ddgb.Value)
			if _fege != nil {
				return _fege
			}
			_fecad.SpAttr = _eabdd
			continue
		}
	}
	for {
		_edca, _dgdb := d.Token()
		if _dgdb != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u003a\u0020\u0025\u0073", _dgdb)
		}
		if _dded, _fdcb := _edca.(_d.EndElement); _fdcb && _dded.Name == start.Name {
			break
		}
	}
	return nil
}
func (_eabag ST_AnimationChartOnlyBuildType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_edegb := _d.Attr{}
	_edegb.Name = name
	switch _eabag {
	case ST_AnimationChartOnlyBuildTypeUnset:
		_edegb.Value = ""
	case ST_AnimationChartOnlyBuildTypeSeries:
		_edegb.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_AnimationChartOnlyBuildTypeCategory:
		_edegb.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_AnimationChartOnlyBuildTypeSeriesEl:
		_edegb.Value = "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case ST_AnimationChartOnlyBuildTypeCategoryEl:
		_edegb.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return _edegb, nil
}
func (_cgdgbb ST_AnimationChartOnlyBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cgdgbb.String(), start)
}
func (_gacbe ST_TextSpacingPercentOrPercentString) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gacbe.ST_TextSpacingPercent != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_gacbe.ST_TextSpacingPercent)))
	}
	if _gacbe.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_gacbe.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func NewCT_ConnectionSiteList() *CT_ConnectionSiteList {
	_bdefbf := &CT_ConnectionSiteList{}
	return _bdefbf
}

// Validate validates the EG_TextBulletColor and its children
func (_bagad *EG_TextBulletColor) Validate() error {
	return _bagad.ValidateWithPath("\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072")
}

type CT_TransformEffect struct {
	SxAttr *ST_Percentage
	SyAttr *ST_Percentage
	KxAttr *int32
	KyAttr *int32
	TxAttr *ST_Coordinate
	TyAttr *ST_Coordinate
}

func NewCT_GrayscaleEffect() *CT_GrayscaleEffect { _dfbbg := &CT_GrayscaleEffect{}; return _dfbbg }
func (_cbcc *CT_Scene3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cbcc.Camera = NewCT_Camera()
	_cbcc.LightRig = NewCT_LightRig()
_gfgac:
	for {
		_egdbe, _cbeg := d.Token()
		if _cbeg != nil {
			return _cbeg
		}
		switch _adcba := _egdbe.(type) {
		case _d.StartElement:
			switch _adcba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0061\u006d\u0065\u0072\u0061"}:
				if _cbcbb := d.DecodeElement(_cbcc.Camera, &_adcba); _cbcbb != nil {
					return _cbcbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				if _fgef := d.DecodeElement(_cbcc.LightRig, &_adcba); _fgef != nil {
					return _fgef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}:
				_cbcc.Backdrop = NewCT_Backdrop()
				if _cfdafg := d.DecodeElement(_cbcc.Backdrop, &_adcba); _cfdafg != nil {
					return _cfdafg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cbcc.ExtLst = NewCT_OfficeArtExtensionList()
				if _cdba := d.DecodeElement(_cbcc.ExtLst, &_adcba); _cdba != nil {
					return _cdba
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fS\u0063\u0065\u006e\u0065\u0033\u0044\u0020\u0025\u0076", _adcba.Name)
				if _fgdfg := d.Skip(); _fgdfg != nil {
					return _fgdfg
				}
			}
		case _d.EndElement:
			break _gfgac
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_StyleMatrixReference and its children
func (_cfcab *CT_StyleMatrixReference) Validate() error {
	return _cfcab.ValidateWithPath("\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}

// ValidateWithPath validates the CT_PathShadeProperties and its children, prefixing error messages with path
func (_fbefg *CT_PathShadeProperties) ValidateWithPath(path string) error {
	if _deba := _fbefg.PathAttr.ValidateWithPath(path + "\u002fP\u0061\u0074\u0068\u0041\u0074\u0074r"); _deba != nil {
		return _deba
	}
	if _fbefg.FillToRect != nil {
		if _bdeab := _fbefg.FillToRect.ValidateWithPath(path + "/\u0046\u0069\u006c\u006c\u0054\u006f\u0052\u0065\u0063\u0074"); _bdeab != nil {
			return _bdeab
		}
	}
	return nil
}
func NewCT_LinearShadeProperties() *CT_LinearShadeProperties {
	_aegfb := &CT_LinearShadeProperties{}
	return _aegfb
}
func (_beaga *CT_PresetGeometry2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_ccaac, _cdaag := _beaga.PrstAttr.MarshalXMLAttr(_d.Name{Local: "\u0070\u0072\u0073\u0074"})
	if _cdaag != nil {
		return _cdaag
	}
	start.Attr = append(start.Attr, _ccaac)
	e.EncodeToken(start)
	if _beaga.AvLst != nil {
		_dbeaag := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_beaga.AvLst, _dbeaag)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_efegc ST_TextAutonumberScheme) ValidateWithPath(path string) error {
	switch _efegc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_efegc))
	}
	return nil
}

// Validate validates the CT_TextLineBreak and its children
func (_bafff *CT_TextLineBreak) Validate() error {
	return _bafff.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b")
}
func NewCT_Path2DLineTo() *CT_Path2DLineTo {
	_ecfdb := &CT_Path2DLineTo{}
	_ecfdb.Pt = NewCT_AdjPoint2D()
	return _ecfdb
}

type CT_EffectStyleItem struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
	Scene3d   *CT_Scene3D
	Sp3d      *CT_Shape3D
}
type CT_ShapeProperties struct {
	BwModeAttr ST_BlackWhiteMode
	Xfrm       *CT_Transform2D
	CustGeom   *CT_CustomGeometry2D
	PrstGeom   *CT_PresetGeometry2D
	NoFill     *CT_NoFillProperties
	SolidFill  *CT_SolidColorFillProperties
	GradFill   *CT_GradientFillProperties
	BlipFill   *CT_BlipFillProperties
	PattFill   *CT_PatternFillProperties
	GrpFill    *CT_GroupFillProperties
	Ln         *CT_LineProperties
	EffectLst  *CT_EffectList
	EffectDag  *CT_EffectContainer
	Scene3d    *CT_Scene3D
	Sp3d       *CT_Shape3D
	ExtLst     *CT_OfficeArtExtensionList
}

// Validate validates the CT_AlphaFloorEffect and its children
func (_ddf *CT_AlphaFloorEffect) Validate() error {
	return _ddf.ValidateWithPath("\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_aefac *VideoFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006cn\u0073"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0061"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0072"}, Value: "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078\u006d\u006c\u006e\u0073\u003a\u0073\u0068"}, Value: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0073\u0063\u0068\u0065m\u0061s\u002e\u006f\u0070\u0065\u006e\u0078\u006d\u006c\u0066\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067/\u006f\u0066\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002f\u0073\u0068\u0061\u0072e\u0064\u0054\u0079\u0070\u0065\u0073"})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"}, Value: "\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"})
	start.Name.Local = "a\u003a\u0076\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"
	return _aefac.CT_VideoFile.MarshalXML(e, start)
}
func (_ggadd ST_FontCollectionIndex) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gacc := _d.Attr{}
	_gacc.Name = name
	switch _ggadd {
	case ST_FontCollectionIndexUnset:
		_gacc.Value = ""
	case ST_FontCollectionIndexMajor:
		_gacc.Value = "\u006d\u0061\u006ao\u0072"
	case ST_FontCollectionIndexMinor:
		_gacc.Value = "\u006d\u0069\u006eo\u0072"
	case ST_FontCollectionIndexNone:
		_gacc.Value = "\u006e\u006f\u006e\u0065"
	}
	return _gacc, nil
}

// Validate validates the CT_GroupTransform2D and its children
func (_fgegf *CT_GroupTransform2D) Validate() error {
	return _fgegf.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044")
}
func NewCT_ShapeStyle() *CT_ShapeStyle {
	_baegc := &CT_ShapeStyle{}
	_baegc.LnRef = NewCT_StyleMatrixReference()
	_baegc.FillRef = NewCT_StyleMatrixReference()
	_baegc.EffectRef = NewCT_StyleMatrixReference()
	_baegc.FontRef = NewCT_FontReference()
	return _baegc
}
func (_dfafc *EG_TextRun) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dfafc.R != nil {
		_abagd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072"}}
		e.EncodeElement(_dfafc.R, _abagd)
	}
	if _dfafc.Br != nil {
		_caegg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0072"}}
		e.EncodeElement(_dfafc.Br, _caegg)
	}
	if _dfafc.Fld != nil {
		_affdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066l\u0064"}}
		e.EncodeElement(_dfafc.Fld, _affdg)
	}
	return nil
}

// Validate validates the CT_Ratio and its children
func (_adfb *CT_Ratio) Validate() error {
	return _adfb.ValidateWithPath("\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f")
}
func (_ebbfeg ST_PenAlignment) ValidateWithPath(path string) error {
	switch _ebbfeg {
	case 0, 1, 2:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ebbfeg))
	}
	return nil
}

type CT_QuickTimeFile struct {
	LinkAttr string
	ExtLst   *CT_OfficeArtExtensionList
}

func (_ffeefe *ST_BlipCompression) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ffeefe = 0
	case "\u0065\u006d\u0061i\u006c":
		*_ffeefe = 1
	case "\u0073\u0063\u0072\u0065\u0065\u006e":
		*_ffeefe = 2
	case "\u0070\u0072\u0069n\u0074":
		*_ffeefe = 3
	case "\u0068q\u0070\u0072\u0069\u006e\u0074":
		*_ffeefe = 4
	case "\u006e\u006f\u006e\u0065":
		*_ffeefe = 5
	}
	return nil
}
func (_abga *CT_ContentPartLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abga.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoGrpAttr))})
	}
	if _abga.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoSelectAttr))})
	}
	if _abga.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoRotAttr))})
	}
	if _abga.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoChangeAspectAttr))})
	}
	if _abga.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoMoveAttr))})
	}
	if _abga.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoResizeAttr))})
	}
	if _abga.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoEditPointsAttr))})
	}
	if _abga.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoAdjustHandlesAttr))})
	}
	if _abga.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoChangeArrowheadsAttr))})
	}
	if _abga.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_abga.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _abga.ExtLst != nil {
		_ecded := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abga.ExtLst, _ecded)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextAutonumberBullet and its children, prefixing error messages with path
func (_cebfff *CT_TextAutonumberBullet) ValidateWithPath(path string) error {
	if _cebfff.TypeAttr == ST_TextAutonumberSchemeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0054\u0079\u0070\u0065\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _ebacd := _cebfff.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _ebacd != nil {
		return _ebacd
	}
	if _cebfff.StartAtAttr != nil {
		if *_cebfff.StartAtAttr < 1 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074\u0061\u0072\u0074\u0041\u0074\u0041t\u0074\u0072\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0031\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_cebfff.StartAtAttr)
		}
		if *_cebfff.StartAtAttr > 32767 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0074a\u0072\u0074\u0041t\u0041\u0074\u0074\u0072 \u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0033\u0032\u0037\u0036\u0037\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_cebfff.StartAtAttr)
		}
	}
	return nil
}

// Validate validates the CT_ColorScheme and its children
func (_fefea *CT_ColorScheme) Validate() error {
	return _fefea.ValidateWithPath("\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065")
}
func NewCT_TextBulletTypefaceFollowText() *CT_TextBulletTypefaceFollowText {
	_cade := &CT_TextBulletTypefaceFollowText{}
	return _cade
}

type EG_Text3D struct {
	Sp3d   *CT_Shape3D
	FlatTx *CT_FlatText
}

func (_cabcb *ST_TextFontAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cabcb = 0
	case "\u0061\u0075\u0074\u006f":
		*_cabcb = 1
	case "\u0074":
		*_cabcb = 2
	case "\u0063\u0074\u0072":
		*_cabcb = 3
	case "\u0062\u0061\u0073\u0065":
		*_cabcb = 4
	case "\u0062":
		*_cabcb = 5
	}
	return nil
}

const (
	ST_TextVertOverflowTypeUnset    ST_TextVertOverflowType = 0
	ST_TextVertOverflowTypeOverflow ST_TextVertOverflowType = 1
	ST_TextVertOverflowTypeEllipsis ST_TextVertOverflowType = 2
	ST_TextVertOverflowTypeClip     ST_TextVertOverflowType = 3
)

func NewCT_RelativeRect() *CT_RelativeRect { _ebegc := &CT_RelativeRect{}; return _ebegc }
func (_fdebg *EG_Media) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ecbbab:
	for {
		_gbbae, _bgbba := d.Token()
		if _bgbba != nil {
			return _bgbba
		}
		switch _aegcd := _gbbae.(type) {
		case _d.StartElement:
			switch _aegcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0043\u0064"}:
				_fdebg.AudioCd = NewCT_AudioCD()
				if _fbcac := d.DecodeElement(_fdebg.AudioCd, &_aegcd); _fbcac != nil {
					return _fbcac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0077\u0061\u0076A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"}:
				_fdebg.WavAudioFile = NewCT_EmbeddedWAVAudioFile()
				if _abaegd := d.DecodeElement(_fdebg.WavAudioFile, &_aegcd); _abaegd != nil {
					return _abaegd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061u\u0064\u0069\u006f\u0046\u0069\u006ce"}:
				_fdebg.AudioFile = NewCT_AudioFile()
				if _eddde := d.DecodeElement(_fdebg.AudioFile, &_aegcd); _eddde != nil {
					return _eddde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce"}:
				_fdebg.VideoFile = NewCT_VideoFile()
				if _eaeaef := d.DecodeElement(_fdebg.VideoFile, &_aegcd); _eaeaef != nil {
					return _eaeaef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0071\u0075\u0069\u0063\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065"}:
				_fdebg.QuickTimeFile = NewCT_QuickTimeFile()
				if _gfdee := d.DecodeElement(_fdebg.QuickTimeFile, &_aegcd); _gfdee != nil {
					return _gfdee
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061\u0020\u0025\u0076", _aegcd.Name)
				if _acdgg := d.Skip(); _acdgg != nil {
					return _acdgg
				}
			}
		case _d.EndElement:
			break _ecbbab
		case _d.CharData:
		}
	}
	return nil
}

type CT_InverseTransform struct{}

func (_fddcd *CT_PresetColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_dagaf, _agfea := _fddcd.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _agfea != nil {
		return _agfea
	}
	start.Attr = append(start.Attr, _dagaf)
	e.EncodeToken(start)
	if _fddcd.EG_ColorTransform != nil {
		for _, _dagge := range _fddcd.EG_ColorTransform {
			_dagge.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Hyperlink() *CT_Hyperlink { _bfefc := &CT_Hyperlink{}; return _bfefc }
func (_gaced ST_TextStrikeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gbbccf := _d.Attr{}
	_gbbccf.Name = name
	switch _gaced {
	case ST_TextStrikeTypeUnset:
		_gbbccf.Value = ""
	case ST_TextStrikeTypeNoStrike:
		_gbbccf.Value = "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065"
	case ST_TextStrikeTypeSngStrike:
		_gbbccf.Value = "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be"
	case ST_TextStrikeTypeDblStrike:
		_gbbccf.Value = "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be"
	}
	return _gbbccf, nil
}
func (_dacbcc ST_TextShapeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gfebb := _d.Attr{}
	_gfebb.Name = name
	switch _dacbcc {
	case ST_TextShapeTypeUnset:
		_gfebb.Value = ""
	case ST_TextShapeTypeTextNoShape:
		_gfebb.Value = "t\u0065\u0078\u0074\u004e\u006f\u0053\u0068\u0061\u0070\u0065"
	case ST_TextShapeTypeTextPlain:
		_gfebb.Value = "\u0074e\u0078\u0074\u0050\u006c\u0061\u0069n"
	case ST_TextShapeTypeTextStop:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0053\u0074\u006f\u0070"
	case ST_TextShapeTypeTextTriangle:
		_gfebb.Value = "\u0074\u0065\u0078t\u0054\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_TextShapeTypeTextTriangleInverted:
		_gfebb.Value = "t\u0065x\u0074\u0054\u0072\u0069\u0061\u006e\u0067\u006ce\u0049\u006e\u0076\u0065rt\u0065\u0064"
	case ST_TextShapeTypeTextChevron:
		_gfebb.Value = "t\u0065\u0078\u0074\u0043\u0068\u0065\u0076\u0072\u006f\u006e"
	case ST_TextShapeTypeTextChevronInverted:
		_gfebb.Value = "\u0074\u0065\u0078\u0074Ch\u0065\u0076\u0072\u006f\u006e\u0049\u006e\u0076\u0065\u0072\u0074\u0065\u0064"
	case ST_TextShapeTypeTextRingInside:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0052\u0069\u006e\u0067\u0049n\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextRingOutside:
		_gfebb.Value = "\u0074e\u0078t\u0052\u0069\u006e\u0067\u004f\u0075\u0074\u0073\u0069\u0064\u0065"
	case ST_TextShapeTypeTextArchUp:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055\u0070"
	case ST_TextShapeTypeTextArchDown:
		_gfebb.Value = "\u0074\u0065\u0078t\u0041\u0072\u0063\u0068\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCircle:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006c\u0065"
	case ST_TextShapeTypeTextButton:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006f\u006e"
	case ST_TextShapeTypeTextArchUpPour:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0041\u0072\u0063\u0068\u0055p\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextArchDownPour:
		_gfebb.Value = "\u0074\u0065x\u0074\u0041\u0072c\u0068\u0044\u006f\u0077\u006e\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCirclePour:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0043\u0069\u0072\u0063\u006ce\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextButtonPour:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0042\u0075\u0074\u0074\u006fn\u0050\u006f\u0075\u0072"
	case ST_TextShapeTypeTextCurveUp:
		_gfebb.Value = "t\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCurveDown:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0043\u0075\u0072\u0076\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCanUp:
		_gfebb.Value = "\u0074e\u0078\u0074\u0043\u0061\u006e\u0055p"
	case ST_TextShapeTypeTextCanDown:
		_gfebb.Value = "t\u0065\u0078\u0074\u0043\u0061\u006e\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextWave1:
		_gfebb.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00651"
	case ST_TextShapeTypeTextWave2:
		_gfebb.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00652"
	case ST_TextShapeTypeTextDoubleWave1:
		_gfebb.Value = "\u0074e\u0078t\u0044\u006f\u0075\u0062\u006c\u0065\u0057\u0061\u0076\u0065\u0031"
	case ST_TextShapeTypeTextWave4:
		_gfebb.Value = "\u0074e\u0078\u0074\u0057\u0061\u0076\u00654"
	case ST_TextShapeTypeTextInflate:
		_gfebb.Value = "t\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflate:
		_gfebb.Value = "t\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextInflateBottom:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextDeflateBottom:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061\u0074\u0065\u0042o\u0074\u0074\u006f\u006d"
	case ST_TextShapeTypeTextInflateTop:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0049\u006e\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateTop:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0044\u0065\u0066\u006c\u0061t\u0065\u0054\u006f\u0070"
	case ST_TextShapeTypeTextDeflateInflate:
		_gfebb.Value = "\u0074e\u0078t\u0044\u0065\u0066\u006c\u0061t\u0065\u0049n\u0066\u006c\u0061\u0074\u0065"
	case ST_TextShapeTypeTextDeflateInflateDeflate:
		_gfebb.Value = "\u0074e\u0078\u0074\u0044\u0065f\u006c\u0061\u0074\u0065\u0049n\u0066l\u0061t\u0065\u0044\u0065\u0066\u006c\u0061\u0074e"
	case ST_TextShapeTypeTextFadeRight:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0052\u0069\u0067\u0068\u0074"
	case ST_TextShapeTypeTextFadeLeft:
		_gfebb.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u004c\u0065\u0066\u0074"
	case ST_TextShapeTypeTextFadeUp:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0046\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextFadeDown:
		_gfebb.Value = "\u0074\u0065\u0078t\u0046\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextSlantUp:
		_gfebb.Value = "t\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0055\u0070"
	case ST_TextShapeTypeTextSlantDown:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0053\u006c\u0061\u006e\u0074\u0044\u006f\u0077\u006e"
	case ST_TextShapeTypeTextCascadeUp:
		_gfebb.Value = "\u0074\u0065\u0078\u0074\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0055\u0070"
	case ST_TextShapeTypeTextCascadeDown:
		_gfebb.Value = "\u0074e\u0078t\u0043\u0061\u0073\u0063\u0061\u0064\u0065\u0044\u006f\u0077\u006e"
	}
	return _gfebb, nil
}
func (_bfagg *TblStyleLst) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfagg.CT_TableStyleList = *NewCT_TableStyleList()
	for _, _cfbfdf := range start.Attr {
		if _cfbfdf.Name.Local == "\u0064\u0065\u0066" {
			_fdbdb, _egfgd := _cfbfdf.Value, error(nil)
			if _egfgd != nil {
				return _egfgd
			}
			_bfagg.DefAttr = _fdbdb
			continue
		}
	}
_bbdfa:
	for {
		_fdegf, _cbfd := d.Token()
		if _cbfd != nil {
			return _cbfd
		}
		switch _ffcgg := _fdegf.(type) {
		case _d.StartElement:
			switch _ffcgg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}:
				_bfbde := NewCT_TableStyle()
				if _bdcef := d.DecodeElement(_bfbde, &_ffcgg); _bdcef != nil {
					return _bdcef
				}
				_bfagg.TblStyle = append(_bfagg.TblStyle, _bfbde)
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0054\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074\u0020\u0025\u0076", _ffcgg.Name)
				if _afdca := d.Skip(); _afdca != nil {
					return _afdca
				}
			}
		case _d.EndElement:
			break _bbdfa
		case _d.CharData:
		}
	}
	return nil
}

type CT_SystemColor struct {
	ValAttr           ST_SystemColorVal
	LastClrAttr       *string
	EG_ColorTransform []*EG_ColorTransform
}

func (_ddgaa *ST_TextFontAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gaddd, _eaecd := d.Token()
	if _eaecd != nil {
		return _eaecd
	}
	if _gaefcb, _eacfb := _gaddd.(_d.EndElement); _eacfb && _gaefcb.Name == start.Name {
		*_ddgaa = 1
		return nil
	}
	if _fgbbd, _daegd := _gaddd.(_d.CharData); !_daegd {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gaddd)
	} else {
		switch string(_fgbbd) {
		case "":
			*_ddgaa = 0
		case "\u0061\u0075\u0074\u006f":
			*_ddgaa = 1
		case "\u0074":
			*_ddgaa = 2
		case "\u0063\u0074\u0072":
			*_ddgaa = 3
		case "\u0062\u0061\u0073\u0065":
			*_ddgaa = 4
		case "\u0062":
			*_ddgaa = 5
		}
	}
	_gaddd, _eaecd = d.Token()
	if _eaecd != nil {
		return _eaecd
	}
	if _begega, _fdbdc := _gaddd.(_d.EndElement); _fdbdc && _begega.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gaddd)
}

// ValidateWithPath validates the CT_BackgroundFillStyleList and its children, prefixing error messages with path
func (_daeb *CT_BackgroundFillStyleList) ValidateWithPath(path string) error {
	for _bgea, _cbga := range _daeb.EG_FillProperties {
		if _cbgaa := _cbga.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073\u005b\u0025\u0064\u005d", path, _bgea)); _cbgaa != nil {
			return _cbgaa
		}
	}
	return nil
}
func NewCT_LineJoinBevel() *CT_LineJoinBevel   { _cace := &CT_LineJoinBevel{}; return _cace }
func NewEG_ColorTransform() *EG_ColorTransform { _adcgd := &EG_ColorTransform{}; return _adcgd }

type CT_EffectProperties struct {
	EffectLst *CT_EffectList
	EffectDag *CT_EffectContainer
}

func (_dfagc ST_BevelPresetType) ValidateWithPath(path string) error {
	switch _dfagc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_dfagc))
	}
	return nil
}
func NewTbl() *Tbl { _bdgeb := &Tbl{}; _bdgeb.CT_Table = *NewCT_Table(); return _bdgeb }

// Validate validates the EG_LineFillProperties and its children
func (_dgddg *EG_LineFillProperties) Validate() error {
	return _dgddg.ValidateWithPath("E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_daedd *ST_PositivePercentage) Validate() error { return _daedd.ValidateWithPath("") }
func (_edgda ST_TextTabAlignType) String() string {
	switch _edgda {
	case 0:
		return ""
	case 1:
		return "\u006c"
	case 2:
		return "\u0063\u0074\u0072"
	case 3:
		return "\u0072"
	case 4:
		return "\u0064\u0065\u0063"
	}
	return ""
}
func (_cadfcf *ST_AnimationDgmOnlyBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcfbg, _cefgc := d.Token()
	if _cefgc != nil {
		return _cefgc
	}
	if _gefgef, _aegce := _bcfbg.(_d.EndElement); _aegce && _gefgef.Name == start.Name {
		*_cadfcf = 1
		return nil
	}
	if _bccda, _gebae := _bcfbg.(_d.CharData); !_gebae {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcfbg)
	} else {
		switch string(_bccda) {
		case "":
			*_cadfcf = 0
		case "\u006f\u006e\u0065":
			*_cadfcf = 1
		case "\u006c\u0076\u006c\u004f\u006e\u0065":
			*_cadfcf = 2
		case "\u006cv\u006c\u0041\u0074\u004f\u006e\u0063e":
			*_cadfcf = 3
		}
	}
	_bcfbg, _cefgc = d.Token()
	if _cefgc != nil {
		return _cefgc
	}
	if _bcgd, _fcgdf := _bcfbg.(_d.EndElement); _fcgdf && _bcgd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcfbg)
}

// ValidateWithPath validates the CT_GroupFillProperties and its children, prefixing error messages with path
func (_ccdab *CT_GroupFillProperties) ValidateWithPath(path string) error { return nil }
func (_dfdc *CT_GeomRect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dabf := range start.Attr {
		if _dabf.Name.Local == "\u006c" {
			_ecee, _abaec := ParseUnionST_AdjCoordinate(_dabf.Value)
			if _abaec != nil {
				return _abaec
			}
			_dfdc.LAttr = _ecee
			continue
		}
		if _dabf.Name.Local == "\u0074" {
			_ceff, _aegac := ParseUnionST_AdjCoordinate(_dabf.Value)
			if _aegac != nil {
				return _aegac
			}
			_dfdc.TAttr = _ceff
			continue
		}
		if _dabf.Name.Local == "\u0072" {
			_dbdga, _gcac := ParseUnionST_AdjCoordinate(_dabf.Value)
			if _gcac != nil {
				return _gcac
			}
			_dfdc.RAttr = _dbdga
			continue
		}
		if _dabf.Name.Local == "\u0062" {
			_ecda, _ddedb := ParseUnionST_AdjCoordinate(_dabf.Value)
			if _ddedb != nil {
				return _ddedb
			}
			_dfdc.BAttr = _ecda
			continue
		}
	}
	for {
		_effcc, _cgba := d.Token()
		if _cgba != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _cgba)
		}
		if _ebea, _bcgbd := _effcc.(_d.EndElement); _bcgbd && _ebea.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_Path2D and its children
func (_efaaa *CT_Path2D) Validate() error {
	return _efaaa.ValidateWithPath("\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D")
}
func (_aae *AG_Locking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fae := range start.Attr {
		if _fae.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_gd, _ce := _cd.ParseBool(_fae.Value)
			if _ce != nil {
				return _ce
			}
			_aae.NoGrpAttr = &_gd
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_ffd, _cf := _cd.ParseBool(_fae.Value)
			if _cf != nil {
				return _cf
			}
			_aae.NoSelectAttr = &_ffd
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_da, _de := _cd.ParseBool(_fae.Value)
			if _de != nil {
				return _de
			}
			_aae.NoRotAttr = &_da
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_af, _b := _cd.ParseBool(_fae.Value)
			if _b != nil {
				return _b
			}
			_aae.NoChangeAspectAttr = &_af
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_agc, _ggb := _cd.ParseBool(_fae.Value)
			if _ggb != nil {
				return _ggb
			}
			_aae.NoMoveAttr = &_agc
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_fbg, _bc := _cd.ParseBool(_fae.Value)
			if _bc != nil {
				return _bc
			}
			_aae.NoResizeAttr = &_fbg
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_db, _ac := _cd.ParseBool(_fae.Value)
			if _ac != nil {
				return _ac
			}
			_aae.NoEditPointsAttr = &_db
			continue
		}
		if _fae.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_dbb, _cfd := _cd.ParseBool(_fae.Value)
			if _cfd != nil {
				return _cfd
			}
			_aae.NoAdjustHandlesAttr = &_dbb
			continue
		}
		if _fae.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_afa, _ga := _cd.ParseBool(_fae.Value)
			if _ga != nil {
				return _ga
			}
			_aae.NoChangeArrowheadsAttr = &_afa
			continue
		}
		if _fae.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_ed, _aeg := _cd.ParseBool(_fae.Value)
			if _aeg != nil {
				return _aeg
			}
			_aae.NoChangeShapeTypeAttr = &_ed
			continue
		}
	}
	for {
		_ef, _dfa := d.Token()
		if _dfa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u003a\u0020%\u0073", _dfa)
		}
		if _aegd, _ebf := _ef.(_d.EndElement); _ebf && _aegd.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_CustomColor and its children, prefixing error messages with path
func (_bcef *CT_CustomColor) ValidateWithPath(path string) error {
	if _bcef.ScrgbClr != nil {
		if _cagf := _bcef.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _cagf != nil {
			return _cagf
		}
	}
	if _bcef.SrgbClr != nil {
		if _efbd := _bcef.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _efbd != nil {
			return _efbd
		}
	}
	if _bcef.HslClr != nil {
		if _aeadd := _bcef.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _aeadd != nil {
			return _aeadd
		}
	}
	if _bcef.SysClr != nil {
		if _baef := _bcef.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _baef != nil {
			return _baef
		}
	}
	if _bcef.SchemeClr != nil {
		if _ggeb := _bcef.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ggeb != nil {
			return _ggeb
		}
	}
	if _bcef.PrstClr != nil {
		if _ebcf := _bcef.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ebcf != nil {
			return _ebcf
		}
	}
	return nil
}
func (_ggbfe *ST_BevelPresetType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ggbfe = 0
	case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
		*_ggbfe = 1
	case "\u0063\u0069\u0072\u0063\u006c\u0065":
		*_ggbfe = 2
	case "\u0073\u006c\u006fp\u0065":
		*_ggbfe = 3
	case "\u0063\u0072\u006fs\u0073":
		*_ggbfe = 4
	case "\u0061\u006e\u0067l\u0065":
		*_ggbfe = 5
	case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
		*_ggbfe = 6
	case "\u0063\u006f\u006e\u0076\u0065\u0078":
		*_ggbfe = 7
	case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
		*_ggbfe = 8
	case "\u0064\u0069\u0076o\u0074":
		*_ggbfe = 9
	case "\u0072\u0069\u0062\u006c\u0065\u0074":
		*_ggbfe = 10
	case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
		*_ggbfe = 11
	case "\u0061r\u0074\u0044\u0065\u0063\u006f":
		*_ggbfe = 12
	}
	return nil
}
func (_cfbfe *ST_TextCapsType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_aabbd, _baffb := d.Token()
	if _baffb != nil {
		return _baffb
	}
	if _gaeadb, _dfeefb := _aabbd.(_d.EndElement); _dfeefb && _gaeadb.Name == start.Name {
		*_cfbfe = 1
		return nil
	}
	if _dfcdbb, _aefab := _aabbd.(_d.CharData); !_aefab {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _aabbd)
	} else {
		switch string(_dfcdbb) {
		case "":
			*_cfbfe = 0
		case "\u006e\u006f\u006e\u0065":
			*_cfbfe = 1
		case "\u0073\u006d\u0061l\u006c":
			*_cfbfe = 2
		case "\u0061\u006c\u006c":
			*_cfbfe = 3
		}
	}
	_aabbd, _baffb = d.Token()
	if _baffb != nil {
		return _baffb
	}
	if _dgbaa, _dfgb := _aabbd.(_d.EndElement); _dfgb && _dgbaa.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _aabbd)
}
func NewCT_FlatText() *CT_FlatText   { _gfbb := &CT_FlatText{}; return _gfbb }
func NewCT_VideoFile() *CT_VideoFile { _gdddb := &CT_VideoFile{}; return _gdddb }

// Validate validates the CT_AlphaReplaceEffect and its children
func (_bcga *CT_AlphaReplaceEffect) Validate() error {
	return _bcga.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_gdcd *EG_FillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ceecf:
	for {
		_dcccg, _effgg := d.Token()
		if _effgg != nil {
			return _effgg
		}
		switch _efegdd := _dcccg.(type) {
		case _d.StartElement:
			switch _efegdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_gdcd.NoFill = NewCT_NoFillProperties()
				if _dcae := d.DecodeElement(_gdcd.NoFill, &_efegdd); _dcae != nil {
					return _dcae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_gdcd.SolidFill = NewCT_SolidColorFillProperties()
				if _gdfcf := d.DecodeElement(_gdcd.SolidFill, &_efegdd); _gdfcf != nil {
					return _gdfcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gdcd.GradFill = NewCT_GradientFillProperties()
				if _ccfdg := d.DecodeElement(_gdcd.GradFill, &_efegdd); _ccfdg != nil {
					return _ccfdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gdcd.BlipFill = NewCT_BlipFillProperties()
				if _adega := d.DecodeElement(_gdcd.BlipFill, &_efegdd); _adega != nil {
					return _adega
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gdcd.PattFill = NewCT_PatternFillProperties()
				if _cgced := d.DecodeElement(_gdcd.PattFill, &_efegdd); _cgced != nil {
					return _cgced
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gdcd.GrpFill = NewCT_GroupFillProperties()
				if _dcddg := d.DecodeElement(_gdcd.GrpFill, &_efegdd); _dcddg != nil {
					return _dcddg
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _efegdd.Name)
				if _fgfda := d.Skip(); _fgfda != nil {
					return _fgfda
				}
			}
		case _d.EndElement:
			break _ceecf
		case _d.CharData:
		}
	}
	return nil
}

type VideoFile struct{ CT_VideoFile }
type CT_TextShapeAutofit struct{}

func (_cdfdf ST_LineEndType) Validate() error { return _cdfdf.ValidateWithPath("") }

type CT_Hyperlink struct {
	IdAttr             *string
	InvalidUrlAttr     *string
	ActionAttr         *string
	TgtFrameAttr       *string
	TooltipAttr        *string
	HistoryAttr        *bool
	HighlightClickAttr *bool
	EndSndAttr         *bool
	Snd                *CT_EmbeddedWAVAudioFile
	ExtLst             *CT_OfficeArtExtensionList
}

// Validate validates the CT_AlphaOutsetEffect and its children
func (_gaa *CT_AlphaOutsetEffect) Validate() error {
	return _gaa.ValidateWithPath("C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074")
}

type ST_TextShapeType byte

// Validate validates the CT_PresetGeometry2D and its children
func (_feda *CT_PresetGeometry2D) Validate() error {
	return _feda.ValidateWithPath("\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044")
}
func NewCT_TextCharacterProperties() *CT_TextCharacterProperties {
	_agdgf := &CT_TextCharacterProperties{}
	return _agdgf
}
func (_feabf ST_EffectContainerType) String() string {
	switch _feabf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0069\u0062"
	case 2:
		return "\u0074\u0072\u0065\u0065"
	}
	return ""
}
func NewCT_SolidColorFillProperties() *CT_SolidColorFillProperties {
	_feadc := &CT_SolidColorFillProperties{}
	return _feadc
}
func (_ddagg *CT_ConnectionSite) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", _ddagg.AngAttr)})
	e.EncodeToken(start)
	_cffa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070o\u0073"}}
	e.EncodeElement(_ddagg.Pos, _cffa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_TextAutofit struct {
	NoAutofit   *CT_TextNoAutofit
	NormAutofit *CT_TextNormalAutofit
	SpAutoFit   *CT_TextShapeAutofit
}

func (_cegfbb *CT_Scene3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eccbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0061\u006d\u0065\u0072\u0061"}}
	e.EncodeElement(_cegfbb.Camera, _eccbf)
	_fecce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}}
	e.EncodeElement(_cegfbb.LightRig, _fecce)
	if _cegfbb.Backdrop != nil {
		_dddde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0061\u0063\u006b\u0064\u0072\u006f\u0070"}}
		e.EncodeElement(_cegfbb.Backdrop, _dddde)
	}
	if _cegfbb.ExtLst != nil {
		_cedec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cegfbb.ExtLst, _cedec)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eecbd *ST_SchemeColorVal) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eecbd = 0
	case "\u0062\u0067\u0031":
		*_eecbd = 1
	case "\u0074\u0078\u0031":
		*_eecbd = 2
	case "\u0062\u0067\u0032":
		*_eecbd = 3
	case "\u0074\u0078\u0032":
		*_eecbd = 4
	case "\u0061c\u0063\u0065\u006e\u0074\u0031":
		*_eecbd = 5
	case "\u0061c\u0063\u0065\u006e\u0074\u0032":
		*_eecbd = 6
	case "\u0061c\u0063\u0065\u006e\u0074\u0033":
		*_eecbd = 7
	case "\u0061c\u0063\u0065\u006e\u0074\u0034":
		*_eecbd = 8
	case "\u0061c\u0063\u0065\u006e\u0074\u0035":
		*_eecbd = 9
	case "\u0061c\u0063\u0065\u006e\u0074\u0036":
		*_eecbd = 10
	case "\u0068\u006c\u0069n\u006b":
		*_eecbd = 11
	case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
		*_eecbd = 12
	case "\u0070\u0068\u0043l\u0072":
		*_eecbd = 13
	case "\u0064\u006b\u0031":
		*_eecbd = 14
	case "\u006c\u0074\u0031":
		*_eecbd = 15
	case "\u0064\u006b\u0032":
		*_eecbd = 16
	case "\u006c\u0074\u0032":
		*_eecbd = 17
	}
	return nil
}
func (_bcca *CT_AudioFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _e.Sprintf("\u0025\u0076", _bcca.LinkAttr)})
	if _bcca.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_bcca.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _bcca.ExtLst != nil {
		_bdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bcca.ExtLst, _bdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_ecf *CT_AlphaBiLevelEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0068\u0072\u0065\u0073\u0068"}, Value: _e.Sprintf("\u0025\u0076", _ecf.ThreshAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fdfgd ST_BevelPresetType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fdfgd.String(), start)
}
func (_cdccbf ST_CompoundLine) ValidateWithPath(path string) error {
	switch _cdccbf {
	case 0, 1, 2, 3, 4, 5:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cdccbf))
	}
	return nil
}
func NewCT_InverseTransform() *CT_InverseTransform { _bdabe := &CT_InverseTransform{}; return _bdabe }
func NewEG_TextBulletSize() *EG_TextBulletSize     { _bbgae := &EG_TextBulletSize{}; return _bbgae }
func (_eabee *CT_NonVisualGroupDrawingShapeProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _eabee.GrpSpLocks != nil {
		_fbfba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067r\u0070\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_eabee.GrpSpLocks, _fbfba)
	}
	if _eabee.ExtLst != nil {
		_fedgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eabee.ExtLst, _fedgd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgdg *CT_GvmlPicture) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bgdg.NvPicPr = NewCT_GvmlPictureNonVisual()
	_bgdg.BlipFill = NewCT_BlipFillProperties()
	_bgdg.SpPr = NewCT_ShapeProperties()
_fdge:
	for {
		_acec, _bbdd := d.Token()
		if _bbdd != nil {
			return _bbdd
		}
		switch _agfd := _acec.(type) {
		case _d.StartElement:
			switch _agfd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0050\u0069\u0063\u0050\u0072"}:
				if _fcea := d.DecodeElement(_bgdg.NvPicPr, &_agfd); _fcea != nil {
					return _fcea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				if _cbde := d.DecodeElement(_bgdg.BlipFill, &_agfd); _cbde != nil {
					return _cbde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _effge := d.DecodeElement(_bgdg.SpPr, &_agfd); _effge != nil {
					return _effge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_bgdg.Style = NewCT_ShapeStyle()
				if _gedeg := d.DecodeElement(_bgdg.Style, &_agfd); _gedeg != nil {
					return _gedeg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bgdg.ExtLst = NewCT_OfficeArtExtensionList()
				if _gbge := d.DecodeElement(_bgdg.ExtLst, &_agfd); _gbge != nil {
					return _gbge
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069\u0063t\u0075r\u0065\u0020\u0025\u0076", _agfd.Name)
				if _geaaa := d.Skip(); _geaaa != nil {
					return _geaaa
				}
			}
		case _d.EndElement:
			break _fdge
		case _d.CharData:
		}
	}
	return nil
}
func (_ceeaa ST_TextStrikeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ceeaa.String(), start)
}
func NewCT_EffectContainer() *CT_EffectContainer { _gfebd := &CT_EffectContainer{}; return _gfebd }
func (_fgffc ST_SchemeColorVal) ValidateWithPath(path string) error {
	switch _fgffc {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_fgffc))
	}
	return nil
}
func (_cecgf *CT_OuterShadowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cecgf.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.BlurRadAttr)})
	}
	if _cecgf.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.DistAttr)})
	}
	if _cecgf.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.DirAttr)})
	}
	if _cecgf.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.SxAttr)})
	}
	if _cecgf.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.SyAttr)})
	}
	if _cecgf.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.KxAttr)})
	}
	if _cecgf.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_cecgf.KyAttr)})
	}
	if _cecgf.AlgnAttr != ST_RectAlignmentUnset {
		_bbda, _ggafb := _cecgf.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ggafb != nil {
			return _ggafb
		}
		start.Attr = append(start.Attr, _bbda)
	}
	if _cecgf.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_cecgf.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	if _cecgf.ScrgbClr != nil {
		_gedee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_cecgf.ScrgbClr, _gedee)
	}
	if _cecgf.SrgbClr != nil {
		_gcacc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_cecgf.SrgbClr, _gcacc)
	}
	if _cecgf.HslClr != nil {
		_eabc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_cecgf.HslClr, _eabc)
	}
	if _cecgf.SysClr != nil {
		_baeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_cecgf.SysClr, _baeb)
	}
	if _cecgf.SchemeClr != nil {
		_bgecf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_cecgf.SchemeClr, _bgecf)
	}
	if _cecgf.PrstClr != nil {
		_cggfc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_cecgf.PrstClr, _cggfc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_BackgroundFormatting and its children, prefixing error messages with path
func (_baag *CT_BackgroundFormatting) ValidateWithPath(path string) error {
	if _baag.NoFill != nil {
		if _eac := _baag.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _eac != nil {
			return _eac
		}
	}
	if _baag.SolidFill != nil {
		if _aef := _baag.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _aef != nil {
			return _aef
		}
	}
	if _baag.GradFill != nil {
		if _ddae := _baag.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _ddae != nil {
			return _ddae
		}
	}
	if _baag.BlipFill != nil {
		if _dacb := _baag.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _dacb != nil {
			return _dacb
		}
	}
	if _baag.PattFill != nil {
		if _edb := _baag.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _edb != nil {
			return _edb
		}
	}
	if _baag.GrpFill != nil {
		if _dddb := _baag.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _dddb != nil {
			return _dddb
		}
	}
	if _baag.EffectLst != nil {
		if _gacg := _baag.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _gacg != nil {
			return _gacg
		}
	}
	if _baag.EffectDag != nil {
		if _cde := _baag.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _cde != nil {
			return _cde
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Color and its children, prefixing error messages with path
func (_ede *CT_Color) ValidateWithPath(path string) error {
	if _ede.ScrgbClr != nil {
		if _gec := _ede.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gec != nil {
			return _gec
		}
	}
	if _ede.SrgbClr != nil {
		if _gccb := _ede.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _gccb != nil {
			return _gccb
		}
	}
	if _ede.HslClr != nil {
		if _gcgc := _ede.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gcgc != nil {
			return _gcgc
		}
	}
	if _ede.SysClr != nil {
		if _ddc := _ede.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _ddc != nil {
			return _ddc
		}
	}
	if _ede.SchemeClr != nil {
		if _ggfeb := _ede.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _ggfeb != nil {
			return _ggfeb
		}
	}
	if _ede.PrstClr != nil {
		if _ffdb := _ede.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ffdb != nil {
			return _ffdb
		}
	}
	return nil
}
func (_fedea *CT_GraphicalObject) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fedea.GraphicData = NewCT_GraphicalObjectData()
_fadaf:
	for {
		_dada, _dade := d.Token()
		if _dade != nil {
			return _dade
		}
		switch _faef := _dada.(type) {
		case _d.StartElement:
			switch _faef.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "g\u0072\u0061\u0070\u0068\u0069\u0063\u0044\u0061\u0074\u0061"}:
				if _gdgfd := d.DecodeElement(_fedea.GraphicData, &_faef); _gdgfd != nil {
					return _gdgfd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069c\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076", _faef.Name)
				if _ddfd := d.Skip(); _ddfd != nil {
					return _ddfd
				}
			}
		case _d.EndElement:
			break _fadaf
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_TextUnderlineFillGroupWrapper and its children
func (_dfceg *CT_TextUnderlineFillGroupWrapper) Validate() error {
	return _dfceg.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072")
}
func (_edece *EG_TextBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_beecae:
	for {
		_adbg, _fafga := d.Token()
		if _fafga != nil {
			return _fafga
		}
		switch _bgccc := _adbg.(type) {
		case _d.StartElement:
			switch _bgccc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u004e\u006f\u006e\u0065"}:
				_edece.BuNone = NewCT_TextNoBullet()
				if _afabdc := d.DecodeElement(_edece.BuNone, &_bgccc); _afabdc != nil {
					return _afabdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0041\u0075\u0074\u006f\u004e\u0075m"}:
				_edece.BuAutoNum = NewCT_TextAutonumberBullet()
				if _aagcg := d.DecodeElement(_edece.BuAutoNum, &_bgccc); _aagcg != nil {
					return _aagcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0043\u0068\u0061\u0072"}:
				_edece.BuChar = NewCT_TextCharBullet()
				if _eceedd := d.DecodeElement(_edece.BuChar, &_bgccc); _eceedd != nil {
					return _eceedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0042\u006c\u0069\u0070"}:
				_edece.BuBlip = NewCT_TextBlipBullet()
				if _cgcab := d.DecodeElement(_edece.BuBlip, &_bgccc); _cgcab != nil {
					return _cgcab
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074 \u0025\u0076", _bgccc.Name)
				if _bgabc := d.Skip(); _bgabc != nil {
					return _bgabc
				}
			}
		case _d.EndElement:
			break _beecae
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BaseStylesOverride and its children, prefixing error messages with path
func (_ddb *CT_BaseStylesOverride) ValidateWithPath(path string) error {
	if _ddb.ClrScheme != nil {
		if _gadfce := _ddb.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _gadfce != nil {
			return _gadfce
		}
	}
	if _ddb.FontScheme != nil {
		if _caa := _ddb.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _caa != nil {
			return _caa
		}
	}
	if _ddb.FmtScheme != nil {
		if _gdc := _ddb.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _gdc != nil {
			return _gdc
		}
	}
	return nil
}
func (_bdcbd ST_PresetCameraType) Validate() error { return _bdcbd.ValidateWithPath("") }
func (_ffged ST_OnOffStyleType) String() string {
	switch _ffged {
	case 0:
		return ""
	case 1:
		return "\u006f\u006e"
	case 2:
		return "\u006f\u0066\u0066"
	case 3:
		return "\u0064\u0065\u0066"
	}
	return ""
}

// ValidateWithPath validates the CT_RegularTextRun and its children, prefixing error messages with path
func (_bcbcg *CT_RegularTextRun) ValidateWithPath(path string) error {
	if _bcbcg.RPr != nil {
		if _dgefa := _bcbcg.RPr.ValidateWithPath(path + "\u002f\u0052\u0050\u0072"); _dgefa != nil {
			return _dgefa
		}
	}
	return nil
}

type CT_FontScheme struct {
	NameAttr  string
	MajorFont *CT_FontCollection
	MinorFont *CT_FontCollection
	ExtLst    *CT_OfficeArtExtensionList
}

func (_ccg *CT_AlphaOutsetEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _aad := range start.Attr {
		if _aad.Name.Local == "\u0072\u0061\u0064" {
			_bfb, _ccfg := ParseUnionST_Coordinate(_aad.Value)
			if _ccfg != nil {
				return _ccfg
			}
			_ccg.RadAttr = &_bfb
			continue
		}
	}
	for {
		_cgcf, _gbde := d.Token()
		if _gbde != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006c\u0070\u0068a\u004fu\u0074\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gbde)
		}
		if _cbc, _aeb := _cgcf.(_d.EndElement); _aeb && _cbc.Name == start.Name {
			break
		}
	}
	return nil
}

type AG_Locking struct {
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

// ValidateWithPath validates the CT_AnimationDgmBuildProperties and its children, prefixing error messages with path
func (_dag *CT_AnimationDgmBuildProperties) ValidateWithPath(path string) error {
	if _dag.BldAttr != nil {
		if _afb := _dag.BldAttr.ValidateWithPath(path + "\u002f\u0042\u006c\u0064\u0041\u0074\u0074\u0072"); _afb != nil {
			return _afb
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GradientStopList and its children, prefixing error messages with path
func (_ebccb *CT_GradientStopList) ValidateWithPath(path string) error {
	for _fdabd, _ccbc := range _ebccb.Gs {
		if _ggcf := _ccbc.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0047\u0073\u005b\u0025\u0064]", path, _fdabd)); _ggcf != nil {
			return _ggcf
		}
	}
	return nil
}
func (_fbgbb ST_LineEndWidth) String() string {
	switch _fbgbb {
	case 0:
		return ""
	case 1:
		return "\u0073\u006d"
	case 2:
		return "\u006d\u0065\u0064"
	case 3:
		return "\u006c\u0067"
	}
	return ""
}
func (_aaaga ST_AnimationDgmOnlyBuildType) ValidateWithPath(path string) error {
	switch _aaaga {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_aaaga))
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaModulateEffect and its children, prefixing error messages with path
func (_fdb *CT_AlphaModulateEffect) ValidateWithPath(path string) error {
	if _cdcc := _fdb.Cont.ValidateWithPath(path + "\u002f\u0043\u006fn\u0074"); _cdcc != nil {
		return _cdcc
	}
	return nil
}
func (_afdadc ST_EffectContainerType) ValidateWithPath(path string) error {
	switch _afdadc {
	case 0, 1, 2:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_afdadc))
	}
	return nil
}

// Validate validates the Theme and its children
func (_dbegc *Theme) Validate() error { return _dbegc.ValidateWithPath("\u0054\u0068\u0065m\u0065") }
func NewCT_Vector3D() *CT_Vector3D    { _cbcdcb := &CT_Vector3D{}; return _cbcdcb }
func (_ag *AG_Blob) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fa := range start.Attr {
		if _fa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fa.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_aa, _ae := _fa.Value, error(nil)
			if _ae != nil {
				return _ae
			}
			_ag.EmbedAttr = &_aa
			continue
		}
		if _fa.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fa.Name.Local == "\u006c\u0069\u006e\u006b" {
			_dg, _ad := _fa.Value, error(nil)
			if _ad != nil {
				return _ad
			}
			_ag.LinkAttr = &_dg
			continue
		}
	}
	for {
		_fag, _aaa := d.Token()
		if _aaa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0041\u0047\u005f\u0042\u006c\u006f\u0062\u003a\u0020\u0025\u0073", _aaa)
		}
		if _eb, _g := _fag.(_d.EndElement); _g && _eb.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ccdcd ST_TextVertOverflowType) ValidateWithPath(path string) error {
	switch _ccdcd {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccdcd))
	}
	return nil
}

type CT_ConnectorLocking struct {
	ExtLst                 *CT_OfficeArtExtensionList
	NoGrpAttr              *bool
	NoSelectAttr           *bool
	NoRotAttr              *bool
	NoChangeAspectAttr     *bool
	NoMoveAttr             *bool
	NoResizeAttr           *bool
	NoEditPointsAttr       *bool
	NoAdjustHandlesAttr    *bool
	NoChangeArrowheadsAttr *bool
	NoChangeShapeTypeAttr  *bool
}

func NewCT_GroupTransform2D() *CT_GroupTransform2D { _cdbbf := &CT_GroupTransform2D{}; return _cdbbf }

// Validate validates the CT_EffectProperties and its children
func (_dcggc *CT_EffectProperties) Validate() error {
	return _dcggc.ValidateWithPath("\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_ecge *CT_AudioCD) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecge.St = NewCT_AudioCDTime()
	_ecge.End = NewCT_AudioCDTime()
_fcdc:
	for {
		_aegf, _aaf := d.Token()
		if _aaf != nil {
			return _aaf
		}
		switch _dgdd := _aegf.(type) {
		case _d.StartElement:
			switch _dgdd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074"}:
				if _dfb := d.DecodeElement(_ecge.St, &_dgdd); _dfb != nil {
					return _dfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064"}:
				if _abc := d.DecodeElement(_ecge.End, &_dgdd); _abc != nil {
					return _abc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ecge.ExtLst = NewCT_OfficeArtExtensionList()
				if _gfe := d.DecodeElement(_ecge.ExtLst, &_dgdd); _gfe != nil {
					return _gfe
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006ce\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0020\u0025\u0076", _dgdd.Name)
				if _deb := d.Skip(); _deb != nil {
					return _deb
				}
			}
		case _d.EndElement:
			break _fcdc
		case _d.CharData:
		}
	}
	return nil
}

type CT_ComplementTransform struct{}

func (_dbdg *CT_CustomGeometry2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dbdg.AvLst != nil {
		_caaeb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0076\u004c\u0073\u0074"}}
		e.EncodeElement(_dbdg.AvLst, _caaeb)
	}
	if _dbdg.GdLst != nil {
		_bgdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0064\u004c\u0073\u0074"}}
		e.EncodeElement(_dbdg.GdLst, _bgdf)
	}
	if _dbdg.AhLst != nil {
		_ceafd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0068\u004c\u0073\u0074"}}
		e.EncodeElement(_dbdg.AhLst, _ceafd)
	}
	if _dbdg.CxnLst != nil {
		_fddd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0078\u006e\u004c\u0073\u0074"}}
		e.EncodeElement(_dbdg.CxnLst, _fddd)
	}
	if _dbdg.Rect != nil {
		_dgbdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072\u0065\u0063\u0074"}}
		e.EncodeElement(_dbdg.Rect, _dgbdd)
	}
	_dacgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0061\u0074\u0068\u004c\u0073t"}}
	e.EncodeElement(_dbdg.PathLst, _dacgd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eddea *ST_LineEndLength) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_eddea = 0
	case "\u0073\u006d":
		*_eddea = 1
	case "\u006d\u0065\u0064":
		*_eddea = 2
	case "\u006c\u0067":
		*_eddea = 3
	}
	return nil
}
func (_dcggdd *ST_TextSpacingPercentOrPercentString) Validate() error {
	return _dcggdd.ValidateWithPath("")
}
func (_dagga ST_BlendMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aadfg := _d.Attr{}
	_aadfg.Name = name
	switch _dagga {
	case ST_BlendModeUnset:
		_aadfg.Value = ""
	case ST_BlendModeOver:
		_aadfg.Value = "\u006f\u0076\u0065\u0072"
	case ST_BlendModeMult:
		_aadfg.Value = "\u006d\u0075\u006c\u0074"
	case ST_BlendModeScreen:
		_aadfg.Value = "\u0073\u0063\u0072\u0065\u0065\u006e"
	case ST_BlendModeDarken:
		_aadfg.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_BlendModeLighten:
		_aadfg.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	}
	return _aadfg, nil
}
func (_cafgc *EG_Text3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cafgc.Sp3d != nil {
		_fggdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_cafgc.Sp3d, _fggdd)
	}
	if _cafgc.FlatTx != nil {
		_ceefg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_cafgc.FlatTx, _ceefg)
	}
	return nil
}
func (_aeecb *CT_GeomGuide) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dcaab := range start.Attr {
		if _dcaab.Name.Local == "\u006e\u0061\u006d\u0065" {
			_daacad, _acfe := _dcaab.Value, error(nil)
			if _acfe != nil {
				return _acfe
			}
			_aeecb.NameAttr = _daacad
			continue
		}
		if _dcaab.Name.Local == "\u0066\u006d\u006c\u0061" {
			_bfce, _cdgde := _dcaab.Value, error(nil)
			if _cdgde != nil {
				return _cdgde
			}
			_aeecb.FmlaAttr = _bfce
			continue
		}
	}
	for {
		_eggd, _cead := d.Token()
		if _cead != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0065o\u006d\u0047\u0075\u0069\u0064\u0065\u003a\u0020\u0025\u0073", _cead)
		}
		if _cadab, _ccdbf := _eggd.(_d.EndElement); _ccdbf && _cadab.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ffae *CT_NonVisualConnectorProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cbedd:
	for {
		_abdf, _baca := d.Token()
		if _baca != nil {
			return _baca
		}
		switch _dfcb := _abdf.(type) {
		case _d.StartElement:
			switch _dfcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"}:
				_ffae.CxnSpLocks = NewCT_ConnectorLocking()
				if _ebgff := d.DecodeElement(_ffae.CxnSpLocks, &_dfcb); _ebgff != nil {
					return _ebgff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0043x\u006e"}:
				_ffae.StCxn = NewCT_Connection()
				if _ffdcf := d.DecodeElement(_ffae.StCxn, &_dfcb); _ffdcf != nil {
					return _ffdcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u006e\u0064\u0043\u0078\u006e"}:
				_ffae.EndCxn = NewCT_Connection()
				if _aedda := d.DecodeElement(_ffae.EndCxn, &_dfcb); _aedda != nil {
					return _aedda
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ffae.ExtLst = NewCT_OfficeArtExtensionList()
				if _cgeae := d.DecodeElement(_ffae.ExtLst, &_dfcb); _cgeae != nil {
					return _cgeae
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006cC\u006f\u006en\u0065\u0063\u0074\u006fr\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _dfcb.Name)
				if _aedfa := d.Skip(); _aedfa != nil {
					return _aedfa
				}
			}
		case _d.EndElement:
			break _cbedd
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_LineProperties() *CT_LineProperties { _fgbfg := &CT_LineProperties{}; return _fgbfg }
func (_ada *CT_BackgroundFormatting) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cef:
	for {
		_bef, _feef := d.Token()
		if _feef != nil {
			return _feef
		}
		switch _fgec := _bef.(type) {
		case _d.StartElement:
			switch _fgec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ada.NoFill = NewCT_NoFillProperties()
				if _fbag := d.DecodeElement(_ada.NoFill, &_fgec); _fbag != nil {
					return _fbag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_ada.SolidFill = NewCT_SolidColorFillProperties()
				if _adbf := d.DecodeElement(_ada.SolidFill, &_fgec); _adbf != nil {
					return _adbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_ada.GradFill = NewCT_GradientFillProperties()
				if _ceaa := d.DecodeElement(_ada.GradFill, &_fgec); _ceaa != nil {
					return _ceaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_ada.BlipFill = NewCT_BlipFillProperties()
				if _bcd := d.DecodeElement(_ada.BlipFill, &_fgec); _bcd != nil {
					return _bcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_ada.PattFill = NewCT_PatternFillProperties()
				if _cecg := d.DecodeElement(_ada.PattFill, &_fgec); _cecg != nil {
					return _cecg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_ada.GrpFill = NewCT_GroupFillProperties()
				if _bcgf := d.DecodeElement(_ada.GrpFill, &_fgec); _bcgf != nil {
					return _bcgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_ada.EffectLst = NewCT_EffectList()
				if _faag := d.DecodeElement(_ada.EffectLst, &_fgec); _faag != nil {
					return _faag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_ada.EffectDag = NewCT_EffectContainer()
				if _cfbf := d.DecodeElement(_ada.EffectDag, &_fgec); _cfbf != nil {
					return _cfbf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006ed\u0046\u006f\u0072\u006d\u0061\u0074t\u0069\u006e\u0067 \u0025\u0076", _fgec.Name)
				if _gfd := d.Skip(); _gfd != nil {
					return _gfd
				}
			}
		case _d.EndElement:
			break _cef
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_OfficeArtExtensionList and its children
func (_bfbaf *CT_OfficeArtExtensionList) Validate() error {
	return _bfbaf.ValidateWithPath("\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}

// Validate validates the EG_ThemeableFillStyle and its children
func (_gdcdc *EG_ThemeableFillStyle) Validate() error {
	return _gdcdc.ValidateWithPath("E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065")
}
func (_ddfbac ST_BlackWhiteMode) ValidateWithPath(path string) error {
	switch _ddfbac {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ddfbac))
	}
	return nil
}
func (_gcbdb ST_BevelPresetType) Validate() error { return _gcbdb.ValidateWithPath("") }
func (_fcfdf ST_AnimationChartOnlyBuildType) String() string {
	switch _fcfdf {
	case 0:
		return ""
	case 1:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 2:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c"
	case 4:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c"
	}
	return ""
}
func (_cgaeb ST_TextBulletSize) String() string {
	if _cgaeb.ST_TextBulletSizePercent != nil {
		return _e.Sprintf("\u0025\u0076", *_cgaeb.ST_TextBulletSizePercent)
	}
	if _cgaeb.ST_TextBulletSizeDecimal != nil {
		return _e.Sprintf("\u0025\u0076", *_cgaeb.ST_TextBulletSizeDecimal)
	}
	return ""
}

type CT_GammaTransform struct{}

func (_afec *CT_HSLEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afec.HueAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_afec.HueAttr)})
	}
	if _afec.SatAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_afec.SatAttr)})
	}
	if _afec.LumAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0075\u006d"}, Value: _e.Sprintf("\u0025\u0076", *_afec.LumAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gfdab *CT_GroupShapeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dgga := range start.Attr {
		if _dgga.Name.Local == "\u0062\u0077\u004d\u006f\u0064\u0065" {
			_gfdab.BwModeAttr.UnmarshalXMLAttr(_dgga)
			continue
		}
	}
_gaea:
	for {
		_ddba, _gddbg := d.Token()
		if _gddbg != nil {
			return _gddbg
		}
		switch _agce := _ddba.(type) {
		case _d.StartElement:
			switch _agce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_gfdab.Xfrm = NewCT_GroupTransform2D()
				if _ebdcd := d.DecodeElement(_gfdab.Xfrm, &_agce); _ebdcd != nil {
					return _ebdcd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_gfdab.NoFill = NewCT_NoFillProperties()
				if _eebe := d.DecodeElement(_gfdab.NoFill, &_agce); _eebe != nil {
					return _eebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_gfdab.SolidFill = NewCT_SolidColorFillProperties()
				if _aaged := d.DecodeElement(_gfdab.SolidFill, &_agce); _aaged != nil {
					return _aaged
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gfdab.GradFill = NewCT_GradientFillProperties()
				if _gegec := d.DecodeElement(_gfdab.GradFill, &_agce); _gegec != nil {
					return _gegec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gfdab.BlipFill = NewCT_BlipFillProperties()
				if _cbdc := d.DecodeElement(_gfdab.BlipFill, &_agce); _cbdc != nil {
					return _cbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gfdab.PattFill = NewCT_PatternFillProperties()
				if _cgebg := d.DecodeElement(_gfdab.PattFill, &_agce); _cgebg != nil {
					return _cgebg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gfdab.GrpFill = NewCT_GroupFillProperties()
				if _dgaa := d.DecodeElement(_gfdab.GrpFill, &_agce); _dgaa != nil {
					return _dgaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_gfdab.EffectLst = NewCT_EffectList()
				if _bgaac := d.DecodeElement(_gfdab.EffectLst, &_agce); _bgaac != nil {
					return _bgaac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_gfdab.EffectDag = NewCT_EffectContainer()
				if _deae := d.DecodeElement(_gfdab.EffectDag, &_agce); _deae != nil {
					return _deae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_gfdab.Scene3d = NewCT_Scene3D()
				if _bbfab := d.DecodeElement(_gfdab.Scene3d, &_agce); _bbfab != nil {
					return _bbfab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfdab.ExtLst = NewCT_OfficeArtExtensionList()
				if _cbffg := d.DecodeElement(_gfdab.ExtLst, &_agce); _cbffg != nil {
					return _cbffg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0072\u006f\u0075\u0070\u0053\u0068\u0061\u0070e\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073 \u0025\u0076", _agce.Name)
				if _egfa := d.Skip(); _egfa != nil {
					return _egfa
				}
			}
		case _d.EndElement:
			break _gaea
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GvmlPictureNonVisual and its children
func (_egfae *CT_GvmlPictureNonVisual) Validate() error {
	return _egfae.ValidateWithPath("\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c")
}
func (_edfeb ST_EffectContainerType) Validate() error  { return _edfeb.ValidateWithPath("") }
func ParseUnionST_OnOff(s string) (_a.ST_OnOff, error) { return _a.ST_OnOff{}, nil }

// Validate validates the EG_TextBulletSize and its children
func (_gaeecf *EG_TextBulletSize) Validate() error {
	return _gaeecf.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065")
}
func (_gffde ST_PathFillMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gffde.String(), start)
}
func (_dbbf *CT_GrayscaleEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TileFlipMode byte

// Validate validates the CT_TextBulletTypefaceFollowText and its children
func (_ddeeb *CT_TextBulletTypefaceFollowText) Validate() error {
	return _ddeeb.ValidateWithPath("\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074")
}
func NewCT_TextUnderlineLineFollowText() *CT_TextUnderlineLineFollowText {
	_acfbb := &CT_TextUnderlineLineFollowText{}
	return _acfbb
}

// Validate validates the CT_AnimationDgmBuildProperties and its children
func (_cbg *CT_AnimationDgmBuildProperties) Validate() error {
	return _cbg.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_cbege *EG_TextBulletSize) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cdcfg:
	for {
		_geebbd, _fffdc := d.Token()
		if _fffdc != nil {
			return _fffdc
		}
		switch _caacdb := _geebbd.(type) {
		case _d.StartElement:
			switch _caacdb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0053\u007a\u0054\u0078"}:
				_cbege.BuSzTx = NewCT_TextBulletSizeFollowText()
				if _bdabd := d.DecodeElement(_cbege.BuSzTx, &_caacdb); _bdabd != nil {
					return _bdabd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0063\u0074"}:
				_cbege.BuSzPct = NewCT_TextBulletSizePercent()
				if _efdeca := d.DecodeElement(_cbege.BuSzPct, &_caacdb); _efdeca != nil {
					return _efdeca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062u\u0053\u007a\u0050\u0074\u0073"}:
				_cbege.BuSzPts = NewCT_TextBulletSizePoint()
				if _fgbb := d.DecodeElement(_cbege.BuSzPts, &_caacdb); _fgbb != nil {
					return _fgbb
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0020\u0025\u0076", _caacdb.Name)
				if _adbgg := d.Skip(); _adbgg != nil {
					return _adbgg
				}
			}
		case _d.EndElement:
			break _cdcfg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the EG_TextBullet and its children
func (_eagaa *EG_TextBullet) Validate() error {
	return _eagaa.ValidateWithPath("\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074")
}

// ValidateWithPath validates the CT_VideoFile and its children, prefixing error messages with path
func (_fcbab *CT_VideoFile) ValidateWithPath(path string) error {
	if _fcbab.ExtLst != nil {
		if _ecfbb := _fcbab.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecfbb != nil {
			return _ecfbb
		}
	}
	return nil
}

type CT_Percentage struct{ ValAttr ST_Percentage }

func (_dffd ST_ColorSchemeIndex) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_dffd.String(), start)
}
func (_gagd *CT_TextNoBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fggf *CT_GvmlGroupShapeChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_caaad:
	for {
		_afca, _fbfge := d.Token()
		if _fbfge != nil {
			return _fbfge
		}
		switch _cfedc := _afca.(type) {
		case _d.StartElement:
			switch _cfedc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_eaee := NewCT_GvmlTextShape()
				if _cedf := d.DecodeElement(_eaee, &_cfedc); _cedf != nil {
					return _cedf
				}
				_fggf.TxSp = append(_fggf.TxSp, _eaee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070"}:
				_fgab := NewCT_GvmlShape()
				if _ccedf := d.DecodeElement(_fgab, &_cfedc); _ccedf != nil {
					return _ccedf
				}
				_fggf.Sp = append(_fggf.Sp, _fgab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0078\u006eS\u0070"}:
				_egdcf := NewCT_GvmlConnector()
				if _fced := d.DecodeElement(_egdcf, &_cfedc); _fced != nil {
					return _fced
				}
				_fggf.CxnSp = append(_fggf.CxnSp, _egdcf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0069\u0063"}:
				_egfeb := NewCT_GvmlPicture()
				if _adfa := d.DecodeElement(_egfeb, &_cfedc); _adfa != nil {
					return _adfa
				}
				_fggf.Pic = append(_fggf.Pic, _egfeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061p\u0068\u0069\u0063\u0046\u0072\u0061\u006d\u0065"}:
				_bdgbe := NewCT_GvmlGraphicalObjectFrame()
				if _daga := d.DecodeElement(_bdgbe, &_cfedc); _daga != nil {
					return _daga
				}
				_fggf.GraphicFrame = append(_fggf.GraphicFrame, _bdgbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0070S\u0070"}:
				_cgfag := NewCT_GvmlGroupShape()
				if _acef := d.DecodeElement(_cgfag, &_cfedc); _acef != nil {
					return _acef
				}
				_fggf.GrpSp = append(_fggf.GrpSp, _cgfag)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065\u0043\u0068o\u0069\u0063\u0065 \u0025\u0076", _cfedc.Name)
				if _dbcgc := d.Skip(); _dbcgc != nil {
					return _dbcgc
				}
			}
		case _d.EndElement:
			break _caaad
		case _d.CharData:
		}
	}
	return nil
}

type ST_ColorSchemeIndex byte

func (_gdcc *CT_GvmlConnectorNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_dfgd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_gdcc.CNvPr, _dfgd)
	_bgegf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063N\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_gdcc.CNvCxnSpPr, _bgegf)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fcgdfc *ST_PresetCameraType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_fcgdfc = 0
	case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
		*_fcgdfc = 1
	case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_fcgdfc = 2
	case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 3
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
		*_fcgdfc = 4
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
		*_fcgdfc = 5
	case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 6
	case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
		*_fcgdfc = 7
	case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcgdfc = 8
	case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 9
	case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
		*_fcgdfc = 10
	case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
		*_fcgdfc = 11
	case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
		*_fcgdfc = 12
	case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
		*_fcgdfc = 13
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
		*_fcgdfc = 14
	case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
		*_fcgdfc = 15
	case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
		*_fcgdfc = 16
	case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcgdfc = 17
	case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
		*_fcgdfc = 18
	case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
		*_fcgdfc = 19
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
		*_fcgdfc = 20
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
		*_fcgdfc = 21
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
		*_fcgdfc = 22
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
		*_fcgdfc = 23
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
		*_fcgdfc = 24
	case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
		*_fcgdfc = 25
	case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
		*_fcgdfc = 26
	case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
		*_fcgdfc = 27
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
		*_fcgdfc = 28
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
		*_fcgdfc = 29
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
		*_fcgdfc = 30
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
		*_fcgdfc = 31
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
		*_fcgdfc = 32
	case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
		*_fcgdfc = 33
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
		*_fcgdfc = 34
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
		*_fcgdfc = 35
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcgdfc = 36
	case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
		*_fcgdfc = 37
	case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
		*_fcgdfc = 38
	case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcgdfc = 39
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
		*_fcgdfc = 40
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
		*_fcgdfc = 41
	case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 42
	case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
		*_fcgdfc = 43
	case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 44
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
		*_fcgdfc = 45
	case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
		*_fcgdfc = 46
	case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 47
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
		*_fcgdfc = 48
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
		*_fcgdfc = 49
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
		*_fcgdfc = 50
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
		*_fcgdfc = 51
	case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
		*_fcgdfc = 52
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
		*_fcgdfc = 53
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
		*_fcgdfc = 54
	case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_fcgdfc = 55
	case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
		*_fcgdfc = 56
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
		*_fcgdfc = 57
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
		*_fcgdfc = 58
	case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
		*_fcgdfc = 59
	case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
		*_fcgdfc = 60
	case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
		*_fcgdfc = 61
	case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
		*_fcgdfc = 62
	}
	return nil
}

type EG_Effect struct {
	Cont         *CT_EffectContainer
	Effect       *CT_EffectReference
	AlphaBiLevel *CT_AlphaBiLevelEffect
	AlphaCeiling *CT_AlphaCeilingEffect
	AlphaFloor   *CT_AlphaFloorEffect
	AlphaInv     *CT_AlphaInverseEffect
	AlphaMod     *CT_AlphaModulateEffect
	AlphaModFix  *CT_AlphaModulateFixedEffect
	AlphaOutset  *CT_AlphaOutsetEffect
	AlphaRepl    *CT_AlphaReplaceEffect
	BiLevel      *CT_BiLevelEffect
	Blend        *CT_BlendEffect
	Blur         *CT_BlurEffect
	ClrChange    *CT_ColorChangeEffect
	ClrRepl      *CT_ColorReplaceEffect
	Duotone      *CT_DuotoneEffect
	Fill         *CT_FillEffect
	FillOverlay  *CT_FillOverlayEffect
	Glow         *CT_GlowEffect
	Grayscl      *CT_GrayscaleEffect
	Hsl          *CT_HSLEffect
	InnerShdw    *CT_InnerShadowEffect
	Lum          *CT_LuminanceEffect
	OuterShdw    *CT_OuterShadowEffect
	PrstShdw     *CT_PresetShadowEffect
	Reflection   *CT_ReflectionEffect
	RelOff       *CT_RelativeOffsetEffect
	SoftEdge     *CT_SoftEdgesEffect
	Tint         *CT_TintEffect
	Xfrm         *CT_TransformEffect
}

func (_begeg *ST_CompoundLine) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcgccf, _abcgf := d.Token()
	if _abcgf != nil {
		return _abcgf
	}
	if _ffaec, _eaced := _gcgccf.(_d.EndElement); _eaced && _ffaec.Name == start.Name {
		*_begeg = 1
		return nil
	}
	if _eeagd, _fgefe := _gcgccf.(_d.CharData); !_fgefe {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcgccf)
	} else {
		switch string(_eeagd) {
		case "":
			*_begeg = 0
		case "\u0073\u006e\u0067":
			*_begeg = 1
		case "\u0064\u0062\u006c":
			*_begeg = 2
		case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
			*_begeg = 3
		case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
			*_begeg = 4
		case "\u0074\u0072\u0069":
			*_begeg = 5
		}
	}
	_gcgccf, _abcgf = d.Token()
	if _abcgf != nil {
		return _abcgf
	}
	if _afacc, _ccgcad := _gcgccf.(_d.EndElement); _ccgcad && _afacc.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcgccf)
}

// ValidateWithPath validates the EG_EffectProperties and its children, prefixing error messages with path
func (_aaffc *EG_EffectProperties) ValidateWithPath(path string) error {
	if _aaffc.EffectLst != nil {
		if _dbagf := _aaffc.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _dbagf != nil {
			return _dbagf
		}
	}
	if _aaffc.EffectDag != nil {
		if _aabaa := _aaffc.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _aabaa != nil {
			return _aabaa
		}
	}
	return nil
}
func NewCT_BlipFillProperties() *CT_BlipFillProperties {
	_ecbfc := &CT_BlipFillProperties{}
	return _ecbfc
}

// ValidateWithPath validates the CT_Scene3D and its children, prefixing error messages with path
func (_edeef *CT_Scene3D) ValidateWithPath(path string) error {
	if _abfea := _edeef.Camera.ValidateWithPath(path + "\u002fC\u0061\u006d\u0065\u0072\u0061"); _abfea != nil {
		return _abfea
	}
	if _bbdgg := _edeef.LightRig.ValidateWithPath(path + "\u002fL\u0069\u0067\u0068\u0074\u0052\u0069g"); _bbdgg != nil {
		return _bbdgg
	}
	if _edeef.Backdrop != nil {
		if _cfbdc := _edeef.Backdrop.ValidateWithPath(path + "\u002fB\u0061\u0063\u006b\u0064\u0072\u006fp"); _cfbdc != nil {
			return _cfbdc
		}
	}
	if _edeef.ExtLst != nil {
		if _dfabad := _edeef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfabad != nil {
			return _dfabad
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AnimationChartElement and its children, prefixing error messages with path
func (_fgc *CT_AnimationChartElement) ValidateWithPath(path string) error {
	if _fgc.BldStepAttr == ST_ChartBuildStepUnset {
		return _e.Errorf("%\u0073\u002f\u0042\u006c\u0064\u0053t\u0065\u0070\u0041\u0074\u0074\u0072 \u0069\u0073\u0020\u0061\u0020\u006d\u0061n\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065l\u0064", path)
	}
	if _bfde := _fgc.BldStepAttr.ValidateWithPath(path + "\u002f\u0042\u006cd\u0053\u0074\u0065\u0070\u0041\u0074\u0074\u0072"); _bfde != nil {
		return _bfde
	}
	return nil
}

// ValidateWithPath validates the CT_Transform2D and its children, prefixing error messages with path
func (_egfed *CT_Transform2D) ValidateWithPath(path string) error {
	if _egfed.Off != nil {
		if _afede := _egfed.Off.ValidateWithPath(path + "\u002f\u004f\u0066\u0066"); _afede != nil {
			return _afede
		}
	}
	if _egfed.Ext != nil {
		if _gdacf := _egfed.Ext.ValidateWithPath(path + "\u002f\u0045\u0078\u0074"); _gdacf != nil {
			return _gdacf
		}
	}
	return nil
}
func (_edgf *CT_BackgroundFormatting) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _edgf.NoFill != nil {
		_bfdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgf.NoFill, _bfdg)
	}
	if _edgf.SolidFill != nil {
		_gca := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgf.SolidFill, _gca)
	}
	if _edgf.GradFill != nil {
		_bcee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgf.GradFill, _bcee)
	}
	if _edgf.BlipFill != nil {
		_bcff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgf.BlipFill, _bcff)
	}
	if _edgf.PattFill != nil {
		_fdba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_edgf.PattFill, _fdba)
	}
	if _edgf.GrpFill != nil {
		_bdfb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_edgf.GrpFill, _bdfb)
	}
	if _edgf.EffectLst != nil {
		_fffe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edgf.EffectLst, _fffe)
	}
	if _edgf.EffectDag != nil {
		_afed := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_edgf.EffectDag, _afed)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_SystemColor and its children
func (_aecge *CT_SystemColor) Validate() error {
	return _aecge.ValidateWithPath("\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072")
}
func (_gceda *CT_SchemeColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_dbffa, _ecedb := _gceda.ValAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0061\u006c"})
	if _ecedb != nil {
		return _ecedb
	}
	start.Attr = append(start.Attr, _dbffa)
	e.EncodeToken(start)
	if _gceda.EG_ColorTransform != nil {
		for _, _fgbaa := range _gceda.EG_ColorTransform {
			_fgbaa.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dbdfag *ST_BevelPresetType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fcdgc, _gbdega := d.Token()
	if _gbdega != nil {
		return _gbdega
	}
	if _gbeeab, _ddecb := _fcdgc.(_d.EndElement); _ddecb && _gbeeab.Name == start.Name {
		*_dbdfag = 1
		return nil
	}
	if _gdeab, _dbcef := _fcdgc.(_d.CharData); !_dbcef {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fcdgc)
	} else {
		switch string(_gdeab) {
		case "":
			*_dbdfag = 0
		case "\u0072\u0065\u006ca\u0078\u0065\u0064\u0049\u006e\u0073\u0065\u0074":
			*_dbdfag = 1
		case "\u0063\u0069\u0072\u0063\u006c\u0065":
			*_dbdfag = 2
		case "\u0073\u006c\u006fp\u0065":
			*_dbdfag = 3
		case "\u0063\u0072\u006fs\u0073":
			*_dbdfag = 4
		case "\u0061\u006e\u0067l\u0065":
			*_dbdfag = 5
		case "\u0073o\u0066\u0074\u0052\u006f\u0075\u006ed":
			*_dbdfag = 6
		case "\u0063\u006f\u006e\u0076\u0065\u0078":
			*_dbdfag = 7
		case "\u0063o\u006f\u006c\u0053\u006c\u0061\u006et":
			*_dbdfag = 8
		case "\u0064\u0069\u0076o\u0074":
			*_dbdfag = 9
		case "\u0072\u0069\u0062\u006c\u0065\u0074":
			*_dbdfag = 10
		case "\u0068\u0061\u0072\u0064\u0045\u0064\u0067\u0065":
			*_dbdfag = 11
		case "\u0061r\u0074\u0044\u0065\u0063\u006f":
			*_dbdfag = 12
		}
	}
	_fcdgc, _gbdega = d.Token()
	if _gbdega != nil {
		return _gbdega
	}
	if _ebfaa, _cfbde := _fcdgc.(_d.EndElement); _cfbde && _ebfaa.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fcdgc)
}

type CT_EffectReference struct{ RefAttr string }
type CT_NonVisualGraphicFrameProperties struct {
	GraphicFrameLocks *CT_GraphicalObjectFrameLocking
	ExtLst            *CT_OfficeArtExtensionList
}

func (_defa *CT_CustomColorList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bacg:
	for {
		_dbdfg, _gfdb := d.Token()
		if _gfdb != nil {
			return _gfdb
		}
		switch _dccaa := _dbdfg.(type) {
		case _d.StartElement:
			switch _dccaa.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063u\u0073\u0074\u0043\u006c\u0072"}:
				_geca := NewCT_CustomColor()
				if _fbabf := d.DecodeElement(_geca, &_dccaa); _fbabf != nil {
					return _fbabf
				}
				_defa.CustClr = append(_defa.CustClr, _geca)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _dccaa.Name)
				if _bddd := d.Skip(); _bddd != nil {
					return _bddd
				}
			}
		case _d.EndElement:
			break _bacg
		case _d.CharData:
		}
	}
	return nil
}
func NewTblStyleLst() *TblStyleLst {
	_cfeac := &TblStyleLst{}
	_cfeac.CT_TableStyleList = *NewCT_TableStyleList()
	return _cfeac
}

// Validate validates the CT_CustomColorList and its children
func (_efbc *CT_CustomColorList) Validate() error {
	return _efbc.ValidateWithPath("\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074")
}

type CT_Ratio struct {
	NAttr int64
	DAttr int64
}

func NewCT_BlipChoice() *CT_BlipChoice { _cag := &CT_BlipChoice{}; return _cag }
func (_gcedc *CT_Percentage) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ddgcg := range start.Attr {
		if _ddgcg.Name.Local == "\u0076\u0061\u006c" {
			_caefg, _adec := ParseUnionST_Percentage(_ddgcg.Value)
			if _adec != nil {
				return _adec
			}
			_gcedc.ValAttr = _caefg
			continue
		}
	}
	for {
		_bfcdg, _gacbb := d.Token()
		if _gacbb != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0050e\u0072c\u0065n\u0074\u0061\u0067\u0065\u003a\u0020\u0025s", _gacbb)
		}
		if _fgbe, _bbbee := _bfcdg.(_d.EndElement); _bbbee && _fgbe.Name == start.Name {
			break
		}
	}
	return nil
}

// ValidateWithPath validates the CT_LineStyleList and its children, prefixing error messages with path
func (_degfg *CT_LineStyleList) ValidateWithPath(path string) error {
	for _caeg, _ebagc := range _degfg.Ln {
		if _aefdd := _ebagc.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u004c\u006e\u005b\u0025\u0064]", path, _caeg)); _aefdd != nil {
			return _aefdd
		}
	}
	return nil
}
func (_ebab *CT_GradientStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_abcgd:
	for {
		_ecea, _ddbcg := d.Token()
		if _ddbcg != nil {
			return _ddbcg
		}
		switch _bdfad := _ecea.(type) {
		case _d.StartElement:
			switch _bdfad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0073"}:
				_gddggg := NewCT_GradientStop()
				if _bddb := d.DecodeElement(_gddggg, &_bdfad); _bddb != nil {
					return _bddb
				}
				_ebab.Gs = append(_ebab.Gs, _gddggg)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061\u0064\u0069\u0065\u006etS\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _bdfad.Name)
				if _aedf := d.Skip(); _aedf != nil {
					return _aedf
				}
			}
		case _d.EndElement:
			break _abcgd
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the Tbl and its children
func (_efbeg *Tbl) Validate() error { return _efbeg.ValidateWithPath("\u0054\u0062\u006c") }

type CT_FixedPercentage struct{ ValAttr ST_FixedPercentage }
type Graphic struct{ CT_GraphicalObject }

func (_cfcbc ST_PresetPatternVal) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cfcbc.String(), start)
}

type ST_PresetMaterialType byte

func (_bbfaa ST_LightRigDirection) Validate() error { return _bbfaa.ValidateWithPath("") }

// ValidateWithPath validates the CT_GammaTransform and its children, prefixing error messages with path
func (_ceea *CT_GammaTransform) ValidateWithPath(path string) error { return nil }

// ValidateWithPath validates the CT_GvmlGraphicFrameNonVisual and its children, prefixing error messages with path
func (_ecfcg *CT_GvmlGraphicFrameNonVisual) ValidateWithPath(path string) error {
	if _fgca := _ecfcg.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _fgca != nil {
		return _fgca
	}
	if _gefdf := _ecfcg.CNvGraphicFramePr.ValidateWithPath(path + "\u002fC\u004ev\u0047\u0072\u0061\u0070\u0068i\u0063\u0046r\u0061\u006d\u0065\u0050\u0072"); _gefdf != nil {
		return _gefdf
	}
	return nil
}

// Validate validates the CT_ObjectStyleDefaults and its children
func (_ggcfa *CT_ObjectStyleDefaults) Validate() error {
	return _ggcfa.ValidateWithPath("\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073")
}

type CT_AudioCD struct {
	St     *CT_AudioCDTime
	End    *CT_AudioCDTime
	ExtLst *CT_OfficeArtExtensionList
}
type CT_TableRow struct {
	HAttr  ST_Coordinate
	Tc     []*CT_TableCell
	ExtLst *CT_OfficeArtExtensionList
}
type CT_SolidColorFillProperties struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_EffectReference() *CT_EffectReference { _fgfd := &CT_EffectReference{}; return _fgfd }

// ValidateWithPath validates the EG_ThemeableFontStyles and its children, prefixing error messages with path
func (_fdcgce *EG_ThemeableFontStyles) ValidateWithPath(path string) error {
	if _fdcgce.Font != nil {
		if _beea := _fdcgce.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _beea != nil {
			return _beea
		}
	}
	if _fdcgce.FontRef != nil {
		if _dadcc := _fdcgce.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _dadcc != nil {
			return _dadcc
		}
	}
	return nil
}
func NewCT_EmbeddedWAVAudioFile() *CT_EmbeddedWAVAudioFile {
	_feee := &CT_EmbeddedWAVAudioFile{}
	return _feee
}
func (_ddaga *ST_OnOffStyleType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ddaga = 0
	case "\u006f\u006e":
		*_ddaga = 1
	case "\u006f\u0066\u0066":
		*_ddaga = 2
	case "\u0064\u0065\u0066":
		*_ddaga = 3
	}
	return nil
}
func (_cbdfc *CT_VideoFile) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _e.Sprintf("\u0025\u0076", _cbdfc.LinkAttr)})
	if _cbdfc.ContentTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006e\u0074\u0065\u006e\u0074\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cbdfc.ContentTypeAttr)})
	}
	e.EncodeToken(start)
	if _cbdfc.ExtLst != nil {
		_agcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cbdfc.ExtLst, _agcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fgbda *ST_TextAutonumberScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ffagg, _bbccd := d.Token()
	if _bbccd != nil {
		return _bbccd
	}
	if _bbagf, _dgfea := _ffagg.(_d.EndElement); _dgfea && _bbagf.Name == start.Name {
		*_fgbda = 1
		return nil
	}
	if _ggcbbd, _ffadb := _ffagg.(_d.CharData); !_ffadb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ffagg)
	} else {
		switch string(_ggcbbd) {
		case "":
			*_fgbda = 0
		case "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 1
		case "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 2
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 3
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 4
		case "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 5
		case "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 6
		case "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 7
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 8
		case "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 9
		case "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 10
		case "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 11
		case "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 12
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 13
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 14
		case "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 15
		case "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 16
		case "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 17
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 18
		case "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 19
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_fgbda = 20
		case "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 21
		case "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 22
		case "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 23
		case "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 24
		case "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e":
			*_fgbda = 25
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064":
			*_fgbda = 26
		case "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e":
			*_fgbda = 27
		case "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 28
		case "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073":
			*_fgbda = 29
		case "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073":
			*_fgbda = 30
		case "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073":
			*_fgbda = 31
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 32
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 33
		case "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 34
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 35
		case "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052":
			*_fgbda = 36
		case "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068":
			*_fgbda = 37
		case "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064":
			*_fgbda = 38
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064":
			*_fgbda = 39
		case "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052":
			*_fgbda = 40
		case "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064":
			*_fgbda = 41
		}
	}
	_ffagg, _bbccd = d.Token()
	if _bbccd != nil {
		return _bbccd
	}
	if _ebcge, _ccfdf := _ffagg.(_d.EndElement); _ccfdf && _ebcge.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ffagg)
}

type CT_ColorReplaceEffect struct {
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func NewCT_AlphaFloorEffect() *CT_AlphaFloorEffect { _edf := &CT_AlphaFloorEffect{}; return _edf }
func (_bafc *CT_ColorMappingOverrideChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gdcb:
	for {
		_edaa, _cbeag := d.Token()
		if _cbeag != nil {
			return _cbeag
		}
		switch _efec := _edaa.(type) {
		case _d.StartElement:
			switch _efec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_bafc.MasterClrMapping = NewCT_EmptyElement()
				if _dgbb := d.DecodeElement(_bafc.MasterClrMapping, &_efec); _dgbb != nil {
					return _dgbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_bafc.OverrideClrMapping = NewCT_ColorMapping()
				if _cabc := d.DecodeElement(_bafc.OverrideClrMapping, &_efec); _cabc != nil {
					return _cabc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074 \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067O\u0076\u0065\u0072\u0072\u0069\u0064e\u0043\u0068o\u0069\u0063e\u0020%\u0076", _efec.Name)
				if _dgdf := d.Skip(); _dgdf != nil {
					return _dgdf
				}
			}
		case _d.EndElement:
			break _gdcb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_SolidColorFillProperties and its children, prefixing error messages with path
func (_fega *CT_SolidColorFillProperties) ValidateWithPath(path string) error {
	if _fega.ScrgbClr != nil {
		if _efdgc := _fega.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _efdgc != nil {
			return _efdgc
		}
	}
	if _fega.SrgbClr != nil {
		if _dfddd := _fega.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _dfddd != nil {
			return _dfddd
		}
	}
	if _fega.HslClr != nil {
		if _decaf := _fega.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _decaf != nil {
			return _decaf
		}
	}
	if _fega.SysClr != nil {
		if _bcfgeb := _fega.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bcfgeb != nil {
			return _bcfgeb
		}
	}
	if _fega.SchemeClr != nil {
		if _aacaee := _fega.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _aacaee != nil {
			return _aacaee
		}
	}
	if _fega.PrstClr != nil {
		if _ffcf := _fega.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _ffcf != nil {
			return _ffcf
		}
	}
	return nil
}
func (_gcffa ST_ChartBuildStep) String() string {
	switch _gcffa {
	case 0:
		return ""
	case 1:
		return "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 2:
		return "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case 3:
		return "\u0073\u0065\u0072\u0069\u0065\u0073"
	case 4:
		return "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case 5:
		return "\u0061\u006c\u006c\u0050\u0074\u0073"
	case 6:
		return "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return ""
}
func (_ceaf *CT_ColorChangeEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ceaf.ClrFrom = NewCT_Color()
	_ceaf.ClrTo = NewCT_Color()
	for _, _ggeg := range start.Attr {
		if _ggeg.Name.Local == "\u0075\u0073\u0065\u0041" {
			_dbgb, _bgag := _cd.ParseBool(_ggeg.Value)
			if _bgag != nil {
				return _bgag
			}
			_ceaf.UseAAttr = &_dbgb
			continue
		}
	}
_dfbca:
	for {
		_gecg, _facf := d.Token()
		if _facf != nil {
			return _facf
		}
		switch _bdca := _gecg.(type) {
		case _d.StartElement:
			switch _bdca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0046\u0072\u006f\u006d"}:
				if _fbggf := d.DecodeElement(_ceaf.ClrFrom, &_bdca); _fbggf != nil {
					return _fbggf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072T\u006f"}:
				if _gdgfc := d.DecodeElement(_ceaf.ClrTo, &_bdca); _gdgfc != nil {
					return _gdgfc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061\u006e\u0067\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _bdca.Name)
				if _caba := d.Skip(); _caba != nil {
					return _caba
				}
			}
		case _d.EndElement:
			break _dfbca
		case _d.CharData:
		}
	}
	return nil
}
func (_geafa *EG_TextBulletTypeface) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dfff:
	for {
		_fabcf, _edefac := d.Token()
		if _edefac != nil {
			return _edefac
		}
		switch _cdbdg := _fabcf.(type) {
		case _d.StartElement:
			switch _cdbdg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074\u0054\u0078"}:
				_geafa.BuFontTx = NewCT_TextBulletTypefaceFollowText()
				if _dddgg := d.DecodeElement(_geafa.BuFontTx, &_cdbdg); _dddgg != nil {
					return _dddgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0075\u0046\u006f\u006e\u0074"}:
				_geafa.BuFont = NewCT_TextFont()
				if _dadc := d.DecodeElement(_geafa.BuFont, &_cdbdg); _dadc != nil {
					return _dadc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0054\u0079\u0070\u0065\u0066\u0061\u0063\u0065\u0020\u0025\u0076", _cdbdg.Name)
				if _gacba := d.Skip(); _gacba != nil {
					return _gacba
				}
			}
		case _d.EndElement:
			break _dfff
		case _d.CharData:
		}
	}
	return nil
}
func (_bddf *CT_EffectProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _bddf.EffectLst != nil {
		_aaeg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_bddf.EffectLst, _aaeg)
	}
	if _bddf.EffectDag != nil {
		_egda := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_bddf.EffectDag, _egda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_TextUnderlineLine() *EG_TextUnderlineLine {
	_egefbg := &EG_TextUnderlineLine{}
	return _egefbg
}

// Validate validates the CT_AnimationGraphicalObjectBuildProperties and its children
func (_bcf *CT_AnimationGraphicalObjectBuildProperties) Validate() error {
	return _bcf.ValidateWithPath("\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_efccb ST_PresetLineDashVal) Validate() error { return _efccb.ValidateWithPath("") }

// Validate validates the CT_NonVisualGraphicFrameProperties and its children
func (_baba *CT_NonVisualGraphicFrameProperties) Validate() error {
	return _baba.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}
func NewAG_Locking() *AG_Locking { _fg := &AG_Locking{}; return _fg }

// Validate validates the CT_AlphaCeilingEffect and its children
func (_bgb *CT_AlphaCeilingEffect) Validate() error {
	return _bgb.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_TextFont and its children, prefixing error messages with path
func (_beacg *CT_TextFont) ValidateWithPath(path string) error {
	if _bcbfd := _beacg.PitchFamilyAttr.ValidateWithPath(path + "\u002f\u0050i\u0074\u0063\u0068F\u0061\u006d\u0069\u006c\u0079\u0041\u0074\u0074\u0072"); _bcbfd != nil {
		return _bcbfd
	}
	return nil
}
func (_egdec *CT_TableGrid) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dcabe:
	for {
		_fcgeeb, _agddb := d.Token()
		if _agddb != nil {
			return _agddb
		}
		switch _eeedd := _fcgeeb.(type) {
		case _d.StartElement:
			switch _eeedd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0069\u0064\u0043\u006f\u006c"}:
				_cgffb := NewCT_TableCol()
				if _cbgadd := d.DecodeElement(_cgffb, &_eeedd); _cbgadd != nil {
					return _cbgadd
				}
				_egdec.GridCol = append(_egdec.GridCol, _cgffb)
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0047\u0072\u0069\u0064\u0020\u0025\u0076", _eeedd.Name)
				if _bccbf := d.Skip(); _bccbf != nil {
					return _bccbf
				}
			}
		case _d.EndElement:
			break _dcabe
		case _d.CharData:
		}
	}
	return nil
}
func (_addee ST_TextUnderlineType) String() string {
	switch _addee {
	case 0:
		return ""
	case 1:
		return "\u006e\u006f\u006e\u0065"
	case 2:
		return "\u0077\u006f\u0072d\u0073"
	case 3:
		return "\u0073\u006e\u0067"
	case 4:
		return "\u0064\u0062\u006c"
	case 5:
		return "\u0068\u0065\u0061v\u0079"
	case 6:
		return "\u0064\u006f\u0074\u0074\u0065\u0064"
	case 7:
		return "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079"
	case 8:
		return "\u0064\u0061\u0073\u0068"
	case 9:
		return "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y"
	case 10:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067"
	case 11:
		return "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079"
	case 12:
		return "\u0064o\u0074\u0044\u0061\u0073\u0068"
	case 13:
		return "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 14:
		return "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068"
	case 15:
		return "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079"
	case 16:
		return "\u0077\u0061\u0076\u0079"
	case 17:
		return "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y"
	case 18:
		return "\u0077a\u0076\u0079\u0044\u0062\u006c"
	}
	return ""
}
func (_afabd *CT_Transform2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afabd.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_afabd.RotAttr)})
	}
	if _afabd.FlipHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0048"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_afabd.FlipHAttr))})
	}
	if _afabd.FlipVAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006c\u0069p\u0056"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_afabd.FlipVAttr))})
	}
	e.EncodeToken(start)
	if _afabd.Off != nil {
		_ccgca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ff\u0066"}}
		e.EncodeElement(_afabd.Off, _ccgca)
	}
	if _afabd.Ext != nil {
		_ebfdc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065x\u0074"}}
		e.EncodeElement(_afabd.Ext, _ebfdc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_PresetLineDashProperties() *CT_PresetLineDashProperties {
	_efbae := &CT_PresetLineDashProperties{}
	return _efbae
}

// ValidateWithPath validates the CT_TextUnderlineFillGroupWrapper and its children, prefixing error messages with path
func (_acecc *CT_TextUnderlineFillGroupWrapper) ValidateWithPath(path string) error {
	if _acecc.NoFill != nil {
		if _ecacf := _acecc.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _ecacf != nil {
			return _ecacf
		}
	}
	if _acecc.SolidFill != nil {
		if _faaga := _acecc.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _faaga != nil {
			return _faaga
		}
	}
	if _acecc.GradFill != nil {
		if _agebb := _acecc.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _agebb != nil {
			return _agebb
		}
	}
	if _acecc.BlipFill != nil {
		if _ffcbd := _acecc.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ffcbd != nil {
			return _ffcbd
		}
	}
	if _acecc.PattFill != nil {
		if _fbbbda := _acecc.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _fbbbda != nil {
			return _fbbbda
		}
	}
	if _acecc.GrpFill != nil {
		if _fcfdg := _acecc.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fcfdg != nil {
			return _fcfdg
		}
	}
	return nil
}
func (_eaea *CT_ColorMappingOverride) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eaea.Choice = NewCT_ColorMappingOverrideChoice()
_feefc:
	for {
		_agagf, _babc := d.Token()
		if _babc != nil {
			return _babc
		}
		switch _bcda := _agagf.(type) {
		case _d.StartElement:
			switch _bcda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0061s\u0074\u0065\u0072C\u006c\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067"}:
				_eaea.Choice = NewCT_ColorMappingOverrideChoice()
				if _aead := d.DecodeElement(&_eaea.Choice.MasterClrMapping, &_bcda); _aead != nil {
					return _aead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fv\u0065r\u0072\u0069\u0064\u0065\u0043l\u0072\u004da\u0070\u0070\u0069\u006e\u0067"}:
				_eaea.Choice = NewCT_ColorMappingOverrideChoice()
				if _fead := d.DecodeElement(&_eaea.Choice.OverrideClrMapping, &_bcda); _fead != nil {
					return _fead
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070i\u006e\u0067\u004f\u0076\u0065\u0072r\u0069\u0064\u0065 \u0025\u0076", _bcda.Name)
				if _fged := d.Skip(); _fged != nil {
					return _fged
				}
			}
		case _d.EndElement:
			break _feefc
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextBulletSizePoint struct{ ValAttr int32 }

func (_aadega *CT_HslColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0075\u0065"}, Value: _e.Sprintf("\u0025\u0076", _aadega.HueAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0061\u0074"}, Value: _e.Sprintf("\u0025\u0076", _aadega.SatAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0075\u006d"}, Value: _e.Sprintf("\u0025\u0076", _aadega.LumAttr)})
	e.EncodeToken(start)
	if _aadega.EG_ColorTransform != nil {
		for _, _ggfba := range _aadega.EG_ColorTransform {
			_ggfba.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_GroupLocking() *CT_GroupLocking { _fgaac := &CT_GroupLocking{}; return _fgaac }

// ValidateWithPath validates the CT_LineJoinRound and its children, prefixing error messages with path
func (_caebe *CT_LineJoinRound) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_TextBodyProperties and its children
func (_fcdff *CT_TextBodyProperties) Validate() error {
	return _fcdff.ValidateWithPath("C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_afaf *CT_Path2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afaf.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _e.Sprintf("\u0025\u0076", *_afaf.WAttr)})
	}
	if _afaf.HAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068"}, Value: _e.Sprintf("\u0025\u0076", *_afaf.HAttr)})
	}
	if _afaf.FillAttr != ST_PathFillModeUnset {
		_affbb, _aecfc := _afaf.FillAttr.MarshalXMLAttr(_d.Name{Local: "\u0066\u0069\u006c\u006c"})
		if _aecfc != nil {
			return _aecfc
		}
		start.Attr = append(start.Attr, _affbb)
	}
	if _afaf.StrokeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0072\u006f\u006b\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_afaf.StrokeAttr))})
	}
	if _afaf.ExtrusionOkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "e\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u004f\u006b"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_afaf.ExtrusionOkAttr))})
	}
	e.EncodeToken(start)
	if _afaf.Close != nil {
		_ccbfa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u006f\u0073\u0065"}}
		for _, _cfdca := range _afaf.Close {
			e.EncodeElement(_cfdca, _ccbfa)
		}
	}
	if _afaf.MoveTo != nil {
		_cfca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006d\u006f\u0076\u0065\u0054\u006f"}}
		for _, _eaeab := range _afaf.MoveTo {
			e.EncodeElement(_eaeab, _cfca)
		}
	}
	if _afaf.LnTo != nil {
		_ecedd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006f"}}
		for _, _faaed := range _afaf.LnTo {
			e.EncodeElement(_faaed, _ecedd)
		}
	}
	if _afaf.ArcTo != nil {
		_fdfda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0072\u0063\u0054\u006f"}}
		for _, _facce := range _afaf.ArcTo {
			e.EncodeElement(_facce, _fdfda)
		}
	}
	if _afaf.QuadBezTo != nil {
		_fdddc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0071\u0075\u0061\u0064\u0042\u0065\u007a\u0054\u006f"}}
		for _, _cbdcae := range _afaf.QuadBezTo {
			e.EncodeElement(_cbdcae, _fdddc)
		}
	}
	if _afaf.CubicBezTo != nil {
		_bfefb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063u\u0062\u0069\u0063\u0042\u0065\u007a\u0054\u006f"}}
		for _, _acad := range _afaf.CubicBezTo {
			e.EncodeElement(_acad, _bfefb)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cdaf *CT_GvmlConnector) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdaf.NvCxnSpPr = NewCT_GvmlConnectorNonVisual()
	_cdaf.SpPr = NewCT_ShapeProperties()
_cecgd:
	for {
		_dfaef, _fggcc := d.Token()
		if _fggcc != nil {
			return _fggcc
		}
		switch _ebba := _dfaef.(type) {
		case _d.StartElement:
			switch _ebba.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006ev\u0043\u0078\u006e\u0053\u0070\u0050r"}:
				if _gbfe := d.DecodeElement(_cdaf.NvCxnSpPr, &_ebba); _gbfe != nil {
					return _gbfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _eceb := d.DecodeElement(_cdaf.SpPr, &_ebba); _eceb != nil {
					return _eceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_cdaf.Style = NewCT_ShapeStyle()
				if _bgcfb := d.DecodeElement(_cdaf.Style, &_ebba); _bgcfb != nil {
					return _bgcfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cdaf.ExtLst = NewCT_OfficeArtExtensionList()
				if _baffc := d.DecodeElement(_cdaf.ExtLst, &_ebba); _baffc != nil {
					return _baffc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072\u0020\u0025v", _ebba.Name)
				if _gbfa := d.Skip(); _gbfa != nil {
					return _gbfa
				}
			}
		case _d.EndElement:
			break _cecgd
		case _d.CharData:
		}
	}
	return nil
}
func (_aabcaf ST_TextFontAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aabcaf.String(), start)
}

type TblStyleLst struct{ CT_TableStyleList }

// Validate validates the CT_LineJoinMiterProperties and its children
func (_afgc *CT_LineJoinMiterProperties) Validate() error {
	return _afgc.ValidateWithPath("\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073")
}

type ST_TextAutonumberScheme byte

func NewCT_AlphaCeilingEffect() *CT_AlphaCeilingEffect { _gbe := &CT_AlphaCeilingEffect{}; return _gbe }
func (_gcfbe ST_PresetShadowVal) Validate() error      { return _gcfbe.ValidateWithPath("") }
func (_cfdcg ST_RectAlignment) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_cfdcg.String(), start)
}

type CT_PresetShadowEffect struct {
	PrstAttr  ST_PresetShadowVal
	DistAttr  *int64
	DirAttr   *int32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

// Validate validates the CT_Path2DQuadBezierTo and its children
func (_dbfbd *CT_Path2DQuadBezierTo) Validate() error {
	return _dbfbd.ValidateWithPath("C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f")
}
func NewCT_TextNormalAutofit() *CT_TextNormalAutofit { _dddg := &CT_TextNormalAutofit{}; return _dddg }

type ST_LightRigType byte

func NewCT_TextUnderlineFillGroupWrapper() *CT_TextUnderlineFillGroupWrapper {
	_fdcde := &CT_TextUnderlineFillGroupWrapper{}
	return _fdcde
}

type CT_PolarAdjustHandle struct {
	GdRefRAttr   *string
	MinRAttr     *ST_AdjCoordinate
	MaxRAttr     *ST_AdjCoordinate
	GdRefAngAttr *string
	MinAngAttr   *ST_AdjAngle
	MaxAngAttr   *ST_AdjAngle
	Pos          *CT_AdjPoint2D
}

func (_abeefg ST_PenAlignment) String() string {
	switch _abeefg {
	case 0:
		return ""
	case 1:
		return "\u0063\u0074\u0072"
	case 2:
		return "\u0069\u006e"
	}
	return ""
}

// ValidateWithPath validates the CT_TextTabStop and its children, prefixing error messages with path
func (_ffafa *CT_TextTabStop) ValidateWithPath(path string) error {
	if _ffafa.PosAttr != nil {
		if _gdea := _ffafa.PosAttr.ValidateWithPath(path + "\u002f\u0050\u006f\u0073\u0041\u0074\u0074\u0072"); _gdea != nil {
			return _gdea
		}
	}
	if _bbebb := _ffafa.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _bbebb != nil {
		return _bbebb
	}
	return nil
}
func (_ecggaa *CT_TextUnderlineFillFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_feggfb, _gbfecf := d.Token()
		if _gbfecf != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u0046\u0069\u006c\u006c\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _gbfecf)
		}
		if _eegdg, _eeead := _feggfb.(_d.EndElement); _eeead && _eegdg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fcaae ST_PitchFamily) Validate() error { return _fcaae.ValidateWithPath("") }

type ST_PitchFamily byte

func NewCT_TextBulletSizePoint() *CT_TextBulletSizePoint {
	_cdcdg := &CT_TextBulletSizePoint{}
	_cdcdg.ValAttr = 100
	return _cdcdg
}

// Validate validates the CT_Transform2D and its children
func (_fddbge *CT_Transform2D) Validate() error {
	return _fddbge.ValidateWithPath("\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044")
}
func (_edcce ST_LineEndLength) ValidateWithPath(path string) error {
	switch _edcce {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_edcce))
	}
	return nil
}
func NewCT_TextShapeAutofit() *CT_TextShapeAutofit { _afbfd := &CT_TextShapeAutofit{}; return _afbfd }
func (_dbca ST_TextAutonumberScheme) String() string {
	switch _dbca {
	case 0:
		return ""
	case 1:
		return "\u0061\u006cp\u0068\u0061\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 2:
		return "\u0061\u006cp\u0068\u0061\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 3:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 4:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 5:
		return "\u0061\u006c\u0070\u0068\u0061\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 6:
		return "\u0061\u006c\u0070\u0068\u0061\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 7:
		return "\u0061r\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 8:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 9:
		return "\u0061\u0072\u0061b\u0069\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 10:
		return "a\u0072\u0061\u0062\u0069\u0063\u0050\u006c\u0061\u0069\u006e"
	case 11:
		return "\u0072\u006fm\u0061\u006e\u004cc\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 12:
		return "\u0072\u006fm\u0061\u006e\u0055c\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 13:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 14:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0061\u0072\u0065\u006e\u0052"
	case 15:
		return "\u0072\u006f\u006d\u0061\u006e\u004c\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 16:
		return "\u0072\u006f\u006d\u0061\u006e\u0055\u0063\u0050\u0065\u0072\u0069\u006f\u0064"
	case 17:
		return "\u0063\u0069r\u0063\u006c\u0065N\u0075\u006d\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 18:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0042\u006c\u0061c\u006b\u0050\u006c\u0061\u0069\u006e"
	case 19:
		return "c\u0069\u0072\u0063\u006ceN\u0075m\u0057\u0064\u0057\u0068\u0069t\u0065\u0050\u006c\u0061\u0069\u006e"
	case 20:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 21:
		return "\u0061\u0072\u0061\u0062\u0069\u0063\u0044\u0062\u0050\u006c\u0061\u0069\u006e"
	case 22:
		return "\u0065\u0061\u0031C\u0068\u0073\u0050\u0065\u0072\u0069\u006f\u0064"
	case 23:
		return "e\u0061\u0031\u0043\u0068\u0073\u0050\u006c\u0061\u0069\u006e"
	case 24:
		return "\u0065\u0061\u0031C\u0068\u0074\u0050\u0065\u0072\u0069\u006f\u0064"
	case 25:
		return "e\u0061\u0031\u0043\u0068\u0074\u0050\u006c\u0061\u0069\u006e"
	case 26:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u0043\u0068\u0073\u0044\u0062\u0050e\u0072\u0069\u006f\u0064"
	case 27:
		return "\u0065\u0061\u0031\u004a\u0070\u006e\u004b\u006f\u0072P\u006c\u0061\u0069\u006e"
	case 28:
		return "\u0065a\u0031J\u0070\u006e\u004b\u006f\u0072\u0050\u0065\u0072\u0069\u006f\u0064"
	case 29:
		return "\u0061\u0072\u0061b\u0069\u0063\u0031\u004d\u0069\u006e\u0075\u0073"
	case 30:
		return "\u0061\u0072\u0061b\u0069\u0063\u0032\u004d\u0069\u006e\u0075\u0073"
	case 31:
		return "\u0068\u0065\u0062r\u0065\u0077\u0032\u004d\u0069\u006e\u0075\u0073"
	case 32:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 33:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061\u0050\u0061\u0072\u0065\u006e\u0052"
	case 34:
		return "\u0074h\u0061i\u0041\u006c\u0070\u0068\u0061P\u0061\u0072e\u006e\u0042\u006f\u0074\u0068"
	case 35:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0065\u0072\u0069\u006f\u0064"
	case 36:
		return "\u0074\u0068\u0061\u0069\u004e\u0075\u006d\u0050\u0061\u0072\u0065\u006e\u0052"
	case 37:
		return "\u0074\u0068a\u0069\u004e\u0075m\u0050\u0061\u0072\u0065\u006e\u0042\u006f\u0074\u0068"
	case 38:
		return "\u0068\u0069n\u0064\u0069\u0041l\u0070\u0068\u0061\u0050\u0065\u0072\u0069\u006f\u0064"
	case 39:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050e\u0072\u0069\u006f\u0064"
	case 40:
		return "\u0068\u0069\u006e\u0064\u0069\u004e\u0075\u006d\u0050a\u0072\u0065\u006e\u0052"
	case 41:
		return "\u0068\u0069\u006e\u0064\u0069\u0041\u006c\u0070\u0068\u0061\u0031\u0050e\u0072\u0069\u006f\u0064"
	}
	return ""
}

// Validate validates the CT_ColorSchemeAndMapping and its children
func (_acbc *CT_ColorSchemeAndMapping) Validate() error {
	return _acbc.ValidateWithPath("\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}
func (_baab ST_AnimationChartOnlyBuildType) Validate() error { return _baab.ValidateWithPath("") }
func NewCT_Backdrop() *CT_Backdrop {
	_gadd := &CT_Backdrop{}
	_gadd.Anchor = NewCT_Point3D()
	_gadd.Norm = NewCT_Vector3D()
	_gadd.Up = NewCT_Vector3D()
	return _gadd
}
func (_gaggb ST_PresetShadowVal) ValidateWithPath(path string) error {
	switch _gaggb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gaggb))
	}
	return nil
}

// ValidateWithPath validates the CT_ConnectorLocking and its children, prefixing error messages with path
func (_aacg *CT_ConnectorLocking) ValidateWithPath(path string) error {
	if _aacg.ExtLst != nil {
		if _dfec := _aacg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dfec != nil {
			return _dfec
		}
	}
	return nil
}
func (_gcfabb *ST_AdjAngle) ValidateWithPath(path string) error {
	_aafeb := []string{}
	if _gcfabb.ST_Angle != nil {
		_aafeb = append(_aafeb, "\u0053\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
	}
	if _gcfabb.ST_GeomGuideName != nil {
		_aafeb = append(_aafeb, "\u0053\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004e\u0061\u006d\u0065")
	}
	if len(_aafeb) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _aafeb)
	}
	return nil
}

// Validate validates the CT_TableGrid and its children
func (_bgcae *CT_TableGrid) Validate() error {
	return _bgcae.ValidateWithPath("\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064")
}

// ValidateWithPath validates the CT_Angle and its children, prefixing error messages with path
func (_gced *CT_Angle) ValidateWithPath(path string) error { return nil }
func (_edcec *CT_Hyperlink) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _edcec.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_edcec.IdAttr)})
	}
	if _edcec.InvalidUrlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_edcec.InvalidUrlAttr)})
	}
	if _edcec.ActionAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061\u0063\u0074\u0069\u006f\u006e"}, Value: _e.Sprintf("\u0025\u0076", *_edcec.ActionAttr)})
	}
	if _edcec.TgtFrameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_edcec.TgtFrameAttr)})
	}
	if _edcec.TooltipAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074o\u006f\u006c\u0074\u0069\u0070"}, Value: _e.Sprintf("\u0025\u0076", *_edcec.TooltipAttr)})
	}
	if _edcec.HistoryAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068i\u0073\u0074\u006f\u0072\u0079"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_edcec.HistoryAttr))})
	}
	if _edcec.HighlightClickAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_edcec.HighlightClickAttr))})
	}
	if _edcec.EndSndAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0053\u006e\u0064"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_edcec.EndSndAttr))})
	}
	e.EncodeToken(start)
	if _edcec.Snd != nil {
		_efdeee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073n\u0064"}}
		e.EncodeElement(_edcec.Snd, _efdeee)
	}
	if _edcec.ExtLst != nil {
		_befe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_edcec.ExtLst, _befe)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cbdab ST_AnimationBuildType) ValidateWithPath(path string) error {
	switch _cbdab {
	case 0, 1:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_cbdab))
	}
	return nil
}
func (_egecb *CT_EffectList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dedc:
	for {
		_agagbb, _bbbdb := d.Token()
		if _bbbdb != nil {
			return _bbbdb
		}
		switch _bdda := _agagbb.(type) {
		case _d.StartElement:
			switch _bdda.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_egecb.Blur = NewCT_BlurEffect()
				if _ecbed := d.DecodeElement(_egecb.Blur, &_bdda); _ecbed != nil {
					return _ecbed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_egecb.FillOverlay = NewCT_FillOverlayEffect()
				if _bgeb := d.DecodeElement(_egecb.FillOverlay, &_bdda); _bgeb != nil {
					return _bgeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_egecb.Glow = NewCT_GlowEffect()
				if _effd := d.DecodeElement(_egecb.Glow, &_bdda); _effd != nil {
					return _effd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_egecb.InnerShdw = NewCT_InnerShadowEffect()
				if _ceag := d.DecodeElement(_egecb.InnerShdw, &_bdda); _ceag != nil {
					return _ceag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_egecb.OuterShdw = NewCT_OuterShadowEffect()
				if _egada := d.DecodeElement(_egecb.OuterShdw, &_bdda); _egada != nil {
					return _egada
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_egecb.PrstShdw = NewCT_PresetShadowEffect()
				if _dgfa := d.DecodeElement(_egecb.PrstShdw, &_bdda); _dgfa != nil {
					return _dgfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_egecb.Reflection = NewCT_ReflectionEffect()
				if _acfb := d.DecodeElement(_egecb.Reflection, &_bdda); _acfb != nil {
					return _acfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_egecb.SoftEdge = NewCT_SoftEdgesEffect()
				if _edbf := d.DecodeElement(_egecb.SoftEdge, &_bdda); _edbf != nil {
					return _edbf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045f\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074 \u0025\u0076", _bdda.Name)
				if _babb := d.Skip(); _babb != nil {
					return _babb
				}
			}
		case _d.EndElement:
			break _dedc
		case _d.CharData:
		}
	}
	return nil
}
func (_ecaae *CT_TextBulletSizePercent) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ecaae.ValAttr = "\u0031\u0030\u0030\u0025"
	for _, _gdedge := range start.Attr {
		if _gdedge.Name.Local == "\u0076\u0061\u006c" {
			_afgfc, _bfecf := _gdedge.Value, error(nil)
			if _bfecf != nil {
				return _bfecf
			}
			_ecaae.ValAttr = _afgfc
			continue
		}
	}
	for {
		_beabb, _bgbef := d.Token()
		if _bgbef != nil {
			return _e.Errorf("\u0070\u0061rs\u0069\u006e\u0067 \u0043\u0054\u005f\u0054ext\u0042ul\u006c\u0065\u0074\u0053\u0069\u007a\u0065Pe\u0072\u0063\u0065\u006e\u0074\u003a\u0020%\u0073", _bgbef)
		}
		if _agagfb, _bbaac := _beabb.(_d.EndElement); _bbaac && _agagfb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_RelativeRect struct {
	LAttr *ST_Percentage
	TAttr *ST_Percentage
	RAttr *ST_Percentage
	BAttr *ST_Percentage
}

// Validate validates the CT_Path2DCubicBezierTo and its children
func (_dgcff *CT_Path2DCubicBezierTo) Validate() error {
	return _dgcff.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f")
}
func NewEG_FillModeProperties() *EG_FillModeProperties {
	_eeabf := &EG_FillModeProperties{}
	return _eeabf
}

// ValidateWithPath validates the CT_LineJoinBevel and its children, prefixing error messages with path
func (_afaace *CT_LineJoinBevel) ValidateWithPath(path string) error { return nil }

// Validate validates the CT_FlatText and its children
func (_eefe *CT_FlatText) Validate() error {
	return _eefe.ValidateWithPath("C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074")
}
func (_fgacf ST_BlendMode) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fgacf.String(), start)
}

// ValidateWithPath validates the CT_StyleMatrixReference and its children, prefixing error messages with path
func (_gabb *CT_StyleMatrixReference) ValidateWithPath(path string) error {
	if _gabb.ScrgbClr != nil {
		if _gccad := _gabb.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _gccad != nil {
			return _gccad
		}
	}
	if _gabb.SrgbClr != nil {
		if _fdca := _gabb.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _fdca != nil {
			return _fdca
		}
	}
	if _gabb.HslClr != nil {
		if _cdde := _gabb.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _cdde != nil {
			return _cdde
		}
	}
	if _gabb.SysClr != nil {
		if _bfdfec := _gabb.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _bfdfec != nil {
			return _bfdfec
		}
	}
	if _gabb.SchemeClr != nil {
		if _afbc := _gabb.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _afbc != nil {
			return _afbc
		}
	}
	if _gabb.PrstClr != nil {
		if _gdfef := _gabb.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gdfef != nil {
			return _gdfef
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Blip and its children, prefixing error messages with path
func (_geef *CT_Blip) ValidateWithPath(path string) error {
	if _ccfa := _geef.CstateAttr.ValidateWithPath(path + "/\u0043\u0073\u0074\u0061\u0074\u0065\u0041\u0074\u0074\u0072"); _ccfa != nil {
		return _ccfa
	}
	for _fafb, _debg := range _geef.Choice {
		if _daf := _debg.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d", path, _fafb)); _daf != nil {
			return _daf
		}
	}
	if _geef.ExtLst != nil {
		if _dece := _geef.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dece != nil {
			return _dece
		}
	}
	return nil
}
func NewCT_ColorScheme() *CT_ColorScheme {
	_cece := &CT_ColorScheme{}
	_cece.Dk1 = NewCT_Color()
	_cece.Lt1 = NewCT_Color()
	_cece.Dk2 = NewCT_Color()
	_cece.Lt2 = NewCT_Color()
	_cece.Accent1 = NewCT_Color()
	_cece.Accent2 = NewCT_Color()
	_cece.Accent3 = NewCT_Color()
	_cece.Accent4 = NewCT_Color()
	_cece.Accent5 = NewCT_Color()
	_cece.Accent6 = NewCT_Color()
	_cece.Hlink = NewCT_Color()
	_cece.FolHlink = NewCT_Color()
	return _cece
}

// Validate validates the CT_GvmlPicture and its children
func (_fdgfc *CT_GvmlPicture) Validate() error {
	return _fdgfc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065")
}
func (_aega *CT_AnimationChartElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _aega.SeriesIdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073e\u0072\u0069\u0065\u0073\u0049\u0064x"}, Value: _e.Sprintf("\u0025\u0076", *_aega.SeriesIdxAttr)})
	}
	if _aega.CategoryIdxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0049\u0064\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_aega.CategoryIdxAttr)})
	}
	_dcda, _gbdd := _aega.BldStepAttr.MarshalXMLAttr(_d.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
	if _gbdd != nil {
		return _gbdd
	}
	start.Attr = append(start.Attr, _dcda)
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_bgbc *ST_TextSpacingPercentOrPercentString) ValidateWithPath(path string) error {
	_bdfdd := []string{}
	if _bgbc.ST_TextSpacingPercent != nil {
		_bdfdd = append(_bdfdd, "S\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074")
	}
	if _bgbc.ST_Percentage != nil {
		_bdfdd = append(_bdfdd, "\u0053\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_bdfdd) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _bdfdd)
	}
	return nil
}
func (_dbafc ST_RectAlignment) String() string {
	switch _dbafc {
	case 0:
		return ""
	case 1:
		return "\u0074\u006c"
	case 2:
		return "\u0074"
	case 3:
		return "\u0074\u0072"
	case 4:
		return "\u006c"
	case 5:
		return "\u0063\u0074\u0072"
	case 6:
		return "\u0072"
	case 7:
		return "\u0062\u006c"
	case 8:
		return "\u0062"
	case 9:
		return "\u0062\u0072"
	}
	return ""
}
func (_caecf *CT_TextNoAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_TextUnderlineType byte

// Validate validates the CT_GvmlGraphicalObjectFrame and its children
func (_ddcf *CT_GvmlGraphicalObjectFrame) Validate() error {
	return _ddcf.ValidateWithPath("C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065")
}
func (_bbaag ST_PathFillMode) Validate() error { return _bbaag.ValidateWithPath("") }
func (_eegbd ST_LineEndWidth) ValidateWithPath(path string) error {
	switch _eegbd {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_eegbd))
	}
	return nil
}

type CT_ColorMappingOverride struct {
	Choice *CT_ColorMappingOverrideChoice
}

func NewCT_CustomGeometry2D() *CT_CustomGeometry2D {
	_eddb := &CT_CustomGeometry2D{}
	_eddb.PathLst = NewCT_Path2DList()
	return _eddb
}
func NewCT_Transform2D() *CT_Transform2D { _egeab := &CT_Transform2D{}; return _egeab }

type ST_PenAlignment byte

func NewEG_LineJoinProperties() *EG_LineJoinProperties {
	_cacbd := &EG_LineJoinProperties{}
	return _cacbd
}

// ValidateWithPath validates the CT_GvmlTextShapeChoice and its children, prefixing error messages with path
func (_aacgf *CT_GvmlTextShapeChoice) ValidateWithPath(path string) error {
	if _aacgf.UseSpRect != nil {
		if _aceff := _aacgf.UseSpRect.ValidateWithPath(path + "\u002f\u0055\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"); _aceff != nil {
			return _aceff
		}
	}
	if _aacgf.Xfrm != nil {
		if _fcbbe := _aacgf.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fcbbe != nil {
			return _fcbbe
		}
	}
	return nil
}

const (
	ST_EffectContainerTypeUnset ST_EffectContainerType = 0
	ST_EffectContainerTypeSib   ST_EffectContainerType = 1
	ST_EffectContainerTypeTree  ST_EffectContainerType = 2
)
const (
	ST_TileFlipModeUnset ST_TileFlipMode = 0
	ST_TileFlipModeNone  ST_TileFlipMode = 1
	ST_TileFlipModeX     ST_TileFlipMode = 2
	ST_TileFlipModeY     ST_TileFlipMode = 3
	ST_TileFlipModeXy    ST_TileFlipMode = 4
)

// ValidateWithPath validates the CT_BaseStyles and its children, prefixing error messages with path
func (_dfbed *CT_BaseStyles) ValidateWithPath(path string) error {
	if _cgd := _dfbed.ClrScheme.ValidateWithPath(path + "\u002f\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065"); _cgd != nil {
		return _cgd
	}
	if _bfcf := _dfbed.FontScheme.ValidateWithPath(path + "/\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _bfcf != nil {
		return _bfcf
	}
	if _agg := _dfbed.FmtScheme.ValidateWithPath(path + "\u002f\u0046\u006d\u0074\u0053\u0063\u0068\u0065\u006d\u0065"); _agg != nil {
		return _agg
	}
	if _dfbed.ExtLst != nil {
		if _fgf := _dfbed.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgf != nil {
			return _fgf
		}
	}
	return nil
}

type CT_ConnectionSite struct {
	AngAttr ST_AdjAngle
	Pos     *CT_AdjPoint2D
}

func (_cbfga ST_TextFontAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gcdga := _d.Attr{}
	_gcdga.Name = name
	switch _cbfga {
	case ST_TextFontAlignTypeUnset:
		_gcdga.Value = ""
	case ST_TextFontAlignTypeAuto:
		_gcdga.Value = "\u0061\u0075\u0074\u006f"
	case ST_TextFontAlignTypeT:
		_gcdga.Value = "\u0074"
	case ST_TextFontAlignTypeCtr:
		_gcdga.Value = "\u0063\u0074\u0072"
	case ST_TextFontAlignTypeBase:
		_gcdga.Value = "\u0062\u0061\u0073\u0065"
	case ST_TextFontAlignTypeB:
		_gcdga.Value = "\u0062"
	}
	return _gcdga, nil
}

type CT_GeomGuide struct {
	NameAttr string
	FmlaAttr string
}

func (_dafgc *ST_LightRigType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cdbga, _fecafd := d.Token()
	if _fecafd != nil {
		return _fecafd
	}
	if _cgcge, _bbdge := _cdbga.(_d.EndElement); _bbdge && _cgcge.Name == start.Name {
		*_dafgc = 1
		return nil
	}
	if _acdef, _bfgfe := _cdbga.(_d.CharData); !_bfgfe {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _cdbga)
	} else {
		switch string(_acdef) {
		case "":
			*_dafgc = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
			*_dafgc = 1
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
			*_dafgc = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
			*_dafgc = 3
		case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
			*_dafgc = 4
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
			*_dafgc = 5
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
			*_dafgc = 6
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
			*_dafgc = 7
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
			*_dafgc = 8
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
			*_dafgc = 9
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
			*_dafgc = 10
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
			*_dafgc = 11
		case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
			*_dafgc = 12
		case "\u0074h\u0072\u0065\u0065\u0050\u0074":
			*_dafgc = 13
		case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
			*_dafgc = 14
		case "\u0073\u006f\u0066\u0074":
			*_dafgc = 15
		case "\u0068\u0061\u0072s\u0068":
			*_dafgc = 16
		case "\u0066\u006c\u006fo\u0064":
			*_dafgc = 17
		case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
			*_dafgc = 18
		case "\u006do\u0072\u006e\u0069\u006e\u0067":
			*_dafgc = 19
		case "\u0073u\u006e\u0072\u0069\u0073\u0065":
			*_dafgc = 20
		case "\u0073\u0075\u006e\u0073\u0065\u0074":
			*_dafgc = 21
		case "\u0063\u0068\u0069\u006c\u006c\u0079":
			*_dafgc = 22
		case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
			*_dafgc = 23
		case "\u0066\u006c\u0061\u0074":
			*_dafgc = 24
		case "\u0074\u0077\u006fP\u0074":
			*_dafgc = 25
		case "\u0067\u006c\u006f\u0077":
			*_dafgc = 26
		case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
			*_dafgc = 27
		}
	}
	_cdbga, _fecafd = d.Token()
	if _fecafd != nil {
		return _fecafd
	}
	if _bcgbf, _abebbb := _cdbga.(_d.EndElement); _abebbb && _bcgbf.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _cdbga)
}

// ST_AdjCoordinate is a union type
type ST_AdjCoordinate struct {
	ST_Coordinate    *ST_Coordinate
	ST_GeomGuideName *string
}
type EG_Geometry struct {
	CustGeom *CT_CustomGeometry2D
	PrstGeom *CT_PresetGeometry2D
}

// ValidateWithPath validates the CT_TextBodyProperties and its children, prefixing error messages with path
func (_gadeg *CT_TextBodyProperties) ValidateWithPath(path string) error {
	if _gbgb := _gadeg.VertOverflowAttr.ValidateWithPath(path + "\u002f\u0056\u0065\u0072\u0074\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _gbgb != nil {
		return _gbgb
	}
	if _dfeba := _gadeg.HorzOverflowAttr.ValidateWithPath(path + "\u002f\u0048\u006f\u0072\u007a\u004f\u0076\u0065\u0072\u0066\u006c\u006fw\u0041\u0074\u0074\u0072"); _dfeba != nil {
		return _dfeba
	}
	if _bfgff := _gadeg.VertAttr.ValidateWithPath(path + "\u002fV\u0065\u0072\u0074\u0041\u0074\u0074r"); _bfgff != nil {
		return _bfgff
	}
	if _bdfbf := _gadeg.WrapAttr.ValidateWithPath(path + "\u002fW\u0072\u0061\u0070\u0041\u0074\u0074r"); _bdfbf != nil {
		return _bdfbf
	}
	if _gadeg.LInsAttr != nil {
		if _fdbeb := _gadeg.LInsAttr.ValidateWithPath(path + "\u002fL\u0049\u006e\u0073\u0041\u0074\u0074r"); _fdbeb != nil {
			return _fdbeb
		}
	}
	if _gadeg.TInsAttr != nil {
		if _ffbeg := _gadeg.TInsAttr.ValidateWithPath(path + "\u002fT\u0049\u006e\u0073\u0041\u0074\u0074r"); _ffbeg != nil {
			return _ffbeg
		}
	}
	if _gadeg.RInsAttr != nil {
		if _cedbf := _gadeg.RInsAttr.ValidateWithPath(path + "\u002fR\u0049\u006e\u0073\u0041\u0074\u0074r"); _cedbf != nil {
			return _cedbf
		}
	}
	if _gadeg.BInsAttr != nil {
		if _bgbb := _gadeg.BInsAttr.ValidateWithPath(path + "\u002fB\u0049\u006e\u0073\u0041\u0074\u0074r"); _bgbb != nil {
			return _bgbb
		}
	}
	if _gadeg.NumColAttr != nil {
		if *_gadeg.NumColAttr < 1 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0031\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gadeg.NumColAttr)
		}
		if *_gadeg.NumColAttr > 16 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004e\u0075\u006d\u0043\u006f\u006c\u0041\u0074t\u0072\u0020\u006d\u0075\u0073\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0031\u0036\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gadeg.NumColAttr)
		}
	}
	if _gadeg.SpcColAttr != nil {
		if *_gadeg.SpcColAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0053\u0070\u0063\u0043\u006f\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020>\u003d\u0020\u0030\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_gadeg.SpcColAttr)
		}
	}
	if _dagd := _gadeg.AnchorAttr.ValidateWithPath(path + "/\u0041\u006e\u0063\u0068\u006f\u0072\u0041\u0074\u0074\u0072"); _dagd != nil {
		return _dagd
	}
	if _gadeg.PrstTxWarp != nil {
		if _fadcbe := _gadeg.PrstTxWarp.ValidateWithPath(path + "/\u0050\u0072\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"); _fadcbe != nil {
			return _fadcbe
		}
	}
	if _gadeg.NoAutofit != nil {
		if _egdbgg := _gadeg.NoAutofit.ValidateWithPath(path + "\u002f\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _egdbgg != nil {
			return _egdbgg
		}
	}
	if _gadeg.NormAutofit != nil {
		if _dfagb := _gadeg.NormAutofit.ValidateWithPath(path + "\u002f\u004e\u006fr\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"); _dfagb != nil {
			return _dfagb
		}
	}
	if _gadeg.SpAutoFit != nil {
		if _eagfbd := _gadeg.SpAutoFit.ValidateWithPath(path + "\u002f\u0053\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"); _eagfbd != nil {
			return _eagfbd
		}
	}
	if _gadeg.Scene3d != nil {
		if _faafg := _gadeg.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _faafg != nil {
			return _faafg
		}
	}
	if _gadeg.Sp3d != nil {
		if _eaage := _gadeg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _eaage != nil {
			return _eaage
		}
	}
	if _gadeg.FlatTx != nil {
		if _aaccg := _gadeg.FlatTx.ValidateWithPath(path + "\u002fF\u006c\u0061\u0074\u0054\u0078"); _aaccg != nil {
			return _aaccg
		}
	}
	if _gadeg.ExtLst != nil {
		if _fgcc := _gadeg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgcc != nil {
			return _fgcc
		}
	}
	return nil
}
func (_gbdac ST_TileFlipMode) ValidateWithPath(path string) error {
	switch _gbdac {
	case 0, 1, 2, 3, 4:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbdac))
	}
	return nil
}
func NewCT_AudioCD() *CT_AudioCD {
	_agcc := &CT_AudioCD{}
	_agcc.St = NewCT_AudioCDTime()
	_agcc.End = NewCT_AudioCDTime()
	return _agcc
}
func (_aabgg *EG_Effect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dgge:
	for {
		_cdbgc, _cbcbd := d.Token()
		if _cbcbd != nil {
			return _cbcbd
		}
		switch _cgae := _cdbgc.(type) {
		case _d.StartElement:
			switch _cgae.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				_aabgg.Cont = NewCT_EffectContainer()
				if _gdbaf := d.DecodeElement(_aabgg.Cont, &_cgae); _gdbaf != nil {
					return _gdbaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_aabgg.Effect = NewCT_EffectReference()
				if _dedd := d.DecodeElement(_aabgg.Effect, &_cgae); _dedd != nil {
					return _dedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_aabgg.AlphaBiLevel = NewCT_AlphaBiLevelEffect()
				if _dcdfe := d.DecodeElement(_aabgg.AlphaBiLevel, &_cgae); _dcdfe != nil {
					return _dcdfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_aabgg.AlphaCeiling = NewCT_AlphaCeilingEffect()
				if _egdga := d.DecodeElement(_aabgg.AlphaCeiling, &_cgae); _egdga != nil {
					return _egdga
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_aabgg.AlphaFloor = NewCT_AlphaFloorEffect()
				if _dadfce := d.DecodeElement(_aabgg.AlphaFloor, &_cgae); _dadfce != nil {
					return _dadfce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_aabgg.AlphaInv = NewCT_AlphaInverseEffect()
				if _cfede := d.DecodeElement(_aabgg.AlphaInv, &_cgae); _cfede != nil {
					return _cfede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aabgg.AlphaMod = NewCT_AlphaModulateEffect()
				if _fbfac := d.DecodeElement(_aabgg.AlphaMod, &_cgae); _fbfac != nil {
					return _fbfac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_aabgg.AlphaModFix = NewCT_AlphaModulateFixedEffect()
				if _gaead := d.DecodeElement(_aabgg.AlphaModFix, &_cgae); _gaead != nil {
					return _gaead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004f\u0075\u0074\u0073\u0065\u0074"}:
				_aabgg.AlphaOutset = NewCT_AlphaOutsetEffect()
				if _addaff := d.DecodeElement(_aabgg.AlphaOutset, &_cgae); _addaff != nil {
					return _addaff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_aabgg.AlphaRepl = NewCT_AlphaReplaceEffect()
				if _fdcfgc := d.DecodeElement(_aabgg.AlphaRepl, &_cgae); _fdcfgc != nil {
					return _fdcfgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_aabgg.BiLevel = NewCT_BiLevelEffect()
				if _gcfdfe := d.DecodeElement(_aabgg.BiLevel, &_cgae); _gcfdfe != nil {
					return _gcfdfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0065n\u0064"}:
				_aabgg.Blend = NewCT_BlendEffect()
				if _geedd := d.DecodeElement(_aabgg.Blend, &_cgae); _geedd != nil {
					return _geedd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_aabgg.Blur = NewCT_BlurEffect()
				if _gfae := d.DecodeElement(_aabgg.Blur, &_cgae); _gfae != nil {
					return _gfae
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_aabgg.ClrChange = NewCT_ColorChangeEffect()
				if _egefdd := d.DecodeElement(_aabgg.ClrChange, &_cgae); _egefdd != nil {
					return _egefdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aabgg.ClrRepl = NewCT_ColorReplaceEffect()
				if _ggdfg := d.DecodeElement(_aabgg.ClrRepl, &_cgae); _ggdfg != nil {
					return _ggdfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_aabgg.Duotone = NewCT_DuotoneEffect()
				if _cbcce := d.DecodeElement(_aabgg.Duotone, &_cgae); _cbcce != nil {
					return _cbcce
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_aabgg.Fill = NewCT_FillEffect()
				if _ecdfb := d.DecodeElement(_aabgg.Fill, &_cgae); _ecdfb != nil {
					return _ecdfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_aabgg.FillOverlay = NewCT_FillOverlayEffect()
				if _dedec := d.DecodeElement(_aabgg.FillOverlay, &_cgae); _dedec != nil {
					return _dedec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u006c\u006f\u0077"}:
				_aabgg.Glow = NewCT_GlowEffect()
				if _gcaaa := d.DecodeElement(_aabgg.Glow, &_cgae); _gcaaa != nil {
					return _gcaaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_aabgg.Grayscl = NewCT_GrayscaleEffect()
				if _dccbdc := d.DecodeElement(_aabgg.Grayscl, &_cgae); _dccbdc != nil {
					return _dccbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_aabgg.Hsl = NewCT_HSLEffect()
				if _dedff := d.DecodeElement(_aabgg.Hsl, &_cgae); _dedff != nil {
					return _dedff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u006e\u0065\u0072\u0053\u0068\u0064w"}:
				_aabgg.InnerShdw = NewCT_InnerShadowEffect()
				if _gbgag := d.DecodeElement(_aabgg.InnerShdw, &_cgae); _gbgag != nil {
					return _gbgag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aabgg.Lum = NewCT_LuminanceEffect()
				if _ffffg := d.DecodeElement(_aabgg.Lum, &_cgae); _ffffg != nil {
					return _ffffg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006fu\u0074\u0065\u0072\u0053\u0068\u0064w"}:
				_aabgg.OuterShdw = NewCT_OuterShadowEffect()
				if _eagfbc := d.DecodeElement(_aabgg.OuterShdw, &_cgae); _eagfbc != nil {
					return _eagfbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}:
				_aabgg.PrstShdw = NewCT_PresetShadowEffect()
				if _adcgf := d.DecodeElement(_aabgg.PrstShdw, &_cgae); _adcgf != nil {
					return _adcgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}:
				_aabgg.Reflection = NewCT_ReflectionEffect()
				if _bdeec := d.DecodeElement(_aabgg.Reflection, &_cgae); _bdeec != nil {
					return _bdeec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u006c\u004f\u0066\u0066"}:
				_aabgg.RelOff = NewCT_RelativeOffsetEffect()
				if _aggbdf := d.DecodeElement(_aabgg.RelOff, &_cgae); _aggbdf != nil {
					return _aggbdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}:
				_aabgg.SoftEdge = NewCT_SoftEdgesEffect()
				if _deedgc := d.DecodeElement(_aabgg.SoftEdge, &_cgae); _deedgc != nil {
					return _deedgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aabgg.Tint = NewCT_TintEffect()
				if _cfde := d.DecodeElement(_aabgg.Tint, &_cgae); _cfde != nil {
					return _cfde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0078\u0066\u0072\u006d"}:
				_aabgg.Xfrm = NewCT_TransformEffect()
				if _efage := d.DecodeElement(_aabgg.Xfrm, &_cgae); _efage != nil {
					return _efage
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0045\u0066\u0066e\u0063\u0074 \u0025\u0076", _cgae.Name)
				if _aegbc := d.Skip(); _aegbc != nil {
					return _aegbc
				}
			}
		case _d.EndElement:
			break _dgge
		case _d.CharData:
		}
	}
	return nil
}
func (_dcfca *ST_CompoundLine) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dcfca = 0
	case "\u0073\u006e\u0067":
		*_dcfca = 1
	case "\u0064\u0062\u006c":
		*_dcfca = 2
	case "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n":
		*_dcfca = 3
	case "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k":
		*_dcfca = 4
	case "\u0074\u0072\u0069":
		*_dcfca = 5
	}
	return nil
}

// Validate validates the CT_FontReference and its children
func (_ccccg *CT_FontReference) Validate() error {
	return _ccccg.ValidateWithPath("\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065")
}
func NewCT_AnimationGraphicalObjectBuildProperties() *CT_AnimationGraphicalObjectBuildProperties {
	_dfef := &CT_AnimationGraphicalObjectBuildProperties{}
	return _dfef
}
func (_gadgf *ST_TextWrappingType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_decgb, _cgdgf := d.Token()
	if _cgdgf != nil {
		return _cgdgf
	}
	if _aabca, _bcfed := _decgb.(_d.EndElement); _bcfed && _aabca.Name == start.Name {
		*_gadgf = 1
		return nil
	}
	if _effgb, _ecebf := _decgb.(_d.CharData); !_ecebf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _decgb)
	} else {
		switch string(_effgb) {
		case "":
			*_gadgf = 0
		case "\u006e\u006f\u006e\u0065":
			*_gadgf = 1
		case "\u0073\u0071\u0075\u0061\u0072\u0065":
			*_gadgf = 2
		}
	}
	_decgb, _cgdgf = d.Token()
	if _cgdgf != nil {
		return _cgdgf
	}
	if _fccdg, _caded := _decgb.(_d.EndElement); _caded && _fccdg.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _decgb)
}

type CT_ObjectStyleDefaults struct {
	SpDef  *CT_DefaultShapeDefinition
	LnDef  *CT_DefaultShapeDefinition
	TxDef  *CT_DefaultShapeDefinition
	ExtLst *CT_OfficeArtExtensionList
}

func (_ecgcee ST_TileFlipMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bcfgef := _d.Attr{}
	_bcfgef.Name = name
	switch _ecgcee {
	case ST_TileFlipModeUnset:
		_bcfgef.Value = ""
	case ST_TileFlipModeNone:
		_bcfgef.Value = "\u006e\u006f\u006e\u0065"
	case ST_TileFlipModeX:
		_bcfgef.Value = "\u0078"
	case ST_TileFlipModeY:
		_bcfgef.Value = "\u0079"
	case ST_TileFlipModeXy:
		_bcfgef.Value = "\u0078\u0079"
	}
	return _bcfgef, nil
}
func (_bbbde *CT_HSLEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfaec := range start.Attr {
		if _bfaec.Name.Local == "\u0068\u0075\u0065" {
			_dbefe, _fffbg := _cd.ParseInt(_bfaec.Value, 10, 32)
			if _fffbg != nil {
				return _fffbg
			}
			_gcfd := int32(_dbefe)
			_bbbde.HueAttr = &_gcfd
			continue
		}
		if _bfaec.Name.Local == "\u0073\u0061\u0074" {
			_abbbc, _cgafc := ParseUnionST_FixedPercentage(_bfaec.Value)
			if _cgafc != nil {
				return _cgafc
			}
			_bbbde.SatAttr = &_abbbc
			continue
		}
		if _bfaec.Name.Local == "\u006c\u0075\u006d" {
			_efecc, _fccaa := ParseUnionST_FixedPercentage(_bfaec.Value)
			if _fccaa != nil {
				return _fccaa
			}
			_bbbde.LumAttr = &_efecc
			continue
		}
	}
	for {
		_fbbab, _acgg := d.Token()
		if _acgg != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0048\u0053L\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _acgg)
		}
		if _fgegg, _bafd := _fbbab.(_d.EndElement); _bafd && _fgegg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ddbf *CT_DashStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064"}, Value: _e.Sprintf("\u0025\u0076", _ddbf.DAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070"}, Value: _e.Sprintf("\u0025\u0076", _ddbf.SpAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_FillProperties and its children, prefixing error messages with path
func (_gfdce *EG_FillProperties) ValidateWithPath(path string) error {
	if _gfdce.NoFill != nil {
		if _cggde := _gfdce.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _cggde != nil {
			return _cggde
		}
	}
	if _gfdce.SolidFill != nil {
		if _eeadb := _gfdce.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _eeadb != nil {
			return _eeadb
		}
	}
	if _gfdce.GradFill != nil {
		if _baaed := _gfdce.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _baaed != nil {
			return _baaed
		}
	}
	if _gfdce.BlipFill != nil {
		if _ddcaf := _gfdce.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _ddcaf != nil {
			return _ddcaf
		}
	}
	if _gfdce.PattFill != nil {
		if _dbgbb := _gfdce.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _dbgbb != nil {
			return _dbgbb
		}
	}
	if _gfdce.GrpFill != nil {
		if _faede := _gfdce.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _faede != nil {
			return _faede
		}
	}
	return nil
}
func (_dcbaf *CT_SoftEdgesEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", _dcbaf.RadAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egfgb ST_PresetColorVal) String() string {
	switch _egfgb {
	case 0:
		return ""
	case 1:
		return "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case 2:
		return "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case 3:
		return "\u0061\u0071\u0075\u0061"
	case 4:
		return "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 5:
		return "\u0061\u007a\u0075r\u0065"
	case 6:
		return "\u0062\u0065\u0069g\u0065"
	case 7:
		return "\u0062\u0069\u0073\u0071\u0075\u0065"
	case 8:
		return "\u0062\u006c\u0061c\u006b"
	case 9:
		return "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case 10:
		return "\u0062\u006c\u0075\u0065"
	case 11:
		return "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case 12:
		return "\u0062\u0072\u006fw\u006e"
	case 13:
		return "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case 14:
		return "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case 15:
		return "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case 16:
		return "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case 17:
		return "\u0063\u006f\u0072a\u006c"
	case 18:
		return "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case 19:
		return "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case 20:
		return "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case 21:
		return "\u0063\u0079\u0061\u006e"
	case 22:
		return "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case 23:
		return "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case 24:
		return "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 25:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case 26:
		return "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case 27:
		return "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case 28:
		return "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case 29:
		return "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case 30:
		return "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case 31:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 32:
		return "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 33:
		return "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case 34:
		return "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 35:
		return "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 36:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 37:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 38:
		return "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 39:
		return "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 40:
		return "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 41:
		return "\u0064\u006b\u0042\u006c\u0075\u0065"
	case 42:
		return "\u0064\u006b\u0043\u0079\u0061\u006e"
	case 43:
		return "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 44:
		return "\u0064\u006b\u0047\u0072\u0061\u0079"
	case 45:
		return "\u0064\u006b\u0047\u0072\u0065\u0079"
	case 46:
		return "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case 47:
		return "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case 48:
		return "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case 49:
		return "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case 50:
		return "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case 51:
		return "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case 52:
		return "\u0064\u006b\u0052e\u0064"
	case 53:
		return "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case 54:
		return "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 55:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 56:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 57:
		return "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 58:
		return "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 59:
		return "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case 60:
		return "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case 61:
		return "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 62:
		return "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case 63:
		return "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case 64:
		return "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case 65:
		return "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case 66:
		return "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case 67:
		return "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case 68:
		return "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case 69:
		return "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case 70:
		return "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case 71:
		return "\u0067\u006f\u006c\u0064"
	case 72:
		return "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case 73:
		return "\u0067\u0072\u0061\u0079"
	case 74:
		return "\u0067\u0072\u0065\u0079"
	case 75:
		return "\u0067\u0072\u0065e\u006e"
	case 76:
		return "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case 77:
		return "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case 78:
		return "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case 79:
		return "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case 80:
		return "\u0069\u006e\u0064\u0069\u0067\u006f"
	case 81:
		return "\u0069\u0076\u006fr\u0079"
	case 82:
		return "\u006b\u0068\u0061k\u0069"
	case 83:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case 84:
		return "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case 85:
		return "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case 86:
		return "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case 87:
		return "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case 88:
		return "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case 89:
		return "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case 90:
		return "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case 91:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case 92:
		return "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case 93:
		return "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case 94:
		return "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case 95:
		return "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 96:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 97:
		return "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case 98:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case 99:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case 100:
		return "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case 101:
		return "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 102:
		return "\u006c\u0074\u0042\u006c\u0075\u0065"
	case 103:
		return "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case 104:
		return "\u006c\u0074\u0043\u0079\u0061\u006e"
	case 105:
		return "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case 106:
		return "\u006c\u0074\u0047\u0072\u0061\u0079"
	case 107:
		return "\u006c\u0074\u0047\u0072\u0065\u0079"
	case 108:
		return "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case 109:
		return "\u006c\u0074\u0050\u0069\u006e\u006b"
	case 110:
		return "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case 111:
		return "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 112:
		return "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case 113:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case 114:
		return "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case 115:
		return "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case 116:
		return "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case 117:
		return "\u006c\u0069\u006d\u0065"
	case 118:
		return "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case 119:
		return "\u006c\u0069\u006ee\u006e"
	case 120:
		return "\u006da\u0067\u0065\u006e\u0074\u0061"
	case 121:
		return "\u006d\u0061\u0072\u006f\u006f\u006e"
	case 122:
		return "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 123:
		return "\u006de\u0064\u0042\u006c\u0075\u0065"
	case 124:
		return "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case 125:
		return "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case 126:
		return "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 127:
		return "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 128:
		return "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 129:
		return "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 130:
		return "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 131:
		return "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case 132:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case 133:
		return "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case 134:
		return "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case 135:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case 136:
		return "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case 137:
		return "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case 138:
		return "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 139:
		return "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 140:
		return "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case 141:
		return "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case 142:
		return "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case 143:
		return "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case 144:
		return "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case 145:
		return "\u006e\u0061\u0076\u0079"
	case 146:
		return "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case 147:
		return "\u006f\u006c\u0069v\u0065"
	case 148:
		return "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case 149:
		return "\u006f\u0072\u0061\u006e\u0067\u0065"
	case 150:
		return "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case 151:
		return "\u006f\u0072\u0063\u0068\u0069\u0064"
	case 152:
		return "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case 153:
		return "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case 154:
		return "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case 155:
		return "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case 156:
		return "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case 157:
		return "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case 158:
		return "\u0070\u0065\u0072\u0075"
	case 159:
		return "\u0070\u0069\u006e\u006b"
	case 160:
		return "\u0070\u006c\u0075\u006d"
	case 161:
		return "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case 162:
		return "\u0070\u0075\u0072\u0070\u006c\u0065"
	case 163:
		return "\u0072\u0065\u0064"
	case 164:
		return "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case 165:
		return "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case 166:
		return "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case 167:
		return "\u0073\u0061\u006c\u006d\u006f\u006e"
	case 168:
		return "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case 169:
		return "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case 170:
		return "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case 171:
		return "\u0073\u0069\u0065\u006e\u006e\u0061"
	case 172:
		return "\u0073\u0069\u006c\u0076\u0065\u0072"
	case 173:
		return "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case 174:
		return "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case 175:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case 176:
		return "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case 177:
		return "\u0073\u006e\u006f\u0077"
	case 178:
		return "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case 179:
		return "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case 180:
		return "\u0074\u0061\u006e"
	case 181:
		return "\u0074\u0065\u0061\u006c"
	case 182:
		return "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case 183:
		return "\u0074\u006f\u006d\u0061\u0074\u006f"
	case 184:
		return "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case 185:
		return "\u0076\u0069\u006f\u006c\u0065\u0074"
	case 186:
		return "\u0077\u0068\u0065a\u0074"
	case 187:
		return "\u0077\u0068\u0069t\u0065"
	case 188:
		return "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case 189:
		return "\u0079\u0065\u006c\u006c\u006f\u0077"
	case 190:
		return "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return ""
}
func (_gfbg *EG_TextGeometry) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Name.Local = "\u0061\u003a\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0047\u0065\u006fm\u0065\u0074\u0072\u0079"
	if _gfbg.CustGeom != nil {
		_feedb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0047\u0065\u006f\u006d"}}
		e.EncodeElement(_gfbg.CustGeom, _feedb)
	}
	if _gfbg.PrstTxWarp != nil {
		_deaeb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_gfbg.PrstTxWarp, _deaeb)
	}
	return nil
}

const (
	ST_SystemColorValUnset                   ST_SystemColorVal = 0
	ST_SystemColorValScrollBar               ST_SystemColorVal = 1
	ST_SystemColorValBackground              ST_SystemColorVal = 2
	ST_SystemColorValActiveCaption           ST_SystemColorVal = 3
	ST_SystemColorValInactiveCaption         ST_SystemColorVal = 4
	ST_SystemColorValMenu                    ST_SystemColorVal = 5
	ST_SystemColorValWindow                  ST_SystemColorVal = 6
	ST_SystemColorValWindowFrame             ST_SystemColorVal = 7
	ST_SystemColorValMenuText                ST_SystemColorVal = 8
	ST_SystemColorValWindowText              ST_SystemColorVal = 9
	ST_SystemColorValCaptionText             ST_SystemColorVal = 10
	ST_SystemColorValActiveBorder            ST_SystemColorVal = 11
	ST_SystemColorValInactiveBorder          ST_SystemColorVal = 12
	ST_SystemColorValAppWorkspace            ST_SystemColorVal = 13
	ST_SystemColorValHighlight               ST_SystemColorVal = 14
	ST_SystemColorValHighlightText           ST_SystemColorVal = 15
	ST_SystemColorValBtnFace                 ST_SystemColorVal = 16
	ST_SystemColorValBtnShadow               ST_SystemColorVal = 17
	ST_SystemColorValGrayText                ST_SystemColorVal = 18
	ST_SystemColorValBtnText                 ST_SystemColorVal = 19
	ST_SystemColorValInactiveCaptionText     ST_SystemColorVal = 20
	ST_SystemColorValBtnHighlight            ST_SystemColorVal = 21
	ST_SystemColorVal3dDkShadow              ST_SystemColorVal = 22
	ST_SystemColorVal3dLight                 ST_SystemColorVal = 23
	ST_SystemColorValInfoText                ST_SystemColorVal = 24
	ST_SystemColorValInfoBk                  ST_SystemColorVal = 25
	ST_SystemColorValHotLight                ST_SystemColorVal = 26
	ST_SystemColorValGradientActiveCaption   ST_SystemColorVal = 27
	ST_SystemColorValGradientInactiveCaption ST_SystemColorVal = 28
	ST_SystemColorValMenuHighlight           ST_SystemColorVal = 29
	ST_SystemColorValMenuBar                 ST_SystemColorVal = 30
)

func (_ggaaa ST_TextTabAlignType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_ggaaa.String(), start)
}
func (_bdffe *CT_TextCharBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _gacae := range start.Attr {
		if _gacae.Name.Local == "\u0063\u0068\u0061\u0072" {
			_ebgfb, _ggbgf := _gacae.Value, error(nil)
			if _ggbgf != nil {
				return _ggbgf
			}
			_bdffe.CharAttr = _ebgfb
			continue
		}
	}
	for {
		_fcdef, _aaefc := d.Token()
		if _aaefc != nil {
			return _e.Errorf("\u0070\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042\u0075\u006c\u006c\u0065\u0074: \u0025\u0073", _aaefc)
		}
		if _bgace, _edgfcc := _fcdef.(_d.EndElement); _edgfcc && _bgace.Name == start.Name {
			break
		}
	}
	return nil
}
func NewThemeOverride() *ThemeOverride {
	_fggddd := &ThemeOverride{}
	_fggddd.CT_BaseStylesOverride = *NewCT_BaseStylesOverride()
	return _fggddd
}

// ST_AdjAngle is a union type
type ST_AdjAngle struct {
	ST_Angle         *int32
	ST_GeomGuideName *string
}

func NewEG_LineDashProperties() *EG_LineDashProperties {
	_ggafbb := &EG_LineDashProperties{}
	return _ggafbb
}
func (_abef *CT_AudioCDTime) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cfgg := range start.Attr {
		if _cfgg.Name.Local == "\u0074\u0072\u0061c\u006b" {
			_cfbc, _ddg := _cd.ParseUint(_cfgg.Value, 10, 8)
			if _ddg != nil {
				return _ddg
			}
			_abef.TrackAttr = uint8(_cfbc)
			continue
		}
		if _cfgg.Name.Local == "\u0074\u0069\u006d\u0065" {
			_acb, _gef := _cd.ParseUint(_cfgg.Value, 10, 32)
			if _gef != nil {
				return _gef
			}
			_cbcd := uint32(_acb)
			_abef.TimeAttr = &_cbcd
			continue
		}
	}
	for {
		_dgfb, _fdcc := d.Token()
		if _fdcc != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0043\u0044\u0054\u0069\u006d\u0065:\u0020\u0025\u0073", _fdcc)
		}
		if _debd, _dde := _dgfb.(_d.EndElement); _dde && _debd.Name == start.Name {
			break
		}
	}
	return nil
}

type EG_TextBulletColor struct {
	BuClrTx *CT_TextBulletColorFollowText
	BuClr   *CT_Color
}
type CT_Path2DArcTo struct {
	WRAttr    ST_AdjCoordinate
	HRAttr    ST_AdjCoordinate
	StAngAttr ST_AdjAngle
	SwAngAttr ST_AdjAngle
}

func (_edeefg *ST_AnimationChartOnlyBuildType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_edeefg = 0
	case "\u0073\u0065\u0072\u0069\u0065\u0073":
		*_edeefg = 1
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
		*_edeefg = 2
	case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
		*_edeefg = 3
	case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
		*_edeefg = 4
	}
	return nil
}
func (_afbcac ST_LineEndType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_afbcac.String(), start)
}
func (_ddcd *CT_LineEndProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ddcd.TypeAttr != ST_LineEndTypeUnset {
		_cabf, _faabb := _ddcd.TypeAttr.MarshalXMLAttr(_d.Name{Local: "\u0074\u0079\u0070\u0065"})
		if _faabb != nil {
			return _faabb
		}
		start.Attr = append(start.Attr, _cabf)
	}
	if _ddcd.WAttr != ST_LineEndWidthUnset {
		_ddbb, _cdbe := _ddcd.WAttr.MarshalXMLAttr(_d.Name{Local: "\u0077"})
		if _cdbe != nil {
			return _cdbe
		}
		start.Attr = append(start.Attr, _ddbb)
	}
	if _ddcd.LenAttr != ST_LineEndLengthUnset {
		_eefd, _afced := _ddcd.LenAttr.MarshalXMLAttr(_d.Name{Local: "\u006c\u0065\u006e"})
		if _afced != nil {
			return _afced
		}
		start.Attr = append(start.Attr, _eefd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_BevelPresetTypeUnset        ST_BevelPresetType = 0
	ST_BevelPresetTypeRelaxedInset ST_BevelPresetType = 1
	ST_BevelPresetTypeCircle       ST_BevelPresetType = 2
	ST_BevelPresetTypeSlope        ST_BevelPresetType = 3
	ST_BevelPresetTypeCross        ST_BevelPresetType = 4
	ST_BevelPresetTypeAngle        ST_BevelPresetType = 5
	ST_BevelPresetTypeSoftRound    ST_BevelPresetType = 6
	ST_BevelPresetTypeConvex       ST_BevelPresetType = 7
	ST_BevelPresetTypeCoolSlant    ST_BevelPresetType = 8
	ST_BevelPresetTypeDivot        ST_BevelPresetType = 9
	ST_BevelPresetTypeRiblet       ST_BevelPresetType = 10
	ST_BevelPresetTypeHardEdge     ST_BevelPresetType = 11
	ST_BevelPresetTypeArtDeco      ST_BevelPresetType = 12
)

// Validate validates the CT_ShapeLocking and its children
func (_bbbdeef *CT_ShapeLocking) Validate() error {
	return _bbbdeef.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067")
}
func (_bbae *CT_Boolean) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _beba := range start.Attr {
		if _beba.Name.Local == "\u0076\u0061\u006c" {
			_eabe, _gbcd := ParseUnionST_OnOff(_beba.Value)
			if _gbcd != nil {
				return _gbcd
			}
			_bbae.ValAttr = &_eabe
			continue
		}
	}
	for {
		_fdbe, _dfbd := d.Token()
		if _dfbd != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073in\u0067\u0020\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e\u003a\u0020%\u0073", _dfbd)
		}
		if _dbdf, _fcb := _fdbe.(_d.EndElement); _fcb && _dbdf.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcfb *CT_AnimationDgmElement) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _dcfb.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_dcfb.IdAttr)})
	}
	if _dcfb.BldStepAttr != ST_DgmBuildStepUnset {
		_bfgg, _dcc := _dcfb.BldStepAttr.MarshalXMLAttr(_d.Name{Local: "\u0062l\u0064\u0053\u0074\u0065\u0070"})
		if _dcc != nil {
			return _dcc
		}
		start.Attr = append(start.Attr, _bfgg)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_agebe *CT_Path2DLineTo) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_gbeag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0074"}}
	e.EncodeElement(_agebe.Pt, _gbeag)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgfab *ST_AdjCoordinate) Validate() error { return _cgfab.ValidateWithPath("") }
func (_cbffa ST_PathFillMode) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_adcagc := _d.Attr{}
	_adcagc.Name = name
	switch _cbffa {
	case ST_PathFillModeUnset:
		_adcagc.Value = ""
	case ST_PathFillModeNone:
		_adcagc.Value = "\u006e\u006f\u006e\u0065"
	case ST_PathFillModeNorm:
		_adcagc.Value = "\u006e\u006f\u0072\u006d"
	case ST_PathFillModeLighten:
		_adcagc.Value = "\u006ci\u0067\u0068\u0074\u0065\u006e"
	case ST_PathFillModeLightenLess:
		_adcagc.Value = "l\u0069\u0067\u0068\u0074\u0065\u006e\u004c\u0065\u0073\u0073"
	case ST_PathFillModeDarken:
		_adcagc.Value = "\u0064\u0061\u0072\u006b\u0065\u006e"
	case ST_PathFillModeDarkenLess:
		_adcagc.Value = "\u0064\u0061\u0072\u006b\u0065\u006e\u004c\u0065\u0073\u0073"
	}
	return _adcagc, nil
}
func (_eddaa *CT_TableStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0066"}, Value: _e.Sprintf("\u0025\u0076", _eddaa.DefAttr)})
	e.EncodeToken(start)
	if _eddaa.TblStyle != nil {
		_eagca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0062\u006c\u0053\u0074\u0079\u006c\u0065"}}
		for _, _cgdb := range _eddaa.TblStyle {
			e.EncodeElement(_cgdb, _eagca)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_AlphaCeilingEffect and its children, prefixing error messages with path
func (_fcad *CT_AlphaCeilingEffect) ValidateWithPath(path string) error { return nil }
func (_ffdfd *ST_TextTabAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_ffdfd = 0
	case "\u006c":
		*_ffdfd = 1
	case "\u0063\u0074\u0072":
		*_ffdfd = 2
	case "\u0072":
		*_ffdfd = 3
	case "\u0064\u0065\u0063":
		*_ffdfd = 4
	}
	return nil
}

// ValidateWithPath validates the CT_GradientFillProperties and its children, prefixing error messages with path
func (_afagg *CT_GradientFillProperties) ValidateWithPath(path string) error {
	if _ddfg := _afagg.FlipAttr.ValidateWithPath(path + "\u002fF\u006c\u0069\u0070\u0041\u0074\u0074r"); _ddfg != nil {
		return _ddfg
	}
	if _afagg.GsLst != nil {
		if _bffe := _afagg.GsLst.ValidateWithPath(path + "\u002f\u0047\u0073\u004c\u0073\u0074"); _bffe != nil {
			return _bffe
		}
	}
	if _afagg.Lin != nil {
		if _gebc := _afagg.Lin.ValidateWithPath(path + "\u002f\u004c\u0069\u006e"); _gebc != nil {
			return _gebc
		}
	}
	if _afagg.Path != nil {
		if _bacgf := _afagg.Path.ValidateWithPath(path + "\u002f\u0050\u0061t\u0068"); _bacgf != nil {
			return _bacgf
		}
	}
	if _afagg.TileRect != nil {
		if _dceab := _afagg.TileRect.ValidateWithPath(path + "\u002fT\u0069\u006c\u0065\u0052\u0065\u0063t"); _dceab != nil {
			return _dceab
		}
	}
	return nil
}

const (
	ST_ShapeTypeUnset                      ST_ShapeType = 0
	ST_ShapeTypeLine                       ST_ShapeType = 1
	ST_ShapeTypeLineInv                    ST_ShapeType = 2
	ST_ShapeTypeTriangle                   ST_ShapeType = 3
	ST_ShapeTypeRtTriangle                 ST_ShapeType = 4
	ST_ShapeTypeRect                       ST_ShapeType = 5
	ST_ShapeTypeDiamond                    ST_ShapeType = 6
	ST_ShapeTypeParallelogram              ST_ShapeType = 7
	ST_ShapeTypeTrapezoid                  ST_ShapeType = 8
	ST_ShapeTypeNonIsoscelesTrapezoid      ST_ShapeType = 9
	ST_ShapeTypePentagon                   ST_ShapeType = 10
	ST_ShapeTypeHexagon                    ST_ShapeType = 11
	ST_ShapeTypeHeptagon                   ST_ShapeType = 12
	ST_ShapeTypeOctagon                    ST_ShapeType = 13
	ST_ShapeTypeDecagon                    ST_ShapeType = 14
	ST_ShapeTypeDodecagon                  ST_ShapeType = 15
	ST_ShapeTypeStar4                      ST_ShapeType = 16
	ST_ShapeTypeStar5                      ST_ShapeType = 17
	ST_ShapeTypeStar6                      ST_ShapeType = 18
	ST_ShapeTypeStar7                      ST_ShapeType = 19
	ST_ShapeTypeStar8                      ST_ShapeType = 20
	ST_ShapeTypeStar10                     ST_ShapeType = 21
	ST_ShapeTypeStar12                     ST_ShapeType = 22
	ST_ShapeTypeStar16                     ST_ShapeType = 23
	ST_ShapeTypeStar24                     ST_ShapeType = 24
	ST_ShapeTypeStar32                     ST_ShapeType = 25
	ST_ShapeTypeRoundRect                  ST_ShapeType = 26
	ST_ShapeTypeRound1Rect                 ST_ShapeType = 27
	ST_ShapeTypeRound2SameRect             ST_ShapeType = 28
	ST_ShapeTypeRound2DiagRect             ST_ShapeType = 29
	ST_ShapeTypeSnipRoundRect              ST_ShapeType = 30
	ST_ShapeTypeSnip1Rect                  ST_ShapeType = 31
	ST_ShapeTypeSnip2SameRect              ST_ShapeType = 32
	ST_ShapeTypeSnip2DiagRect              ST_ShapeType = 33
	ST_ShapeTypePlaque                     ST_ShapeType = 34
	ST_ShapeTypeEllipse                    ST_ShapeType = 35
	ST_ShapeTypeTeardrop                   ST_ShapeType = 36
	ST_ShapeTypeHomePlate                  ST_ShapeType = 37
	ST_ShapeTypeChevron                    ST_ShapeType = 38
	ST_ShapeTypePieWedge                   ST_ShapeType = 39
	ST_ShapeTypePie                        ST_ShapeType = 40
	ST_ShapeTypeBlockArc                   ST_ShapeType = 41
	ST_ShapeTypeDonut                      ST_ShapeType = 42
	ST_ShapeTypeNoSmoking                  ST_ShapeType = 43
	ST_ShapeTypeRightArrow                 ST_ShapeType = 44
	ST_ShapeTypeLeftArrow                  ST_ShapeType = 45
	ST_ShapeTypeUpArrow                    ST_ShapeType = 46
	ST_ShapeTypeDownArrow                  ST_ShapeType = 47
	ST_ShapeTypeStripedRightArrow          ST_ShapeType = 48
	ST_ShapeTypeNotchedRightArrow          ST_ShapeType = 49
	ST_ShapeTypeBentUpArrow                ST_ShapeType = 50
	ST_ShapeTypeLeftRightArrow             ST_ShapeType = 51
	ST_ShapeTypeUpDownArrow                ST_ShapeType = 52
	ST_ShapeTypeLeftUpArrow                ST_ShapeType = 53
	ST_ShapeTypeLeftRightUpArrow           ST_ShapeType = 54
	ST_ShapeTypeQuadArrow                  ST_ShapeType = 55
	ST_ShapeTypeLeftArrowCallout           ST_ShapeType = 56
	ST_ShapeTypeRightArrowCallout          ST_ShapeType = 57
	ST_ShapeTypeUpArrowCallout             ST_ShapeType = 58
	ST_ShapeTypeDownArrowCallout           ST_ShapeType = 59
	ST_ShapeTypeLeftRightArrowCallout      ST_ShapeType = 60
	ST_ShapeTypeUpDownArrowCallout         ST_ShapeType = 61
	ST_ShapeTypeQuadArrowCallout           ST_ShapeType = 62
	ST_ShapeTypeBentArrow                  ST_ShapeType = 63
	ST_ShapeTypeUturnArrow                 ST_ShapeType = 64
	ST_ShapeTypeCircularArrow              ST_ShapeType = 65
	ST_ShapeTypeLeftCircularArrow          ST_ShapeType = 66
	ST_ShapeTypeLeftRightCircularArrow     ST_ShapeType = 67
	ST_ShapeTypeCurvedRightArrow           ST_ShapeType = 68
	ST_ShapeTypeCurvedLeftArrow            ST_ShapeType = 69
	ST_ShapeTypeCurvedUpArrow              ST_ShapeType = 70
	ST_ShapeTypeCurvedDownArrow            ST_ShapeType = 71
	ST_ShapeTypeSwooshArrow                ST_ShapeType = 72
	ST_ShapeTypeCube                       ST_ShapeType = 73
	ST_ShapeTypeCan                        ST_ShapeType = 74
	ST_ShapeTypeLightningBolt              ST_ShapeType = 75
	ST_ShapeTypeHeart                      ST_ShapeType = 76
	ST_ShapeTypeSun                        ST_ShapeType = 77
	ST_ShapeTypeMoon                       ST_ShapeType = 78
	ST_ShapeTypeSmileyFace                 ST_ShapeType = 79
	ST_ShapeTypeIrregularSeal1             ST_ShapeType = 80
	ST_ShapeTypeIrregularSeal2             ST_ShapeType = 81
	ST_ShapeTypeFoldedCorner               ST_ShapeType = 82
	ST_ShapeTypeBevel                      ST_ShapeType = 83
	ST_ShapeTypeFrame                      ST_ShapeType = 84
	ST_ShapeTypeHalfFrame                  ST_ShapeType = 85
	ST_ShapeTypeCorner                     ST_ShapeType = 86
	ST_ShapeTypeDiagStripe                 ST_ShapeType = 87
	ST_ShapeTypeChord                      ST_ShapeType = 88
	ST_ShapeTypeArc                        ST_ShapeType = 89
	ST_ShapeTypeLeftBracket                ST_ShapeType = 90
	ST_ShapeTypeRightBracket               ST_ShapeType = 91
	ST_ShapeTypeLeftBrace                  ST_ShapeType = 92
	ST_ShapeTypeRightBrace                 ST_ShapeType = 93
	ST_ShapeTypeBracketPair                ST_ShapeType = 94
	ST_ShapeTypeBracePair                  ST_ShapeType = 95
	ST_ShapeTypeStraightConnector1         ST_ShapeType = 96
	ST_ShapeTypeBentConnector2             ST_ShapeType = 97
	ST_ShapeTypeBentConnector3             ST_ShapeType = 98
	ST_ShapeTypeBentConnector4             ST_ShapeType = 99
	ST_ShapeTypeBentConnector5             ST_ShapeType = 100
	ST_ShapeTypeCurvedConnector2           ST_ShapeType = 101
	ST_ShapeTypeCurvedConnector3           ST_ShapeType = 102
	ST_ShapeTypeCurvedConnector4           ST_ShapeType = 103
	ST_ShapeTypeCurvedConnector5           ST_ShapeType = 104
	ST_ShapeTypeCallout1                   ST_ShapeType = 105
	ST_ShapeTypeCallout2                   ST_ShapeType = 106
	ST_ShapeTypeCallout3                   ST_ShapeType = 107
	ST_ShapeTypeAccentCallout1             ST_ShapeType = 108
	ST_ShapeTypeAccentCallout2             ST_ShapeType = 109
	ST_ShapeTypeAccentCallout3             ST_ShapeType = 110
	ST_ShapeTypeBorderCallout1             ST_ShapeType = 111
	ST_ShapeTypeBorderCallout2             ST_ShapeType = 112
	ST_ShapeTypeBorderCallout3             ST_ShapeType = 113
	ST_ShapeTypeAccentBorderCallout1       ST_ShapeType = 114
	ST_ShapeTypeAccentBorderCallout2       ST_ShapeType = 115
	ST_ShapeTypeAccentBorderCallout3       ST_ShapeType = 116
	ST_ShapeTypeWedgeRectCallout           ST_ShapeType = 117
	ST_ShapeTypeWedgeRoundRectCallout      ST_ShapeType = 118
	ST_ShapeTypeWedgeEllipseCallout        ST_ShapeType = 119
	ST_ShapeTypeCloudCallout               ST_ShapeType = 120
	ST_ShapeTypeCloud                      ST_ShapeType = 121
	ST_ShapeTypeRibbon                     ST_ShapeType = 122
	ST_ShapeTypeRibbon2                    ST_ShapeType = 123
	ST_ShapeTypeEllipseRibbon              ST_ShapeType = 124
	ST_ShapeTypeEllipseRibbon2             ST_ShapeType = 125
	ST_ShapeTypeLeftRightRibbon            ST_ShapeType = 126
	ST_ShapeTypeVerticalScroll             ST_ShapeType = 127
	ST_ShapeTypeHorizontalScroll           ST_ShapeType = 128
	ST_ShapeTypeWave                       ST_ShapeType = 129
	ST_ShapeTypeDoubleWave                 ST_ShapeType = 130
	ST_ShapeTypePlus                       ST_ShapeType = 131
	ST_ShapeTypeFlowChartProcess           ST_ShapeType = 132
	ST_ShapeTypeFlowChartDecision          ST_ShapeType = 133
	ST_ShapeTypeFlowChartInputOutput       ST_ShapeType = 134
	ST_ShapeTypeFlowChartPredefinedProcess ST_ShapeType = 135
	ST_ShapeTypeFlowChartInternalStorage   ST_ShapeType = 136
	ST_ShapeTypeFlowChartDocument          ST_ShapeType = 137
	ST_ShapeTypeFlowChartMultidocument     ST_ShapeType = 138
	ST_ShapeTypeFlowChartTerminator        ST_ShapeType = 139
	ST_ShapeTypeFlowChartPreparation       ST_ShapeType = 140
	ST_ShapeTypeFlowChartManualInput       ST_ShapeType = 141
	ST_ShapeTypeFlowChartManualOperation   ST_ShapeType = 142
	ST_ShapeTypeFlowChartConnector         ST_ShapeType = 143
	ST_ShapeTypeFlowChartPunchedCard       ST_ShapeType = 144
	ST_ShapeTypeFlowChartPunchedTape       ST_ShapeType = 145
	ST_ShapeTypeFlowChartSummingJunction   ST_ShapeType = 146
	ST_ShapeTypeFlowChartOr                ST_ShapeType = 147
	ST_ShapeTypeFlowChartCollate           ST_ShapeType = 148
	ST_ShapeTypeFlowChartSort              ST_ShapeType = 149
	ST_ShapeTypeFlowChartExtract           ST_ShapeType = 150
	ST_ShapeTypeFlowChartMerge             ST_ShapeType = 151
	ST_ShapeTypeFlowChartOfflineStorage    ST_ShapeType = 152
	ST_ShapeTypeFlowChartOnlineStorage     ST_ShapeType = 153
	ST_ShapeTypeFlowChartMagneticTape      ST_ShapeType = 154
	ST_ShapeTypeFlowChartMagneticDisk      ST_ShapeType = 155
	ST_ShapeTypeFlowChartMagneticDrum      ST_ShapeType = 156
	ST_ShapeTypeFlowChartDisplay           ST_ShapeType = 157
	ST_ShapeTypeFlowChartDelay             ST_ShapeType = 158
	ST_ShapeTypeFlowChartAlternateProcess  ST_ShapeType = 159
	ST_ShapeTypeFlowChartOffpageConnector  ST_ShapeType = 160
	ST_ShapeTypeActionButtonBlank          ST_ShapeType = 161
	ST_ShapeTypeActionButtonHome           ST_ShapeType = 162
	ST_ShapeTypeActionButtonHelp           ST_ShapeType = 163
	ST_ShapeTypeActionButtonInformation    ST_ShapeType = 164
	ST_ShapeTypeActionButtonForwardNext    ST_ShapeType = 165
	ST_ShapeTypeActionButtonBackPrevious   ST_ShapeType = 166
	ST_ShapeTypeActionButtonEnd            ST_ShapeType = 167
	ST_ShapeTypeActionButtonBeginning      ST_ShapeType = 168
	ST_ShapeTypeActionButtonReturn         ST_ShapeType = 169
	ST_ShapeTypeActionButtonDocument       ST_ShapeType = 170
	ST_ShapeTypeActionButtonSound          ST_ShapeType = 171
	ST_ShapeTypeActionButtonMovie          ST_ShapeType = 172
	ST_ShapeTypeGear6                      ST_ShapeType = 173
	ST_ShapeTypeGear9                      ST_ShapeType = 174
	ST_ShapeTypeFunnel                     ST_ShapeType = 175
	ST_ShapeTypeMathPlus                   ST_ShapeType = 176
	ST_ShapeTypeMathMinus                  ST_ShapeType = 177
	ST_ShapeTypeMathMultiply               ST_ShapeType = 178
	ST_ShapeTypeMathDivide                 ST_ShapeType = 179
	ST_ShapeTypeMathEqual                  ST_ShapeType = 180
	ST_ShapeTypeMathNotEqual               ST_ShapeType = 181
	ST_ShapeTypeCornerTabs                 ST_ShapeType = 182
	ST_ShapeTypeSquareTabs                 ST_ShapeType = 183
	ST_ShapeTypePlaqueTabs                 ST_ShapeType = 184
	ST_ShapeTypeChartX                     ST_ShapeType = 185
	ST_ShapeTypeChartStar                  ST_ShapeType = 186
	ST_ShapeTypeChartPlus                  ST_ShapeType = 187
)

// Validate validates the CT_Angle and its children
func (_cacf *CT_Angle) Validate() error {
	return _cacf.ValidateWithPath("\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065")
}
func NewCT_TileInfoProperties() *CT_TileInfoProperties {
	_ecfga := &CT_TileInfoProperties{}
	return _ecfga
}
func (_afdfc *CT_BackgroundFillStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ccff:
	for {
		_fdgg, _aeeg := d.Token()
		if _aeeg != nil {
			return _aeeg
		}
		switch _aece := _fdgg.(type) {
		case _d.StartElement:
			switch _aece.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_aaac := NewEG_FillProperties()
				_aaac.NoFill = NewCT_NoFillProperties()
				if _fgb := d.DecodeElement(_aaac.NoFill, &_aece); _fgb != nil {
					return _fgb
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _aaac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_eafd := NewEG_FillProperties()
				_eafd.SolidFill = NewCT_SolidColorFillProperties()
				if _ccga := d.DecodeElement(_eafd.SolidFill, &_aece); _ccga != nil {
					return _ccga
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _eafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_faac := NewEG_FillProperties()
				_faac.GradFill = NewCT_GradientFillProperties()
				if _aeaa := d.DecodeElement(_faac.GradFill, &_aece); _aeaa != nil {
					return _aeaa
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _faac)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_eced := NewEG_FillProperties()
				_eced.BlipFill = NewCT_BlipFillProperties()
				if _bdg := d.DecodeElement(_eced.BlipFill, &_aece); _bdg != nil {
					return _bdg
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _eced)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_adeg := NewEG_FillProperties()
				_adeg.PattFill = NewCT_PatternFillProperties()
				if _cfcfg := d.DecodeElement(_adeg.PattFill, &_aece); _cfcfg != nil {
					return _cfcfg
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _adeg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_acdb := NewEG_FillProperties()
				_acdb.GrpFill = NewCT_GroupFillProperties()
				if _ebad := d.DecodeElement(_acdb.GrpFill, &_aece); _ebad != nil {
					return _ebad
				}
				_afdfc.EG_FillProperties = append(_afdfc.EG_FillProperties, _acdb)
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0042\u0061c\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _aece.Name)
				if _bfcd := d.Skip(); _bfcd != nil {
					return _bfcd
				}
			}
		case _d.EndElement:
			break _ccff
		case _d.CharData:
		}
	}
	return nil
}
func (_fcfg *CT_CustomColorList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fcfg.CustClr != nil {
		_edef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0075\u0073\u0074\u0043\u006cr"}}
		for _, _bddef := range _fcfg.CustClr {
			e.EncodeElement(_bddef, _edef)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_eegcdg *CT_FlatText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fegb := range start.Attr {
		if _fegb.Name.Local == "\u007a" {
			_gffa, _fggca := ParseUnionST_Coordinate(_fegb.Value)
			if _fggca != nil {
				return _fggca
			}
			_eegcdg.ZAttr = &_gffa
			continue
		}
	}
	for {
		_ddafg, _bfeab := d.Token()
		if _bfeab != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _bfeab)
		}
		if _ebcb, _bdag := _ddafg.(_d.EndElement); _bdag && _ebcb.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_BackgroundFormatting and its children
func (_cbbg *CT_BackgroundFormatting) Validate() error {
	return _cbbg.ValidateWithPath("\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067")
}
func NewCT_DuotoneEffect() *CT_DuotoneEffect { _daaca := &CT_DuotoneEffect{}; return _daaca }

// ValidateWithPath validates the CT_GvmlConnectorNonVisual and its children, prefixing error messages with path
func (_ffad *CT_GvmlConnectorNonVisual) ValidateWithPath(path string) error {
	if _ffgab := _ffad.CNvPr.ValidateWithPath(path + "\u002f\u0043\u004e\u0076\u0050\u0072"); _ffgab != nil {
		return _ffgab
	}
	if _eagdg := _ffad.CNvCxnSpPr.ValidateWithPath(path + "/\u0043\u004e\u0076\u0043\u0078\u006e\u0053\u0070\u0050\u0072"); _eagdg != nil {
		return _eagdg
	}
	return nil
}
func (_afddb ST_OnOffStyleType) Validate() error { return _afddb.ValidateWithPath("") }

// Validate validates the CT_GroupFillProperties and its children
func (_gcee *CT_GroupFillProperties) Validate() error {
	return _gcee.ValidateWithPath("\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}

// ValidateWithPath validates the CT_CustomColorList and its children, prefixing error messages with path
func (_bcfcd *CT_CustomColorList) ValidateWithPath(path string) error {
	for _feab, _bdeg := range _bcfcd.CustClr {
		if _ddaff := _bdeg.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0073\u0074\u0043\u006cr\u005b\u0025\u0064\u005d", path, _feab)); _ddaff != nil {
			return _ddaff
		}
	}
	return nil
}

// Validate validates the CT_ColorMRU and its children
func (_bfbf *CT_ColorMRU) Validate() error {
	return _bfbf.ValidateWithPath("C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055")
}
func (_abaecf ST_TextStrikeType) Validate() error { return _abaecf.ValidateWithPath("") }
func (_eefad *ST_TextTabAlignType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edged, _aggea := d.Token()
	if _aggea != nil {
		return _aggea
	}
	if _fcgdga, _dbbeb := _edged.(_d.EndElement); _dbbeb && _fcgdga.Name == start.Name {
		*_eefad = 1
		return nil
	}
	if _ddbdg, _bebbb := _edged.(_d.CharData); !_bebbb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edged)
	} else {
		switch string(_ddbdg) {
		case "":
			*_eefad = 0
		case "\u006c":
			*_eefad = 1
		case "\u0063\u0074\u0072":
			*_eefad = 2
		case "\u0072":
			*_eefad = 3
		case "\u0064\u0065\u0063":
			*_eefad = 4
		}
	}
	_edged, _aggea = d.Token()
	if _aggea != nil {
		return _aggea
	}
	if _bagdb, _ddggg := _edged.(_d.EndElement); _ddggg && _bagdb.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edged)
}
func (_agdcd *ST_TextVerticalType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gceeec, _acbba := d.Token()
	if _acbba != nil {
		return _acbba
	}
	if _acceg, _aaecb := _gceeec.(_d.EndElement); _aaecb && _acceg.Name == start.Name {
		*_agdcd = 1
		return nil
	}
	if _gdgae, _bfbbc := _gceeec.(_d.CharData); !_bfbbc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gceeec)
	} else {
		switch string(_gdgae) {
		case "":
			*_agdcd = 0
		case "\u0068\u006f\u0072\u007a":
			*_agdcd = 1
		case "\u0076\u0065\u0072\u0074":
			*_agdcd = 2
		case "\u0076e\u0072\u0074\u0032\u0037\u0030":
			*_agdcd = 3
		case "w\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065\u0072\u0074":
			*_agdcd = 4
		case "\u0065\u0061\u0056\u0065\u0072\u0074":
			*_agdcd = 5
		case "\u006d\u006f\u006e\u0067\u006f\u006c\u0069\u0061\u006e\u0056\u0065\u0072\u0074":
			*_agdcd = 6
		case "\u0077\u006f\u0072\u0064\u0041\u0072\u0074\u0056\u0065r\u0074\u0052\u0074\u006c":
			*_agdcd = 7
		}
	}
	_gceeec, _acbba = d.Token()
	if _acbba != nil {
		return _acbba
	}
	if _bgdbd, _gcbgdfg := _gceeec.(_d.EndElement); _gcbgdfg && _bgdbd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gceeec)
}

type CT_Bevel struct {
	WAttr    *int64
	HAttr    *int64
	PrstAttr ST_BevelPresetType
}
type CT_Point2D struct {
	XAttr ST_Coordinate
	YAttr ST_Coordinate
}

func (_fed *CT_BackgroundFillStyleList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	for _, _fgda := range _fed.EG_FillProperties {
		_fgda.MarshalXML(e, _d.StartElement{})
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_LineEndProperties and its children, prefixing error messages with path
func (_cdffc *CT_LineEndProperties) ValidateWithPath(path string) error {
	if _dbgd := _cdffc.TypeAttr.ValidateWithPath(path + "\u002fT\u0079\u0070\u0065\u0041\u0074\u0074r"); _dbgd != nil {
		return _dbgd
	}
	if _ecaa := _cdffc.WAttr.ValidateWithPath(path + "\u002f\u0057\u0041\u0074\u0074\u0072"); _ecaa != nil {
		return _ecaa
	}
	if _ffcbb := _cdffc.LenAttr.ValidateWithPath(path + "\u002f\u004c\u0065\u006e\u0041\u0074\u0074\u0072"); _ffcbb != nil {
		return _ffcbb
	}
	return nil
}
func (_eefae *CT_TableProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eefae.RtlAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.RtlAttr))})
	}
	if _eefae.FirstRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.FirstRowAttr))})
	}
	if _eefae.FirstColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.FirstColAttr))})
	}
	if _eefae.LastRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0052\u006f\u0077"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.LastRowAttr))})
	}
	if _eefae.LastColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006ca\u0073\u0074\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.LastColAttr))})
	}
	if _eefae.BandRowAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u006e\u0064\u0052\u006f\u0077"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.BandRowAttr))})
	}
	if _eefae.BandColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062a\u006e\u0064\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eefae.BandColAttr))})
	}
	e.EncodeToken(start)
	if _eefae.NoFill != nil {
		_degg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eefae.NoFill, _degg)
	}
	if _eefae.SolidFill != nil {
		_ageba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eefae.SolidFill, _ageba)
	}
	if _eefae.GradFill != nil {
		_dedg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eefae.GradFill, _dedg)
	}
	if _eefae.BlipFill != nil {
		_ffdbe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eefae.BlipFill, _ffdbe)
	}
	if _eefae.PattFill != nil {
		_acfeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_eefae.PattFill, _acfeg)
	}
	if _eefae.GrpFill != nil {
		_bfcgb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_eefae.GrpFill, _bfcgb)
	}
	if _eefae.EffectLst != nil {
		_abbgae := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eefae.EffectLst, _abbgae)
	}
	if _eefae.EffectDag != nil {
		_dffg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_eefae.EffectDag, _dffg)
	}
	if _eefae.Choice != nil {
		_eefae.Choice.MarshalXML(e, _d.StartElement{})
	}
	if _eefae.ExtLst != nil {
		_dgcae := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eefae.ExtLst, _dgcae)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewAG_Blob() *AG_Blob { _fc := &AG_Blob{}; return _fc }

// Validate validates the CT_InverseTransform and its children
func (_eeecb *CT_InverseTransform) Validate() error {
	return _eeecb.ValidateWithPath("\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d")
}

type ST_PathShadeType byte

func (_fgegc *CT_TableBackgroundStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dfage:
	for {
		_bacdc, _fffbga := d.Token()
		if _fffbga != nil {
			return _fffbga
		}
		switch _aabb := _bacdc.(type) {
		case _d.StartElement:
			switch _aabb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_fgegc.Fill = NewCT_FillProperties()
				if _cecfg := d.DecodeElement(_fgegc.Fill, &_aabb); _cecfg != nil {
					return _cecfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_fgegc.FillRef = NewCT_StyleMatrixReference()
				if _eafe := d.DecodeElement(_fgegc.FillRef, &_aabb); _eafe != nil {
					return _eafe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0066\u0066\u0065\u0063\u0074"}:
				_fgegc.Effect = NewCT_EffectProperties()
				if _ccaba := d.DecodeElement(_fgegc.Effect, &_aabb); _ccaba != nil {
					return _ccaba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				_fgegc.EffectRef = NewCT_StyleMatrixReference()
				if _efebe := d.DecodeElement(_fgegc.EffectRef, &_aabb); _efebe != nil {
					return _efebe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0042\u0061\u0063\u006bg\u0072\u006f\u0075\u006e\u0064\u0053t\u0079\u006c\u0065 \u0025\u0076", _aabb.Name)
				if _ecfdbg := d.Skip(); _ecfdbg != nil {
					return _ecfdbg
				}
			}
		case _d.EndElement:
			break _dfage
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GammaTransform and its children
func (_fbdcc *CT_GammaTransform) Validate() error {
	return _fbdcc.ValidateWithPath("\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

// ValidateWithPath validates the CT_NonVisualDrawingProps and its children, prefixing error messages with path
func (_edbga *CT_NonVisualDrawingProps) ValidateWithPath(path string) error {
	if _edbga.HlinkClick != nil {
		if _daec := _edbga.HlinkClick.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"); _daec != nil {
			return _daec
		}
	}
	if _edbga.HlinkHover != nil {
		if _gaed := _edbga.HlinkHover.ValidateWithPath(path + "/\u0048\u006c\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"); _gaed != nil {
			return _gaed
		}
	}
	if _edbga.ExtLst != nil {
		if _fgcb := _edbga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _fgcb != nil {
			return _fgcb
		}
	}
	return nil
}
func (_ccaefd ST_LightRigType) ValidateWithPath(path string) error {
	switch _ccaefd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_ccaefd))
	}
	return nil
}
func (_cgbaa *CT_TableBackgroundStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _cgbaa.Fill != nil {
		_gcbf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c"}}
		e.EncodeElement(_cgbaa.Fill, _gcbf)
	}
	if _cgbaa.FillRef != nil {
		_dcgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0066\u0069\u006c\u006c\u0052\u0065f"}}
		e.EncodeElement(_cgbaa.FillRef, _dcgc)
	}
	if _cgbaa.Effect != nil {
		_gdaff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0066\u0066\u0065\u0063\u0074"}}
		e.EncodeElement(_cgbaa.Effect, _gdaff)
	}
	if _cgbaa.EffectRef != nil {
		_efdf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0052\u0065\u0066"}}
		e.EncodeElement(_cgbaa.EffectRef, _efdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Path2DLineTo struct{ Pt *CT_AdjPoint2D }

func (_addfa *CT_TextSpacing) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _addfa.SpcPct != nil {
		_dcfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0063\u0074"}}
		e.EncodeElement(_addfa.SpcPct, _dcfg)
	}
	if _addfa.SpcPts != nil {
		_faegga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0063\u0050\u0074\u0073"}}
		e.EncodeElement(_addfa.SpcPts, _faegga)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_fbggd *CT_CustomColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fbggd.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_fbggd.NameAttr)})
	}
	e.EncodeToken(start)
	if _fbggd.ScrgbClr != nil {
		_caea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_fbggd.ScrgbClr, _caea)
	}
	if _fbggd.SrgbClr != nil {
		_bedf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_fbggd.SrgbClr, _bedf)
	}
	if _fbggd.HslClr != nil {
		_aaca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_fbggd.HslClr, _aaca)
	}
	if _fbggd.SysClr != nil {
		_bacf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_fbggd.SysClr, _bacf)
	}
	if _fbggd.SchemeClr != nil {
		_abfe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_fbggd.SchemeClr, _abfe)
	}
	if _fbggd.PrstClr != nil {
		_ddgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_fbggd.PrstClr, _ddgf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_BlurEffect struct {
	RadAttr  *int64
	GrowAttr *bool
}

func (_gfaa *CT_BlipFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bfge := range start.Attr {
		if _bfge.Name.Local == "\u0064\u0070\u0069" {
			_bbag, _fabe := _cd.ParseUint(_bfge.Value, 10, 32)
			if _fabe != nil {
				return _fabe
			}
			_bdd := uint32(_bbag)
			_gfaa.DpiAttr = &_bdd
			continue
		}
		if _bfge.Name.Local == "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065" {
			_egegf, _gcfb := _cd.ParseBool(_bfge.Value)
			if _gcfb != nil {
				return _gcfb
			}
			_gfaa.RotWithShapeAttr = &_egegf
			continue
		}
	}
_eegc:
	for {
		_caad, _dddbg := d.Token()
		if _dddbg != nil {
			return _dddbg
		}
		switch _abg := _caad.(type) {
		case _d.StartElement:
			switch _abg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070"}:
				_gfaa.Blip = NewCT_Blip()
				if _egbe := d.DecodeElement(_gfaa.Blip, &_abg); _egbe != nil {
					return _egbe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0063\u0052\u0065\u0063\u0074"}:
				_gfaa.SrcRect = NewCT_RelativeRect()
				if _adgc := d.DecodeElement(_gfaa.SrcRect, &_abg); _adgc != nil {
					return _adgc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_gfaa.Tile = NewCT_TileInfoProperties()
				if _faadd := d.DecodeElement(_gfaa.Tile, &_abg); _faadd != nil {
					return _faadd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_gfaa.Stretch = NewCT_StretchInfoProperties()
				if _aabc := d.DecodeElement(_gfaa.Stretch, &_abg); _aabc != nil {
					return _aabc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0042\u006c\u0069\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _abg.Name)
				if _dcga := d.Skip(); _dcga != nil {
					return _dcga
				}
			}
		case _d.EndElement:
			break _eegc
		case _d.CharData:
		}
	}
	return nil
}

type CT_GvmlGraphicalObjectFrame struct {
	NvGraphicFramePr *CT_GvmlGraphicFrameNonVisual
	Graphic          *Graphic
	Xfrm             *CT_Transform2D
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_LightRig() *CT_LightRig {
	_fadec := &CT_LightRig{}
	_fadec.RigAttr = ST_LightRigType(1)
	_fadec.DirAttr = ST_LightRigDirection(1)
	return _fadec
}
func (_gcgcba ST_TextWrappingType) Validate() error { return _gcgcba.ValidateWithPath("") }

type CT_Boolean struct{ ValAttr *_a.ST_OnOff }

func (_cdffb ST_SchemeColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_aabae := _d.Attr{}
	_aabae.Name = name
	switch _cdffb {
	case ST_SchemeColorValUnset:
		_aabae.Value = ""
	case ST_SchemeColorValBg1:
		_aabae.Value = "\u0062\u0067\u0031"
	case ST_SchemeColorValTx1:
		_aabae.Value = "\u0074\u0078\u0031"
	case ST_SchemeColorValBg2:
		_aabae.Value = "\u0062\u0067\u0032"
	case ST_SchemeColorValTx2:
		_aabae.Value = "\u0074\u0078\u0032"
	case ST_SchemeColorValAccent1:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0031"
	case ST_SchemeColorValAccent2:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0032"
	case ST_SchemeColorValAccent3:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0033"
	case ST_SchemeColorValAccent4:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0034"
	case ST_SchemeColorValAccent5:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0035"
	case ST_SchemeColorValAccent6:
		_aabae.Value = "\u0061c\u0063\u0065\u006e\u0074\u0036"
	case ST_SchemeColorValHlink:
		_aabae.Value = "\u0068\u006c\u0069n\u006b"
	case ST_SchemeColorValFolHlink:
		_aabae.Value = "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"
	case ST_SchemeColorValPhClr:
		_aabae.Value = "\u0070\u0068\u0043l\u0072"
	case ST_SchemeColorValDk1:
		_aabae.Value = "\u0064\u006b\u0031"
	case ST_SchemeColorValLt1:
		_aabae.Value = "\u006c\u0074\u0031"
	case ST_SchemeColorValDk2:
		_aabae.Value = "\u0064\u006b\u0032"
	case ST_SchemeColorValLt2:
		_aabae.Value = "\u006c\u0074\u0032"
	}
	return _aabae, nil
}
func ParseUnionST_Percentage(s string) (ST_Percentage, error) {
	_ddfbf := ST_Percentage{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_ddfbf.ST_Percentage = &s
	} else {
		_fgbfbg, _dbeeef := _cd.ParseInt(s, 10, 64)
		if _dbeeef != nil {
			return _ddfbf, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _dbeeef)
		}
		_gdgbg := int32(_fgbfbg)
		_ddfbf.ST_PercentageDecimal = &_gdgbg
	}
	return _ddfbf, nil
}

// ValidateWithPath validates the CT_EffectStyleItem and its children, prefixing error messages with path
func (_gdgb *CT_EffectStyleItem) ValidateWithPath(path string) error {
	if _gdgb.EffectLst != nil {
		if _ebec := _gdgb.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ebec != nil {
			return _ebec
		}
	}
	if _gdgb.EffectDag != nil {
		if _dgeef := _gdgb.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _dgeef != nil {
			return _dgeef
		}
	}
	if _gdgb.Scene3d != nil {
		if _ddeb := _gdgb.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _ddeb != nil {
			return _ddeb
		}
	}
	if _gdgb.Sp3d != nil {
		if _gaga := _gdgb.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _gaga != nil {
			return _gaga
		}
	}
	return nil
}

const (
	ST_TextHorzOverflowTypeUnset    ST_TextHorzOverflowType = 0
	ST_TextHorzOverflowTypeOverflow ST_TextHorzOverflowType = 1
	ST_TextHorzOverflowTypeClip     ST_TextHorzOverflowType = 2
)

func (_accf *CT_ColorScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", _accf.NameAttr)})
	e.EncodeToken(start)
	_eegcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064k\u0031"}}
	e.EncodeElement(_accf.Dk1, _eegcf)
	_bgee := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ct\u0031"}}
	e.EncodeElement(_accf.Lt1, _bgee)
	_gdad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0064k\u0032"}}
	e.EncodeElement(_accf.Dk2, _gdad)
	_ded := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ct\u0032"}}
	e.EncodeElement(_accf.Lt2, _ded)
	_eeadf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00741"}}
	e.EncodeElement(_accf.Accent1, _eeadf)
	_ceca := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00742"}}
	e.EncodeElement(_accf.Accent2, _ceca)
	_ccda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00743"}}
	e.EncodeElement(_accf.Accent3, _ccda)
	_dcgf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00744"}}
	e.EncodeElement(_accf.Accent4, _dcgf)
	_cegf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00745"}}
	e.EncodeElement(_accf.Accent5, _cegf)
	_eeba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0061\u0063\u0063\u0065\u006e\u00746"}}
	e.EncodeElement(_accf.Accent6, _eeba)
	_gccg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_accf.Hlink, _gccg)
	_fbec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}}
	e.EncodeElement(_accf.FolHlink, _fbec)
	if _accf.ExtLst != nil {
		_cbgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_accf.ExtLst, _cbgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_TextListStyle() *CT_TextListStyle { _cfegg := &CT_TextListStyle{}; return _cfegg }

// Validate validates the CT_TextBulletColorFollowText and its children
func (_bfdegb *CT_TextBulletColorFollowText) Validate() error {
	return _bfdegb.ValidateWithPath("\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074")
}
func (_feaaf *CT_EffectStyleItem) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _feaaf.EffectLst != nil {
		_eeac := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feaaf.EffectLst, _eeac)
	}
	if _feaaf.EffectDag != nil {
		_affce := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_feaaf.EffectDag, _affce)
	}
	if _feaaf.Scene3d != nil {
		_edced := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_feaaf.Scene3d, _edced)
	}
	if _feaaf.Sp3d != nil {
		_ecdcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_feaaf.Sp3d, _ecdcf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_AlphaBiLevelEffect() *CT_AlphaBiLevelEffect { _fec := &CT_AlphaBiLevelEffect{}; return _fec }

type CT_CustomColorList struct{ CustClr []*CT_CustomColor }

func (_ffgae *CT_FillStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_degd:
	for {
		_febbc, _dffa := d.Token()
		if _dffa != nil {
			return _dffa
		}
		switch _gddg := _febbc.(type) {
		case _d.StartElement:
			switch _gddg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_ecfa := NewEG_FillProperties()
				_ecfa.NoFill = NewCT_NoFillProperties()
				if _bfbcf := d.DecodeElement(_ecfa.NoFill, &_gddg); _bfbcf != nil {
					return _bfbcf
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _ecfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_efcd := NewEG_FillProperties()
				_efcd.SolidFill = NewCT_SolidColorFillProperties()
				if _gddgg := d.DecodeElement(_efcd.SolidFill, &_gddg); _gddgg != nil {
					return _gddgg
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _efcd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cccca := NewEG_FillProperties()
				_cccca.GradFill = NewCT_GradientFillProperties()
				if _gcgg := d.DecodeElement(_cccca.GradFill, &_gddg); _gcgg != nil {
					return _gcgg
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _cccca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_edaaa := NewEG_FillProperties()
				_edaaa.BlipFill = NewCT_BlipFillProperties()
				if _agcfb := d.DecodeElement(_edaaa.BlipFill, &_gddg); _agcfb != nil {
					return _agcfb
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _edaaa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_agfef := NewEG_FillProperties()
				_agfef.PattFill = NewCT_PatternFillProperties()
				if _egde := d.DecodeElement(_agfef.PattFill, &_gddg); _egde != nil {
					return _egde
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _agfef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_edad := NewEG_FillProperties()
				_edad.GrpFill = NewCT_GroupFillProperties()
				if _dgabc := d.DecodeElement(_edad.GrpFill, &_gddg); _dgabc != nil {
					return _dgabc
				}
				_ffgae.EG_FillProperties = append(_ffgae.EG_FillProperties, _edad)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025v", _gddg.Name)
				if _aeeb := d.Skip(); _aeeb != nil {
					return _aeeb
				}
			}
		case _d.EndElement:
			break _degd
		case _d.CharData:
		}
	}
	return nil
}
func (_dcbed *CT_SphereCoords) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcbed.LatAttr = 0
	_dcbed.LonAttr = 0
	_dcbed.RevAttr = 0
	for _, _cbggb := range start.Attr {
		if _cbggb.Name.Local == "\u006c\u0061\u0074" {
			_acfafg, _aeced := _cd.ParseInt(_cbggb.Value, 10, 32)
			if _aeced != nil {
				return _aeced
			}
			_dcbed.LatAttr = int32(_acfafg)
			continue
		}
		if _cbggb.Name.Local == "\u006c\u006f\u006e" {
			_feagg, _dfcfa := _cd.ParseInt(_cbggb.Value, 10, 32)
			if _dfcfa != nil {
				return _dfcfa
			}
			_dcbed.LonAttr = int32(_feagg)
			continue
		}
		if _cbggb.Name.Local == "\u0072\u0065\u0076" {
			_ecaeda, _edgee := _cd.ParseInt(_cbggb.Value, 10, 32)
			if _edgee != nil {
				return _edgee
			}
			_dcbed.RevAttr = int32(_ecaeda)
			continue
		}
	}
	for {
		_ffbbgc, _ccfae := d.Token()
		if _ccfae != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0053\u0070\u0068\u0065\u0072\u0065C\u006f\u006f\u0072d\u0073:\u0020\u0025\u0073", _ccfae)
		}
		if _adcde, _eddf := _ffbbgc.(_d.EndElement); _eddf && _adcde.Name == start.Name {
			break
		}
	}
	return nil
}
func (_fdcef *ST_LineCap) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eabca, _geegce := d.Token()
	if _geegce != nil {
		return _geegce
	}
	if _gdfbf, _ffdde := _eabca.(_d.EndElement); _ffdde && _gdfbf.Name == start.Name {
		*_fdcef = 1
		return nil
	}
	if _dcdbe, _efggae := _eabca.(_d.CharData); !_efggae {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _eabca)
	} else {
		switch string(_dcdbe) {
		case "":
			*_fdcef = 0
		case "\u0072\u006e\u0064":
			*_fdcef = 1
		case "\u0073\u0071":
			*_fdcef = 2
		case "\u0066\u006c\u0061\u0074":
			*_fdcef = 3
		}
	}
	_eabca, _geegce = d.Token()
	if _geegce != nil {
		return _geegce
	}
	if _babac, _bccfd := _eabca.(_d.EndElement); _bccfd && _babac.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _eabca)
}

// Validate validates the EG_Geometry and its children
func (_debef *EG_Geometry) Validate() error {
	return _debef.ValidateWithPath("E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079")
}
func (_gddc *ST_LightRigDirection) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gfcdc, _dgabd := d.Token()
	if _dgabd != nil {
		return _dgabd
	}
	if _fbcgg, _eadcd := _gfcdc.(_d.EndElement); _eadcd && _fbcgg.Name == start.Name {
		*_gddc = 1
		return nil
	}
	if _fbbbb, _edggc := _gfcdc.(_d.CharData); !_edggc {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gfcdc)
	} else {
		switch string(_fbbbb) {
		case "":
			*_gddc = 0
		case "\u0074\u006c":
			*_gddc = 1
		case "\u0074":
			*_gddc = 2
		case "\u0074\u0072":
			*_gddc = 3
		case "\u006c":
			*_gddc = 4
		case "\u0072":
			*_gddc = 5
		case "\u0062\u006c":
			*_gddc = 6
		case "\u0062":
			*_gddc = 7
		case "\u0062\u0072":
			*_gddc = 8
		}
	}
	_gfcdc, _dgabd = d.Token()
	if _dgabd != nil {
		return _dgabd
	}
	if _fbffe, _faedeb := _gfcdc.(_d.EndElement); _faedeb && _fbffe.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gfcdc)
}
func NewCT_TextFont() *CT_TextFont { _ebfbgg := &CT_TextFont{}; return _ebfbgg }
func (_feggaf *ST_TextUnderlineType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_edab, _agfa := d.Token()
	if _agfa != nil {
		return _agfa
	}
	if _cfgf, _gffcc := _edab.(_d.EndElement); _gffcc && _cfgf.Name == start.Name {
		*_feggaf = 1
		return nil
	}
	if _ffadg, _agcfg := _edab.(_d.CharData); !_agcfg {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _edab)
	} else {
		switch string(_ffadg) {
		case "":
			*_feggaf = 0
		case "\u006e\u006f\u006e\u0065":
			*_feggaf = 1
		case "\u0077\u006f\u0072d\u0073":
			*_feggaf = 2
		case "\u0073\u006e\u0067":
			*_feggaf = 3
		case "\u0064\u0062\u006c":
			*_feggaf = 4
		case "\u0068\u0065\u0061v\u0079":
			*_feggaf = 5
		case "\u0064\u006f\u0074\u0074\u0065\u0064":
			*_feggaf = 6
		case "d\u006f\u0074\u0074\u0065\u0064\u0048\u0065\u0061\u0076\u0079":
			*_feggaf = 7
		case "\u0064\u0061\u0073\u0068":
			*_feggaf = 8
		case "\u0064a\u0073\u0068\u0048\u0065\u0061\u0076y":
			*_feggaf = 9
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067":
			*_feggaf = 10
		case "\u0064\u0061\u0073\u0068\u004c\u006f\u006e\u0067\u0048\u0065\u0061\u0076\u0079":
			*_feggaf = 11
		case "\u0064o\u0074\u0044\u0061\u0073\u0068":
			*_feggaf = 12
		case "\u0064\u006f\u0074D\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_feggaf = 13
		case "\u0064\u006f\u0074\u0044\u006f\u0074\u0044\u0061\u0073\u0068":
			*_feggaf = 14
		case "\u0064o\u0074D\u006f\u0074\u0044\u0061\u0073\u0068\u0048\u0065\u0061\u0076\u0079":
			*_feggaf = 15
		case "\u0077\u0061\u0076\u0079":
			*_feggaf = 16
		case "\u0077a\u0076\u0079\u0048\u0065\u0061\u0076y":
			*_feggaf = 17
		case "\u0077a\u0076\u0079\u0044\u0062\u006c":
			*_feggaf = 18
		}
	}
	_edab, _agfa = d.Token()
	if _agfa != nil {
		return _agfa
	}
	if _acgbgf, _eeadfa := _edab.(_d.EndElement); _eeadfa && _acgbgf.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _edab)
}
func (_bcdcf ST_PresetCameraType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bcdcf.String(), start)
}
func (_gdagc *CT_TableRow) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bcbaa := range start.Attr {
		if _bcbaa.Name.Local == "\u0068" {
			_ecfcb, _bgbggc := ParseUnionST_Coordinate(_bcbaa.Value)
			if _bgbggc != nil {
				return _bgbggc
			}
			_gdagc.HAttr = _ecfcb
			continue
		}
	}
_gcgcbg:
	for {
		_eadab, _ggfff := d.Token()
		if _ggfff != nil {
			return _ggfff
		}
		switch _fabeaga := _eadab.(type) {
		case _d.StartElement:
			switch _fabeaga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063"}:
				_adbcg := NewCT_TableCell()
				if _eecg := d.DecodeElement(_adbcg, &_fabeaga); _eecg != nil {
					return _eecg
				}
				_gdagc.Tc = append(_gdagc.Tc, _adbcg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdagc.ExtLst = NewCT_OfficeArtExtensionList()
				if _bdfgc := d.DecodeElement(_gdagc.ExtLst, &_fabeaga); _bdfgc != nil {
					return _bdfgc
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077\u0020\u0025\u0076", _fabeaga.Name)
				if _fecgf := d.Skip(); _fecgf != nil {
					return _fecgf
				}
			}
		case _d.EndElement:
			break _gcgcbg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_PresetTextShape and its children
func (_cgcbe *CT_PresetTextShape) Validate() error {
	return _cgcbe.ValidateWithPath("\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065")
}
func (_feccg ST_TextShapeType) ValidateWithPath(path string) error {
	switch _feccg {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feccg))
	}
	return nil
}
func (_dgafca *CT_TableGrid) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dgafca.GridCol != nil {
		_cdcdad := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0069\u0064\u0043\u006fl"}}
		for _, _dgccde := range _dgafca.GridCol {
			e.EncodeElement(_dgccde, _cdcdad)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cgbd *CT_ColorReplaceEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ddbe:
	for {
		_dfac, _fdaa := d.Token()
		if _fdaa != nil {
			return _fdaa
		}
		switch _cdcd := _dfac.(type) {
		case _d.StartElement:
			switch _cdcd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_cgbd.ScrgbClr = NewCT_ScRgbColor()
				if _dgcc := d.DecodeElement(_cgbd.ScrgbClr, &_cdcd); _dgcc != nil {
					return _dgcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_cgbd.SrgbClr = NewCT_SRgbColor()
				if _aaaf := d.DecodeElement(_cgbd.SrgbClr, &_cdcd); _aaaf != nil {
					return _aaaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_cgbd.HslClr = NewCT_HslColor()
				if _gbag := d.DecodeElement(_cgbd.HslClr, &_cdcd); _gbag != nil {
					return _gbag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_cgbd.SysClr = NewCT_SystemColor()
				if _cgad := d.DecodeElement(_cgbd.SysClr, &_cdcd); _cgad != nil {
					return _cgad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_cgbd.SchemeClr = NewCT_SchemeColor()
				if _adab := d.DecodeElement(_cgbd.SchemeClr, &_cdcd); _adab != nil {
					return _adab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_cgbd.PrstClr = NewCT_PresetColor()
				if _cggb := d.DecodeElement(_cgbd.PrstClr, &_cdcd); _cggb != nil {
					return _cggb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0052\u0065\u0070\u006c\u0061\u0063\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cdcd.Name)
				if _fgae := d.Skip(); _fgae != nil {
					return _fgae
				}
			}
		case _d.EndElement:
			break _ddbe
		case _d.CharData:
		}
	}
	return nil
}
func (_acaf *CT_AdjPoint2D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _e.Sprintf("\u0025\u0076", _acaf.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _e.Sprintf("\u0025\u0076", _acaf.YAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_LineEndLength byte

func (_adbeb ST_TextVerticalType) Validate() error { return _adbeb.ValidateWithPath("") }

// ValidateWithPath validates the CT_EmbeddedWAVAudioFile and its children, prefixing error messages with path
func (_fgfcd *CT_EmbeddedWAVAudioFile) ValidateWithPath(path string) error { return nil }
func (_eccbfb *CT_ShapeLocking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _eccbfb.NoTextEditAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoTextEditAttr))})
	}
	if _eccbfb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoGrpAttr))})
	}
	if _eccbfb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoSelectAttr))})
	}
	if _eccbfb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoRotAttr))})
	}
	if _eccbfb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoChangeAspectAttr))})
	}
	if _eccbfb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoMoveAttr))})
	}
	if _eccbfb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoResizeAttr))})
	}
	if _eccbfb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoEditPointsAttr))})
	}
	if _eccbfb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoAdjustHandlesAttr))})
	}
	if _eccbfb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoChangeArrowheadsAttr))})
	}
	if _eccbfb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_eccbfb.NoChangeShapeTypeAttr))})
	}
	e.EncodeToken(start)
	if _eccbfb.ExtLst != nil {
		_aeabf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eccbfb.ExtLst, _aeabf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewEG_Text3D() *EG_Text3D { _eadad := &EG_Text3D{}; return _eadad }

// ValidateWithPath validates the EG_LineFillProperties and its children, prefixing error messages with path
func (_fdeed *EG_LineFillProperties) ValidateWithPath(path string) error {
	if _fdeed.NoFill != nil {
		if _decfg := _fdeed.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _decfg != nil {
			return _decfg
		}
	}
	if _fdeed.SolidFill != nil {
		if _cdeed := _fdeed.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _cdeed != nil {
			return _cdeed
		}
	}
	if _fdeed.GradFill != nil {
		if _eeeea := _fdeed.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _eeeea != nil {
			return _eeeea
		}
	}
	if _fdeed.PattFill != nil {
		if _bedad := _fdeed.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bedad != nil {
			return _bedad
		}
	}
	return nil
}
func NewCT_GlowEffect() *CT_GlowEffect { _feggf := &CT_GlowEffect{}; return _feggf }
func NewEG_TextUnderlineFill() *EG_TextUnderlineFill {
	_cffgb := &EG_TextUnderlineFill{}
	return _cffgb
}
func (_dfgf *CT_GraphicalObjectData) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _feccf := range start.Attr {
		if _feccf.Name.Local == "\u0075\u0072\u0069" {
			_gcgf, _dfcf := _feccf.Value, error(nil)
			if _dfcf != nil {
				return _dfcf
			}
			_dfgf.UriAttr = _gcgf
			continue
		}
	}
_gfaad:
	for {
		_daedg, _abced := d.Token()
		if _abced != nil {
			return _abced
		}
		switch _accgg := _daedg.(type) {
		case _d.StartElement:
			switch _accgg.Name {
			default:
				if _cfeeg, _egag := _ff.CreateElement(_accgg); _egag != nil {
					return _egag
				} else {
					if _dbde := d.DecodeElement(_cfeeg, &_accgg); _dbde != nil {
						return _dbde
					}
					_dfgf.Any = append(_dfgf.Any, _cfeeg)
				}
			}
		case _d.EndElement:
			break _gfaad
		case _d.CharData:
		}
	}
	return nil
}
func (_baaea ST_LineEndWidth) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gbdef := _d.Attr{}
	_gbdef.Name = name
	switch _baaea {
	case ST_LineEndWidthUnset:
		_gbdef.Value = ""
	case ST_LineEndWidthSm:
		_gbdef.Value = "\u0073\u006d"
	case ST_LineEndWidthMed:
		_gbdef.Value = "\u006d\u0065\u0064"
	case ST_LineEndWidthLg:
		_gbdef.Value = "\u006c\u0067"
	}
	return _gbdef, nil
}
func (_ffbbg *CT_NonVisualPictureProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ffbbg.PreferRelativeResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "p\u0072e\u0066\u0065\u0072\u0052\u0065\u006c\u0061\u0074i\u0076\u0065\u0052\u0065si\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_ffbbg.PreferRelativeResizeAttr))})
	}
	e.EncodeToken(start)
	if _ffbbg.PicLocks != nil {
		_dcdgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0069\u0063\u004c\u006f\u0063\u006b\u0073"}}
		e.EncodeElement(_ffbbg.PicLocks, _dcdgg)
	}
	if _ffbbg.ExtLst != nil {
		_fbbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_ffbbg.ExtLst, _fbbd)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_cadg *CT_FillEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_gbcda:
	for {
		_ceacd, _feec := d.Token()
		if _feec != nil {
			return _feec
		}
		switch _daca := _ceacd.(type) {
		case _d.StartElement:
			switch _daca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_cadg.NoFill = NewCT_NoFillProperties()
				if _agffc := d.DecodeElement(_cadg.NoFill, &_daca); _agffc != nil {
					return _agffc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_cadg.SolidFill = NewCT_SolidColorFillProperties()
				if _bfdbg := d.DecodeElement(_cadg.SolidFill, &_daca); _bfdbg != nil {
					return _bfdbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_cadg.GradFill = NewCT_GradientFillProperties()
				if _dacfa := d.DecodeElement(_cadg.GradFill, &_daca); _dacfa != nil {
					return _dacfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_cadg.BlipFill = NewCT_BlipFillProperties()
				if _ggegf := d.DecodeElement(_cadg.BlipFill, &_daca); _ggegf != nil {
					return _ggegf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_cadg.PattFill = NewCT_PatternFillProperties()
				if _fdbb := d.DecodeElement(_cadg.PattFill, &_daca); _fdbb != nil {
					return _fdbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_cadg.GrpFill = NewCT_GroupFillProperties()
				if _bgfbe := d.DecodeElement(_cadg.GrpFill, &_daca); _bgfbe != nil {
					return _bgfbe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046i\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074 \u0025\u0076", _daca.Name)
				if _cfgd := d.Skip(); _cfgd != nil {
					return _cfgd
				}
			}
		case _d.EndElement:
			break _gbcda
		case _d.CharData:
		}
	}
	return nil
}
func NewEG_Effect() *EG_Effect { _dfad := &EG_Effect{}; return _dfad }

type CT_AnimationChartElement struct {
	SeriesIdxAttr   *int32
	CategoryIdxAttr *int32
	BldStepAttr     ST_ChartBuildStep
}

// ValidateWithPath validates the CT_SystemColor and its children, prefixing error messages with path
func (_ecbbc *CT_SystemColor) ValidateWithPath(path string) error {
	if _ecbbc.ValAttr == ST_SystemColorValUnset {
		return _e.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _dedcdc := _ecbbc.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _dedcdc != nil {
		return _dedcdc
	}
	for _bfabc, _fadegg := range _ecbbc.EG_ColorTransform {
		if _efbab := _fadegg.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _bfabc)); _efbab != nil {
			return _efbab
		}
	}
	return nil
}
func NewCT_NonVisualGraphicFrameProperties() *CT_NonVisualGraphicFrameProperties {
	_abac := &CT_NonVisualGraphicFrameProperties{}
	return _abac
}

// Validate validates the CT_PositivePercentage and its children
func (_bacbf *CT_PositivePercentage) Validate() error {
	return _bacbf.ValidateWithPath("C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
}

type ST_DgmBuildStep byte

// Validate validates the CT_TableStyleTextStyle and its children
func (_cbfbf *CT_TableStyleTextStyle) Validate() error {
	return _cbfbf.ValidateWithPath("\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065")
}
func (_caegce *CT_TableCellProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _caegce.MarLAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u004c"}, Value: _e.Sprintf("\u0025\u0076", *_caegce.MarLAttr)})
	}
	if _caegce.MarRAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0052"}, Value: _e.Sprintf("\u0025\u0076", *_caegce.MarRAttr)})
	}
	if _caegce.MarTAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0054"}, Value: _e.Sprintf("\u0025\u0076", *_caegce.MarTAttr)})
	}
	if _caegce.MarBAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006d\u0061\u0072\u0042"}, Value: _e.Sprintf("\u0025\u0076", *_caegce.MarBAttr)})
	}
	if _caegce.VertAttr != ST_TextVerticalTypeUnset {
		_beefc, _gaeaa := _caegce.VertAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _gaeaa != nil {
			return _gaeaa
		}
		start.Attr = append(start.Attr, _beefc)
	}
	if _caegce.AnchorAttr != ST_TextAnchoringTypeUnset {
		_dgebb, _gfdcc := _caegce.AnchorAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _gfdcc != nil {
			return _gfdcc
		}
		start.Attr = append(start.Attr, _dgebb)
	}
	if _caegce.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_caegce.AnchorCtrAttr))})
	}
	if _caegce.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_ddef, _eaegf := _caegce.HorzOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _eaegf != nil {
			return _eaegf
		}
		start.Attr = append(start.Attr, _ddef)
	}
	e.EncodeToken(start)
	if _caegce.LnL != nil {
		_gcff := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u004c"}}
		e.EncodeElement(_caegce.LnL, _gcff)
	}
	if _caegce.LnR != nil {
		_gefdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0052"}}
		e.EncodeElement(_caegce.LnR, _gefdg)
	}
	if _caegce.LnT != nil {
		_cgbad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0054"}}
		e.EncodeElement(_caegce.LnT, _cgbad)
	}
	if _caegce.LnB != nil {
		_bggbb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006cn\u0042"}}
		e.EncodeElement(_caegce.LnB, _bggbb)
	}
	if _caegce.LnTlToBr != nil {
		_ffdbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0054\u006c\u0054\u006f\u0042\u0072"}}
		e.EncodeElement(_caegce.LnTlToBr, _ffdbg)
	}
	if _caegce.LnBlToTr != nil {
		_fcffc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e\u0042\u006c\u0054\u006f\u0054\u0072"}}
		e.EncodeElement(_caegce.LnBlToTr, _fcffc)
	}
	if _caegce.Cell3D != nil {
		_cddce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0065\u006c\u006c\u0033\u0044"}}
		e.EncodeElement(_caegce.Cell3D, _cddce)
	}
	if _caegce.NoFill != nil {
		_gefge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_caegce.NoFill, _gefge)
	}
	if _caegce.SolidFill != nil {
		_bbeaae := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_caegce.SolidFill, _bbeaae)
	}
	if _caegce.GradFill != nil {
		_acgfb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_caegce.GradFill, _acgfb)
	}
	if _caegce.BlipFill != nil {
		_gbfcd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_caegce.BlipFill, _gbfcd)
	}
	if _caegce.PattFill != nil {
		_ggcce := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_caegce.PattFill, _ggcce)
	}
	if _caegce.GrpFill != nil {
		_efff := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_caegce.GrpFill, _efff)
	}
	if _caegce.Headers != nil {
		_agged := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0065\u0072s"}}
		e.EncodeElement(_caegce.Headers, _agged)
	}
	if _caegce.ExtLst != nil {
		_dggda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_caegce.ExtLst, _dggda)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TintEffect and its children
func (_fggccd *CT_TintEffect) Validate() error {
	return _fggccd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_TintEffect and its children, prefixing error messages with path
func (_facade *CT_TintEffect) ValidateWithPath(path string) error {
	if _facade.HueAttr != nil {
		if *_facade.HueAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_facade.HueAttr)
		}
		if *_facade.HueAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_facade.HueAttr)
		}
	}
	if _facade.AmtAttr != nil {
		if _eagea := _facade.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _eagea != nil {
			return _eagea
		}
	}
	return nil
}
func (_gccd *CT_EffectList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gccd.Blur != nil {
		_agfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0075\u0072"}}
		e.EncodeElement(_gccd.Blur, _agfe)
	}
	if _gccd.FillOverlay != nil {
		_agcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}}
		e.EncodeElement(_gccd.FillOverlay, _agcf)
	}
	if _gccd.Glow != nil {
		_gdaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u006c\u006f\u0077"}}
		e.EncodeElement(_gccd.Glow, _gdaf)
	}
	if _gccd.InnerShdw != nil {
		_bcfbb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0069\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gccd.InnerShdw, _bcfbb)
	}
	if _gccd.OuterShdw != nil {
		_agcac := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gccd.OuterShdw, _agcac)
	}
	if _gccd.PrstShdw != nil {
		_geaag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0053\u0068\u0064\u0077"}}
		e.EncodeElement(_gccd.PrstShdw, _geaag)
	}
	if _gccd.Reflection != nil {
		_cadba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072e\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"}}
		e.EncodeElement(_gccd.Reflection, _cadba)
	}
	if _gccd.SoftEdge != nil {
		_gcgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065"}}
		e.EncodeElement(_gccd.SoftEdge, _gcgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_ConnectionSite() *CT_ConnectionSite {
	_beeba := &CT_ConnectionSite{}
	_beeba.Pos = NewCT_AdjPoint2D()
	return _beeba
}

type ST_OnOffStyleType byte

// Validate validates the CT_AlphaBiLevelEffect and its children
func (_adb *CT_AlphaBiLevelEffect) Validate() error {
	return _adb.ValidateWithPath("C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_bbdcaa *EG_TextAutofit) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bbdcaa.NoAutofit != nil {
		_ddacg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_bbdcaa.NoAutofit, _ddacg)
	}
	if _bbdcaa.NormAutofit != nil {
		_fgafb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_bbdcaa.NormAutofit, _fgafb)
	}
	if _bbdcaa.SpAutoFit != nil {
		_gcdbe := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_bbdcaa.SpAutoFit, _gcdbe)
	}
	return nil
}

type Blip struct{ CT_Blip }

// Validate validates the CT_TextBlipBullet and its children
func (_fbddd *CT_TextBlipBullet) Validate() error {
	return _fbddd.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074")
}
func (_eefdf *CT_TextCharacterProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _adfd := range start.Attr {
		if _adfd.Name.Local == "\u006c\u0061\u006e\u0067" {
			_bfbcb, _debfa := _adfd.Value, error(nil)
			if _debfa != nil {
				return _debfa
			}
			_eefdf.LangAttr = &_bfbcb
			continue
		}
		if _adfd.Name.Local == "\u0073\u007a" {
			_dfggf, _cgbg := _cd.ParseInt(_adfd.Value, 10, 32)
			if _cgbg != nil {
				return _cgbg
			}
			_fgfcfg := int32(_dfggf)
			_eefdf.SzAttr = &_fgfcfg
			continue
		}
		if _adfd.Name.Local == "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069" {
			_afadg, _fdfccg := _cd.ParseBool(_adfd.Value)
			if _fdfccg != nil {
				return _fdfccg
			}
			_eefdf.KumimojiAttr = &_afadg
			continue
		}
		if _adfd.Name.Local == "\u0073\u0074\u0072\u0069\u006b\u0065" {
			_eefdf.StrikeAttr.UnmarshalXMLAttr(_adfd)
			continue
		}
		if _adfd.Name.Local == "\u0063\u0061\u0070" {
			_eefdf.CapAttr.UnmarshalXMLAttr(_adfd)
			continue
		}
		if _adfd.Name.Local == "\u0062" {
			_acddd, _cdfccd := _cd.ParseBool(_adfd.Value)
			if _cdfccd != nil {
				return _cdfccd
			}
			_eefdf.BAttr = &_acddd
			continue
		}
		if _adfd.Name.Local == "\u0069" {
			_bdced, _fbfgee := _cd.ParseBool(_adfd.Value)
			if _fbfgee != nil {
				return _fbfgee
			}
			_eefdf.IAttr = &_bdced
			continue
		}
		if _adfd.Name.Local == "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e" {
			_cdbc, _afgdbd := _cd.ParseBool(_adfd.Value)
			if _afgdbd != nil {
				return _afgdbd
			}
			_eefdf.SmtCleanAttr = &_cdbc
			continue
		}
		if _adfd.Name.Local == "\u006b\u0065\u0072\u006e" {
			_gabbg, _decbe := _cd.ParseInt(_adfd.Value, 10, 32)
			if _decbe != nil {
				return _decbe
			}
			_agec := int32(_gabbg)
			_eefdf.KernAttr = &_agec
			continue
		}
		if _adfd.Name.Local == "\u0065\u0072\u0072" {
			_geaf, _adfff := _cd.ParseBool(_adfd.Value)
			if _adfff != nil {
				return _adfff
			}
			_eefdf.ErrAttr = &_geaf
			continue
		}
		if _adfd.Name.Local == "\u0061l\u0074\u004c\u0061\u006e\u0067" {
			_bdabc, _cgceg := _adfd.Value, error(nil)
			if _cgceg != nil {
				return _cgceg
			}
			_eefdf.AltLangAttr = &_bdabc
			continue
		}
		if _adfd.Name.Local == "\u006eo\u0050\u0072\u006f\u006f\u0066" {
			_egbdb, _bgcdf := _cd.ParseBool(_adfd.Value)
			if _bgcdf != nil {
				return _bgcdf
			}
			_eefdf.NoProofAttr = &_egbdb
			continue
		}
		if _adfd.Name.Local == "\u0075" {
			_eefdf.UAttr.UnmarshalXMLAttr(_adfd)
			continue
		}
		if _adfd.Name.Local == "\u0073\u006d\u0074I\u0064" {
			_fcgdg, _bedbeb := _cd.ParseUint(_adfd.Value, 10, 32)
			if _bedbeb != nil {
				return _bedbeb
			}
			_gbfg := uint32(_fcgdg)
			_eefdf.SmtIdAttr = &_gbfg
			continue
		}
		if _adfd.Name.Local == "\u0073\u0070\u0063" {
			_adafdb, _cedgd := ParseUnionST_TextPoint(_adfd.Value)
			if _cedgd != nil {
				return _cedgd
			}
			_eefdf.SpcAttr = &_adafdb
			continue
		}
		if _adfd.Name.Local == "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065" {
			_ecgf, _ccbac := ParseUnionST_Percentage(_adfd.Value)
			if _ccbac != nil {
				return _ccbac
			}
			_eefdf.BaselineAttr = &_ecgf
			continue
		}
		if _adfd.Name.Local == "\u0064\u0069\u0072t\u0079" {
			_fbcae, _gafbd := _cd.ParseBool(_adfd.Value)
			if _gafbd != nil {
				return _gafbd
			}
			_eefdf.DirtyAttr = &_fbcae
			continue
		}
		if _adfd.Name.Local == "\u0062\u006d\u006b" {
			_acfffe, _defgf := _adfd.Value, error(nil)
			if _defgf != nil {
				return _defgf
			}
			_eefdf.BmkAttr = &_acfffe
			continue
		}
		if _adfd.Name.Local == "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048" {
			_fgebb, _efaad := _cd.ParseBool(_adfd.Value)
			if _efaad != nil {
				return _efaad
			}
			_eefdf.NormalizeHAttr = &_fgebb
			continue
		}
	}
_gcfddb:
	for {
		_gcebfa, _cdgc := d.Token()
		if _cdgc != nil {
			return _cdgc
		}
		switch _ceec := _gcebfa.(type) {
		case _d.StartElement:
			switch _ceec.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e"}:
				_eefdf.Ln = NewCT_LineProperties()
				if _cdee := d.DecodeElement(_eefdf.Ln, &_ceec); _cdee != nil {
					return _cdee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_eefdf.NoFill = NewCT_NoFillProperties()
				if _eccab := d.DecodeElement(_eefdf.NoFill, &_ceec); _eccab != nil {
					return _eccab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_eefdf.SolidFill = NewCT_SolidColorFillProperties()
				if _dbdgg := d.DecodeElement(_eefdf.SolidFill, &_ceec); _dbdgg != nil {
					return _dbdgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_eefdf.GradFill = NewCT_GradientFillProperties()
				if _fgcgb := d.DecodeElement(_eefdf.GradFill, &_ceec); _fgcgb != nil {
					return _fgcgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_eefdf.BlipFill = NewCT_BlipFillProperties()
				if _acgfdb := d.DecodeElement(_eefdf.BlipFill, &_ceec); _acgfdb != nil {
					return _acgfdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_eefdf.PattFill = NewCT_PatternFillProperties()
				if _gabfe := d.DecodeElement(_eefdf.PattFill, &_ceec); _gabfe != nil {
					return _gabfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_eefdf.GrpFill = NewCT_GroupFillProperties()
				if _ecbecd := d.DecodeElement(_eefdf.GrpFill, &_ceec); _ecbecd != nil {
					return _ecbecd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_eefdf.EffectLst = NewCT_EffectList()
				if _beeef := d.DecodeElement(_eefdf.EffectLst, &_ceec); _beeef != nil {
					return _beeef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_eefdf.EffectDag = NewCT_EffectContainer()
				if _ggfg := d.DecodeElement(_eefdf.EffectDag, &_ceec); _ggfg != nil {
					return _ggfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"}:
				_eefdf.Highlight = NewCT_Color()
				if _ddgdg := d.DecodeElement(_eefdf.Highlight, &_ceec); _ddgdg != nil {
					return _ddgdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006eT\u0078"}:
				_eefdf.ULnTx = NewCT_TextUnderlineLineFollowText()
				if _fagac := d.DecodeElement(_eefdf.ULnTx, &_ceec); _fagac != nil {
					return _fagac
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u004c\u006e"}:
				_eefdf.ULn = NewCT_LineProperties()
				if _bddefd := d.DecodeElement(_eefdf.ULn, &_ceec); _bddefd != nil {
					return _bddefd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075F\u0069\u006c\u006c\u0054\u0078"}:
				_eefdf.UFillTx = NewCT_TextUnderlineFillFollowText()
				if _gceec := d.DecodeElement(_eefdf.UFillTx, &_ceec); _gceec != nil {
					return _gceec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0075\u0046\u0069l\u006c"}:
				_eefdf.UFill = NewCT_TextUnderlineFillGroupWrapper()
				if _afcbd := d.DecodeElement(_eefdf.UFill, &_ceec); _afcbd != nil {
					return _afcbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0061\u0074i\u006e"}:
				_eefdf.Latin = NewCT_TextFont()
				if _ccabe := d.DecodeElement(_eefdf.Latin, &_ceec); _ccabe != nil {
					return _ccabe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0061"}:
				_eefdf.Ea = NewCT_TextFont()
				if _gdbdc := d.DecodeElement(_eefdf.Ea, &_ceec); _gdbdc != nil {
					return _gdbdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u0073"}:
				_eefdf.Cs = NewCT_TextFont()
				if _dedfcc := d.DecodeElement(_eefdf.Cs, &_ceec); _dedfcc != nil {
					return _dedfcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u006d"}:
				_eefdf.Sym = NewCT_TextFont()
				if _aafdg := d.DecodeElement(_eefdf.Sym, &_ceec); _aafdg != nil {
					return _aafdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}:
				_eefdf.HlinkClick = NewCT_Hyperlink()
				if _ffede := d.DecodeElement(_eefdf.HlinkClick, &_ceec); _ffede != nil {
					return _ffede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069\u006e\u006b\u004d\u006f\u0075\u0073e\u004f\u0076\u0065\u0072"}:
				_eefdf.HlinkMouseOver = NewCT_Hyperlink()
				if _gfcb := d.DecodeElement(_eefdf.HlinkMouseOver, &_ceec); _gfcb != nil {
					return _gfcb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0074\u006c"}:
				_eefdf.Rtl = NewCT_Boolean()
				if _acfdad := d.DecodeElement(_eefdf.Rtl, &_ceec); _acfdad != nil {
					return _acfdad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_eefdf.ExtLst = NewCT_OfficeArtExtensionList()
				if _cfeec := d.DecodeElement(_eefdf.ExtLst, &_ceec); _cfeec != nil {
					return _cfeec
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020o\u006e\u0020\u0043\u0054_\u0054\u0065x\u0074\u0043\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _ceec.Name)
				if _gcdgc := d.Skip(); _gcdgc != nil {
					return _gcdgc
				}
			}
		case _d.EndElement:
			break _gcfddb
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_TextFontScalePercentOrPercentString(s string) (ST_TextFontScalePercentOrPercentString, error) {
	_gcfcb := ST_TextFontScalePercentOrPercentString{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_gcfcb.ST_Percentage = &s
	} else {
		_gfccgd, _cgfgc := _cd.ParseInt(s, 10, 64)
		if _cgfgc != nil {
			return _gcfcb, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cgfgc)
		}
		_egfee := int32(_gfccgd)
		_gcfcb.ST_TextFontScalePercent = &_egfee
	}
	return _gcfcb, nil
}

type CT_TextTabStopList struct{ Tab []*CT_TextTabStop }

// Validate validates the EG_OfficeArtExtensionList and its children
func (_egccb *EG_OfficeArtExtensionList) Validate() error {
	return _egccb.ValidateWithPath("\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t")
}
func (_fabae *CT_PictureLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bdfgb := range start.Attr {
		if _bdfgb.Name.Local == "\u006e\u006f\u0043\u0072\u006f\u0070" {
			_dcgbg, _gfeee := _cd.ParseBool(_bdfgb.Value)
			if _gfeee != nil {
				return _gfeee
			}
			_fabae.NoCropAttr = &_dcgbg
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_afcgc, _eegd := _cd.ParseBool(_bdfgb.Value)
			if _eegd != nil {
				return _eegd
			}
			_fabae.NoGrpAttr = &_afcgc
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_gedcg, _dbbcb := _cd.ParseBool(_bdfgb.Value)
			if _dbbcb != nil {
				return _dbbcb
			}
			_fabae.NoSelectAttr = &_gedcg
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_gcgga, _begbe := _cd.ParseBool(_bdfgb.Value)
			if _begbe != nil {
				return _begbe
			}
			_fabae.NoRotAttr = &_gcgga
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_adabc, _gebeb := _cd.ParseBool(_bdfgb.Value)
			if _gebeb != nil {
				return _gebeb
			}
			_fabae.NoChangeAspectAttr = &_adabc
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_gcaga, _babg := _cd.ParseBool(_bdfgb.Value)
			if _babg != nil {
				return _babg
			}
			_fabae.NoMoveAttr = &_gcaga
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_agaca, _fcfff := _cd.ParseBool(_bdfgb.Value)
			if _fcfff != nil {
				return _fcfff
			}
			_fabae.NoResizeAttr = &_agaca
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_bbea, _abebg := _cd.ParseBool(_bdfgb.Value)
			if _abebg != nil {
				return _abebg
			}
			_fabae.NoEditPointsAttr = &_bbea
			continue
		}
		if _bdfgb.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_ecdef, _aagb := _cd.ParseBool(_bdfgb.Value)
			if _aagb != nil {
				return _aagb
			}
			_fabae.NoAdjustHandlesAttr = &_ecdef
			continue
		}
		if _bdfgb.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_gbeaf, _addaf := _cd.ParseBool(_bdfgb.Value)
			if _addaf != nil {
				return _addaf
			}
			_fabae.NoChangeArrowheadsAttr = &_gbeaf
			continue
		}
		if _bdfgb.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_afafb, _fbfbe := _cd.ParseBool(_bdfgb.Value)
			if _fbfbe != nil {
				return _fbfbe
			}
			_fabae.NoChangeShapeTypeAttr = &_afafb
			continue
		}
	}
_eecaf:
	for {
		_bcbce, _dgfcd := d.Token()
		if _dgfcd != nil {
			return _dgfcd
		}
		switch _dceee := _bcbce.(type) {
		case _d.StartElement:
			switch _dceee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fabae.ExtLst = NewCT_OfficeArtExtensionList()
				if _gcdd := d.DecodeElement(_fabae.ExtLst, &_dceee); _gcdd != nil {
					return _gcdd
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _dceee.Name)
				if _fgbee := d.Skip(); _fgbee != nil {
					return _fgbee
				}
			}
		case _d.EndElement:
			break _eecaf
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_BiLevelEffect and its children, prefixing error messages with path
func (_fcge *CT_BiLevelEffect) ValidateWithPath(path string) error {
	if _beag := _fcge.ThreshAttr.ValidateWithPath(path + "/\u0054\u0068\u0072\u0065\u0073\u0068\u0041\u0074\u0074\u0072"); _beag != nil {
		return _beag
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacingPoint and its children, prefixing error messages with path
func (_cfcef *CT_TextSpacingPoint) ValidateWithPath(path string) error {
	if _cfcef.ValAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _cfcef.ValAttr)
	}
	if _cfcef.ValAttr > 158400 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0056\u0061\u006c\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u003d\u0020\u0031\u0035\u0038\u0034\u0030\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, _cfcef.ValAttr)
	}
	return nil
}
func (_bageg *CT_PositiveFixedAngle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _bageg.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_Point2D and its children
func (_fddda *CT_Point2D) Validate() error {
	return _fddda.ValidateWithPath("\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

// Validate validates the CT_FillEffect and its children
func (_befd *CT_FillEffect) Validate() error {
	return _befd.ValidateWithPath("\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_gbaca ST_Coordinate) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gbaca.ST_CoordinateUnqualified != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_gbaca.ST_CoordinateUnqualified)))
	}
	if _gbaca.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_gbaca.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_dgcde *CT_FixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _dgcde.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_beee *CT_ShapeStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_beee.LnRef = NewCT_StyleMatrixReference()
	_beee.FillRef = NewCT_StyleMatrixReference()
	_beee.EffectRef = NewCT_StyleMatrixReference()
	_beee.FontRef = NewCT_FontReference()
_dbabc:
	for {
		_deebd, _ccaefb := d.Token()
		if _ccaefb != nil {
			return _ccaefb
		}
		switch _ggfde := _deebd.(type) {
		case _d.StartElement:
			switch _ggfde.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u006e\u0052e\u0066"}:
				if _cbbbb := d.DecodeElement(_beee.LnRef, &_ggfde); _cbbbb != nil {
					return _cbbbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				if _gfegd := d.DecodeElement(_beee.FillRef, &_ggfde); _gfegd != nil {
					return _gfegd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0052\u0065f"}:
				if _befed := d.DecodeElement(_beee.EffectRef, &_ggfde); _befed != nil {
					return _befed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066o\u006e\u0074\u0052\u0065\u0066"}:
				if _ffceb := d.DecodeElement(_beee.FontRef, &_ggfde); _ffceb != nil {
					return _ffceb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053h\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065 \u0025\u0076", _ggfde.Name)
				if _dacgb := d.Skip(); _dacgb != nil {
					return _dacgb
				}
			}
		case _d.EndElement:
			break _dbabc
		case _d.CharData:
		}
	}
	return nil
}
func NewCT_GrayscaleTransform() *CT_GrayscaleTransform {
	_gfbef := &CT_GrayscaleTransform{}
	return _gfbef
}
func (_badcc *CT_LightRig) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_dadg, _afbbc := _badcc.RigAttr.MarshalXMLAttr(_d.Name{Local: "\u0072\u0069\u0067"})
	if _afbbc != nil {
		return _afbbc
	}
	start.Attr = append(start.Attr, _dadg)
	_dadg, _afbbc = _badcc.DirAttr.MarshalXMLAttr(_d.Name{Local: "\u0064\u0069\u0072"})
	if _afbbc != nil {
		return _afbbc
	}
	start.Attr = append(start.Attr, _dadg)
	e.EncodeToken(start)
	if _badcc.Rot != nil {
		_faaaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072o\u0074"}}
		e.EncodeElement(_badcc.Rot, _faaaf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_FixedPercentage and its children, prefixing error messages with path
func (_cfgb *CT_FixedPercentage) ValidateWithPath(path string) error {
	if _fgad := _cfgb.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fgad != nil {
		return _fgad
	}
	return nil
}
func (_eaggb *CT_GvmlGroupShape) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_eaacc := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_eaggb.NvGrpSpPr, _eaacc)
	_fccg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070\u0050r"}}
	e.EncodeElement(_eaggb.GrpSpPr, _fccg)
	if _eaggb.Choice != nil {
		for _, _cbac := range _eaggb.Choice {
			_cbac.MarshalXML(e, _d.StartElement{})
		}
	}
	if _eaggb.ExtLst != nil {
		_abcbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_eaggb.ExtLst, _abcbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_PatternFillProperties struct {
	PrstAttr ST_PresetPatternVal
	FgClr    *CT_Color
	BgClr    *CT_Color
}

func (_cedae *CT_PositivePercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _cedae.ValAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_dcfaf *CT_ColorSchemeAndMapping) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_dcfaf.ClrScheme = NewCT_ColorScheme()
_fbged:
	for {
		_bff, _abgb := d.Token()
		if _abgb != nil {
			return _abgb
		}
		switch _accb := _bff.(type) {
		case _d.StartElement:
			switch _accb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0053\u0063\u0068\u0065\u006de"}:
				if _aedb := d.DecodeElement(_dcfaf.ClrScheme, &_accb); _aedb != nil {
					return _aedb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006c\u0072\u004d\u0061\u0070"}:
				_dcfaf.ClrMap = NewCT_ColorMapping()
				if _gdgg := d.DecodeElement(_dcfaf.ClrMap, &_accb); _gdgg != nil {
					return _gdgg
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u0041\u006e\u0064\u004d\u0061p\u0070\u0069\u006e\u0067\u0020%\u0076", _accb.Name)
				if _eaacea := d.Skip(); _eaacea != nil {
					return _eaacea
				}
			}
		case _d.EndElement:
			break _fbged
		case _d.CharData:
		}
	}
	return nil
}
func (_cfagg *CT_PresetGeometry2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cfagg.PrstAttr = ST_ShapeType(1)
	for _, _ggdba := range start.Attr {
		if _ggdba.Name.Local == "\u0070\u0072\u0073\u0074" {
			_cfagg.PrstAttr.UnmarshalXMLAttr(_ggdba)
			continue
		}
	}
_affef:
	for {
		_aeca, _dcbda := d.Token()
		if _dcbda != nil {
			return _dcbda
		}
		switch _ggfbf := _aeca.(type) {
		case _d.StartElement:
			switch _ggfbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0076\u004cs\u0074"}:
				_cfagg.AvLst = NewCT_GeomGuideList()
				if _dbbfa := d.DecodeElement(_cfagg.AvLst, &_ggfbf); _dbbfa != nil {
					return _dbbfa
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074\u0047eo\u006d\u0065\u0074\u0072\u0079\u0032\u0044\u0020\u0025\u0076", _ggfbf.Name)
				if _eeff := d.Skip(); _eeff != nil {
					return _eeff
				}
			}
		case _d.EndElement:
			break _affef
		case _d.CharData:
		}
	}
	return nil
}
func (_fbbb *CT_AnimationGraphicalObjectBuildProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fbbb.BldDgm != nil {
		_efdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0044\u0067\u006d"}}
		e.EncodeElement(_fbbb.BldDgm, _efdg)
	}
	if _fbbb.BldChart != nil {
		_deca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0064\u0043\u0068\u0061\u0072\u0074"}}
		e.EncodeElement(_fbbb.BldChart, _deca)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_ColorSchemeList and its children, prefixing error messages with path
func (_bgbe *CT_ColorSchemeList) ValidateWithPath(path string) error {
	for _becc, _ebada := range _bgbe.ExtraClrScheme {
		if _gdfe := _ebada.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0045\u0078tr\u0061C\u006c\u0072\u0053\u0063\u0068e\u006d\u0065\u005b\u0025\u0064\u005d", path, _becc)); _gdfe != nil {
			return _gdfe
		}
	}
	return nil
}

// ValidateWithPath validates the CT_Path2D and its children, prefixing error messages with path
func (_fgdbd *CT_Path2D) ValidateWithPath(path string) error {
	if _fgdbd.WAttr != nil {
		if *_fgdbd.WAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgdbd.WAttr)
		}
		if *_fgdbd.WAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgdbd.WAttr)
		}
	}
	if _fgdbd.HAttr != nil {
		if *_fgdbd.HAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_fgdbd.HAttr)
		}
		if *_fgdbd.HAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fgdbd.HAttr)
		}
	}
	if _ggcff := _fgdbd.FillAttr.ValidateWithPath(path + "\u002fF\u0069\u006c\u006c\u0041\u0074\u0074r"); _ggcff != nil {
		return _ggcff
	}
	for _fdaaa, _cgef := range _fgdbd.Close {
		if _dgeb := _cgef.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002fC\u006c\u006f\u0073\u0065\u005b\u0025\u0064\u005d", path, _fdaaa)); _dgeb != nil {
			return _dgeb
		}
	}
	for _bceg, _aedfc := range _fgdbd.MoveTo {
		if _cafbg := _aedfc.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u004d\u006f\u0076\u0065\u0054\u006f\u005b\u0025\u0064\u005d", path, _bceg)); _cafbg != nil {
			return _cafbg
		}
	}
	for _agccf, _bbga := range _fgdbd.LnTo {
		if _fffc := _bbga.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u004c\u006e\u0054\u006f\u005b\u0025\u0064\u005d", path, _agccf)); _fffc != nil {
			return _fffc
		}
	}
	for _fadaed, _gfdg := range _fgdbd.ArcTo {
		if _cgfg := _gfdg.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002fA\u0072\u0063\u0054\u006f\u005b\u0025\u0064\u005d", path, _fadaed)); _cgfg != nil {
			return _cgfg
		}
	}
	for _aadeb, _fgdbe := range _fgdbd.QuadBezTo {
		if _fgade := _fgdbe.ValidateWithPath(_e.Sprintf("\u0025\u0073/\u0051\u0075\u0061d\u0042\u0065\u007a\u0054\u006f\u005b\u0025\u0064\u005d", path, _aadeb)); _fgade != nil {
			return _fgade
		}
	}
	for _aggb, _cgab := range _fgdbd.CubicBezTo {
		if _dfefa := _cgab.ValidateWithPath(_e.Sprintf("\u0025\u0073\u002f\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0054o\u005b\u0025\u0064\u005d", path, _aggb)); _dfefa != nil {
			return _dfefa
		}
	}
	return nil
}

// Validate validates the CT_AdjPoint2D and its children
func (_daee *CT_AdjPoint2D) Validate() error {
	return _daee.ValidateWithPath("\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044")
}

// ValidateWithPath validates the CT_GrayscaleTransform and its children, prefixing error messages with path
func (_affee *CT_GrayscaleTransform) ValidateWithPath(path string) error { return nil }
func (_bgcb *CT_GroupFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_baae, _fdfb := d.Token()
		if _fdfb != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0047\u0072\u006fu\u0070F\u0069l\u006cP\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _fdfb)
		}
		if _gdae, _gffg := _baae.(_d.EndElement); _gffg && _gdae.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bgfca *ST_PresetCameraType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_ceaaa, _ebefg := d.Token()
	if _ebefg != nil {
		return _ebefg
	}
	if _feegc, _edbbb := _ceaaa.(_d.EndElement); _edbbb && _feegc.Name == start.Name {
		*_bgfca = 1
		return nil
	}
	if _dgccc, _bbdbbf := _ceaaa.(_d.CharData); !_bbdbbf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _ceaaa)
	} else {
		switch string(_dgccc) {
		case "":
			*_bgfca = 0
		case "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074":
			*_bgfca = 1
		case "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_bgfca = 2
		case "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 3
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074":
			*_bgfca = 4
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074":
			*_bgfca = 5
		case "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 6
		case "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074":
			*_bgfca = 7
		case "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_bgfca = 8
		case "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 9
		case "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074":
			*_bgfca = 10
		case "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070":
			*_bgfca = 11
		case "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t":
			*_bgfca = 12
		case "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074":
			*_bgfca = 13
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074":
			*_bgfca = 14
		case "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074":
			*_bgfca = 15
		case "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074":
			*_bgfca = 16
		case "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_bgfca = 17
		case "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074":
			*_bgfca = 18
		case "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074":
			*_bgfca = 19
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070":
			*_bgfca = 20
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e":
			*_bgfca = 21
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070":
			*_bgfca = 22
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e":
			*_bgfca = 23
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070":
			*_bgfca = 24
		case "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e":
			*_bgfca = 25
		case "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070":
			*_bgfca = 26
		case "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e":
			*_bgfca = 27
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074":
			*_bgfca = 28
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074":
			*_bgfca = 29
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070":
			*_bgfca = 30
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074":
			*_bgfca = 31
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074":
			*_bgfca = 32
		case "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070":
			*_bgfca = 33
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074":
			*_bgfca = 34
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074":
			*_bgfca = 35
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d":
			*_bgfca = 36
		case "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074":
			*_bgfca = 37
		case "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074":
			*_bgfca = 38
		case "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d":
			*_bgfca = 39
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074":
			*_bgfca = 40
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070":
			*_bgfca = 41
		case "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 42
		case "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074":
			*_bgfca = 43
		case "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 44
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074":
			*_bgfca = 45
		case "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d":
			*_bgfca = 46
		case "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 47
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074":
			*_bgfca = 48
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074":
			*_bgfca = 49
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074":
			*_bgfca = 50
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065":
			*_bgfca = 51
		case "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077":
			*_bgfca = 52
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067":
			*_bgfca = 53
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067":
			*_bgfca = 54
		case "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_bgfca = 55
		case "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067":
			*_bgfca = 56
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067":
			*_bgfca = 57
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067":
			*_bgfca = 58
		case "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067":
			*_bgfca = 59
		case "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067":
			*_bgfca = 60
		case "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064":
			*_bgfca = 61
		case "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079":
			*_bgfca = 62
		}
	}
	_ceaaa, _ebefg = d.Token()
	if _ebefg != nil {
		return _ebefg
	}
	if _fffbd, _aafcd := _ceaaa.(_d.EndElement); _aafcd && _fffbd.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _ceaaa)
}

// Validate validates the CT_NonVisualGroupDrawingShapeProps and its children
func (_ffeef *CT_NonVisualGroupDrawingShapeProps) Validate() error {
	return _ffeef.ValidateWithPath("\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073")
}
func (_bdcdc *ST_PenAlignment) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gcabd, _bcadbd := d.Token()
	if _bcadbd != nil {
		return _bcadbd
	}
	if _gebaa, _fgddg := _gcabd.(_d.EndElement); _fgddg && _gebaa.Name == start.Name {
		*_bdcdc = 1
		return nil
	}
	if _eddfb, _bbeab := _gcabd.(_d.CharData); !_bbeab {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gcabd)
	} else {
		switch string(_eddfb) {
		case "":
			*_bdcdc = 0
		case "\u0063\u0074\u0072":
			*_bdcdc = 1
		case "\u0069\u006e":
			*_bdcdc = 2
		}
	}
	_gcabd, _bcadbd = d.Token()
	if _bcadbd != nil {
		return _bcadbd
	}
	if _eeegfc, _bbfgb := _gcabd.(_d.EndElement); _bbfgb && _eeegfc.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gcabd)
}
func (_bdage *CT_Hyperlink) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fefad := range start.Attr {
		if _fefad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _fefad.Name.Local == "\u0069\u0064" || _fefad.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _fefad.Name.Local == "\u0069\u0064" {
			_ebac, _ffece := _fefad.Value, error(nil)
			if _ffece != nil {
				return _ffece
			}
			_bdage.IdAttr = &_ebac
			continue
		}
		if _fefad.Name.Local == "\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0055\u0072\u006c" {
			_bfgaa, _eegb := _fefad.Value, error(nil)
			if _eegb != nil {
				return _eegb
			}
			_bdage.InvalidUrlAttr = &_bfgaa
			continue
		}
		if _fefad.Name.Local == "\u0061\u0063\u0074\u0069\u006f\u006e" {
			_ccdaa, _eagfd := _fefad.Value, error(nil)
			if _eagfd != nil {
				return _eagfd
			}
			_bdage.ActionAttr = &_ccdaa
			continue
		}
		if _fefad.Name.Local == "\u0074\u0067\u0074\u0046\u0072\u0061\u006d\u0065" {
			_gadce, _affbd := _fefad.Value, error(nil)
			if _affbd != nil {
				return _affbd
			}
			_bdage.TgtFrameAttr = &_gadce
			continue
		}
		if _fefad.Name.Local == "\u0074o\u006f\u006c\u0074\u0069\u0070" {
			_acba, _bcddb := _fefad.Value, error(nil)
			if _bcddb != nil {
				return _bcddb
			}
			_bdage.TooltipAttr = &_acba
			continue
		}
		if _fefad.Name.Local == "\u0068i\u0073\u0074\u006f\u0072\u0079" {
			_gcag, _ggaf := _cd.ParseBool(_fefad.Value)
			if _ggaf != nil {
				return _ggaf
			}
			_bdage.HistoryAttr = &_gcag
			continue
		}
		if _fefad.Name.Local == "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074C\u006c\u0069\u0063\u006b" {
			_bcfad, _cdgga := _cd.ParseBool(_fefad.Value)
			if _cdgga != nil {
				return _cdgga
			}
			_bdage.HighlightClickAttr = &_bcfad
			continue
		}
		if _fefad.Name.Local == "\u0065\u006e\u0064\u0053\u006e\u0064" {
			_badfd, _cbdeg := _cd.ParseBool(_fefad.Value)
			if _cbdeg != nil {
				return _cbdeg
			}
			_bdage.EndSndAttr = &_badfd
			continue
		}
	}
_bcbf:
	for {
		_eeef, _ecgce := d.Token()
		if _ecgce != nil {
			return _ecgce
		}
		switch _ecefcg := _eeef.(type) {
		case _d.StartElement:
			switch _ecefcg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u006e\u0064"}:
				_bdage.Snd = NewCT_EmbeddedWAVAudioFile()
				if _ggfd := d.DecodeElement(_bdage.Snd, &_ecefcg); _ggfd != nil {
					return _ggfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_bdage.ExtLst = NewCT_OfficeArtExtensionList()
				if _acgfd := d.DecodeElement(_bdage.ExtLst, &_ecefcg); _acgfd != nil {
					return _acgfd
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_H\u0079\u0070e\u0072\u006c\u0069\u006e\u006b\u0020\u0025\u0076", _ecefcg.Name)
				if _dagf := d.Skip(); _dagf != nil {
					return _dagf
				}
			}
		case _d.EndElement:
			break _bcbf
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_SRgbColor and its children
func (_feaagf *CT_SRgbColor) Validate() error {
	return _feaagf.ValidateWithPath("\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072")
}
func NewCT_OuterShadowEffect() *CT_OuterShadowEffect {
	_aadde := &CT_OuterShadowEffect{}
	return _aadde
}
func NewCT_Path2DCubicBezierTo() *CT_Path2DCubicBezierTo {
	_gefca := &CT_Path2DCubicBezierTo{}
	return _gefca
}
func (_cecf *CT_OfficeStyleSheet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cecf.NameAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_cecf.NameAttr)})
	}
	e.EncodeToken(start)
	_bebab := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074h\u0065\u006d\u0065\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073"}}
	e.EncodeElement(_cecf.ThemeElements, _bebab)
	if _cecf.ObjectDefaults != nil {
		_fbgaec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ao\u0062\u006a\u0065c\u0074\u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0073"}}
		e.EncodeElement(_cecf.ObjectDefaults, _fbgaec)
	}
	if _cecf.ExtraClrSchemeLst != nil {
		_abefa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078tr\u0061\u0043\u006c\u0072\u0053\u0063\u0068\u0065\u006d\u0065\u004c\u0073\u0074"}}
		e.EncodeElement(_cecf.ExtraClrSchemeLst, _abefa)
	}
	if _cecf.CustClrLst != nil {
		_fdbab := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063u\u0073\u0074\u0043\u006c\u0072\u004c\u0073\u0074"}}
		e.EncodeElement(_cecf.CustClrLst, _fdbab)
	}
	if _cecf.ExtLst != nil {
		_aacgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_cecf.ExtLst, _aacgb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_SphereCoords() *CT_SphereCoords {
	_ccdgf := &CT_SphereCoords{}
	_ccdgf.LatAttr = 0
	_ccdgf.LonAttr = 0
	_ccdgf.RevAttr = 0
	return _ccdgf
}
func (_acccc *CT_GroupShapeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _acccc.BwModeAttr != ST_BlackWhiteModeUnset {
		_bcccc, _cecd := _acccc.BwModeAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u0077\u004d\u006f\u0064\u0065"})
		if _cecd != nil {
			return _cecd
		}
		start.Attr = append(start.Attr, _bcccc)
	}
	e.EncodeToken(start)
	if _acccc.Xfrm != nil {
		_dcaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_acccc.Xfrm, _dcaf)
	}
	if _acccc.NoFill != nil {
		_babe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_acccc.NoFill, _babe)
	}
	if _acccc.SolidFill != nil {
		_fgaagg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_acccc.SolidFill, _fgaagg)
	}
	if _acccc.GradFill != nil {
		_dggg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_acccc.GradFill, _dggg)
	}
	if _acccc.BlipFill != nil {
		_dacbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_acccc.BlipFill, _dacbd)
	}
	if _acccc.PattFill != nil {
		_agde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_acccc.PattFill, _agde)
	}
	if _acccc.GrpFill != nil {
		_gbacd := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_acccc.GrpFill, _gbacd)
	}
	if _acccc.EffectLst != nil {
		_degda := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acccc.EffectLst, _degda)
	}
	if _acccc.EffectDag != nil {
		_afeda := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_acccc.EffectDag, _afeda)
	}
	if _acccc.Scene3d != nil {
		_abec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_acccc.Scene3d, _abec)
	}
	if _acccc.ExtLst != nil {
		_bdfg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_acccc.ExtLst, _bdfg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_ColorTransform struct {
	Tint     *CT_PositiveFixedPercentage
	Shade    *CT_PositiveFixedPercentage
	Comp     *CT_ComplementTransform
	Inv      *CT_InverseTransform
	Gray     *CT_GrayscaleTransform
	Alpha    *CT_PositiveFixedPercentage
	AlphaOff *CT_FixedPercentage
	AlphaMod *CT_PositivePercentage
	Hue      *CT_PositiveFixedAngle
	HueOff   *CT_Angle
	HueMod   *CT_PositivePercentage
	Sat      *CT_Percentage
	SatOff   *CT_Percentage
	SatMod   *CT_Percentage
	Lum      *CT_Percentage
	LumOff   *CT_Percentage
	LumMod   *CT_Percentage
	Red      *CT_Percentage
	RedOff   *CT_Percentage
	RedMod   *CT_Percentage
	Green    *CT_Percentage
	GreenOff *CT_Percentage
	GreenMod *CT_Percentage
	Blue     *CT_Percentage
	BlueOff  *CT_Percentage
	BlueMod  *CT_Percentage
	Gamma    *CT_GammaTransform
	InvGamma *CT_InverseGammaTransform
}
type CT_TextBody struct {
	BodyPr   *CT_TextBodyProperties
	LstStyle *CT_TextListStyle
	P        []*CT_TextParagraph
}

func (_aeggc *CT_ShapeLocking) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _cbgbg := range start.Attr {
		if _cbgbg.Name.Local == "\u006e\u006f\u0054\u0065\u0078\u0074\u0045\u0064\u0069\u0074" {
			_cadgb, _ggcad := _cd.ParseBool(_cbgbg.Value)
			if _ggcad != nil {
				return _ggcad
			}
			_aeggc.NoTextEditAttr = &_cadgb
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0047r\u0070" {
			_gfbbg, _eecff := _cd.ParseBool(_cbgbg.Value)
			if _eecff != nil {
				return _eecff
			}
			_aeggc.NoGrpAttr = &_gfbbg
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074" {
			_degcg, _fdfcc := _cd.ParseBool(_cbgbg.Value)
			if _fdfcc != nil {
				return _fdfcc
			}
			_aeggc.NoSelectAttr = &_degcg
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0052o\u0074" {
			_cffda, _bgcc := _cd.ParseBool(_cbgbg.Value)
			if _bgcc != nil {
				return _bgcc
			}
			_aeggc.NoRotAttr = &_cffda
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074" {
			_gbdgc, _agaa := _cd.ParseBool(_cbgbg.Value)
			if _agaa != nil {
				return _agaa
			}
			_aeggc.NoChangeAspectAttr = &_gbdgc
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u004d\u006f\u0076\u0065" {
			_affbbc, _gfcda := _cd.ParseBool(_cbgbg.Value)
			if _gfcda != nil {
				return _gfcda
			}
			_aeggc.NoMoveAttr = &_affbbc
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065" {
			_gdfc, _gdgcg := _cd.ParseBool(_cbgbg.Value)
			if _gdgcg != nil {
				return _gdgcg
			}
			_aeggc.NoResizeAttr = &_gdfc
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073" {
			_ccedc, _fgaff := _cd.ParseBool(_cbgbg.Value)
			if _fgaff != nil {
				return _fgaff
			}
			_aeggc.NoEditPointsAttr = &_ccedc
			continue
		}
		if _cbgbg.Name.Local == "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073" {
			_fggfd, _dadde := _cd.ParseBool(_cbgbg.Value)
			if _dadde != nil {
				return _dadde
			}
			_aeggc.NoAdjustHandlesAttr = &_fggfd
			continue
		}
		if _cbgbg.Name.Local == "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073" {
			_egbef, _agadf := _cd.ParseBool(_cbgbg.Value)
			if _agadf != nil {
				return _agadf
			}
			_aeggc.NoChangeArrowheadsAttr = &_egbef
			continue
		}
		if _cbgbg.Name.Local == "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065" {
			_ceagd, _eeeed := _cd.ParseBool(_cbgbg.Value)
			if _eeeed != nil {
				return _eeeed
			}
			_aeggc.NoChangeShapeTypeAttr = &_ceagd
			continue
		}
	}
_abdb:
	for {
		_cfagge, _ebbdg := d.Token()
		if _ebbdg != nil {
			return _ebbdg
		}
		switch _gdcbd := _cfagge.(type) {
		case _d.StartElement:
			switch _gdcbd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_aeggc.ExtLst = NewCT_OfficeArtExtensionList()
				if _dbdc := d.DecodeElement(_aeggc.ExtLst, &_gdcbd); _dbdc != nil {
					return _dbdc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0068\u0061p\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067\u0020\u0025\u0076", _gdcbd.Name)
				if _ggcba := d.Skip(); _ggcba != nil {
					return _ggcba
				}
			}
		case _d.EndElement:
			break _abdb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaModulateFixedEffect and its children, prefixing error messages with path
func (_ecbf *CT_AlphaModulateFixedEffect) ValidateWithPath(path string) error {
	if _ecbf.AmtAttr != nil {
		if _aba := _ecbf.AmtAttr.ValidateWithPath(path + "\u002f\u0041\u006d\u0074\u0041\u0074\u0074\u0072"); _aba != nil {
			return _aba
		}
	}
	return nil
}
func (_accbd ST_BlipCompression) Validate() error { return _accbd.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextBulletTypefaceFollowText and its children, prefixing error messages with path
func (_bbcf *CT_TextBulletTypefaceFollowText) ValidateWithPath(path string) error { return nil }

type CT_OuterShadowEffect struct {
	BlurRadAttr      *int64
	DistAttr         *int64
	DirAttr          *int32
	SxAttr           *ST_Percentage
	SyAttr           *ST_Percentage
	KxAttr           *int32
	KyAttr           *int32
	AlgnAttr         ST_RectAlignment
	RotWithShapeAttr *bool
	ScrgbClr         *CT_ScRgbColor
	SrgbClr          *CT_SRgbColor
	HslClr           *CT_HslColor
	SysClr           *CT_SystemColor
	SchemeClr        *CT_SchemeColor
	PrstClr          *CT_PresetColor
}

func (_ddcef *CT_DashStopList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_adbag:
	for {
		_cbaa, _cafaf := d.Token()
		if _cafaf != nil {
			return _cafaf
		}
		switch _ddge := _cbaa.(type) {
		case _d.StartElement:
			switch _ddge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u0073"}:
				_bgdb := NewCT_DashStop()
				if _fcfa := d.DecodeElement(_bgdb, &_ddge); _fcfa != nil {
					return _fcfa
				}
				_ddcef.Ds = append(_ddcef.Ds, _bgdb)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0044\u0061\u0073h\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ddge.Name)
				if _bfgag := d.Skip(); _bfgag != nil {
					return _bfgag
				}
			}
		case _d.EndElement:
			break _adbag
		case _d.CharData:
		}
	}
	return nil
}
func (_cefbg ST_LightRigType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_babfe := _d.Attr{}
	_babfe.Name = name
	switch _cefbg {
	case ST_LightRigTypeUnset:
		_babfe.Value = ""
	case ST_LightRigTypeLegacyFlat1:
		_babfe.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031"
	case ST_LightRigTypeLegacyFlat2:
		_babfe.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032"
	case ST_LightRigTypeLegacyFlat3:
		_babfe.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033"
	case ST_LightRigTypeLegacyFlat4:
		_babfe.Value = "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034"
	case ST_LightRigTypeLegacyNormal1:
		_babfe.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031"
	case ST_LightRigTypeLegacyNormal2:
		_babfe.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032"
	case ST_LightRigTypeLegacyNormal3:
		_babfe.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033"
	case ST_LightRigTypeLegacyNormal4:
		_babfe.Value = "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034"
	case ST_LightRigTypeLegacyHarsh1:
		_babfe.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031"
	case ST_LightRigTypeLegacyHarsh2:
		_babfe.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032"
	case ST_LightRigTypeLegacyHarsh3:
		_babfe.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033"
	case ST_LightRigTypeLegacyHarsh4:
		_babfe.Value = "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034"
	case ST_LightRigTypeThreePt:
		_babfe.Value = "\u0074h\u0072\u0065\u0065\u0050\u0074"
	case ST_LightRigTypeBalanced:
		_babfe.Value = "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064"
	case ST_LightRigTypeSoft:
		_babfe.Value = "\u0073\u006f\u0066\u0074"
	case ST_LightRigTypeHarsh:
		_babfe.Value = "\u0068\u0061\u0072s\u0068"
	case ST_LightRigTypeFlood:
		_babfe.Value = "\u0066\u006c\u006fo\u0064"
	case ST_LightRigTypeContrasting:
		_babfe.Value = "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067"
	case ST_LightRigTypeMorning:
		_babfe.Value = "\u006do\u0072\u006e\u0069\u006e\u0067"
	case ST_LightRigTypeSunrise:
		_babfe.Value = "\u0073u\u006e\u0072\u0069\u0073\u0065"
	case ST_LightRigTypeSunset:
		_babfe.Value = "\u0073\u0075\u006e\u0073\u0065\u0074"
	case ST_LightRigTypeChilly:
		_babfe.Value = "\u0063\u0068\u0069\u006c\u006c\u0079"
	case ST_LightRigTypeFreezing:
		_babfe.Value = "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067"
	case ST_LightRigTypeFlat:
		_babfe.Value = "\u0066\u006c\u0061\u0074"
	case ST_LightRigTypeTwoPt:
		_babfe.Value = "\u0074\u0077\u006fP\u0074"
	case ST_LightRigTypeGlow:
		_babfe.Value = "\u0067\u006c\u006f\u0077"
	case ST_LightRigTypeBrightRoom:
		_babfe.Value = "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d"
	}
	return _babfe, nil
}

type CT_RelativeOffsetEffect struct {
	TxAttr *ST_Percentage
	TyAttr *ST_Percentage
}

const (
	ST_BlipCompressionUnset   ST_BlipCompression = 0
	ST_BlipCompressionEmail   ST_BlipCompression = 1
	ST_BlipCompressionScreen  ST_BlipCompression = 2
	ST_BlipCompressionPrint   ST_BlipCompression = 3
	ST_BlipCompressionHqprint ST_BlipCompression = 4
	ST_BlipCompressionNone    ST_BlipCompression = 5
)

type CT_LineJoinBevel struct{}

func (_gafcd ST_AnimationDgmBuildType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _gafcd.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		e.EncodeToken(_d.CharData(_gafcd.ST_AnimationBuildType.String()))
	}
	if _gafcd.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		e.EncodeToken(_d.CharData(_gafcd.ST_AnimationDgmOnlyBuildType.String()))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func (_fdccf *CT_BlendEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdccf.BlendAttr = ST_BlendMode(1)
	_fdccf.Cont = NewCT_EffectContainer()
	for _, _egg := range start.Attr {
		if _egg.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_fdccf.BlendAttr.UnmarshalXMLAttr(_egg)
			continue
		}
	}
_ddbg:
	for {
		_dccg, _ebaf := d.Token()
		if _ebaf != nil {
			return _ebaf
		}
		switch _afbb := _dccg.(type) {
		case _d.StartElement:
			switch _afbb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006e\u0074"}:
				if _gcae := d.DecodeElement(_fdccf.Cont, &_afbb); _gcae != nil {
					return _gcae
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045\u0066f\u0065c\u0074\u0020\u0025\u0076", _afbb.Name)
				if _adc := d.Skip(); _adc != nil {
					return _adc
				}
			}
		case _d.EndElement:
			break _ddbg
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_GradientStop and its children
func (_ecgb *CT_GradientStop) Validate() error {
	return _ecgb.ValidateWithPath("\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070")
}

type CT_TextNoBullet struct{}

func (_faaea *EG_TextUnderlineLine) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _faaea.ULnTx != nil {
		_ddbbf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_faaea.ULnTx, _ddbbf)
	}
	if _faaea.ULn != nil {
		_bgadf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_faaea.ULn, _bgadf)
	}
	return nil
}

type CT_FontCollection struct {
	Latin  *CT_TextFont
	Ea     *CT_TextFont
	Cs     *CT_TextFont
	Font   []*CT_SupplementalFont
	ExtLst *CT_OfficeArtExtensionList
}

func (_efbcac ST_ChartBuildStep) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gbcdcg := _d.Attr{}
	_gbcdcg.Name = name
	switch _efbcac {
	case ST_ChartBuildStepUnset:
		_gbcdcg.Value = ""
	case ST_ChartBuildStepCategory:
		_gbcdcg.Value = "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepPtInCategory:
		_gbcdcg.Value = "\u0070\u0074\u0049n\u0043\u0061\u0074\u0065\u0067\u006f\u0072\u0079"
	case ST_ChartBuildStepSeries:
		_gbcdcg.Value = "\u0073\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepPtInSeries:
		_gbcdcg.Value = "\u0070\u0074\u0049\u006e\u0053\u0065\u0072\u0069\u0065\u0073"
	case ST_ChartBuildStepAllPts:
		_gbcdcg.Value = "\u0061\u006c\u006c\u0050\u0074\u0073"
	case ST_ChartBuildStepGridLegend:
		_gbcdcg.Value = "\u0067\u0072\u0069\u0064\u004c\u0065\u0067\u0065\u006e\u0064"
	}
	return _gbcdcg, nil
}

// Validate validates the EG_EffectProperties and its children
func (_dgfbe *EG_EffectProperties) Validate() error {
	return _dgfbe.ValidateWithPath("\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073")
}

// ST_TextFontScalePercentOrPercentString is a union type
type ST_TextFontScalePercentOrPercentString struct {
	ST_TextFontScalePercent *int32
	ST_Percentage           *string
}

func NewCT_TintEffect() *CT_TintEffect { _fgecb := &CT_TintEffect{}; return _fgecb }
func ParseUnionST_TextPoint(s string) (ST_TextPoint, error) {
	_ggegb := ST_TextPoint{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_ggegb.ST_UniversalMeasure = &s
	} else {
		_edfgd, _cedgda := _cd.ParseInt(s, 10, 32)
		if _cedgda != nil {
			return _ggegb, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _cedgda)
		}
		_dabad := int32(_edfgd)
		_ggegb.ST_TextPointUnqualified = &_dabad
	}
	return _ggegb, nil
}

// ValidateWithPath validates the CT_TableStyleList and its children, prefixing error messages with path
func (_fceec *CT_TableStyleList) ValidateWithPath(path string) error {
	if !_a.ST_GuidPatternRe.MatchString(_fceec.DefAttr) {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0044\u0065\u0066\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0020'\u0025\u0073\u0027\u0020\u0028h\u0061\u0076e\u0020\u0025\u0076\u0029", path, _a.ST_GuidPatternRe, _fceec.DefAttr)
	}
	for _cffbf, _aaead := range _fceec.TblStyle {
		if _dbdbff := _aaead.ValidateWithPath(_e.Sprintf("\u0025s\u002fT\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u005b\u0025\u0064\u005d", path, _cffbf)); _dbdbff != nil {
			return _dbdbff
		}
	}
	return nil
}

// Validate validates the EG_ColorTransform and its children
func (_ebgfce *EG_ColorTransform) Validate() error {
	return _ebgfce.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d")
}

// Validate validates the CT_SchemeColor and its children
func (_dedcb *CT_SchemeColor) Validate() error {
	return _dedcb.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072")
}

// Validate validates the CT_PolarAdjustHandle and its children
func (_ebbba *CT_PolarAdjustHandle) Validate() error {
	return _ebbba.ValidateWithPath("C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065")
}

type CT_CustomGeometry2D struct {
	AvLst   *CT_GeomGuideList
	GdLst   *CT_GeomGuideList
	AhLst   *CT_AdjustHandleList
	CxnLst  *CT_ConnectionSiteList
	Rect    *CT_GeomRect
	PathLst *CT_Path2DList
}

func (_gaegd ST_TextShapeType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_gaegd.String(), start)
}
func (_afgf *CT_FontScheme) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", _afgf.NameAttr)})
	e.EncodeToken(start)
	_daff := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_afgf.MajorFont, _daff)
	_ccdd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"}}
	e.EncodeElement(_afgf.MinorFont, _ccdd)
	if _afgf.ExtLst != nil {
		_bdcfc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_afgf.ExtLst, _bdcfc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_TextParagraphProperties and its children, prefixing error messages with path
func (_effda *CT_TextParagraphProperties) ValidateWithPath(path string) error {
	if _effda.MarLAttr != nil {
		if *_effda.MarLAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u004c\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_effda.MarLAttr)
		}
		if *_effda.MarLAttr > 51206400 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u004c\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_effda.MarLAttr)
		}
	}
	if _effda.MarRAttr != nil {
		if *_effda.MarRAttr < 0 {
			return _e.Errorf("\u0025\u0073/m\u002e\u004d\u0061r\u0052\u0041\u0074\u0074r m\u0075st\u0020\u0062\u0065\u0020\u003e\u003d\u00200 \u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_effda.MarRAttr)
		}
		if *_effda.MarRAttr > 51206400 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u004d\u0061r\u0052\u0041\u0074t\u0072\u0020\u006d\u0075s\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_effda.MarRAttr)
		}
	}
	if _effda.LvlAttr != nil {
		if *_effda.LvlAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_effda.LvlAttr)
		}
		if *_effda.LvlAttr > 8 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0076l\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003c=\u0020\u0038\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_effda.LvlAttr)
		}
	}
	if _effda.IndentAttr != nil {
		if *_effda.IndentAttr < -51206400 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0049\u006e\u0064\u0065\u006e\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u002d\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_effda.IndentAttr)
		}
		if *_effda.IndentAttr > 51206400 {
			return _e.Errorf("\u0025s\u002f\u006d.\u0049\u006e\u0064e\u006e\u0074\u0041\u0074\u0074\u0072\u0020m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0035\u0031\u0032\u0030\u0036\u0034\u0030\u0030 \u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_effda.IndentAttr)
		}
	}
	if _badba := _effda.AlgnAttr.ValidateWithPath(path + "\u002fA\u006c\u0067\u006e\u0041\u0074\u0074r"); _badba != nil {
		return _badba
	}
	if _effda.DefTabSzAttr != nil {
		if _gdfgd := _effda.DefTabSzAttr.ValidateWithPath(path + "\u002f\u0044\u0065\u0066\u0054\u0061\u0062\u0053\u007a\u0041\u0074\u0074\u0072"); _gdfgd != nil {
			return _gdfgd
		}
	}
	if _cgfgdc := _effda.FontAlgnAttr.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0041\u006c\u0067\u006e\u0041\u0074\u0074\u0072"); _cgfgdc != nil {
		return _cgfgdc
	}
	if _effda.LnSpc != nil {
		if _ggdac := _effda.LnSpc.ValidateWithPath(path + "\u002f\u004c\u006e\u0053\u0070\u0063"); _ggdac != nil {
			return _ggdac
		}
	}
	if _effda.SpcBef != nil {
		if _edae := _effda.SpcBef.ValidateWithPath(path + "\u002fS\u0070\u0063\u0042\u0065\u0066"); _edae != nil {
			return _edae
		}
	}
	if _effda.SpcAft != nil {
		if _fgfeg := _effda.SpcAft.ValidateWithPath(path + "\u002fS\u0070\u0063\u0041\u0066\u0074"); _fgfeg != nil {
			return _fgfeg
		}
	}
	if _effda.BuClrTx != nil {
		if _bcdaa := _effda.BuClrTx.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072\u0054\u0078"); _bcdaa != nil {
			return _bcdaa
		}
	}
	if _effda.BuClr != nil {
		if _gaafg := _effda.BuClr.ValidateWithPath(path + "\u002f\u0042\u0075\u0043\u006c\u0072"); _gaafg != nil {
			return _gaafg
		}
	}
	if _effda.BuSzTx != nil {
		if _gaade := _effda.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _gaade != nil {
			return _gaade
		}
	}
	if _effda.BuSzPct != nil {
		if _fbbgf := _effda.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _fbbgf != nil {
			return _fbbgf
		}
	}
	if _effda.BuSzPts != nil {
		if _fdaceg := _effda.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _fdaceg != nil {
			return _fdaceg
		}
	}
	if _effda.BuFontTx != nil {
		if _acfbad := _effda.BuFontTx.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074\u0054x"); _acfbad != nil {
			return _acfbad
		}
	}
	if _effda.BuFont != nil {
		if _cbdf := _effda.BuFont.ValidateWithPath(path + "\u002fB\u0075\u0046\u006f\u006e\u0074"); _cbdf != nil {
			return _cbdf
		}
	}
	if _effda.BuNone != nil {
		if _ffgbaa := _effda.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _ffgbaa != nil {
			return _ffgbaa
		}
	}
	if _effda.BuAutoNum != nil {
		if _ceedd := _effda.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _ceedd != nil {
			return _ceedd
		}
	}
	if _effda.BuChar != nil {
		if _ffeda := _effda.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _ffeda != nil {
			return _ffeda
		}
	}
	if _effda.BuBlip != nil {
		if _ecgee := _effda.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _ecgee != nil {
			return _ecgee
		}
	}
	if _effda.TabLst != nil {
		if _ecaad := _effda.TabLst.ValidateWithPath(path + "\u002fT\u0061\u0062\u004c\u0073\u0074"); _ecaad != nil {
			return _ecaad
		}
	}
	if _effda.DefRPr != nil {
		if _cfbg := _effda.DefRPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0052\u0050\u0072"); _cfbg != nil {
			return _cfbg
		}
	}
	if _effda.ExtLst != nil {
		if _ecdgc := _effda.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ecdgc != nil {
			return _ecdgc
		}
	}
	return nil
}
func NewCT_GradientStopList() *CT_GradientStopList { _bbbea := &CT_GradientStopList{}; return _bbbea }
func (_ebfgd *EG_LineJoinProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebfgd.Round != nil {
		_effe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_ebfgd.Round, _effe)
	}
	if _ebfgd.Bevel != nil {
		_ebaacb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_ebfgd.Bevel, _ebaacb)
	}
	if _ebfgd.Miter != nil {
		_fadegf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_ebfgd.Miter, _fadegf)
	}
	return nil
}

type CT_AlphaOutsetEffect struct{ RadAttr *ST_Coordinate }

func (_gba *CT_AdjustHandleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aag:
	for {
		_fga, _gade := d.Token()
		if _gade != nil {
			return _gade
		}
		switch _ccd := _fga.(type) {
		case _d.StartElement:
			switch _ccd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u0068\u0058\u0059"}:
				_gbd := NewCT_XYAdjustHandle()
				if _baa := d.DecodeElement(_gbd, &_ccd); _baa != nil {
					return _baa
				}
				_gba.AhXY = append(_gba.AhXY, _gbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061h\u0050\u006f\u006c\u0061\u0072"}:
				_egae := NewCT_PolarAdjustHandle()
				if _ecb := d.DecodeElement(_egae, &_ccd); _ecb != nil {
					return _ecb
				}
				_gba.AhPolar = append(_gba.AhPolar, _egae)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0043\u0054\u005f\u0041\u0064\u006a\u0075\u0073\u0074\u0048an\u0064\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ccd.Name)
				if _dfc := d.Skip(); _dfc != nil {
					return _dfc
				}
			}
		case _d.EndElement:
			break _aag
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PositiveSize2D and its children, prefixing error messages with path
func (_aeebb *CT_PositiveSize2D) ValidateWithPath(path string) error {
	if _aeebb.CxAttr < 0 {
		return _e.Errorf("\u0025\u0073\u002fm.\u0043\u0078\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aeebb.CxAttr)
	}
	if _aeebb.CxAttr > 27273042316900 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0078\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aeebb.CxAttr)
	}
	if _aeebb.CyAttr < 0 {
		return _e.Errorf("\u0025\u0073\u002fm.\u0043\u0079\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062e\u0020>\u003d\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aeebb.CyAttr)
	}
	if _aeebb.CyAttr > 27273042316900 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0043\u0079\u0041\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020\u0062e \u003c\u003d\u0020\u00327\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u003690\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _aeebb.CyAttr)
	}
	return nil
}
func (_cddedg ST_TextVertOverflowType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cffcc := _d.Attr{}
	_cffcc.Name = name
	switch _cddedg {
	case ST_TextVertOverflowTypeUnset:
		_cffcc.Value = ""
	case ST_TextVertOverflowTypeOverflow:
		_cffcc.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextVertOverflowTypeEllipsis:
		_cffcc.Value = "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case ST_TextVertOverflowTypeClip:
		_cffcc.Value = "\u0063\u006c\u0069\u0070"
	}
	return _cffcc, nil
}
func (_gecag *ST_PresetMaterialType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_gecag = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
		*_gecag = 1
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
		*_gecag = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
		*_gecag = 3
	case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
		*_gecag = 4
	case "\u006d\u0061\u0074t\u0065":
		*_gecag = 5
	case "\u0070l\u0061\u0073\u0074\u0069\u0063":
		*_gecag = 6
	case "\u006d\u0065\u0074a\u006c":
		*_gecag = 7
	case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
		*_gecag = 8
	case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
		*_gecag = 9
	case "\u0070\u006f\u0077\u0064\u0065\u0072":
		*_gecag = 10
	case "\u0064\u006b\u0045\u0064\u0067\u0065":
		*_gecag = 11
	case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
		*_gecag = 12
	case "\u0063\u006c\u0065a\u0072":
		*_gecag = 13
	case "\u0066\u006c\u0061\u0074":
		*_gecag = 14
	case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
		*_gecag = 15
	}
	return nil
}
func (_bgdgb *CT_TextShapeAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_aacbd, _cbce := d.Token()
		if _cbce != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u0054\u0065\u0078\u0074\u0053h\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074\u003a\u0020\u0025\u0073", _cbce)
		}
		if _baeea, _fgcgf := _aacbd.(_d.EndElement); _fgcgf && _baeea.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_Camera() *CT_Camera {
	_aaacf := &CT_Camera{}
	_aaacf.PrstAttr = ST_PresetCameraType(1)
	return _aaacf
}
func (_badbg *CT_TextCharacterProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _badbg.KumimojiAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0075\u006d\u0069\u006d\u006f\u006a\u0069"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.KumimojiAttr))})
	}
	if _badbg.LangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0061\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.LangAttr)})
	}
	if _badbg.AltLangAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061l\u0074\u004c\u0061\u006e\u0067"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.AltLangAttr)})
	}
	if _badbg.SzAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u007a"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.SzAttr)})
	}
	if _badbg.BAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.BAttr))})
	}
	if _badbg.IAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.IAttr))})
	}
	if _badbg.UAttr != ST_TextUnderlineTypeUnset {
		_dacbcd, _adafd := _badbg.UAttr.MarshalXMLAttr(_d.Name{Local: "\u0075"})
		if _adafd != nil {
			return _adafd
		}
		start.Attr = append(start.Attr, _dacbcd)
	}
	if _badbg.StrikeAttr != ST_TextStrikeTypeUnset {
		_cfgbf, _adcfgg := _badbg.StrikeAttr.MarshalXMLAttr(_d.Name{Local: "\u0073\u0074\u0072\u0069\u006b\u0065"})
		if _adcfgg != nil {
			return _adcfgg
		}
		start.Attr = append(start.Attr, _cfgbf)
	}
	if _badbg.KernAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0065\u0072\u006e"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.KernAttr)})
	}
	if _badbg.CapAttr != ST_TextCapsTypeUnset {
		_aegef, _fdcgcb := _badbg.CapAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u0070"})
		if _fdcgcb != nil {
			return _fdcgcb
		}
		start.Attr = append(start.Attr, _aegef)
	}
	if _badbg.SpcAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0063"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.SpcAttr)})
	}
	if _badbg.NormalizeHAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0072\u006d\u0061\u006c\u0069\u007a\u0065\u0048"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.NormalizeHAttr))})
	}
	if _badbg.BaselineAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0061\u0073\u0065\u006c\u0069\u006e\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.BaselineAttr)})
	}
	if _badbg.NoProofAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0050\u0072\u006f\u006f\u0066"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.NoProofAttr))})
	}
	if _badbg.DirtyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072t\u0079"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.DirtyAttr))})
	}
	if _badbg.ErrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u0072\u0072"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.ErrAttr))})
	}
	if _badbg.SmtCleanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006d\u0074\u0043\u006c\u0065\u0061\u006e"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_badbg.SmtCleanAttr))})
	}
	if _badbg.SmtIdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u006d\u0074I\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.SmtIdAttr)})
	}
	if _badbg.BmkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u006d\u006b"}, Value: _e.Sprintf("\u0025\u0076", *_badbg.BmkAttr)})
	}
	e.EncodeToken(start)
	if _badbg.Ln != nil {
		_bbcgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_badbg.Ln, _bbcgb)
	}
	if _badbg.NoFill != nil {
		_gefbc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.NoFill, _gefbc)
	}
	if _badbg.SolidFill != nil {
		_dcbgd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.SolidFill, _dcbgd)
	}
	if _badbg.GradFill != nil {
		_adecg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.GradFill, _adecg)
	}
	if _badbg.BlipFill != nil {
		_cfec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.BlipFill, _cfec)
	}
	if _badbg.PattFill != nil {
		_fcaec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.PattFill, _fcaec)
	}
	if _badbg.GrpFill != nil {
		_adgef := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0046\u0069\u006cl"}}
		e.EncodeElement(_badbg.GrpFill, _adgef)
	}
	if _badbg.EffectLst != nil {
		_eacb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_badbg.EffectLst, _eacb)
	}
	if _badbg.EffectDag != nil {
		_gfgcbd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0065\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"}}
		e.EncodeElement(_badbg.EffectDag, _gfgcbd)
	}
	if _badbg.Highlight != nil {
		_bdbdg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"}}
		e.EncodeElement(_badbg.Highlight, _bdbdg)
	}
	if _badbg.ULnTx != nil {
		_fcecb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u004c\u006e\u0054\u0078"}}
		e.EncodeElement(_badbg.ULnTx, _fcecb)
	}
	if _badbg.ULn != nil {
		_dadad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0075L\u006e"}}
		e.EncodeElement(_badbg.ULn, _dadad)
	}
	if _badbg.UFillTx != nil {
		_eedbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c\u0054x"}}
		e.EncodeElement(_badbg.UFillTx, _eedbe)
	}
	if _badbg.UFill != nil {
		_cgebgc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0075\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_badbg.UFill, _cgebgc)
	}
	if _badbg.Latin != nil {
		_bedbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u0061\u0074\u0069\u006e"}}
		e.EncodeElement(_badbg.Latin, _bedbc)
	}
	if _badbg.Ea != nil {
		_cbbfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0061"}}
		e.EncodeElement(_badbg.Ea, _cbbfe)
	}
	if _badbg.Cs != nil {
		_gcfdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0073"}}
		e.EncodeElement(_badbg.Cs, _gcfdf)
	}
	if _badbg.Sym != nil {
		_dfdgc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073y\u006d"}}
		e.EncodeElement(_badbg.Sym, _dfdgc)
	}
	if _badbg.HlinkClick != nil {
		_fcaed := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_badbg.HlinkClick, _fcaed)
	}
	if _badbg.HlinkMouseOver != nil {
		_ffbfgg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003ah\u006c\u0069\u006ek\u004d\u006f\u0075\u0073\u0065\u004f\u0076\u0065\u0072"}}
		e.EncodeElement(_badbg.HlinkMouseOver, _ffbfgg)
	}
	if _badbg.Rtl != nil {
		_gcgbd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072t\u006c"}}
		e.EncodeElement(_badbg.Rtl, _gcgbd)
	}
	if _badbg.ExtLst != nil {
		_bcegb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_badbg.ExtLst, _bcegb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_FillProperties struct {
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_fegf *CT_ColorChangeEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fegf.UseAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075\u0073\u0065\u0041"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fegf.UseAAttr))})
	}
	e.EncodeToken(start)
	_gabc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0046\u0072\u006fm"}}
	e.EncodeElement(_fegf.ClrFrom, _gabc)
	_acfa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u006c\u0072\u0054\u006f"}}
	e.EncodeElement(_fegf.ClrTo, _acfa)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type ST_PathFillMode byte

func NewCT_Path2DArcTo() *CT_Path2DArcTo { _abdgf := &CT_Path2DArcTo{}; return _abdgf }
func (_cbfbfd *Graphic) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return _cbfbfd.CT_GraphicalObject.MarshalXML(e, start)
}
func (_ccgea *CT_TableCellBorderStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_bffa:
	for {
		_aecaa, _ffdfa := d.Token()
		if _ffdfa != nil {
			return _ffdfa
		}
		switch _fccbf := _aecaa.(type) {
		case _d.StartElement:
			switch _fccbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0065\u0066\u0074"}:
				_ccgea.Left = NewCT_ThemeableLineStyle()
				if _ggcg := d.DecodeElement(_ccgea.Left, &_fccbf); _ggcg != nil {
					return _ggcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0069\u0067h\u0074"}:
				_ccgea.Right = NewCT_ThemeableLineStyle()
				if _dfbcag := d.DecodeElement(_ccgea.Right, &_fccbf); _dfbcag != nil {
					return _dfbcag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006f\u0070"}:
				_ccgea.Top = NewCT_ThemeableLineStyle()
				if _gdfa := d.DecodeElement(_ccgea.Top, &_fccbf); _gdfa != nil {
					return _gdfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006f\u0074\u0074\u006f\u006d"}:
				_ccgea.Bottom = NewCT_ThemeableLineStyle()
				if _ggbfa := d.DecodeElement(_ccgea.Bottom, &_fccbf); _ggbfa != nil {
					return _ggbfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0048"}:
				_ccgea.InsideH = NewCT_ThemeableLineStyle()
				if _cbadf := d.DecodeElement(_ccgea.InsideH, &_fccbf); _cbadf != nil {
					return _cbadf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069n\u0073\u0069\u0064\u0065\u0056"}:
				_ccgea.InsideV = NewCT_ThemeableLineStyle()
				if _ecgdb := d.DecodeElement(_ccgea.InsideV, &_fccbf); _ecgdb != nil {
					return _ecgdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u006c\u0032b\u0072"}:
				_ccgea.Tl2br = NewCT_ThemeableLineStyle()
				if _gbccfa := d.DecodeElement(_ccgea.Tl2br, &_fccbf); _gbccfa != nil {
					return _gbccfa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072\u0032b\u006c"}:
				_ccgea.Tr2bl = NewCT_ThemeableLineStyle()
				if _ebgba := d.DecodeElement(_ccgea.Tr2bl, &_fccbf); _ebgba != nil {
					return _ebgba
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_ccgea.ExtLst = NewCT_OfficeArtExtensionList()
				if _abafd := d.DecodeElement(_ccgea.ExtLst, &_fccbf); _abafd != nil {
					return _abafd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006fn\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006cB\u006f\u0072\u0064\u0065\u0072\u0053t\u0079\u006c\u0065 \u0025\u0076", _fccbf.Name)
				if _ecfae := d.Skip(); _ecfae != nil {
					return _ecfae
				}
			}
		case _d.EndElement:
			break _bffa
		case _d.CharData:
		}
	}
	return nil
}

const (
	ST_TextCapsTypeUnset ST_TextCapsType = 0
	ST_TextCapsTypeNone  ST_TextCapsType = 1
	ST_TextCapsTypeSmall ST_TextCapsType = 2
	ST_TextCapsTypeAll   ST_TextCapsType = 3
)

func (_geecbe ST_SystemColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ceeee := _d.Attr{}
	_ceeee.Name = name
	switch _geecbe {
	case ST_SystemColorValUnset:
		_ceeee.Value = ""
	case ST_SystemColorValScrollBar:
		_ceeee.Value = "\u0073c\u0072\u006f\u006c\u006c\u0042\u0061r"
	case ST_SystemColorValBackground:
		_ceeee.Value = "\u0062\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064"
	case ST_SystemColorValActiveCaption:
		_ceeee.Value = "\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValInactiveCaption:
		_ceeee.Value = "\u0069n\u0061c\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenu:
		_ceeee.Value = "\u006d\u0065\u006e\u0075"
	case ST_SystemColorValWindow:
		_ceeee.Value = "\u0077\u0069\u006e\u0064\u006f\u0077"
	case ST_SystemColorValWindowFrame:
		_ceeee.Value = "w\u0069\u006e\u0064\u006f\u0077\u0046\u0072\u0061\u006d\u0065"
	case ST_SystemColorValMenuText:
		_ceeee.Value = "\u006d\u0065\u006e\u0075\u0054\u0065\u0078\u0074"
	case ST_SystemColorValWindowText:
		_ceeee.Value = "\u0077\u0069\u006e\u0064\u006f\u0077\u0054\u0065\u0078\u0074"
	case ST_SystemColorValCaptionText:
		_ceeee.Value = "c\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValActiveBorder:
		_ceeee.Value = "\u0061\u0063\u0074i\u0076\u0065\u0042\u006f\u0072\u0064\u0065\u0072"
	case ST_SystemColorValInactiveBorder:
		_ceeee.Value = "\u0069\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0042o\u0072\u0064\u0065\u0072"
	case ST_SystemColorValAppWorkspace:
		_ceeee.Value = "\u0061\u0070\u0070W\u006f\u0072\u006b\u0073\u0070\u0061\u0063\u0065"
	case ST_SystemColorValHighlight:
		_ceeee.Value = "\u0068i\u0067\u0068\u006c\u0069\u0067\u0068t"
	case ST_SystemColorValHighlightText:
		_ceeee.Value = "\u0068\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnFace:
		_ceeee.Value = "\u0062t\u006e\u0046\u0061\u0063\u0065"
	case ST_SystemColorValBtnShadow:
		_ceeee.Value = "\u0062t\u006e\u0053\u0068\u0061\u0064\u006fw"
	case ST_SystemColorValGrayText:
		_ceeee.Value = "\u0067\u0072\u0061\u0079\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnText:
		_ceeee.Value = "\u0062t\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInactiveCaptionText:
		_ceeee.Value = "\u0069\u006e\u0061\u0063ti\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e\u0054\u0065\u0078\u0074"
	case ST_SystemColorValBtnHighlight:
		_ceeee.Value = "\u0062\u0074\u006eH\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorVal3dDkShadow:
		_ceeee.Value = "\u0033\u0064\u0044\u006b\u0053\u0068\u0061\u0064\u006f\u0077"
	case ST_SystemColorVal3dLight:
		_ceeee.Value = "\u0033d\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValInfoText:
		_ceeee.Value = "\u0069\u006e\u0066\u006f\u0054\u0065\u0078\u0074"
	case ST_SystemColorValInfoBk:
		_ceeee.Value = "\u0069\u006e\u0066\u006f\u0042\u006b"
	case ST_SystemColorValHotLight:
		_ceeee.Value = "\u0068\u006f\u0074\u004c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValGradientActiveCaption:
		_ceeee.Value = "g\u0072\u0061\u0064\u0069en\u0074A\u0063\u0074\u0069\u0076\u0065C\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValGradientInactiveCaption:
		_ceeee.Value = "\u0067\u0072\u0061di\u0065\u006e\u0074\u0049\u006e\u0061\u0063\u0074\u0069\u0076\u0065\u0043\u0061\u0070\u0074\u0069\u006f\u006e"
	case ST_SystemColorValMenuHighlight:
		_ceeee.Value = "\u006d\u0065\u006e\u0075\u0048\u0069\u0067\u0068\u006c\u0069\u0067\u0068\u0074"
	case ST_SystemColorValMenuBar:
		_ceeee.Value = "\u006de\u006e\u0075\u0042\u0061\u0072"
	}
	return _ceeee, nil
}
func (_fdebf ST_TextVertOverflowType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_fdebf.String(), start)
}
func (_fagde ST_TextFontScalePercentOrPercentString) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _fagde.ST_TextFontScalePercent != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_fagde.ST_TextFontScalePercent)))
	}
	if _fagde.ST_Percentage != nil {
		e.EncodeToken(_d.CharData(*_fagde.ST_Percentage))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}
func NewCT_PresetGeometry2D() *CT_PresetGeometry2D {
	_caebc := &CT_PresetGeometry2D{}
	_caebc.PrstAttr = ST_ShapeType(1)
	return _caebc
}

// Validate validates the CT_DuotoneEffect and its children
func (_dccgc *CT_DuotoneEffect) Validate() error {
	return _dccgc.ValidateWithPath("\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074")
}

type CT_Path2DQuadBezierTo struct{ Pt []*CT_AdjPoint2D }
type ST_TextAlignType byte

func (_ggcdd ST_TextCapsType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_gegdd := _d.Attr{}
	_gegdd.Name = name
	switch _ggcdd {
	case ST_TextCapsTypeUnset:
		_gegdd.Value = ""
	case ST_TextCapsTypeNone:
		_gegdd.Value = "\u006e\u006f\u006e\u0065"
	case ST_TextCapsTypeSmall:
		_gegdd.Value = "\u0073\u006d\u0061l\u006c"
	case ST_TextCapsTypeAll:
		_gegdd.Value = "\u0061\u006c\u006c"
	}
	return _gegdd, nil
}
func (_cdefe *ST_BlendMode) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bcgca, _ddddg := d.Token()
	if _ddddg != nil {
		return _ddddg
	}
	if _cebcd, _afbeb := _bcgca.(_d.EndElement); _afbeb && _cebcd.Name == start.Name {
		*_cdefe = 1
		return nil
	}
	if _faddg, _dcfbe := _bcgca.(_d.CharData); !_dcfbe {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bcgca)
	} else {
		switch string(_faddg) {
		case "":
			*_cdefe = 0
		case "\u006f\u0076\u0065\u0072":
			*_cdefe = 1
		case "\u006d\u0075\u006c\u0074":
			*_cdefe = 2
		case "\u0073\u0063\u0072\u0065\u0065\u006e":
			*_cdefe = 3
		case "\u0064\u0061\u0072\u006b\u0065\u006e":
			*_cdefe = 4
		case "\u006ci\u0067\u0068\u0074\u0065\u006e":
			*_cdefe = 5
		}
	}
	_bcgca, _ddddg = d.Token()
	if _ddddg != nil {
		return _ddddg
	}
	if _gfbdga, _ggcbb := _bcgca.(_d.EndElement); _ggcbb && _gfbdga.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bcgca)
}

type CT_TextBlipBullet struct{ Blip *CT_Blip }
type CT_ClipboardStyleSheet struct {
	ThemeElements *CT_BaseStyles
	ClrMap        *CT_ColorMapping
}

func (_gddgc *EG_TextBullet) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gddgc.BuNone != nil {
		_fdacd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u004e\u006f\u006e\u0065"}}
		e.EncodeElement(_gddgc.BuNone, _fdacd)
	}
	if _gddgc.BuAutoNum != nil {
		_dgfba := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0062\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"}}
		e.EncodeElement(_gddgc.BuAutoNum, _dgfba)
	}
	if _gddgc.BuChar != nil {
		_acbace := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0043\u0068\u0061\u0072"}}
		e.EncodeElement(_gddgc.BuChar, _acbace)
	}
	if _gddgc.BuBlip != nil {
		_cdbgb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0062\u0075\u0042\u006c\u0069\u0070"}}
		e.EncodeElement(_gddgc.BuBlip, _cdbgb)
	}
	return nil
}

// Validate validates the AG_Blob and its children
func (_dc *AG_Blob) Validate() error {
	return _dc.ValidateWithPath("\u0041G\u005f\u0042\u006c\u006f\u0062")
}
func (_abbb *CT_Cell3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_abbb.Bevel = NewCT_Bevel()
	for _, _cagg := range start.Attr {
		if _cagg.Name.Local == "\u0070\u0072\u0073t\u004d\u0061\u0074\u0065\u0072\u0069\u0061\u006c" {
			_abbb.PrstMaterialAttr.UnmarshalXMLAttr(_cagg)
			continue
		}
	}
_efb:
	for {
		_dacd, _bbad := d.Token()
		if _bbad != nil {
			return _bbad
		}
		switch _dfbc := _dacd.(type) {
		case _d.StartElement:
			switch _dfbc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				if _ecdf := d.DecodeElement(_abbb.Bevel, &_dfbc); _ecdf != nil {
					return _ecdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0069\u0067\u0068\u0074\u0052\u0069\u0067"}:
				_abbb.LightRig = NewCT_LightRig()
				if _dbdbfb := d.DecodeElement(_abbb.LightRig, &_dfbc); _dbdbfb != nil {
					return _dbdbfb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_abbb.ExtLst = NewCT_OfficeArtExtensionList()
				if _edc := d.DecodeElement(_abbb.ExtLst, &_dfbc); _edc != nil {
					return _edc
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0043\u0054\u005f\u0043\u0065\u006cl\u0033\u0044 \u0025\u0076", _dfbc.Name)
				if _faffa := d.Skip(); _faffa != nil {
					return _faffa
				}
			}
		case _d.EndElement:
			break _efb
		case _d.CharData:
		}
	}
	return nil
}
func (_cbfgd *ST_PenAlignment) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cbfgd = 0
	case "\u0063\u0074\u0072":
		*_cbfgd = 1
	case "\u0069\u006e":
		*_cbfgd = 2
	}
	return nil
}

var ST_TextBulletSizePercentPatternRe = _cb.MustCompile(ST_TextBulletSizePercentPattern)

func (_eadfe ST_PathShadeType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffgaed := _d.Attr{}
	_ffgaed.Name = name
	switch _eadfe {
	case ST_PathShadeTypeUnset:
		_ffgaed.Value = ""
	case ST_PathShadeTypeShape:
		_ffgaed.Value = "\u0073\u0068\u0061p\u0065"
	case ST_PathShadeTypeCircle:
		_ffgaed.Value = "\u0063\u0069\u0072\u0063\u006c\u0065"
	case ST_PathShadeTypeRect:
		_ffgaed.Value = "\u0072\u0065\u0063\u0074"
	}
	return _ffgaed, nil
}
func NewCT_GvmlPicture() *CT_GvmlPicture {
	_geab := &CT_GvmlPicture{}
	_geab.NvPicPr = NewCT_GvmlPictureNonVisual()
	_geab.BlipFill = NewCT_BlipFillProperties()
	_geab.SpPr = NewCT_ShapeProperties()
	return _geab
}
func (_beedb ST_TextVerticalType) ValidateWithPath(path string) error {
	switch _beedb {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_beedb))
	}
	return nil
}
func (_abgbb *CT_LineProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _abgbb.WAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0077"}, Value: _e.Sprintf("\u0025\u0076", *_abgbb.WAttr)})
	}
	if _abgbb.CapAttr != ST_LineCapUnset {
		_badee, _gbbc := _abgbb.CapAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u0061\u0070"})
		if _gbbc != nil {
			return _gbbc
		}
		start.Attr = append(start.Attr, _badee)
	}
	if _abgbb.CmpdAttr != ST_CompoundLineUnset {
		_face, _eecd := _abgbb.CmpdAttr.MarshalXMLAttr(_d.Name{Local: "\u0063\u006d\u0070\u0064"})
		if _eecd != nil {
			return _eecd
		}
		start.Attr = append(start.Attr, _face)
	}
	if _abgbb.AlgnAttr != ST_PenAlignmentUnset {
		_cdaa, _aebg := _abgbb.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _aebg != nil {
			return _aebg
		}
		start.Attr = append(start.Attr, _cdaa)
	}
	e.EncodeToken(start)
	if _abgbb.NoFill != nil {
		_efaf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abgbb.NoFill, _efaf)
	}
	if _abgbb.SolidFill != nil {
		_cgfee := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abgbb.SolidFill, _cgfee)
	}
	if _abgbb.GradFill != nil {
		_cfgda := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abgbb.GradFill, _cfgda)
	}
	if _abgbb.PattFill != nil {
		_bgddb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}}
		e.EncodeElement(_abgbb.PattFill, _bgddb)
	}
	if _abgbb.PrstDash != nil {
		_gdac := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0072\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_abgbb.PrstDash, _gdac)
	}
	if _abgbb.CustDash != nil {
		_bbdb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u0075\u0073\u0074\u0044\u0061\u0073\u0068"}}
		e.EncodeElement(_abgbb.CustDash, _bbdb)
	}
	if _abgbb.Round != nil {
		_cdbbe := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0072\u006f\u0075\u006e\u0064"}}
		e.EncodeElement(_abgbb.Round, _cdbbe)
	}
	if _abgbb.Bevel != nil {
		_fafda := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0062\u0065\u0076\u0065\u006c"}}
		e.EncodeElement(_abgbb.Bevel, _fafda)
	}
	if _abgbb.Miter != nil {
		_eaba := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006d\u0069\u0074\u0065\u0072"}}
		e.EncodeElement(_abgbb.Miter, _eaba)
	}
	if _abgbb.HeadEnd != nil {
		_aebb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0068\u0065\u0061\u0064\u0045\u006ed"}}
		e.EncodeElement(_abgbb.HeadEnd, _aebb)
	}
	if _abgbb.TailEnd != nil {
		_dcggb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0074\u0061\u0069\u006c\u0045\u006ed"}}
		e.EncodeElement(_abgbb.TailEnd, _dcggb)
	}
	if _abgbb.ExtLst != nil {
		_cfbcb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_abgbb.ExtLst, _cfbcb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_TableProperties and its children
func (_cfaaa *CT_TableProperties) Validate() error {
	return _cfaaa.ValidateWithPath("\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_cfafa *CT_EmbeddedWAVAudioFile) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ebbg := range start.Attr {
		if _ebbg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f/\u0073\u0063\u0068\u0065\u006da\u0073\u002e\u006f\u0070\u0065\u006ex\u006d\u006c\u0066\u006f\u0072m\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u006f\u0066\u0066\u0069c\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0032\u0030\u0030\u0036\u002fr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073h\u0069\u0070\u0073" && _ebbg.Name.Local == "\u0065\u006d\u0062e\u0064" || _ebbg.Name.Space == "\u0068\u0074\u0074\u0070\u003a\u002f\u002fp\u0075\u0072\u006c.\u006f\u0063\u006cc\u002e\u006fr\u0067\u002f\u006f\u006f\u0078\u006dl\u002fof\u0066\u0069\u0063\u0065\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002f\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0073\u0068\u0069\u0070\u0073" && _ebbg.Name.Local == "\u0065\u006d\u0062e\u0064" {
			_geeb, _cgeb := _ebbg.Value, error(nil)
			if _cgeb != nil {
				return _cgeb
			}
			_cfafa.EmbedAttr = _geeb
			continue
		}
		if _ebbg.Name.Local == "\u006e\u0061\u006d\u0065" {
			_accc, _dgfd := _ebbg.Value, error(nil)
			if _dgfd != nil {
				return _dgfd
			}
			_cfafa.NameAttr = &_accc
			continue
		}
	}
	for {
		_gaeed, _facb := d.Token()
		if _facb != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0045\u006d\u0062e\u0064\u0064\u0065\u0064\u0057\u0041\u0056A\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065\u003a\u0020%\u0073", _facb)
		}
		if _dbbcc, _begb := _gaeed.(_d.EndElement); _begb && _dbbcc.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cdf *CT_AnimationDgmElement) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _ecfec := range start.Attr {
		if _ecfec.Name.Local == "\u0069\u0064" {
			_aeed, _dcbb := _ecfec.Value, error(nil)
			if _dcbb != nil {
				return _dcbb
			}
			_cdf.IdAttr = &_aeed
			continue
		}
		if _ecfec.Name.Local == "\u0062l\u0064\u0053\u0074\u0065\u0070" {
			_cdf.BldStepAttr.UnmarshalXMLAttr(_ecfec)
			continue
		}
	}
	for {
		_ecbc, _dfdg := d.Token()
		if _dfdg != nil {
			return _e.Errorf("\u0070\u0061\u0072si\u006e\u0067\u0020\u0043\u0054\u005f\u0041\u006e\u0069m\u0061t\u0069o\u006eD\u0067\u006d\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0073", _dfdg)
		}
		if _gda, _fbge := _ecbc.(_d.EndElement); _fbge && _gda.Name == start.Name {
			break
		}
	}
	return nil
}

// Validate validates the CT_ColorMappingOverride and its children
func (_gddf *CT_ColorMappingOverride) Validate() error {
	return _gddf.ValidateWithPath("\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}

// ValidateWithPath validates the CT_SoftEdgesEffect and its children, prefixing error messages with path
func (_ggbed *CT_SoftEdgesEffect) ValidateWithPath(path string) error {
	if _ggbed.RadAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0061d\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _ggbed.RadAttr)
	}
	if _ggbed.RadAttr > 27273042316900 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0052\u0061\u0064A\u0074\u0074\u0072 m\u0075\u0073\u0074\u0020\u0062\u0065 \u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020%\u0076\u0029", path, _ggbed.RadAttr)
	}
	return nil
}

// ValidateWithPath validates the CT_Path2DCubicBezierTo and its children, prefixing error messages with path
func (_fecaf *CT_Path2DCubicBezierTo) ValidateWithPath(path string) error {
	for _cfcee, _fgbcd := range _fecaf.Pt {
		if _aagec := _fgbcd.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0050\u0074\u005b\u0025\u0064]", path, _cfcee)); _aagec != nil {
			return _aagec
		}
	}
	return nil
}
func NewCT_Bevel() *CT_Bevel { _bdeae := &CT_Bevel{}; return _bdeae }
func (_bbgc *CT_Table) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bbgc.TblGrid = NewCT_TableGrid()
_ddafff:
	for {
		_dfgfb, _cfcece := d.Token()
		if _cfcece != nil {
			return _cfcece
		}
		switch _aebee := _dfgfb.(type) {
		case _d.StartElement:
			switch _aebee.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0062\u006cP\u0072"}:
				_bbgc.TblPr = NewCT_TableProperties()
				if _cddbg := d.DecodeElement(_bbgc.TblPr, &_aebee); _cddbg != nil {
					return _cddbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074b\u006c\u0047\u0072\u0069\u0064"}:
				if _ccdde := d.DecodeElement(_bbgc.TblGrid, &_aebee); _ccdde != nil {
					return _ccdde
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0072"}:
				_afgbc := NewCT_TableRow()
				if _cbaf := d.DecodeElement(_afgbc, &_aebee); _cbaf != nil {
					return _cbaf
				}
				_bbgc.Tr = append(_bbgc.Tr, _afgbc)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0020\u0025\u0076", _aebee.Name)
				if _dfgda := d.Skip(); _dfgda != nil {
					return _dfgda
				}
			}
		case _d.EndElement:
			break _ddafff
		case _d.CharData:
		}
	}
	return nil
}
func (_adag *CT_GradientStop) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bcdgc := range start.Attr {
		if _bcdgc.Name.Local == "\u0070\u006f\u0073" {
			_agcff, _bdcaa := ParseUnionST_PositiveFixedPercentage(_bcdgc.Value)
			if _bdcaa != nil {
				return _bdcaa
			}
			_adag.PosAttr = _agcff
			continue
		}
	}
_bdfa:
	for {
		_aafd, _dggc := d.Token()
		if _dggc != nil {
			return _dggc
		}
		switch _beabd := _aafd.(type) {
		case _d.StartElement:
			switch _beabd.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_adag.ScrgbClr = NewCT_ScRgbColor()
				if _dgff := d.DecodeElement(_adag.ScrgbClr, &_beabd); _dgff != nil {
					return _dgff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_adag.SrgbClr = NewCT_SRgbColor()
				if _bbebe := d.DecodeElement(_adag.SrgbClr, &_beabd); _bbebe != nil {
					return _bbebe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_adag.HslClr = NewCT_HslColor()
				if _ecfd := d.DecodeElement(_adag.HslClr, &_beabd); _ecfd != nil {
					return _ecfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_adag.SysClr = NewCT_SystemColor()
				if _cffe := d.DecodeElement(_adag.SysClr, &_beabd); _cffe != nil {
					return _cffe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_adag.SchemeClr = NewCT_SchemeColor()
				if _badb := d.DecodeElement(_adag.SchemeClr, &_beabd); _badb != nil {
					return _badb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_adag.PrstClr = NewCT_PresetColor()
				if _dceba := d.DecodeElement(_adag.PrstClr, &_beabd); _dceba != nil {
					return _dceba
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006d\u0065n\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u0020\u0025\u0076", _beabd.Name)
				if _caaab := d.Skip(); _caaab != nil {
					return _caaab
				}
			}
		case _d.EndElement:
			break _bdfa
		case _d.CharData:
		}
	}
	return nil
}

type Theme struct{ CT_OfficeStyleSheet }

func (_fcdcgb *CT_TableCell) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _edff := range start.Attr {
		if _edff.Name.Local == "\u0072o\u0077\u0053\u0070\u0061\u006e" {
			_bffgg, _dcge := _cd.ParseInt(_edff.Value, 10, 32)
			if _dcge != nil {
				return _dcge
			}
			_cbabb := int32(_bffgg)
			_fcdcgb.RowSpanAttr = &_cbabb
			continue
		}
		if _edff.Name.Local == "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e" {
			_fafdb, _gccdc := _cd.ParseInt(_edff.Value, 10, 32)
			if _gccdc != nil {
				return _gccdc
			}
			_dccae := int32(_fafdb)
			_fcdcgb.GridSpanAttr = &_dccae
			continue
		}
		if _edff.Name.Local == "\u0068\u004d\u0065\u0072\u0067\u0065" {
			_fgac, _eebfc := _cd.ParseBool(_edff.Value)
			if _eebfc != nil {
				return _eebfc
			}
			_fcdcgb.HMergeAttr = &_fgac
			continue
		}
		if _edff.Name.Local == "\u0076\u004d\u0065\u0072\u0067\u0065" {
			_eecc, _caggd := _cd.ParseBool(_edff.Value)
			if _caggd != nil {
				return _caggd
			}
			_fcdcgb.VMergeAttr = &_eecc
			continue
		}
		if _edff.Name.Local == "\u0069\u0064" {
			_eaag, _ggff := _edff.Value, error(nil)
			if _ggff != nil {
				return _ggff
			}
			_fcdcgb.IdAttr = &_eaag
			continue
		}
	}
_fegag:
	for {
		_eadgc, _cfea := d.Token()
		if _cfea != nil {
			return _cfea
		}
		switch _bgbggg := _eadgc.(type) {
		case _d.StartElement:
			switch _bgbggg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0042\u006f\u0064\u0079"}:
				_fcdcgb.TxBody = NewCT_TextBody()
				if _acff := d.DecodeElement(_fcdcgb.TxBody, &_bgbggg); _acff != nil {
					return _acff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0063\u0050\u0072"}:
				_fcdcgb.TcPr = NewCT_TableCellProperties()
				if _gbeec := d.DecodeElement(_fcdcgb.TcPr, &_bgbggg); _gbeec != nil {
					return _gbeec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_fcdcgb.ExtLst = NewCT_OfficeArtExtensionList()
				if _fbfce := d.DecodeElement(_fcdcgb.ExtLst, &_bgbggg); _fbfce != nil {
					return _fbfce
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0061\u0062l\u0065\u0043\u0065\u006c\u006c\u0020\u0025\u0076", _bgbggg.Name)
				if _fcgef := d.Skip(); _fcgef != nil {
					return _fcgef
				}
			}
		case _d.EndElement:
			break _fegag
		case _d.CharData:
		}
	}
	return nil
}
func (_cfabc *CT_TransformEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _fdec := range start.Attr {
		if _fdec.Name.Local == "\u0073\u0078" {
			_egafd, _egcgff := ParseUnionST_Percentage(_fdec.Value)
			if _egcgff != nil {
				return _egcgff
			}
			_cfabc.SxAttr = &_egafd
			continue
		}
		if _fdec.Name.Local == "\u0073\u0079" {
			_cbaed, _gbgbgd := ParseUnionST_Percentage(_fdec.Value)
			if _gbgbgd != nil {
				return _gbgbgd
			}
			_cfabc.SyAttr = &_cbaed
			continue
		}
		if _fdec.Name.Local == "\u006b\u0078" {
			_dddag, _eefb := _cd.ParseInt(_fdec.Value, 10, 32)
			if _eefb != nil {
				return _eefb
			}
			_bbcff := int32(_dddag)
			_cfabc.KxAttr = &_bbcff
			continue
		}
		if _fdec.Name.Local == "\u006b\u0079" {
			_abggdc, _dgegef := _cd.ParseInt(_fdec.Value, 10, 32)
			if _dgegef != nil {
				return _dgegef
			}
			_beegcc := int32(_abggdc)
			_cfabc.KyAttr = &_beegcc
			continue
		}
		if _fdec.Name.Local == "\u0074\u0078" {
			_fgbeb, _eegfdf := ParseUnionST_Coordinate(_fdec.Value)
			if _eegfdf != nil {
				return _eegfdf
			}
			_cfabc.TxAttr = &_fgbeb
			continue
		}
		if _fdec.Name.Local == "\u0074\u0079" {
			_gcfabg, _dacdd := ParseUnionST_Coordinate(_fdec.Value)
			if _dacdd != nil {
				return _dacdd
			}
			_cfabc.TyAttr = &_gcfabg
			continue
		}
	}
	for {
		_caage, _gbefa := d.Token()
		if _gbefa != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054_\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d\u0045\u0066\u0066\u0065\u0063\u0074\u003a\u0020\u0025\u0073", _gbefa)
		}
		if _bdceb, _gadfb := _caage.(_d.EndElement); _gadfb && _bdceb.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_GraphicalObjectFrameLocking struct {
	NoGrpAttr          *bool
	NoDrilldownAttr    *bool
	NoSelectAttr       *bool
	NoChangeAspectAttr *bool
	NoMoveAttr         *bool
	NoResizeAttr       *bool
	ExtLst             *CT_OfficeArtExtensionList
}

func (_cacgb ST_PenAlignment) Validate() error { return _cacgb.ValidateWithPath("") }
func (_eaebe *CT_SystemColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_eaebe.ValAttr = ST_SystemColorVal(1)
	for _, _bgbdc := range start.Attr {
		if _bgbdc.Name.Local == "\u0076\u0061\u006c" {
			_eaebe.ValAttr.UnmarshalXMLAttr(_bgbdc)
			continue
		}
		if _bgbdc.Name.Local == "\u006ca\u0073\u0074\u0043\u006c\u0072" {
			_bgfef, _ggdee := _bgbdc.Value, error(nil)
			if _ggdee != nil {
				return _ggdee
			}
			_eaebe.LastClrAttr = &_bgfef
			continue
		}
	}
_eeabbg:
	for {
		_eeecd, _fgdfgb := d.Token()
		if _fgdfgb != nil {
			return _fgdfgb
		}
		switch _gfgcb := _eeecd.(type) {
		case _d.StartElement:
			switch _gfgcb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_ddfef := NewEG_ColorTransform()
				_ddfef.Tint = NewCT_PositiveFixedPercentage()
				if _dgfaf := d.DecodeElement(_ddfef.Tint, &_gfgcb); _dgfaf != nil {
					return _dgfaf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _ddfef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_gdffe := NewEG_ColorTransform()
				_gdffe.Shade = NewCT_PositiveFixedPercentage()
				if _adgee := d.DecodeElement(_gdffe.Shade, &_gfgcb); _adgee != nil {
					return _adgee
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gdffe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_agbdg := NewEG_ColorTransform()
				_agbdg.Comp = NewCT_ComplementTransform()
				if _abded := d.DecodeElement(_agbdg.Comp, &_gfgcb); _abded != nil {
					return _abded
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _agbdg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_gebec := NewEG_ColorTransform()
				_gebec.Inv = NewCT_InverseTransform()
				if _efdb := d.DecodeElement(_gebec.Inv, &_gfgcb); _efdb != nil {
					return _efdb
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gebec)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aaddf := NewEG_ColorTransform()
				_aaddf.Gray = NewCT_GrayscaleTransform()
				if _bgfde := d.DecodeElement(_aaddf.Gray, &_gfgcb); _bgfde != nil {
					return _bgfde
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _aaddf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_bgegff := NewEG_ColorTransform()
				_bgegff.Alpha = NewCT_PositiveFixedPercentage()
				if _fcddb := d.DecodeElement(_bgegff.Alpha, &_gfgcb); _fcddb != nil {
					return _fcddb
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _bgegff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_egge := NewEG_ColorTransform()
				_egge.AlphaOff = NewCT_FixedPercentage()
				if _ccgaf := d.DecodeElement(_egge.AlphaOff, &_gfgcb); _ccgaf != nil {
					return _ccgaf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _egge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_cdbfd := NewEG_ColorTransform()
				_cdbfd.AlphaMod = NewCT_PositivePercentage()
				if _fbbabb := d.DecodeElement(_cdbfd.AlphaMod, &_gfgcb); _fbbabb != nil {
					return _fbbabb
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _cdbfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_gdba := NewEG_ColorTransform()
				_gdba.Hue = NewCT_PositiveFixedAngle()
				if _bcade := d.DecodeElement(_gdba.Hue, &_gfgcb); _bcade != nil {
					return _bcade
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gdba)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_ebcfe := NewEG_ColorTransform()
				_ebcfe.HueOff = NewCT_Angle()
				if _cfadf := d.DecodeElement(_ebcfe.HueOff, &_gfgcb); _cfadf != nil {
					return _cfadf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _ebcfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_bgbgd := NewEG_ColorTransform()
				_bgbgd.HueMod = NewCT_PositivePercentage()
				if _dffca := d.DecodeElement(_bgbgd.HueMod, &_gfgcb); _dffca != nil {
					return _dffca
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _bgbgd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_dcbebf := NewEG_ColorTransform()
				_dcbebf.Sat = NewCT_Percentage()
				if _acdf := d.DecodeElement(_dcbebf.Sat, &_gfgcb); _acdf != nil {
					return _acdf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _dcbebf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_abedg := NewEG_ColorTransform()
				_abedg.SatOff = NewCT_Percentage()
				if _cdcf := d.DecodeElement(_abedg.SatOff, &_gfgcb); _cdcf != nil {
					return _cdcf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _abedg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_eaaaf := NewEG_ColorTransform()
				_eaaaf.SatMod = NewCT_Percentage()
				if _fccab := d.DecodeElement(_eaaaf.SatMod, &_gfgcb); _fccab != nil {
					return _fccab
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _eaaaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_egfca := NewEG_ColorTransform()
				_egfca.Lum = NewCT_Percentage()
				if _cafee := d.DecodeElement(_egfca.Lum, &_gfgcb); _cafee != nil {
					return _cafee
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _egfca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_dgdfc := NewEG_ColorTransform()
				_dgdfc.LumOff = NewCT_Percentage()
				if _fbfef := d.DecodeElement(_dgdfc.LumOff, &_gfgcb); _fbfef != nil {
					return _fbfef
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _dgdfc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_eadd := NewEG_ColorTransform()
				_eadd.LumMod = NewCT_Percentage()
				if _dcfae := d.DecodeElement(_eadd.LumMod, &_gfgcb); _dcfae != nil {
					return _dcfae
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _eadd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_fedge := NewEG_ColorTransform()
				_fedge.Red = NewCT_Percentage()
				if _egca := d.DecodeElement(_fedge.Red, &_gfgcb); _egca != nil {
					return _egca
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _fedge)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_dcafd := NewEG_ColorTransform()
				_dcafd.RedOff = NewCT_Percentage()
				if _bcebc := d.DecodeElement(_dcafd.RedOff, &_gfgcb); _bcebc != nil {
					return _bcebc
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _dcafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_gbdff := NewEG_ColorTransform()
				_gbdff.RedMod = NewCT_Percentage()
				if _gcedba := d.DecodeElement(_gbdff.RedMod, &_gfgcb); _gcedba != nil {
					return _gcedba
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gbdff)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_dcgga := NewEG_ColorTransform()
				_dcgga.Green = NewCT_Percentage()
				if _defce := d.DecodeElement(_dcgga.Green, &_gfgcb); _defce != nil {
					return _defce
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _dcgga)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_fadbd := NewEG_ColorTransform()
				_fadbd.GreenOff = NewCT_Percentage()
				if _eegca := d.DecodeElement(_fadbd.GreenOff, &_gfgcb); _eegca != nil {
					return _eegca
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _fadbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_ccbab := NewEG_ColorTransform()
				_ccbab.GreenMod = NewCT_Percentage()
				if _cadgc := d.DecodeElement(_ccbab.GreenMod, &_gfgcb); _cadgc != nil {
					return _cadgc
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _ccbab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_gcafe := NewEG_ColorTransform()
				_gcafe.Blue = NewCT_Percentage()
				if _fgcfa := d.DecodeElement(_gcafe.Blue, &_gfgcb); _fgcfa != nil {
					return _fgcfa
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gcafe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_ebaca := NewEG_ColorTransform()
				_ebaca.BlueOff = NewCT_Percentage()
				if _dgdc := d.DecodeElement(_ebaca.BlueOff, &_gfgcb); _dgdc != nil {
					return _dgdc
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _ebaca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_fcefe := NewEG_ColorTransform()
				_fcefe.BlueMod = NewCT_Percentage()
				if _fadf := d.DecodeElement(_fcefe.BlueMod, &_gfgcb); _fadf != nil {
					return _fadf
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _fcefe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_gdede := NewEG_ColorTransform()
				_gdede.Gamma = NewCT_GammaTransform()
				if _ggcea := d.DecodeElement(_gdede.Gamma, &_gfgcb); _ggcea != nil {
					return _ggcea
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _gdede)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_bdfab := NewEG_ColorTransform()
				_bdfab.InvGamma = NewCT_InverseGammaTransform()
				if _cdgb := d.DecodeElement(_bdfab.InvGamma, &_gfgcb); _cdgb != nil {
					return _cdgb
				}
				_eaebe.EG_ColorTransform = append(_eaebe.EG_ColorTransform, _bdfab)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006d\u0043o\u006co\u0072\u0020\u0025\u0076", _gfgcb.Name)
				if _abacc := d.Skip(); _abacc != nil {
					return _abacc
				}
			}
		case _d.EndElement:
			break _eeabbg
		case _d.CharData:
		}
	}
	return nil
}
func (_faagcd *CT_TextNoBullet) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_gebb, _gebcc := d.Token()
		if _gebcc != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067 \u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004e\u006fB\u0075\u006c\u006ce\u0074:\u0020\u0025\u0073", _gebcc)
		}
		if _efbce, _eccde := _gebb.(_d.EndElement); _eccde && _efbce.Name == start.Name {
			break
		}
	}
	return nil
}
func (_bagdf *ST_FontCollectionIndex) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_bagdf = 0
	case "\u006d\u0061\u006ao\u0072":
		*_bagdf = 1
	case "\u006d\u0069\u006eo\u0072":
		*_bagdf = 2
	case "\u006e\u006f\u006e\u0065":
		*_bagdf = 3
	}
	return nil
}
func (_fefbe *ST_PositivePercentage) ValidateWithPath(path string) error {
	_debfg := []string{}
	if _fefbe.ST_PositivePercentageDecimal != nil {
		_debfg = append(_debfg, "\u0053\u0054\u005f\u0050o\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063e\u006et\u0061\u0067\u0065\u0044\u0065\u0063\u0069m\u0061\u006c")
	}
	if _fefbe.ST_PositivePercentage != nil {
		if _fdaad := _fefbe.ST_PositivePercentage.ValidateWithPath(path + "\u002f\u0053\u0054\u005fPo\u0073\u0069\u0074\u0069\u0076\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061g\u0065"); _fdaad != nil {
			return _fdaad
		}
		_debfg = append(_debfg, "S\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065")
	}
	if len(_debfg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _debfg)
	}
	return nil
}

type CT_Path2DList struct{ Path []*CT_Path2D }

func (_agbgg *CT_TextField) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agbgg.IdAttr = "\u007b\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030\u002d\u0030\u0030\u0030\u0030-\u0030\u0030\u0030\u0030\u00300\u0030\u00300\u0030\u0030\u0030\u007d"
	for _, _abbef := range start.Attr {
		if _abbef.Name.Local == "\u0069\u0064" {
			_fbad, _beff := _abbef.Value, error(nil)
			if _beff != nil {
				return _beff
			}
			_agbgg.IdAttr = _fbad
			continue
		}
		if _abbef.Name.Local == "\u0074\u0079\u0070\u0065" {
			_dagc, _dcgce := _abbef.Value, error(nil)
			if _dcgce != nil {
				return _dcgce
			}
			_agbgg.TypeAttr = &_dagc
			continue
		}
	}
_aabdg:
	for {
		_gfcfc, _bgfff := d.Token()
		if _bgfff != nil {
			return _bgfff
		}
		switch _gffacf := _gfcfc.(type) {
		case _d.StartElement:
			switch _gffacf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_agbgg.RPr = NewCT_TextCharacterProperties()
				if _bcbed := d.DecodeElement(_agbgg.RPr, &_gffacf); _bcbed != nil {
					return _bcbed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0050\u0072"}:
				_agbgg.PPr = NewCT_TextParagraphProperties()
				if _gfedee := d.DecodeElement(_agbgg.PPr, &_gffacf); _gfedee != nil {
					return _gfedee
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074"}:
				_agbgg.T = new(string)
				if _fgbcag := d.DecodeElement(_agbgg.T, &_gffacf); _fgbcag != nil {
					return _fgbcag
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_T\u0065\u0078t\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0076", _gffacf.Name)
				if _fbgcc := d.Skip(); _fbgcc != nil {
					return _fbgcc
				}
			}
		case _d.EndElement:
			break _aabdg
		case _d.CharData:
		}
	}
	return nil
}
func ParseUnionST_Coordinate32(s string) (ST_Coordinate32, error) {
	_gcce := ST_Coordinate32{}
	if _a.ST_UniversalMeasurePatternRe.MatchString(s) {
		_gcce.ST_UniversalMeasure = &s
	} else {
		_gegaf, _ccagf := _cd.ParseInt(s, 10, 32)
		if _ccagf != nil {
			return _gcce, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _ccagf)
		}
		_cfgecg := int32(_gegaf)
		_gcce.ST_Coordinate32Unqualified = &_cfgecg
	}
	return _gcce, nil
}
func NewCT_TextUnderlineFillFollowText() *CT_TextUnderlineFillFollowText {
	_cedga := &CT_TextUnderlineFillFollowText{}
	return _cedga
}
func (_abgeb *ST_TextAlignType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_abgeb = 0
	case "\u006c":
		*_abgeb = 1
	case "\u0063\u0074\u0072":
		*_abgeb = 2
	case "\u0072":
		*_abgeb = 3
	case "\u006a\u0075\u0073\u0074":
		*_abgeb = 4
	case "\u006au\u0073\u0074\u004c\u006f\u0077":
		*_abgeb = 5
	case "\u0064\u0069\u0073\u0074":
		*_abgeb = 6
	case "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074":
		*_abgeb = 7
	}
	return nil
}
func (_afccf ST_TextVertOverflowType) String() string {
	switch _afccf {
	case 0:
		return ""
	case 1:
		return "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case 2:
		return "\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073"
	case 3:
		return "\u0063\u006c\u0069\u0070"
	}
	return ""
}
func (_daffb *CT_GeomGuideList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _daffb.Gd != nil {
		_abdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0064"}}
		for _, _abbgg := range _daffb.Gd {
			e.EncodeElement(_abbgg, _abdg)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_Connection struct {
	IdAttr  uint32
	IdxAttr uint32
}

func (_agad *CT_GeomGuide) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", _agad.NameAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066\u006d\u006c\u0061"}, Value: _e.Sprintf("\u0025\u0076", _agad.FmlaAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aaccf ST_LineCap) String() string {
	switch _aaccf {
	case 0:
		return ""
	case 1:
		return "\u0072\u006e\u0064"
	case 2:
		return "\u0073\u0071"
	case 3:
		return "\u0066\u006c\u0061\u0074"
	}
	return ""
}

// Validate validates the TblStyleLst and its children
func (_ggfcc *TblStyleLst) Validate() error {
	return _ggfcc.ValidateWithPath("T\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074")
}
func NewCT_ConnectorLocking() *CT_ConnectorLocking { _baec := &CT_ConnectorLocking{}; return _baec }

type ST_LightRigDirection byte

func (_afedd *CT_TextTabStop) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afedd.PosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0070\u006f\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_afedd.PosAttr)})
	}
	if _afedd.AlgnAttr != ST_TextTabAlignTypeUnset {
		_cbadd, _cefee := _afedd.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _cefee != nil {
			return _cefee
		}
		start.Attr = append(start.Attr, _cbadd)
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_Media and its children
func (_deebcb *EG_Media) Validate() error {
	return _deebcb.ValidateWithPath("\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061")
}
func (_gfccd ST_TextTabAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_baafdf := _d.Attr{}
	_baafdf.Name = name
	switch _gfccd {
	case ST_TextTabAlignTypeUnset:
		_baafdf.Value = ""
	case ST_TextTabAlignTypeL:
		_baafdf.Value = "\u006c"
	case ST_TextTabAlignTypeCtr:
		_baafdf.Value = "\u0063\u0074\u0072"
	case ST_TextTabAlignTypeR:
		_baafdf.Value = "\u0072"
	case ST_TextTabAlignTypeDec:
		_baafdf.Value = "\u0064\u0065\u0063"
	}
	return _baafdf, nil
}
func (_bdcee ST_PresetMaterialType) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_bdcee.String(), start)
}
func (_ebgb *CT_GvmlTextShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _ebgb.UseSpRect != nil {
		_feecf := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0075\u0073\u0065\u0053\u0070\u0052\u0065\u0063\u0074"}}
		e.EncodeElement(_ebgb.UseSpRect, _feecf)
	}
	if _ebgb.Xfrm != nil {
		_gagg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0078\u0066\u0072\u006d"}}
		e.EncodeElement(_ebgb.Xfrm, _gagg)
	}
	return nil
}

type CT_TableCellBorderStyle struct {
	Left    *CT_ThemeableLineStyle
	Right   *CT_ThemeableLineStyle
	Top     *CT_ThemeableLineStyle
	Bottom  *CT_ThemeableLineStyle
	InsideH *CT_ThemeableLineStyle
	InsideV *CT_ThemeableLineStyle
	Tl2br   *CT_ThemeableLineStyle
	Tr2bl   *CT_ThemeableLineStyle
	ExtLst  *CT_OfficeArtExtensionList
}
type CT_TextCharBullet struct{ CharAttr string }

// ValidateWithPath validates the CT_TextNoBullet and its children, prefixing error messages with path
func (_cgbgd *CT_TextNoBullet) ValidateWithPath(path string) error { return nil }
func (_cefa *CT_ColorScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_cefa.Dk1 = NewCT_Color()
	_cefa.Lt1 = NewCT_Color()
	_cefa.Dk2 = NewCT_Color()
	_cefa.Lt2 = NewCT_Color()
	_cefa.Accent1 = NewCT_Color()
	_cefa.Accent2 = NewCT_Color()
	_cefa.Accent3 = NewCT_Color()
	_cefa.Accent4 = NewCT_Color()
	_cefa.Accent5 = NewCT_Color()
	_cefa.Accent6 = NewCT_Color()
	_cefa.Hlink = NewCT_Color()
	_cefa.FolHlink = NewCT_Color()
	for _, _ebdcc := range start.Attr {
		if _ebdcc.Name.Local == "\u006e\u0061\u006d\u0065" {
			_fbce, _cgaa := _ebdcc.Value, error(nil)
			if _cgaa != nil {
				return _cgaa
			}
			_cefa.NameAttr = _fbce
			continue
		}
	}
_cfcb:
	for {
		_edagg, _dedf := d.Token()
		if _dedf != nil {
			return _dedf
		}
		switch _fgfc := _edagg.(type) {
		case _d.StartElement:
			switch _fgfc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0031"}:
				if _fbfg := d.DecodeElement(_cefa.Dk1, &_fgfc); _fbfg != nil {
					return _fbfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0031"}:
				if _faaf := d.DecodeElement(_cefa.Lt1, &_fgfc); _faaf != nil {
					return _faaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064\u006b\u0032"}:
				if _cdefa := d.DecodeElement(_cefa.Dk2, &_fgfc); _cdefa != nil {
					return _cdefa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0074\u0032"}:
				if _edbb := d.DecodeElement(_cefa.Lt2, &_fgfc); _edbb != nil {
					return _edbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0031"}:
				if _cdea := d.DecodeElement(_cefa.Accent1, &_fgfc); _cdea != nil {
					return _cdea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0032"}:
				if _fcf := d.DecodeElement(_cefa.Accent2, &_fgfc); _fcf != nil {
					return _fcf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0033"}:
				if _abeff := d.DecodeElement(_cefa.Accent3, &_fgfc); _abeff != nil {
					return _abeff
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0034"}:
				if _gcec := d.DecodeElement(_cefa.Accent4, &_fgfc); _gcec != nil {
					return _gcec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0035"}:
				if _eegg := d.DecodeElement(_cefa.Accent5, &_fgfc); _eegg != nil {
					return _eegg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061c\u0063\u0065\u006e\u0074\u0036"}:
				if _eabef := d.DecodeElement(_cefa.Accent6, &_fgfc); _eabef != nil {
					return _eabef
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u006c\u0069n\u006b"}:
				if _fdbg := d.DecodeElement(_cefa.Hlink, &_fgfc); _fdbg != nil {
					return _fdbg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b"}:
				if _ddag := d.DecodeElement(_cefa.FolHlink, &_fgfc); _ddag != nil {
					return _ddag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_cefa.ExtLst = NewCT_OfficeArtExtensionList()
				if _fedf := d.DecodeElement(_cefa.ExtLst, &_fgfc); _fedf != nil {
					return _fedf
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063h\u0065m\u0065\u0020\u0025\u0076", _fgfc.Name)
				if _adcc := d.Skip(); _adcc != nil {
					return _adcc
				}
			}
		case _d.EndElement:
			break _cfcb
		case _d.CharData:
		}
	}
	return nil
}
func (_dgcg *CT_Angle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _dga := range start.Attr {
		if _dga.Name.Local == "\u0076\u0061\u006c" {
			_decc, _cac := _cd.ParseInt(_dga.Value, 10, 32)
			if _cac != nil {
				return _cac
			}
			_dgcg.ValAttr = int32(_decc)
			continue
		}
	}
	for {
		_aded, _bcab := d.Token()
		if _bcab != nil {
			return _e.Errorf("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fA\u006e\u0067\u006c\u0065: \u0025\u0073", _bcab)
		}
		if _agd, _afe := _aded.(_d.EndElement); _afe && _agd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_adcea *CT_ColorMappingOverride) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_adcea.Choice.MarshalXML(e, _d.StartElement{})
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_LuminanceEffect struct {
	BrightAttr   *ST_FixedPercentage
	ContrastAttr *ST_FixedPercentage
}
type CT_AnimationDgmBuildProperties struct {
	BldAttr *ST_AnimationDgmBuildType
	RevAttr *bool
}

// ValidateWithPath validates the CT_TableStyleTextStyle and its children, prefixing error messages with path
func (_gfecg *CT_TableStyleTextStyle) ValidateWithPath(path string) error {
	if _adefcc := _gfecg.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _adefcc != nil {
		return _adefcc
	}
	if _ccgeg := _gfecg.IAttr.ValidateWithPath(path + "\u002f\u0049\u0041\u0074\u0074\u0072"); _ccgeg != nil {
		return _ccgeg
	}
	if _gfecg.Font != nil {
		if _gecgg := _gfecg.Font.ValidateWithPath(path + "\u002f\u0046\u006fn\u0074"); _gecgg != nil {
			return _gecgg
		}
	}
	if _gfecg.FontRef != nil {
		if _ggcbc := _gfecg.FontRef.ValidateWithPath(path + "\u002f\u0046\u006f\u006e\u0074\u0052\u0065\u0066"); _ggcbc != nil {
			return _ggcbc
		}
	}
	if _gfecg.ScrgbClr != nil {
		if _aebaaf := _gfecg.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _aebaaf != nil {
			return _aebaaf
		}
	}
	if _gfecg.SrgbClr != nil {
		if _abeaeg := _gfecg.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _abeaeg != nil {
			return _abeaeg
		}
	}
	if _gfecg.HslClr != nil {
		if _gdeg := _gfecg.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _gdeg != nil {
			return _gdeg
		}
	}
	if _gfecg.SysClr != nil {
		if _fcfgbf := _gfecg.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _fcfgbf != nil {
			return _fcfgbf
		}
	}
	if _gfecg.SchemeClr != nil {
		if _gdddfa := _gfecg.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _gdddfa != nil {
			return _gdddfa
		}
	}
	if _gfecg.PrstClr != nil {
		if _gbddd := _gfecg.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _gbddd != nil {
			return _gbddd
		}
	}
	if _gfecg.ExtLst != nil {
		if _ggebca := _gfecg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _ggebca != nil {
			return _ggebca
		}
	}
	return nil
}
func NewCT_TableCol() *CT_TableCol { _fafaea := &CT_TableCol{}; return _fafaea }

type CT_TableCellProperties struct {
	MarLAttr         *ST_Coordinate32
	MarRAttr         *ST_Coordinate32
	MarTAttr         *ST_Coordinate32
	MarBAttr         *ST_Coordinate32
	VertAttr         ST_TextVerticalType
	AnchorAttr       ST_TextAnchoringType
	AnchorCtrAttr    *bool
	HorzOverflowAttr ST_TextHorzOverflowType
	LnL              *CT_LineProperties
	LnR              *CT_LineProperties
	LnT              *CT_LineProperties
	LnB              *CT_LineProperties
	LnTlToBr         *CT_LineProperties
	LnBlToTr         *CT_LineProperties
	Cell3D           *CT_Cell3D
	NoFill           *CT_NoFillProperties
	SolidFill        *CT_SolidColorFillProperties
	GradFill         *CT_GradientFillProperties
	BlipFill         *CT_BlipFillProperties
	PattFill         *CT_PatternFillProperties
	GrpFill          *CT_GroupFillProperties
	Headers          *CT_Headers
	ExtLst           *CT_OfficeArtExtensionList
}

func NewCT_RegularTextRun() *CT_RegularTextRun { _aafcg := &CT_RegularTextRun{}; return _aafcg }

// ValidateWithPath validates the CT_Table and its children, prefixing error messages with path
func (_fbcdb *CT_Table) ValidateWithPath(path string) error {
	if _fbcdb.TblPr != nil {
		if _edebg := _fbcdb.TblPr.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0050\u0072"); _edebg != nil {
			return _edebg
		}
	}
	if _dacbfb := _fbcdb.TblGrid.ValidateWithPath(path + "\u002f\u0054\u0062\u006c\u0047\u0072\u0069\u0064"); _dacbfb != nil {
		return _dacbfb
	}
	for _fcgge, _cagcf := range _fbcdb.Tr {
		if _ebdda := _cagcf.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0054\u0072\u005b\u0025\u0064]", path, _fcgge)); _ebdda != nil {
			return _ebdda
		}
	}
	return nil
}

// ValidateWithPath validates the TblStyleLst and its children, prefixing error messages with path
func (_caffc *TblStyleLst) ValidateWithPath(path string) error {
	if _fgbdg := _caffc.CT_TableStyleList.ValidateWithPath(path); _fgbdg != nil {
		return _fgbdg
	}
	return nil
}

type CT_PositiveFixedPercentage struct{ ValAttr ST_PositiveFixedPercentage }

// Validate validates the ThemeOverride and its children
func (_bdegb *ThemeOverride) Validate() error {
	return _bdegb.ValidateWithPath("\u0054\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065")
}
func NewCT_TextNoAutofit() *CT_TextNoAutofit { _ffgbad := &CT_TextNoAutofit{}; return _ffgbad }
func (_dcea *CT_EffectStyleItem) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_cageb:
	for {
		_abcd, _baffd := d.Token()
		if _baffd != nil {
			return _baffd
		}
		switch _fbgga := _abcd.(type) {
		case _d.StartElement:
			switch _fbgga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_dcea.EffectLst = NewCT_EffectList()
				if _agge := d.DecodeElement(_dcea.EffectLst, &_fbgga); _agge != nil {
					return _agge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_dcea.EffectDag = NewCT_EffectContainer()
				if _fbagc := d.DecodeElement(_dcea.EffectDag, &_fbgga); _fbagc != nil {
					return _fbagc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0065\u006e\u0065\u0033\u0064"}:
				_dcea.Scene3d = NewCT_Scene3D()
				if _bacd := d.DecodeElement(_dcea.Scene3d, &_fbgga); _bacd != nil {
					return _bacd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_dcea.Sp3d = NewCT_Shape3D()
				if _dcbc := d.DecodeElement(_dcea.Sp3d, &_fbgga); _dcbc != nil {
					return _dcbc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u0049\u0074\u0065\u006d\u0020\u0025\u0076", _fbgga.Name)
				if _fadg := d.Skip(); _fadg != nil {
					return _fadg
				}
			}
		case _d.EndElement:
			break _cageb
		case _d.CharData:
		}
	}
	return nil
}
func (_fgfcb *CT_LineJoinMiterProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _addgf := range start.Attr {
		if _addgf.Name.Local == "\u006c\u0069\u006d" {
			_ddedba, _egdg := ParseUnionST_PositivePercentage(_addgf.Value)
			if _egdg != nil {
				return _egdg
			}
			_fgfcb.LimAttr = &_ddedba
			continue
		}
	}
	for {
		_cddb, _abcedb := d.Token()
		if _abcedb != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u004d\u0069\u0074\u0065\u0072P\u0072\u006f\u0070\u0065\u0072t\u0069\u0065s\u003a\u0020\u0025\u0073", _abcedb)
		}
		if _bdaaa, _ddedc := _cddb.(_d.EndElement); _ddedc && _bdaaa.Name == start.Name {
			break
		}
	}
	return nil
}
func NewCT_TextBody() *CT_TextBody {
	_beede := &CT_TextBody{}
	_beede.BodyPr = NewCT_TextBodyProperties()
	return _beede
}
func (_accg *CT_BlipChoice) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_deed:
	for {
		_cfcg, _bgaf := d.Token()
		if _bgaf != nil {
			return _bgaf
		}
		switch _faad := _cfcg.(type) {
		case _d.StartElement:
			switch _faad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0042\u0069\u004c\u0065\u0076\u0065\u006c"}:
				_dbfe := NewCT_AlphaBiLevelEffect()
				if _beegg := d.DecodeElement(_dbfe, &_faad); _beegg != nil {
					return _beegg
				}
				_accg.AlphaBiLevel = append(_accg.AlphaBiLevel, _dbfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061\u0043\u0065\u0069\u006c\u0069\u006e\u0067"}:
				_bdcb := NewCT_AlphaCeilingEffect()
				if _dbbe := d.DecodeElement(_bdcb, &_faad); _dbbe != nil {
					return _dbbe
				}
				_accg.AlphaCeiling = append(_accg.AlphaCeiling, _bdcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0046\u006c\u006f\u006f\u0072"}:
				_beab := NewCT_AlphaFloorEffect()
				if _cgce := d.DecodeElement(_beab, &_faad); _cgce != nil {
					return _cgce
				}
				_accg.AlphaFloor = append(_accg.AlphaFloor, _beab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u0049\u006e\u0076"}:
				_caae := NewCT_AlphaInverseEffect()
				if _dbdbf := d.DecodeElement(_caae, &_faad); _dbdbf != nil {
					return _dbdbf
				}
				_accg.AlphaInv = append(_accg.AlphaInv, _caae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_badgc := NewCT_AlphaModulateEffect()
				if _gfg := d.DecodeElement(_badgc, &_faad); _gfg != nil {
					return _gfg
				}
				_accg.AlphaMod = append(_accg.AlphaMod, _badgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "a\u006c\u0070\u0068\u0061\u004d\u006f\u0064\u0046\u0069\u0078"}:
				_baagd := NewCT_AlphaModulateFixedEffect()
				if _adcf := d.DecodeElement(_baagd, &_faad); _adcf != nil {
					return _adcf
				}
				_accg.AlphaModFix = append(_accg.AlphaModFix, _baagd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061l\u0070\u0068\u0061\u0052\u0065\u0070l"}:
				_fafd := NewCT_AlphaReplaceEffect()
				if _fabg := d.DecodeElement(_fafd, &_faad); _fabg != nil {
					return _fabg
				}
				_accg.AlphaRepl = append(_accg.AlphaRepl, _fafd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062i\u004c\u0065\u0076\u0065\u006c"}:
				_dgab := NewCT_BiLevelEffect()
				if _cgde := d.DecodeElement(_dgab, &_faad); _cgde != nil {
					return _cgde
				}
				_accg.BiLevel = append(_accg.BiLevel, _dgab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0072"}:
				_dbccf := NewCT_BlurEffect()
				if _ebee := d.DecodeElement(_dbccf, &_faad); _ebee != nil {
					return _ebee
				}
				_accg.Blur = append(_accg.Blur, _dbccf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0043\u0068\u0061\u006e\u0067e"}:
				_beda := NewCT_ColorChangeEffect()
				if _ccffg := d.DecodeElement(_beda, &_faad); _ccffg != nil {
					return _ccffg
				}
				_accg.ClrChange = append(_accg.ClrChange, _beda)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063l\u0072\u0052\u0065\u0070\u006c"}:
				_aaea := NewCT_ColorReplaceEffect()
				if _cdef := d.DecodeElement(_aaea, &_faad); _cdef != nil {
					return _cdef
				}
				_accg.ClrRepl = append(_accg.ClrRepl, _aaea)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0064u\u006f\u0074\u006f\u006e\u0065"}:
				_acg := NewCT_DuotoneEffect()
				if _aade := d.DecodeElement(_acg, &_faad); _aade != nil {
					return _aade
				}
				_accg.Duotone = append(_accg.Duotone, _acg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "f\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"}:
				_fgfa := NewCT_FillOverlayEffect()
				if _gcab := d.DecodeElement(_fgfa, &_faad); _gcab != nil {
					return _gcab
				}
				_accg.FillOverlay = append(_accg.FillOverlay, _fgfa)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0061\u0079\u0073\u0063\u006c"}:
				_fbeb := NewCT_GrayscaleEffect()
				if _fada := d.DecodeElement(_fbeb, &_faad); _fada != nil {
					return _fada
				}
				_accg.Grayscl = append(_accg.Grayscl, _fbeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c"}:
				_bbd := NewCT_HSLEffect()
				if _acgb := d.DecodeElement(_bbd, &_faad); _acgb != nil {
					return _acgb
				}
				_accg.Hsl = append(_accg.Hsl, _bbd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_eabg := NewCT_LuminanceEffect()
				if _cggc := d.DecodeElement(_eabg, &_faad); _cggc != nil {
					return _cggc
				}
				_accg.Lum = append(_accg.Lum, _eabg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_abeb := NewCT_TintEffect()
				if _efef := d.DecodeElement(_abeb, &_faad); _efef != nil {
					return _efef
				}
				_accg.Tint = append(_accg.Tint, _abeb)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0042l\u0069\u0070\u0043\u0068\u006f\u0069\u0063\u0065 \u0025\u0076", _faad.Name)
				if _ffgf := d.Skip(); _ffgf != nil {
					return _ffgf
				}
			}
		case _d.EndElement:
			break _deed
		case _d.CharData:
		}
	}
	return nil
}

// Validate validates the CT_ColorMapping and its children
func (_dcbg *CT_ColorMapping) Validate() error {
	return _dcbg.ValidateWithPath("\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067")
}
func (_cbcdge *CT_RelativeOffsetEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cbcdge.TxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_cbcdge.TxAttr)})
	}
	if _cbcdge.TyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_cbcdge.TyAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type CT_StyleMatrixReference struct {
	IdxAttr   uint32
	ScrgbClr  *CT_ScRgbColor
	SrgbClr   *CT_SRgbColor
	HslClr    *CT_HslColor
	SysClr    *CT_SystemColor
	SchemeClr *CT_SchemeColor
	PrstClr   *CT_PresetColor
}

func (_gdbde ST_PresetColorVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eefbb := _d.Attr{}
	_eefbb.Name = name
	switch _gdbde {
	case ST_PresetColorValUnset:
		_eefbb.Value = ""
	case ST_PresetColorValAliceBlue:
		_eefbb.Value = "\u0061l\u0069\u0063\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValAntiqueWhite:
		_eefbb.Value = "\u0061\u006e\u0074i\u0071\u0075\u0065\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValAqua:
		_eefbb.Value = "\u0061\u0071\u0075\u0061"
	case ST_PresetColorValAquamarine:
		_eefbb.Value = "\u0061\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValAzure:
		_eefbb.Value = "\u0061\u007a\u0075r\u0065"
	case ST_PresetColorValBeige:
		_eefbb.Value = "\u0062\u0065\u0069g\u0065"
	case ST_PresetColorValBisque:
		_eefbb.Value = "\u0062\u0069\u0073\u0071\u0075\u0065"
	case ST_PresetColorValBlack:
		_eefbb.Value = "\u0062\u006c\u0061c\u006b"
	case ST_PresetColorValBlanchedAlmond:
		_eefbb.Value = "\u0062\u006c\u0061\u006e\u0063\u0068\u0065\u0064\u0041l\u006d\u006f\u006e\u0064"
	case ST_PresetColorValBlue:
		_eefbb.Value = "\u0062\u006c\u0075\u0065"
	case ST_PresetColorValBlueViolet:
		_eefbb.Value = "\u0062\u006c\u0075\u0065\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValBrown:
		_eefbb.Value = "\u0062\u0072\u006fw\u006e"
	case ST_PresetColorValBurlyWood:
		_eefbb.Value = "\u0062u\u0072\u006c\u0079\u0057\u006f\u006fd"
	case ST_PresetColorValCadetBlue:
		_eefbb.Value = "\u0063a\u0064\u0065\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValChartreuse:
		_eefbb.Value = "\u0063\u0068\u0061\u0072\u0074\u0072\u0065\u0075\u0073\u0065"
	case ST_PresetColorValChocolate:
		_eefbb.Value = "\u0063h\u006f\u0063\u006f\u006c\u0061\u0074e"
	case ST_PresetColorValCoral:
		_eefbb.Value = "\u0063\u006f\u0072a\u006c"
	case ST_PresetColorValCornflowerBlue:
		_eefbb.Value = "\u0063\u006f\u0072\u006e\u0066\u006c\u006f\u0077\u0065r\u0042\u006c\u0075\u0065"
	case ST_PresetColorValCornsilk:
		_eefbb.Value = "\u0063\u006f\u0072\u006e\u0073\u0069\u006c\u006b"
	case ST_PresetColorValCrimson:
		_eefbb.Value = "\u0063r\u0069\u006d\u0073\u006f\u006e"
	case ST_PresetColorValCyan:
		_eefbb.Value = "\u0063\u0079\u0061\u006e"
	case ST_PresetColorValDarkBlue:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkCyan:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDarkGoldenrod:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDarkGray:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkGrey:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkGreen:
		_eefbb.Value = "\u0064a\u0072\u006b\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValDarkKhaki:
		_eefbb.Value = "\u0064a\u0072\u006b\u004b\u0068\u0061\u006bi"
	case ST_PresetColorValDarkMagenta:
		_eefbb.Value = "d\u0061\u0072\u006b\u004d\u0061\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValDarkOliveGreen:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u004f\u006c\u0069\u0076\u0065G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkOrange:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDarkOrchid:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDarkRed:
		_eefbb.Value = "\u0064a\u0072\u006b\u0052\u0065\u0064"
	case ST_PresetColorValDarkSalmon:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDarkSeaGreen:
		_eefbb.Value = "\u0064\u0061\u0072k\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDarkSlateBlue:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDarkSlateGray:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDarkSlateGrey:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDarkTurquoise:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDarkViolet:
		_eefbb.Value = "\u0064\u0061\u0072\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDkBlue:
		_eefbb.Value = "\u0064\u006b\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkCyan:
		_eefbb.Value = "\u0064\u006b\u0043\u0079\u0061\u006e"
	case ST_PresetColorValDkGoldenrod:
		_eefbb.Value = "d\u006b\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValDkGray:
		_eefbb.Value = "\u0064\u006b\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkGrey:
		_eefbb.Value = "\u0064\u006b\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkGreen:
		_eefbb.Value = "\u0064k\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkKhaki:
		_eefbb.Value = "\u0064k\u004b\u0068\u0061\u006b\u0069"
	case ST_PresetColorValDkMagenta:
		_eefbb.Value = "\u0064k\u004d\u0061\u0067\u0065\u006e\u0074a"
	case ST_PresetColorValDkOliveGreen:
		_eefbb.Value = "\u0064\u006b\u004fl\u0069\u0076\u0065\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkOrange:
		_eefbb.Value = "\u0064\u006b\u004f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValDkOrchid:
		_eefbb.Value = "\u0064\u006b\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValDkRed:
		_eefbb.Value = "\u0064\u006b\u0052e\u0064"
	case ST_PresetColorValDkSalmon:
		_eefbb.Value = "\u0064\u006b\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValDkSeaGreen:
		_eefbb.Value = "\u0064\u006b\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValDkSlateBlue:
		_eefbb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDkSlateGray:
		_eefbb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDkSlateGrey:
		_eefbb.Value = "d\u006b\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDkTurquoise:
		_eefbb.Value = "d\u006b\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValDkViolet:
		_eefbb.Value = "\u0064\u006b\u0056\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValDeepPink:
		_eefbb.Value = "\u0064\u0065\u0065\u0070\u0050\u0069\u006e\u006b"
	case ST_PresetColorValDeepSkyBlue:
		_eefbb.Value = "d\u0065\u0065\u0070\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValDimGray:
		_eefbb.Value = "\u0064i\u006d\u0047\u0072\u0061\u0079"
	case ST_PresetColorValDimGrey:
		_eefbb.Value = "\u0064i\u006d\u0047\u0072\u0065\u0079"
	case ST_PresetColorValDodgerBlue:
		_eefbb.Value = "\u0064\u006f\u0064\u0067\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValFirebrick:
		_eefbb.Value = "\u0066i\u0072\u0065\u0062\u0072\u0069\u0063k"
	case ST_PresetColorValFloralWhite:
		_eefbb.Value = "f\u006c\u006f\u0072\u0061\u006c\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValForestGreen:
		_eefbb.Value = "f\u006f\u0072\u0065\u0073\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValFuchsia:
		_eefbb.Value = "\u0066u\u0063\u0068\u0073\u0069\u0061"
	case ST_PresetColorValGainsboro:
		_eefbb.Value = "\u0067a\u0069\u006e\u0073\u0062\u006f\u0072o"
	case ST_PresetColorValGhostWhite:
		_eefbb.Value = "\u0067\u0068\u006f\u0073\u0074\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValGold:
		_eefbb.Value = "\u0067\u006f\u006c\u0064"
	case ST_PresetColorValGoldenrod:
		_eefbb.Value = "\u0067o\u006c\u0064\u0065\u006e\u0072\u006fd"
	case ST_PresetColorValGray:
		_eefbb.Value = "\u0067\u0072\u0061\u0079"
	case ST_PresetColorValGrey:
		_eefbb.Value = "\u0067\u0072\u0065\u0079"
	case ST_PresetColorValGreen:
		_eefbb.Value = "\u0067\u0072\u0065e\u006e"
	case ST_PresetColorValGreenYellow:
		_eefbb.Value = "g\u0072\u0065\u0065\u006e\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValHoneydew:
		_eefbb.Value = "\u0068\u006f\u006e\u0065\u0079\u0064\u0065\u0077"
	case ST_PresetColorValHotPink:
		_eefbb.Value = "\u0068o\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValIndianRed:
		_eefbb.Value = "\u0069n\u0064\u0069\u0061\u006e\u0052\u0065d"
	case ST_PresetColorValIndigo:
		_eefbb.Value = "\u0069\u006e\u0064\u0069\u0067\u006f"
	case ST_PresetColorValIvory:
		_eefbb.Value = "\u0069\u0076\u006fr\u0079"
	case ST_PresetColorValKhaki:
		_eefbb.Value = "\u006b\u0068\u0061k\u0069"
	case ST_PresetColorValLavender:
		_eefbb.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072"
	case ST_PresetColorValLavenderBlush:
		_eefbb.Value = "\u006c\u0061\u0076\u0065\u006e\u0064\u0065\u0072\u0042\u006c\u0075\u0073\u0068"
	case ST_PresetColorValLawnGreen:
		_eefbb.Value = "\u006ca\u0077\u006e\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLemonChiffon:
		_eefbb.Value = "\u006c\u0065\u006do\u006e\u0043\u0068\u0069\u0066\u0066\u006f\u006e"
	case ST_PresetColorValLightBlue:
		_eefbb.Value = "\u006ci\u0067\u0068\u0074\u0042\u006c\u0075e"
	case ST_PresetColorValLightCoral:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLightCyan:
		_eefbb.Value = "\u006ci\u0067\u0068\u0074\u0043\u0079\u0061n"
	case ST_PresetColorValLightGoldenrodYellow:
		_eefbb.Value = "l\u0069g\u0068\u0074\u0047\u006f\u006c\u0064\u0065\u006er\u006f\u0064\u0059\u0065ll\u006f\u0077"
	case ST_PresetColorValLightGray:
		_eefbb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0061y"
	case ST_PresetColorValLightGrey:
		_eefbb.Value = "\u006ci\u0067\u0068\u0074\u0047\u0072\u0065y"
	case ST_PresetColorValLightGreen:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightPink:
		_eefbb.Value = "\u006ci\u0067\u0068\u0074\u0050\u0069\u006ek"
	case ST_PresetColorValLightSalmon:
		_eefbb.Value = "l\u0069\u0067\u0068\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLightSeaGreen:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLightSkyBlue:
		_eefbb.Value = "\u006c\u0069\u0067h\u0074\u0053\u006b\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightSlateGray:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLightSlateGrey:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u006c\u0061\u0074e\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLightSteelBlue:
		_eefbb.Value = "\u006c\u0069\u0067\u0068\u0074\u0053\u0074\u0065\u0065l\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLightYellow:
		_eefbb.Value = "l\u0069\u0067\u0068\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtBlue:
		_eefbb.Value = "\u006c\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtCoral:
		_eefbb.Value = "\u006ct\u0043\u006f\u0072\u0061\u006c"
	case ST_PresetColorValLtCyan:
		_eefbb.Value = "\u006c\u0074\u0043\u0079\u0061\u006e"
	case ST_PresetColorValLtGoldenrodYellow:
		_eefbb.Value = "\u006c\u0074\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064\u0059e\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLtGray:
		_eefbb.Value = "\u006c\u0074\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtGrey:
		_eefbb.Value = "\u006c\u0074\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtGreen:
		_eefbb.Value = "\u006ct\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtPink:
		_eefbb.Value = "\u006c\u0074\u0050\u0069\u006e\u006b"
	case ST_PresetColorValLtSalmon:
		_eefbb.Value = "\u006c\u0074\u0053\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValLtSeaGreen:
		_eefbb.Value = "\u006c\u0074\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValLtSkyBlue:
		_eefbb.Value = "\u006ct\u0053\u006b\u0079\u0042\u006c\u0075e"
	case ST_PresetColorValLtSlateGray:
		_eefbb.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0061\u0079"
	case ST_PresetColorValLtSlateGrey:
		_eefbb.Value = "l\u0074\u0053\u006c\u0061\u0074\u0065\u0047\u0072\u0065\u0079"
	case ST_PresetColorValLtSteelBlue:
		_eefbb.Value = "l\u0074\u0053\u0074\u0065\u0065\u006c\u0042\u006c\u0075\u0065"
	case ST_PresetColorValLtYellow:
		_eefbb.Value = "\u006c\u0074\u0059\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValLime:
		_eefbb.Value = "\u006c\u0069\u006d\u0065"
	case ST_PresetColorValLimeGreen:
		_eefbb.Value = "\u006ci\u006d\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValLinen:
		_eefbb.Value = "\u006c\u0069\u006ee\u006e"
	case ST_PresetColorValMagenta:
		_eefbb.Value = "\u006da\u0067\u0065\u006e\u0074\u0061"
	case ST_PresetColorValMaroon:
		_eefbb.Value = "\u006d\u0061\u0072\u006f\u006f\u006e"
	case ST_PresetColorValMedAquamarine:
		_eefbb.Value = "\u006d\u0065\u0064\u0041\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMedBlue:
		_eefbb.Value = "\u006de\u0064\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedOrchid:
		_eefbb.Value = "\u006de\u0064\u004f\u0072\u0063\u0068\u0069d"
	case ST_PresetColorValMedPurple:
		_eefbb.Value = "\u006de\u0064\u0050\u0075\u0072\u0070\u006ce"
	case ST_PresetColorValMedSeaGreen:
		_eefbb.Value = "m\u0065\u0064\u0053\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedSlateBlue:
		_eefbb.Value = "\u006d\u0065\u0064S\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMedSpringGreen:
		_eefbb.Value = "\u006d\u0065\u0064\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMedTurquoise:
		_eefbb.Value = "\u006d\u0065\u0064T\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMedVioletRed:
		_eefbb.Value = "\u006d\u0065\u0064V\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMediumAquamarine:
		_eefbb.Value = "\u006d\u0065d\u0069\u0075\u006dA\u0071\u0075\u0061\u006d\u0061\u0072\u0069\u006e\u0065"
	case ST_PresetColorValMediumBlue:
		_eefbb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumOrchid:
		_eefbb.Value = "\u006d\u0065\u0064i\u0075\u006d\u004f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValMediumPurple:
		_eefbb.Value = "\u006d\u0065\u0064i\u0075\u006d\u0050\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValMediumSeaGreen:
		_eefbb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0065\u0061G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumSlateBlue:
		_eefbb.Value = "\u006de\u0064i\u0075\u006d\u0053\u006c\u0061\u0074\u0065\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMediumSpringGreen:
		_eefbb.Value = "\u006d\u0065\u0064\u0069\u0075\u006d\u0053\u0070\u0072\u0069\u006e\u0067G\u0072\u0065\u0065\u006e"
	case ST_PresetColorValMediumTurquoise:
		_eefbb.Value = "\u006de\u0064i\u0075\u006d\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValMediumVioletRed:
		_eefbb.Value = "\u006de\u0064i\u0075\u006d\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValMidnightBlue:
		_eefbb.Value = "\u006d\u0069\u0064n\u0069\u0067\u0068\u0074\u0042\u006c\u0075\u0065"
	case ST_PresetColorValMintCream:
		_eefbb.Value = "\u006di\u006e\u0074\u0043\u0072\u0065\u0061m"
	case ST_PresetColorValMistyRose:
		_eefbb.Value = "\u006di\u0073\u0074\u0079\u0052\u006f\u0073e"
	case ST_PresetColorValMoccasin:
		_eefbb.Value = "\u006d\u006f\u0063\u0063\u0061\u0073\u0069\u006e"
	case ST_PresetColorValNavajoWhite:
		_eefbb.Value = "n\u0061\u0076\u0061\u006a\u006f\u0057\u0068\u0069\u0074\u0065"
	case ST_PresetColorValNavy:
		_eefbb.Value = "\u006e\u0061\u0076\u0079"
	case ST_PresetColorValOldLace:
		_eefbb.Value = "\u006fl\u0064\u004c\u0061\u0063\u0065"
	case ST_PresetColorValOlive:
		_eefbb.Value = "\u006f\u006c\u0069v\u0065"
	case ST_PresetColorValOliveDrab:
		_eefbb.Value = "\u006fl\u0069\u0076\u0065\u0044\u0072\u0061b"
	case ST_PresetColorValOrange:
		_eefbb.Value = "\u006f\u0072\u0061\u006e\u0067\u0065"
	case ST_PresetColorValOrangeRed:
		_eefbb.Value = "\u006fr\u0061\u006e\u0067\u0065\u0052\u0065d"
	case ST_PresetColorValOrchid:
		_eefbb.Value = "\u006f\u0072\u0063\u0068\u0069\u0064"
	case ST_PresetColorValPaleGoldenrod:
		_eefbb.Value = "\u0070\u0061\u006c\u0065\u0047\u006f\u006c\u0064\u0065\u006e\u0072\u006f\u0064"
	case ST_PresetColorValPaleGreen:
		_eefbb.Value = "\u0070a\u006c\u0065\u0047\u0072\u0065\u0065n"
	case ST_PresetColorValPaleTurquoise:
		_eefbb.Value = "\u0070\u0061\u006c\u0065\u0054\u0075\u0072\u0071\u0075\u006f\u0069\u0073\u0065"
	case ST_PresetColorValPaleVioletRed:
		_eefbb.Value = "\u0070\u0061\u006c\u0065\u0056\u0069\u006f\u006c\u0065\u0074\u0052\u0065\u0064"
	case ST_PresetColorValPapayaWhip:
		_eefbb.Value = "\u0070\u0061\u0070\u0061\u0079\u0061\u0057\u0068\u0069\u0070"
	case ST_PresetColorValPeachPuff:
		_eefbb.Value = "\u0070e\u0061\u0063\u0068\u0050\u0075\u0066f"
	case ST_PresetColorValPeru:
		_eefbb.Value = "\u0070\u0065\u0072\u0075"
	case ST_PresetColorValPink:
		_eefbb.Value = "\u0070\u0069\u006e\u006b"
	case ST_PresetColorValPlum:
		_eefbb.Value = "\u0070\u006c\u0075\u006d"
	case ST_PresetColorValPowderBlue:
		_eefbb.Value = "\u0070\u006f\u0077\u0064\u0065\u0072\u0042\u006c\u0075\u0065"
	case ST_PresetColorValPurple:
		_eefbb.Value = "\u0070\u0075\u0072\u0070\u006c\u0065"
	case ST_PresetColorValRed:
		_eefbb.Value = "\u0072\u0065\u0064"
	case ST_PresetColorValRosyBrown:
		_eefbb.Value = "\u0072o\u0073\u0079\u0042\u0072\u006f\u0077n"
	case ST_PresetColorValRoyalBlue:
		_eefbb.Value = "\u0072o\u0079\u0061\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValSaddleBrown:
		_eefbb.Value = "s\u0061\u0064\u0064\u006c\u0065\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSalmon:
		_eefbb.Value = "\u0073\u0061\u006c\u006d\u006f\u006e"
	case ST_PresetColorValSandyBrown:
		_eefbb.Value = "\u0073\u0061\u006e\u0064\u0079\u0042\u0072\u006f\u0077\u006e"
	case ST_PresetColorValSeaGreen:
		_eefbb.Value = "\u0073\u0065\u0061\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSeaShell:
		_eefbb.Value = "\u0073\u0065\u0061\u0053\u0068\u0065\u006c\u006c"
	case ST_PresetColorValSienna:
		_eefbb.Value = "\u0073\u0069\u0065\u006e\u006e\u0061"
	case ST_PresetColorValSilver:
		_eefbb.Value = "\u0073\u0069\u006c\u0076\u0065\u0072"
	case ST_PresetColorValSkyBlue:
		_eefbb.Value = "\u0073k\u0079\u0042\u006c\u0075\u0065"
	case ST_PresetColorValSlateBlue:
		_eefbb.Value = "\u0073l\u0061\u0074\u0065\u0042\u006c\u0075e"
	case ST_PresetColorValSlateGray:
		_eefbb.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0061y"
	case ST_PresetColorValSlateGrey:
		_eefbb.Value = "\u0073l\u0061\u0074\u0065\u0047\u0072\u0065y"
	case ST_PresetColorValSnow:
		_eefbb.Value = "\u0073\u006e\u006f\u0077"
	case ST_PresetColorValSpringGreen:
		_eefbb.Value = "s\u0070\u0072\u0069\u006e\u0067\u0047\u0072\u0065\u0065\u006e"
	case ST_PresetColorValSteelBlue:
		_eefbb.Value = "\u0073t\u0065\u0065\u006c\u0042\u006c\u0075e"
	case ST_PresetColorValTan:
		_eefbb.Value = "\u0074\u0061\u006e"
	case ST_PresetColorValTeal:
		_eefbb.Value = "\u0074\u0065\u0061\u006c"
	case ST_PresetColorValThistle:
		_eefbb.Value = "\u0074h\u0069\u0073\u0074\u006c\u0065"
	case ST_PresetColorValTomato:
		_eefbb.Value = "\u0074\u006f\u006d\u0061\u0074\u006f"
	case ST_PresetColorValTurquoise:
		_eefbb.Value = "\u0074u\u0072\u0071\u0075\u006f\u0069\u0073e"
	case ST_PresetColorValViolet:
		_eefbb.Value = "\u0076\u0069\u006f\u006c\u0065\u0074"
	case ST_PresetColorValWheat:
		_eefbb.Value = "\u0077\u0068\u0065a\u0074"
	case ST_PresetColorValWhite:
		_eefbb.Value = "\u0077\u0068\u0069t\u0065"
	case ST_PresetColorValWhiteSmoke:
		_eefbb.Value = "\u0077\u0068\u0069\u0074\u0065\u0053\u006d\u006f\u006b\u0065"
	case ST_PresetColorValYellow:
		_eefbb.Value = "\u0079\u0065\u006c\u006c\u006f\u0077"
	case ST_PresetColorValYellowGreen:
		_eefbb.Value = "y\u0065\u006c\u006c\u006f\u0077\u0047\u0072\u0065\u0065\u006e"
	}
	return _eefbb, nil
}
func (_bcdagd ST_RectAlignment) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_bdgfe := _d.Attr{}
	_bdgfe.Name = name
	switch _bcdagd {
	case ST_RectAlignmentUnset:
		_bdgfe.Value = ""
	case ST_RectAlignmentTl:
		_bdgfe.Value = "\u0074\u006c"
	case ST_RectAlignmentT:
		_bdgfe.Value = "\u0074"
	case ST_RectAlignmentTr:
		_bdgfe.Value = "\u0074\u0072"
	case ST_RectAlignmentL:
		_bdgfe.Value = "\u006c"
	case ST_RectAlignmentCtr:
		_bdgfe.Value = "\u0063\u0074\u0072"
	case ST_RectAlignmentR:
		_bdgfe.Value = "\u0072"
	case ST_RectAlignmentBl:
		_bdgfe.Value = "\u0062\u006c"
	case ST_RectAlignmentB:
		_bdgfe.Value = "\u0062"
	case ST_RectAlignmentBr:
		_bdgfe.Value = "\u0062\u0072"
	}
	return _bdgfe, nil
}
func (_acfag ST_TextAlignType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_ffbeff := _d.Attr{}
	_ffbeff.Name = name
	switch _acfag {
	case ST_TextAlignTypeUnset:
		_ffbeff.Value = ""
	case ST_TextAlignTypeL:
		_ffbeff.Value = "\u006c"
	case ST_TextAlignTypeCtr:
		_ffbeff.Value = "\u0063\u0074\u0072"
	case ST_TextAlignTypeR:
		_ffbeff.Value = "\u0072"
	case ST_TextAlignTypeJust:
		_ffbeff.Value = "\u006a\u0075\u0073\u0074"
	case ST_TextAlignTypeJustLow:
		_ffbeff.Value = "\u006au\u0073\u0074\u004c\u006f\u0077"
	case ST_TextAlignTypeDist:
		_ffbeff.Value = "\u0064\u0069\u0073\u0074"
	case ST_TextAlignTypeThaiDist:
		_ffbeff.Value = "\u0074\u0068\u0061\u0069\u0044\u0069\u0073\u0074"
	}
	return _ffbeff, nil
}

// Validate validates the CT_AudioFile and its children
func (_ecde *CT_AudioFile) Validate() error {
	return _ecde.ValidateWithPath("\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}
func (_eagcg *ST_TextPoint) Validate() error { return _eagcg.ValidateWithPath("") }
func (_dgcded *ST_LineCap) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dgcded = 0
	case "\u0072\u006e\u0064":
		*_dgcded = 1
	case "\u0073\u0071":
		*_dgcded = 2
	case "\u0066\u006c\u0061\u0074":
		*_dgcded = 3
	}
	return nil
}

// Validate validates the CT_HSLEffect and its children
func (_ddaad *CT_HSLEffect) Validate() error {
	return _ddaad.ValidateWithPath("\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074")
}

// ValidateWithPath validates the CT_AlphaFloorEffect and its children, prefixing error messages with path
func (_cdc *CT_AlphaFloorEffect) ValidateWithPath(path string) error { return nil }
func (_bbb *CT_AdjPoint2D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bba := range start.Attr {
		if _bba.Name.Local == "\u0078" {
			_cbed, _egd := ParseUnionST_AdjCoordinate(_bba.Value)
			if _egd != nil {
				return _egd
			}
			_bbb.XAttr = _cbed
			continue
		}
		if _bba.Name.Local == "\u0079" {
			_cc, _faab := ParseUnionST_AdjCoordinate(_bba.Value)
			if _faab != nil {
				return _faab
			}
			_bbb.YAttr = _cc
			continue
		}
	}
	for {
		_dgf, _bfe := d.Token()
		if _bfe != nil {
			return _e.Errorf("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0043\u0054\u005f\u0041d\u006aP\u006fi\u006e\u0074\u0032\u0044\u003a\u0020\u0025s", _bfe)
		}
		if _gdd, _bbc := _dgf.(_d.EndElement); _bbc && _gdd.Name == start.Name {
			break
		}
	}
	return nil
}

type CT_LinearShadeProperties struct {
	AngAttr    *int32
	ScaledAttr *bool
}

// ValidateWithPath validates the CT_EffectList and its children, prefixing error messages with path
func (_gcef *CT_EffectList) ValidateWithPath(path string) error {
	if _gcef.Blur != nil {
		if _edea := _gcef.Blur.ValidateWithPath(path + "\u002f\u0042\u006cu\u0072"); _edea != nil {
			return _edea
		}
	}
	if _gcef.FillOverlay != nil {
		if _gdeb := _gcef.FillOverlay.ValidateWithPath(path + "\u002f\u0046\u0069l\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079"); _gdeb != nil {
			return _gdeb
		}
	}
	if _gcef.Glow != nil {
		if _gdef := _gcef.Glow.ValidateWithPath(path + "\u002f\u0047\u006co\u0077"); _gdef != nil {
			return _gdef
		}
	}
	if _gcef.InnerShdw != nil {
		if _ddcb := _gcef.InnerShdw.ValidateWithPath(path + "\u002f\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0064\u0077"); _ddcb != nil {
			return _ddcb
		}
	}
	if _gcef.OuterShdw != nil {
		if _edee := _gcef.OuterShdw.ValidateWithPath(path + "\u002f\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0064\u0077"); _edee != nil {
			return _edee
		}
	}
	if _gcef.PrstShdw != nil {
		if _fdaaec := _gcef.PrstShdw.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0053\u0068\u0064w"); _fdaaec != nil {
			return _fdaaec
		}
	}
	if _gcef.Reflection != nil {
		if _bbba := _gcef.Reflection.ValidateWithPath(path + "/\u0052\u0065\u0066\u006c\u0065\u0063\u0074\u0069\u006f\u006e"); _bbba != nil {
			return _bbba
		}
	}
	if _gcef.SoftEdge != nil {
		if _deeg := _gcef.SoftEdge.ValidateWithPath(path + "\u002fS\u006f\u0066\u0074\u0045\u0064\u0067e"); _deeg != nil {
			return _deeg
		}
	}
	return nil
}
func NewEG_ThemeableFontStyles() *EG_ThemeableFontStyles {
	_befeb := &EG_ThemeableFontStyles{}
	return _befeb
}

type CT_GroupFillProperties struct{}

func (_ffcgcg ST_LineEndType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cfaecg := _d.Attr{}
	_cfaecg.Name = name
	switch _ffcgcg {
	case ST_LineEndTypeUnset:
		_cfaecg.Value = ""
	case ST_LineEndTypeNone:
		_cfaecg.Value = "\u006e\u006f\u006e\u0065"
	case ST_LineEndTypeTriangle:
		_cfaecg.Value = "\u0074\u0072\u0069\u0061\u006e\u0067\u006c\u0065"
	case ST_LineEndTypeStealth:
		_cfaecg.Value = "\u0073t\u0065\u0061\u006c\u0074\u0068"
	case ST_LineEndTypeDiamond:
		_cfaecg.Value = "\u0064i\u0061\u006d\u006f\u006e\u0064"
	case ST_LineEndTypeOval:
		_cfaecg.Value = "\u006f\u0076\u0061\u006c"
	case ST_LineEndTypeArrow:
		_cfaecg.Value = "\u0061\u0072\u0072o\u0077"
	}
	return _cfaecg, nil
}

const (
	ST_SchemeColorValUnset    ST_SchemeColorVal = 0
	ST_SchemeColorValBg1      ST_SchemeColorVal = 1
	ST_SchemeColorValTx1      ST_SchemeColorVal = 2
	ST_SchemeColorValBg2      ST_SchemeColorVal = 3
	ST_SchemeColorValTx2      ST_SchemeColorVal = 4
	ST_SchemeColorValAccent1  ST_SchemeColorVal = 5
	ST_SchemeColorValAccent2  ST_SchemeColorVal = 6
	ST_SchemeColorValAccent3  ST_SchemeColorVal = 7
	ST_SchemeColorValAccent4  ST_SchemeColorVal = 8
	ST_SchemeColorValAccent5  ST_SchemeColorVal = 9
	ST_SchemeColorValAccent6  ST_SchemeColorVal = 10
	ST_SchemeColorValHlink    ST_SchemeColorVal = 11
	ST_SchemeColorValFolHlink ST_SchemeColorVal = 12
	ST_SchemeColorValPhClr    ST_SchemeColorVal = 13
	ST_SchemeColorValDk1      ST_SchemeColorVal = 14
	ST_SchemeColorValLt1      ST_SchemeColorVal = 15
	ST_SchemeColorValDk2      ST_SchemeColorVal = 16
	ST_SchemeColorValLt2      ST_SchemeColorVal = 17
)

func (_afeagb *ST_AnimationDgmBuildType) ValidateWithPath(path string) error {
	_efdcg := []string{}
	if _afeagb.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		_efdcg = append(_efdcg, "S\u0054\u005f\u0041\u006eim\u0061t\u0069\u006f\u006e\u0042\u0075i\u006c\u0064\u0054\u0079\u0070\u0065")
	}
	if _afeagb.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		_efdcg = append(_efdcg, "\u0053\u0054\u005f\u0041n\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006dO\u006el\u0079\u0042\u0075\u0069\u006c\u0064\u0054y\u0070\u0065")
	}
	if len(_efdcg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _efdcg)
	}
	return nil
}
func (_faaff *CT_OfficeArtExtensionList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_aebfab:
	for {
		_ccgag, _aaegd := d.Token()
		if _aaegd != nil {
			return _aaegd
		}
		switch _aebdf := _ccgag.(type) {
		case _d.StartElement:
			switch _aebdf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074"}:
				_dagfg := NewCT_OfficeArtExtension()
				if _dbeaa := d.DecodeElement(_dagfg, &_aebdf); _dbeaa != nil {
					return _dbeaa
				}
				_faaff.Ext = append(_faaff.Ext, _dagfg)
			default:
				_ff.Log("sk\u0069\u0070p\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u004f\u0066\u0066\u0069\u0063\u0065\u0041\u0072t\u0045x\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u004ci\u0073t\u0020\u0025v", _aebdf.Name)
				if _fdae := d.Skip(); _fdae != nil {
					return _fdae
				}
			}
		case _d.EndElement:
			break _aebfab
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextAutonumberBullet struct {
	TypeAttr    ST_TextAutonumberScheme
	StartAtAttr *int32
}

func NewCT_LuminanceEffect() *CT_LuminanceEffect { _cceff := &CT_LuminanceEffect{}; return _cceff }

type CT_Path2DMoveTo struct{ Pt *CT_AdjPoint2D }

func (_gagaf *CT_NonVisualDrawingProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", _gagaf.IdAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0061\u006d\u0065"}, Value: _e.Sprintf("\u0025\u0076", _gagaf.NameAttr)})
	if _gagaf.DescrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0065\u0073c\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_gagaf.DescrAttr)})
	}
	if _gagaf.HiddenAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u0069\u0064\u0064\u0065\u006e"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gagaf.HiddenAttr))})
	}
	if _gagaf.TitleAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0069\u0074l\u0065"}, Value: _e.Sprintf("\u0025\u0076", *_gagaf.TitleAttr)})
	}
	e.EncodeToken(start)
	if _gagaf.HlinkClick != nil {
		_cgdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0043\u006c\u0069\u0063\u006b"}}
		e.EncodeElement(_gagaf.HlinkClick, _cgdf)
	}
	if _gagaf.HlinkHover != nil {
		_gdga := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068l\u0069\u006e\u006b\u0048\u006f\u0076\u0065\u0072"}}
		e.EncodeElement(_gagaf.HlinkHover, _gdga)
	}
	if _gagaf.ExtLst != nil {
		_ccege := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gagaf.ExtLst, _ccege)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BlipFillProperties and its children
func (_baaa *CT_BlipFillProperties) Validate() error {
	return _baaa.ValidateWithPath("C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_beffg ST_FontCollectionIndex) String() string {
	switch _beffg {
	case 0:
		return ""
	case 1:
		return "\u006d\u0061\u006ao\u0072"
	case 2:
		return "\u006d\u0069\u006eo\u0072"
	case 3:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}
func NewCT_GvmlConnectorNonVisual() *CT_GvmlConnectorNonVisual {
	_bcgbdb := &CT_GvmlConnectorNonVisual{}
	_bcgbdb.CNvPr = NewCT_NonVisualDrawingProps()
	_bcgbdb.CNvCxnSpPr = NewCT_NonVisualConnectorProperties()
	return _bcgbdb
}
func NewCT_GraphicalObjectData() *CT_GraphicalObjectData {
	_cabg := &CT_GraphicalObjectData{}
	return _cabg
}
func (_fb *AG_Blob) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fb.EmbedAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072:\u0065\u006d\u0062\u0065\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_fb.EmbedAttr)})
	}
	if _fb.LinkAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u003a\u006c\u0069\u006e\u006b"}, Value: _e.Sprintf("\u0025\u0076", *_fb.LinkAttr)})
	}
	return nil
}
func NewCT_SRgbColor() *CT_SRgbColor { _aafeg := &CT_SRgbColor{}; return _aafeg }
func (_aegeef *ST_TextStrikeType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_aegeef = 0
	case "\u006e\u006f\u0053\u0074\u0072\u0069\u006b\u0065":
		*_aegeef = 1
	case "\u0073n\u0067\u0053\u0074\u0072\u0069\u006be":
		*_aegeef = 2
	case "\u0064b\u006c\u0053\u0074\u0072\u0069\u006be":
		*_aegeef = 3
	}
	return nil
}
func (_fecea *CT_NoFillProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_fcbdg, _gbbcc := d.Token()
		if _gbbcc != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020C\u0054\u005f\u004e\u006f\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u003a\u0020\u0025\u0073", _gbbcc)
		}
		if _dacea, _edcc := _fcbdg.(_d.EndElement); _edcc && _dacea.Name == start.Name {
			break
		}
	}
	return nil
}
func (_ggfdb ST_Coordinate32) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ggfdb.ST_Coordinate32Unqualified != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_ggfdb.ST_Coordinate32Unqualified)))
	}
	if _ggfdb.ST_UniversalMeasure != nil {
		e.EncodeToken(_d.CharData(*_ggfdb.ST_UniversalMeasure))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_NonVisualConnectorProperties and its children, prefixing error messages with path
func (_addeb *CT_NonVisualConnectorProperties) ValidateWithPath(path string) error {
	if _addeb.CxnSpLocks != nil {
		if _gaeec := _addeb.CxnSpLocks.ValidateWithPath(path + "/\u0043\u0078\u006e\u0053\u0070\u004c\u006f\u0063\u006b\u0073"); _gaeec != nil {
			return _gaeec
		}
	}
	if _addeb.StCxn != nil {
		if _fffad := _addeb.StCxn.ValidateWithPath(path + "\u002f\u0053\u0074\u0043\u0078\u006e"); _fffad != nil {
			return _fffad
		}
	}
	if _addeb.EndCxn != nil {
		if _ebded := _addeb.EndCxn.ValidateWithPath(path + "\u002fE\u006e\u0064\u0043\u0078\u006e"); _ebded != nil {
			return _ebded
		}
	}
	if _addeb.ExtLst != nil {
		if _acdbe := _addeb.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _acdbe != nil {
			return _acdbe
		}
	}
	return nil
}

// Validate validates the CT_PathShadeProperties and its children
func (_ggaee *CT_PathShadeProperties) Validate() error {
	return _ggaee.ValidateWithPath("\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073")
}
func (_gbcbb ST_PresetLineDashVal) ValidateWithPath(path string) error {
	switch _gbcbb {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gbcbb))
	}
	return nil
}
func (_aga *CT_AlphaInverseEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _aga.ScrgbClr != nil {
		_cfe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_aga.ScrgbClr, _cfe)
	}
	if _aga.SrgbClr != nil {
		_bge := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_aga.SrgbClr, _bge)
	}
	if _aga.HslClr != nil {
		_fgd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_aga.HslClr, _fgd)
	}
	if _aga.SysClr != nil {
		_ea := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_aga.SysClr, _ea)
	}
	if _aga.SchemeClr != nil {
		_gbef := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_aga.SchemeClr, _gbef)
	}
	if _aga.PrstClr != nil {
		_fbc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_aga.PrstClr, _fbc)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_agggc ST_AdjAngle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _agggc.ST_Angle != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_agggc.ST_Angle)))
	}
	if _agggc.ST_GeomGuideName != nil {
		e.EncodeToken(_d.CharData(*_agggc.ST_GeomGuideName))
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

// ValidateWithPath validates the CT_ShapeProperties and its children, prefixing error messages with path
func (_bgebg *CT_ShapeProperties) ValidateWithPath(path string) error {
	if _gcgcb := _bgebg.BwModeAttr.ValidateWithPath(path + "/\u0042\u0077\u004d\u006f\u0064\u0065\u0041\u0074\u0074\u0072"); _gcgcb != nil {
		return _gcgcb
	}
	if _bgebg.Xfrm != nil {
		if _cebdcc := _bgebg.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _cebdcc != nil {
			return _cebdcc
		}
	}
	if _bgebg.CustGeom != nil {
		if _dccbb := _bgebg.CustGeom.ValidateWithPath(path + "\u002fC\u0075\u0073\u0074\u0047\u0065\u006fm"); _dccbb != nil {
			return _dccbb
		}
	}
	if _bgebg.PrstGeom != nil {
		if _dfdfgf := _bgebg.PrstGeom.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0047\u0065\u006fm"); _dfdfgf != nil {
			return _dfdfgf
		}
	}
	if _bgebg.NoFill != nil {
		if _fbece := _bgebg.NoFill.ValidateWithPath(path + "\u002fN\u006f\u0046\u0069\u006c\u006c"); _fbece != nil {
			return _fbece
		}
	}
	if _bgebg.SolidFill != nil {
		if _gbbcca := _bgebg.SolidFill.ValidateWithPath(path + "\u002f\u0053\u006f\u006c\u0069\u0064\u0046\u0069\u006c\u006c"); _gbbcca != nil {
			return _gbbcca
		}
	}
	if _bgebg.GradFill != nil {
		if _edecb := _bgebg.GradFill.ValidateWithPath(path + "\u002fG\u0072\u0061\u0064\u0046\u0069\u006cl"); _edecb != nil {
			return _edecb
		}
	}
	if _bgebg.BlipFill != nil {
		if _gdccg := _bgebg.BlipFill.ValidateWithPath(path + "\u002fB\u006c\u0069\u0070\u0046\u0069\u006cl"); _gdccg != nil {
			return _gdccg
		}
	}
	if _bgebg.PattFill != nil {
		if _bede := _bgebg.PattFill.ValidateWithPath(path + "\u002fP\u0061\u0074\u0074\u0046\u0069\u006cl"); _bede != nil {
			return _bede
		}
	}
	if _bgebg.GrpFill != nil {
		if _fgadc := _bgebg.GrpFill.ValidateWithPath(path + "\u002f\u0047\u0072\u0070\u0046\u0069\u006c\u006c"); _fgadc != nil {
			return _fgadc
		}
	}
	if _bgebg.Ln != nil {
		if _fecbd := _bgebg.Ln.ValidateWithPath(path + "\u002f\u004c\u006e"); _fecbd != nil {
			return _fecbd
		}
	}
	if _bgebg.EffectLst != nil {
		if _ggbbc := _bgebg.EffectLst.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0073\u0074"); _ggbbc != nil {
			return _ggbbc
		}
	}
	if _bgebg.EffectDag != nil {
		if _aeead := _bgebg.EffectDag.ValidateWithPath(path + "\u002f\u0045\u0066\u0066\u0065\u0063\u0074\u0044\u0061\u0067"); _aeead != nil {
			return _aeead
		}
	}
	if _bgebg.Scene3d != nil {
		if _fdfdb := _bgebg.Scene3d.ValidateWithPath(path + "\u002f\u0053\u0063\u0065\u006e\u0065\u0033\u0064"); _fdfdb != nil {
			return _fdfdb
		}
	}
	if _bgebg.Sp3d != nil {
		if _feacd := _bgebg.Sp3d.ValidateWithPath(path + "\u002f\u0053\u00703\u0064"); _feacd != nil {
			return _feacd
		}
	}
	if _bgebg.ExtLst != nil {
		if _adeed := _bgebg.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _adeed != nil {
			return _adeed
		}
	}
	return nil
}
func (_agadff ST_TextFontScalePercentOrPercentString) String() string {
	if _agadff.ST_TextFontScalePercent != nil {
		return _e.Sprintf("\u0025\u0076", *_agadff.ST_TextFontScalePercent)
	}
	if _agadff.ST_Percentage != nil {
		return _e.Sprintf("\u0025\u0076", *_agadff.ST_Percentage)
	}
	return ""
}

// Validate validates the CT_BiLevelEffect and its children
func (_aeaac *CT_BiLevelEffect) Validate() error {
	return _aeaac.ValidateWithPath("\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074")
}
func (_gacce ST_TextCapsType) ValidateWithPath(path string) error {
	switch _gacce {
	case 0, 1, 2, 3:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_gacce))
	}
	return nil
}

// ValidateWithPath validates the CT_AlphaReplaceEffect and its children, prefixing error messages with path
func (_gabe *CT_AlphaReplaceEffect) ValidateWithPath(path string) error {
	if _aeba := _gabe.AAttr.ValidateWithPath(path + "\u002f\u0041\u0041\u0074\u0074\u0072"); _aeba != nil {
		return _aeba
	}
	return nil
}

// Validate validates the Graphic and its children
func (_egcbbf *Graphic) Validate() error {
	return _egcbbf.ValidateWithPath("\u0047r\u0061\u0070\u0068\u0069\u0063")
}
func (_bfced *ST_Coordinate32) ValidateWithPath(path string) error {
	_ddeag := []string{}
	if _bfced.ST_Coordinate32Unqualified != nil {
		_ddeag = append(_ddeag, "\u0053\u0054\u005f\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061t\u0065\u0033\u0032\u0055\u006e\u0071\u0075\u0061\u006c\u0069f\u0069\u0065\u0064")
	}
	if _bfced.ST_UniversalMeasure != nil {
		_ddeag = append(_ddeag, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_ddeag) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _ddeag)
	}
	return nil
}

// ValidateWithPath validates the CT_FontScheme and its children, prefixing error messages with path
func (_dfga *CT_FontScheme) ValidateWithPath(path string) error {
	if _gfged := _dfga.MajorFont.ValidateWithPath(path + "\u002f\u004d\u0061\u006a\u006f\u0072\u0046\u006f\u006e\u0074"); _gfged != nil {
		return _gfged
	}
	if _aceec := _dfga.MinorFont.ValidateWithPath(path + "\u002f\u004d\u0069\u006e\u006f\u0072\u0046\u006f\u006e\u0074"); _aceec != nil {
		return _aceec
	}
	if _dfga.ExtLst != nil {
		if _afedc := _dfga.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _afedc != nil {
			return _afedc
		}
	}
	return nil
}

// Validate validates the EG_ColorChoice and its children
func (_bdgdg *EG_ColorChoice) Validate() error {
	return _bdgdg.ValidateWithPath("\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065")
}

type CT_ColorMRU struct{ EG_ColorChoice []*EG_ColorChoice }
type CT_TextSpacingPoint struct{ ValAttr int32 }

func (_bbcef *CT_TextUnderlineLineFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_dbefbe, _dbdgb := d.Token()
		if _dbdgb != nil {
			return _e.Errorf("\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006e\u0065\u004c\u0069\u006e\u0065\u0046\u006f\u006c\u006c\u006fw\u0054\u0065\u0078\u0074\u003a\u0020\u0025\u0073", _dbdgb)
		}
		if _acbdg, _ffbc := _dbefbe.(_d.EndElement); _ffbc && _acbdg.Name == start.Name {
			break
		}
	}
	return nil
}
func (_cfdd *EG_Text3D) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dfgff:
	for {
		_debcc, _bebb := d.Token()
		if _bebb != nil {
			return _bebb
		}
		switch _cffgc := _debcc.(type) {
		case _d.StartElement:
			switch _cffgc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0033\u0064"}:
				_cfdd.Sp3d = NewCT_Shape3D()
				if _bdefd := d.DecodeElement(_cfdd.Sp3d, &_cffgc); _bdefd != nil {
					return _bdefd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u006c\u0061\u0074\u0054\u0078"}:
				_cfdd.FlatTx = NewCT_FlatText()
				if _fddge := d.DecodeElement(_cfdd.FlatTx, &_cffgc); _fddge != nil {
					return _fddge
				}
			default:
				_ff.Log("\u0073k\u0069\u0070p\u0069\u006e\u0067\u0020u\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006cem\u0065\u006e\u0074 \u006f\u006e \u0045\u0047\u005f\u0054\u0065\u0078t\u0033\u0044 \u0025\u0076", _cffgc.Name)
				if _dgbba := d.Skip(); _dgbba != nil {
					return _dgbba
				}
			}
		case _d.EndElement:
			break _dfgff
		case _d.CharData:
		}
	}
	return nil
}

type EG_TextBullet struct {
	BuNone    *CT_TextNoBullet
	BuAutoNum *CT_TextAutonumberBullet
	BuChar    *CT_TextCharBullet
	BuBlip    *CT_TextBlipBullet
}

func (_cccc *CT_BlendEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	_faeg, _bgbfb := _cccc.BlendAttr.MarshalXMLAttr(_d.Name{Local: "\u0062\u006c\u0065n\u0064"})
	if _bgbfb != nil {
		return _bgbfb
	}
	start.Attr = append(start.Attr, _faeg)
	e.EncodeToken(start)
	_egdd := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063\u006f\u006e\u0074"}}
	e.EncodeElement(_cccc.Cont, _egdd)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextBulletSize and its children, prefixing error messages with path
func (_fffde *EG_TextBulletSize) ValidateWithPath(path string) error {
	if _fffde.BuSzTx != nil {
		if _cgcda := _fffde.BuSzTx.ValidateWithPath(path + "\u002fB\u0075\u0053\u007a\u0054\u0078"); _cgcda != nil {
			return _cgcda
		}
	}
	if _fffde.BuSzPct != nil {
		if _ceafa := _fffde.BuSzPct.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0063\u0074"); _ceafa != nil {
			return _ceafa
		}
	}
	if _fffde.BuSzPts != nil {
		if _ebdec := _fffde.BuSzPts.ValidateWithPath(path + "\u002f\u0042\u0075\u0053\u007a\u0050\u0074\u0073"); _ebdec != nil {
			return _ebdec
		}
	}
	return nil
}
func (_aecebe *CT_SRgbColor) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u0061\u006c"}, Value: _e.Sprintf("\u0025\u0076", _aecebe.ValAttr)})
	e.EncodeToken(start)
	if _aecebe.EG_ColorTransform != nil {
		for _, _gedegc := range _aecebe.EG_ColorTransform {
			_gedegc.MarshalXML(e, _d.StartElement{})
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

const (
	ST_TextAutonumberSchemeUnset                 ST_TextAutonumberScheme = 0
	ST_TextAutonumberSchemeAlphaLcParenBoth      ST_TextAutonumberScheme = 1
	ST_TextAutonumberSchemeAlphaUcParenBoth      ST_TextAutonumberScheme = 2
	ST_TextAutonumberSchemeAlphaLcParenR         ST_TextAutonumberScheme = 3
	ST_TextAutonumberSchemeAlphaUcParenR         ST_TextAutonumberScheme = 4
	ST_TextAutonumberSchemeAlphaLcPeriod         ST_TextAutonumberScheme = 5
	ST_TextAutonumberSchemeAlphaUcPeriod         ST_TextAutonumberScheme = 6
	ST_TextAutonumberSchemeArabicParenBoth       ST_TextAutonumberScheme = 7
	ST_TextAutonumberSchemeArabicParenR          ST_TextAutonumberScheme = 8
	ST_TextAutonumberSchemeArabicPeriod          ST_TextAutonumberScheme = 9
	ST_TextAutonumberSchemeArabicPlain           ST_TextAutonumberScheme = 10
	ST_TextAutonumberSchemeRomanLcParenBoth      ST_TextAutonumberScheme = 11
	ST_TextAutonumberSchemeRomanUcParenBoth      ST_TextAutonumberScheme = 12
	ST_TextAutonumberSchemeRomanLcParenR         ST_TextAutonumberScheme = 13
	ST_TextAutonumberSchemeRomanUcParenR         ST_TextAutonumberScheme = 14
	ST_TextAutonumberSchemeRomanLcPeriod         ST_TextAutonumberScheme = 15
	ST_TextAutonumberSchemeRomanUcPeriod         ST_TextAutonumberScheme = 16
	ST_TextAutonumberSchemeCircleNumDbPlain      ST_TextAutonumberScheme = 17
	ST_TextAutonumberSchemeCircleNumWdBlackPlain ST_TextAutonumberScheme = 18
	ST_TextAutonumberSchemeCircleNumWdWhitePlain ST_TextAutonumberScheme = 19
	ST_TextAutonumberSchemeArabicDbPeriod        ST_TextAutonumberScheme = 20
	ST_TextAutonumberSchemeArabicDbPlain         ST_TextAutonumberScheme = 21
	ST_TextAutonumberSchemeEa1ChsPeriod          ST_TextAutonumberScheme = 22
	ST_TextAutonumberSchemeEa1ChsPlain           ST_TextAutonumberScheme = 23
	ST_TextAutonumberSchemeEa1ChtPeriod          ST_TextAutonumberScheme = 24
	ST_TextAutonumberSchemeEa1ChtPlain           ST_TextAutonumberScheme = 25
	ST_TextAutonumberSchemeEa1JpnChsDbPeriod     ST_TextAutonumberScheme = 26
	ST_TextAutonumberSchemeEa1JpnKorPlain        ST_TextAutonumberScheme = 27
	ST_TextAutonumberSchemeEa1JpnKorPeriod       ST_TextAutonumberScheme = 28
	ST_TextAutonumberSchemeArabic1Minus          ST_TextAutonumberScheme = 29
	ST_TextAutonumberSchemeArabic2Minus          ST_TextAutonumberScheme = 30
	ST_TextAutonumberSchemeHebrew2Minus          ST_TextAutonumberScheme = 31
	ST_TextAutonumberSchemeThaiAlphaPeriod       ST_TextAutonumberScheme = 32
	ST_TextAutonumberSchemeThaiAlphaParenR       ST_TextAutonumberScheme = 33
	ST_TextAutonumberSchemeThaiAlphaParenBoth    ST_TextAutonumberScheme = 34
	ST_TextAutonumberSchemeThaiNumPeriod         ST_TextAutonumberScheme = 35
	ST_TextAutonumberSchemeThaiNumParenR         ST_TextAutonumberScheme = 36
	ST_TextAutonumberSchemeThaiNumParenBoth      ST_TextAutonumberScheme = 37
	ST_TextAutonumberSchemeHindiAlphaPeriod      ST_TextAutonumberScheme = 38
	ST_TextAutonumberSchemeHindiNumPeriod        ST_TextAutonumberScheme = 39
	ST_TextAutonumberSchemeHindiNumParenR        ST_TextAutonumberScheme = 40
	ST_TextAutonumberSchemeHindiAlpha1Period     ST_TextAutonumberScheme = 41
)

func (_bacgd ST_BlipCompression) String() string {
	switch _bacgd {
	case 0:
		return ""
	case 1:
		return "\u0065\u006d\u0061i\u006c"
	case 2:
		return "\u0073\u0063\u0072\u0065\u0065\u006e"
	case 3:
		return "\u0070\u0072\u0069n\u0074"
	case 4:
		return "\u0068q\u0070\u0072\u0069\u006e\u0074"
	case 5:
		return "\u006e\u006f\u006e\u0065"
	}
	return ""
}

// Validate validates the CT_Path2DList and its children
func (_cfaee *CT_Path2DList) Validate() error {
	return _cfaee.ValidateWithPath("\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074")
}
func (_bgcfbe *CT_GvmlGroupShapeChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _bgcfbe.TxSp != nil {
		_cceca := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0053\u0070"}}
		for _, _fbcde := range _bgcfbe.TxSp {
			e.EncodeElement(_fbcde, _cceca)
		}
	}
	if _bgcfbe.Sp != nil {
		_cgdg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070"}}
		for _, _ecdeg := range _bgcfbe.Sp {
			e.EncodeElement(_ecdeg, _cgdg)
		}
	}
	if _bgcfbe.CxnSp != nil {
		_dbfec := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u0078\u006e\u0053\u0070"}}
		for _, _ecdcg := range _bgcfbe.CxnSp {
			e.EncodeElement(_ecdcg, _dbfec)
		}
	}
	if _bgcfbe.Pic != nil {
		_dbeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070i\u0063"}}
		for _, _agba := range _bgcfbe.Pic {
			e.EncodeElement(_agba, _dbeg)
		}
	}
	if _bgcfbe.GraphicFrame != nil {
		_bcad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u0061\u006d\u0065"}}
		for _, _adgdb := range _bgcfbe.GraphicFrame {
			e.EncodeElement(_adgdb, _bcad)
		}
	}
	if _bgcfbe.GrpSp != nil {
		_fcdf := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0067\u0072\u0070\u0053\u0070"}}
		for _, _ecbfb := range _bgcfbe.GrpSp {
			e.EncodeElement(_ecbfb, _fcdf)
		}
	}
	return nil
}
func (_addad ST_TextAlignType) ValidateWithPath(path string) error {
	switch _addad {
	case 0, 1, 2, 3, 4, 5, 6, 7:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_addad))
	}
	return nil
}
func (_dedfb *CT_ConnectionSiteList) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _dedfb.Cxn != nil {
		_ggge := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063x\u006e"}}
		for _, _gbaf := range _dedfb.Cxn {
			e.EncodeElement(_gbaf, _ggge)
		}
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type EG_TextBulletTypeface struct {
	BuFontTx *CT_TextBulletTypefaceFollowText
	BuFont   *CT_TextFont
}

// ValidateWithPath validates the CT_Shape3D and its children, prefixing error messages with path
func (_ddea *CT_Shape3D) ValidateWithPath(path string) error {
	if _ddea.ZAttr != nil {
		if _ccfabb := _ddea.ZAttr.ValidateWithPath(path + "\u002f\u005a\u0041\u0074\u0074\u0072"); _ccfabb != nil {
			return _ccfabb
		}
	}
	if _ddea.ExtrusionHAttr != nil {
		if *_ddea.ExtrusionHAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002fm\u002e\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030\u0020(\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddea.ExtrusionHAttr)
		}
		if *_ddea.ExtrusionHAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0045\u0078t\u0072\u0075\u0073i\u006f\u006e\u0048A\u0074\u0074r\u0020\u006d\u0075\u0073\u0074\u0020b\u0065 <\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddea.ExtrusionHAttr)
		}
	}
	if _ddea.ContourWAttr != nil {
		if *_ddea.ContourWAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0057\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e\u003d\u0020\u0030 (\u0068\u0061\u0076e\u0020%\u0076\u0029", path, *_ddea.ContourWAttr)
		}
		if *_ddea.ContourWAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0043\u006f\u006e\u0074\u006f\u0075r\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075s\u0074 \u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u00390\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_ddea.ContourWAttr)
		}
	}
	if _faea := _ddea.PrstMaterialAttr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u004d\u0061\u0074\u0065\u0072\u0069\u0061l\u0041\u0074\u0074\u0072"); _faea != nil {
		return _faea
	}
	if _ddea.BevelT != nil {
		if _bbggad := _ddea.BevelT.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0054"); _bbggad != nil {
			return _bbggad
		}
	}
	if _ddea.BevelB != nil {
		if _cbee := _ddea.BevelB.ValidateWithPath(path + "\u002fB\u0065\u0076\u0065\u006c\u0042"); _cbee != nil {
			return _cbee
		}
	}
	if _ddea.ExtrusionClr != nil {
		if _fbdg := _ddea.ExtrusionClr.ValidateWithPath(path + "\u002f\u0045\u0078\u0074\u0072\u0075\u0073\u0069\u006f\u006e\u0043\u006c\u0072"); _fbdg != nil {
			return _fbdg
		}
	}
	if _ddea.ContourClr != nil {
		if _gageed := _ddea.ContourClr.ValidateWithPath(path + "/\u0043\u006f\u006e\u0074\u006f\u0075\u0072\u0043\u006c\u0072"); _gageed != nil {
			return _gageed
		}
	}
	if _ddea.ExtLst != nil {
		if _abeaeb := _ddea.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _abeaeb != nil {
			return _abeaeb
		}
	}
	return nil
}
func (_bfgcg *CT_ScRgbColor) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _abeac := range start.Attr {
		if _abeac.Name.Local == "\u0072" {
			_ggcdac, _afdad := ParseUnionST_Percentage(_abeac.Value)
			if _afdad != nil {
				return _afdad
			}
			_bfgcg.RAttr = _ggcdac
			continue
		}
		if _abeac.Name.Local == "\u0067" {
			_bgefa, _bbegf := ParseUnionST_Percentage(_abeac.Value)
			if _bbegf != nil {
				return _bbegf
			}
			_bfgcg.GAttr = _bgefa
			continue
		}
		if _abeac.Name.Local == "\u0062" {
			_gdbdg, _ggedb := ParseUnionST_Percentage(_abeac.Value)
			if _ggedb != nil {
				return _ggedb
			}
			_bfgcg.BAttr = _gdbdg
			continue
		}
	}
_gfead:
	for {
		_cbabc, _ecfgc := d.Token()
		if _ecfgc != nil {
			return _ecfgc
		}
		switch _cabad := _cbabc.(type) {
		case _d.StartElement:
			switch _cabad.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_gfbf := NewEG_ColorTransform()
				_gfbf.Tint = NewCT_PositiveFixedPercentage()
				if _cadcg := d.DecodeElement(_gfbf.Tint, &_cabad); _cadcg != nil {
					return _cadcg
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _gfbf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_ceeef := NewEG_ColorTransform()
				_ceeef.Shade = NewCT_PositiveFixedPercentage()
				if _bcefb := d.DecodeElement(_ceeef.Shade, &_cabad); _bcefb != nil {
					return _bcefb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _ceeef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_gcdb := NewEG_ColorTransform()
				_gcdb.Comp = NewCT_ComplementTransform()
				if _ecacg := d.DecodeElement(_gcdb.Comp, &_cabad); _ecacg != nil {
					return _ecacg
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _gcdb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_abeae := NewEG_ColorTransform()
				_abeae.Inv = NewCT_InverseTransform()
				if _eecfc := d.DecodeElement(_abeae.Inv, &_cabad); _eecfc != nil {
					return _eecfc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _abeae)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_acabd := NewEG_ColorTransform()
				_acabd.Gray = NewCT_GrayscaleTransform()
				if _bfagc := d.DecodeElement(_acabd.Gray, &_cabad); _bfagc != nil {
					return _bfagc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _acabd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_edade := NewEG_ColorTransform()
				_edade.Alpha = NewCT_PositiveFixedPercentage()
				if _degdd := d.DecodeElement(_edade.Alpha, &_cabad); _degdd != nil {
					return _degdd
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _edade)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_febab := NewEG_ColorTransform()
				_febab.AlphaOff = NewCT_FixedPercentage()
				if _faddd := d.DecodeElement(_febab.AlphaOff, &_cabad); _faddd != nil {
					return _faddd
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _febab)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_eebfg := NewEG_ColorTransform()
				_eebfg.AlphaMod = NewCT_PositivePercentage()
				if _dddcc := d.DecodeElement(_eebfg.AlphaMod, &_cabad); _dddcc != nil {
					return _dddcc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _eebfg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_bgad := NewEG_ColorTransform()
				_bgad.Hue = NewCT_PositiveFixedAngle()
				if _feddf := d.DecodeElement(_bgad.Hue, &_cabad); _feddf != nil {
					return _feddf
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _bgad)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_defaf := NewEG_ColorTransform()
				_defaf.HueOff = NewCT_Angle()
				if _cceb := d.DecodeElement(_defaf.HueOff, &_cabad); _cceb != nil {
					return _cceb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _defaf)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_gegee := NewEG_ColorTransform()
				_gegee.HueMod = NewCT_PositivePercentage()
				if _ecfef := d.DecodeElement(_gegee.HueMod, &_cabad); _ecfef != nil {
					return _ecfef
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _gegee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_fbgc := NewEG_ColorTransform()
				_fbgc.Sat = NewCT_Percentage()
				if _defef := d.DecodeElement(_fbgc.Sat, &_cabad); _defef != nil {
					return _defef
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _fbgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_gdfb := NewEG_ColorTransform()
				_gdfb.SatOff = NewCT_Percentage()
				if _geebb := d.DecodeElement(_gdfb.SatOff, &_cabad); _geebb != nil {
					return _geebb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _gdfb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_dbbbc := NewEG_ColorTransform()
				_dbbbc.SatMod = NewCT_Percentage()
				if _eaeabc := d.DecodeElement(_dbbbc.SatMod, &_cabad); _eaeabc != nil {
					return _eaeabc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _dbbbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_efgfd := NewEG_ColorTransform()
				_efgfd.Lum = NewCT_Percentage()
				if _fcfgbd := d.DecodeElement(_efgfd.Lum, &_cabad); _fcfgbd != nil {
					return _fcfgbd
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _efgfd)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_adca := NewEG_ColorTransform()
				_adca.LumOff = NewCT_Percentage()
				if _fgbg := d.DecodeElement(_adca.LumOff, &_cabad); _fgbg != nil {
					return _fgbg
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _adca)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_eadee := NewEG_ColorTransform()
				_eadee.LumMod = NewCT_Percentage()
				if _aecfb := d.DecodeElement(_eadee.LumMod, &_cabad); _aecfb != nil {
					return _aecfb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _eadee)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_dccbe := NewEG_ColorTransform()
				_dccbe.Red = NewCT_Percentage()
				if _ddgda := d.DecodeElement(_dccbe.Red, &_cabad); _ddgda != nil {
					return _ddgda
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _dccbe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_aegg := NewEG_ColorTransform()
				_aegg.RedOff = NewCT_Percentage()
				if _ddagc := d.DecodeElement(_aegg.RedOff, &_cabad); _ddagc != nil {
					return _ddagc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _aegg)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_degbc := NewEG_ColorTransform()
				_degbc.RedMod = NewCT_Percentage()
				if _gaadb := d.DecodeElement(_degbc.RedMod, &_cabad); _gaadb != nil {
					return _gaadb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _degbc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_cfadc := NewEG_ColorTransform()
				_cfadc.Green = NewCT_Percentage()
				if _cafaa := d.DecodeElement(_cfadc.Green, &_cabad); _cafaa != nil {
					return _cafaa
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _cfadc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_dcfe := NewEG_ColorTransform()
				_dcfe.GreenOff = NewCT_Percentage()
				if _fbfcc := d.DecodeElement(_dcfe.GreenOff, &_cabad); _fbfcc != nil {
					return _fbfcc
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _dcfe)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_eeeb := NewEG_ColorTransform()
				_eeeb.GreenMod = NewCT_Percentage()
				if _ebdeec := d.DecodeElement(_eeeb.GreenMod, &_cabad); _ebdeec != nil {
					return _ebdeec
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _eeeb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_dfgc := NewEG_ColorTransform()
				_dfgc.Blue = NewCT_Percentage()
				if _edccb := d.DecodeElement(_dfgc.Blue, &_cabad); _edccb != nil {
					return _edccb
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _dfgc)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_aaef := NewEG_ColorTransform()
				_aaef.BlueOff = NewCT_Percentage()
				if _adcac := d.DecodeElement(_aaef.BlueOff, &_cabad); _adcac != nil {
					return _adcac
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _aaef)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_eddcb := NewEG_ColorTransform()
				_eddcb.BlueMod = NewCT_Percentage()
				if _daddg := d.DecodeElement(_eddcb.BlueMod, &_cabad); _daddg != nil {
					return _daddg
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _eddcb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_fdccb := NewEG_ColorTransform()
				_fdccb.Gamma = NewCT_GammaTransform()
				if _ecbfbg := d.DecodeElement(_fdccb.Gamma, &_cabad); _ecbfbg != nil {
					return _ecbfbg
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _fdccb)
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_bbebc := NewEG_ColorTransform()
				_bbebc.InvGamma = NewCT_InverseGammaTransform()
				if _gffaa := d.DecodeElement(_bbebc.InvGamma, &_cabad); _gffaa != nil {
					return _gffaa
				}
				_bfgcg.EG_ColorTransform = append(_bfgcg.EG_ColorTransform, _bbebc)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0053c\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072 \u0025\u0076", _cabad.Name)
				if _bagg := d.Skip(); _bagg != nil {
					return _bagg
				}
			}
		case _d.EndElement:
			break _gfead
		case _d.CharData:
		}
	}
	return nil
}

type CT_BaseStyles struct {
	ClrScheme  *CT_ColorScheme
	FontScheme *CT_FontScheme
	FmtScheme  *CT_StyleMatrix
	ExtLst     *CT_OfficeArtExtensionList
}

func (_cgedb *CT_TextLineBreak) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_dagfc:
	for {
		_bbbag, _acfca := d.Token()
		if _acfca != nil {
			return _acfca
		}
		switch _begce := _bbbag.(type) {
		case _d.StartElement:
			switch _begce.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0050\u0072"}:
				_cgedb.RPr = NewCT_TextCharacterProperties()
				if _egdagb := d.DecodeElement(_cgedb.RPr, &_begce); _egdagb != nil {
					return _egdagb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b\u0020\u0025v", _begce.Name)
				if _ecadc := d.Skip(); _ecadc != nil {
					return _ecadc
				}
			}
		case _d.EndElement:
			break _dagfc
		case _d.CharData:
		}
	}
	return nil
}

type CT_TextUnderlineFillFollowText struct{}

func (_bffd *ST_TextPoint) ValidateWithPath(path string) error {
	_aceeeg := []string{}
	if _bffd.ST_TextPointUnqualified != nil {
		_aceeeg = append(_aceeeg, "\u0053\u0054\u005fTe\u0078\u0074\u0050\u006f\u0069\u006e\u0074\u0055\u006e\u0071\u0075\u0061\u006c\u0069\u0066\u0069\u0065\u0064")
	}
	if _bffd.ST_UniversalMeasure != nil {
		_aceeeg = append(_aceeeg, "\u0053\u0054\u005f\u0055ni\u0076\u0065\u0072\u0073\u0061\u006c\u004d\u0065\u0061\u0073\u0075\u0072\u0065")
	}
	if len(_aceeeg) > 1 {
		return _e.Errorf("%\u0073\u0020\u0074\u006f\u006f\u0020m\u0061\u006e\u0079\u0020\u006d\u0065\u006d\u0062\u0065r\u0073\u0020\u0073e\u0074:\u0020\u0025\u0076", path, _aceeeg)
	}
	return nil
}
func (_gddda *CT_TextBodyProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gddda.RotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.RotAttr)})
	}
	if _gddda.SpcFirstLastParaAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070c\u0046\u0069\u0072s\u0074\u004c\u0061\u0073\u0074\u0050\u0061\u0072\u0061"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.SpcFirstLastParaAttr))})
	}
	if _gddda.VertOverflowAttr != ST_TextVertOverflowTypeUnset {
		_acgdf, _ffgad := _gddda.VertOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072t\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _ffgad != nil {
			return _ffgad
		}
		start.Attr = append(start.Attr, _acgdf)
	}
	if _gddda.HorzOverflowAttr != ST_TextHorzOverflowTypeUnset {
		_eaaae, _gebfg := _gddda.HorzOverflowAttr.MarshalXMLAttr(_d.Name{Local: "\u0068\u006f\u0072z\u004f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"})
		if _gebfg != nil {
			return _gebfg
		}
		start.Attr = append(start.Attr, _eaaae)
	}
	if _gddda.VertAttr != ST_TextVerticalTypeUnset {
		_fcgfd, _fgaagf := _gddda.VertAttr.MarshalXMLAttr(_d.Name{Local: "\u0076\u0065\u0072\u0074"})
		if _fgaagf != nil {
			return _fgaagf
		}
		start.Attr = append(start.Attr, _fcgfd)
	}
	if _gddda.WrapAttr != ST_TextWrappingTypeUnset {
		_fedde, _ffbfb := _gddda.WrapAttr.MarshalXMLAttr(_d.Name{Local: "\u0077\u0072\u0061\u0070"})
		if _ffbfb != nil {
			return _ffbfb
		}
		start.Attr = append(start.Attr, _fedde)
	}
	if _gddda.LInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006c\u0049\u006e\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.LInsAttr)})
	}
	if _gddda.TInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0049\u006e\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.TInsAttr)})
	}
	if _gddda.RInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0049\u006e\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.RInsAttr)})
	}
	if _gddda.BInsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0049\u006e\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.BInsAttr)})
	}
	if _gddda.NumColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u0075\u006d\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.NumColAttr)})
	}
	if _gddda.SpcColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0070\u0063\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0076", *_gddda.SpcColAttr)})
	}
	if _gddda.RtlColAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0074\u006c\u0043\u006f\u006c"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.RtlColAttr))})
	}
	if _gddda.FromWordArtAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "f\u0072\u006f\u006d\u0057\u006f\u0072\u0064\u0041\u0072\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.FromWordArtAttr))})
	}
	if _gddda.AnchorAttr != ST_TextAnchoringTypeUnset {
		_adgcba, _gaddf := _gddda.AnchorAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006e\u0063\u0068\u006f\u0072"})
		if _gaddf != nil {
			return _gaddf
		}
		start.Attr = append(start.Attr, _adgcba)
	}
	if _gddda.AnchorCtrAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0061n\u0063\u0068\u006f\u0072\u0043\u0074r"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.AnchorCtrAttr))})
	}
	if _gddda.ForceAAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066o\u0072\u0063\u0065\u0041\u0041"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.ForceAAAttr))})
	}
	if _gddda.UprightAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0075p\u0072\u0069\u0067\u0068\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.UprightAttr))})
	}
	if _gddda.CompatLnSpcAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "c\u006f\u006d\u0070\u0061\u0074\u004c\u006e\u0053\u0070\u0063"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gddda.CompatLnSpcAttr))})
	}
	e.EncodeToken(start)
	if _gddda.PrstTxWarp != nil {
		_bgfba := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070r\u0073\u0074\u0054\u0078\u0057\u0061\u0072\u0070"}}
		e.EncodeElement(_gddda.PrstTxWarp, _bgfba)
	}
	if _gddda.NoAutofit != nil {
		_bddab := _d.StartElement{Name: _d.Name{Local: "a\u003a\u006e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_gddda.NoAutofit, _bddab)
	}
	if _gddda.NormAutofit != nil {
		_gcagfa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006e\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}}
		e.EncodeElement(_gddda.NormAutofit, _gcagfa)
	}
	if _gddda.SpAutoFit != nil {
		_dbfeb := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0070\u0041\u0075\u0074\u006f\u0046\u0069\u0074"}}
		e.EncodeElement(_gddda.SpAutoFit, _dbfeb)
	}
	if _gddda.Scene3d != nil {
		_fcecc := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0063\u0065\u006e\u0065\u0033d"}}
		e.EncodeElement(_gddda.Scene3d, _fcecc)
	}
	if _gddda.Sp3d != nil {
		_gbebe := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0070\u0033\u0064"}}
		e.EncodeElement(_gddda.Sp3d, _gbebe)
	}
	if _gddda.FlatTx != nil {
		_gdaa := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0066\u006c\u0061\u0074\u0054\u0078"}}
		e.EncodeElement(_gddda.FlatTx, _gdaa)
	}
	if _gddda.ExtLst != nil {
		_fccdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_gddda.ExtLst, _fccdf)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_afdcc *EG_FillModeProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ggbc:
	for {
		_adgcc, _aadac := d.Token()
		if _aadac != nil {
			return _aadac
		}
		switch _babcc := _adgcc.(type) {
		case _d.StartElement:
			switch _babcc.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006c\u0065"}:
				_afdcc.Tile = NewCT_TileInfoProperties()
				if _bafgf := d.DecodeElement(_afdcc.Tile, &_babcc); _bafgf != nil {
					return _bafgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073t\u0072\u0065\u0074\u0063\u0068"}:
				_afdcc.Stretch = NewCT_StretchInfoProperties()
				if _efgb := d.DecodeElement(_afdcc.Stretch, &_babcc); _efgb != nil {
					return _efgb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0046\u0069\u006c\u006c\u004d\u006f\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _babcc.Name)
				if _egbfag := d.Skip(); _egbfag != nil {
					return _egbfag
				}
			}
		case _d.EndElement:
			break _ggbc
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_ColorReplaceEffect and its children, prefixing error messages with path
func (_edfge *CT_ColorReplaceEffect) ValidateWithPath(path string) error {
	if _edfge.ScrgbClr != nil {
		if _efbf := _edfge.ScrgbClr.ValidateWithPath(path + "\u002fS\u0063\u0072\u0067\u0062\u0043\u006cr"); _efbf != nil {
			return _efbf
		}
	}
	if _edfge.SrgbClr != nil {
		if _ggcb := _edfge.SrgbClr.ValidateWithPath(path + "\u002f\u0053\u0072\u0067\u0062\u0043\u006c\u0072"); _ggcb != nil {
			return _ggcb
		}
	}
	if _edfge.HslClr != nil {
		if _dagg := _edfge.HslClr.ValidateWithPath(path + "\u002fH\u0073\u006c\u0043\u006c\u0072"); _dagg != nil {
			return _dagg
		}
	}
	if _edfge.SysClr != nil {
		if _faabe := _edfge.SysClr.ValidateWithPath(path + "\u002fS\u0079\u0073\u0043\u006c\u0072"); _faabe != nil {
			return _faabe
		}
	}
	if _edfge.SchemeClr != nil {
		if _dbeff := _edfge.SchemeClr.ValidateWithPath(path + "\u002f\u0053\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"); _dbeff != nil {
			return _dbeff
		}
	}
	if _edfge.PrstClr != nil {
		if _dgbg := _edfge.PrstClr.ValidateWithPath(path + "\u002f\u0050\u0072\u0073\u0074\u0043\u006c\u0072"); _dgbg != nil {
			return _dgbg
		}
	}
	return nil
}
func (_cgeba *ST_DgmBuildStep) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cgeba = 0
	case "\u0073\u0070":
		*_cgeba = 1
	case "\u0062\u0067":
		*_cgeba = 2
	}
	return nil
}
func (_aeegd *ST_ColorSchemeIndex) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_fdecg, _geceb := d.Token()
	if _geceb != nil {
		return _geceb
	}
	if _dacgc, _fgcgg := _fdecg.(_d.EndElement); _fgcgg && _dacgc.Name == start.Name {
		*_aeegd = 1
		return nil
	}
	if _edgd, _aggab := _fdecg.(_d.CharData); !_aggab {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _fdecg)
	} else {
		switch string(_edgd) {
		case "":
			*_aeegd = 0
		case "\u0064\u006b\u0031":
			*_aeegd = 1
		case "\u006c\u0074\u0031":
			*_aeegd = 2
		case "\u0064\u006b\u0032":
			*_aeegd = 3
		case "\u006c\u0074\u0032":
			*_aeegd = 4
		case "\u0061c\u0063\u0065\u006e\u0074\u0031":
			*_aeegd = 5
		case "\u0061c\u0063\u0065\u006e\u0074\u0032":
			*_aeegd = 6
		case "\u0061c\u0063\u0065\u006e\u0074\u0033":
			*_aeegd = 7
		case "\u0061c\u0063\u0065\u006e\u0074\u0034":
			*_aeegd = 8
		case "\u0061c\u0063\u0065\u006e\u0074\u0035":
			*_aeegd = 9
		case "\u0061c\u0063\u0065\u006e\u0074\u0036":
			*_aeegd = 10
		case "\u0068\u006c\u0069n\u006b":
			*_aeegd = 11
		case "\u0066\u006f\u006c\u0048\u006c\u0069\u006e\u006b":
			*_aeegd = 12
		}
	}
	_fdecg, _geceb = d.Token()
	if _geceb != nil {
		return _geceb
	}
	if _gbeea, _cbdgd := _fdecg.(_d.EndElement); _cbdgd && _gbeea.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _fdecg)
}

// ValidateWithPath validates the CT_GvmlGraphicalObjectFrame and its children, prefixing error messages with path
func (_eefcc *CT_GvmlGraphicalObjectFrame) ValidateWithPath(path string) error {
	if _fgbaf := _eefcc.NvGraphicFramePr.ValidateWithPath(path + "\u002f\u004e\u0076\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046\u0072a\u006d\u0065\u0050\u0072"); _fgbaf != nil {
		return _fgbaf
	}
	if _bacb := _eefcc.Graphic.ValidateWithPath(path + "\u002f\u0047\u0072\u0061\u0070\u0068\u0069\u0063"); _bacb != nil {
		return _bacb
	}
	if _fdfd := _eefcc.Xfrm.ValidateWithPath(path + "\u002f\u0058\u0066r\u006d"); _fdfd != nil {
		return _fdfd
	}
	if _eefcc.ExtLst != nil {
		if _dcbea := _eefcc.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _dcbea != nil {
			return _dcbea
		}
	}
	return nil
}

// ValidateWithPath validates the EG_ColorTransform and its children, prefixing error messages with path
func (_ecagc *EG_ColorTransform) ValidateWithPath(path string) error {
	if _ecagc.Tint != nil {
		if _bbecg := _ecagc.Tint.ValidateWithPath(path + "\u002f\u0054\u0069n\u0074"); _bbecg != nil {
			return _bbecg
		}
	}
	if _ecagc.Shade != nil {
		if _bebgg := _ecagc.Shade.ValidateWithPath(path + "\u002f\u0053\u0068\u0061\u0064\u0065"); _bebgg != nil {
			return _bebgg
		}
	}
	if _ecagc.Comp != nil {
		if _cceeg := _ecagc.Comp.ValidateWithPath(path + "\u002f\u0043\u006fm\u0070"); _cceeg != nil {
			return _cceeg
		}
	}
	if _ecagc.Inv != nil {
		if _bcbee := _ecagc.Inv.ValidateWithPath(path + "\u002f\u0049\u006e\u0076"); _bcbee != nil {
			return _bcbee
		}
	}
	if _ecagc.Gray != nil {
		if _gbeafd := _ecagc.Gray.ValidateWithPath(path + "\u002f\u0047\u0072a\u0079"); _gbeafd != nil {
			return _gbeafd
		}
	}
	if _ecagc.Alpha != nil {
		if _dbgcb := _ecagc.Alpha.ValidateWithPath(path + "\u002f\u0041\u006c\u0070\u0068\u0061"); _dbgcb != nil {
			return _dbgcb
		}
	}
	if _ecagc.AlphaOff != nil {
		if _edaed := _ecagc.AlphaOff.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004f\u0066f"); _edaed != nil {
			return _edaed
		}
	}
	if _ecagc.AlphaMod != nil {
		if _bedce := _ecagc.AlphaMod.ValidateWithPath(path + "\u002fA\u006c\u0070\u0068\u0061\u004d\u006fd"); _bedce != nil {
			return _bedce
		}
	}
	if _ecagc.Hue != nil {
		if _dfbfa := _ecagc.Hue.ValidateWithPath(path + "\u002f\u0048\u0075\u0065"); _dfbfa != nil {
			return _dfbfa
		}
	}
	if _ecagc.HueOff != nil {
		if _cegfa := _ecagc.HueOff.ValidateWithPath(path + "\u002fH\u0075\u0065\u004f\u0066\u0066"); _cegfa != nil {
			return _cegfa
		}
	}
	if _ecagc.HueMod != nil {
		if _efbgc := _ecagc.HueMod.ValidateWithPath(path + "\u002fH\u0075\u0065\u004d\u006f\u0064"); _efbgc != nil {
			return _efbgc
		}
	}
	if _ecagc.Sat != nil {
		if _gfade := _ecagc.Sat.ValidateWithPath(path + "\u002f\u0053\u0061\u0074"); _gfade != nil {
			return _gfade
		}
	}
	if _ecagc.SatOff != nil {
		if _aabad := _ecagc.SatOff.ValidateWithPath(path + "\u002fS\u0061\u0074\u004f\u0066\u0066"); _aabad != nil {
			return _aabad
		}
	}
	if _ecagc.SatMod != nil {
		if _fbdddd := _ecagc.SatMod.ValidateWithPath(path + "\u002fS\u0061\u0074\u004d\u006f\u0064"); _fbdddd != nil {
			return _fbdddd
		}
	}
	if _ecagc.Lum != nil {
		if _dgcfc := _ecagc.Lum.ValidateWithPath(path + "\u002f\u004c\u0075\u006d"); _dgcfc != nil {
			return _dgcfc
		}
	}
	if _ecagc.LumOff != nil {
		if _egfg := _ecagc.LumOff.ValidateWithPath(path + "\u002fL\u0075\u006d\u004f\u0066\u0066"); _egfg != nil {
			return _egfg
		}
	}
	if _ecagc.LumMod != nil {
		if _gcbga := _ecagc.LumMod.ValidateWithPath(path + "\u002fL\u0075\u006d\u004d\u006f\u0064"); _gcbga != nil {
			return _gcbga
		}
	}
	if _ecagc.Red != nil {
		if _gaagbe := _ecagc.Red.ValidateWithPath(path + "\u002f\u0052\u0065\u0064"); _gaagbe != nil {
			return _gaagbe
		}
	}
	if _ecagc.RedOff != nil {
		if _dbffb := _ecagc.RedOff.ValidateWithPath(path + "\u002fR\u0065\u0064\u004f\u0066\u0066"); _dbffb != nil {
			return _dbffb
		}
	}
	if _ecagc.RedMod != nil {
		if _agdgge := _ecagc.RedMod.ValidateWithPath(path + "\u002fR\u0065\u0064\u004d\u006f\u0064"); _agdgge != nil {
			return _agdgge
		}
	}
	if _ecagc.Green != nil {
		if _baeeeg := _ecagc.Green.ValidateWithPath(path + "\u002f\u0047\u0072\u0065\u0065\u006e"); _baeeeg != nil {
			return _baeeeg
		}
	}
	if _ecagc.GreenOff != nil {
		if _fgggdf := _ecagc.GreenOff.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004f\u0066f"); _fgggdf != nil {
			return _fgggdf
		}
	}
	if _ecagc.GreenMod != nil {
		if _fgadd := _ecagc.GreenMod.ValidateWithPath(path + "\u002fG\u0072\u0065\u0065\u006e\u004d\u006fd"); _fgadd != nil {
			return _fgadd
		}
	}
	if _ecagc.Blue != nil {
		if _baagg := _ecagc.Blue.ValidateWithPath(path + "\u002f\u0042\u006cu\u0065"); _baagg != nil {
			return _baagg
		}
	}
	if _ecagc.BlueOff != nil {
		if _bagfb := _ecagc.BlueOff.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004f\u0066\u0066"); _bagfb != nil {
			return _bagfb
		}
	}
	if _ecagc.BlueMod != nil {
		if _gdbec := _ecagc.BlueMod.ValidateWithPath(path + "\u002f\u0042\u006c\u0075\u0065\u004d\u006f\u0064"); _gdbec != nil {
			return _gdbec
		}
	}
	if _ecagc.Gamma != nil {
		if _gabg := _ecagc.Gamma.ValidateWithPath(path + "\u002f\u0047\u0061\u006d\u006d\u0061"); _gabg != nil {
			return _gabg
		}
	}
	if _ecagc.InvGamma != nil {
		if _ccbgf := _ecagc.InvGamma.ValidateWithPath(path + "\u002fI\u006e\u0076\u0047\u0061\u006d\u006da"); _ccbgf != nil {
			return _ccbgf
		}
	}
	return nil
}
func (_abdbd ST_FixedPercentage) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _abdbd.ST_FixedPercentageDecimal != nil {
		e.EncodeToken(_d.CharData(_e.Sprintf("\u0025\u0064", *_abdbd.ST_FixedPercentageDecimal)))
	}
	if _abdbd.ST_FixedPercentage != nil {
		e.Encode(_abdbd.ST_FixedPercentage)
	}
	return e.EncodeToken(_d.EndElement{Name: start.Name})
}

const (
	ST_TextVerticalTypeUnset          ST_TextVerticalType = 0
	ST_TextVerticalTypeHorz           ST_TextVerticalType = 1
	ST_TextVerticalTypeVert           ST_TextVerticalType = 2
	ST_TextVerticalTypeVert270        ST_TextVerticalType = 3
	ST_TextVerticalTypeWordArtVert    ST_TextVerticalType = 4
	ST_TextVerticalTypeEaVert         ST_TextVerticalType = 5
	ST_TextVerticalTypeMongolianVert  ST_TextVerticalType = 6
	ST_TextVerticalTypeWordArtVertRtl ST_TextVerticalType = 7
)

type CT_TextParagraphProperties struct {
	MarLAttr         *int32
	MarRAttr         *int32
	LvlAttr          *int32
	IndentAttr       *int32
	AlgnAttr         ST_TextAlignType
	DefTabSzAttr     *ST_Coordinate32
	RtlAttr          *bool
	EaLnBrkAttr      *bool
	FontAlgnAttr     ST_TextFontAlignType
	LatinLnBrkAttr   *bool
	HangingPunctAttr *bool
	LnSpc            *CT_TextSpacing
	SpcBef           *CT_TextSpacing
	SpcAft           *CT_TextSpacing
	BuClrTx          *CT_TextBulletColorFollowText
	BuClr            *CT_Color
	BuSzTx           *CT_TextBulletSizeFollowText
	BuSzPct          *CT_TextBulletSizePercent
	BuSzPts          *CT_TextBulletSizePoint
	BuFontTx         *CT_TextBulletTypefaceFollowText
	BuFont           *CT_TextFont
	BuNone           *CT_TextNoBullet
	BuAutoNum        *CT_TextAutonumberBullet
	BuChar           *CT_TextCharBullet
	BuBlip           *CT_TextBlipBullet
	TabLst           *CT_TextTabStopList
	DefRPr           *CT_TextCharacterProperties
	ExtLst           *CT_OfficeArtExtensionList
}

func (_edg *CT_AlphaInverseEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_eaa:
	for {
		_eag, _gede := d.Token()
		if _gede != nil {
			return _gede
		}
		switch _dbf := _eag.(type) {
		case _d.StartElement:
			switch _dbf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}:
				_edg.ScrgbClr = NewCT_ScRgbColor()
				if _ead := d.DecodeElement(_edg.ScrgbClr, &_dbf); _ead != nil {
					return _ead
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073r\u0067\u0062\u0043\u006c\u0072"}:
				_edg.SrgbClr = NewCT_SRgbColor()
				if _defe := d.DecodeElement(_edg.SrgbClr, &_dbf); _defe != nil {
					return _defe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0073\u006c\u0043\u006c\u0072"}:
				_edg.HslClr = NewCT_HslColor()
				if _ade := d.DecodeElement(_edg.HslClr, &_dbf); _ade != nil {
					return _ade
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0079\u0073\u0043\u006c\u0072"}:
				_edg.SysClr = NewCT_SystemColor()
				if _ddd := d.DecodeElement(_edg.SysClr, &_dbf); _ddd != nil {
					return _ddd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073c\u0068\u0065\u006d\u0065\u0043\u006cr"}:
				_edg.SchemeClr = NewCT_SchemeColor()
				if _bfd := d.DecodeElement(_edg.SchemeClr, &_dbf); _bfd != nil {
					return _bfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070r\u0073\u0074\u0043\u006c\u0072"}:
				_edg.PrstClr = NewCT_PresetColor()
				if _fdad := d.DecodeElement(_edg.PrstClr, &_dbf); _fdad != nil {
					return _fdad
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e C\u0054\u005f\u0041\u006c\u0070\u0068\u0061\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _dbf.Name)
				if _aaaa := d.Skip(); _aaaa != nil {
					return _aaaa
				}
			}
		case _d.EndElement:
			break _eaa
		case _d.CharData:
		}
	}
	return nil
}

type CT_FillOverlayEffect struct {
	BlendAttr ST_BlendMode
	NoFill    *CT_NoFillProperties
	SolidFill *CT_SolidColorFillProperties
	GradFill  *CT_GradientFillProperties
	BlipFill  *CT_BlipFillProperties
	PattFill  *CT_PatternFillProperties
	GrpFill   *CT_GroupFillProperties
}

func (_gadbf ST_TextAutonumberScheme) Validate() error { return _gadbf.ValidateWithPath("") }

// ValidateWithPath validates the CT_TextListStyle and its children, prefixing error messages with path
func (_fedgee *CT_TextListStyle) ValidateWithPath(path string) error {
	if _fedgee.DefPPr != nil {
		if _gffd := _fedgee.DefPPr.ValidateWithPath(path + "\u002fD\u0065\u0066\u0050\u0050\u0072"); _gffd != nil {
			return _gffd
		}
	}
	if _fedgee.Lvl1pPr != nil {
		if _dfcce := _fedgee.Lvl1pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0031\u0070\u0050\u0072"); _dfcce != nil {
			return _dfcce
		}
	}
	if _fedgee.Lvl2pPr != nil {
		if _dfed := _fedgee.Lvl2pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0032\u0070\u0050\u0072"); _dfed != nil {
			return _dfed
		}
	}
	if _fedgee.Lvl3pPr != nil {
		if _aagea := _fedgee.Lvl3pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0033\u0070\u0050\u0072"); _aagea != nil {
			return _aagea
		}
	}
	if _fedgee.Lvl4pPr != nil {
		if _cbacb := _fedgee.Lvl4pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0034\u0070\u0050\u0072"); _cbacb != nil {
			return _cbacb
		}
	}
	if _fedgee.Lvl5pPr != nil {
		if _fccce := _fedgee.Lvl5pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0035\u0070\u0050\u0072"); _fccce != nil {
			return _fccce
		}
	}
	if _fedgee.Lvl6pPr != nil {
		if _eaccf := _fedgee.Lvl6pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0036\u0070\u0050\u0072"); _eaccf != nil {
			return _eaccf
		}
	}
	if _fedgee.Lvl7pPr != nil {
		if _dfefge := _fedgee.Lvl7pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0037\u0070\u0050\u0072"); _dfefge != nil {
			return _dfefge
		}
	}
	if _fedgee.Lvl8pPr != nil {
		if _dbfag := _fedgee.Lvl8pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0038\u0070\u0050\u0072"); _dbfag != nil {
			return _dbfag
		}
	}
	if _fedgee.Lvl9pPr != nil {
		if _acgbba := _fedgee.Lvl9pPr.ValidateWithPath(path + "\u002f\u004c\u0076\u006c\u0039\u0070\u0050\u0072"); _acgbba != nil {
			return _acgbba
		}
	}
	if _fedgee.ExtLst != nil {
		if _bfdfb := _fedgee.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _bfdfb != nil {
			return _bfdfb
		}
	}
	return nil
}
func (_afaab *EG_ShadeProperties) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afaab.Lin != nil {
		_edfag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006ci\u006e"}}
		e.EncodeElement(_afaab.Lin, _edfag)
	}
	if _afaab.Path != nil {
		_afdag := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0070\u0061\u0074\u0068"}}
		e.EncodeElement(_afaab.Path, _afdag)
	}
	return nil
}

type EG_Media struct {
	AudioCd       *CT_AudioCD
	WavAudioFile  *CT_EmbeddedWAVAudioFile
	AudioFile     *CT_AudioFile
	VideoFile     *CT_VideoFile
	QuickTimeFile *CT_QuickTimeFile
}

func (_dgbf *ST_Percentage) Validate() error { return _dgbf.ValidateWithPath("") }

type CT_ThemeableLineStyle struct {
	Ln    *CT_LineProperties
	LnRef *CT_StyleMatrixReference
}

func (_gfabd *CT_FontScheme) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gfabd.MajorFont = NewCT_FontCollection()
	_gfabd.MinorFont = NewCT_FontCollection()
	for _, _cegce := range start.Attr {
		if _cegce.Name.Local == "\u006e\u0061\u006d\u0065" {
			_acfgg, _ecfc := _cegce.Value, error(nil)
			if _ecfc != nil {
				return _ecfc
			}
			_gfabd.NameAttr = _acfgg
			continue
		}
	}
_fcgbf:
	for {
		_dedcd, _abceg := d.Token()
		if _abceg != nil {
			return _abceg
		}
		switch _cebff := _dedcd.(type) {
		case _d.StartElement:
			switch _cebff.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006da\u006a\u006f\u0072\u0046\u006f\u006et"}:
				if _eecbf := d.DecodeElement(_gfabd.MajorFont, &_cebff); _eecbf != nil {
					return _eecbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006di\u006e\u006f\u0072\u0046\u006f\u006et"}:
				if _ebfc := d.DecodeElement(_gfabd.MinorFont, &_cebff); _ebfc != nil {
					return _ebfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gfabd.ExtLst = NewCT_OfficeArtExtensionList()
				if _dccb := d.DecodeElement(_gfabd.ExtLst, &_cebff); _dccb != nil {
					return _dccb
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0046o\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065 \u0025\u0076", _cebff.Name)
				if _abaeg := d.Skip(); _abaeg != nil {
					return _abaeg
				}
			}
		case _d.EndElement:
			break _fcgbf
		case _d.CharData:
		}
	}
	return nil
}
func (_afcab *CT_LuminanceEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _afcab.BrightAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062\u0072\u0069\u0067\u0068\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_afcab.BrightAttr)})
	}
	if _afcab.ContrastAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0063\u006f\u006e\u0074\u0072\u0061\u0073\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_afcab.ContrastAttr)})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the EG_FillModeProperties and its children
func (_abggfc *EG_FillModeProperties) Validate() error {
	return _abggfc.ValidateWithPath("E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073")
}
func (_ccbad *CT_ThemeableLineStyle) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _ccbad.Ln != nil {
		_gacad := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u006c\u006e"}}
		e.EncodeElement(_ccbad.Ln, _gacad)
	}
	if _ccbad.LnRef != nil {
		_acgbg := _d.StartElement{Name: _d.Name{Local: "\u0061:\u006c\u006e\u0052\u0065\u0066"}}
		e.EncodeElement(_ccbad.LnRef, _acgbg)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func NewCT_Scene3D() *CT_Scene3D {
	_effgf := &CT_Scene3D{}
	_effgf.Camera = NewCT_Camera()
	_effgf.LightRig = NewCT_LightRig()
	return _effgf
}

type CT_HslColor struct {
	HueAttr           int32
	SatAttr           ST_Percentage
	LumAttr           ST_Percentage
	EG_ColorTransform []*EG_ColorTransform
}
type CT_GrayscaleEffect struct{}

func (_adgcb *CT_GvmlShape) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_adgcb.NvSpPr = NewCT_GvmlShapeNonVisual()
	_adgcb.SpPr = NewCT_ShapeProperties()
_fbfb:
	for {
		_gagee, _dddd := d.Token()
		if _dddd != nil {
			return _dddd
		}
		switch _eegf := _gagee.(type) {
		case _d.StartElement:
			switch _eegf.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u0076\u0053\u0070\u0050\u0072"}:
				if _bbgg := d.DecodeElement(_adgcb.NvSpPr, &_eegf); _bbgg != nil {
					return _bbgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0070\u0050\u0072"}:
				if _fddcg := d.DecodeElement(_adgcb.SpPr, &_eegf); _fddcg != nil {
					return _fddcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0078\u0053\u0070"}:
				_adgcb.TxSp = NewCT_GvmlTextShape()
				if _gged := d.DecodeElement(_adgcb.TxSp, &_eegf); _gged != nil {
					return _gged
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0074\u0079l\u0065"}:
				_adgcb.Style = NewCT_ShapeStyle()
				if _fddbf := d.DecodeElement(_adgcb.Style, &_eegf); _fddbf != nil {
					return _fddbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_adgcb.ExtLst = NewCT_OfficeArtExtensionList()
				if _aeef := d.DecodeElement(_adgcb.ExtLst, &_eegf); _aeef != nil {
					return _aeef
				}
			default:
				_ff.Log("s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075n\u0073\u0075\u0070\u0070\u006f\u0072\u0074ed\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054_G\u0076\u006dl\u0053\u0068\u0061\u0070\u0065\u0020\u0025\u0076", _eegf.Name)
				if _dfgfc := d.Skip(); _dfgfc != nil {
					return _dfgfc
				}
			}
		case _d.EndElement:
			break _fbfb
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_PresetGeometry2D and its children, prefixing error messages with path
func (_gcddg *CT_PresetGeometry2D) ValidateWithPath(path string) error {
	if _gcddg.PrstAttr == ST_ShapeTypeUnset {
		return _e.Errorf("\u0025\u0073\u002f\u0050\u0072\u0073\u0074\u0041\u0074\u0074\u0072\u0020\u0069\u0073\u0020a\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _eaggc := _gcddg.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _eaggc != nil {
		return _eaggc
	}
	if _gcddg.AvLst != nil {
		if _ggaff := _gcddg.AvLst.ValidateWithPath(path + "\u002f\u0041\u0076\u004c\u0073\u0074"); _ggaff != nil {
			return _ggaff
		}
	}
	return nil
}
func (_gegg ST_TextHorzOverflowType) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cbeea := _d.Attr{}
	_cbeea.Name = name
	switch _gegg {
	case ST_TextHorzOverflowTypeUnset:
		_cbeea.Value = ""
	case ST_TextHorzOverflowTypeOverflow:
		_cbeea.Value = "\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077"
	case ST_TextHorzOverflowTypeClip:
		_cbeea.Value = "\u0063\u006c\u0069\u0070"
	}
	return _cbeea, nil
}
func (_bdaf *CT_FillOverlayEffect) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bdaf.BlendAttr = ST_BlendMode(1)
	for _, _adee := range start.Attr {
		if _adee.Name.Local == "\u0062\u006c\u0065n\u0064" {
			_bdaf.BlendAttr.UnmarshalXMLAttr(_adee)
			continue
		}
	}
_afac:
	for {
		_fddc, _debdb := d.Token()
		if _debdb != nil {
			return _debdb
		}
		switch _cecb := _fddc.(type) {
		case _d.StartElement:
			switch _cecb.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_bdaf.NoFill = NewCT_NoFillProperties()
				if _bdabb := d.DecodeElement(_bdaf.NoFill, &_cecb); _bdabb != nil {
					return _bdabb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_bdaf.SolidFill = NewCT_SolidColorFillProperties()
				if _cfbec := d.DecodeElement(_bdaf.SolidFill, &_cecb); _cfbec != nil {
					return _cfbec
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_bdaf.GradFill = NewCT_GradientFillProperties()
				if _ccfdd := d.DecodeElement(_bdaf.GradFill, &_cecb); _ccfdd != nil {
					return _ccfdd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_bdaf.BlipFill = NewCT_BlipFillProperties()
				if _edge := d.DecodeElement(_bdaf.BlipFill, &_cecb); _edge != nil {
					return _edge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_bdaf.PattFill = NewCT_PatternFillProperties()
				if _dcdc := d.DecodeElement(_bdaf.PattFill, &_cecb); _dcdc != nil {
					return _dcdc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_bdaf.GrpFill = NewCT_GroupFillProperties()
				if _efag := d.DecodeElement(_bdaf.GrpFill, &_cecb); _efag != nil {
					return _efag
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006eg\u0020\u0075\u006es\u0075\u0070\u0070o\u0072\u0074e\u0064\u0020\u0065\u006c\u0065\u006de\u006et \u006f\u006e\u0020\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072\u006c\u0061\u0079\u0045\u0066\u0066\u0065\u0063\u0074\u0020\u0025\u0076", _cecb.Name)
				if _decac := d.Skip(); _decac != nil {
					return _decac
				}
			}
		case _d.EndElement:
			break _afac
		case _d.CharData:
		}
	}
	return nil
}

type ST_PresetColorVal byte

// ValidateWithPath validates the EG_LineJoinProperties and its children, prefixing error messages with path
func (_cgffdc *EG_LineJoinProperties) ValidateWithPath(path string) error {
	if _cgffdc.Round != nil {
		if _bbfb := _cgffdc.Round.ValidateWithPath(path + "\u002f\u0052\u006f\u0075\u006e\u0064"); _bbfb != nil {
			return _bbfb
		}
	}
	if _cgffdc.Bevel != nil {
		if _gccf := _cgffdc.Bevel.ValidateWithPath(path + "\u002f\u0042\u0065\u0076\u0065\u006c"); _gccf != nil {
			return _gccf
		}
	}
	if _cgffdc.Miter != nil {
		if _fccac := _cgffdc.Miter.ValidateWithPath(path + "\u002f\u004d\u0069\u0074\u0065\u0072"); _fccac != nil {
			return _fccac
		}
	}
	return nil
}
func (_ggfca *ST_AnimationChartOnlyBuildType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_agdag, _fdbc := d.Token()
	if _fdbc != nil {
		return _fdbc
	}
	if _bdafe, _ecbbb := _agdag.(_d.EndElement); _ecbbb && _bdafe.Name == start.Name {
		*_ggfca = 1
		return nil
	}
	if _ccdff, _edaac := _agdag.(_d.CharData); !_edaac {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _agdag)
	} else {
		switch string(_ccdff) {
		case "":
			*_ggfca = 0
		case "\u0073\u0065\u0072\u0069\u0065\u0073":
			*_ggfca = 1
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079":
			*_ggfca = 2
		case "\u0073\u0065\u0072\u0069\u0065\u0073\u0045\u006c":
			*_ggfca = 3
		case "\u0063\u0061\u0074\u0065\u0067\u006f\u0072\u0079\u0045\u006c":
			*_ggfca = 4
		}
	}
	_agdag, _fdbc = d.Token()
	if _fdbc != nil {
		return _fdbc
	}
	if _ggddg, _dbgdb := _agdag.(_d.EndElement); _dbgdb && _ggddg.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _agdag)
}
func (_begf *CT_EffectStyleList) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_daacfd:
	for {
		_fgaa, _ffee := d.Token()
		if _ffee != nil {
			return _ffee
		}
		switch _ebga := _fgaa.(type) {
		case _d.StartElement:
			switch _ebga.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "e\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065"}:
				_fgffb := NewCT_EffectStyleItem()
				if _ggbdb := d.DecodeElement(_fgffb, &_ebga); _ggbdb != nil {
					return _ggbdb
				}
				_begf.EffectStyle = append(_begf.EffectStyle, _fgffb)
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074S\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074\u0020\u0025\u0076", _ebga.Name)
				if _ecbbd := d.Skip(); _ecbbd != nil {
					return _ecbbd
				}
			}
		case _d.EndElement:
			break _daacfd
		case _d.CharData:
		}
	}
	return nil
}
func (_cbcdce *ST_LightRigType) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_cbcdce = 0
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0031":
		*_cbcdce = 1
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0032":
		*_cbcdce = 2
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0033":
		*_cbcdce = 3
	case "l\u0065\u0067\u0061\u0063\u0079\u0046\u006c\u0061\u0074\u0034":
		*_cbcdce = 4
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0031":
		*_cbcdce = 5
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0032":
		*_cbcdce = 6
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0033":
		*_cbcdce = 7
	case "\u006c\u0065\u0067\u0061\u0063\u0079\u004e\u006f\u0072\u006d\u0061\u006c\u0034":
		*_cbcdce = 8
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0031":
		*_cbcdce = 9
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0032":
		*_cbcdce = 10
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0033":
		*_cbcdce = 11
	case "\u006c\u0065\u0067a\u0063\u0079\u0048\u0061\u0072\u0073\u0068\u0034":
		*_cbcdce = 12
	case "\u0074h\u0072\u0065\u0065\u0050\u0074":
		*_cbcdce = 13
	case "\u0062\u0061\u006c\u0061\u006e\u0063\u0065\u0064":
		*_cbcdce = 14
	case "\u0073\u006f\u0066\u0074":
		*_cbcdce = 15
	case "\u0068\u0061\u0072s\u0068":
		*_cbcdce = 16
	case "\u0066\u006c\u006fo\u0064":
		*_cbcdce = 17
	case "c\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069\u006e\u0067":
		*_cbcdce = 18
	case "\u006do\u0072\u006e\u0069\u006e\u0067":
		*_cbcdce = 19
	case "\u0073u\u006e\u0072\u0069\u0073\u0065":
		*_cbcdce = 20
	case "\u0073\u0075\u006e\u0073\u0065\u0074":
		*_cbcdce = 21
	case "\u0063\u0068\u0069\u006c\u006c\u0079":
		*_cbcdce = 22
	case "\u0066\u0072\u0065\u0065\u007a\u0069\u006e\u0067":
		*_cbcdce = 23
	case "\u0066\u006c\u0061\u0074":
		*_cbcdce = 24
	case "\u0074\u0077\u006fP\u0074":
		*_cbcdce = 25
	case "\u0067\u006c\u006f\u0077":
		*_cbcdce = 26
	case "\u0062\u0072\u0069\u0067\u0068\u0074\u0052\u006f\u006f\u006d":
		*_cbcdce = 27
	}
	return nil
}
func (_dgbcda ST_CompoundLine) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_dbeeea := _d.Attr{}
	_dbeeea.Name = name
	switch _dgbcda {
	case ST_CompoundLineUnset:
		_dbeeea.Value = ""
	case ST_CompoundLineSng:
		_dbeeea.Value = "\u0073\u006e\u0067"
	case ST_CompoundLineDbl:
		_dbeeea.Value = "\u0064\u0062\u006c"
	case ST_CompoundLineThickThin:
		_dbeeea.Value = "\u0074h\u0069\u0063\u006b\u0054\u0068\u0069n"
	case ST_CompoundLineThinThick:
		_dbeeea.Value = "\u0074h\u0069\u006e\u0054\u0068\u0069\u0063k"
	case ST_CompoundLineTri:
		_dbeeea.Value = "\u0074\u0072\u0069"
	}
	return _dbeeea, nil
}
func (_adef *CT_GvmlGroupShapeNonVisual) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	_edbfa := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0063\u004e\u0076\u0050\u0072"}}
	e.EncodeElement(_adef.CNvPr, _edbfa)
	_fcedf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0063N\u0076\u0047\u0072\u0070\u0053\u0070\u0050\u0072"}}
	e.EncodeElement(_adef.CNvGrpSpPr, _fcedf)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_aadb *EG_TextAutofit) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_ceaae:
	for {
		_fabbd, _fddec := d.Token()
		if _fddec != nil {
			return _fddec
		}
		switch _dafg := _fabbd.(type) {
		case _d.StartElement:
			switch _dafg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006eo\u0041\u0075\u0074\u006f\u0066\u0069t"}:
				_aadb.NoAutofit = NewCT_TextNoAutofit()
				if _bfagb := d.DecodeElement(_aadb.NoAutofit, &_dafg); _bfagb != nil {
					return _bfagb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "n\u006f\u0072\u006d\u0041\u0075\u0074\u006f\u0066\u0069\u0074"}:
				_aadb.NormAutofit = NewCT_TextNormalAutofit()
				if _befegc := d.DecodeElement(_aadb.NormAutofit, &_dafg); _befegc != nil {
					return _befegc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073p\u0041\u0075\u0074\u006f\u0046\u0069t"}:
				_aadb.SpAutoFit = NewCT_TextShapeAutofit()
				if _eabcc := d.DecodeElement(_aadb.SpAutoFit, &_dafg); _eabcc != nil {
					return _eabcc
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006et\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075\u0074o\u0066i\u0074\u0020\u0025\u0076", _dafg.Name)
				if _dgdcg := d.Skip(); _dgdcg != nil {
					return _dgdcg
				}
			}
		case _d.EndElement:
			break _ceaae
		case _d.CharData:
		}
	}
	return nil
}
func (_ddac *CT_TextBulletColorFollowText) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for {
		_eaeaa, _ddbbc := d.Token()
		if _ddbbc != nil {
			return _e.Errorf("p\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006ce\u0074\u0043\u006f\u006c\u006f\u0072\u0046\u006f\u006c\u006cow\u0054\u0065\u0078t\u003a \u0025\u0073", _ddbbc)
		}
		if _deaa, _aeged := _eaeaa.(_d.EndElement); _aeged && _deaa.Name == start.Name {
			break
		}
	}
	return nil
}
func (_dcbedf *ST_PresetMaterialType) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_bfebcg, _cafbgf := d.Token()
	if _cafbgf != nil {
		return _cafbgf
	}
	if _bgfaa, _bgdae := _bfebcg.(_d.EndElement); _bgdae && _bgfaa.Name == start.Name {
		*_dcbedf = 1
		return nil
	}
	if _gbdaf, _dgecfb := _bfebcg.(_d.CharData); !_dgecfb {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _bfebcg)
	} else {
		switch string(_gbdaf) {
		case "":
			*_dcbedf = 0
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0061\u0074\u0074\u0065":
			*_dcbedf = 1
		case "\u006c\u0065\u0067\u0061\u0063\u0079\u0050\u006c\u0061\u0073\u0074\u0069\u0063":
			*_dcbedf = 2
		case "l\u0065\u0067\u0061\u0063\u0079\u004d\u0065\u0074\u0061\u006c":
			*_dcbedf = 3
		case "\u006ce\u0067a\u0063\u0079\u0057\u0069\u0072\u0065\u0066\u0072\u0061\u006d\u0065":
			*_dcbedf = 4
		case "\u006d\u0061\u0074t\u0065":
			*_dcbedf = 5
		case "\u0070l\u0061\u0073\u0074\u0069\u0063":
			*_dcbedf = 6
		case "\u006d\u0065\u0074a\u006c":
			*_dcbedf = 7
		case "\u0077a\u0072\u006d\u004d\u0061\u0074\u0074e":
			*_dcbedf = 8
		case "\u0074\u0072\u0061\u006e\u0073\u006c\u0075\u0063\u0065\u006e\u0074\u0050o\u0077\u0064\u0065\u0072":
			*_dcbedf = 9
		case "\u0070\u006f\u0077\u0064\u0065\u0072":
			*_dcbedf = 10
		case "\u0064\u006b\u0045\u0064\u0067\u0065":
			*_dcbedf = 11
		case "\u0073\u006f\u0066\u0074\u0045\u0064\u0067\u0065":
			*_dcbedf = 12
		case "\u0063\u006c\u0065a\u0072":
			*_dcbedf = 13
		case "\u0066\u006c\u0061\u0074":
			*_dcbedf = 14
		case "\u0073o\u0066\u0074\u006d\u0065\u0074\u0061l":
			*_dcbedf = 15
		}
	}
	_bfebcg, _cafbgf = d.Token()
	if _cafbgf != nil {
		return _cafbgf
	}
	if _abdfe, _ffcfd := _bfebcg.(_d.EndElement); _ffcfd && _abdfe.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _bfebcg)
}
func (_aadag *EG_ColorTransform) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_fddag:
	for {
		_egfdc, _egdfae := d.Token()
		if _egdfae != nil {
			return _egdfae
		}
		switch _ddbca := _egfdc.(type) {
		case _d.StartElement:
			switch _ddbca.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0069\u006e\u0074"}:
				_aadag.Tint = NewCT_PositiveFixedPercentage()
				if _fbfgaf := d.DecodeElement(_aadag.Tint, &_ddbca); _fbfgaf != nil {
					return _fbfgaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0068\u0061d\u0065"}:
				_aadag.Shade = NewCT_PositiveFixedPercentage()
				if _cfaaf := d.DecodeElement(_aadag.Shade, &_ddbca); _cfaaf != nil {
					return _cfaaf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0063\u006f\u006d\u0070"}:
				_aadag.Comp = NewCT_ComplementTransform()
				if _fbfgd := d.DecodeElement(_aadag.Comp, &_ddbca); _fbfgd != nil {
					return _fbfgd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076"}:
				_aadag.Inv = NewCT_InverseTransform()
				if _dbddb := d.DecodeElement(_aadag.Inv, &_ddbca); _dbddb != nil {
					return _dbddb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0079"}:
				_aadag.Gray = NewCT_GrayscaleTransform()
				if _eeadfe := d.DecodeElement(_aadag.Gray, &_ddbca); _eeadfe != nil {
					return _eeadfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070h\u0061"}:
				_aadag.Alpha = NewCT_PositiveFixedPercentage()
				if _acggg := d.DecodeElement(_aadag.Alpha, &_ddbca); _acggg != nil {
					return _acggg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004f\u0066\u0066"}:
				_aadag.AlphaOff = NewCT_FixedPercentage()
				if _cebag := d.DecodeElement(_aadag.AlphaOff, &_ddbca); _cebag != nil {
					return _cebag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0061\u006c\u0070\u0068\u0061\u004d\u006f\u0064"}:
				_aadag.AlphaMod = NewCT_PositivePercentage()
				if _cggbd := d.DecodeElement(_aadag.AlphaMod, &_ddbca); _cggbd != nil {
					return _cggbd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065"}:
				_aadag.Hue = NewCT_PositiveFixedAngle()
				if _gdcea := d.DecodeElement(_aadag.Hue, &_ddbca); _gdcea != nil {
					return _gdcea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004f\u0066\u0066"}:
				_aadag.HueOff = NewCT_Angle()
				if _adgaa := d.DecodeElement(_aadag.HueOff, &_ddbca); _adgaa != nil {
					return _adgaa
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0068\u0075\u0065\u004d\u006f\u0064"}:
				_aadag.HueMod = NewCT_PositivePercentage()
				if _aecbb := d.DecodeElement(_aadag.HueMod, &_ddbca); _aecbb != nil {
					return _aecbb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074"}:
				_aadag.Sat = NewCT_Percentage()
				if _ddbecfe := d.DecodeElement(_aadag.Sat, &_ddbca); _ddbecfe != nil {
					return _ddbecfe
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004f\u0066\u0066"}:
				_aadag.SatOff = NewCT_Percentage()
				if _gfabdg := d.DecodeElement(_aadag.SatOff, &_ddbca); _gfabdg != nil {
					return _gfabdg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073\u0061\u0074\u004d\u006f\u0064"}:
				_aadag.SatMod = NewCT_Percentage()
				if _bfcfg := d.DecodeElement(_aadag.SatMod, &_ddbca); _bfcfg != nil {
					return _bfcfg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d"}:
				_aadag.Lum = NewCT_Percentage()
				if _eedca := d.DecodeElement(_aadag.Lum, &_ddbca); _eedca != nil {
					return _eedca
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004f\u0066\u0066"}:
				_aadag.LumOff = NewCT_Percentage()
				if _cegdf := d.DecodeElement(_aadag.LumOff, &_ddbca); _cegdf != nil {
					return _cegdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006c\u0075\u006d\u004d\u006f\u0064"}:
				_aadag.LumMod = NewCT_Percentage()
				if _debfc := d.DecodeElement(_aadag.LumMod, &_ddbca); _debfc != nil {
					return _debfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064"}:
				_aadag.Red = NewCT_Percentage()
				if _cggbf := d.DecodeElement(_aadag.Red, &_ddbca); _cggbf != nil {
					return _cggbf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004f\u0066\u0066"}:
				_aadag.RedOff = NewCT_Percentage()
				if _bgaaab := d.DecodeElement(_aadag.RedOff, &_ddbca); _bgaaab != nil {
					return _bgaaab
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u0065\u0064\u004d\u006f\u0064"}:
				_aadag.RedMod = NewCT_Percentage()
				if _cebceb := d.DecodeElement(_aadag.RedMod, &_ddbca); _cebceb != nil {
					return _cebceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065e\u006e"}:
				_aadag.Green = NewCT_Percentage()
				if _bdbgg := d.DecodeElement(_aadag.Green, &_ddbca); _bdbgg != nil {
					return _bdbgg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004f\u0066\u0066"}:
				_aadag.GreenOff = NewCT_Percentage()
				if _ebede := d.DecodeElement(_aadag.GreenOff, &_ddbca); _ebede != nil {
					return _ebede
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0065\u0065\u006e\u004d\u006f\u0064"}:
				_aadag.GreenMod = NewCT_Percentage()
				if _ddgfcg := d.DecodeElement(_aadag.GreenMod, &_ddbca); _ddgfcg != nil {
					return _ddgfcg
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0075\u0065"}:
				_aadag.Blue = NewCT_Percentage()
				if _aacdf := d.DecodeElement(_aadag.Blue, &_ddbca); _aacdf != nil {
					return _aacdf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004f\u0066\u0066"}:
				_aadag.BlueOff = NewCT_Percentage()
				if _fefgb := d.DecodeElement(_aadag.BlueOff, &_ddbca); _fefgb != nil {
					return _fefgb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062l\u0075\u0065\u004d\u006f\u0064"}:
				_aadag.BlueMod = NewCT_Percentage()
				if _abafc := d.DecodeElement(_aadag.BlueMod, &_ddbca); _abafc != nil {
					return _abafc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0061\u006dm\u0061"}:
				_aadag.Gamma = NewCT_GammaTransform()
				if _deeag := d.DecodeElement(_aadag.Gamma, &_ddbca); _deeag != nil {
					return _deeag
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0069\u006e\u0076\u0047\u0061\u006d\u006d\u0061"}:
				_aadag.InvGamma = NewCT_InverseGammaTransform()
				if _afeeg := d.DecodeElement(_aadag.InvGamma, &_ddbca); _afeeg != nil {
					return _afeeg
				}
			default:
				_ff.Log("\u0073\u006bi\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0020\u0025\u0076", _ddbca.Name)
				if _aeabb := d.Skip(); _aeabb != nil {
					return _aeabb
				}
			}
		case _d.EndElement:
			break _fddag
		case _d.CharData:
		}
	}
	return nil
}

// ValidateWithPath validates the CT_GeomRect and its children, prefixing error messages with path
func (_bdgf *CT_GeomRect) ValidateWithPath(path string) error {
	if _aaad := _bdgf.LAttr.ValidateWithPath(path + "\u002f\u004c\u0041\u0074\u0074\u0072"); _aaad != nil {
		return _aaad
	}
	if _gfcf := _bdgf.TAttr.ValidateWithPath(path + "\u002f\u0054\u0041\u0074\u0074\u0072"); _gfcf != nil {
		return _gfcf
	}
	if _cabdd := _bdgf.RAttr.ValidateWithPath(path + "\u002f\u0052\u0041\u0074\u0074\u0072"); _cabdd != nil {
		return _cabdd
	}
	if _ddca := _bdgf.BAttr.ValidateWithPath(path + "\u002f\u0042\u0041\u0074\u0074\u0072"); _ddca != nil {
		return _ddca
	}
	return nil
}
func NewCT_TextTabStopList() *CT_TextTabStopList { _fbbf := &CT_TextTabStopList{}; return _fbbf }

// ValidateWithPath validates the CT_ContentPartLocking and its children, prefixing error messages with path
func (_ecad *CT_ContentPartLocking) ValidateWithPath(path string) error {
	if _ecad.ExtLst != nil {
		if _egaed := _ecad.ExtLst.ValidateWithPath(path + "\u002fE\u0078\u0074\u004c\u0073\u0074"); _egaed != nil {
			return _egaed
		}
	}
	return nil
}

const (
	ST_AnimationDgmOnlyBuildTypeUnset     ST_AnimationDgmOnlyBuildType = 0
	ST_AnimationDgmOnlyBuildTypeOne       ST_AnimationDgmOnlyBuildType = 1
	ST_AnimationDgmOnlyBuildTypeLvlOne    ST_AnimationDgmOnlyBuildType = 2
	ST_AnimationDgmOnlyBuildTypeLvlAtOnce ST_AnimationDgmOnlyBuildType = 3
)

func (_cdfce *CT_ReflectionEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _cdfce.BlurRadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0062l\u0075\u0072\u0052\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.BlurRadAttr)})
	}
	if _cdfce.StAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0041"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.StAAttr)})
	}
	if _cdfce.StPosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0074\u0050o\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.StPosAttr)})
	}
	if _cdfce.EndAAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0041"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.EndAAttr)})
	}
	if _cdfce.EndPosAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0065\u006e\u0064\u0050\u006f\u0073"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.EndPosAttr)})
	}
	if _cdfce.DistAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0073\u0074"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.DistAttr)})
	}
	if _cdfce.DirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0064\u0069\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.DirAttr)})
	}
	if _cdfce.FadeDirAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0066a\u0064\u0065\u0044\u0069\u0072"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.FadeDirAttr)})
	}
	if _cdfce.SxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.SxAttr)})
	}
	if _cdfce.SyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0073\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.SyAttr)})
	}
	if _cdfce.KxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0078"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.KxAttr)})
	}
	if _cdfce.KyAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006b\u0079"}, Value: _e.Sprintf("\u0025\u0076", *_cdfce.KyAttr)})
	}
	if _cdfce.AlgnAttr != ST_RectAlignmentUnset {
		_gdfgf, _ccbe := _cdfce.AlgnAttr.MarshalXMLAttr(_d.Name{Local: "\u0061\u006c\u0067\u006e"})
		if _ccbe != nil {
			return _ccbe
		}
		start.Attr = append(start.Attr, _gdfgf)
	}
	if _cdfce.RotWithShapeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u006f\u0074W\u0069\u0074\u0068\u0053\u0068\u0061\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_cdfce.RotWithShapeAttr))})
	}
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// Validate validates the CT_BlurEffect and its children
func (_cda *CT_BlurEffect) Validate() error {
	return _cda.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074")
}

// Validate validates the CT_BlendEffect and its children
func (_bfaa *CT_BlendEffect) Validate() error {
	return _bfaa.ValidateWithPath("\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074")
}
func NewCT_Connection() *CT_Connection { _fbca := &CT_Connection{}; return _fbca }

type CT_Path2DCubicBezierTo struct{ Pt []*CT_AdjPoint2D }
type CT_TextNormalAutofit struct {
	FontScaleAttr      *ST_TextFontScalePercentOrPercentString
	LnSpcReductionAttr *ST_TextSpacingPercentOrPercentString
}

// Validate validates the CT_Scene3D and its children
func (_fbccbf *CT_Scene3D) Validate() error {
	return _fbccbf.ValidateWithPath("\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044")
}
func (_dgfadd *ST_TileFlipMode) UnmarshalXMLAttr(attr _d.Attr) error {
	switch attr.Value {
	case "":
		*_dgfadd = 0
	case "\u006e\u006f\u006e\u0065":
		*_dgfadd = 1
	case "\u0078":
		*_dgfadd = 2
	case "\u0079":
		*_dgfadd = 3
	case "\u0078\u0079":
		*_dgfadd = 4
	}
	return nil
}

// Validate validates the CT_TextSpacing and its children
func (_fbcdc *CT_TextSpacing) Validate() error {
	return _fbcdc.ValidateWithPath("\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067")
}

// Validate validates the CT_Blip and its children
func (_aefd *CT_Blip) Validate() error {
	return _aefd.ValidateWithPath("\u0043T\u005f\u0042\u006c\u0069\u0070")
}

// ValidateWithPath validates the CT_Percentage and its children, prefixing error messages with path
func (_dfccf *CT_Percentage) ValidateWithPath(path string) error {
	if _fcbgd := _dfccf.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _fcbgd != nil {
		return _fcbgd
	}
	return nil
}
func (_defd *CT_GlowEffect) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _defd.RadAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072\u0061\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_defd.RadAttr)})
	}
	e.EncodeToken(start)
	if _defd.ScrgbClr != nil {
		_fbccb := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_defd.ScrgbClr, _fbccb)
	}
	if _defd.SrgbClr != nil {
		_gada := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_defd.SrgbClr, _gada)
	}
	if _defd.HslClr != nil {
		_bcddg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_defd.HslClr, _bcddg)
	}
	if _defd.SysClr != nil {
		_acbg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_defd.SysClr, _acbg)
	}
	if _defd.SchemeClr != nil {
		_dbcd := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_defd.SchemeClr, _dbcd)
	}
	if _defd.PrstClr != nil {
		_dceb := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_defd.PrstClr, _dceb)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gdda *CT_TableProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bgfc := range start.Attr {
		if _bgfc.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0052\u006f\u0077" {
			_bagafb, _cbefc := _cd.ParseBool(_bgfc.Value)
			if _cbefc != nil {
				return _cbefc
			}
			_gdda.FirstRowAttr = &_bagafb
			continue
		}
		if _bgfc.Name.Local == "\u006ca\u0073\u0074\u0052\u006f\u0077" {
			_cdegg, _bgdfb := _cd.ParseBool(_bgfc.Value)
			if _bgdfb != nil {
				return _bgdfb
			}
			_gdda.LastRowAttr = &_cdegg
			continue
		}
		if _bgfc.Name.Local == "\u0062a\u006e\u0064\u0052\u006f\u0077" {
			_agbce, _edfee := _cd.ParseBool(_bgfc.Value)
			if _edfee != nil {
				return _edfee
			}
			_gdda.BandRowAttr = &_agbce
			continue
		}
		if _bgfc.Name.Local == "\u0062a\u006e\u0064\u0043\u006f\u006c" {
			_aabcde, _ddcbc := _cd.ParseBool(_bgfc.Value)
			if _ddcbc != nil {
				return _ddcbc
			}
			_gdda.BandColAttr = &_aabcde
			continue
		}
		if _bgfc.Name.Local == "\u0072\u0074\u006c" {
			_aceee, _ggeggd := _cd.ParseBool(_bgfc.Value)
			if _ggeggd != nil {
				return _ggeggd
			}
			_gdda.RtlAttr = &_aceee
			continue
		}
		if _bgfc.Name.Local == "\u0066\u0069\u0072\u0073\u0074\u0043\u006f\u006c" {
			_aggbd, _edac := _cd.ParseBool(_bgfc.Value)
			if _edac != nil {
				return _edac
			}
			_gdda.FirstColAttr = &_aggbd
			continue
		}
		if _bgfc.Name.Local == "\u006ca\u0073\u0074\u0043\u006f\u006c" {
			_ccaea, _agefe := _cd.ParseBool(_bgfc.Value)
			if _agefe != nil {
				return _agefe
			}
			_gdda.LastColAttr = &_ccaea
			continue
		}
	}
_cdab:
	for {
		_dgaea, _ffeac := d.Token()
		if _ffeac != nil {
			return _ffeac
		}
		switch _fcfab := _dgaea.(type) {
		case _d.StartElement:
			switch _fcfab.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006e\u006f\u0046\u0069\u006c\u006c"}:
				_gdda.NoFill = NewCT_NoFillProperties()
				if _eefge := d.DecodeElement(_gdda.NoFill, &_fcfab); _eefge != nil {
					return _eefge
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0073o\u006c\u0069\u0064\u0046\u0069\u006cl"}:
				_gdda.SolidFill = NewCT_SolidColorFillProperties()
				if _dgfad := d.DecodeElement(_gdda.SolidFill, &_fcfab); _dgfad != nil {
					return _dgfad
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067\u0072\u0061\u0064\u0046\u0069\u006c\u006c"}:
				_gdda.GradFill = NewCT_GradientFillProperties()
				if _bcfgf := d.DecodeElement(_gdda.GradFill, &_fcfab); _bcfgf != nil {
					return _bcfgf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u006c\u0069\u0070\u0046\u0069\u006c\u006c"}:
				_gdda.BlipFill = NewCT_BlipFillProperties()
				if _dfgea := d.DecodeElement(_gdda.BlipFill, &_fcfab); _dfgea != nil {
					return _dfgea
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0070\u0061\u0074\u0074\u0046\u0069\u006c\u006c"}:
				_gdda.PattFill = NewCT_PatternFillProperties()
				if _egcdb := d.DecodeElement(_gdda.PattFill, &_fcfab); _egcdb != nil {
					return _egcdb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0067r\u0070\u0046\u0069\u006c\u006c"}:
				_gdda.GrpFill = NewCT_GroupFillProperties()
				if _affbc := d.DecodeElement(_gdda.GrpFill, &_fcfab); _affbc != nil {
					return _affbc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u004c\u0073t"}:
				_gdda.EffectLst = NewCT_EffectList()
				if _aggfc := d.DecodeElement(_gdda.EffectLst, &_fcfab); _aggfc != nil {
					return _aggfc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065f\u0066\u0065\u0063\u0074\u0044\u0061g"}:
				_gdda.EffectDag = NewCT_EffectContainer()
				if _aaeb := d.DecodeElement(_gdda.EffectDag, &_fcfab); _aaeb != nil {
					return _aaeb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065"}:
				_gdda.Choice = NewCT_TablePropertiesChoice()
				if _gefed := d.DecodeElement(&_gdda.Choice.TableStyle, &_fcfab); _gefed != nil {
					return _gefed
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0074\u0061\u0062l\u0065\u0053\u0074\u0079\u006c\u0065\u0049\u0064"}:
				_gdda.Choice = NewCT_TablePropertiesChoice()
				if _cfcgfd := d.DecodeElement(&_gdda.Choice.TableStyleId, &_fcfab); _cfcgfd != nil {
					return _cfcgfd
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0065\u0078\u0074\u004c\u0073\u0074"}:
				_gdda.ExtLst = NewCT_OfficeArtExtensionList()
				if _gegdbe := d.DecodeElement(_gdda.ExtLst, &_fcfab); _gegdbe != nil {
					return _gegdbe
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006es\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 \u0065l\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _fcfab.Name)
				if _gdgfb := d.Skip(); _gdgfb != nil {
					return _gdgfb
				}
			}
		case _d.EndElement:
			break _cdab
		case _d.CharData:
		}
	}
	return nil
}

type CT_Shape3D struct {
	ZAttr            *ST_Coordinate
	ExtrusionHAttr   *int64
	ContourWAttr     *int64
	PrstMaterialAttr ST_PresetMaterialType
	BevelT           *CT_Bevel
	BevelB           *CT_Bevel
	ExtrusionClr     *CT_Color
	ContourClr       *CT_Color
	ExtLst           *CT_OfficeArtExtensionList
}

// Validate validates the CT_LineStyleList and its children
func (_acefa *CT_LineStyleList) Validate() error {
	return _acefa.ValidateWithPath("\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074")
}
func (_feaggd ST_ShapeType) ValidateWithPath(path string) error {
	switch _feaggd {
	case 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_feaggd))
	}
	return nil
}

// ValidateWithPath validates the CT_TextSpacing and its children, prefixing error messages with path
func (_gbddg *CT_TextSpacing) ValidateWithPath(path string) error {
	if _gbddg.SpcPct != nil {
		if _dedeg := _gbddg.SpcPct.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0063\u0074"); _dedeg != nil {
			return _dedeg
		}
	}
	if _gbddg.SpcPts != nil {
		if _fbcgb := _gbddg.SpcPts.ValidateWithPath(path + "\u002fS\u0070\u0063\u0050\u0074\u0073"); _fbcgb != nil {
			return _fbcgb
		}
	}
	return nil
}
func (_ceeeee ST_PresetPatternVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_cdfccc := _d.Attr{}
	_cdfccc.Name = name
	switch _ceeeee {
	case ST_PresetPatternValUnset:
		_cdfccc.Value = ""
	case ST_PresetPatternValPct5:
		_cdfccc.Value = "\u0070\u0063\u0074\u0035"
	case ST_PresetPatternValPct10:
		_cdfccc.Value = "\u0070\u0063\u00741\u0030"
	case ST_PresetPatternValPct20:
		_cdfccc.Value = "\u0070\u0063\u00742\u0030"
	case ST_PresetPatternValPct25:
		_cdfccc.Value = "\u0070\u0063\u00742\u0035"
	case ST_PresetPatternValPct30:
		_cdfccc.Value = "\u0070\u0063\u00743\u0030"
	case ST_PresetPatternValPct40:
		_cdfccc.Value = "\u0070\u0063\u00744\u0030"
	case ST_PresetPatternValPct50:
		_cdfccc.Value = "\u0070\u0063\u00745\u0030"
	case ST_PresetPatternValPct60:
		_cdfccc.Value = "\u0070\u0063\u00746\u0030"
	case ST_PresetPatternValPct70:
		_cdfccc.Value = "\u0070\u0063\u00747\u0030"
	case ST_PresetPatternValPct75:
		_cdfccc.Value = "\u0070\u0063\u00747\u0035"
	case ST_PresetPatternValPct80:
		_cdfccc.Value = "\u0070\u0063\u00748\u0030"
	case ST_PresetPatternValPct90:
		_cdfccc.Value = "\u0070\u0063\u00749\u0030"
	case ST_PresetPatternValHorz:
		_cdfccc.Value = "\u0068\u006f\u0072\u007a"
	case ST_PresetPatternValVert:
		_cdfccc.Value = "\u0076\u0065\u0072\u0074"
	case ST_PresetPatternValLtHorz:
		_cdfccc.Value = "\u006c\u0074\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValLtVert:
		_cdfccc.Value = "\u006c\u0074\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDkHorz:
		_cdfccc.Value = "\u0064\u006b\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDkVert:
		_cdfccc.Value = "\u0064\u006b\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValNarHorz:
		_cdfccc.Value = "\u006ea\u0072\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValNarVert:
		_cdfccc.Value = "\u006ea\u0072\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValDashHorz:
		_cdfccc.Value = "\u0064\u0061\u0073\u0068\u0048\u006f\u0072\u007a"
	case ST_PresetPatternValDashVert:
		_cdfccc.Value = "\u0064\u0061\u0073\u0068\u0056\u0065\u0072\u0074"
	case ST_PresetPatternValCross:
		_cdfccc.Value = "\u0063\u0072\u006fs\u0073"
	case ST_PresetPatternValDnDiag:
		_cdfccc.Value = "\u0064\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValUpDiag:
		_cdfccc.Value = "\u0075\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtDnDiag:
		_cdfccc.Value = "\u006c\u0074\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValLtUpDiag:
		_cdfccc.Value = "\u006c\u0074\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkDnDiag:
		_cdfccc.Value = "\u0064\u006b\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDkUpDiag:
		_cdfccc.Value = "\u0064\u006b\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdDnDiag:
		_cdfccc.Value = "\u0077\u0064\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValWdUpDiag:
		_cdfccc.Value = "\u0077\u0064\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashDnDiag:
		_cdfccc.Value = "\u0064\u0061\u0073\u0068\u0044\u006e\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDashUpDiag:
		_cdfccc.Value = "\u0064\u0061\u0073\u0068\u0055\u0070\u0044\u0069\u0061\u0067"
	case ST_PresetPatternValDiagCross:
		_cdfccc.Value = "\u0064i\u0061\u0067\u0043\u0072\u006f\u0073s"
	case ST_PresetPatternValSmCheck:
		_cdfccc.Value = "\u0073m\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValLgCheck:
		_cdfccc.Value = "\u006cg\u0043\u0068\u0065\u0063\u006b"
	case ST_PresetPatternValSmGrid:
		_cdfccc.Value = "\u0073\u006d\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValLgGrid:
		_cdfccc.Value = "\u006c\u0067\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValDotGrid:
		_cdfccc.Value = "\u0064o\u0074\u0047\u0072\u0069\u0064"
	case ST_PresetPatternValSmConfetti:
		_cdfccc.Value = "\u0073\u006d\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValLgConfetti:
		_cdfccc.Value = "\u006c\u0067\u0043\u006f\u006e\u0066\u0065\u0074\u0074\u0069"
	case ST_PresetPatternValHorzBrick:
		_cdfccc.Value = "\u0068o\u0072\u007a\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValDiagBrick:
		_cdfccc.Value = "\u0064i\u0061\u0067\u0042\u0072\u0069\u0063k"
	case ST_PresetPatternValSolidDmnd:
		_cdfccc.Value = "\u0073o\u006c\u0069\u0064\u0044\u006d\u006ed"
	case ST_PresetPatternValOpenDmnd:
		_cdfccc.Value = "\u006f\u0070\u0065\u006e\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValDotDmnd:
		_cdfccc.Value = "\u0064o\u0074\u0044\u006d\u006e\u0064"
	case ST_PresetPatternValPlaid:
		_cdfccc.Value = "\u0070\u006c\u0061i\u0064"
	case ST_PresetPatternValSphere:
		_cdfccc.Value = "\u0073\u0070\u0068\u0065\u0072\u0065"
	case ST_PresetPatternValWeave:
		_cdfccc.Value = "\u0077\u0065\u0061v\u0065"
	case ST_PresetPatternValDivot:
		_cdfccc.Value = "\u0064\u0069\u0076o\u0074"
	case ST_PresetPatternValShingle:
		_cdfccc.Value = "\u0073h\u0069\u006e\u0067\u006c\u0065"
	case ST_PresetPatternValWave:
		_cdfccc.Value = "\u0077\u0061\u0076\u0065"
	case ST_PresetPatternValTrellis:
		_cdfccc.Value = "\u0074r\u0065\u006c\u006c\u0069\u0073"
	case ST_PresetPatternValZigZag:
		_cdfccc.Value = "\u007a\u0069\u0067\u005a\u0061\u0067"
	}
	return _cdfccc, nil
}

// ValidateWithPath validates the EG_Media and its children, prefixing error messages with path
func (_bdfag *EG_Media) ValidateWithPath(path string) error {
	if _bdfag.AudioCd != nil {
		if _dbabcb := _bdfag.AudioCd.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0043\u0064"); _dbabcb != nil {
			return _dbabcb
		}
	}
	if _bdfag.WavAudioFile != nil {
		if _abdba := _bdfag.WavAudioFile.ValidateWithPath(path + "\u002f\u0057\u0061\u0076\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _abdba != nil {
			return _abdba
		}
	}
	if _bdfag.AudioFile != nil {
		if _fdfga := _bdfag.AudioFile.ValidateWithPath(path + "\u002f\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065"); _fdfga != nil {
			return _fdfga
		}
	}
	if _bdfag.VideoFile != nil {
		if _efffg := _bdfag.VideoFile.ValidateWithPath(path + "\u002f\u0056\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065"); _efffg != nil {
			return _efffg
		}
	}
	if _bdfag.QuickTimeFile != nil {
		if _egdcb := _bdfag.QuickTimeFile.ValidateWithPath(path + "\u002f\u0051\u0075\u0069\u0063\u006b\u0054\u0069\u006de\u0046\u0069\u006c\u0065"); _egdcb != nil {
			return _egdcb
		}
	}
	return nil
}
func (_feacf *CT_TableCell) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _feacf.RowSpanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0072o\u0077\u0053\u0070\u0061\u006e"}, Value: _e.Sprintf("\u0025\u0076", *_feacf.RowSpanAttr)})
	}
	if _feacf.GridSpanAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0067\u0072\u0069\u0064\u0053\u0070\u0061\u006e"}, Value: _e.Sprintf("\u0025\u0076", *_feacf.GridSpanAttr)})
	}
	if _feacf.HMergeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0068\u004d\u0065\u0072\u0067\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_feacf.HMergeAttr))})
	}
	if _feacf.VMergeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0076\u004d\u0065\u0072\u0067\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_feacf.VMergeAttr))})
	}
	if _feacf.IdAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0069\u0064"}, Value: _e.Sprintf("\u0025\u0076", *_feacf.IdAttr)})
	}
	e.EncodeToken(start)
	if _feacf.TxBody != nil {
		_aeaec := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0078\u0042\u006f\u0064\u0079"}}
		e.EncodeElement(_feacf.TxBody, _aeaec)
	}
	if _feacf.TcPr != nil {
		_fddcf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074\u0063\u0050\u0072"}}
		e.EncodeElement(_feacf.TcPr, _fddcf)
	}
	if _feacf.ExtLst != nil {
		_aebef := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_feacf.ExtLst, _aebef)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the EG_TextBullet and its children, prefixing error messages with path
func (_cgaba *EG_TextBullet) ValidateWithPath(path string) error {
	if _cgaba.BuNone != nil {
		if _fddcdc := _cgaba.BuNone.ValidateWithPath(path + "\u002fB\u0075\u004e\u006f\u006e\u0065"); _fddcdc != nil {
			return _fddcdc
		}
	}
	if _cgaba.BuAutoNum != nil {
		if _ebbcg := _cgaba.BuAutoNum.ValidateWithPath(path + "\u002f\u0042\u0075\u0041\u0075\u0074\u006f\u004e\u0075\u006d"); _ebbcg != nil {
			return _ebbcg
		}
	}
	if _cgaba.BuChar != nil {
		if _bfbgd := _cgaba.BuChar.ValidateWithPath(path + "\u002fB\u0075\u0043\u0068\u0061\u0072"); _bfbgd != nil {
			return _bfbgd
		}
	}
	if _cgaba.BuBlip != nil {
		if _effcfc := _cgaba.BuBlip.ValidateWithPath(path + "\u002fB\u0075\u0042\u006c\u0069\u0070"); _effcfc != nil {
			return _effcfc
		}
	}
	return nil
}
func NewCT_Cell3D() *CT_Cell3D { _cecc := &CT_Cell3D{}; _cecc.Bevel = NewCT_Bevel(); return _cecc }

// ValidateWithPath validates the CT_SphereCoords and its children, prefixing error messages with path
func (_dagbc *CT_SphereCoords) ValidateWithPath(path string) error {
	if _dagbc.LatAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u004c\u0061t\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dagbc.LatAttr)
	}
	if _dagbc.LatAttr >= 21600000 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002eL\u0061\u0074\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dagbc.LatAttr)
	}
	if _dagbc.LonAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u004c\u006fn\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dagbc.LonAttr)
	}
	if _dagbc.LonAttr >= 21600000 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002eL\u006f\u006e\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dagbc.LonAttr)
	}
	if _dagbc.RevAttr < 0 {
		return _e.Errorf("%\u0073\u002f\u006d\u002e\u0052\u0065v\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, _dagbc.RevAttr)
	}
	if _dagbc.RevAttr >= 21600000 {
		return _e.Errorf("\u0025\u0073\u002f\u006d\u002eR\u0065\u0076\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, _dagbc.RevAttr)
	}
	return nil
}

// Validate validates the CT_BaseStylesOverride and its children
func (_faaca *CT_BaseStylesOverride) Validate() error {
	return _faaca.ValidateWithPath("C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065")
}

// Validate validates the CT_VideoFile and its children
func (_bdcgad *CT_VideoFile) Validate() error {
	return _bdcgad.ValidateWithPath("\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065")
}

// ValidateWithPath validates the CT_BlipFillProperties and its children, prefixing error messages with path
func (_cgac *CT_BlipFillProperties) ValidateWithPath(path string) error {
	if _cgac.Blip != nil {
		if _cdge := _cgac.Blip.ValidateWithPath(path + "\u002f\u0042\u006ci\u0070"); _cdge != nil {
			return _cdge
		}
	}
	if _cgac.SrcRect != nil {
		if _dgbc := _cgac.SrcRect.ValidateWithPath(path + "\u002f\u0053\u0072\u0063\u0052\u0065\u0063\u0074"); _dgbc != nil {
			return _dgbc
		}
	}
	if _cgac.Tile != nil {
		if _ccaag := _cgac.Tile.ValidateWithPath(path + "\u002f\u0054\u0069l\u0065"); _ccaag != nil {
			return _ccaag
		}
	}
	if _cgac.Stretch != nil {
		if _dcaa := _cgac.Stretch.ValidateWithPath(path + "\u002f\u0053\u0074\u0072\u0065\u0074\u0063\u0068"); _dcaa != nil {
			return _dcaa
		}
	}
	return nil
}
func NewCT_FontReference() *CT_FontReference {
	_bcbd := &CT_FontReference{}
	_bcbd.IdxAttr = ST_FontCollectionIndex(1)
	return _bcbd
}
func NewCT_TextSpacingPoint() *CT_TextSpacingPoint {
	_cfbdg := &CT_TextSpacingPoint{}
	_cfbdg.ValAttr = 0
	return _cfbdg
}
func (_bdcaad ST_PresetCameraType) String() string {
	switch _bdcaad {
	case 0:
		return ""
	case 1:
		return "l\u0065g\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071u\u0065\u0054\u006f\u0070Le\u0066\u0074"
	case 2:
		return "\u006c\u0065g\u0061\u0063\u0079O\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 3:
		return "l\u0065\u0067\u0061\u0063yO\u0062l\u0069\u0071\u0075\u0065\u0054o\u0070\u0052\u0069\u0067\u0068\u0074"
	case 4:
		return "\u006c\u0065\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075e\u004c\u0065\u0066\u0074"
	case 5:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0046\u0072\u006f\u006e\u0074"
	case 6:
		return "\u006ce\u0067a\u0063\u0079\u004f\u0062\u006ci\u0071\u0075e\u0052\u0069\u0067\u0068\u0074"
	case 7:
		return "\u006c\u0065\u0067ac\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d\u004c\u0065\u0066\u0074"
	case 8:
		return "\u006c\u0065\u0067\u0061cy\u004f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 9:
		return "\u006ce\u0067\u0061\u0063\u0079\u004f\u0062\u006c\u0069\u0071\u0075\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069\u0067\u0068\u0074"
	case 10:
		return "\u006ce\u0067\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0054\u006f\u0070\u004c\u0065\u0066\u0074"
	case 11:
		return "l\u0065g\u0061\u0063\u0079\u0050\u0065\u0072\u0073\u0070e\u0063\u0074\u0069\u0076eT\u006f\u0070"
	case 12:
		return "\u006ce\u0067\u0061\u0063\u0079P\u0065\u0072\u0073\u0070\u0065c\u0074i\u0076e\u0054\u006f\u0070\u0052\u0069\u0067\u0068t"
	case 13:
		return "l\u0065\u0067\u0061\u0063yP\u0065r\u0073\u0070\u0065\u0063\u0074i\u0076\u0065\u004c\u0065\u0066\u0074"
	case 14:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0046\u0072\u006fn\u0074"
	case 15:
		return "\u006c\u0065\u0067\u0061cy\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0069\u0067h\u0074"
	case 16:
		return "l\u0065\u0067\u0061\u0063\u0079\u0050e\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065B\u006f\u0074\u0074o\u006dL\u0065\u0066\u0074"
	case 17:
		return "\u006c\u0065\u0067ac\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 18:
		return "\u006c\u0065\u0067\u0061c\u0079\u0050\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069v\u0065B\u006f\u0074\u0074\u006f\u006d\u0052\u0069g\u0068\u0074"
	case 19:
		return "\u006f\u0072\u0074\u0068\u006f\u0067\u0072\u0061\u0070\u0068\u0069\u0063F\u0072\u006f\u006e\u0074"
	case 20:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063T\u006f\u0070\u0055\u0070"
	case 21:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0054\u006f\u0070\u0044\u006f\u0077\u006e"
	case 22:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u0042\u006f\u0074t\u006f\u006d\u0055\u0070"
	case 23:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u0042\u006f\u0074\u0074\u006f\u006d\u0044\u006f\u0077\u006e"
	case 24:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066\u0074\u0055\u0070"
	case 25:
		return "\u0069\u0073\u006f\u006d\u0065\u0074\u0072\u0069\u0063\u004c\u0065\u0066t\u0044\u006f\u0077\u006e"
	case 26:
		return "\u0069\u0073o\u006d\u0065\u0074r\u0069\u0063\u0052\u0069\u0067\u0068\u0074\u0055\u0070"
	case 27:
		return "\u0069s\u006fm\u0065\u0074\u0072\u0069\u0063R\u0069\u0067h\u0074\u0044\u006f\u0077\u006e"
	case 28:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0031\u004c\u0065\u0066\u0074"
	case 29:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0031\u0052\u0069\u0067h\u0074"
	case 30:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00731T\u006f\u0070"
	case 31:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0032\u004c\u0065\u0066\u0074"
	case 32:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0032\u0052\u0069\u0067h\u0074"
	case 33:
		return "i\u0073o\u006d\u0065\u0074\u0072\u0069\u0063\u004f\u0066f\u0041\u0078\u0069\u00732T\u006f\u0070"
	case 34:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0033\u004c\u0065\u0066\u0074"
	case 35:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0052\u0069\u0067h\u0074"
	case 36:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0033\u0042\u006f\u0074\u0074\u006f\u006d"
	case 37:
		return "i\u0073\u006f\u006d\u0065tr\u0069c\u004f\u0066\u0066\u0041\u0078i\u0073\u0034\u004c\u0065\u0066\u0074"
	case 38:
		return "\u0069\u0073\u006f\u006det\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0052\u0069\u0067h\u0074"
	case 39:
		return "\u0069\u0073\u006fme\u0074\u0072\u0069\u0063\u004f\u0066\u0066\u0041\u0078\u0069\u0073\u0034\u0042\u006f\u0074\u0074\u006f\u006d"
	case 40:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006fp\u004c\u0065\u0066\u0074"
	case 41:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0054\u006f\u0070"
	case 42:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0054\u006f\u0070\u0052\u0069\u0067\u0068\u0074"
	case 43:
		return "o\u0062\u006c\u0069\u0071\u0075\u0065\u004c\u0065\u0066\u0074"
	case 44:
		return "\u006f\u0062\u006ci\u0071\u0075\u0065\u0052\u0069\u0067\u0068\u0074"
	case 45:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006fm\u004c\u0065\u0066\u0074"
	case 46:
		return "\u006f\u0062\u006c\u0069\u0071\u0075\u0065\u0042\u006f\u0074\u0074\u006f\u006d"
	case 47:
		return "\u006fb\u006ci\u0071\u0075\u0065\u0042\u006ft\u0074\u006fm\u0052\u0069\u0067\u0068\u0074"
	case 48:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0046\u0072\u006f\u006e\u0074"
	case 49:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u004c\u0065\u0066\u0074"
	case 50:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0052\u0069\u0067\u0068\u0074"
	case 51:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065"
	case 52:
		return "\u0070\u0065r\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0042\u0065\u006c\u006f\u0077"
	case 53:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065A\u0062\u006f\u0076\u0065\u004c\u0065\u0066\u0074\u0046\u0061c\u0069\u006e\u0067"
	case 54:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0041\u0062\u006f\u0076\u0065\u0052i\u0067\u0068\u0074F\u0061c\u0069\u006e\u0067"
	case 55:
		return "\u0070\u0065\u0072\u0073\u0070\u0065\u0063\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074r\u0061s\u0074\u0069\u006e\u0067\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 56:
		return "\u0070\u0065\u0072\u0073\u0070\u0065c\u0074\u0069\u0076\u0065\u0043\u006f\u006e\u0074\u0072\u0061\u0073\u0074\u0069n\u0067\u0052\u0069\u0067\u0068\u0074\u0046a\u0063\u0069\u006e\u0067"
	case 57:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072\u006f\u0069\u0063L\u0065\u0066\u0074F\u0061c\u0069\u006e\u0067"
	case 58:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072\u006fi\u0063R\u0069\u0067\u0068\u0074\u0046\u0061\u0063i\u006e\u0067"
	case 59:
		return "\u0070\u0065\u0072sp\u0065\u0063\u0074\u0069\u0076\u0065\u0048\u0065\u0072o\u0069c\u0045x\u0074r\u0065\u006d\u0065\u004c\u0065\u0066\u0074\u0046\u0061\u0063\u0069\u006e\u0067"
	case 60:
		return "p\u0065\u0072\u0073\u0070\u0065\u0063t\u0069\u0076\u0065\u0048\u0065\u0072o\u0069\u0063\u0045\u0078\u0074\u0072\u0065m\u0065\u0052\u0069\u0067\u0068\u0074\u0046\u0061\u0063\u0069n\u0067"
	case 61:
		return "\u0070e\u0072s\u0070\u0065\u0063\u0074\u0069v\u0065\u0052e\u006c\u0061\u0078\u0065\u0064"
	case 62:
		return "\u0070\u0065\u0072\u0073p\u0065\u0063\u0074\u0069\u0076\u0065\u0052\u0065\u006c\u0061x\u0065d\u004d\u006f\u0064\u0065\u0072\u0061\u0074e\u006c\u0079"
	}
	return ""
}
func (_cdggf *EG_ThemeableFillStyle) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_accec:
	for {
		_agafa, _fccaf := d.Token()
		if _fccaf != nil {
			return _fccaf
		}
		switch _debge := _agafa.(type) {
		case _d.StartElement:
			switch _debge.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066\u0069\u006c\u006c"}:
				_cdggf.Fill = NewCT_FillProperties()
				if _aaceb := d.DecodeElement(_cdggf.Fill, &_debge); _aaceb != nil {
					return _aaceb
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0066i\u006c\u006c\u0052\u0065\u0066"}:
				_cdggf.FillRef = NewCT_StyleMatrixReference()
				if _addab := d.DecodeElement(_cdggf.FillRef, &_debge); _addab != nil {
					return _addab
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u0054\u0068\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065\u0020\u0025\u0076", _debge.Name)
				if _bdbad := d.Skip(); _bdbad != nil {
					return _bdbad
				}
			}
		case _d.EndElement:
			break _accec
		case _d.CharData:
		}
	}
	return nil
}
func (_aaaaaa ST_AnimationDgmBuildType) String() string {
	if _aaaaaa.ST_AnimationBuildType != ST_AnimationBuildTypeUnset {
		return _aaaaaa.ST_AnimationBuildType.String()
	}
	if _aaaaaa.ST_AnimationDgmOnlyBuildType != ST_AnimationDgmOnlyBuildTypeUnset {
		return _aaaaaa.ST_AnimationDgmOnlyBuildType.String()
	}
	return ""
}

// Validate validates the CT_EmbeddedWAVAudioFile and its children
func (_cdcg *CT_EmbeddedWAVAudioFile) Validate() error {
	return _cdcg.ValidateWithPath("\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065")
}
func (_caffce ST_PresetShadowVal) MarshalXMLAttr(name _d.Name) (_d.Attr, error) {
	_eebaf := _d.Attr{}
	_eebaf.Name = name
	switch _caffce {
	case ST_PresetShadowValUnset:
		_eebaf.Value = ""
	case ST_PresetShadowValShdw1:
		_eebaf.Value = "\u0073\u0068\u0064w\u0031"
	case ST_PresetShadowValShdw2:
		_eebaf.Value = "\u0073\u0068\u0064w\u0032"
	case ST_PresetShadowValShdw3:
		_eebaf.Value = "\u0073\u0068\u0064w\u0033"
	case ST_PresetShadowValShdw4:
		_eebaf.Value = "\u0073\u0068\u0064w\u0034"
	case ST_PresetShadowValShdw5:
		_eebaf.Value = "\u0073\u0068\u0064w\u0035"
	case ST_PresetShadowValShdw6:
		_eebaf.Value = "\u0073\u0068\u0064w\u0036"
	case ST_PresetShadowValShdw7:
		_eebaf.Value = "\u0073\u0068\u0064w\u0037"
	case ST_PresetShadowValShdw8:
		_eebaf.Value = "\u0073\u0068\u0064w\u0038"
	case ST_PresetShadowValShdw9:
		_eebaf.Value = "\u0073\u0068\u0064w\u0039"
	case ST_PresetShadowValShdw10:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0030"
	case ST_PresetShadowValShdw11:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0031"
	case ST_PresetShadowValShdw12:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0032"
	case ST_PresetShadowValShdw13:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0033"
	case ST_PresetShadowValShdw14:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0034"
	case ST_PresetShadowValShdw15:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0035"
	case ST_PresetShadowValShdw16:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0036"
	case ST_PresetShadowValShdw17:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0037"
	case ST_PresetShadowValShdw18:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0038"
	case ST_PresetShadowValShdw19:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0031\u0039"
	case ST_PresetShadowValShdw20:
		_eebaf.Value = "\u0073\u0068\u0064\u0077\u0032\u0030"
	}
	return _eebaf, nil
}

// Validate validates the CT_Hyperlink and its children
func (_afeb *CT_Hyperlink) Validate() error {
	return _afeb.ValidateWithPath("\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b")
}
func (_bbde *CT_ComplementTransform) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

type Tbl struct{ CT_Table }

func (_aaabg ST_LineEndWidth) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	return e.EncodeElement(_aaabg.String(), start)
}

// ValidateWithPath validates the CT_ColorMRU and its children, prefixing error messages with path
func (_gbda *CT_ColorMRU) ValidateWithPath(path string) error {
	for _gbgc, _bebaa := range _gbda.EG_ColorChoice {
		if _eccb := _bebaa.ValidateWithPath(_e.Sprintf("%\u0073\u002f\u0045\u0047_C\u006fl\u006f\u0072\u0043\u0068\u006fi\u0063\u0065\u005b\u0025\u0064\u005d", path, _gbgc)); _eccb != nil {
			return _eccb
		}
	}
	return nil
}

// Validate validates the CT_TextNoAutofit and its children
func (_efdeg *CT_TextNoAutofit) Validate() error {
	return _efdeg.ValidateWithPath("\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074")
}
func (_ggeeg *ST_Coordinate32) Validate() error { return _ggeeg.ValidateWithPath("") }
func ParseUnionST_PositiveFixedPercentage(s string) (ST_PositiveFixedPercentage, error) {
	_fbgcb := ST_PositiveFixedPercentage{}
	if _a.ST_PercentagePatternRe.MatchString(s) {
		_fbgcb.ST_PositiveFixedPercentage = &ST_Percentage{}
		_fbgcb.ST_PositiveFixedPercentage.ST_Percentage = &s
	} else {
		_babeb, _accggd := _cd.ParseInt(s, 10, 64)
		if _accggd != nil {
			return _fbgcb, _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0025\u0073\u0020\u0061s\u0020\u0069\u006e\u0074", _accggd)
		}
		_baefe := int32(_babeb)
		_fbgcb.ST_PositiveFixedPercentageDecimal = &_baefe
	}
	return _fbgcb, nil
}
func (_ggaaf *ST_TextBulletSize) Validate() error { return _ggaaf.ValidateWithPath("") }
func (_aeada *CT_RegularTextRun) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	e.EncodeToken(start)
	if _aeada.RPr != nil {
		_baeg := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0072P\u0072"}}
		e.EncodeElement(_aeada.RPr, _baeg)
	}
	_dabc := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0074"}}
	_ff.AddPreserveSpaceAttr(&_dabc, _aeada.T)
	e.EncodeElement(_aeada.T, _dabc)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}

// ValidateWithPath validates the CT_SchemeColor and its children, prefixing error messages with path
func (_geace *CT_SchemeColor) ValidateWithPath(path string) error {
	if _geace.ValAttr == ST_SchemeColorValUnset {
		return _e.Errorf("\u0025\u0073\u002fV\u0061\u006c\u0041\u0074t\u0072\u0020\u0069\u0073\u0020\u0061\u0020m\u0061\u006e\u0064\u0061\u0074\u006f\u0072\u0079\u0020\u0066\u0069\u0065\u006c\u0064", path)
	}
	if _cbdaag := _geace.ValAttr.ValidateWithPath(path + "\u002f\u0056\u0061\u006c\u0041\u0074\u0074\u0072"); _cbdaag != nil {
		return _cbdaag
	}
	for _ccfb, _bagdd := range _geace.EG_ColorTransform {
		if _befb := _bagdd.ValidateWithPath(_e.Sprintf("\u0025s\u002f\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d\u005b\u0025\u0064\u005d", path, _ccfb)); _befb != nil {
			return _befb
		}
	}
	return nil
}

type CT_GvmlConnector struct {
	NvCxnSpPr *CT_GvmlConnectorNonVisual
	SpPr      *CT_ShapeProperties
	Style     *CT_ShapeStyle
	ExtLst    *CT_OfficeArtExtensionList
}

func (_dafce *EG_LineJoinProperties) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
_deega:
	for {
		_bgfga, _efee := d.Token()
		if _efee != nil {
			return _efee
		}
		switch _acfffg := _bgfga.(type) {
		case _d.StartElement:
			switch _acfffg.Name {
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0072\u006f\u0075n\u0064"}:
				_dafce.Round = NewCT_LineJoinRound()
				if _bdcc := d.DecodeElement(_dafce.Round, &_acfffg); _bdcc != nil {
					return _bdcc
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u0062\u0065\u0076e\u006c"}:
				_dafce.Bevel = NewCT_LineJoinBevel()
				if _geagf := d.DecodeElement(_dafce.Bevel, &_acfffg); _geagf != nil {
					return _geagf
				}
			case _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}, _d.Name{Space: "\u0068\u0074\u0074\u0070\u003a/\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0063\u006c\u0063\u002e\u006f\u0072g\u002f\u006f\u006f\u0078\u006d\u006c\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067\u006d\u006c\u002f\u006d\u0061\u0069\u006e", Local: "\u006d\u0069\u0074e\u0072"}:
				_dafce.Miter = NewCT_LineJoinMiterProperties()
				if _geddd := d.DecodeElement(_dafce.Miter, &_acfffg); _geddd != nil {
					return _geddd
				}
			default:
				_ff.Log("\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u0075n\u0073\u0075\u0070p\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006de\u006e\u0074\u0020\u006f\u006e E\u0047\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u0020\u0025\u0076", _acfffg.Name)
				if _afgfe := d.Skip(); _afgfe != nil {
					return _afgfe
				}
			}
		case _d.EndElement:
			break _deega
		case _d.CharData:
		}
	}
	return nil
}
func (_fbfd *CT_Path2DArcTo) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	for _, _bbbdee := range start.Attr {
		if _bbbdee.Name.Local == "\u0077\u0052" {
			_febdc, _gagfd := ParseUnionST_AdjCoordinate(_bbbdee.Value)
			if _gagfd != nil {
				return _gagfd
			}
			_fbfd.WRAttr = _febdc
			continue
		}
		if _bbbdee.Name.Local == "\u0068\u0052" {
			_fbdcd, _dcbff := ParseUnionST_AdjCoordinate(_bbbdee.Value)
			if _dcbff != nil {
				return _dcbff
			}
			_fbfd.HRAttr = _fbdcd
			continue
		}
		if _bbbdee.Name.Local == "\u0073\u0074\u0041n\u0067" {
			_egeee, _geeeg := ParseUnionST_AdjAngle(_bbbdee.Value)
			if _geeeg != nil {
				return _geeeg
			}
			_fbfd.StAngAttr = _egeee
			continue
		}
		if _bbbdee.Name.Local == "\u0073\u0077\u0041n\u0067" {
			_effab, _afegf := ParseUnionST_AdjAngle(_bbbdee.Value)
			if _afegf != nil {
				return _afegf
			}
			_fbfd.SwAngAttr = _effab
			continue
		}
	}
	for {
		_dabfa, _beefe := d.Token()
		if _beefe != nil {
			return _e.Errorf("\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fP\u0061\u0074\u0068\u0032\u0044\u0041\u0072\u0063\u0054\u006f:\u0020\u0025\u0073", _beefe)
		}
		if _fgdd, _defab := _dabfa.(_d.EndElement); _defab && _fgdd.Name == start.Name {
			break
		}
	}
	return nil
}
func (_gccgdf ST_RectAlignment) Validate() error { return _gccgdf.ValidateWithPath("") }

// Validate validates the CT_TextBulletSizePoint and its children
func (_ececa *CT_TextBulletSizePoint) Validate() error {
	return _ececa.ValidateWithPath("\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074")
}

// ValidateWithPath validates the CT_HSLEffect and its children, prefixing error messages with path
func (_fcbf *CT_HSLEffect) ValidateWithPath(path string) error {
	if _fcbf.HueAttr != nil {
		if *_fcbf.HueAttr < 0 {
			return _e.Errorf("%\u0073\u002f\u006d\u002e\u0048\u0075e\u0041\u0074\u0074\u0072\u0020\u006du\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025v\u0029", path, *_fcbf.HueAttr)
		}
		if *_fcbf.HueAttr >= 21600000 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002eH\u0075\u0065\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062e\u0020\u003c\u0020\u0032\u0031\u0036\u0030\u0030\u0030\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_fcbf.HueAttr)
		}
	}
	if _fcbf.SatAttr != nil {
		if _ccaaa := _fcbf.SatAttr.ValidateWithPath(path + "\u002f\u0053\u0061\u0074\u0041\u0074\u0074\u0072"); _ccaaa != nil {
			return _ccaaa
		}
	}
	if _fcbf.LumAttr != nil {
		if _ecgd := _fcbf.LumAttr.ValidateWithPath(path + "\u002f\u004c\u0075\u006d\u0041\u0074\u0074\u0072"); _ecgd != nil {
			return _ecgd
		}
	}
	return nil
}

type ST_AnimationDgmOnlyBuildType byte

const (
	ST_TextAnchoringTypeUnset ST_TextAnchoringType = 0
	ST_TextAnchoringTypeT     ST_TextAnchoringType = 1
	ST_TextAnchoringTypeCtr   ST_TextAnchoringType = 2
	ST_TextAnchoringTypeB     ST_TextAnchoringType = 3
	ST_TextAnchoringTypeJust  ST_TextAnchoringType = 4
	ST_TextAnchoringTypeDist  ST_TextAnchoringType = 5
)

// ValidateWithPath validates the CT_Bevel and its children, prefixing error messages with path
func (_acbd *CT_Bevel) ValidateWithPath(path string) error {
	if _acbd.WAttr != nil {
		if *_acbd.WAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0057A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_acbd.WAttr)
		}
		if *_acbd.WAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0057\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_acbd.WAttr)
		}
	}
	if _acbd.HAttr != nil {
		if *_acbd.HAttr < 0 {
			return _e.Errorf("\u0025\u0073\u002f\u006d\u002e\u0048A\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003e=\u0020\u0030\u0020\u0028\u0068\u0061\u0076e\u0020\u0025\u0076\u0029", path, *_acbd.HAttr)
		}
		if *_acbd.HAttr > 27273042316900 {
			return _e.Errorf("\u0025\u0073/\u006d\u002e\u0048\u0041\u0074\u0074\u0072\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u003c\u003d\u0020\u0032\u0037\u0032\u0037\u0033\u0030\u0034\u0032\u0033\u0031\u0036\u0039\u0030\u0030\u0020\u0028\u0068\u0061\u0076\u0065\u0020\u0025\u0076\u0029", path, *_acbd.HAttr)
		}
	}
	if _fgag := _acbd.PrstAttr.ValidateWithPath(path + "\u002fP\u0072\u0073\u0074\u0041\u0074\u0074r"); _fgag != nil {
		return _fgag
	}
	return nil
}
func (_febac ST_TextHorzOverflowType) ValidateWithPath(path string) error {
	switch _febac {
	case 0, 1, 2:
	default:
		return _e.Errorf("\u0025s\u003a\u0020\u006f\u0075t\u0020\u006f\u0066\u0020\u0072a\u006eg\u0065 \u0076\u0061\u006c\u0075\u0065\u0020\u0025d", path, int(_febac))
	}
	return nil
}
func NewCT_TableRow() *CT_TableRow { _cegcc := &CT_TableRow{}; return _cegcc }
func (_fgcba *CT_NonVisualDrawingShapeProps) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _fgcba.TxBoxAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0074\u0078\u0042o\u0078"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_fgcba.TxBoxAttr))})
	}
	e.EncodeToken(start)
	if _fgcba.SpLocks != nil {
		_cagce := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0070\u004c\u006f\u0063\u006bs"}}
		e.EncodeElement(_fgcba.SpLocks, _cagce)
	}
	if _fgcba.ExtLst != nil {
		_gega := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0065\u0078\u0074\u004c\u0073\u0074"}}
		e.EncodeElement(_fgcba.ExtLst, _gega)
	}
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_egccd *EG_ColorChoice) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _egccd.ScrgbClr != nil {
		_dgbbdf := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0063\u0072\u0067\u0062\u0043\u006c\u0072"}}
		e.EncodeElement(_egccd.ScrgbClr, _dgbbdf)
	}
	if _egccd.SrgbClr != nil {
		_gdde := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0073\u0072\u0067\u0062\u0043\u006cr"}}
		e.EncodeElement(_egccd.SrgbClr, _gdde)
	}
	if _egccd.HslClr != nil {
		_fgece := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0068\u0073\u006c\u0043\u006c\u0072"}}
		e.EncodeElement(_egccd.HslClr, _fgece)
	}
	if _egccd.SysClr != nil {
		_dgfde := _d.StartElement{Name: _d.Name{Local: "\u0061\u003a\u0073\u0079\u0073\u0043\u006c\u0072"}}
		e.EncodeElement(_egccd.SysClr, _dgfde)
	}
	if _egccd.SchemeClr != nil {
		_eegdgg := _d.StartElement{Name: _d.Name{Local: "a\u003a\u0073\u0063\u0068\u0065\u006d\u0065\u0043\u006c\u0072"}}
		e.EncodeElement(_egccd.SchemeClr, _eegdgg)
	}
	if _egccd.PrstClr != nil {
		_bece := _d.StartElement{Name: _d.Name{Local: "\u0061:\u0070\u0072\u0073\u0074\u0043\u006cr"}}
		e.EncodeElement(_egccd.PrstClr, _bece)
	}
	return nil
}
func (_dgdaf *ST_LineEndWidth) UnmarshalXML(d *_d.Decoder, start _d.StartElement) error {
	_gbaccb, _efggad := d.Token()
	if _efggad != nil {
		return _efggad
	}
	if _ageea, _dbfcf := _gbaccb.(_d.EndElement); _dbfcf && _ageea.Name == start.Name {
		*_dgdaf = 1
		return nil
	}
	if _affac, _cbaaaf := _gbaccb.(_d.CharData); !_cbaaaf {
		return _e.Errorf("\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0063\u0068a\u0072\u0020\u0064\u0061\u0074\u0061\u002c\u0020\u0067\u006ft\u0020\u0025\u0054", _gbaccb)
	} else {
		switch string(_affac) {
		case "":
			*_dgdaf = 0
		case "\u0073\u006d":
			*_dgdaf = 1
		case "\u006d\u0065\u0064":
			*_dgdaf = 2
		case "\u006c\u0067":
			*_dgdaf = 3
		}
	}
	_gbaccb, _efggad = d.Token()
	if _efggad != nil {
		return _efggad
	}
	if _gdadf, _gcdcb := _gbaccb.(_d.EndElement); _gcdcb && _gdadf.Name == start.Name {
		return nil
	}
	return _e.Errorf("\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0065\u006e\u0064\u0020\u0065\u006ce\u006de\u006e\u0074\u002c\u0020\u0067\u006f\u0074 \u0025\u0076", _gbaccb)
}

const (
	ST_PresetPatternValUnset      ST_PresetPatternVal = 0
	ST_PresetPatternValPct5       ST_PresetPatternVal = 1
	ST_PresetPatternValPct10      ST_PresetPatternVal = 2
	ST_PresetPatternValPct20      ST_PresetPatternVal = 3
	ST_PresetPatternValPct25      ST_PresetPatternVal = 4
	ST_PresetPatternValPct30      ST_PresetPatternVal = 5
	ST_PresetPatternValPct40      ST_PresetPatternVal = 6
	ST_PresetPatternValPct50      ST_PresetPatternVal = 7
	ST_PresetPatternValPct60      ST_PresetPatternVal = 8
	ST_PresetPatternValPct70      ST_PresetPatternVal = 9
	ST_PresetPatternValPct75      ST_PresetPatternVal = 10
	ST_PresetPatternValPct80      ST_PresetPatternVal = 11
	ST_PresetPatternValPct90      ST_PresetPatternVal = 12
	ST_PresetPatternValHorz       ST_PresetPatternVal = 13
	ST_PresetPatternValVert       ST_PresetPatternVal = 14
	ST_PresetPatternValLtHorz     ST_PresetPatternVal = 15
	ST_PresetPatternValLtVert     ST_PresetPatternVal = 16
	ST_PresetPatternValDkHorz     ST_PresetPatternVal = 17
	ST_PresetPatternValDkVert     ST_PresetPatternVal = 18
	ST_PresetPatternValNarHorz    ST_PresetPatternVal = 19
	ST_PresetPatternValNarVert    ST_PresetPatternVal = 20
	ST_PresetPatternValDashHorz   ST_PresetPatternVal = 21
	ST_PresetPatternValDashVert   ST_PresetPatternVal = 22
	ST_PresetPatternValCross      ST_PresetPatternVal = 23
	ST_PresetPatternValDnDiag     ST_PresetPatternVal = 24
	ST_PresetPatternValUpDiag     ST_PresetPatternVal = 25
	ST_PresetPatternValLtDnDiag   ST_PresetPatternVal = 26
	ST_PresetPatternValLtUpDiag   ST_PresetPatternVal = 27
	ST_PresetPatternValDkDnDiag   ST_PresetPatternVal = 28
	ST_PresetPatternValDkUpDiag   ST_PresetPatternVal = 29
	ST_PresetPatternValWdDnDiag   ST_PresetPatternVal = 30
	ST_PresetPatternValWdUpDiag   ST_PresetPatternVal = 31
	ST_PresetPatternValDashDnDiag ST_PresetPatternVal = 32
	ST_PresetPatternValDashUpDiag ST_PresetPatternVal = 33
	ST_PresetPatternValDiagCross  ST_PresetPatternVal = 34
	ST_PresetPatternValSmCheck    ST_PresetPatternVal = 35
	ST_PresetPatternValLgCheck    ST_PresetPatternVal = 36
	ST_PresetPatternValSmGrid     ST_PresetPatternVal = 37
	ST_PresetPatternValLgGrid     ST_PresetPatternVal = 38
	ST_PresetPatternValDotGrid    ST_PresetPatternVal = 39
	ST_PresetPatternValSmConfetti ST_PresetPatternVal = 40
	ST_PresetPatternValLgConfetti ST_PresetPatternVal = 41
	ST_PresetPatternValHorzBrick  ST_PresetPatternVal = 42
	ST_PresetPatternValDiagBrick  ST_PresetPatternVal = 43
	ST_PresetPatternValSolidDmnd  ST_PresetPatternVal = 44
	ST_PresetPatternValOpenDmnd   ST_PresetPatternVal = 45
	ST_PresetPatternValDotDmnd    ST_PresetPatternVal = 46
	ST_PresetPatternValPlaid      ST_PresetPatternVal = 47
	ST_PresetPatternValSphere     ST_PresetPatternVal = 48
	ST_PresetPatternValWeave      ST_PresetPatternVal = 49
	ST_PresetPatternValDivot      ST_PresetPatternVal = 50
	ST_PresetPatternValShingle    ST_PresetPatternVal = 51
	ST_PresetPatternValWave       ST_PresetPatternVal = 52
	ST_PresetPatternValTrellis    ST_PresetPatternVal = 53
	ST_PresetPatternValZigZag     ST_PresetPatternVal = 54
)

func NewCT_Path2DList() *CT_Path2DList { _ceefd := &CT_Path2DList{}; return _ceefd }

// Validate validates the CT_ShapeProperties and its children
func (_ccedfd *CT_ShapeProperties) Validate() error {
	return _ccedfd.ValidateWithPath("\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073")
}
func (_fcaa *CT_Point3D) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0078"}, Value: _e.Sprintf("\u0025\u0076", _fcaa.XAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u0079"}, Value: _e.Sprintf("\u0025\u0076", _fcaa.YAttr)})
	start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u007a"}, Value: _e.Sprintf("\u0025\u0076", _fcaa.ZAttr)})
	e.EncodeToken(start)
	e.EncodeToken(_d.EndElement{Name: start.Name})
	return nil
}
func (_gb *AG_Locking) MarshalXML(e *_d.Encoder, start _d.StartElement) error {
	if _gb.NoGrpAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0047r\u0070"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoGrpAttr))})
	}
	if _gb.NoSelectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0053\u0065\u006c\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoSelectAttr))})
	}
	if _gb.NoRotAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052o\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoRotAttr))})
	}
	if _gb.NoChangeAspectAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0041s\u0070\u0065\u0063\u0074"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoChangeAspectAttr))})
	}
	if _gb.NoMoveAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u004d\u006f\u0076\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoMoveAttr))})
	}
	if _gb.NoResizeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0052\u0065\u0073\u0069\u007a\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoResizeAttr))})
	}
	if _gb.NoEditPointsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0045d\u0069\u0074\u0050\u006f\u0069\u006e\u0074\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoEditPointsAttr))})
	}
	if _gb.NoAdjustHandlesAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0041d\u006a\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoAdjustHandlesAttr))})
	}
	if _gb.NoChangeArrowheadsAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006eo\u0043h\u0061\u006e\u0067\u0065\u0041r\u0072\u006fw\u0068\u0065\u0061\u0064\u0073"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoChangeArrowheadsAttr))})
	}
	if _gb.NoChangeShapeTypeAttr != nil {
		start.Attr = append(start.Attr, _d.Attr{Name: _d.Name{Local: "\u006e\u006f\u0043\u0068\u0061\u006e\u0067\u0065\u0053\u0068\u0061\u0070e\u0054\u0079\u0070\u0065"}, Value: _e.Sprintf("\u0025\u0064", _ggfdf(*_gb.NoChangeShapeTypeAttr))})
	}
	return nil
}
func init() {
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_AudioFile)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fV\u0069\u0064\u0065\u006f\u0046\u0069\u006c\u0065", NewCT_VideoFile)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0051\u0075\u0069c\u006b\u0054\u0069\u006d\u0065\u0046\u0069\u006c\u0065", NewCT_QuickTimeFile)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043D\u0054\u0069\u006d\u0065", NewCT_AudioCDTime)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0075\u0064\u0069\u006f\u0043\u0044", NewCT_AudioCD)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u0053c\u0068\u0065\u006d\u0065", NewCT_ColorScheme)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u0075\u0073\u0074\u006f\u006dC\u006f\u006c\u006f\u0072", NewCT_CustomColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053up\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0061\u006c\u0046\u006f\u006e\u0074", NewCT_SupplementalFont)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u0075\u0073\u0074\u006f\u006dC\u006f\u006co\u0072\u004c\u0069\u0073\u0074", NewCT_CustomColorList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0043\u006f\u006c\u006c\u0065c\u0074\u0069\u006f\u006e", NewCT_FontCollection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u0049\u0074\u0065\u006d", NewCT_EffectStyleItem)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u006f\u006e\u0074\u0053\u0063\u0068\u0065\u006d\u0065", NewCT_FontScheme)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u0069\u006cl\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_FillStyleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u0053\u0074\u0079\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_LineStyleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074S\u0074\u0079l\u0065\u004c\u0069\u0073\u0074", NewCT_EffectStyleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075n\u0064\u0046\u0069\u006c\u006c\u0053\u0074\u0079\u006c\u0065L\u0069\u0073\u0074", NewCT_BackgroundFillStyleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0074\u0079\u006c\u0065\u004da\u0074\u0072\u0069\u0078", NewCT_StyleMatrix)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0061\u0073\u0065\u0053\u0074\u0079\u006c\u0065\u0073", NewCT_BaseStyles)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004f\u0066fi\u0063e\u0041\u0072\u0074\u0045\u0078t\u0065\u006e\u0073\u0069\u006f\u006e", NewCT_OfficeArtExtension)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0067\u006c\u0065", NewCT_Angle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0046\u0069\u0078e\u0064\u0041\u006e\u0067\u006c\u0065", NewCT_PositiveFixedAngle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0065\u0072\u0063\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_Percentage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u006fsi\u0074i\u0076\u0065\u0050\u0065\u0072c\u0065\u006e\u0074\u0061\u0067\u0065", NewCT_PositivePercentage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fF\u0069\u0078\u0065\u0064\u0050e\u0072\u0063e\u006e\u0074\u0061\u0067\u0065", NewCT_FixedPercentage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065F\u0069\u0078\u0065\u0064\u0050\u0065\u0072\u0063\u0065\u006et\u0061\u0067\u0065", NewCT_PositiveFixedPercentage)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0061\u0074\u0069\u006f", NewCT_Ratio)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_Point2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0073\u0069\u0074\u0069\u0076\u0065\u0053i\u007a\u0065\u0032\u0044", NewCT_PositiveSize2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043om\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0054\u0072\u0061\u006e\u0073\u0066\u006fr\u006d", NewCT_ComplementTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0049nv\u0065\u0072\u0073\u0065\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0072ay\u0073c\u0061\u006c\u0065\u0054\u0072a\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_GrayscaleTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0061\u006d\u006d\u0061\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewCT_GammaTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0049\u006e\u0076\u0065\u0072\u0073\u0065\u0047\u0061\u006dm\u0061\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d", NewCT_InverseGammaTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_ScRgbColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fS\u0052\u0067\u0062\u0043\u006f\u006c\u006f\u0072", NewCT_SRgbColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0048\u0073\u006c\u0043\u006f\u006c\u006f\u0072", NewCT_HslColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0079\u0073\u0074\u0065\u006dC\u006f\u006c\u006f\u0072", NewCT_SystemColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0068\u0065\u006d\u0065C\u006f\u006c\u006f\u0072", NewCT_SchemeColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0072\u0065\u0073\u0065\u0074C\u006f\u006c\u006f\u0072", NewCT_PresetColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewCT_OfficeArtExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0061\u006c\u0065\u0032\u0044", NewCT_Scale2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006d\u0032\u0044", NewCT_Transform2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0054\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u0032\u0044", NewCT_GroupTransform2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u006f\u0069\u006e\u0074\u0033\u0044", NewCT_Point3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0056\u0065\u0063\u0074\u006f\u0072\u0033\u0044", NewCT_Vector3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0070\u0068\u0065\u0072\u0065\u0043\u006f\u006f\u0072\u0064\u0073", NewCT_SphereCoords)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fR\u0065\u006c\u0061\u0074\u0069\u0076\u0065\u0052\u0065\u0063\u0074", NewCT_RelativeRect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006c\u006f\u0072", NewCT_Color)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006f\u006c\u006f\u0072\u004d\u0052\u0055", NewCT_ColorMRU)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fEm\u0062\u0065\u0064\u0064\u0065\u0064\u0057\u0041\u0056\u0041\u0075\u0064\u0069\u006f\u0046\u0069\u006c\u0065", NewCT_EmbeddedWAVAudioFile)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0079\u0070\u0065\u0072\u006c\u0069\u006e\u006b", NewCT_Hyperlink)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043on\u006e\u0065\u0063\u0074\u006f\u0072\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ConnectorLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ShapeLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004c\u006fc\u006b\u0069\u006e\u0067", NewCT_PictureLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u006f\u0075\u0070\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GroupLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0072\u0061\u0070\u0068\u0069\u0063a\u006c\u004f\u0062\u006a\u0065\u0063\u0074F\u0072\u0061\u006d\u0065\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_GraphicalObjectFrameLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnt\u0065n\u0074\u0050\u0061\u0072\u0074L\u006f\u0063\u006b\u0069\u006e\u0067", NewCT_ContentPartLocking)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044r\u0061\u0077\u0069\u006e\u0067\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualDrawingProps)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0044\u0072\u0061\u0077\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050ro\u0070\u0073", NewCT_NonVisualDrawingShapeProps)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fN\u006f\u006e\u0056\u0069s\u0075\u0061\u006c\u0043\u006f\u006e\u006ee\u0063\u0074\u006f\u0072\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualConnectorProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u0050\u0072\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_NonVisualPictureProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072o\u0075p\u0044r\u0061w\u0069\u006e\u0067\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0073", NewCT_NonVisualGroupDrawingShapeProps)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fNo\u006e\u0056\u0069\u0073\u0075\u0061\u006c\u0047\u0072a\u0070h\u0069c\u0046r\u0061\u006d\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NonVisualGraphicFrameProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004e\u006f\u006eV\u0069\u0073\u0075\u0061\u006c\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0050a\u0072\u0074\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_NonVisualContentPartProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0061t\u0061", NewCT_GraphicalObjectData)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0070\u0068\u0069c\u0061\u006cO\u0062\u006a\u0065\u0063\u0074", NewCT_GraphicalObject)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041ni\u006d\u0061\u0074\u0069\u006f\u006e\u0044\u0067\u006d\u0045\u006c\u0065\u006d\u0065n\u0074", NewCT_AnimationDgmElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043h\u0061\u0072\u0074\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_AnimationChartElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0041\u006e\u0069m\u0061\u0074\u0069\u006f\u006eE\u006ce\u006de\u006e\u0074\u0043\u0068\u006f\u0069\u0063e", NewCT_AnimationElementChoice)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069o\u006e\u0044\u0067\u006d\u0042\u0075\u0069l\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationDgmBuildProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0043\u0068\u0061r\u0074B\u0075\u0069\u006c\u0064\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationChartBuildProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fA\u006e\u0069\u006d\u0061\u0074\u0069\u006f\u006e\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004f\u0062\u006a\u0065\u0063\u0074\u0042\u0075\u0069\u006c\u0064\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_AnimationGraphicalObjectBuildProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fBa\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0046\u006f\u0072\u006d\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_BackgroundFormatting)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0057\u0068ol\u0065E\u0032\u006f\u0046\u006f\u0072m\u0061\u0074\u0074\u0069\u006e\u0067", NewCT_WholeE2oFormatting)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006d\u006c\u0055\u0073\u0065\u0053\u0068\u0061p\u0065\u0052\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065", NewCT_GvmlUseShapeRectangle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0054\u0065\u0078\u0074\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlTextShape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076ml\u0053h\u0061\u0070\u0065\u004e\u006fn\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlShapeNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0076\u006d\u006c\u0053\u0068\u0061\u0070\u0065", NewCT_GvmlShape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065c\u0074o\u0072N\u006f\u006e\u0056\u0069\u0073\u0075\u0061l", NewCT_GvmlConnectorNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0076\u006dl\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u006f\u0072", NewCT_GvmlConnector)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGv\u006d\u006c\u0050\u0069\u0063\u0074\u0075\u0072\u0065\u004e\u006f\u006e\u0056\u0069\u0073\u0075\u0061\u006c", NewCT_GvmlPictureNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0050\u0069c\u0074\u0075\u0072\u0065", NewCT_GvmlPicture)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047v\u006d\u006c\u0047\u0072\u0061\u0070\u0068\u0069\u0063\u0046r\u0061m\u0065\u004e\u006f\u006e\u0056\u0069\u0073u\u0061\u006c", NewCT_GvmlGraphicFrameNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0076\u006d\u006cG\u0072\u0061\u0070\u0068\u0069\u0063\u0061\u006c\u004fb\u006a\u0065\u0063t\u0046r\u0061\u006d\u0065", NewCT_GvmlGraphicalObjectFrame)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075p\u0053\u0068\u0061\u0070\u0065\u004e\u006f\u006e\u0056\u0069s\u0075\u0061\u006c", NewCT_GvmlGroupShapeNonVisual)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u0076\u006d\u006c\u0047\u0072\u006f\u0075\u0070S\u0068\u0061\u0070\u0065", NewCT_GvmlGroupShape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0061\u006d\u0065\u0072a", NewCT_Camera)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u004c\u0069\u0067\u0068\u0074\u0052\u0069\u0067", NewCT_LightRig)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0063\u0065\u006e\u0065\u0033\u0044", NewCT_Scene3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061\u0063\u006b\u0064\u0072\u006f\u0070", NewCT_Backdrop)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u0065\u0076\u0065\u006c", NewCT_Bevel)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0033\u0044", NewCT_Shape3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0046\u006c\u0061\u0074\u0054\u0065\u0078\u0074", NewCT_FlatText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061B\u0069\u004c\u0065\u0076\u0065l\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaBiLevelEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061C\u0065\u0069\u006c\u0069\u006eg\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaCeilingEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u0046\u006c\u006f\u006f\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaFloorEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061I\u006e\u0076\u0065\u0072\u0073e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaInverseEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006c\u0070\u0068a\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0046i\u0078\u0065\u0064E\u0066f\u0065\u0063\u0074", NewCT_AlphaModulateFixedEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0041\u006c\u0070\u0068\u0061\u004f\u0075\u0074s\u0065\u0074\u0045\u0066fe\u0063\u0074", NewCT_AlphaOutsetEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0041\u006cph\u0061R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_AlphaReplaceEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0042\u0069\u004ce\u0076\u0065\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BiLevelEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0075\u0072\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_BlurEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0043\u006f\u006c\u006f\u0072\u0043\u0068\u0061n\u0067\u0065\u0045\u0066fe\u0063\u0074", NewCT_ColorChangeEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006flo\u0072R\u0065\u0070\u006c\u0061\u0063e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ColorReplaceEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0044\u0075\u006ft\u006f\u006e\u0065\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_DuotoneEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047\u006c\u006f\u0077\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_GlowEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0079\u0073\u0063a\u006c\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_GrayscaleEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fH\u0053\u004c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_HSLEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0049\u006e\u006e\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_InnerShadowEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fL\u0075\u006d\u0069\u006e\u0061n\u0063\u0065E\u0066\u0066\u0065\u0063\u0074", NewCT_LuminanceEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004f\u0075\u0074\u0065\u0072\u0053\u0068\u0061d\u006f\u0077\u0045\u0066fe\u0063\u0074", NewCT_OuterShadowEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072es\u0065t\u0053\u0068\u0061\u0064\u006fw\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_PresetShadowEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052ef\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_ReflectionEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fRe\u006c\u0061\u0074\u0069\u0076\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_RelativeOffsetEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u006f\u0066\u0074\u0045\u0064g\u0065\u0073E\u0066\u0066\u0065\u0063\u0074", NewCT_SoftEdgesEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0069\u006e\u0074\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_TintEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0072\u0061\u006e\u0073\u0066o\u0072\u006dE\u0066\u0066\u0065\u0063\u0074", NewCT_TransformEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004eoF\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_NoFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0053\u006f\u006c\u0069d\u0043\u006f\u006c\u006f\u0072\u0046\u0069\u006c\u006cP\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_SolidColorFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u004c\u0069\u006e\u0065\u0061\u0072\u0053\u0068\u0061\u0064e\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_LinearShadeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0053\u0068\u0061\u0064\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_PathShadeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fG\u0072\u0061\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070", NewCT_GradientStop)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ra\u0064\u0069\u0065\u006e\u0074\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_GradientStopList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0047\u0072\u0061d\u0069\u0065\u006e\u0074\u0046i\u006cl\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065s", NewCT_GradientFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0069le\u0049n\u0066\u006f\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TileInfoProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0053\u0074\u0072\u0065\u0074\u0063\u0068\u0049\u006e\u0066o\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_StretchInfoProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0042\u006c\u0069\u0070", NewCT_Blip)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u006cip\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_BlipFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0046\u0069\u006cl\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_PatternFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0047ro\u0075\u0070\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_GroupFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_FillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0046\u0069\u006c\u006c\u0045\u0066\u0066\u0065\u0063\u0074", NewCT_FillEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0046\u0069\u006c\u006c\u004f\u0076\u0065\u0072l\u0061\u0079\u0045\u0066fe\u0063\u0074", NewCT_FillOverlayEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065", NewCT_EffectReference)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u0066\u0066\u0065\u0063\u0074C\u006f\u006et\u0061\u0069\u006e\u0065\u0072", NewCT_EffectContainer)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041lp\u0068\u0061\u004d\u006f\u0064\u0075\u006c\u0061\u0074\u0065\u0045\u0066\u0066\u0065c\u0074", NewCT_AlphaModulateEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006c\u0065\u006e\u0064\u0045f\u0066\u0065\u0063\u0074", NewCT_BlendEffect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045\u0066\u0066\u0065\u0063\u0074\u004c\u0069\u0073\u0074", NewCT_EffectList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_EffectProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fG\u0065\u006f\u006d\u0047\u0075\u0069\u0064\u0065", NewCT_GeomGuide)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0047\u0065\u006fm\u0047\u0075\u0069\u0064\u0065\u004c\u0069\u0073\u0074", NewCT_GeomGuideList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041\u0064\u006a\u0050\u006f\u0069\u006e\u0074\u0032\u0044", NewCT_AdjPoint2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0047\u0065\u006f\u006d\u0052\u0065\u0063\u0074", NewCT_GeomRect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0058\u0059\u0041\u0064\u006a\u0075\u0073\u0074\u0048a\u006e\u0064\u006c\u0065", NewCT_XYAdjustHandle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0050\u006f\u006c\u0061\u0072\u0041\u0064\u006au\u0073\u0074\u0048\u0061nd\u006c\u0065", NewCT_PolarAdjustHandle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006fn\u0053\u0069\u0074\u0065", NewCT_ConnectionSite)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0041dj\u0075\u0073\u0074\u0048\u0061\u006e\u0064\u006c\u0065\u004c\u0069\u0073\u0074", NewCT_AdjustHandleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0043\u006fnn\u0065c\u0074\u0069\u006f\u006e\u0053i\u0074\u0065\u004c\u0069\u0073\u0074", NewCT_ConnectionSiteList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043\u006f\u006e\u006e\u0065\u0063\u0074\u0069\u006f\u006e", NewCT_Connection)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004d\u006f\u0076\u0065\u0054\u006f", NewCT_Path2DMoveTo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u006e\u0065\u0054\u006f", NewCT_Path2DLineTo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044A\u0072\u0063\u0054\u006f", NewCT_Path2DArcTo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0061th\u0032D\u0051\u0075\u0061\u0064\u0042e\u007a\u0069\u0065\u0072\u0054\u006f", NewCT_Path2DQuadBezierTo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050at\u0068\u0032\u0044\u0043\u0075\u0062\u0069\u0063\u0042\u0065\u007a\u0069\u0065\u0072T\u006f", NewCT_Path2DCubicBezierTo)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044C\u006c\u006f\u0073\u0065", NewCT_Path2DClose)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0050\u0061\u0074\u0068\u0032D", NewCT_Path2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050\u0061\u0074\u0068\u0032\u0044\u004c\u0069\u0073\u0074", NewCT_Path2DList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0050re\u0073\u0065\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_PresetGeometry2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fP\u0072\u0065\u0073\u0065\u0074T\u0065\u0078t\u0053\u0068\u0061\u0070\u0065", NewCT_PresetTextShape)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043us\u0074\u006f\u006d\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079\u0032\u0044", NewCT_CustomGeometry2D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u004c\u0069\u006e\u0065\u0045\u006e\u0064\u0050r\u006f\u0070\u0065\u0072ti\u0065\u0073", NewCT_LineEndProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0042\u0065\u0076\u0065\u006c", NewCT_LineJoinBevel)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u004c\u0069\u006ee\u004a\u006f\u0069\u006e\u0052\u006f\u0075\u006e\u0064", NewCT_LineJoinRound)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u004a\u006f\u0069\u006eM\u0069\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_LineJoinMiterProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0050\u0072\u0065\u0073e\u0074\u004c\u0069\u006e\u0065\u0044\u0061\u0073\u0068P\u0072\u006f\u0070e\u0072t\u0069\u0065\u0073", NewCT_PresetLineDashProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0044\u0061\u0073\u0068\u0053\u0074\u006f\u0070", NewCT_DashStop)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fD\u0061\u0073\u0068\u0053\u0074\u006f\u0070\u004c\u0069\u0073\u0074", NewCT_DashStopList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004c\u0069\u006e\u0065\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewCT_LineProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fS\u0068\u0061\u0070\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_ShapeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fGr\u006f\u0075\u0070\u0053\u0068\u0061\u0070\u0065\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_GroupShapeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fSt\u0079\u006c\u0065\u004d\u0061\u0074\u0072\u0069\u0078\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_StyleMatrixReference)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0046\u006f\u006et\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065", NewCT_FontReference)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0053\u0068\u0061\u0070\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ShapeStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0044\u0065\u0066a\u0075\u006c\u0074\u0053\u0068a\u0070e\u0044e\u0066\u0069\u006e\u0069\u0074\u0069\u006fn", NewCT_DefaultShapeDefinition)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fbj\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065\u0044\u0065\u0066\u0061\u0075\u006ct\u0073", NewCT_ObjectStyleDefaults)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fE\u006d\u0070\u0074\u0079\u0045\u006c\u0065\u006d\u0065\u006e\u0074", NewCT_EmptyElement)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorMapping)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fCo\u006c\u006f\u0072\u004d\u0061\u0070\u0070\u0069\u006e\u0067\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_ColorMappingOverride)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u006f\u006c\u006f\u0072\u0053\u0063\u0068\u0065\u006de\u0041\u006e\u0064\u004d\u0061\u0070\u0070\u0069\u006e\u0067", NewCT_ColorSchemeAndMapping)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fC\u006f\u006c\u006f\u0072\u0053c\u0068\u0065m\u0065\u004c\u0069\u0073\u0074", NewCT_ColorSchemeList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u004fff\u0069\u0063\u0065\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065\u0065\u0074", NewCT_OfficeStyleSheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0042\u0061se\u0053t\u0079\u006c\u0065\u0073\u004fv\u0065\u0072\u0072\u0069\u0064\u0065", NewCT_BaseStylesOverride)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0043li\u0070\u0062\u006f\u0061\u0072\u0064\u0053\u0074\u0079\u006c\u0065\u0053\u0068\u0065e\u0074", NewCT_ClipboardStyleSheet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0043\u0065\u006c\u006c\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069e\u0073", NewCT_TableCellProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0048\u0065\u0061\u0064\u0065\u0072\u0073", NewCT_Headers)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0043\u006f\u006c", NewCT_TableCol)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0047\u0072\u0069\u0064", NewCT_TableGrid)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0061\u0062\u006c\u0065\u0043\u0065\u006c\u006c", NewCT_TableCell)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0052\u006f\u0077", NewCT_TableRow)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0061\u0062\u006c\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewCT_TableProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065", NewCT_Table)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0043\u0065\u006c\u006c\u0033D", NewCT_Cell3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u004c\u0069n\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_ThemeableLineStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0054\u0065\u0078\u0074\u0053\u0074\u0079l\u0065", NewCT_TableStyleTextStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0043\u0065\u006c\u006c\u0042\u006f\u0072\u0064\u0065\u0072\u0053\u0074\u0079\u006c\u0065", NewCT_TableCellBorderStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTa\u0062\u006c\u0065\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064\u0053\u0074\u0079\u006c\u0065", NewCT_TableBackgroundStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ab\u006c\u0065\u0053\u0074\u0079\u006c\u0065\u0043\u0065\u006c\u006c\u0053\u0074\u0079l\u0065", NewCT_TableStyleCellStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0050\u0061\u0072\u0074S\u0074\u0079\u006c\u0065", NewCT_TablePartStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006c\u0065", NewCT_TableStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0061\u0062\u006c\u0065\u0053\u0074\u0079\u006ce\u004c\u0069\u0073\u0074", NewCT_TableStyleList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u0050\u0061\u0072\u0061\u0067\u0072\u0061\u0070\u0068", NewCT_TextParagraph)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u0073\u0074\u0053\u0074\u0079\u006c\u0065", NewCT_TextListStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054_\u0054\u0065\u0078\u0074\u004e\u006f\u0072\u006da\u006c\u0041\u0075\u0074of\u0069\u0074", NewCT_TextNormalAutofit)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0068\u0061\u0070\u0065\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextShapeAutofit)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004e\u006f\u0041\u0075\u0074\u006f\u0066\u0069\u0074", NewCT_TextNoAutofit)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0042o\u0064\u0079\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewCT_TextBodyProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006f\u0064\u0079", NewCT_TextBody)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054e\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0043\u006fl\u006fr\u0046\u006f\u006c\u006c\u006f\u0077\u0054e\u0078\u0074", NewCT_TextBulletColorFollowText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074B\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065F\u006f\u006c\u006co\u0077T\u0065\u0078\u0074", NewCT_TextBulletSizeFollowText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074S\u0069\u007a\u0065\u0050\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextBulletSizePercent)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0042\u0075\u006c\u006c\u0065\u0074\u0053\u0069\u007a\u0065\u0050\u006f\u0069n\u0074", NewCT_TextBulletSizePoint)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0042u\u006c\u006c\u0065\u0074\u0054\u0079\u0070e\u0066\u0061\u0063\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextBulletTypefaceFollowText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fTe\u0078\u0074\u0041\u0075\u0074\u006f\u006e\u0075\u006d\u0062\u0065\u0072\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextAutonumberBullet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072\u0042u\u006c\u006c\u0065\u0074", NewCT_TextCharBullet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0042\u006c\u0069\u0070\u0042u\u006c\u006c\u0065\u0074", NewCT_TextBlipBullet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u004e\u006f\u0042\u0075\u006c\u006c\u0065\u0074", NewCT_TextNoBullet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065\u0078\u0074\u0046\u006f\u006e\u0074", NewCT_TextFont)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u004c\u0069n\u0065\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineLineFollowText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064e\u0072\u006c\u0069\u006e\u0065\u0046\u0069l\u006c\u0046\u006f\u006c\u006c\u006f\u0077\u0054\u0065\u0078\u0074", NewCT_TextUnderlineFillFollowText)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065\u0072\u006c\u0069\u006ee\u0046i\u006c\u006c\u0047\u0072\u006f\u0075\u0070\u0057\u0072\u0061\u0070\u0070\u0065\u0072", NewCT_TextUnderlineFillGroupWrapper)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0043\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextCharacterProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0042\u006f\u006f\u006c\u0065\u0061\u006e", NewCT_Boolean)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "C\u0054\u005f\u0054\u0065xt\u0053p\u0061\u0063\u0069\u006e\u0067P\u0065\u0072\u0063\u0065\u006e\u0074", NewCT_TextSpacingPercent)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054ex\u0074\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u0050\u006f\u0069\u006e\u0074", NewCT_TextSpacingPoint)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0054\u0061b\u0053\u0074\u006f\u0070", NewCT_TextTabStop)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043T\u005fT\u0065\u0078\u0074\u0054\u0061b\u0053\u0074o\u0070\u004c\u0069\u0073\u0074", NewCT_TextTabStopList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054_\u0054\u0065\u0078t\u004c\u0069\u006e\u0065\u0042\u0072\u0065\u0061\u006b", NewCT_TextLineBreak)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0053\u0070a\u0063\u0069\u006e\u0067", NewCT_TextSpacing)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0054\u0065\u0078\u0074\u0050\u0061\u0072\u0061g\u0072\u0061\u0070\u0068\u0050\u0072\u006f\u0070\u0065\u0072t\u0069\u0065\u0073", NewCT_TextParagraphProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005fT\u0065\u0078\u0074\u0046\u0069\u0065\u006c\u0064", NewCT_TextField)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0043\u0054\u005f\u0052\u0065\u0067\u0075\u006c\u0061\u0072\u0054\u0065x\u0074\u0052\u0075\u006e", NewCT_RegularTextRun)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0076i\u0064\u0065\u006f\u0046\u0069\u006ce", NewVideoFile)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0067r\u0061\u0070\u0068\u0069\u0063", NewGraphic)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0062\u006c\u0069\u0070", NewBlip)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065", NewTheme)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065\u006d\u0065\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065", NewThemeOverride)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0068\u0065m\u0065\u004d\u0061\u006e\u0061\u0067\u0065\u0072", NewThemeManager)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0074\u0062\u006c", NewTbl)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "t\u0062\u006c\u0053\u0074\u0079\u006c\u0065\u004c\u0073\u0074", NewTblStyleLst)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u004d\u0065\u0064\u0069\u0061", NewEG_Media)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0054\u0072\u0061\u006es\u0066\u006f\u0072\u006d", NewEG_ColorTransform)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u004f\u0066\u0066i\u0063\u0065\u0041\u0072\u0074E\u0078t\u0065n\u0073\u0069\u006f\u006e\u004c\u0069\u0073t", NewEG_OfficeArtExtensionList)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0043\u006f\u006c\u006f\u0072\u0043h\u006f\u0069\u0063\u0065", NewEG_ColorChoice)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0054\u0065\u0078\u0074\u0033D", NewEG_Text3D)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fS\u0068\u0061\u0064\u0065\u0050r\u006f\u0070e\u0072\u0074\u0069\u0065\u0073", NewEG_ShadeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0046\u0069ll\u004do\u0064\u0065\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_FillModeProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0046\u0069\u006c\u006c\u0050\u0072\u006f\u0070\u0065r\u0074\u0069\u0065\u0073", NewEG_FillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005f\u0045\u0066\u0066\u0065\u0063t", NewEG_Effect)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0045ff\u0065\u0063\u0074\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_EffectProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_Geometry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079", NewEG_TextGeometry)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0046i\u006c\u006c\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineFillProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u004ao\u0069\u006e\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineJoinProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u004c\u0069ne\u0044a\u0073\u0068\u0050\u0072\u006fp\u0065\u0072\u0074\u0069\u0065\u0073", NewEG_LineDashProperties)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0068em\u0065a\u0062\u006c\u0065\u0046\u0069l\u006c\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableFillStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005fTh\u0065\u006d\u0065\u0061\u0062\u006c\u0065\u0045\u0066\u0066\u0065\u0063\u0074\u0053\u0074\u0079\u006c\u0065", NewEG_ThemeableEffectStyle)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054he\u006d\u0065\u0061\u0062\u006c\u0065\u0046\u006f\u006e\u0074\u0053\u0074\u0079\u006ce\u0073", NewEG_ThemeableFontStyles)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0041\u0075t\u006f\u0066\u0069\u0074", NewEG_TextAutofit)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045G\u005fT\u0065\u0078\u0074\u0042\u0075l\u006c\u0065t\u0043\u006f\u006c\u006f\u0072", NewEG_TextBulletColor)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065t\u0053\u0069\u007a\u0065", NewEG_TextBulletSize)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047\u005f\u0054\u0065xt\u0042u\u006c\u006c\u0065\u0074\u0054y\u0070\u0065\u0066\u0061\u0063\u0065", NewEG_TextBulletTypeface)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0042\u0075\u006c\u006c\u0065\u0074", NewEG_TextBullet)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Li\u006e\u0065", NewEG_TextUnderlineLine)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "E\u0047_\u0054\u0065\u0078\u0074\u0055\u006e\u0064\u0065r\u006c\u0069\u006e\u0065Fi\u006c\u006c", NewEG_TextUnderlineFill)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0045\u0047\u005f\u0054\u0065\u0078\u0074\u0052\u0075\u006e", NewEG_TextRun)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041G\u005f\u0042\u006c\u006f\u0062", NewAG_Blob)
	_ff.RegisterConstructor("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0073\u0063\u0068\u0065m\u0061\u0073\u002e\u006f\u0070\u0065\u006e\u0078m\u006cf\u006f\u0072\u006d\u0061\u0074\u0073\u002e\u006f\u0072\u0067\u002f\u0064\u0072\u0061\u0077\u0069\u006e\u0067m\u006c\u002f\u0032\u0030\u0030\u0036\u002f\u006d\u0061\u0069\u006e", "\u0041\u0047\u005f\u004c\u006f\u0063\u006b\u0069\u006e\u0067", NewAG_Locking)
}
